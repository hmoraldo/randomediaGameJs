// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      return FUNCTION_TABLE[ptr].apply(null, args);
    } else {
      assert(sig.length == 1);
      return FUNCTION_TABLE[ptr]();
    }
  },
  addFunction: function (func) {
    var table = FUNCTION_TABLE;
    var ret = table.length;
    assert(ret % 2 === 0);
    table.push(func);
    for (var i = 0; i < 2-1; i++) table.push(0);
    return ret;
  },
  removeFunction: function (index) {
    var table = FUNCTION_TABLE;
    table[index] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((low>>>0)+((high>>>0)*4294967296)) : ((low>>>0)+((high|0)*4294967296))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.
var setjmpId = 1; // Used in setjmp/longjmp
var setjmpLabels = {};

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,Math_abs(tempDouble) >= 1 ? (tempDouble > 0 ? Math_min(Math_floor((tempDouble)/4294967296), 4294967295)>>>0 : (~~(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296)))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;


// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
    Module.printErr('Exiting runtime. Any attempt to access the compiled C code may fail from now. If you want to keep the runtime alive, set Module["noExitRuntime"] = true or build with -s NO_EXIT_RUNTIME=1');
  }
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 20744;









var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);









































/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a207() } },{ func: function() { __GLOBAL__I_a367() } });









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);


var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,8,71,0,0,20,0,0,0,84,0,0,0,166,1,0,0,94,0,0,0,56,0,0,0,222,0,0,0,138,0,0,0,210,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,24,71,0,0,20,0,0,0,122,1,0,0,166,1,0,0,94,0,0,0,56,0,0,0,10,0,0,0,200,0,0,0,196,1,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;































































































































































































































var __ZN20graphicResourceClassC1EPcS0_bbbS0_bbbiiiiiii;
/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,168,17,0,0,255,255,255,255,128,20,0,0,0,0,0,0,0,0,0,0,2,0,0,0,104,17,0,0,255,255,255,255,104,20,0,0,0,0,0,0,0,0,0,0,3,0,0,0,40,17,0,0,255,255,255,255,64,20,0,0,0,0,0,0,0,0,0,0,4,0,0,0,16,17,0,0,255,255,255,255,24,20,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,115,101,114,100,97,116,97,0,0,0,0,0,0,0,0,184,62,0,0,116,1,0,0,200,61,0,0,118,0,0,0,224,47,0,0,30,0,0,0,248,35,0,0,160,0,0,0,208,28,0,0,232,0,0,0,48,23,0,0,66,1,0,0,0,0,0,0,0,0,0,0,248,39,0,0,44,1,0,0,72,31,0,0,64,0,0,0,56,24,0,0,128,0,0,0,144,20,0,0,72,0,0,0,224,17,0,0,186,0,0,0,224,14,0,0,156,0,0,0,32,12,0,0,188,0,0,0,0,10,0,0,104,1,0,0,176,62,0,0,32,1,0,0,40,60,0,0,86,0,0,0,64,58,0,0,166,0,0,0,104,56,0,0,224,0,0,0,240,54,0,0,94,1,0,0,240,53,0,0,120,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,67,82,101,100,105,97,32,45,32,86,101,114,46,32,49,46,48,49,32,45,32,77,97,114,32,51,49,32,50,48,49,52,32,45,32,50,48,58,53,53,58,48,55,0,0,0,0,0,1,0,0,0,0,0,0,0,6,6,6,6,7,7,7,7,7,7,10,9,5,4,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,20,0,0,255,255,255,255,112,23,0,0,0,0,0,0,0,0,0,0,200,0,0,0,0,0,0,0,200,38,0,0,34,0,0,0,152,30,0,0,60,1,0,0,224,23,0,0,164,0,0,0,120,20,0,0,204,0,0,0,192,17,0,0,18,0,0,0,168,14,0,0,176,1,0,0,176,11,0,0,236,0,0,0,224,9,0,0,246,0,0,0,120,62,0,0,76,0,0,0,216,59,0,0,116,0,0,0,248,57,0,0,152,1,0,0,0,56,0,0,110,1,0,0,208,54,0,0,234,0,0,0,224,53,0,0,68,1,0,0,192,52,0,0,84,1,0,0,152,51,0,0,42,1,0,0,144,50,0,0,34,1,0,0,120,49,0,0,150,0,0,0,104,48,0,0,206,0,0,0,144,46,0,0,90,0,0,0,72,45,0,0,190,0,0,0,232,42,0,0,8,0,0,0,128,41,0,0,32,0,0,0,128,40,0,0,126,1,0,0,200,39,0,0,174,1,0,0,232,38,0,0,248,0,0,0,8,38,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,22,22,22,22,22,22,22,22,22,22,4,4,4,4,4,4,4,21,21,21,21,21,21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,5,4,21,21,21,21,21,21,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,127,64,33,0,0,0,0,0,56,195,0,47,0,0,144,45,0,0,192,43,0,0,232,41,0,0,192,40,0,0,240,39,0,0,8,39,0,0,96,38,0,0,120,37,0,0,136,36,0,0,120,35,0,0,80,34,0,0,240,32,0,0,88,32,0,0,168,31,0,0,64,31,0,0,224,30,0,0,112,30,0,0,0,30,0,0,136,29,0,0,80,28,0,0,224,26,0,0,240,25,0,0,8,25,0,0,144,24,0,0,48,24,0,0,8,24,0,0,216,23,0,0,160,23,0,0,104,23,0,0,144,22,0,0,192,21,0,0,96,21,0,0,0,0,0,0,160,58,0,0,240,60,0,0,96,47,0,0,152,0,0,0,184,35,0,0,136,28,0,0,216,22,0,0,144,19,0,0,152,0,0,0,168,16,0,0,112,13,0,0,232,10,0,0,200,63,0,0,80,61,0,0,80,59,0,0,104,57,0,0,176,55,0,0,128,54,0,0,104,53,0,0,56,52,0,0,48,51,0,0,16,50,0,0,0,49,0,0,128,47,0,0,48,46,0,0,216,44,0,0,160,42,0,0,64,41,0,0,56,40,0,0,0,0,0,0,96,113,65,84,80,80,92,108,60,16,60,84,108,124,124,124,124,124,124,96,96,96,104,34,188,188,188,132,228,84,84,16,98,98,4,98,20,81,80,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,33,0,0,0,0,0,56,195,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,136,25,0,0,208,24,0,0,112,24,0,0,16,24,0,0,232,23,0,0,184,23,0,0,136,23,0,0,88,23,0,0,128,22,0,0,176,21,0,0,64,21,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,112,23,0,0,255,255,255,255,0,0,0,0,72,23,0,0,255,255,255,255,0,0,0,0,112,22,0,0,255,255,255,255,0,0,0,0,160,21,0,0,255,255,255,255,0,0,0,0,40,21,0,0,255,255,255,255,0,0,0,0,208,20,0,0,255,255,255,255,0,0,0,0,152,20,0,0,255,255,255,255,0,0,0,0,128,20,0,0,255,255,255,255,0,0,0,0,104,20,0,0,255,255,255,255,0,0,0,0,64,20,0,0,255,255,255,255,0,0,0,0,24,20,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,88,19,0,0,255,255,255,255,72,23,0,0,0,0,0,0,0,0,0,0,4,0,0,0,176,18,0,0,255,255,255,255,112,22,0,0,0,0,0,0,0,0,0,0,5,0,0,0,72,18,0,0,255,255,255,255,160,21,0,0,0,0,0,0,0,0,0,0,6,0,0,0,8,18,0,0,255,255,255,255,40,21,0,0,0,0,0,0,0,0,0,0,7,0,0,0,232,17,0,0,255,255,255,255,208,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,200,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,200,17,0,0,255,255,255,255,152,20,0,0,0,0,0,0,2,0,0,0,32,30,0,0,96,0,0,0,168,23,0,0,172,1,0,0,80,20,0,0,48,1,0,0,128,17,0,0,58,0,0,0,104,14,0,0,62,1,0,0,160,11,0,0,120,1,0,0,184,9,0,0,78,1,0,0,96,62,0,0,66,0,0,0,208,59,0,0,110,0,0,0,200,57,0,0,2,0,0,0,224,55,0,0,242,0,0,0,168,54,0,0,80,1,0,0,184,53,0,0,58,1,0,0,152,52,0,0,20,1,0,0,120,51,0,0,96,1,0,0,104,50,0,0,146,1,0,0,88,49,0,0,134,1,0,0,56,48,0,0,112,1,0,0,104,46,0,0,180,0,0,0,24,45,0,0,102,0,0,0,224,42,0,0,6,0,0,0,120,41,0,0,196,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,0,0,56,195,33,0,0,0,0,0,56,195,108,111,97,100,102,105,108,101,0,0,0,0,0,0,0,0,118,101,114,115,105,111,110,32,109,105,115,109,97,116,99,104,32,105,110,0,0,0,0,0,99,111,115,0,0,0,0,0,115,114,102,69,100,105,97,70,111,110,116,0,0,0,0,0,110,0,0,0,0,0,0,0,108,101,110,0,0,0,0,0,43,45,0,0,0,0,0,0,115,104,101,101,112,67,97,114,114,105,101,114,67,97,114,114,121,105,110,103,83,104,101,101,112,0,0,0,0,0,0,0,115,101,116,83,111,117,110,100,69,110,97,98,108,101,100,0,109,97,120,88,70,97,108,108,101,110,66,83,104,101,101,112,115,0,0,0,0,0,0,0,121,0,0,0,0,0,0,0,99,112,112,95,115,119,105,116,99,104,84,111,77,101,110,117,0,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,115,101,116,32,117,112,32,102,105,114,115,116,32,112,114,111,103,114,97,109,32,122,111,110,101,46,46,46,0,0,40,80,82,69,83,73,79,78,69,32,69,83,80,65,67,73,79,32,80,65,82,65,32,79,77,73,84,73,82,32,76,65,32,73,78,84,82,79,41,0,76,111,103,103,105,110,103,32,105,110,32,100,101,118,101,108,111,112,101,114,32,109,111,100,101,46,0,0,0,0,0,0,117,112,118,97,108,0,0,0,103,108,111,98,97,108,0,0,116,111,111,32,109,97,110,121,32,114,101,115,117,108,116,115,32,116,111,32,117,110,112,97,99,107,0,0,0,0,0,0,115,101,108,102,0,0,0,0,69,114,114,111,114,32,103,101,116,116,105,110,103,32,114,101,115,111,117,114,99,101,32,37,115,32,102,114,111,109,32,116,104,101,32,114,101,115,111,117,114,99,101,115,32,108,105,115,116,0,0,0,0,0,0,0,37,115,37,115,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,114,105,103,104,116,32,119,97,108,108,32,97,116,32,40,37,105,44,32,37,105,41,0,0,0,0,0,0,0,95,71,0,0,0,0,0,0,98,108,97,99,107,0,0,0,105,112,97,105,114,115,0,0,110,111,116,32,97,0,0,0,99,111,115,104,0,0,0,0,119,104,105,116,101,0,0,0,27,76,117,97,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,100,97,104,102,111,110,116,46,112,110,103,0,0,0,0,0,0,0,69,114,114,111,114,32,103,101,116,116,105,110,103,32,102,114,97,109,101,32,110,97,109,101,100,58,32,37,115,0,0,0,98,97,100,32,97,114,103,117,109,101,110,116,32,35,37,100,32,40,37,115,41,0,0,0,103,115,117,98,0,0,0,0,98,83,104,101,101,112,83,99,111,114,101,87,105,116,104,72,101,97,100,0,0,0,0,0,116,97,98,108,101,32,105,110,100,101,120,32,105,115,32,110,105,108,0,0,0,0,0,0,80,112,0,0,0,0,0,0,98,83,104,101,101,112,83,99,111,114,101,0,0,0,0,0,115,104,101,101,112,115,79,117,116,71,101,110,89,0,0,0,119,83,104,101,101,112,83,99,111,114,101,87,105,116,104,72,101,97,100,0,0,0,0,0,117,112,100,97,116,101,72,105,103,104,83,99,111,114,101,115,76,105,115,116,0,0,0,0,120,0,0,0,0,0,0,0,109,105,110,88,70,97,108,108,101,110,66,83,104,101,101,112,115,0,0,0,0,0,0,0,106,97,118,97,116,97,114,83,104,111,111,116,0,0,0,0,119,83,104,101,101,112,83,99,111,114,101,0,0,0,0,0,101,114,114,111,114,77,97,110,97,103,101,114,0,0,0,0,73,110,105,116,105,97,108,105,122,101,32,102,105,114,115,116,32,111,107,0,0,0,0,0,40,80,82,69,83,83,32,83,80,65,67,69,32,84,79,32,83,75,73,80,41,0,0,0,104,101,97,100,83,99,111,114,101,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,34,93,0,0,0,0,0,0,101,114,114,111,114,32,105,110,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,0,112,114,111,116,111,0,0,0,95,69,78,86,0,0,0,0,39,102,111,114,39,32,115,116,101,112,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,0,0,0,0,0,112,111,115,105,116,105,111,110,32,111,117,116,32,111,102,32,98,111,117,110,100,115,0,0,99,97,110,110,111,116,32,117,115,101,32,39,46,46,46,39,32,111,117,116,115,105,100,101,32,97,32,118,97,114,97,114,103,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,115,104,101,101,112,67,97,114,114,105,101,114,83,99,111,114,101,0,0,0,0,0,0,0,104,101,97,100,67,97,114,114,105,101,114,83,99,111,114,101,0,0,0,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,108,101,102,116,32,119,97,108,108,32,97,116,32,40,37,105,44,32,37,105,41,0,0,0,0,0,0,0,0,112,105,0,0,0,0,0,0,85,115,101,32,116,111,32,116,104,101,32,100,97,116,101,58,32,37,117,0,0,0,0,0,103,101,116,109,101,116,97,116,97,98,108,101,0,0,0,0,99,111,114,114,117,112,116,101,100,0,0,0,0,0,0,0,111,112,116,105,111,110,115,70,105,108,101,79,98,106,101,99,116,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,99,101,105,108,0,0,0,0,115,114,102,68,97,104,70,111,110,116,0,0,0,0,0,0,118,105,114,116,117,97,108,87,97,108,108,115,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,103,109,97,116,99,104,0,0,119,97,118,101,71,101,110,76,105,115,116,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,0,88,120,0,0,0,0,0,0,98,117,108,108,101,116,76,105,115,116,46,105,110,105,116,32,102,97,105,108,101,100,46,0,115,104,101,101,112,115,79,117,116,71,101,110,88,0,0,0,98,108,97,99,107,83,104,101,101,112,87,97,108,107,105,110,103,0,0,0,0,0,0,0,101,110,101,109,121,76,105,115,116,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,115,114,102,83,99,114,101,101,110,83,105,122,101,100,66,117,102,102,101,114,0,0,0,0,115,101,116,67,117,114,114,101,110,116,76,97,110,103,117,97,103,101,0,0,0,0,0,0,103,114,111,117,112,78,97,109,101,0,0,0,0,0,0,0,109,97,120,88,70,97,108,108,101,110,87,83,104,101,101,112,115,0,0,0,0,0,0,0,106,97,118,97,116,97,114,71,111,105,110,103,68,111,119,110,0,0,0,0,0,0,0,0,112,108,97,121,101,114,76,105,115,116,46,105,110,105,116,32,102,97,105,108,101,100,46,0,76,97,110,103,117,97,103,101,32,98,101,101,110,32,115,119,105,116,99,104,101,100,32,116,111,32,37,115,0,0,0,0,45,110,101,118,101,114,115,111,117,110,100,0,0,0,0,0,45,32,45,32,82,32,65,32,78,32,68,32,79,32,77,32,69,32,68,32,73,32,65,32,45,32,45,0,0,0,0,0,70,97,105,108,101,100,32,119,104,101,110,32,101,120,101,99,117,116,105,110,103,32,105,110,105,116,105,97,108,105,122,101,82,101,115,73,110,102,111,0,91,115,116,114,105,110,103,32,34,0,0,0,0,0,0,0,97,116,116,101,109,112,116,32,116,111,32,108,111,97,100,32,97,32,37,115,32,99,104,117,110,107,32,40,109,111,100,101,32,105,115,32,39,37,115,39,41,0,0,0,0,0,0,0,116,104,114,101,97,100,0,0,108,111,99,97,108,0,0,0,39,102,111,114,39,32,108,105,109,105,116,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,0,0,0,0,105,110,118,97,108,105,100,32,111,114,100,101,114,32,102,117,110,99,116,105,111,110,32,102,111,114,32,115,111,114,116,105,110,103,0,0,0,0,0,0,67,32,108,101,118,101,108,115,0,0,0,0,0,0,0,0,119,97,118,101,71,101,110,83,104,101,101,112,115,79,117,116,83,116,97,114,116,0,0,0,119,97,118,101,71,101,110,72,101,97,100,115,83,116,97,114,116,0,0,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,97,120,88,70,97,108,108,101,110,72,101,97,100,115,32,108,105,110,101,0,119,97,118,101,71,101,110,66,83,104,101,101,112,115,83,116,97,114,116,0,0,0,0,0,101,114,114,111,114,0,0,0,37,115,58,32,37,115,32,112,114,101,99,111,109,112,105,108,101,100,32,99,104,117,110,107,0,0,0,0,0,0,0,0,119,97,118,101,71,101,110,87,83,104,101,101,112,115,83,116,97,114,116,0,0,0,0,0,97,116,97,110,0,0,0,0,102,108,97,109,101,66,117,108,108,101,116,65,112,112,101,97,114,105,110,103,0,0,0,0,102,111,114,109,97,116,0,0,104,101,97,100,67,97,114,114,105,101,114,78,111,114,109,97,108,0,0,0,0,0,0,0,69,101,0,0,0,0,0,0,115,104,101,101,112,67,97,114,114,105,101,114,78,111,114,109,97,108,0,0,0,0,0,0,104,101,97,100,71,101,110,89,0,0,0,0,0,0,0,0,119,104,105,116,101,83,104,101,101,112,87,97,108,107,105,110,103,0,0,0,0,0,0,0,104,117,109,97,110,72,101,97,100,67,97,114,114,105,101,100,66,121,72,101,97,100,67,97,114,114,105,101,114,0,0,0,109,101,110,117,83,101,116,77,111,117,115,101,88,89,0,0,101,118,101,110,116,78,97,109,101,0,0,0,0,0,0,0,109,105,110,88,70,97,108,108,101,110,87,83,104,101,101,112,115,0,0,0,0,0,0,0,106,97,118,97,116,97,114,71,111,105,110,103,85,112,0,0,98,108,97,99,107,83,104,101,101,112,67,97,114,114,105,101,100,0,0,0,0,0,0,0,101,110,103,108,105,115,104,0,42,42,42,42,42,32,73,78,83,84,65,76,76,65,84,73,79,78,32,82,69,65,68,89,32,42,42,42,42,42,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,105,110,66,70,97,108,108,101,110,72,101,97,100,115,32,108,105,110,101,0,72,46,32,72,101,114,110,225,110,32,77,111,114,97,108,100,111,32,112,114,111,100,117,99,116,105,111,110,115,10,112,114,101,115,101,110,116,97,32,99,111,110,32,101,120,116,114,101,109,111,32,111,114,103,117,108,108,111,0,0,0,0,0,0,119,104,105,116,101,83,104,101,101,112,67,97,114,114,105,101,100,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,116,101,120,116,0,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,101,118,101,110,116,66,83,104,101,101,112,95,115,116,97,114,116,87,97,108,107,105,110,103,0,0,0,0,0,0,0,0,37,115,58,37,100,58,32,37,115,0,0,0,0,0,0,0,39,102,111,114,39,32,105,110,105,116,105,97,108,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,0,0,0,0,115,121,110,116,97,120,32,101,114,114,111,114,0,0,0,0,106,97,118,97,116,97,114,78,111,114,109,97,108,0,0,0,102,114,119,103,83,104,101,101,112,115,79,117,116,0,0,0,119,104,105,116,101,83,104,101,101,112,87,97,108,107,105,110,103,0,0,0,0,0,0,0,102,114,119,103,72,117,109,97,110,72,101,97,100,115,0,0,100,111,102,105,108,101,0,0,116,114,117,110,99,97,116,101,100,0,0,0,0,0,0,0,102,114,119,103,66,108,97,99,107,83,104,101,101,112,115,0,97,116,97,110,50,0,0,0,102,114,119,103,87,104,105,116,101,83,104,101,101,112,115,0,102,105,110,100,0,0,0,0,102,114,98,108,80,108,97,121,101,114,70,108,97,109,101,0,97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,33,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,39,37,99,39,0,0,0,0,102,114,101,110,72,101,97,100,67,97,114,114,105,101,114,0,37,115,0,0,0,0,0,0,104,101,97,100,71,101,110,88,0,0,0,0,0,0,0,0,103,114,111,117,110,100,86,105,114,116,117,97,108,87,97,108,108,0,0,0,0,0,0,0,104,117,109,97,110,72,101,97,100,67,97,114,114,105,101,100,66,121,66,111,100,121,0,0,102,114,101,110,83,104,101,101,112,67,97,114,114,105,101,114,0,0,0,0,0,0,0,0,105,110,99,114,101,109,101,110,116,97,108,0,0,0,0,0,115,119,105,116,99,104,84,111,77,101,110,117,0,0,0,0,60,115,116,114,105,110,103,62,0,0,0,0,0,0,0,0,114,101,115,110,97,109,101,0,121,71,114,111,117,110,100,70,111,114,80,108,97,121,101,114,0,0,0,0,0,0,0,0,106,97,118,71,114,112,78,111,114,109,97,108,0,0,0,0,102,114,101,110,72,117,109,97,110,72,101,97,100,0,0,0,103,101,110,101,114,97,116,105,111,110,97,108,0,0,0,0,60,110,97,109,101,62,0,0,115,112,97,110,105,115,104,0,75,101,121,98,111,97,114,100,32,101,114,114,111,114,0,0,66,97,100,32,112,111,115,116,32,105,110,115,116,97,108,108,97,116,105,111,110,32,112,114,111,99,101,115,115,46,46,46,0,0,0,0,0,0,0,0,72,46,32,72,101,114,110,225,110,32,77,111,114,97,108,100,111,32,112,114,111,100,117,99,116,105,111,110,115,10,105,115,32,112,114,111,117,100,32,116,111,32,112,114,101,115,101,110,116,0,0,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,97,120,88,70,97,108,108,101,110,66,83,104,101,101,112,115,32,108,105,110,101,0,0,0,0,0,0,0,102,114,101,110,66,108,97,99,107,83,104,101,101,112,0,0,105,115,114,117,110,110,105,110,103,0,0,0,0,0,0,0,60,110,117,109,98,101,114,62,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,111,112,116,105,111,110,32,39,37,37,37,99,39,32,116,111,32,39,108,117,97,95,112,117,115,104,102,115,116,114,105,110,103,39,0,0,0,0,0,0,98,105,110,97,114,121,0,0,116,97,98,108,101,0,0,0,97,116,116,101,109,112,116,32,116,111,32,99,111,109,112,97,114,101,32,37,115,32,119,105,116,104,32,37,115,0,0,0,101,118,101,110,116,87,83,104,101,101,112,95,115,116,97,114,116,87,97,108,107,105,110,103,0,0,0,0,0,0,0,0,103,101,116,32,108,101,110,103,116,104,32,111,102,0,0,0,115,111,114,116,0,0,0,0,37,115,32,101,120,112,101,99,116,101,100,0,0,0,0,0,102,114,101,110,87,104,105,116,101,83,104,101,101,112,0,0,115,101,116,109,97,106,111,114,105,110,99,0,0,0,0,0,60,101,111,102,62,0,0,0,102,114,112,108,74,65,118,97,116,97,114,0,0,0,0,0,10,0,0,0,0,0,0,0,115,101,116,115,116,101,112,109,117,108,0,0,0,0,0,0,63,0,0,0,0,0,0,0,58,58,0,0,0,0,0,0,99,111,108,108,101,99,116,103,97,114,98,97,103,101,0,0,115,101,116,112,97,117,115,101,0,0,0,0,0,0,0,0,25,147,13,10,26,10,0,0,46,0,0,0,0,0,0,0,126,61,0,0,0,0,0,0,97,115,105,110,0,0,0,0,115,116,101,112,0,0,0,0,119,83,104,101,101,112,71,101,110,88,0,0,0,0,0,0,102,0,0,0,0,0,0,0,60,61,0,0,0,0,0,0,99,111,117,110,116,0,0,0,37,115,32,101,120,112,101,99,116,101,100,44,32,103,111,116,32,37,115,0,0,0,0,0,62,61,0,0,0,0,0,0,100,117,109,112,0,0,0,0,108,101,102,116,87,97,108,108,83,105,122,101,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,114,111,112,101,95,100,101,102,46,112,110,103,0,0,0,0,0,0,99,111,108,108,101,99,116,0,99,97,110,110,111,116,32,37,115,32,37,115,58,32,37,115,0,0,0,0,0,0,0,0,61,61,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,111,110,103,32,115,116,114,105,110,103,32,100,101,108,105,109,105,116,101,114,0,0,0,115,114,102,98,117,108,80,108,97,121,101,114,70,108,97,109,101,0,0,0,0,0,0,0,114,101,115,116,97,114,116,0,98,83,104,101,101,112,71,101,110,89,0,0,0,0,0,0,239,187,191,0,0,0,0,0,114,105,103,104,116,86,105,114,116,117,97,108,87,97,108,108,0,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,73,110,32,115,116,97,103,101,32,39,37,115,39,44,32,108,101,118,101,108,58,32,37,105,44,32,105,110,100,101,120,58,32,37,105,0,0,0,0,0,103,109,115,116,103,95,101,109,112,116,121,83,116,97,103,101,0,0,0,0,0,0,0,0,104,117,109,97,110,72,101,97,100,67,97,114,114,105,101,100,66,121,83,104,101,101,112,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,111,118,101,106,97,49,46,112,110,103,0,0,0,0,0,0,0,0,115,116,111,112,0,0,0,0,109,101,110,117,68,114,97,119,84,101,120,116,0,0,0,0,80,65,78,73,67,58,32,117,110,112,114,111,116,101,99,116,101,100,32,101,114,114,111,114,32,105,110,32,99,97,108,108,32,116,111,32,76,117,97,32,65,80,73,32,40,37,115,41,10,0,0,0,0,0,0,0,115,116,114,105,110,103,32,115,108,105,99,101,32,116,111,111,32,108,111,110,103,0,0,0,46,46,0,0,0,0,0,0,102,114,97,109,101,110,97,109,101,0,0,0,0,0,0,0,32,65,66,67,68,69,70,71,72,73,74,75,76,77,78,209,79,80,81,82,83,84,85,86,87,88,89,90,44,46,58,63,33,45,48,49,50,51,52,53,54,55,56,57,119,98,0,0,101,118,101,110,116,65,118,97,116,97,114,95,115,104,111,111,116,0,0,0,0,0,0,0,121,71,114,111,117,110,100,0,115,114,102,102,110,100,87,104,105,116,101,83,104,101,101,112,0,0,0,0,0,0,0,0,95,95,105,112,97,105,114,115,0,0,0,0,0,0,0,0,98,97,100,32,99,111,110,118,101,114,115,105,111,110,32,110,117,109,98,101,114,45,62,105,110,116,59,32,109,117,115,116,32,114,101,99,111,109,112,105,108,101,32,76,117,97,32,119,105,116,104,32,112,114,111,112,101,114,32,115,101,116,116,105,110,103,115,0,0,0,0,0,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,119,104,105,108,101,0,0,0,119,104,105,116,101,83,104,101,101,112,71,101,116,116,105,110,103,65,72,101,97,100,0,0,104,105,103,104,83,99,111,114,101,115,76,105,115,116,0,0,75,101,121,98,111,97,114,100,32,108,111,115,116,0,0,0,74,117,115,116,32,105,110,115,116,97,108,108,101,100,32,97,116,32,37,115,32,37,115,44,32,101,120,101,99,117,116,105,110,103,32,112,111,115,116,32,105,110,115,116,97,108,108,97,116,105,111,110,0,0,0,0,82,32,65,32,78,32,68,32,79,32,77,32,69,32,68,32,73,32,65,10,10,67,97,114,103,97,110,100,111,46,46,46,0,0,0,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,105,110,66,70,97,108,108,101,110,87,83,104,101,101,112,115,32,108,105,110,101,0,0,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,99,117,101,114,112,111,51,46,112,110,103,0,0,0,0,0,0,0,114,101,97,100,101,114,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,114,101,116,117,114,110,32,97,32,115,116,114,105,110,103,0,0,0,0,118,101,114,115,105,111,110,32,109,105,115,109,97,116,99,104,58,32,97,112,112,46,32,110,101,101,100,115,32,37,102,44,32,76,117,97,32,99,111,114,101,32,112,114,111,118,105,100,101,115,32,37,102,0,0,0,117,110,97,98,108,101,32,116,111,32,100,117,109,112,32,103,105,118,101,110,32,102,117,110,99,116,105,111,110,0,0,0,117,110,116,105,108,0,0,0,37,0,0,0,0,0,0,0,27,76,117,97,0,0,0,0,99,111,110,116,114,111,108,32,115,116,114,117,99,116,117,114,101,32,116,111,111,32,108,111,110,103,0,0,0,0,0,0,115,116,114,105,110,103,0,0,97,116,116,101,109,112,116,32,116,111,32,99,111,109,112,97,114,101,32,116,119,111,32,37,115,32,118,97,108,117,101,115,0,0,0,0,0,0,0,0,115,116,114,105,110,103,32,108,101,110,103,116,104,32,111,118,101,114,102,108,111,119,0,0,114,101,109,111,118,101,0,0,108,97,98,101,108,115,47,103,111,116,111,115,0,0,0,0,104,117,109,97,110,72,101,97,100,70,97,108,108,105,110,103,0,0,0,0,0,0,0,0,115,114,102,102,110,100,66,108,97,99,107,83,104,101,101,112,0,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,110,101,115,116,101,100,32,102,117,110,99,116,105,111,110,115,0,0,0,0,0,0,0,109,117,108,116,105,112,108,101,32,76,117,97,32,86,77,115,32,100,101,116,101,99,116,101,100,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,40,119,105,100,116,104,32,111,114,32,112,114,101,99,105,115,105,111,110,32,116,111,111,32,108,111,110,103,41,0,0,0,0,116,114,117,101,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,99,97,98,101,122,97,95,100,101,102,46,112,110,103,0,0,0,0,102,108,97,109,101,66,117,108,108,101,116,69,120,112,108,111,100,105,110,103,0,0,0,0,61,40,108,111,97,100,41,0,115,114,102,102,110,100,72,101,97,100,0,0,0,0,0,0,105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,40,114,101,112,101,97,116,101,100,32,102,108,97,103,115,41,0,116,104,101,110,0,0,0,0,98,108,97,99,107,83,104,101,101,112,68,114,111,112,112,101,100,0,0,0,0,0,0,0,97,115,115,101,114,116,0,0,98,116,0,0,0,0,0,0,50,0,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,117,112,118,97,108,117,101,115,0,0,0,0,0,0,0,45,43,32,35,48,0,0,0,105,110,118,97,108,105,100,32,107,101,121,32,116,111,32,39,110,101,120,116,39,0,0,0,114,101,116,117,114,110,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,101,116,49,95,100,101,102,46,112,110,103,0,0,0,0,0,0,0,97,99,111,115,0,0,0,0,95,95,112,97,105,114,115,0,37,115,58,32,37,112,0,0,92,37,48,51,100,0,0,0,73,110,105,116,105,97,108,105,122,105,110,103,32,115,99,114,105,112,116,105,110,103,32,109,97,110,97,103,101,114,46,46,46,0,0,0,0,0,0,0,114,101,112,101,97,116,0,0,115,114,102,101,110,101,83,104,101,101,112,67,97,114,114,105,101,114,0,0,0,0,0,0,10,0,0,0,0,0,0,0,70,97,105,108,101,100,32,117,110,108,111,97,100,105,110,103,32,37,115,32,102,111,114,32,112,114,111,103,114,97,109,32,122,111,110,101,32,37,105,0,110,105,108,0,0,0,0,0,92,37,100,0,0,0,0,0,111,114,0,0,0,0,0,0,99,104,97,114,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,101,116,50,95,100,101,102,46,112,110,103,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,105,110,118,97,108,105,100,32,111,112,116,105,111,110,32,39,37,37,37,99,39,32,116,111,32,39,102,111,114,109,97,116,39,0,0,0,0,0,0,0,110,111,116,0,0,0,0,0,95,69,78,86,0,0,0,0,115,114,102,101,110,101,72,101,97,100,67,97,114,114,105,101,114,0,0,0,0,0,0,0,39,116,111,115,116,114,105,110,103,39,32,109,117,115,116,32,114,101,116,117,114,110,32,97,32,115,116,114,105,110,103,32,116,111,32,39,112,114,105,110,116,39,0,0,0,0,0,0,98,83,104,101,101,112,71,101,110,88,0,0,0,0,0,0,116,114,117,101,0,0,0,0,110,111,116,32,97,32,110,111,110,45,110,101,103,97,116,105,118,101,32,110,117,109,98,101,114,32,105,110,32,112,114,111,112,101,114,32,114,97,110,103,101,0,0,0,0,0,0,0,108,101,102,116,86,105,114,116,117,97,108,87,97,108,108,0,110,105,108,0,0,0,0,0,117,110,107,110,111,119,110,45,115,116,97,103,101,0,0,0,98,108,97,99,107,83,104,101,101,112,65,116,71,114,111,117,110,100,0,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,112,114,111,116,95,100,101,102,50,46,112,110,103,0,0,0,0,0,116,97,98,108,101,32,111,114,32,115,116,114,105,110,103,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,0,0,109,101,110,117,66,108,116,73,109,97,103,101,0,0,0,0,95,95,116,111,115,116,114,105,110,103,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,111,99,97,108,0,0,0,73,110,105,116,105,97,108,105,122,105,110,103,32,114,101,115,111,117,114,99,101,115,32,105,110,102,111,0,0,0,0,0,76,111,97,100,105,110,103,32,97,110,105,109,97,116,105,111,110,58,32,37,115,0,0,0,32,65,66,67,68,69,70,71,72,73,74,75,76,77,78,209,79,80,81,82,83,84,85,86,87,88,89,90,44,46,58,63,33,45,48,49,50,51,52,53,54,55,56,57,0,0,0,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,97,102,116,101,114,76,111,111,112,0,0,0,0,0,0,80,114,111,103,114,97,109,32,122,111,110,101,32,115,119,105,116,99,104,32,111,107,0,0,101,118,101,110,116,65,118,97,116,97,114,95,119,101,97,112,111,110,82,101,97,100,121,65,103,97,105,110,0,0,0,0,115,114,102,80,108,97,121,101,114,74,65,118,97,116,97,114,0,0,0,0,0,0,0,0,105,110,100,101,120,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,115,99,114,101,101,110,72,101,105,103,104,116,0,0,0,0,115,114,102,68,97,104,70,111,110,116,0,0,0,0,0,0,111,98,106,101,99,116,32,108,101,110,103,116,104,32,105,115,32,110,111,116,32,97,32,110,117,109,98,101,114,0,0,0,110,111,116,32,97,32,110,117,109,98,101,114,32,105,110,32,112,114,111,112,101,114,32,114,97,110,103,101,0,0,0,0,105,110,0,0,0,0,0,0,115,99,111,114,101,0,0,0,77,111,117,115,101,32,101,114,114,111,114,0,0,0,0,0,97,102,116,101,114,76,111,111,112,0,0,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,82,32,65,32,78,32,68,32,79,32,77,32,69,32,68,32,73,32,65,10,10,78,111,119,32,108,111,97,100,105,110,103,46,46,46,0,0,0,0,0,83,119,105,116,99,104,105,110,103,32,116,111,32,112,114,111,103,114,97,109,32,122,111,110,101,32,37,105,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,102,111,114,101,103,114,111,117,110,100,46,112,110,103,0,0,0,0,99,97,110,110,111,116,32,99,104,97,110,103,101,32,97,32,112,114,111,116,101,99,116,101,100,32,109,101,116,97,116,97,98,108,101,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,97,120,88,70,97,108,108,101,110,87,83,104,101,101,112,115,32,108,105,110,101,0,0,0,0,0,0,0,114,101,97,100,0,0,0,0,110,111,32,118,97,108,117,101,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,105,102,0,0,0,0,0,0,37,112,0,0,0,0,0,0,111,112,99,111,100,101,115,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,115,119,105,116,99,104,84,111,77,101,110,117,0,0,0,110,117,109,98,101,114,0,0,45,45,0,0,0,0,0,0,112,101,114,102,111,114,109,32,97,114,105,116,104,109,101,116,105,99,32,111,110,0,0,0,108,111,111,112,32,105,110,32,115,101,116,116,97,98,108,101,0,0,0,0,0,0,0,0,117,110,112,97,99,107,0,0,98,114,101,97,107,0,0,0,115,114,102,67,108,97,115,115,105,99,76,101,118,101,108,70,103,0,0,0,0,0,0,0,95,95,109,101,116,97,116,97,98,108,101,0,0,0,0,0,119,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,0,0,0,0,0,0,0,114,101,111,112,101,110,0,0,105,110,118,97,108,105,100,32,117,115,101,32,111,102,32,39,37,99,39,32,105,110,32,114,101,112,108,97,99,101,109,101,110,116,32,115,116,114,105,110,103,0,0,0,0,0,0,0,103,111,116,111,0,0,0,0,91,76,117,97,32,109,115,103,93,32,37,115,0,0,0,0,115,119,105,116,99,104,84,111,77,101,110,117,0,0,0,0,91,68,65,84,69,93,45,91,84,73,77,69,93,58,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,103,114,111,117,110,100,46,105,109,103,0,0,0,0,106,97,118,97,116,97,114,84,111,117,99,104,101,100,0,0,110,105,108,32,111,114,32,116,97,98,108,101,32,101,120,112,101,99,116,101,100,0,0,0,70,97,105,108,101,100,32,97,100,100,105,110,103,32,110,111,100,101,32,116,111,32,112,108,97,121,101,114,76,105,115,116,0,0,0,0,0,0,0,0,105,110,116,101,114,118,97,108,32,105,115,32,101,109,112,116,121,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,105,110,118,97,108,105,100,32,114,101,112,108,97,99,101,109,101,110,116,32,118,97,108,117,101,32,40,97,32,37,115,41,0,0,0,0,0,0,0,0,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,109,97,105,110,77,101,110,117,0,0,0,0,0,0,0,0,65,110,100,32,99,108,111,115,101,100,32,119,105,116,104,32,110,111,32,101,114,114,111,114,115,0,0,0,0,0,0,0,115,114,102,67,108,97,115,115,105,99,76,101,118,101,108,66,103,0,0,0,0,0,0,0,95,86,69,82,83,73,79,78,0,0,0,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,99,117,114,115,111,114,46,112,110,103,0,0,0,0,0,0,0,0,32,12,10,13,9,11,0,0,116,97,110,0,0,0,0,0,53,0,0,0,0,0,0,0,27,76,117,97,0,0,0,0,115,116,114,105,110,103,47,102,117,110,99,116,105,111,110,47,116,97,98,108,101,32,101,120,112,101,99,116,101,100,0,0,65,110,111,110,121,109,111,117,115,0,0,0,0,0,0,0,116,97,98,108,101,32,111,118,101,114,102,108,111,119,0,0,102,111,114,0,0,0,0,0,104,105,103,104,83,99,111,114,101,115,77,101,110,117,0,0,67,111,117,108,100,110,39,116,32,101,120,101,99,117,116,101,32,111,112,116,105,111,110,115,70,105,108,101,79,98,106,101,99,116,46,115,97,118,101,0,117,112,118,97,108,117,101,115,0,0,0,0,0,0,0,0,98,108,97,99,107,83,104,101,101,112,87,97,108,107,105,110,103,0,0,0,0,0,0,0,97,98,115,0,0,0,0,0,98,97,115,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,116,97,110,104,0,0,0,0,111,112,101,110,0,0,0,0,94,36,42,43,63,46,40,91,37,45,0,0,0,0,0,0,102,97,108,115,101,0,0,0,99,117,114,114,101,110,116,76,97,110,103,117,97,103,101,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,98,101,102,111,114,101,76,111,111,112,0,0,0,0,0,67,108,111,115,105,110,103,32,97,116,32,37,115,44,32,37,115,0,0,0,0,0,0,0,37,115,32,101,120,112,101,99,116,101,100,32,40,116,111,32,99,108,111,115,101,32,37,115,32,97,116,32,108,105,110,101,32,37,100,41,0,0,0,0,99,117,114,115,111,114,73,109,97,103,101,0,0,0,0,0,115,116,97,99,107,32,111,118,101,114,102,108,111,119,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,105,109,103,99,114,101,100,105,116,115,46,105,109,103,0,0,0,0,115,113,114,116,0,0,0,0,114,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,112,97,116,116,101,114,110,32,99,97,112,116,117,114,101,0,101,110,100,0,0,0,0,0,98,121,116,101,0,0,0,0,101,110,103,108,105,115,104], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([98,101,102,111,114,101,76,111,111,112,0,0,0,0,0,0,115,101,116,32,117,112,32,111,102,32,112,114,111,103,114,97,109,32,102,111,110,116,115,32,102,97,105,108,101,100,0,0,95,95,99,97,108,108,0,0,40,102,111,114,32,115,116,101,112,41,0,0,0,0,0,0,73,110,105,116,105,97,108,105,122,105,110,103,32,103,97,109,101,32,119,111,114,108,100,32,100,97,116,97,0,0,0,0,118,97,108,117,101,32,101,120,112,101,99,116,101,100,0,0,115,105,110,0,0,0,0,0,64,37,115,0,0,0,0,0,109,97,108,102,111,114,109,101,100,32,112,97,116,116,101,114,110,32,40,109,105,115,115,105,110,103,32,97,114,103,117,109,101,110,116,115,32,116,111,32,39,37,37,98,39,41,0,0,101,108,115,101,105,102,0,0,39,37,115,39,0,0,0,0,115,112,97,110,105,115,104,0,67,111,117,108,100,32,110,111,116,32,109,97,115,115,32,100,101,97,108,108,111,99,97,116,101,32,114,101,115,77,101,109,111,114,121,0,0,0,0,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,101,120,101,99,117,116,101,70,114,97,109,101,0,0,0,116,105,109,101,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,0,0,0,0,95,95,99,111,110,99,97,116,0,0,0,0,0,0,0,0,40,102,111,114,32,108,105,109,105,116,41,0,0,0,0,0,115,114,102,77,101,110,117,67,114,101,100,105,116,115,80,104,111,116,111,115,0,0,0,0,120,112,99,97,108,108,0,0,115,105,110,104,0,0,0,0,70,97,105,108,101,100,32,97,100,100,105,110,103,32,110,111,100,101,32,116,111,32,119,97,118,101,71,101,110,76,105,115,116,0,0,0,0,0,0,0,61,115,116,100,105,110,0,0,109,97,108,102,111,114,109,101,100,32,112,97,116,116,101,114,110,32,40,109,105,115,115,105,110,103,32,39,93,39,41,0,103,114,111,117,110,100,87,97,108,108,83,105,122,101,0,0,101,108,115,101,0,0,0,0,103,109,115,116,103,95,102,114,101,101,72,101,97,100,115,0,70,97,105,108,101,100,32,101,120,101,99,117,116,105,110,103,32,116,104,101,32,105,110,105,116,105,97,108,105,122,101,32,115,99,114,105,112,116,0,0,72,105,103,104,32,115,99,111,114,101,115,32,108,105,115,116,32,104,97,115,32,98,101,101,110,32,114,101,115,101,116,0,78,111,32,108,105,115,116,32,110,111,100,101,32,102,111,114,32,37,115,0,0,0,0,0,119,104,105,116,101,83,104,101,101,112,65,116,71,114,111,117,110,100,0,0,0,0,0,0,101,120,101,99,117,116,101,70,114,97,109,101,0,0,0,0,99,111,110,115,111,108,101,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,0,95,95,108,101,0,0,0,0,40,102,111,114,32,105,110,100,101,120,41,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,105,110,116,114,111,98,117,116,104,114,101,101,46,112,110,103,0,0,0,0,0,0,116,121,112,101,0,0,0,0,114,97,110,100,111,109,115,101,101,100,0,0,0,0,0,0,108,111,103,84,111,70,105,108,101,0,0,0,0,0,0,0,98,117,102,102,101,114,32,116,111,111,32,108,97,114,103,101,0,0,0,0,0,0,0,0,70,97,105,108,101,100,32,108,111,97,100,105,110,103,32,37,115,32,102,111,114,32,112,114,111,103,114,97,109,32,122,111,110,101,32,37,105,44,32,115,121,115,116,101,109,32,119,105,108,108,32,99,111,110,116,105,110,117,101,32,101,120,101,99,117,116,105,111,110,32,40,117,110,110,101,99,101,115,115,97,114,121,32,114,101,115,111,117,114,99,101,41,0,0,0,0,109,97,108,102,111,114,109,101,100,32,112,97,116,116,101,114,110,32,40,101,110,100,115,32,119,105,116,104,32,39,37,37,39,41,0,0,0,0,0,0,70,114,97,109,101,115,32,112,101,114,32,115,101,99,111,110,100,58,32,37,102,0,0,0,100,111,0,0,0,0,0,0,115,116,97,114,116,83,99,114,105,112,116,40,41,0,0,0,97,110,105,109,115,70,114,97,109,101,76,105,115,116,0,0,97,83,86,84,0,0,0,0,32,65,97,66,98,67,99,68,100,69,101,70,102,71,103,72,104,73,105,74,106,75,107,76,108,77,109,32,78,110,209,241,79,111,80,112,81,113,82,114,83,115,84,116,85,117,86,118,87,119,88,120,89,121,32,90,122,48,49,50,51,52,53,54,55,56,57,161,33,191,63,61,124,64,35,34,36,37,38,92,47,40,41,43,42,45,95,59,58,46,44,60,62,94,91,93,123,125,193,225,201,233,205,237,211,243,218,250,196,228,203,235,207,239,214,246,220,252,39,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,100,114,97,119,70,114,97,109,101,0,0,0,0,0,0,80,114,111,103,114,97,109,32,122,111,110,101,32,115,119,105,116,99,104,32,115,101,116,32,117,112,32,114,101,115,111,117,114,99,101,115,32,111,107,0,115,101,116,85,112,77,111,117,115,101,32,97,110,100,32,107,101,121,119,111,114,100,32,102,97,105,108,101,100,46,0,0,95,95,108,116,0,0,0,0,40,102,111,114,32,99,111,110,116,114,111,108,41,0,0,0,106,97,118,97,116,97,114,78,111,114,109,97,108,0,0,0,115,114,102,66,97,99,107,73,110,116,114,111,66,117,116,116,111,110,51,0,0,0,0,0,116,111,115,116,114,105,110,103,0,0,0,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,105,110,116,104,114,101,101,46,105,109,103,0,0,0,114,97,110,100,111,109,0,0,115,99,114,101,101,110,87,105,100,116,104,0,0,0,0,0,118,97,108,117,101,32,101,120,112,101,99,116,101,100,0,0,105,110,118,97,108,105,100,32,99,97,112,116,117,114,101,32,105,110,100,101,120,32,37,37,37,100,0,0,0,0,0,0,98,114,101,97,107,0,0,0,97,98,99,0,0,0,0,0,70,97,105,108,101,100,32,101,120,101,99,117,116,105,110,103,32,116,104,101,32,37,115,32,108,117,97,32,115,99,114,105,112,116,0,0,0,0,0,0,77,111,117,115,101,32,108,111,115,116,0,0,0,0,0,0,97,78,70,0,0,0,0,0,45,102,105,110,105,115,104,105,110,115,116,97,108,108,0,0,100,114,97,119,70,114,97,109,101,0,0,0,0,0,0,0,109,111,117,115,101,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,0,0,0,115,114,102,73,110,116,114,111,82,101,100,105,97,76,111,103,111,0,0,0,0,0,0,0,95,95,117,110,109,0,0,0,76,117,97,0,0,0,0,0,40,102,111,114,32,115,116,97,116,101,41,0,0,0,0,0,70,97,105,108,101,100,32,99,104,101,99,107,67,111,108,108,105,115,105,111,110,115,0,0,116,111,110,117,109,98,101,114,0,0,0,0,0,0,0,0,115,114,102,77,101,110,117,66,97,99,107,103,114,111,117,110,100,51,0,0,0,0,0,0,114,97,100,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,109,105,110,88,70,97,108,108,101,110,87,83,104,101,101,112,115,32,108,105,110,101,0,0,0,0,0,0,0,115,116,97,99,107,32,111,118,101,114,102,108,111,119,0,0,109,105,115,115,105,110,103,32,39,91,39,32,97,102,116,101,114,32,39,37,37,102,39,32,105,110,32,112,97,116,116,101,114,110,0,0,0,0,0,0,97,110,100,0,0,0,0,0,40,110,117,108,108,41,0,0,70,97,105,108,101,100,32,111,112,101,110,105,110,103,32,37,115,32,102,111,114,32,108,117,97,0,0,0,0,0,0,0,97,121,0,0,0,0,0,0,99,111,110,115,116,97,110,116,115,0,0,0,0,0,0,0,115,114,102,83,99,114,101,101,110,83,105,122,101,100,66,117,102,102,101,114,0,0,0,0,98,111,111,108,101,97,110,0,107,101,121,98,111,97,114,100,46,105,110,105,116,32,102,97,105,108,101,100,46,0,0,0,95,95,112,111,119,0,0,0,99,111,110,99,97,116,101,110,97,116,101,0,0,0,0,0,109,97,105,110,0,0,0,0,40,102,111,114,32,103,101,110,101,114,97,116,111,114,41,0,115,114,102,83,99,114,101,101,110,83,105,122,101,100,66,117,102,102,101,114,0,0,0,0,108,111,111,112,32,105,110,32,103,101,116,116,97,98,108,101,0,0,0,0,0,0,0,0,112,97,99,107,0,0,0,0,60,103,111,116,111,32,37,115,62,32,97,116,32,108,105,110,101,32,37,100,32,106,117,109,112,115,32,105,110,116,111,32,116,104,101,32,115,99,111,112,101,32,111,102,32,108,111,99,97,108,32,39,37,115,39,0,70,97,105,108,101,100,32,101,120,101,99,117,116,101,69,110,101,109,121,65,73,0,0,0,115,101,116,109,101,116,97,116,97,98,108,101,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,105,110,116,119,111,46,105,109,103,0,0,0,0,0,112,111,119,0,0,0,0,0,104,117,109,97,110,72,101,97,100,78,111,114,109,97,108,0,115,116,97,99,107,32,111,118,101,114,102,108,111,119,32,40,37,115,41,0,0,0,0,0,112,97,116,116,101,114,110,32,116,111,111,32,99,111,109,112,108,101,120,0,0,0,0,0,37,115,32,110,101,97,114,32,37,115,0,0,0,0,0,0,115,99,114,105,112,116,70,105,108,101,115,76,105,115,116,0,97,120,0,0,0,0,0,0,98,111,116,116,111,109,0,0,101,120,101,99,117,116,101,80,111,115,116,73,110,115,116,97,108,108,84,97,115,107,115,32,102,97,105,108,101,100,46,0,95,95,109,111,100,0,0,0,61,63,0,0,0,0,0,0,39,61,39,32,111,114,32,39,105,110,39,32,101,120,112,101,99,116,101,100,0,0,0,0,70,97,105,108,101,100,32,101,120,101,99,117,116,101,69,110,101,109,121,87,97,118,101,115,0,0,0,0,0,0,0,0,106,97,118,97,116,97,114,68,101,97,116,104,0,0,0,0,115,101,108,101,99,116,0,0,115,114,102,77,101,110,117,66,97,99,107,103,114,111,117,110,100,50,0,0,0,0,0,0,109,111,100,102,0,0,0,0,105,110,118,97,108,105,100,32,111,112,116,105,111,110,32,39,37,115,39,0,0,0,0,0,117,110,102,105,110,105,115,104,101,100,32,99,97,112,116,117,114,101,0,0,0,0,0,0,37,115,58,37,100,58,32,37,115,0,0,0,0,0,0,0,70,97,105,108,101,100,32,101,120,101,99,117,116,105,110,103,32,112,114,101,32,108,111,97,100,32,98,117,102,102,101,114,0,0,0,0,0,0,0,0,115,121,0,0,0,0,0,0,116,111,112,0,0,0,0,0,68,68,46,115,101,116,86,105,100,101,111,77,111,100,101,32,102,97,105,108,101,100,46,0,95,95,100,105,118,0,0,0,67,0,0,0,0,0,0,0,108,97,98,101,108,32,39,37,115,39,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,32,111,110,32,108,105,110,101,32,37,100,0,0,0,70,97,105,108,101,100,32,109,111,118,101,80,108,97,121,101,114,115,0,0,0,0,0,0,76,117,97,32,53,46,50,0,114,97,119,115,101,116,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,105,110,116,114,111,98,117,116,46,112,110,103,0,0,109,105,110,0,0,0,0,0,98,105,110,97,114,121,32,115,116,114,105,110,103,0,0,0,105,110,118,97,108,105,100,32,99,97,112,116,117,114,101,32,105,110,100,101,120,0,0,0,116,97,98,108,101,32,105,110,100,101,120,32,105,115,32,78,97,78,0,0,0,0,0,0,99,104,117,110,107,32,104,97,115,32,116,111,111,32,109,97,110,121,32,108,105,110,101,115,0,0,0,0,0,0,0,0,114,101,100,105,97,32,108,111,97,100,32,108,105,115,116,32,115,99,114,105,112,116,0,0,115,120,0,0,0,0,0,0,99,101,110,116,101,114,0,0,115,99,114,101,101,110,66,112,112,0,0,0,0,0,0,0,95,95,109,117,108,0,0,0,61,91,67,93,0,0,0,0,117,110,101,120,112,101,99,116,101,100,32,115,121,109,98,111,108,0,0,0,0,0,0,0,70,97,105,108,101,100,32,109,111,118,101,66,117,108,108,101,116,115,0,0,0,0,0,0,104,117,103,101,0,0,0,0,114,97,119,103,101,116,0,0,115,114,102,66,97,99,107,73,110,116,114,111,66,117,116,116,111,110,0,0,0,0,0,0,109,97,120,0,0,0,0,0,116,111,111,32,109,97,110,121,32,99,97,112,116,117,114,101,115,0,0,0,0,0,0,0,117,110,102,105,110,105,115,104,101,100,32,108,111,110,103,32,99,111,109,109,101,110,116,0,70,97,105,108,101,100,32,111,112,101,110,105,110,103,32,115,99,114,105,112,116,102,105,108,101,115,46,108,117,97,0,0,104,121,0,0,0,0,0,0,114,105,103,104,116,0,0,0,70,97,105,108,101,100,32,100,111,105,110,103,32,116,104,101,32,97,117,116,111,109,97,116,105,99,32,115,116,97,103,105,110,103,0,0,0,0,0,0,115,99,114,101,101,110,72,101,105,103,104,116,0,0,0,0,95,95,115,117,98,0,0,0,109,101,116,97,109,101,116,104,111,100,0,0,0,0,0,0,102,117,110,99,116,105,111,110,32,97,114,103,117,109,101,110,116,115,32,101,120,112,101,99,116,101,100,0,0,0,0,0,100,97,116,97,47,108,111,103,115,46,116,120,116,0,0,0,119,104,105,116,101,83,104,101,101,112,68,114,111,112,112,101,100,0,0,0,0,0,0,0,114,97,119,108,101,110,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,98,97,99,107,105,110,116,114,111,46,105,109,103,0,0,0,0,0,108,111,103,0,0,0,0,0,114,101,115,117,108,116,105,110,103,32,115,116,114,105,110,103,32,116,111,111,32,108,97,114,103,101,0,0,0,0,0,0,117,110,102,105,110,105,115,104,101,100,32,108,111,110,103,32,115,116,114,105,110,103,0,0,95,95,105,110,100,101,120,0,100,97,116,97,47,115,99,114,105,112,116,115,100,97,116,97,47,115,99,114,105,112,116,102,105,108,101,115,46,108,117,97,0,0,0,0,0,0,0,0,104,120,0,0,0,0,0,0,108,101,102,116,0,0,0,0,70,97,105,108,101,100,32,109,111,118,101,67,97,109,101,114,97,0,0,0,0,0,0,0,115,99,114,101,101,110,87,105,100,116,104,0,0,0,0,0,95,95,97,100,100,0,0,0,102,111,114,32,105,116,101,114,97,116,111,114,0,0,0,0,116,111,111,32,109,97,110,121,32,37,115,32,40,108,105,109,105,116,32,105,115,32,37,100,41,32,105,110,32,37,115,0,80,85,78,84,65,74,69,58,32,37,105,10,69,78,69,82,71,73,65,58,32,37,105,0,114,97,119,101,113,117,97,108,0,0,0,0,0,0,0,0,115,114,102,77,101,110,117,66,97,99,107,103,114,111,117,110,100,0,0,0,0,0,0,0,108,100,101,120,112,0,0,0,37,115,58,37,100,58,32,0,117,112,112,101,114,0,0,0,104,101,120,97,100,101,99,105,109,97,108,32,100,105,103,105,116,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,99,104,97,114,40,37,100,41,0,0,0,0,0,0,0,0,100,97,116,97,47,115,99,114,105,112,116,115,47,115,99,114,105,112,116,102,105,108,101,115,46,108,117,97,0,0,0,0,99,104,0,0,0,0,0,0,100,97,104,70,111,110,116,0,70,97,105,108,101,100,32,100,114,97,119,66,97,99,107,103,114,111,117,110,100,0,0,0,68,68,46,105,110,105,116,32,102,97,105,108,101,100,46,0,95,95,101,113,0,0,0,0,102,117,110,99,116,105,111,110,32,97,116,32,108,105,110,101,32,37,100,0,0,0,0,0,114,98,0,0,0,0,0,0,112,114,105,110,116,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,115,112,108,97,115,104,95,100,101,102,46,105,109,103,0,0,0,0,102,114,101,120,112,0,0,0,119,83,104,101,101,112,71,101,110,89,0,0,0,0,0,0,83,108,0,0,0,0,0,0,115,117,98,0,0,0,0,0,114,105,103,104,116,87,97,108,108,83,105,122,101,0,0,0,100,101,99,105,109,97,108,32,101,115,99,97,112,101,32,116,111,111,32,108,97,114,103,101,0,0,0,0,0,0,0,0,103,109,115,116,103,95,102,114,101,101,83,104,101,101,112,115,0,0,0,0,0,0,0,0,110,78,0,0,0,0,0,0,100,101,115,105,114,101,100,70,114,97,109,101,115,80,101,114,83,101,99,111,110,100,0,0,99,119,0,0,0,0,0,0,98,108,97,99,107,83,104,101,101,112,71,101,116,116,105,110,103,65,72,101,97,100,0,0,101,100,105,97,66,105,103,70,111,110,116,0,0,0,0,0,115,101,116,117,112,71,97,109,101,68,97,116,97,83,116,114,117,99,116,117,114,101,115,32,102,97,105,108,101,100,0,0,95,95,108,101,110,0,0,0,63,0,0,0,0,0,0,0,109,97,105,110,32,102,117,110,99,116,105,111,110,0,0,0,45,45,32,80,65,85,83,69,68,32,45,45,0,0,0,0,112,99,97,108,108,0,0,0,115,114,102,73,110,116,114,111,82,101,100,105,97,76,111,103,111,0,0,0,0,0,0,0,102,109,111,100,0,0,0,0,70,97,105,108,101,100,32,111,112,101,110,105,110,103,32,76,117,97,0,0,0,0,0,0,98,97,100,32,97,114,103,117,109,101,110,116,32,35,37,100,32,116,111,32,39,37,115,39,32,40,37,115,41,0,0,0,70,97,105,108,101,100,32,108,111,97,100,105,110,103,32,37,115,32,102,111,114,32,112,114,111,103,114,97,109,32,122,111,110,101,32,37,105,0,0,0,114,101,118,101,114,115,101,0,105,110,118,97,108,105,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,0,115,116,97,99,107,32,111,118,101,114,102,108,111,119,0,0,70,97,105,108,101,100,32,97,100,100,105,110,103,32,110,111,100,101,32,116,111,32,101,110,101,109,121,76,105,115,116,0,114,101,115,101,116,72,105,103,104,83,99,111,114,101,115,0,69,114,114,111,114,32,105,110,105,116,105,97,108,105,122,105,110,103,32,109,97,115,115,32,100,101,97,108,108,111,99,97,116,111,114,0,0,0,0,0,99,121,0,0,0,0,0,0,115,114,102,69,100,105,97,70,111,110,116,0,0,0,0,0,101,100,105,97,70,111,110,116,0,0,0,0,0,0,0,0,80,114,111,103,114,97,109,32,122,111,110,101,32,115,119,105,116,99,104,32,97,102,116,101,114,32,108,111,111,112,32,111,107,0,0,0,0,0,0,0,83,99,114,105,112,116,32,109,97,110,97,103,101,114,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,95,95,109,111,100,101,0,0,109,101,116,104,111,100,0,0,105,116,101,109,115,32,105,110,32,97,32,99,111,110,115,116,114,117,99,116,111,114,0,0,70,97,105,108,101,100,32,97,100,100,105,110,103,32,110,111,100,101,32,116,111,32,98,117,108,108,101,116,76,105,115,116,0,0,0,0,0,0,0,0,45,45,32,80,65,85,83,65,32,45,45,0,0,0,0,0,112,97,105,114,115,0,0,0,102,117,110,99,116,105,111,110,32,111,114,32,101,120,112,114,101,115,115,105,111,110,32,116,111,111,32,99,111,109,112,108,101,120,0,0,0,0,0,0,102,108,111,111,114,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,105,110,116,114,111,116,109,103,46,105,109,103,0,0,0,0,0,0,63,0,0,0,0,0,0,0,115,114,102,67,108,97,115,115,105,99,76,101,118,101,108,66,103,0,0,0,0,0,0,0,114,101,112,0,0,0,0,0,117,110,102,105,110,105,115,104,101,100,32,115,116,114,105,110,103,0,0,0,0,0,0,0,104,101,97,100,67,97,114,114,105,101,114,67,97,114,114,121,105,110,103,0,0,0,0,0,110,97,109,101,0,0,0,0,115,116,111,112,65,110,100,80,108,97,121,83,111,117,110,100,82,101,115,111,117,114,99,101,0,0,0,0,0,0,0,0,110,111,32,118,97,108,117,101,0,0,0,0,0,0,0,0,78,111,110,114,101,99,111,118,101,114,32,101,114,114,111,114,32,119,104,101,110,32,114,101,115,116,111,114,105,110,103,32,114,101,115,111,117,114,99,101,115,0,0,0,0,0,0,0,99,120,0,0,0,0,0,0,101,120,105,116,105,110,103,77,101,110,117,0,0,0,0,0,110,111,116,32,101,110,111,117,103,104,32,109,101,109,111,114,121,0,0,0,0,0,0,0,100,97,116,97,47,108,111,103,115,46,116,120,116,0,0,0,84,105,109,101,32,116,111,32,103,111,32,97,119,97,121,46,46,46,0,0,0,0,0,0,78,101,119,32,101,120,101,99,117,116,105,111,110,32,97,116,32,37,115,44,32,37,115,0,95,95,103,99,0,0,0,0,115,114,102,73,110,116,114,111,84,109,103,76,111,103,111,0,99,111,110,115,116,97,110,116,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,118,97,108,117,101,32,40,37,115,41,32,97,116,32,105,110,100,101,120,32,37,100,32,105,110,32,116,97,98,108,101,32,102,111,114,32,39,99,111,110,99,97,116,39,0,0,0,0,102,117,110,99,116,105,111,110,115,0,0,0,0,0,0,0,45,45,32,71,65,77,69,32,79,86,69,82,32,45,45,0,110,101,120,116,0,0,0,0,101,120,112,0,0,0,0,0,115,114,102,73,110,116,114,111,84,109,103,76,111,103,111,0,99,97,108,108,105,110,103,32,39,37,115,39,32,111,110,32,98,97,100,32,115,101,108,102,32,40,37,115,41,0,0,0,83,67,79,82,69,32,58,32,37,105,10,69,78,69,82,71,89,58,32,37,105,0,0,0,109,97,116,99,104,0,0,0,108,101,120,105,99,97,108,32,101,108,101,109,101,110,116,32,116,111,111,32,108,111,110,103,0,0,0,0,0,0,0,0,115,104,101,101,112,67,97,114,114,105,101,114,67,97,114,114,121,105,110,103,66,111,100,121,0,0,0,0,0,0,0,0,120,88,0,0,0,0,0,0,115,116,111,112,83,111,117,110,100,82,101,115,111,117,114,99,101,0,0,0,0,0,0,0,109,97,120,88,70,97,108,108,101,110,72,101,97,100,115,0,67,32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,99,111,110,115,116,114,117,99,116,111,114,32,116,111,111,32,108,111,110,103,0,0,0,0,115,116,97,114,116,71,97,109,101,95,112,115,101,117,100,111,77,101,110,117,0,0,0,0,110,105,108,0,0,0,0,0,66,97,100,32,103,97,109,101,32,101,120,101,99,117,116,105,111,110,33,0,0,0,0,0,83,111,117,110,100,32,100,105,115,97,98,108,101,100,0,0,97,116,116,101,109,112,116,32,116,111,32,37,115,32,37,115,32,39,37,115,39,32,40,97,32,37,115,32,118,97,108,117,101,41,0,0,0,0,0,0,99,97,108,108,0,0,0,0,95,95,110,101,119,105,110,100,101,120,0,0,0,0,0,0,97,116,116,101,109,112,116,32,116,111,32,37,115,32,97,32,37,115,32,118,97,108,117,101,0,0,0,0,0,0,0,0,117,112,118,97,108,117,101,0,119,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,116,111,32,39,105,110,115,101,114,116,39,0,0,0,108,111,99,97,108,32,118,97,114,105,97,98,108,101,115,0,105,110,100,101,120,0,0,0,105,110,115,101,114,116,0,0,110,111,32,118,105,115,105,98,108,101,32,108,97,98,101,108,32,39,37,115,39,32,102,111,114,32,60,103,111,116,111,62,32,97,116,32,108,105,110,101,32,37,100,0,0,0,0,0,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,101,114,114,111,114,58,32,98,108,111,99,107,32,116,111,111,32,98,105,103,0,0,101,114,114,111,114,32,105,110,32,95,95,103,99,32,109,101,116,97,109,101,116,104,111,100,32,40,37,115,41,0,0,0,45,45,32,74,85,69,71,79,32,84,69,82,77,73,78,65,68,79,32,45,45,0,0,0,108,111,97,100,0,0,0,0,105,110,99,111,109,112,97,116,105,98,108,101,0,0,0,0,100,101,103,0,0,0,0,0,100,97,116,97,47,103,114,97,112,104,105,99,115,47,101,100,105,97,102,111,110,116,46,112,110,103,0,0,0,0,0,0,37,46,49,52,103,0,0,0,109,101,116,104,111,100,0,0,108,111,119,101,114,0,0,0,99,111,110,99,97,116,0,0,109,97,108,102,111,114,109,101,100,32,110,117,109,98,101,114,0,0,0,0,0,0,0,0,83,104,101,101,112,67,97,114,114,105,101,100,0,0,0,0,112,108,97,121,83,111,117,110,100,82,101,115,111,117,114,99,101,0,0,0,0,0,0,0,109,105,110,88,70,97,108,108,101,110,72,101,97,100,115,0,119,0,0,0,0,0,0,0,60,37,115,62,32,97,116,32,108,105,110,101,32,37,100,32,110,111,116,32,105,110,115,105,100,101,32,97,32,108,111,111,112,0,0,0,0,0,0,0,69,114,114,111,114,32,99,97,108,108,105,110,103,32,112,99,97,108,108,32,111,118,101,114,32,99,112,112,95,115,119,105,116,99,104,84,111,77,101,110,117,0,0,0,0,0,0,0,83,119,105,116,99,104,32,116,111,32,102,105,114,115,116,32,112,114,111,103,114,97,109,32,122,111,110,101,32,111,107,0,116,111,111,32,109,97,110,121,32,37,115,32,40,108,105,109,105,116,32,105,115,32,37,100,41,0,0,0,0,0,0,0,69,120,101,99,117,116,97,98,108,101,32,105,110,102,111,58,32,37,115,0,0,0,0,0,95,95,105,110,100,101,120,0,102,105,101,108,100,0,0,0,110,0,0,0,0,0,0,0,60,110,97,109,101,62,32,111,114,32,39,46,46,46,39,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,0,0,110,111,32,109,101,115,115,97,103,101,0,0,0,0,0,0,70,97,105,108,101,100,32,100,114,97,119,105,110,103,32,116,104,101,32,103,114,111,117,110,100,32,119,97,108,108,32,97,116,32,40,37,105,44,32,37,105,41,0,0,0,0,0,0,115,104,101,101,112,67,97,114,114,105,101,114,84,111,117,99,104,101,100,0,0,0,0,0,104,101,97,100,67,97,114,114,105,101,114,84,111,117,99,104,101,100,0,0,0,0,0,0,0,0,0,0,248,70,0,0,158,0,0,0,114,1,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,71,0,0,44,0,0,0,136,1,0,0,88,1,0,0,250,0,0,0,22,0,0,0,98,1,0,0,174,0,0,0,118,1,0,0,38,0,0,0,14,0,0,0,136,0,0,0,194,0,0,0,108,1,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,71,0,0,80,0,0,0,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,71,0,0,226,0,0,0,102,1,0,0,190,1,0,0,104,0,0,0,180,1,0,0,202,1,0,0,10,1,0,0,4,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,71,0,0,26,0,0,0,106,0,0,0,4,1,0,0,168,1,0,0,14,1,0,0,78,0,0,0,172,0,0,0,46,1,0,0,186,1,0,0,82,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,71,0,0,192,1,0,0,98,0,0,0,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,71,0,0,130,0,0,0,218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,71,0,0,70,0,0,0,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,71,0,0,144,0,0,0,54,0,0,0,198,0,0,0,16,0,0,0,204,1,0,0,124,0,0,0,132,1,0,0,130,1,0,0,100,0,0,0,90,1,0,0,90,1,0,0,90,1,0,0,90,1,0,0,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,71,0,0,16,1,0,0,134,0,0,0,162,1,0,0,126,0,0,0,38,1,0,0,230,0,0,0,208,1,0,0,140,1,0,0,142,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,71,0,0,124,1,0,0,228,0,0,0,160,1,0,0,48,0,0,0,28,0,0,0,254,0,0,0,72,1,0,0,176,0,0,0,128,1,0,0,148,0,0,0,140,0,0,0,54,1,0,0,240,0,0,0,198,1,0,0,202,0,0,0,36,0,0,0,182,1,0,0,74,1,0,0,150,1,0,0,92,0,0,0,8,1,0,0,40,1,0,0,164,1,0,0,178,0,0,0,192,0,0,0,52,1,0,0,156,1,0,0,100,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,71,0,0,28,1,0,0,108,0,0,0,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,71,0,0,44,0,0,0,90,1,0,0,88,1,0,0,250,0,0,0,182,0,0,0,170,1,0,0,90,1,0,0,118,1,0,0,38,0,0,0,14,0,0,0,136,0,0,0,194,0,0,0,108,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,71,0,0,208,0,0,0,154,1,0,0,160,1,0,0,48,0,0,0,28,0,0,0,254,0,0,0,72,1,0,0,176,0,0,0,128,1,0,0,148,0,0,0,140,0,0,0,54,1,0,0,240,0,0,0,198,1,0,0,202,0,0,0,36,0,0,0,182,1,0,0,74,1,0,0,150,1,0,0,92,0,0,0,8,1,0,0,40,1,0,0,164,1,0,0,178,0,0,0,244,0,0,0,216,0,0,0,90,1,0,0,100,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,71,0,0,152,0,0,0,56,1,0,0,90,1,0,0,90,1,0,0,90,1,0,0,78,0,0,0,90,1,0,0,90,1,0,0,90,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,71,0,0,188,1,0,0,70,1,0,0,198,0,0,0,16,0,0,0,204,1,0,0,124,0,0,0,132,1,0,0,130,1,0,0,100,0,0,0,22,1,0,0,76,1,0,0,138,1,0,0,42,0,0,0,86,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,71,0,0,122,0,0,0,24,1,0,0,160,1,0,0,48,0,0,0,28,0,0,0,254,0,0,0,72,1,0,0,176,0,0,0,128,1,0,0,148,0,0,0,140,0,0,0,54,1,0,0,240,0,0,0,198,1,0,0,202,0,0,0,36,0,0,0,182,1,0,0,74,1,0,0,150,1,0,0,92,0,0,0,8,1,0,0,40,1,0,0,164,1,0,0,178,0,0,0,244,0,0,0,216,0,0,0,12,1,0,0,100,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,71,0,0,12,0,0,0,178,1,0,0,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,50,51,98,105,116,109,97,112,112,101,100,70,105,120,101,100,70,111,110,116,67,108,97,115,115,0,0,0,0,0,0,0,50,50,104,105,103,104,83,99,111,114,101,115,77,97,110,97,103,101,114,67,108,97,115,115,0,0,0,0,0,0,0,0,50,48,109,97,115,115,68,101,97,108,108,111,99,97,116,111,114,67,108,97,115,115,0,0,50,48,103,114,97,112,104,105,99,82,101,115,111,117,114,99,101,67,108,97,115,115,0,0,50,48,100,105,114,101,99,116,73,110,112,117,116,66,97,115,101,67,108,97,115,115,0,0,49,54,116,105,109,101,87,114,97,112,112,101,114,67,108,97,115,115,0,0,0,0,0,0,49,54,111,112,116,105,111,110,115,70,105,108,101,67,108,97,115,115,0,0,0,0,0,0,49,54,108,111,111,112,87,114,97,112,112,101,114,67,108,97,115,115,0,0,0,0,0,0,49,53,102,105,108,101,83,116,114,105,110,103,67,108,97,115,115,0,0,0,0,0,0,0,49,53,100,105,114,101,99,116,68,114,97,119,67,108,97,115,115,0,0,0,0,0,0,0,49,53,100,105,75,101,121,98,111,97,114,100,67,108,97,115,115,0,0,0,0,0,0,0,49,52,102,105,120,101,100,70,111,110,116,67,108,97,115,115,0,0,0,0,0,0,0,0,49,52,100,100,83,117,114,102,97,99,101,67,108,97,115,115,0,0,0,0,0,0,0,0,49,51,114,101,115,111,117,114,99,101,67,108,97,115,115,0,49,51,109,97,105,110,76,111,111,112,67,108,97,115,115,0,49,51,100,100,83,112,114,105,116,101,67,108,97,115,115,0,49,50,100,105,77,111,117,115,101,67,108,97,115,115,0,0,0,0,0,0,184,68,0,0,0,0,0,0,200,68,0,0,0,0,0,0,216,68,0,0,240,70,0,0,0,0,0,0,0,0,0,0,232,68,0,0,24,71,0,0,0,0,0,0,0,0,0,0,16,69,0,0,40,71,0,0,0,0,0,0,0,0,0,0,56,69,0,0,232,70,0,0,0,0,0,0,0,0,0,0,96,69,0,0,176,71,0,0,0,0,0,0,0,0,0,0,128,69,0,0,0,0,0,0,160,69,0,0,0,0,0,0,184,69,0,0,192,71,0,0,0,0,0,0,0,0,0,0,208,69,0,0,0,0,0,0,232,69,0,0,0,0,0,0,0,70,0,0,0,0,0,0,24,70,0,0,0,0,0,0,48,70,0,0,0,0,0,0,72,70,0,0,184,71,0,0,0,0,0,0,0,0,0,0,96,70,0,0,104,71,0,0,0,0,0,0,0,0,0,0,120,70,0,0,0,0,0,0,144,70,0,0,0,0,0,0,168,70,0,0,0,0,0,0,184,70,0,0,128,71,0,0,0,0,0,0,0,0,0,0,200,70,0,0,184,71,0,0,0,0,0,0,0,0,0,0,216,70,0,0,104,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,27,0,0,0,0,0,0,144,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,16,0,0,0,0,0,0,32,16,0,0,0,0,0,0,160,10,0,0,0,0,0,0,24,13,0,0,0,0,0,0,24,19,0,0,0,0,0,0,8,22,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
function runPostSets() {

HEAP32[((18152 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18160 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18168 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18184 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18200 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18216 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18232 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18248 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18256 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18264 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18280 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18288 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18296 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18304 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18312 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18320 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18336 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18352 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18360 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18368 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((18376 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18392 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((18408 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
}

var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  var _llvm_dbg_declare=undefined;

  
  function _rand_r(seedp) {
      seedp = seedp|0; 
      var val = 0;
      val = ((Math_imul(HEAP32[((seedp)>>2)], 31010991)|0) + 0x676e6177 ) & 2147483647; // assumes RAND_MAX is in bit mask form (power of 2 minus 1)
      HEAP32[((seedp)>>2)]=val;
      return val|0;
    }
  
  var ___rand_seed=allocate([0x0273459b, 0, 0, 0], "i32", ALLOC_STATIC);function _rand() {
      return _rand_r(___rand_seed)|0;
    }

  var _sqrt=Math_sqrt;

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    }function _memcpy(dest, src, num) {
      dest = dest|0; src = src|0; num = num|0;
      var ret = 0;
      if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
      ret = dest|0;
      if ((dest&3) == (src&3)) {
        while (dest & 3) {
          if ((num|0) == 0) return ret|0;
          HEAP8[(dest)]=HEAP8[(src)];
          dest = (dest+1)|0;
          src = (src+1)|0;
          num = (num-1)|0;
        }
        while ((num|0) >= 4) {
          HEAP32[((dest)>>2)]=HEAP32[((src)>>2)];
          dest = (dest+4)|0;
          src = (src+4)|0;
          num = (num-4)|0;
        }
      }
      while ((num|0) > 0) {
        HEAP8[(dest)]=HEAP8[(src)];
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      return ret|0;
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  var _llvm_va_start=undefined;

  
  
  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            assert(buffer.length);
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  
  function _strlen(ptr) {
      ptr = ptr|0;
      var curr = 0;
      curr = ptr;
      while (HEAP8[(curr)]) {
        curr = (curr + 1)|0;
      }
      return (curr - ptr)|0;
    }
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }function _vprintf(format, va_arg) {
      return _printf(format, HEAP32[((va_arg)>>2)]);
    }


  function _llvm_va_end() {}

  
  
  
  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},keyCodes:{16:1249,17:1248,18:1250,33:1099,34:1102,37:1104,38:1106,39:1103,40:1105,46:127,96:1112,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,173:45,188:44,190:46,191:47,192:96},scanCodes:{8:42,9:43,13:40,27:41,32:44,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,305:224,308:226},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=0 /* XXX missing C define SDL_PIXELFORMAT_RGBA8888 */;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))|0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))|0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
  
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
  
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
      },touchX:0,touchY:0,savedKeydown:null,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            var event = {
              type: 'mousedown',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 1;
            SDL.events.push(event);
            break;
          case 'touchmove':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            event = {
              type: 'mousemove',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.events.push(event);
            break;
          case 'touchend':
            event.preventDefault();
            event = {
              type: 'mouseup',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(event);
            break;
          case 'mousemove':
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = Browser.getMouseWheelDelta(event) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            event.preventDefault();
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        return;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = event.keyCode;
            if (code >= 65 && code <= 90) {
              code += 32; // make lowercase for SDL
            } else {
              code = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
  
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
  
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28); // XXX
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))|0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))|0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(9))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(8))|0)]=SDL.buttonState;
              HEAP32[(((ptr)+(12))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(16))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.button;
            HEAP8[(((ptr)+(6))|0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))|0)]=event.index;
            HEAP8[(((ptr)+(5))|0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        assert(tempCtx, 'TTF_Init must have been called');
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))|0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      if (surf == SDL.screen) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))|0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
        HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      var srcData = SDL.surfaces[src];
      var dstData = SDL.surfaces[dst];
      var sr, dr;
      if (srcrect) {
        sr = SDL.loadRect(srcrect);
      } else {
        sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
      }
      if (dstrect) {
        dr = SDL.loadRect(dstrect);
      } else {
        dr = { x: 0, y: 0, w: -1, h: -1 };
      }
      var oldAlpha = dstData.ctx.globalAlpha;
      dstData.ctx.globalAlpha = srcData.alpha/255;
      dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, sr.w, sr.h);
      dstData.ctx.globalAlpha = oldAlpha;
      if (dst != SDL.screen) {
        // XXX As in IMG_Load, for compatibility we write out |pixels|
        console.log('WARNING: copying canvas data to memory for compatibility');
        _SDL_LockSurface(dst);
        dstData.locked--; // The surface is not actually locked in this hack
      }
      return 0;
    }

  function _SDL_SetVideoMode(width, height, depth, flags) {
      ['mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
  
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        var canvas = Module['canvas'];
        width = canvas.width;
        height = canvas.height;
      }
  
      Browser.setCanvasSize(width, height, true);
      // Free the old surface first.
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        SDL.screen = null;
      }
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          SDL.receiveEvent({
            type: 'resize',
            w: w,
            h: h
          });
        });
      }
      return SDL.screen;
    }

  function _SDL_UpdateRect(surf, x, y, w, h) {
      // We actually do the whole screen in Unlock...
    }

  function _SDL_CreateRGBSurface(flags, width, height, depth, rmask, gmask, bmask, amask) {
      return SDL.makeSurface(width, height, flags, false, 'CreateRGBSurface', rmask, gmask, bmask, amask);
    }

  
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: HEAP32[((x)>>2)],
            height: HEAP32[((y)>>2)],
            size: HEAP32[((x)>>2)] * HEAP32[((y)>>2)] * HEAP32[((comp)>>2)],
            bpp: HEAP32[((comp)>>2)]
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)|0)];
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr;
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return tempRet0 = typeArray[i],thrown;
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return tempRet0 = throwntype,thrown;
    }function ___gxx_personality_v0() {
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  
  function _memset(ptr, value, num) {
      ptr = ptr|0; value = value|0; num = num|0;
      var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
      stop = (ptr + num)|0;
      if ((num|0) >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        value = value & 0xff;
        unaligned = ptr & 3;
        value4 = value | (value << 8) | (value << 16) | (value << 24);
        stop4 = stop & ~3;
        if (unaligned) {
          unaligned = (ptr + 4 - unaligned)|0;
          while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
            HEAP8[(ptr)]=value;
            ptr = (ptr+1)|0;
          }
        }
        while ((ptr|0) < (stop4|0)) {
          HEAP32[((ptr)>>2)]=value4;
          ptr = (ptr+4)|0;
        }
      }
      while ((ptr|0) < (stop|0)) {
        HEAP8[(ptr)]=value;
        ptr = (ptr+1)|0;
      }
      return (ptr-num)|0;
    }var _llvm_memset_p0i8_i32=_memset;

  function _SDL_GetKeyboardState(numKeys) {
      if (numKeys) {
        HEAP32[((numKeys)>>2)]=65536;
      }
      return SDL.keyboardState;
    }

  function _SDL_GetMouseState(x, y) {
      if (x) HEAP32[((x)>>2)]=Browser.mouseX;
      if (y) HEAP32[((y)>>2)]=Browser.mouseY;
      return SDL.buttonState;
    }

  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }

  
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }

  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }


  
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return tempRet0 = x*y > 4294967295,(x*y)>>>0;
    }

  function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
  
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        document.addEventListener("keydown", SDL.receiveEvent);
        document.addEventListener("keyup", SDL.receiveEvent);
        document.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
  
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
  
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown'] = 0x300 /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup'] = 0x301 /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress'] = 0x303 /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown'] = 0x401 /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup'] = 0x402 /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove'] = 0x400 /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['unload'] = 0x100 /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize'] = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }

  function _SDL_PollEvent(ptr) {
      if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
        // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
        // to automatically query for events, query for joystick events.
        SDL.queryJoysticks();
      }
      if (SDL.events.length === 0) return 0;
      if (ptr) {
        SDL.makeCEvent(SDL.events.shift(), ptr);
      }
      return 1;
    }

  function _strcpy(pdest, psrc) {
      pdest = pdest|0; psrc = psrc|0;
      var i = 0;
      do {
        HEAP8[(((pdest+i)|0)|0)]=HEAP8[(((psrc+i)|0)|0)];
        i = (i+1)|0;
      } while (HEAP8[(((psrc)+(i-1))|0)]);
      return pdest|0;
    }

  function _SDL_GetTicks() {
      return Math.floor(Date.now() - SDL.startTime);
    }

  function _localeconv() {
      // %struct.timeval = type { char* decimal point, other stuff... }
      // var indexes = Runtime.calculateStructAlignment({ fields: ['i32', 'i32'] });
      var me = _localeconv;
      if (!me.ret) {
      // These are defaults from the "C" locale
        me.ret = allocate([
          allocate(intArrayFromString('.'), 'i8', ALLOC_NORMAL),0,0,0, // decimal_point
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // thousands_sep
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // grouping
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // int_curr_symbol
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // currency_symbol
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // mon_decimal_point
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // mon_thousands_sep
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // mon_grouping
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0, // positive_sign
          allocate(intArrayFromString(''), 'i8', ALLOC_NORMAL),0,0,0 // negative_sign
        ], 'i8*', ALLOC_NORMAL); // Allocate strings in lconv, still don't allocate chars
      }
      return me.ret;
    }

  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }

  function _toupper(chr) {
      if (chr >= 97 && chr <= 122) {
        return chr - 97 + 65;
      } else {
        return chr;
      }
    }

  function _tolower(chr) {
      chr = chr|0;
      if ((chr|0) < 65) return chr|0;
      if ((chr|0) > 90) return chr|0;
      return (chr - 65 + 97)|0;
    }

  function _isalpha(chr) {
      return (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }

  function _iscntrl(chr) {
      return (0 <= chr && chr <= 0x1F) || chr === 0x7F;
    }

  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }

  function _isgraph(chr) {
      return 0x20 < chr && chr < 0x7F;
    }

  function _islower(chr) {
      return chr >= 97 && chr <= 122;
    }

  function _ispunct(chr) {
      return (chr >= 33 && chr <= 47) ||
             (chr >= 58 && chr <= 64) ||
             (chr >= 91 && chr <= 96) ||
             (chr >= 123 && chr <= 126);
    }

  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }

  function _isupper(chr) {
      return chr >= 65 && chr <= 90;
    }

  function _isalnum(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }

  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }

  function _memchr(ptr, chr, num) {
      chr = unSign(chr);
      for (var i = 0; i < num; i++) {
        if (HEAP8[(ptr)] == chr) return ptr;
        ptr++;
      }
      return 0;
    }

  function _strpbrk(ptr1, ptr2) {
      var curr;
      var searchSet = {};
      while (1) {
        var curr = HEAP8[((ptr2++)|0)];
        if (!curr) break;
        searchSet[curr] = 1;
      }
      while (1) {
        curr = HEAP8[(ptr1)];
        if (!curr) break;
        if (curr in searchSet) return ptr1;
        ptr1++;
      }
      return 0;
    }

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _freopen(filename, mode, stream) {
      // FILE *freopen(const char *restrict filename, const char *restrict mode, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/freopen.html
      if (!filename) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (!streamObj) {
          ___setErrNo(ERRNO_CODES.EBADF);
          return 0;
        }
        if (_freopen.buffer) _free(_freopen.buffer);
        filename = intArrayFromString(streamObj.path);
        filename = allocate(filename, 'i8', ALLOC_NORMAL);
      }
      _fclose(stream);
      return _fopen(filename, mode);
    }

  function _ferror(stream) {
      // int ferror(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ferror.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.error);
    }



  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.eof);
    }

  
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  var _tan=Math_tan;

  
  function _sinh(x) {
      var p = Math.pow(Math.E, x);
      return (p - (1 / p)) / 2;
    }
  
  function _cosh(x) {
      var p = Math.pow(Math.E, x);
      return (p + (1 / p)) / 2;
    }function _tanh(x) {
      return _sinh(x) / _cosh(x);
    }

  var _sin=Math_sin;


  function _srand(seed) {
      HEAP32[((___rand_seed)>>2)]=seed
    }

  var _floor=Math_floor;

  var _llvm_pow_f64=Math_pow;

  function _modf(x, intpart) {
      HEAPF64[((intpart)>>3)]=Math.floor(x);
      return x - HEAPF64[((intpart)>>3)];
    }

  var _log=Math_log;

  function _log10(x) {
      return Math.log(x) / Math.LN10;
    }

  function _frexp(x, exp_addr) {
      var sig = 0, exp_ = 0;
      if (x !== 0) {
        var sign = 1;
        if (x < 0) {
          x = -x;
          sign = -1;
        }
        var raw_exp = Math.log(x)/Math.log(2);
        exp_ = Math.ceil(raw_exp);
        if (exp_ === raw_exp) exp_ += 1;
        sig = sign*x/Math.pow(2, exp_);
      }
      HEAP32[((exp_addr)>>2)]=exp_;
      return sig;
    }

  function _fmod(x, y) {
      return x % y;
    }

  var _exp=Math_exp;

  var _cos=Math_cos;


  var _ceil=Math_ceil;

  var _atan=Math_atan;

  var _atan2=Math_atan2;

  var _asin=Math_asin;

  var _acos=Math_acos;

  var _fabs=Math_abs;

  function _strspn(pstr, pset) {
      var str = pstr, set, strcurr, setcurr;
      while (1) {
        strcurr = HEAP8[(str)];
        if (!strcurr) return str - pstr;
        set = pset;
        while (1) {
          setcurr = HEAP8[(set)];
          if (!setcurr || setcurr == strcurr) break;
          set++;
        }
        if (!setcurr) return str - pstr;
        str++;
      }
    }


  var _abs=Math_abs;

  function _longjmp(env, value) {
      throw { longjmp: true, id: HEAP32[((env)>>2)], value: value || 1 };
    }

  function _abort() {
      Module['abort']();
    }

  var _setjmp=undefined;

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  var _llvm_memset_p0i8_i64=_memset;

  function __ZNSt9exceptionD2Ev() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  var _fmodl=_fmod;






FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");



var FUNCTION_TABLE = [0,0,_luaB_pairs,0,__ZN20massDeallocatorClass13deallocateOneEPv,0,_luaB_type,0,_math_randomseed,0,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZN12diMouseClassD1Ev,0,__ZN14fixedFontClass13getCharHeightEv,0,__ZN16loopWrapperClass3endEv,0,_math_atan,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZN23bitmappedFixedFontClassD1Ev,0,__ZN15vectorListClassI16playerUnitStructED1Ev,0,__ZN20graphicResourceClassD1Ev,0,__ZN14ddSurfaceClass7bltFromERS_iiiiiiiiiibb,0,_pack,0,_math_sinh,0,_math_abs,0,__ZN14ddSurfaceClass8drawLineEiiiiiii,0,__ZN14fixedFontClass12getCharWidthEv,0,__ZNKSt9bad_alloc4whatEv,0,__ZN13mainLoopClass9afterLoopEv,0,__ZN14fixedFontClass17calculateTextLineEPciiPS0_Pi,0,_math_tan,0,__ZN14ddSurfaceClass7bltFromERS_iiiiiibb,0,__Z18luaResetHighScoresP9lua_State,0,__Z23luaUpdateHighScoresListP9lua_State,0,__ZN16loopWrapperClassD0Ev,0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,_luaB_error,0,__Z17luaMenuSetMouseXYP9lua_State,0,_l_alloc,0,_str_char,0,_luaB_load,0,_f_call,0,__ZN16optionsFileClassD1Ev,0,_str_find,0,_dothecall,0,_math_deg,0,__ZN13resourceClass15getResourceNameEv,0,__ZN22highScoresManagerClassD1Ev,0,_writer,0,__ZN10__cxxabiv120__si_class_type_infoD0Ev,0,_str_match,0,__ZN23bitmappedFixedFontClass4initEP13ddSpriteClassii,0,_math_rad,0,__ZN14ddSurfaceClass15isInVideoMemoryEv,0,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,0,_luaB_assert,0,__ZN20directInputBaseClassD0Ev,0,__ZN16loopWrapperClass27getFramesToExecutePerSecondEv,0,_luaB_tostring,0,__ZN20massDeallocatorClass5closeEv,0,__ZN20graphicResourceClassD0Ev,0,__ZN15diKeyboardClassD0Ev,0,_luaB_next,0,__Z18luaSetSoundEnabledP9lua_State,0,_panic,0,_math_exp,0,_tinsert,0,_str_upper,0,__ZN13ddSpriteClassD1Ev,0,__ZN16loopWrapperClass12isLoopActiveEv,0,__ZN15fileStringClass15openFromStringZEPcb,0,_str_dump,0,__ZN16timeWrapperClassD1Ev,0,__ZN14conLoggerClassD1Ev,0,__ZN15fileStringClassD0Ev,0,__ZN14fixedFontClass12drawTextLineER14ddSurfaceClassPciiiiib9alignEnum,0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZN14ddSurfaceClass8fillRectEiiiiiii,0,_generic_reader,0,__ZN16loopWrapperClassD1Ev,0,__Z15luaSwitchToMenuP9lua_State,0,__ZN14ddSurfaceClass13calculateTextEPc9alignEnumRiS2_,0,_math_modf,0,__ZN13resourceClassD1Ev,0,_f_parser,0,_gmatch,0,__ZNSt9bad_allocD2Ev,0,_unpack,0,__ZN15diKeyboardClass7isReadyEv,0,_math_asin,0,_str_rep,0,__ZN15vectorListClassI16bulletUnitStructED1Ev,0,_growstack,0,__ZN20graphicResourceClass4loadEv,0,__ZN23bitmappedFixedFontClass3endEv,0,__ZN14ddSurfaceClass12alphaBltFromERS_iiib,0,__ZN14ddSurfaceClass13getRealHeightEv,0,_luaB_tonumber,0,__ZN14fixedFontClassD1Ev,0,__ZN16optionsFileClassD0Ev,0,_str_format,0,_str_gsub,0,_math_random,0,__ZN15directDrawClass6isLostEPb,0,__ZN14fixedFontClass26calculateMultilineTextSizeER14ddSurfaceClassPciiiii9alignEnum10valignEnumPiS5_S5_S5_,0,_luaB_xpcall,0,__ZN16loopWrapperClass15executeMainLoopEiim,0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZN14ddSurfaceClass8putPixelEiiiii,0,_math_atan2,0,_math_pow,0,__ZN14ddSurfaceClassD1Ev,0,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZN12consoleClassD1Ev,0,_ipairsaux,0,__ZN14ddSurfaceClass7restoreEv,0,__ZN16timeWrapperClassD0Ev,0,_gmatch_aux,0,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,_str_reverse,0,__ZN20massDeallocatorClassD1Ev,0,__ZN15directDrawClassD0Ev,0,__ZN15fileStringClass5closeEv,0,_tremove,0,_math_frexp,0,_math_cosh,0,_dofilecont,0,__ZN14ddSurfaceClass17getDwordFromPixelEiiRm,0,_luaB_pcall,0,__ZN14ddSurfaceClass6isLostEPb,0,_math_cos,0,_math_tanh,0,__ZN14fixedFontClass24privateDrawMultilineTextER14ddSurfaceClassPciiiiib9alignEnumbPiS4_S4_S4_,0,__ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii,0,__ZN14ddSurfaceClass14stretchBltFromERS_iiiiiiiibbb,0,__Z27luaStopAndPlaySoundResourceP9lua_State,0,__ZN15vectorListClassI15enemyUnitStructED1Ev,0,__ZN20graphicResourceClass17needsToBeReloadedEv,0,_pcallcont,0,__ZN14ddSurfaceClass8getWidthEv,0,__ZN20massDeallocatorClass14massDeallocateEv,0,__ZN13ddSpriteClass7isReadyEv,0,__ZN20graphicResourceClass7getTypeEv,0,__ZN15fileStringClassD1Ev,0,__ZN12diMouseClass7isReadyEv,0,_luaB_rawlen,0,__ZN13mainLoopClass12executeFrameEm,0,__ZN13ddSpriteClassD0Ev,0,__Z15luaMenuDrawTextP9lua_State,0,__ZN15diKeyboardClassD1Ev,0,__ZN20massDeallocatorClass7isReadyEv,0,_str_lower,0,_math_min,0,_lua_newstate,0,__ZN15fileStringClass14openFromMemoryEPvib,0,__ZN14ddSurfaceClass9getHeightEv,0,_math_max,0,_str_byte,0,__ZN20graphicResourceClass6reloadEv,0,_luaB_dofile,0,_f_luaopen,0,__ZN15directDrawClass7restoreEv,0,__ZN14ddSurfaceClass12fillAllDwordEm,0,__ZN13resourceClassD0Ev,0,_luaB_rawequal,0,_math_acos,0,_luaB_getmetatable,0,__ZN22highScoresManagerClassD0Ev,0,_sort,0,_math_ldexp,0,__ZN13mainLoopClassD0Ev,0,__ZN14ddSurfaceClass15obscuredBltFromERS_iiib,0,__ZN14ddSurfaceClass4lockEbbPmPPv,0,__ZN13mainLoopClass9drawFrameEv,0,_luaB_loadfile,0,_luaB_print,0,__ZN20graphicResourceClass7rawLoadEv,0,_math_log,0,__ZN13mainLoopClass21informFramesPerSecondEd,0,__ZN14fixedFontClass19privateDrawTextLineER14ddSurfaceClassPciiiiib9alignEnumbPiS4_S4_S4_,0,___cxa_pure_virtual,0,__Z21luaSetCurrentLanguageP9lua_State,0,_str_sub,0,_luaB_rawget,0,__ZN23bitmappedFixedFontClassD0Ev,0,__ZN14ddSurfaceClass11getDDObjectEv,0,__ZN20massDeallocatorClassD0Ev,0,_str_len,0,__Z20luaPlaySoundResourceP9lua_State,0,__ZN14fixedFontClass17drawMultilineTextER14ddSurfaceClassPciiiiib9alignEnum10valignEnum,0,_math_fmod,0,_luaB_setmetatable,0,__ZNSt9bad_allocD0Ev,0,_tconcat,0,__ZN14fixedFontClass7isReadyEv,0,_luaB_ipairs,0,__ZN10__cxxabiv117__class_type_infoD0Ev,0,__ZN15directDrawClassD1Ev,0,_math_sin,0,__ZN14ddSurfaceClass9writeTextEPciii9alignEnumiiii,0,__ZN16loopWrapperClass14getTimerObjectEv,0,__ZN16loopWrapperClass14setActiveStateEb,0,_luaB_select,0,__ZN23bitmappedFixedFontClass20lowLevelDrawTextLineER14ddSurfaceClassPciiiiiiib,0,__ZN13mainLoopClass10beforeLoopEv,0,__ZN15fileStringClass7isReadyEv,0,__ZN15fileStringClass11getDataSizeEv,0,__ZN15vectorListClassI17waveGenUnitStructED1Ev,0,_luaB_rawset,0,__ZN18scriptManagerClassD1Ev,0,__ZN14ddSurfaceClass6unlockEv,0,_math_floor,0,__ZN14ddSurfaceClassD0Ev,0,__ZN15directDrawClass7isReadyEv,0,__Z15luaMenuBltImageP9lua_State,0,__ZN14ddSurfaceClass7bltFromERS_iibb,0,__ZN15fileStringClass12openFromFileEPc,0,__ZN14ddSurfaceClass12getRealWidthEv,0,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,0,__ZN20graphicResourceClass8isLoadedEv,0,__ZN14fixedFontClassD0Ev,0,_luaB_collectgarbage,0,_math_sqrt,0,_math_ceil,0,__ZN12diMouseClassD0Ev,0,__ZN20massDeallocatorClass16addMemAllocationEPvb,0,__ZN14ddSurfaceClass13saveAsBmpFileEPcb,0,__Z20luaStopSoundResourceP9lua_State,0,__ZN20graphicResourceClass6unloadEv,0,__ZN13mainLoopClassD1Ev,0,__ZN20massDeallocatorClass4initEv,0,__ZN20directInputBaseClassD1Ev,0,_getS,0,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZN14ddSurfaceClass15getDwordFromRGBEiiiRm,0,__ZL12luaLogToFileP9lua_State,0,__ZN20massDeallocatorClass19removeMemAllocationEPv,0,__ZN16loopWrapperClass8exitLoopEv,0,_getF,0,__ZN15fileStringClass14getDataPointerEv,0];

// EMSCRIPTEN_START_FUNCS

function __Z14moveBulletUnitmR20vectorListNodeStructI16bulletUnitStructE($frameNumber,$unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $myType;
 var $myUnitFrame;
 var $wasGoingToPoint;
 var $objPointer=sp;
 $2=$frameNumber;
 $3=$unit;
 var $4=$3; //@line 38 "bullets.cpp"
 var $5=(($4)|0); //@line 38 "bullets.cpp"
 var $6=$5; //@line 38 "bullets.cpp"
 var $7=(($6+24)|0); //@line 38 "bullets.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 38 "bullets.cpp"
 var $9=((2192+((($8)*(24))&-1))|0); //@line 38 "bullets.cpp"
 $myType=$9; //@line 38 "bullets.cpp"
 var $10=$3; //@line 39 "bullets.cpp"
 var $11=(($10)|0); //@line 39 "bullets.cpp"
 var $12=$11; //@line 39 "bullets.cpp"
 var $13=(($12+88)|0); //@line 39 "bullets.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 39 "bullets.cpp"
 var $15=$myType; //@line 39 "bullets.cpp"
 var $16=(($15+16)|0); //@line 39 "bullets.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 39 "bullets.cpp"
 var $18=(($17+((($14)*(80))&-1))|0); //@line 39 "bullets.cpp"
 $myUnitFrame=$18; //@line 39 "bullets.cpp"
 var $19=$3; //@line 43 "bullets.cpp"
 var $20=(($19)|0); //@line 43 "bullets.cpp"
 var $21=$20; //@line 43 "bullets.cpp"
 var $22=(($21+156)|0); //@line 43 "bullets.cpp"
 var $23=HEAP8[($22)]; //@line 43 "bullets.cpp"
 var $24=(($23)&1); //@line 43 "bullets.cpp"
 var $25=($24&1); //@line 43 "bullets.cpp"
 $wasGoingToPoint=$25; //@line 43 "bullets.cpp"
 var $26=$3; //@line 47 "bullets.cpp"
 var $27=(($26)|0); //@line 47 "bullets.cpp"
 var $28=$27; //@line 47 "bullets.cpp"
 var $29=__Z13autoFrameUnitP17genericUnitStruct($28); //@line 47 "bullets.cpp"
 if($29){label=3;break;}else{label=2;break;} //@line 47 "bullets.cpp"
 case 2: 
 $1=0; //@line 47 "bullets.cpp"
 label=41;break; //@line 47 "bullets.cpp"
 case 3: 
 var $32=$3; //@line 51 "bullets.cpp"
 var $33=(($32)|0); //@line 51 "bullets.cpp"
 var $34=$33; //@line 51 "bullets.cpp"
 var $35=(($34+88)|0); //@line 51 "bullets.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 51 "bullets.cpp"
 if(($36|0)==-1){ label=4;break;}else{label=9;break;}
 case 4: 
 var $38=$3; //@line 56 "bullets.cpp"
 var $39=(($38)|0); //@line 56 "bullets.cpp"
 var $40=$39; //@line 56 "bullets.cpp"
 var $41=__Z12freeSlavesOfP17genericUnitStruct($40); //@line 56 "bullets.cpp"
 if($41){label=6;break;}else{label=5;break;} //@line 56 "bullets.cpp"
 case 5: 
 $1=0; //@line 56 "bullets.cpp"
 label=41;break; //@line 56 "bullets.cpp"
 case 6: 
 var $44=$3; //@line 58 "bullets.cpp"
 var $45=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$44); //@line 58 "bullets.cpp"
 var $46=__ZN15vectorListClassI16bulletUnitStructE10removeNodeEm(19920,$45); //@line 58 "bullets.cpp"
 if($46){label=8;break;}else{label=7;break;} //@line 58 "bullets.cpp"
 case 7: 
 $1=0; //@line 59 "bullets.cpp"
 label=41;break; //@line 59 "bullets.cpp"
 case 8: 
 $1=1; //@line 61 "bullets.cpp"
 label=41;break; //@line 61 "bullets.cpp"
 case 9: 
 label=10;break; //@line 65 "bullets.cpp"
 case 10: 
 var $51=$3; //@line 70 "bullets.cpp"
 var $52=(($51)|0); //@line 70 "bullets.cpp"
 var $53=$52; //@line 70 "bullets.cpp"
 var $54=__Z12getUnitFrameP17genericUnitStruct($53); //@line 70 "bullets.cpp"
 $myUnitFrame=$54; //@line 70 "bullets.cpp"
 var $55=$3; //@line 74 "bullets.cpp"
 var $56=(($55)|0); //@line 74 "bullets.cpp"
 var $57=$56; //@line 74 "bullets.cpp"
 var $58=(($57+132)|0); //@line 74 "bullets.cpp"
 var $59=(($58+4)|0); //@line 74 "bullets.cpp"
 var $60=HEAP8[($59)]; //@line 74 "bullets.cpp"
 var $61=($60&255); //@line 74 "bullets.cpp"
 var $62=($61|0)!=0; //@line 74 "bullets.cpp"
 if($62){label=11;break;}else{label=12;break;} //@line 74 "bullets.cpp"
 case 11: 
 $1=1; //@line 75 "bullets.cpp"
 label=41;break; //@line 75 "bullets.cpp"
 case 12: 
 var $65=$3; //@line 78 "bullets.cpp"
 var $66=(($65)|0); //@line 78 "bullets.cpp"
 var $67=$66; //@line 78 "bullets.cpp"
 var $68=(($67+96)|0); //@line 78 "bullets.cpp"
 var $69=HEAP8[($68)]; //@line 78 "bullets.cpp"
 var $70=(($69)&1); //@line 78 "bullets.cpp"
 if($70){label=13;break;}else{label=14;break;} //@line 78 "bullets.cpp"
 case 13: 
 var $72=HEAPF64[((19560)>>3)]; //@line 79 "bullets.cpp"
 var $73=$3; //@line 79 "bullets.cpp"
 var $74=(($73)|0); //@line 79 "bullets.cpp"
 var $75=$74; //@line 79 "bullets.cpp"
 var $76=(($75+104)|0); //@line 79 "bullets.cpp"
 var $77=HEAPF64[(($76)>>3)]; //@line 79 "bullets.cpp"
 var $78=($72)+($77); //@line 79 "bullets.cpp"
 var $79=$3; //@line 79 "bullets.cpp"
 var $80=(($79)|0); //@line 79 "bullets.cpp"
 var $81=$80; //@line 79 "bullets.cpp"
 var $82=(($81+8)|0); //@line 79 "bullets.cpp"
 HEAPF64[(($82)>>3)]=$78; //@line 79 "bullets.cpp"
 var $83=HEAPF64[((19568)>>3)]; //@line 80 "bullets.cpp"
 var $84=$3; //@line 80 "bullets.cpp"
 var $85=(($84)|0); //@line 80 "bullets.cpp"
 var $86=$85; //@line 80 "bullets.cpp"
 var $87=(($86+112)|0); //@line 80 "bullets.cpp"
 var $88=HEAPF64[(($87)>>3)]; //@line 80 "bullets.cpp"
 var $89=($83)+($88); //@line 80 "bullets.cpp"
 var $90=$3; //@line 80 "bullets.cpp"
 var $91=(($90)|0); //@line 80 "bullets.cpp"
 var $92=$91; //@line 80 "bullets.cpp"
 var $93=(($92+16)|0); //@line 80 "bullets.cpp"
 HEAPF64[(($93)>>3)]=$89; //@line 80 "bullets.cpp"
 label=14;break; //@line 81 "bullets.cpp"
 case 14: 
 var $95=$3; //@line 85 "bullets.cpp"
 var $96=(($95)|0); //@line 85 "bullets.cpp"
 var $97=$96; //@line 85 "bullets.cpp"
 var $98=(($97+156)|0); //@line 85 "bullets.cpp"
 var $99=HEAP8[($98)]; //@line 85 "bullets.cpp"
 var $100=(($99)&1); //@line 85 "bullets.cpp"
 if($100){label=15;break;}else{label=18;break;} //@line 85 "bullets.cpp"
 case 15: 
 var $102=$3; //@line 86 "bullets.cpp"
 var $103=(($102)|0); //@line 86 "bullets.cpp"
 var $104=$103; //@line 86 "bullets.cpp"
 var $105=__Z23unintelligentLinealMoveP17genericUnitStruct($104); //@line 86 "bullets.cpp"
 if($105){label=17;break;}else{label=16;break;} //@line 86 "bullets.cpp"
 case 16: 
 $1=0; //@line 87 "bullets.cpp"
 label=41;break; //@line 87 "bullets.cpp"
 case 17: 
 label=21;break; //@line 88 "bullets.cpp"
 case 18: 
 var $109=$3; //@line 91 "bullets.cpp"
 var $110=(($109)|0); //@line 91 "bullets.cpp"
 var $111=$110; //@line 91 "bullets.cpp"
 var $112=(($111+24)|0); //@line 91 "bullets.cpp"
 var $113=HEAP32[(($112)>>2)]; //@line 91 "bullets.cpp"
 if(($113|0)==3){ label=19;break;}else{label=20;break;}
 case 19: 
 var $115=$3; //@line 94 "bullets.cpp"
 var $116=(($115)|0); //@line 94 "bullets.cpp"
 var $117=$116; //@line 94 "bullets.cpp"
 var $118=(($117+32)|0); //@line 94 "bullets.cpp"
 var $119=HEAPF64[(($118)>>3)]; //@line 94 "bullets.cpp"
 var $120=$3; //@line 94 "bullets.cpp"
 var $121=(($120)|0); //@line 94 "bullets.cpp"
 var $122=$121; //@line 94 "bullets.cpp"
 var $123=(($122+8)|0); //@line 94 "bullets.cpp"
 var $124=HEAPF64[(($123)>>3)]; //@line 94 "bullets.cpp"
 var $125=($124)+($119); //@line 94 "bullets.cpp"
 HEAPF64[(($123)>>3)]=$125; //@line 94 "bullets.cpp"
 var $126=$3; //@line 95 "bullets.cpp"
 var $127=(($126)|0); //@line 95 "bullets.cpp"
 var $128=$127; //@line 95 "bullets.cpp"
 var $129=(($128+40)|0); //@line 95 "bullets.cpp"
 var $130=HEAPF64[(($129)>>3)]; //@line 95 "bullets.cpp"
 var $131=$3; //@line 95 "bullets.cpp"
 var $132=(($131)|0); //@line 95 "bullets.cpp"
 var $133=$132; //@line 95 "bullets.cpp"
 var $134=(($133+16)|0); //@line 95 "bullets.cpp"
 var $135=HEAPF64[(($134)>>3)]; //@line 95 "bullets.cpp"
 var $136=($135)+($130); //@line 95 "bullets.cpp"
 HEAPF64[(($134)>>3)]=$136; //@line 95 "bullets.cpp"
 label=20;break; //@line 96 "bullets.cpp"
 case 20: 
 label=21;break;
 case 21: 
 var $139=$wasGoingToPoint; //@line 101 "bullets.cpp"
 var $140=(($139)&1); //@line 101 "bullets.cpp"
 if($140){label=22;break;}else{label=24;break;} //@line 101 "bullets.cpp"
 case 22: 
 var $142=$3; //@line 101 "bullets.cpp"
 var $143=(($142)|0); //@line 101 "bullets.cpp"
 var $144=$143; //@line 101 "bullets.cpp"
 var $145=(($144+156)|0); //@line 101 "bullets.cpp"
 var $146=HEAP8[($145)]; //@line 101 "bullets.cpp"
 var $147=(($146)&1); //@line 101 "bullets.cpp"
 if($147){label=24;break;}else{label=23;break;} //@line 101 "bullets.cpp"
 case 23: 
 var $149=(($objPointer)|0); //@line 105 "bullets.cpp"
 HEAP32[(($149)>>2)]=3; //@line 105 "bullets.cpp"
 var $150=(($objPointer+8)|0); //@line 106 "bullets.cpp"
 HEAP32[(($150)>>2)]=0; //@line 106 "bullets.cpp"
 var $151=(($objPointer+4)|0); //@line 107 "bullets.cpp"
 HEAP8[($151)]=7; //@line 107 "bullets.cpp"
 var $152=$3; //@line 110 "bullets.cpp"
 var $153=__Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($152,$objPointer); //@line 110 "bullets.cpp"
 label=24;break; //@line 111 "bullets.cpp"
 case 24: 
 var $155=$3; //@line 114 "bullets.cpp"
 var $156=(($155)|0); //@line 114 "bullets.cpp"
 var $157=$156; //@line 114 "bullets.cpp"
 var $158=__Z12getUnitFrameP17genericUnitStruct($157); //@line 114 "bullets.cpp"
 $myUnitFrame=$158; //@line 114 "bullets.cpp"
 var $159=$3; //@line 117 "bullets.cpp"
 var $160=(($159)|0); //@line 117 "bullets.cpp"
 var $161=$160; //@line 117 "bullets.cpp"
 var $162=(($161+96)|0); //@line 117 "bullets.cpp"
 var $163=HEAP8[($162)]; //@line 117 "bullets.cpp"
 var $164=(($163)&1); //@line 117 "bullets.cpp"
 if($164){label=25;break;}else{label=26;break;} //@line 117 "bullets.cpp"
 case 25: 
 var $166=$3; //@line 118 "bullets.cpp"
 var $167=(($166)|0); //@line 118 "bullets.cpp"
 var $168=$167; //@line 118 "bullets.cpp"
 var $169=(($168+8)|0); //@line 118 "bullets.cpp"
 var $170=HEAPF64[(($169)>>3)]; //@line 118 "bullets.cpp"
 var $171=HEAPF64[((19560)>>3)]; //@line 118 "bullets.cpp"
 var $172=($170)-($171); //@line 118 "bullets.cpp"
 var $173=$3; //@line 118 "bullets.cpp"
 var $174=(($173)|0); //@line 118 "bullets.cpp"
 var $175=$174; //@line 118 "bullets.cpp"
 var $176=(($175+104)|0); //@line 118 "bullets.cpp"
 HEAPF64[(($176)>>3)]=$172; //@line 118 "bullets.cpp"
 var $177=$3; //@line 119 "bullets.cpp"
 var $178=(($177)|0); //@line 119 "bullets.cpp"
 var $179=$178; //@line 119 "bullets.cpp"
 var $180=(($179+16)|0); //@line 119 "bullets.cpp"
 var $181=HEAPF64[(($180)>>3)]; //@line 119 "bullets.cpp"
 var $182=HEAPF64[((19568)>>3)]; //@line 119 "bullets.cpp"
 var $183=($181)-($182); //@line 119 "bullets.cpp"
 var $184=$3; //@line 119 "bullets.cpp"
 var $185=(($184)|0); //@line 119 "bullets.cpp"
 var $186=$185; //@line 119 "bullets.cpp"
 var $187=(($186+112)|0); //@line 119 "bullets.cpp"
 HEAPF64[(($187)>>3)]=$183; //@line 119 "bullets.cpp"
 label=26;break; //@line 120 "bullets.cpp"
 case 26: 
 var $189=$3; //@line 123 "bullets.cpp"
 var $190=(($189)|0); //@line 123 "bullets.cpp"
 var $191=$190; //@line 123 "bullets.cpp"
 var $192=__Z13moveWithOwnerP17genericUnitStruct($191); //@line 123 "bullets.cpp"
 if($192){label=28;break;}else{label=27;break;} //@line 123 "bullets.cpp"
 case 27: 
 $1=0; //@line 123 "bullets.cpp"
 label=41;break; //@line 123 "bullets.cpp"
 case 28: 
 var $195=$3; //@line 127 "bullets.cpp"
 var $196=(($195)|0); //@line 127 "bullets.cpp"
 var $197=$196; //@line 127 "bullets.cpp"
 var $198=__Z21isUnitInsideTheScreenP17genericUnitStruct($197); //@line 127 "bullets.cpp"
 if($198){label=29;break;}else{label=30;break;} //@line 127 "bullets.cpp"
 case 29: 
 var $200=$3; //@line 130 "bullets.cpp"
 var $201=(($200)|0); //@line 130 "bullets.cpp"
 var $202=(($201+196)|0); //@line 130 "bullets.cpp"
 HEAP32[(($202)>>2)]=0; //@line 130 "bullets.cpp"
 label=40;break; //@line 131 "bullets.cpp"
 case 30: 
 var $204=$3; //@line 133 "bullets.cpp"
 var $205=(($204)|0); //@line 133 "bullets.cpp"
 var $206=(($205+196)|0); //@line 133 "bullets.cpp"
 var $207=HEAP32[(($206)>>2)]; //@line 133 "bullets.cpp"
 var $208=($207|0)<=0; //@line 133 "bullets.cpp"
 if($208){label=31;break;}else{label=32;break;} //@line 133 "bullets.cpp"
 case 31: 
 var $210=$3; //@line 135 "bullets.cpp"
 var $211=(($210)|0); //@line 135 "bullets.cpp"
 var $212=(($211+180)|0); //@line 135 "bullets.cpp"
 var $213=HEAP32[(($212)>>2)]; //@line 135 "bullets.cpp"
 var $214=$3; //@line 135 "bullets.cpp"
 var $215=(($214)|0); //@line 135 "bullets.cpp"
 var $216=(($215+196)|0); //@line 135 "bullets.cpp"
 HEAP32[(($216)>>2)]=$213; //@line 135 "bullets.cpp"
 label=33;break; //@line 137 "bullets.cpp"
 case 32: 
 var $218=$3; //@line 139 "bullets.cpp"
 var $219=(($218)|0); //@line 139 "bullets.cpp"
 var $220=(($219+196)|0); //@line 139 "bullets.cpp"
 var $221=HEAP32[(($220)>>2)]; //@line 139 "bullets.cpp"
 var $222=((($221)-(1))|0); //@line 139 "bullets.cpp"
 HEAP32[(($220)>>2)]=$222; //@line 139 "bullets.cpp"
 label=33;break;
 case 33: 
 var $224=$3; //@line 143 "bullets.cpp"
 var $225=(($224)|0); //@line 143 "bullets.cpp"
 var $226=(($225+196)|0); //@line 143 "bullets.cpp"
 var $227=HEAP32[(($226)>>2)]; //@line 143 "bullets.cpp"
 var $228=($227|0)<=0; //@line 143 "bullets.cpp"
 if($228){label=34;break;}else{label=39;break;} //@line 143 "bullets.cpp"
 case 34: 
 var $230=$3; //@line 146 "bullets.cpp"
 var $231=(($230)|0); //@line 146 "bullets.cpp"
 var $232=$231; //@line 146 "bullets.cpp"
 var $233=__Z12freeSlavesOfP17genericUnitStruct($232); //@line 146 "bullets.cpp"
 if($233){label=36;break;}else{label=35;break;} //@line 146 "bullets.cpp"
 case 35: 
 $1=0; //@line 146 "bullets.cpp"
 label=41;break; //@line 146 "bullets.cpp"
 case 36: 
 var $236=$3; //@line 148 "bullets.cpp"
 var $237=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$236); //@line 148 "bullets.cpp"
 var $238=__ZN15vectorListClassI16bulletUnitStructE10removeNodeEm(19920,$237); //@line 148 "bullets.cpp"
 if($238){label=38;break;}else{label=37;break;} //@line 148 "bullets.cpp"
 case 37: 
 $1=0; //@line 149 "bullets.cpp"
 label=41;break; //@line 149 "bullets.cpp"
 case 38: 
 $1=1; //@line 151 "bullets.cpp"
 label=41;break; //@line 151 "bullets.cpp"
 case 39: 
 label=40;break;
 case 40: 
 $1=1; //@line 156 "bullets.cpp"
 label=41;break; //@line 156 "bullets.cpp"
 case 41: 
 var $244=$1; //@line 157 "bullets.cpp"
 STACKTOP=sp;return $244; //@line 157 "bullets.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE10removeNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 262 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 262 "./vectorlist.h"
 var $7=(($6)&1); //@line 262 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 262 "./vectorlist.h"
 case 2: 
 $1=0; //@line 262 "./vectorlist.h"
 label=17;break; //@line 262 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 265 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 265 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 265 "./vectorlist.h"
 var $13=(($12+((($10)*(216))&-1))|0); //@line 265 "./vectorlist.h"
 var $14=(($13+208)|0); //@line 265 "./vectorlist.h"
 HEAP8[($14)]=1; //@line 265 "./vectorlist.h"
 var $15=$3; //@line 269 "./vectorlist.h"
 var $16=(($4+12)|0); //@line 269 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 269 "./vectorlist.h"
 var $18=($15>>>0)<($17>>>0); //@line 269 "./vectorlist.h"
 if($18){label=4;break;}else{label=5;break;} //@line 269 "./vectorlist.h"
 case 4: 
 var $20=$3; //@line 271 "./vectorlist.h"
 var $21=(($4+12)|0); //@line 271 "./vectorlist.h"
 HEAP32[(($21)>>2)]=$20; //@line 271 "./vectorlist.h"
 label=5;break; //@line 272 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 275 "./vectorlist.h"
 var $24=(($4+8)|0); //@line 275 "./vectorlist.h"
 var $25=HEAP32[(($24)>>2)]; //@line 275 "./vectorlist.h"
 var $26=($23|0)==($25|0); //@line 275 "./vectorlist.h"
 if($26){label=6;break;}else{label=16;break;} //@line 275 "./vectorlist.h"
 case 6: 
 var $28=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $29=HEAP32[(($28)>>2)]; //@line 282 "./vectorlist.h"
 var $30=(($4+8)|0); //@line 282 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 282 "./vectorlist.h"
 var $32=(($29+((($31)*(216))&-1))|0); //@line 282 "./vectorlist.h"
 var $33=((($32)-(216))|0); //@line 282 "./vectorlist.h"
 $node=$33; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 7: 
 var $35=$node; //@line 282 "./vectorlist.h"
 var $36=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 282 "./vectorlist.h"
 var $38=($35>>>0)>=($37>>>0); //@line 282 "./vectorlist.h"
 if($38){label=8;break;}else{label=12;break;} //@line 282 "./vectorlist.h"
 case 8: 
 var $40=$node; //@line 285 "./vectorlist.h"
 var $41=(($40+208)|0); //@line 285 "./vectorlist.h"
 var $42=HEAP8[($41)]; //@line 285 "./vectorlist.h"
 var $43=(($42)&1); //@line 285 "./vectorlist.h"
 if($43){label=10;break;}else{label=9;break;} //@line 285 "./vectorlist.h"
 case 9: 
 label=12;break; //@line 285 "./vectorlist.h"
 case 10: 
 label=11;break; //@line 286 "./vectorlist.h"
 case 11: 
 var $47=$node; //@line 282 "./vectorlist.h"
 var $48=((($47)-(216))|0); //@line 282 "./vectorlist.h"
 $node=$48; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 12: 
 var $50=$node; //@line 289 "./vectorlist.h"
 var $51=(($4+20)|0); //@line 289 "./vectorlist.h"
 var $52=HEAP32[(($51)>>2)]; //@line 289 "./vectorlist.h"
 var $53=($50>>>0)<($52>>>0); //@line 289 "./vectorlist.h"
 if($53){label=13;break;}else{label=14;break;} //@line 289 "./vectorlist.h"
 case 13: 
 var $55=(($4+4)|0); //@line 291 "./vectorlist.h"
 var $56=HEAP32[(($55)>>2)]; //@line 291 "./vectorlist.h"
 var $57=(($4+8)|0); //@line 291 "./vectorlist.h"
 HEAP32[(($57)>>2)]=$56; //@line 291 "./vectorlist.h"
 label=15;break; //@line 292 "./vectorlist.h"
 case 14: 
 var $59=$node; //@line 294 "./vectorlist.h"
 var $60=(($4+20)|0); //@line 294 "./vectorlist.h"
 var $61=HEAP32[(($60)>>2)]; //@line 294 "./vectorlist.h"
 var $62=$59; //@line 294 "./vectorlist.h"
 var $63=$61; //@line 294 "./vectorlist.h"
 var $64=((($62)-($63))|0); //@line 294 "./vectorlist.h"
 var $65=(((($64|0))/(216))&-1); //@line 294 "./vectorlist.h"
 var $66=(($4+8)|0); //@line 294 "./vectorlist.h"
 HEAP32[(($66)>>2)]=$65; //@line 294 "./vectorlist.h"
 label=15;break;
 case 15: 
 label=16;break; //@line 297 "./vectorlist.h"
 case 16: 
 $1=1; //@line 299 "./vectorlist.h"
 label=17;break; //@line 299 "./vectorlist.h"
 case 17: 
 var $70=$1; //@line 300 "./vectorlist.h"
 STACKTOP=sp;return $70; //@line 300 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E($this,$node){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$node;
 var $3=$1;
 var $4=$2; //@line 103 "./vectorlist.h"
 var $5=(($3+20)|0); //@line 103 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 103 "./vectorlist.h"
 var $7=$4; //@line 103 "./vectorlist.h"
 var $8=$6; //@line 103 "./vectorlist.h"
 var $9=((($7)-($8))|0); //@line 103 "./vectorlist.h"
 var $10=(((($9|0))/(216))&-1); //@line 103 "./vectorlist.h"
 STACKTOP=sp;return $10; //@line 103 "./vectorlist.h"
}


function __Z11moveBulletsm($frameNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $unit;
 $2=$frameNumber;
 var $3=__ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv(19920); //@line 167 "bullets.cpp"
 $unit=$3; //@line 167 "bullets.cpp"
 label=2;break; //@line 167 "bullets.cpp"
 case 2: 
 var $5=$unit; //@line 167 "bullets.cpp"
 var $6=($5|0)!=0; //@line 167 "bullets.cpp"
 if($6){label=3;break;}else{label=9;break;} //@line 167 "bullets.cpp"
 case 3: 
 var $8=$unit; //@line 169 "bullets.cpp"
 var $9=(($8)|0); //@line 169 "bullets.cpp"
 var $10=$9; //@line 169 "bullets.cpp"
 var $11=(($10+130)|0); //@line 169 "bullets.cpp"
 var $12=HEAP8[($11)]; //@line 169 "bullets.cpp"
 var $13=(($12)&1); //@line 169 "bullets.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 169 "bullets.cpp"
 case 4: 
 label=8;break; //@line 169 "bullets.cpp"
 case 5: 
 var $16=$2; //@line 172 "bullets.cpp"
 var $17=$unit; //@line 172 "bullets.cpp"
 var $18=__Z14moveBulletUnitmR20vectorListNodeStructI16bulletUnitStructE($16,$17); //@line 172 "bullets.cpp"
 if($18){label=7;break;}else{label=6;break;} //@line 172 "bullets.cpp"
 case 6: 
 $1=0; //@line 172 "bullets.cpp"
 label=10;break; //@line 172 "bullets.cpp"
 case 7: 
 label=8;break; //@line 173 "bullets.cpp"
 case 8: 
 var $22=$unit; //@line 167 "bullets.cpp"
 var $23=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19920,$22); //@line 167 "bullets.cpp"
 $unit=$23; //@line 167 "bullets.cpp"
 label=2;break; //@line 167 "bullets.cpp"
 case 9: 
 $1=1; //@line 175 "bullets.cpp"
 label=10;break; //@line 175 "bullets.cpp"
 case 10: 
 var $26=$1; //@line 176 "bullets.cpp"
 STACKTOP=sp;return $26; //@line 176 "bullets.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $5=HEAP32[(($4)>>2)]; //@line 320 "./vectorlist.h"
 var $6=(($5)|0); //@line 320 "./vectorlist.h"
 var $7=(($6+208)|0); //@line 320 "./vectorlist.h"
 var $8=HEAP8[($7)]; //@line 320 "./vectorlist.h"
 var $9=(($8)&1); //@line 320 "./vectorlist.h"
 if($9){label=3;break;}else{label=2;break;} //@line 320 "./vectorlist.h"
 case 2: 
 var $11=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 320 "./vectorlist.h"
 $1=$12; //@line 320 "./vectorlist.h"
 label=4;break; //@line 320 "./vectorlist.h"
 case 3: 
 var $14=(($3+20)|0); //@line 321 "./vectorlist.h"
 var $15=HEAP32[(($14)>>2)]; //@line 321 "./vectorlist.h"
 var $16=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($3,$15); //@line 321 "./vectorlist.h"
 $1=$16; //@line 321 "./vectorlist.h"
 label=4;break; //@line 321 "./vectorlist.h"
 case 4: 
 var $18=$1; //@line 322 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 322 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($this,$since){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$since;
 var $4=$2;
 var $5=$3; //@line 348 "./vectorlist.h"
 var $6=(($5+216)|0); //@line 348 "./vectorlist.h"
 $3=$6; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 2: 
 var $8=$3; //@line 348 "./vectorlist.h"
 var $9=(($4+20)|0); //@line 348 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 348 "./vectorlist.h"
 var $11=(($4+4)|0); //@line 348 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 348 "./vectorlist.h"
 var $13=(($10+((($12)*(216))&-1))|0); //@line 348 "./vectorlist.h"
 var $14=($8>>>0)<($13>>>0); //@line 348 "./vectorlist.h"
 if($14){label=3;break;}else{label=7;break;} //@line 348 "./vectorlist.h"
 case 3: 
 var $16=$3; //@line 351 "./vectorlist.h"
 var $17=(($16+208)|0); //@line 351 "./vectorlist.h"
 var $18=HEAP8[($17)]; //@line 351 "./vectorlist.h"
 var $19=(($18)&1); //@line 351 "./vectorlist.h"
 if($19){label=5;break;}else{label=4;break;} //@line 351 "./vectorlist.h"
 case 4: 
 label=7;break; //@line 351 "./vectorlist.h"
 case 5: 
 label=6;break; //@line 352 "./vectorlist.h"
 case 6: 
 var $23=$3; //@line 348 "./vectorlist.h"
 var $24=(($23+216)|0); //@line 348 "./vectorlist.h"
 $3=$24; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 7: 
 var $26=$3; //@line 354 "./vectorlist.h"
 var $27=(($4+20)|0); //@line 354 "./vectorlist.h"
 var $28=HEAP32[(($27)>>2)]; //@line 354 "./vectorlist.h"
 var $29=(($4+4)|0); //@line 354 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 354 "./vectorlist.h"
 var $31=(($28+((($30)*(216))&-1))|0); //@line 354 "./vectorlist.h"
 var $32=($26>>>0)>=($31>>>0); //@line 354 "./vectorlist.h"
 if($32){label=8;break;}else{label=9;break;} //@line 354 "./vectorlist.h"
 case 8: 
 $1=0; //@line 354 "./vectorlist.h"
 label=10;break; //@line 354 "./vectorlist.h"
 case 9: 
 var $35=$3; //@line 355 "./vectorlist.h"
 $1=$35; //@line 355 "./vectorlist.h"
 label=10;break; //@line 355 "./vectorlist.h"
 case 10: 
 var $37=$1; //@line 356 "./vectorlist.h"
 STACKTOP=sp;return $37; //@line 356 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z30carrierLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+544)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $desiredNum;
 var $desiredX=sp;
 var $desiredY=(sp)+(64);
 var $minDistanceEnemy=(sp)+(128);
 var $minDistanceBullet=(sp)+(248);
 var $maxDistanceDesiredNum;
 var $tempMinDistance;
 var $i;
 var $otherU;
 var $otherB;
 var $onePlayer;
 var $otherUX;
 var $otherUY;
 var $distance;
 var $l;
 var $2=(sp)+(368);
 var $3=(sp)+(448);
 var $minY;
 var $maxY;
 var $r;
 var $value1;
 var $value2;
 var $x;
 var $y;
 var $followMe;
 var $4=(sp)+(528);
 var $goX;
 var $goY;
 var $tmpGoX;
 var $tmpGoY;
 $1=$unit;
 $desiredNum=15; //@line 43 "carriersai.cpp"
 var $5=$1; //@line 63 "carriersai.cpp"
 var $6=(($5)|0); //@line 63 "carriersai.cpp"
 var $7=(($6+220)|0); //@line 63 "carriersai.cpp"
 var $8=HEAP8[($7)]; //@line 63 "carriersai.cpp"
 var $9=(($8)&1); //@line 63 "carriersai.cpp"
 if($9){label=2;break;}else{label=3;break;} //@line 63 "carriersai.cpp"
 case 2: 
 var $11=$1; //@line 65 "carriersai.cpp"
 var $12=(($11)|0); //@line 65 "carriersai.cpp"
 var $13=(($12+220)|0); //@line 65 "carriersai.cpp"
 HEAP8[($13)]=0; //@line 65 "carriersai.cpp"
 var $14=$1; //@line 66 "carriersai.cpp"
 var $15=(($14)|0); //@line 66 "carriersai.cpp"
 var $16=(($15+197)|0); //@line 66 "carriersai.cpp"
 HEAP8[($16)]=1; //@line 66 "carriersai.cpp"
 var $17=$1; //@line 67 "carriersai.cpp"
 var $18=(($17)|0); //@line 67 "carriersai.cpp"
 var $19=(($18+196)|0); //@line 67 "carriersai.cpp"
 HEAP8[($19)]=1; //@line 67 "carriersai.cpp"
 label=3;break; //@line 68 "carriersai.cpp"
 case 3: 
 $i=0; //@line 71 "carriersai.cpp"
 label=4;break; //@line 71 "carriersai.cpp"
 case 4: 
 var $22=$i; //@line 71 "carriersai.cpp"
 var $23=($22|0)<15; //@line 71 "carriersai.cpp"
 if($23){label=5;break;}else{label=55;break;} //@line 71 "carriersai.cpp"
 case 5: 
 var $25=$1; //@line 75 "carriersai.cpp"
 var $26=(($25)|0); //@line 75 "carriersai.cpp"
 var $27=$26; //@line 75 "carriersai.cpp"
 var $28=(($27+8)|0); //@line 75 "carriersai.cpp"
 var $29=HEAPF64[(($28)>>3)]; //@line 75 "carriersai.cpp"
 var $30=$29<160; //@line 75 "carriersai.cpp"
 if($30){label=6;break;}else{label=7;break;} //@line 75 "carriersai.cpp"
 case 6: 
 var $32=$1; //@line 79 "carriersai.cpp"
 var $33=(($32)|0); //@line 79 "carriersai.cpp"
 var $34=$33; //@line 79 "carriersai.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($2,$34); //@line 79 "carriersai.cpp"
 var $35=(($2+16)|0); //@line 79 "carriersai.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 79 "carriersai.cpp"
 var $37=$1; //@line 80 "carriersai.cpp"
 var $38=(($37)|0); //@line 80 "carriersai.cpp"
 var $39=$38; //@line 80 "carriersai.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($3,$39); //@line 80 "carriersai.cpp"
 var $40=(($3+40)|0); //@line 80 "carriersai.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 80 "carriersai.cpp"
 var $42=((($36)-($41))|0); //@line 80 "carriersai.cpp"
 var $43=(((-$42))|0); //@line 80 "carriersai.cpp"
 var $44=$i; //@line 80 "carriersai.cpp"
 var $45=(($desiredX+($44<<2))|0); //@line 80 "carriersai.cpp"
 HEAP32[(($45)>>2)]=$43; //@line 80 "carriersai.cpp"
 var $46=_rand(); //@line 81 "carriersai.cpp"
 var $47=(((($46|0))%(300))&-1); //@line 81 "carriersai.cpp"
 var $48=((($47)-(250))|0); //@line 81 "carriersai.cpp"
 var $49=$i; //@line 81 "carriersai.cpp"
 var $50=(($desiredY+($49<<2))|0); //@line 81 "carriersai.cpp"
 HEAP32[(($50)>>2)]=$48; //@line 81 "carriersai.cpp"
 label=28;break; //@line 82 "carriersai.cpp"
 case 7: 
 var $52=$1; //@line 87 "carriersai.cpp"
 var $53=(($52)|0); //@line 87 "carriersai.cpp"
 var $54=$53; //@line 87 "carriersai.cpp"
 var $55=(($54+8)|0); //@line 87 "carriersai.cpp"
 var $56=HEAPF64[(($55)>>3)]; //@line 87 "carriersai.cpp"
 var $57=$56<270; //@line 87 "carriersai.cpp"
 if($57){label=8;break;}else{label=12;break;} //@line 87 "carriersai.cpp"
 case 8: 
 var $59=$1; //@line 89 "carriersai.cpp"
 var $60=(($59)|0); //@line 89 "carriersai.cpp"
 var $61=$60; //@line 89 "carriersai.cpp"
 var $62=(($61+144)|0); //@line 89 "carriersai.cpp"
 var $63=(($62+4)|0); //@line 89 "carriersai.cpp"
 var $64=HEAP8[($63)]; //@line 89 "carriersai.cpp"
 var $65=($64&255); //@line 89 "carriersai.cpp"
 var $66=($65|0)!=0; //@line 89 "carriersai.cpp"
 if($66){label=9;break;}else{label=10;break;} //@line 89 "carriersai.cpp"
 case 9: 
 $minY=38; //@line 94 "carriersai.cpp"
 $maxY=350; //@line 95 "carriersai.cpp"
 label=11;break; //@line 96 "carriersai.cpp"
 case 10: 
 $minY=38; //@line 98 "carriersai.cpp"
 $maxY=400; //@line 99 "carriersai.cpp"
 label=11;break;
 case 11: 
 label=13;break; //@line 101 "carriersai.cpp"
 case 12: 
 $minY=38; //@line 103 "carriersai.cpp"
 $maxY=462; //@line 104 "carriersai.cpp"
 label=13;break;
 case 13: 
 var $72=$1; //@line 108 "carriersai.cpp"
 var $73=(($72)|0); //@line 108 "carriersai.cpp"
 var $74=$73; //@line 108 "carriersai.cpp"
 var $75=(($74+8)|0); //@line 108 "carriersai.cpp"
 var $76=HEAPF64[(($75)>>3)]; //@line 108 "carriersai.cpp"
 var $77=(($76)&-1); //@line 108 "carriersai.cpp"
 var $78=((($77)-(10))|0); //@line 108 "carriersai.cpp"
 var $79=_rand(); //@line 108 "carriersai.cpp"
 var $80=(((($79|0))%(60))&-1); //@line 108 "carriersai.cpp"
 var $81=((($78)-($80))|0); //@line 108 "carriersai.cpp"
 var $82=$i; //@line 108 "carriersai.cpp"
 var $83=(($desiredX+($82<<2))|0); //@line 108 "carriersai.cpp"
 HEAP32[(($83)>>2)]=$81; //@line 108 "carriersai.cpp"
 var $84=$1; //@line 109 "carriersai.cpp"
 var $85=(($84)|0); //@line 109 "carriersai.cpp"
 var $86=$85; //@line 109 "carriersai.cpp"
 var $87=(($86+16)|0); //@line 109 "carriersai.cpp"
 var $88=HEAPF64[(($87)>>3)]; //@line 109 "carriersai.cpp"
 var $89=(($88)&-1); //@line 109 "carriersai.cpp"
 var $90=_rand(); //@line 109 "carriersai.cpp"
 var $91=(((($90|0))%(200))&-1); //@line 109 "carriersai.cpp"
 var $92=((($89)-($91))|0); //@line 109 "carriersai.cpp"
 var $93=((($92)+(100))|0); //@line 109 "carriersai.cpp"
 var $94=$i; //@line 109 "carriersai.cpp"
 var $95=(($desiredY+($94<<2))|0); //@line 109 "carriersai.cpp"
 HEAP32[(($95)>>2)]=$93; //@line 109 "carriersai.cpp"
 $l=0; //@line 112 "carriersai.cpp"
 label=14;break; //@line 112 "carriersai.cpp"
 case 14: 
 var $97=$l; //@line 112 "carriersai.cpp"
 var $98=($97|0)<20; //@line 112 "carriersai.cpp"
 if($98){label=15;break;}else{var $114=0;label=18;break;} //@line 112 "carriersai.cpp"
 case 15: 
 var $100=$i; //@line 112 "carriersai.cpp"
 var $101=(($desiredY+($100<<2))|0); //@line 112 "carriersai.cpp"
 var $102=HEAP32[(($101)>>2)]; //@line 112 "carriersai.cpp"
 var $103=$minY; //@line 112 "carriersai.cpp"
 var $104=($102|0)<($103|0); //@line 112 "carriersai.cpp"
 if($104){var $112=1;label=17;break;}else{label=16;break;} //@line 112 "carriersai.cpp"
 case 16: 
 var $106=$i; //@line 112 "carriersai.cpp"
 var $107=(($desiredY+($106<<2))|0); //@line 112 "carriersai.cpp"
 var $108=HEAP32[(($107)>>2)]; //@line 112 "carriersai.cpp"
 var $109=$maxY; //@line 112 "carriersai.cpp"
 var $110=($108|0)>($109|0); //@line 112 "carriersai.cpp"
 var $112=$110;label=17;break; //@line 112 "carriersai.cpp"
 case 17: 
 var $112;
 var $114=$112;label=18;break;
 case 18: 
 var $114;
 if($114){label=19;break;}else{label=21;break;}
 case 19: 
 var $116=$1; //@line 115 "carriersai.cpp"
 var $117=(($116)|0); //@line 115 "carriersai.cpp"
 var $118=$117; //@line 115 "carriersai.cpp"
 var $119=(($118+16)|0); //@line 115 "carriersai.cpp"
 var $120=HEAPF64[(($119)>>3)]; //@line 115 "carriersai.cpp"
 var $121=(($120)&-1); //@line 115 "carriersai.cpp"
 var $122=_rand(); //@line 115 "carriersai.cpp"
 var $123=(((($122|0))%(200))&-1); //@line 115 "carriersai.cpp"
 var $124=((($121)-($123))|0); //@line 115 "carriersai.cpp"
 var $125=((($124)+(100))|0); //@line 115 "carriersai.cpp"
 var $126=$i; //@line 115 "carriersai.cpp"
 var $127=(($desiredY+($126<<2))|0); //@line 115 "carriersai.cpp"
 HEAP32[(($127)>>2)]=$125; //@line 115 "carriersai.cpp"
 label=20;break; //@line 116 "carriersai.cpp"
 case 20: 
 var $129=$l; //@line 113 "carriersai.cpp"
 var $130=((($129)+(1))|0); //@line 113 "carriersai.cpp"
 $l=$130; //@line 113 "carriersai.cpp"
 label=14;break; //@line 113 "carriersai.cpp"
 case 21: 
 var $132=$i; //@line 118 "carriersai.cpp"
 var $133=(($desiredY+($132<<2))|0); //@line 118 "carriersai.cpp"
 var $134=HEAP32[(($133)>>2)]; //@line 118 "carriersai.cpp"
 var $135=$minY; //@line 118 "carriersai.cpp"
 var $136=($134|0)<($135|0); //@line 118 "carriersai.cpp"
 if($136){label=22;break;}else{label=23;break;} //@line 118 "carriersai.cpp"
 case 22: 
 var $138=$minY; //@line 118 "carriersai.cpp"
 var $144=$138;label=24;break; //@line 118 "carriersai.cpp"
 case 23: 
 var $140=$i; //@line 118 "carriersai.cpp"
 var $141=(($desiredY+($140<<2))|0); //@line 118 "carriersai.cpp"
 var $142=HEAP32[(($141)>>2)]; //@line 118 "carriersai.cpp"
 var $144=$142;label=24;break; //@line 118 "carriersai.cpp"
 case 24: 
 var $144; //@line 118 "carriersai.cpp"
 var $145=$i; //@line 118 "carriersai.cpp"
 var $146=(($desiredY+($145<<2))|0); //@line 118 "carriersai.cpp"
 HEAP32[(($146)>>2)]=$144; //@line 118 "carriersai.cpp"
 var $147=$i; //@line 119 "carriersai.cpp"
 var $148=(($desiredY+($147<<2))|0); //@line 119 "carriersai.cpp"
 var $149=HEAP32[(($148)>>2)]; //@line 119 "carriersai.cpp"
 var $150=$maxY; //@line 119 "carriersai.cpp"
 var $151=($149|0)>($150|0); //@line 119 "carriersai.cpp"
 if($151){label=25;break;}else{label=26;break;} //@line 119 "carriersai.cpp"
 case 25: 
 var $153=$maxY; //@line 119 "carriersai.cpp"
 var $159=$153;label=27;break; //@line 119 "carriersai.cpp"
 case 26: 
 var $155=$i; //@line 119 "carriersai.cpp"
 var $156=(($desiredY+($155<<2))|0); //@line 119 "carriersai.cpp"
 var $157=HEAP32[(($156)>>2)]; //@line 119 "carriersai.cpp"
 var $159=$157;label=27;break; //@line 119 "carriersai.cpp"
 case 27: 
 var $159; //@line 119 "carriersai.cpp"
 var $160=$i; //@line 119 "carriersai.cpp"
 var $161=(($desiredY+($160<<2))|0); //@line 119 "carriersai.cpp"
 HEAP32[(($161)>>2)]=$159; //@line 119 "carriersai.cpp"
 label=28;break;
 case 28: 
 var $163=$1; //@line 128 "carriersai.cpp"
 var $164=(($163)|0); //@line 128 "carriersai.cpp"
 var $165=$164; //@line 128 "carriersai.cpp"
 var $166=(($165+8)|0); //@line 128 "carriersai.cpp"
 var $167=HEAPF64[(($166)>>3)]; //@line 128 "carriersai.cpp"
 var $168=$i; //@line 128 "carriersai.cpp"
 var $169=(($desiredX+($168<<2))|0); //@line 128 "carriersai.cpp"
 var $170=HEAP32[(($169)>>2)]; //@line 128 "carriersai.cpp"
 var $171=($170|0); //@line 128 "carriersai.cpp"
 var $172=($167)-($171); //@line 128 "carriersai.cpp"
 var $173=$1; //@line 128 "carriersai.cpp"
 var $174=(($173)|0); //@line 128 "carriersai.cpp"
 var $175=$174; //@line 128 "carriersai.cpp"
 var $176=(($175+8)|0); //@line 128 "carriersai.cpp"
 var $177=HEAPF64[(($176)>>3)]; //@line 128 "carriersai.cpp"
 var $178=$i; //@line 128 "carriersai.cpp"
 var $179=(($desiredX+($178<<2))|0); //@line 128 "carriersai.cpp"
 var $180=HEAP32[(($179)>>2)]; //@line 128 "carriersai.cpp"
 var $181=($180|0); //@line 128 "carriersai.cpp"
 var $182=($177)-($181); //@line 128 "carriersai.cpp"
 var $183=($172)*($182); //@line 128 "carriersai.cpp"
 var $184=$1; //@line 128 "carriersai.cpp"
 var $185=(($184)|0); //@line 128 "carriersai.cpp"
 var $186=$185; //@line 128 "carriersai.cpp"
 var $187=(($186+16)|0); //@line 128 "carriersai.cpp"
 var $188=HEAPF64[(($187)>>3)]; //@line 128 "carriersai.cpp"
 var $189=$i; //@line 128 "carriersai.cpp"
 var $190=(($desiredY+($189<<2))|0); //@line 128 "carriersai.cpp"
 var $191=HEAP32[(($190)>>2)]; //@line 128 "carriersai.cpp"
 var $192=($191|0); //@line 128 "carriersai.cpp"
 var $193=($188)-($192); //@line 128 "carriersai.cpp"
 var $194=$1; //@line 128 "carriersai.cpp"
 var $195=(($194)|0); //@line 128 "carriersai.cpp"
 var $196=$195; //@line 128 "carriersai.cpp"
 var $197=(($196+16)|0); //@line 128 "carriersai.cpp"
 var $198=HEAPF64[(($197)>>3)]; //@line 128 "carriersai.cpp"
 var $199=$i; //@line 128 "carriersai.cpp"
 var $200=(($desiredY+($199<<2))|0); //@line 128 "carriersai.cpp"
 var $201=HEAP32[(($200)>>2)]; //@line 128 "carriersai.cpp"
 var $202=($201|0); //@line 128 "carriersai.cpp"
 var $203=($198)-($202); //@line 128 "carriersai.cpp"
 var $204=($193)*($203); //@line 128 "carriersai.cpp"
 var $205=($183)+($204); //@line 128 "carriersai.cpp"
 var $206=Math_sqrt($205); //@line 128 "carriersai.cpp"
 $distance=$206; //@line 128 "carriersai.cpp"
 var $207=$distance; //@line 130 "carriersai.cpp"
 var $208=$207!=0; //@line 130 "carriersai.cpp"
 if($208){label=29;break;}else{label=30;break;} //@line 130 "carriersai.cpp"
 case 29: 
 var $210=$1; //@line 131 "carriersai.cpp"
 var $211=(($210)|0); //@line 131 "carriersai.cpp"
 var $212=$211; //@line 131 "carriersai.cpp"
 var $213=(($212+8)|0); //@line 131 "carriersai.cpp"
 var $214=HEAPF64[(($213)>>3)]; //@line 131 "carriersai.cpp"
 var $215=$i; //@line 131 "carriersai.cpp"
 var $216=(($desiredX+($215<<2))|0); //@line 131 "carriersai.cpp"
 var $217=HEAP32[(($216)>>2)]; //@line 131 "carriersai.cpp"
 var $218=($217|0); //@line 131 "carriersai.cpp"
 var $219=$1; //@line 131 "carriersai.cpp"
 var $220=(($219)|0); //@line 131 "carriersai.cpp"
 var $221=$220; //@line 131 "carriersai.cpp"
 var $222=(($221+8)|0); //@line 131 "carriersai.cpp"
 var $223=HEAPF64[(($222)>>3)]; //@line 131 "carriersai.cpp"
 var $224=($218)-($223); //@line 131 "carriersai.cpp"
 var $225=$distance; //@line 131 "carriersai.cpp"
 var $226=($225)/(60); //@line 131 "carriersai.cpp"
 var $227=($224)/($226); //@line 131 "carriersai.cpp"
 var $228=($214)+($227); //@line 131 "carriersai.cpp"
 var $229=(($228)&-1); //@line 131 "carriersai.cpp"
 var $230=$i; //@line 131 "carriersai.cpp"
 var $231=(($desiredX+($230<<2))|0); //@line 131 "carriersai.cpp"
 HEAP32[(($231)>>2)]=$229; //@line 131 "carriersai.cpp"
 var $232=$1; //@line 133 "carriersai.cpp"
 var $233=(($232)|0); //@line 133 "carriersai.cpp"
 var $234=$233; //@line 133 "carriersai.cpp"
 var $235=(($234+16)|0); //@line 133 "carriersai.cpp"
 var $236=HEAPF64[(($235)>>3)]; //@line 133 "carriersai.cpp"
 var $237=$i; //@line 133 "carriersai.cpp"
 var $238=(($desiredY+($237<<2))|0); //@line 133 "carriersai.cpp"
 var $239=HEAP32[(($238)>>2)]; //@line 133 "carriersai.cpp"
 var $240=($239|0); //@line 133 "carriersai.cpp"
 var $241=$1; //@line 133 "carriersai.cpp"
 var $242=(($241)|0); //@line 133 "carriersai.cpp"
 var $243=$242; //@line 133 "carriersai.cpp"
 var $244=(($243+16)|0); //@line 133 "carriersai.cpp"
 var $245=HEAPF64[(($244)>>3)]; //@line 133 "carriersai.cpp"
 var $246=($240)-($245); //@line 133 "carriersai.cpp"
 var $247=$distance; //@line 133 "carriersai.cpp"
 var $248=($247)/(60); //@line 133 "carriersai.cpp"
 var $249=($246)/($248); //@line 133 "carriersai.cpp"
 var $250=($236)+($249); //@line 133 "carriersai.cpp"
 var $251=(($250)&-1); //@line 133 "carriersai.cpp"
 var $252=$i; //@line 133 "carriersai.cpp"
 var $253=(($desiredY+($252<<2))|0); //@line 133 "carriersai.cpp"
 HEAP32[(($253)>>2)]=$251; //@line 133 "carriersai.cpp"
 label=30;break; //@line 135 "carriersai.cpp"
 case 30: 
 var $255=HEAP32[((19576)>>2)]; //@line 139 "carriersai.cpp"
 var $256=HEAP32[((19576)>>2)]; //@line 139 "carriersai.cpp"
 var $257=(Math_imul($255,$256)|0); //@line 139 "carriersai.cpp"
 var $258=HEAP32[((19580)>>2)]; //@line 139 "carriersai.cpp"
 var $259=HEAP32[((19580)>>2)]; //@line 139 "carriersai.cpp"
 var $260=(Math_imul($258,$259)|0); //@line 139 "carriersai.cpp"
 var $261=((($257)+($260))|0); //@line 139 "carriersai.cpp"
 var $262=($261>>>0); //@line 139 "carriersai.cpp"
 var $263=$i; //@line 139 "carriersai.cpp"
 var $264=(($minDistanceBullet+($263<<3))|0); //@line 139 "carriersai.cpp"
 HEAPF64[(($264)>>3)]=$262; //@line 139 "carriersai.cpp"
 var $265=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 141 "carriersai.cpp"
 $otherU=$265; //@line 141 "carriersai.cpp"
 label=31;break; //@line 141 "carriersai.cpp"
 case 31: 
 var $267=$otherU; //@line 141 "carriersai.cpp"
 var $268=($267|0)!=0; //@line 141 "carriersai.cpp"
 if($268){label=32;break;}else{label=42;break;} //@line 141 "carriersai.cpp"
 case 32: 
 var $270=$otherU; //@line 146 "carriersai.cpp"
 var $271=(($270)|0); //@line 146 "carriersai.cpp"
 var $272=$271; //@line 146 "carriersai.cpp"
 var $273=(($272+130)|0); //@line 146 "carriersai.cpp"
 var $274=HEAP8[($273)]; //@line 146 "carriersai.cpp"
 var $275=(($274)&1); //@line 146 "carriersai.cpp"
 if($275){label=33;break;}else{label=34;break;} //@line 146 "carriersai.cpp"
 case 33: 
 var $277=$otherU; //@line 146 "carriersai.cpp"
 var $278=(($277)|0); //@line 146 "carriersai.cpp"
 var $279=$278; //@line 146 "carriersai.cpp"
 var $280=(($279)|0); //@line 146 "carriersai.cpp"
 var $281=HEAP32[(($280)>>2)]; //@line 146 "carriersai.cpp"
 var $282=$1; //@line 146 "carriersai.cpp"
 var $283=(($282)|0); //@line 146 "carriersai.cpp"
 var $284=$283; //@line 146 "carriersai.cpp"
 var $285=(($284)|0); //@line 146 "carriersai.cpp"
 var $286=HEAP32[(($285)>>2)]; //@line 146 "carriersai.cpp"
 var $287=($281|0)==($286|0); //@line 146 "carriersai.cpp"
 if($287){label=34;break;}else{label=35;break;} //@line 146 "carriersai.cpp"
 case 34: 
 label=41;break; //@line 147 "carriersai.cpp"
 case 35: 
 var $290=$otherU; //@line 150 "carriersai.cpp"
 var $291=(($290)|0); //@line 150 "carriersai.cpp"
 var $292=$291; //@line 150 "carriersai.cpp"
 var $293=(($292)|0); //@line 150 "carriersai.cpp"
 var $294=HEAP32[(($293)>>2)]; //@line 150 "carriersai.cpp"
 var $295=$1; //@line 150 "carriersai.cpp"
 var $296=(($295)|0); //@line 150 "carriersai.cpp"
 var $297=$296; //@line 150 "carriersai.cpp"
 var $298=(($297+144)|0); //@line 150 "carriersai.cpp"
 var $299=(($298)|0); //@line 150 "carriersai.cpp"
 var $300=HEAP32[(($299)>>2)]; //@line 150 "carriersai.cpp"
 var $301=($294|0)==($300|0); //@line 150 "carriersai.cpp"
 if($301){label=36;break;}else{label=37;break;} //@line 150 "carriersai.cpp"
 case 36: 
 label=41;break; //@line 151 "carriersai.cpp"
 case 37: 
 var $304=$otherU; //@line 163 "carriersai.cpp"
 var $305=(($304)|0); //@line 163 "carriersai.cpp"
 var $306=$305; //@line 163 "carriersai.cpp"
 var $307=(($306+8)|0); //@line 163 "carriersai.cpp"
 var $308=HEAPF64[(($307)>>3)]; //@line 163 "carriersai.cpp"
 $otherUX=$308; //@line 163 "carriersai.cpp"
 var $309=$otherU; //@line 164 "carriersai.cpp"
 var $310=(($309)|0); //@line 164 "carriersai.cpp"
 var $311=$310; //@line 164 "carriersai.cpp"
 var $312=(($311+16)|0); //@line 164 "carriersai.cpp"
 var $313=HEAPF64[(($312)>>3)]; //@line 164 "carriersai.cpp"
 $otherUY=$313; //@line 164 "carriersai.cpp"
 var $314=$i; //@line 167 "carriersai.cpp"
 var $315=(($desiredX+($314<<2))|0); //@line 167 "carriersai.cpp"
 var $316=HEAP32[(($315)>>2)]; //@line 167 "carriersai.cpp"
 var $317=($316|0); //@line 167 "carriersai.cpp"
 var $318=$otherUX; //@line 167 "carriersai.cpp"
 var $319=($317)-($318); //@line 167 "carriersai.cpp"
 var $320=$i; //@line 167 "carriersai.cpp"
 var $321=(($desiredX+($320<<2))|0); //@line 167 "carriersai.cpp"
 var $322=HEAP32[(($321)>>2)]; //@line 167 "carriersai.cpp"
 var $323=($322|0); //@line 167 "carriersai.cpp"
 var $324=$otherUX; //@line 167 "carriersai.cpp"
 var $325=($323)-($324); //@line 167 "carriersai.cpp"
 var $326=($319)*($325); //@line 167 "carriersai.cpp"
 var $327=$i; //@line 167 "carriersai.cpp"
 var $328=(($desiredY+($327<<2))|0); //@line 167 "carriersai.cpp"
 var $329=HEAP32[(($328)>>2)]; //@line 167 "carriersai.cpp"
 var $330=($329|0); //@line 167 "carriersai.cpp"
 var $331=$otherUY; //@line 167 "carriersai.cpp"
 var $332=($330)-($331); //@line 167 "carriersai.cpp"
 var $333=$i; //@line 167 "carriersai.cpp"
 var $334=(($desiredY+($333<<2))|0); //@line 167 "carriersai.cpp"
 var $335=HEAP32[(($334)>>2)]; //@line 167 "carriersai.cpp"
 var $336=($335|0); //@line 167 "carriersai.cpp"
 var $337=$otherUY; //@line 167 "carriersai.cpp"
 var $338=($336)-($337); //@line 167 "carriersai.cpp"
 var $339=($332)*($338); //@line 167 "carriersai.cpp"
 var $340=($326)+($339); //@line 167 "carriersai.cpp"
 $tempMinDistance=$340; //@line 167 "carriersai.cpp"
 var $341=$tempMinDistance; //@line 171 "carriersai.cpp"
 var $342=$i; //@line 171 "carriersai.cpp"
 var $343=(($minDistanceEnemy+($342<<3))|0); //@line 171 "carriersai.cpp"
 var $344=HEAPF64[(($343)>>3)]; //@line 171 "carriersai.cpp"
 var $345=$341<$344; //@line 171 "carriersai.cpp"
 if($345){label=38;break;}else{label=39;break;} //@line 171 "carriersai.cpp"
 case 38: 
 var $347=$tempMinDistance; //@line 171 "carriersai.cpp"
 var $353=$347;label=40;break; //@line 171 "carriersai.cpp"
 case 39: 
 var $349=$i; //@line 171 "carriersai.cpp"
 var $350=(($minDistanceEnemy+($349<<3))|0); //@line 171 "carriersai.cpp"
 var $351=HEAPF64[(($350)>>3)]; //@line 171 "carriersai.cpp"
 var $353=$351;label=40;break; //@line 171 "carriersai.cpp"
 case 40: 
 var $353; //@line 171 "carriersai.cpp"
 var $354=$i; //@line 171 "carriersai.cpp"
 var $355=(($minDistanceEnemy+($354<<3))|0); //@line 171 "carriersai.cpp"
 HEAPF64[(($355)>>3)]=$353; //@line 171 "carriersai.cpp"
 label=41;break; //@line 173 "carriersai.cpp"
 case 41: 
 var $357=$otherU; //@line 142 "carriersai.cpp"
 var $358=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$357); //@line 142 "carriersai.cpp"
 $otherU=$358; //@line 142 "carriersai.cpp"
 label=31;break; //@line 142 "carriersai.cpp"
 case 42: 
 var $360=HEAP32[((19576)>>2)]; //@line 178 "carriersai.cpp"
 var $361=HEAP32[((19576)>>2)]; //@line 178 "carriersai.cpp"
 var $362=(Math_imul($360,$361)|0); //@line 178 "carriersai.cpp"
 var $363=HEAP32[((19580)>>2)]; //@line 178 "carriersai.cpp"
 var $364=HEAP32[((19580)>>2)]; //@line 178 "carriersai.cpp"
 var $365=(Math_imul($363,$364)|0); //@line 178 "carriersai.cpp"
 var $366=((($362)+($365))|0); //@line 178 "carriersai.cpp"
 var $367=($366>>>0); //@line 178 "carriersai.cpp"
 var $368=$i; //@line 178 "carriersai.cpp"
 var $369=(($minDistanceBullet+($368<<3))|0); //@line 178 "carriersai.cpp"
 HEAPF64[(($369)>>3)]=$367; //@line 178 "carriersai.cpp"
 var $370=__ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv(19920); //@line 180 "carriersai.cpp"
 $otherB=$370; //@line 180 "carriersai.cpp"
 label=43;break; //@line 180 "carriersai.cpp"
 case 43: 
 var $372=$otherB; //@line 180 "carriersai.cpp"
 var $373=($372|0)!=0; //@line 180 "carriersai.cpp"
 if($373){label=44;break;}else{label=53;break;} //@line 180 "carriersai.cpp"
 case 44: 
 var $375=$otherB; //@line 185 "carriersai.cpp"
 var $376=(($375)|0); //@line 185 "carriersai.cpp"
 var $377=$376; //@line 185 "carriersai.cpp"
 var $378=(($377+130)|0); //@line 185 "carriersai.cpp"
 var $379=HEAP8[($378)]; //@line 185 "carriersai.cpp"
 var $380=(($379)&1); //@line 185 "carriersai.cpp"
 if($380){label=46;break;}else{label=45;break;} //@line 185 "carriersai.cpp"
 case 45: 
 label=52;break; //@line 185 "carriersai.cpp"
 case 46: 
 var $383=$otherB; //@line 188 "carriersai.cpp"
 var $384=(($383)|0); //@line 188 "carriersai.cpp"
 var $385=$384; //@line 188 "carriersai.cpp"
 var $386=(($385+8)|0); //@line 188 "carriersai.cpp"
 var $387=HEAPF64[(($386)>>3)]; //@line 188 "carriersai.cpp"
 $otherUX=$387; //@line 188 "carriersai.cpp"
 var $388=$otherB; //@line 189 "carriersai.cpp"
 var $389=(($388)|0); //@line 189 "carriersai.cpp"
 var $390=$389; //@line 189 "carriersai.cpp"
 var $391=(($390+16)|0); //@line 189 "carriersai.cpp"
 var $392=HEAPF64[(($391)>>3)]; //@line 189 "carriersai.cpp"
 $otherUY=$392; //@line 189 "carriersai.cpp"
 var $393=$1; //@line 194 "carriersai.cpp"
 var $394=(($393)|0); //@line 194 "carriersai.cpp"
 var $395=$394; //@line 194 "carriersai.cpp"
 var $396=(($395+8)|0); //@line 194 "carriersai.cpp"
 var $397=HEAPF64[(($396)>>3)]; //@line 194 "carriersai.cpp"
 var $398=$otherUX; //@line 194 "carriersai.cpp"
 var $399=($397)-($398); //@line 194 "carriersai.cpp"
 var $400=$1; //@line 194 "carriersai.cpp"
 var $401=(($400)|0); //@line 194 "carriersai.cpp"
 var $402=$401; //@line 194 "carriersai.cpp"
 var $403=(($402+8)|0); //@line 194 "carriersai.cpp"
 var $404=HEAPF64[(($403)>>3)]; //@line 194 "carriersai.cpp"
 var $405=$otherUX; //@line 194 "carriersai.cpp"
 var $406=($404)-($405); //@line 194 "carriersai.cpp"
 var $407=($399)*($406); //@line 194 "carriersai.cpp"
 var $408=$1; //@line 194 "carriersai.cpp"
 var $409=(($408)|0); //@line 194 "carriersai.cpp"
 var $410=$409; //@line 194 "carriersai.cpp"
 var $411=(($410+16)|0); //@line 194 "carriersai.cpp"
 var $412=HEAPF64[(($411)>>3)]; //@line 194 "carriersai.cpp"
 var $413=$otherUY; //@line 194 "carriersai.cpp"
 var $414=($412)-($413); //@line 194 "carriersai.cpp"
 var $415=$1; //@line 194 "carriersai.cpp"
 var $416=(($415)|0); //@line 194 "carriersai.cpp"
 var $417=$416; //@line 194 "carriersai.cpp"
 var $418=(($417+16)|0); //@line 194 "carriersai.cpp"
 var $419=HEAPF64[(($418)>>3)]; //@line 194 "carriersai.cpp"
 var $420=$otherUY; //@line 194 "carriersai.cpp"
 var $421=($419)-($420); //@line 194 "carriersai.cpp"
 var $422=($414)*($421); //@line 194 "carriersai.cpp"
 var $423=($407)+($422); //@line 194 "carriersai.cpp"
 var $424=$423>25600; //@line 194 "carriersai.cpp"
 if($424){label=47;break;}else{label=48;break;} //@line 194 "carriersai.cpp"
 case 47: 
 label=52;break; //@line 196 "carriersai.cpp"
 case 48: 
 var $427=$i; //@line 200 "carriersai.cpp"
 var $428=(($desiredX+($427<<2))|0); //@line 200 "carriersai.cpp"
 var $429=HEAP32[(($428)>>2)]; //@line 200 "carriersai.cpp"
 var $430=($429|0); //@line 200 "carriersai.cpp"
 var $431=$otherUX; //@line 200 "carriersai.cpp"
 var $432=($430)-($431); //@line 200 "carriersai.cpp"
 var $433=$i; //@line 200 "carriersai.cpp"
 var $434=(($desiredX+($433<<2))|0); //@line 200 "carriersai.cpp"
 var $435=HEAP32[(($434)>>2)]; //@line 200 "carriersai.cpp"
 var $436=($435|0); //@line 200 "carriersai.cpp"
 var $437=$otherUX; //@line 200 "carriersai.cpp"
 var $438=($436)-($437); //@line 200 "carriersai.cpp"
 var $439=($432)*($438); //@line 200 "carriersai.cpp"
 var $440=$i; //@line 200 "carriersai.cpp"
 var $441=(($desiredY+($440<<2))|0); //@line 200 "carriersai.cpp"
 var $442=HEAP32[(($441)>>2)]; //@line 200 "carriersai.cpp"
 var $443=($442|0); //@line 200 "carriersai.cpp"
 var $444=$otherUY; //@line 200 "carriersai.cpp"
 var $445=($443)-($444); //@line 200 "carriersai.cpp"
 var $446=$i; //@line 200 "carriersai.cpp"
 var $447=(($desiredY+($446<<2))|0); //@line 200 "carriersai.cpp"
 var $448=HEAP32[(($447)>>2)]; //@line 200 "carriersai.cpp"
 var $449=($448|0); //@line 200 "carriersai.cpp"
 var $450=$otherUY; //@line 200 "carriersai.cpp"
 var $451=($449)-($450); //@line 200 "carriersai.cpp"
 var $452=($445)*($451); //@line 200 "carriersai.cpp"
 var $453=($439)+($452); //@line 200 "carriersai.cpp"
 $tempMinDistance=$453; //@line 200 "carriersai.cpp"
 var $454=$tempMinDistance; //@line 204 "carriersai.cpp"
 var $455=$i; //@line 204 "carriersai.cpp"
 var $456=(($minDistanceBullet+($455<<3))|0); //@line 204 "carriersai.cpp"
 var $457=HEAPF64[(($456)>>3)]; //@line 204 "carriersai.cpp"
 var $458=$454<$457; //@line 204 "carriersai.cpp"
 if($458){label=49;break;}else{label=50;break;} //@line 204 "carriersai.cpp"
 case 49: 
 var $460=$tempMinDistance; //@line 204 "carriersai.cpp"
 var $466=$460;label=51;break; //@line 204 "carriersai.cpp"
 case 50: 
 var $462=$i; //@line 204 "carriersai.cpp"
 var $463=(($minDistanceBullet+($462<<3))|0); //@line 204 "carriersai.cpp"
 var $464=HEAPF64[(($463)>>3)]; //@line 204 "carriersai.cpp"
 var $466=$464;label=51;break; //@line 204 "carriersai.cpp"
 case 51: 
 var $466; //@line 204 "carriersai.cpp"
 var $467=$i; //@line 204 "carriersai.cpp"
 var $468=(($minDistanceBullet+($467<<3))|0); //@line 204 "carriersai.cpp"
 HEAPF64[(($468)>>3)]=$466; //@line 204 "carriersai.cpp"
 label=52;break; //@line 206 "carriersai.cpp"
 case 52: 
 var $470=$otherB; //@line 181 "carriersai.cpp"
 var $471=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19920,$470); //@line 181 "carriersai.cpp"
 $otherB=$471; //@line 181 "carriersai.cpp"
 label=43;break; //@line 181 "carriersai.cpp"
 case 53: 
 label=54;break; //@line 208 "carriersai.cpp"
 case 54: 
 var $474=$i; //@line 71 "carriersai.cpp"
 var $475=((($474)+(1))|0); //@line 71 "carriersai.cpp"
 $i=$475; //@line 71 "carriersai.cpp"
 label=4;break; //@line 71 "carriersai.cpp"
 case 55: 
 $maxDistanceDesiredNum=0; //@line 212 "carriersai.cpp"
 $i=0; //@line 213 "carriersai.cpp"
 label=56;break; //@line 213 "carriersai.cpp"
 case 56: 
 var $478=$i; //@line 213 "carriersai.cpp"
 var $479=($478|0)<15; //@line 213 "carriersai.cpp"
 if($479){label=57;break;}else{label=61;break;} //@line 213 "carriersai.cpp"
 case 57: 
 var $481=$i; //@line 224 "carriersai.cpp"
 var $482=(($minDistanceEnemy+($481<<3))|0); //@line 224 "carriersai.cpp"
 var $483=HEAPF64[(($482)>>3)]; //@line 224 "carriersai.cpp"
 var $484=($483)*((0.8)); //@line 224 "carriersai.cpp"
 var $485=$i; //@line 224 "carriersai.cpp"
 var $486=(($minDistanceBullet+($485<<3))|0); //@line 224 "carriersai.cpp"
 var $487=HEAPF64[(($486)>>3)]; //@line 224 "carriersai.cpp"
 var $488=($487)*((0.2)); //@line 224 "carriersai.cpp"
 var $489=($484)+($488); //@line 224 "carriersai.cpp"
 $value1=$489; //@line 224 "carriersai.cpp"
 var $490=$maxDistanceDesiredNum; //@line 227 "carriersai.cpp"
 var $491=(($minDistanceEnemy+($490<<3))|0); //@line 227 "carriersai.cpp"
 var $492=HEAPF64[(($491)>>3)]; //@line 227 "carriersai.cpp"
 var $493=($492)*((0.8)); //@line 227 "carriersai.cpp"
 var $494=$maxDistanceDesiredNum; //@line 227 "carriersai.cpp"
 var $495=(($minDistanceBullet+($494<<3))|0); //@line 227 "carriersai.cpp"
 var $496=HEAPF64[(($495)>>3)]; //@line 227 "carriersai.cpp"
 var $497=($496)*((0.2)); //@line 227 "carriersai.cpp"
 var $498=($493)+($497); //@line 227 "carriersai.cpp"
 $value2=$498; //@line 227 "carriersai.cpp"
 var $499=$value1; //@line 231 "carriersai.cpp"
 var $500=$value2; //@line 231 "carriersai.cpp"
 var $501=$499>$500; //@line 231 "carriersai.cpp"
 var $502=($501&1); //@line 231 "carriersai.cpp"
 $r=$502; //@line 231 "carriersai.cpp"
 var $503=$r; //@line 238 "carriersai.cpp"
 var $504=(($503)&1); //@line 238 "carriersai.cpp"
 if($504){label=58;break;}else{label=59;break;} //@line 238 "carriersai.cpp"
 case 58: 
 var $506=$i; //@line 239 "carriersai.cpp"
 $maxDistanceDesiredNum=$506; //@line 239 "carriersai.cpp"
 label=59;break; //@line 239 "carriersai.cpp"
 case 59: 
 label=60;break; //@line 240 "carriersai.cpp"
 case 60: 
 var $509=$i; //@line 213 "carriersai.cpp"
 var $510=((($509)+(1))|0); //@line 213 "carriersai.cpp"
 $i=$510; //@line 213 "carriersai.cpp"
 label=56;break; //@line 213 "carriersai.cpp"
 case 61: 
 var $512=$maxDistanceDesiredNum; //@line 243 "carriersai.cpp"
 var $513=(($desiredX+($512<<2))|0); //@line 243 "carriersai.cpp"
 var $514=HEAP32[(($513)>>2)]; //@line 243 "carriersai.cpp"
 var $515=($514|0); //@line 243 "carriersai.cpp"
 var $516=$1; //@line 243 "carriersai.cpp"
 var $517=(($516)|0); //@line 243 "carriersai.cpp"
 var $518=$517; //@line 243 "carriersai.cpp"
 var $519=(($518+160)|0); //@line 243 "carriersai.cpp"
 HEAPF64[(($519)>>3)]=$515; //@line 243 "carriersai.cpp"
 var $520=$maxDistanceDesiredNum; //@line 244 "carriersai.cpp"
 var $521=(($desiredY+($520<<2))|0); //@line 244 "carriersai.cpp"
 var $522=HEAP32[(($521)>>2)]; //@line 244 "carriersai.cpp"
 var $523=($522|0); //@line 244 "carriersai.cpp"
 var $524=$1; //@line 244 "carriersai.cpp"
 var $525=(($524)|0); //@line 244 "carriersai.cpp"
 var $526=$525; //@line 244 "carriersai.cpp"
 var $527=(($526+168)|0); //@line 244 "carriersai.cpp"
 HEAPF64[(($527)>>3)]=$523; //@line 244 "carriersai.cpp"
 var $528=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 251 "carriersai.cpp"
 $onePlayer=$528; //@line 251 "carriersai.cpp"
 var $529=$onePlayer; //@line 252 "carriersai.cpp"
 var $530=(($529)|0); //@line 252 "carriersai.cpp"
 var $531=$530; //@line 252 "carriersai.cpp"
 var $532=(($531+8)|0); //@line 252 "carriersai.cpp"
 var $533=HEAPF64[(($532)>>3)]; //@line 252 "carriersai.cpp"
 var $534=(($533)&-1); //@line 252 "carriersai.cpp"
 $x=$534; //@line 252 "carriersai.cpp"
 var $535=$onePlayer; //@line 252 "carriersai.cpp"
 var $536=(($535)|0); //@line 252 "carriersai.cpp"
 var $537=$536; //@line 252 "carriersai.cpp"
 var $538=(($537+16)|0); //@line 252 "carriersai.cpp"
 var $539=HEAPF64[(($538)>>3)]; //@line 252 "carriersai.cpp"
 var $540=(($539)&-1); //@line 252 "carriersai.cpp"
 $y=$540; //@line 252 "carriersai.cpp"
 var $541=$x; //@line 253 "carriersai.cpp"
 var $542=($541|0); //@line 253 "carriersai.cpp"
 var $543=$1; //@line 253 "carriersai.cpp"
 var $544=(($543)|0); //@line 253 "carriersai.cpp"
 var $545=$544; //@line 253 "carriersai.cpp"
 var $546=(($545+8)|0); //@line 253 "carriersai.cpp"
 var $547=HEAPF64[(($546)>>3)]; //@line 253 "carriersai.cpp"
 var $548=($542)-($547); //@line 253 "carriersai.cpp"
 var $549=$x; //@line 253 "carriersai.cpp"
 var $550=($549|0); //@line 253 "carriersai.cpp"
 var $551=$1; //@line 253 "carriersai.cpp"
 var $552=(($551)|0); //@line 253 "carriersai.cpp"
 var $553=$552; //@line 253 "carriersai.cpp"
 var $554=(($553+8)|0); //@line 253 "carriersai.cpp"
 var $555=HEAPF64[(($554)>>3)]; //@line 253 "carriersai.cpp"
 var $556=($550)-($555); //@line 253 "carriersai.cpp"
 var $557=($548)*($556); //@line 253 "carriersai.cpp"
 var $558=$y; //@line 253 "carriersai.cpp"
 var $559=($558|0); //@line 253 "carriersai.cpp"
 var $560=$1; //@line 253 "carriersai.cpp"
 var $561=(($560)|0); //@line 253 "carriersai.cpp"
 var $562=$561; //@line 253 "carriersai.cpp"
 var $563=(($562+16)|0); //@line 253 "carriersai.cpp"
 var $564=HEAPF64[(($563)>>3)]; //@line 253 "carriersai.cpp"
 var $565=($559)-($564); //@line 253 "carriersai.cpp"
 var $566=$y; //@line 253 "carriersai.cpp"
 var $567=($566|0); //@line 253 "carriersai.cpp"
 var $568=$1; //@line 253 "carriersai.cpp"
 var $569=(($568)|0); //@line 253 "carriersai.cpp"
 var $570=$569; //@line 253 "carriersai.cpp"
 var $571=(($570+16)|0); //@line 253 "carriersai.cpp"
 var $572=HEAPF64[(($571)>>3)]; //@line 253 "carriersai.cpp"
 var $573=($567)-($572); //@line 253 "carriersai.cpp"
 var $574=($565)*($573); //@line 253 "carriersai.cpp"
 var $575=($557)+($574); //@line 253 "carriersai.cpp"
 $distance=$575; //@line 253 "carriersai.cpp"
 var $576=_rand(); //@line 256 "carriersai.cpp"
 var $577=(((($576|0))%(10))&-1); //@line 256 "carriersai.cpp"
 var $578=($577|0)==0; //@line 256 "carriersai.cpp"
 if($578){label=62;break;}else{label=76;break;} //@line 256 "carriersai.cpp"
 case 62: 
 var $580=$distance; //@line 256 "carriersai.cpp"
 var $581=$580<40000; //@line 256 "carriersai.cpp"
 if($581){label=63;break;}else{label=76;break;} //@line 256 "carriersai.cpp"
 case 63: 
 var $583=$x; //@line 256 "carriersai.cpp"
 var $584=$y; //@line 258 "carriersai.cpp"
 var $585=__Z11getLeftWalli($584); //@line 258 "carriersai.cpp"
 var $586=((($583)-($585))|0); //@line 258 "carriersai.cpp"
 var $587=($586|0)>=0; //@line 258 "carriersai.cpp"
 if($587){label=64;break;}else{label=65;break;} //@line 258 "carriersai.cpp"
 case 64: 
 var $589=$x; //@line 258 "carriersai.cpp"
 var $590=$y; //@line 258 "carriersai.cpp"
 var $591=__Z11getLeftWalli($590); //@line 258 "carriersai.cpp"
 var $592=((($589)-($591))|0); //@line 258 "carriersai.cpp"
 var $600=$592;label=66;break; //@line 258 "carriersai.cpp"
 case 65: 
 var $594=$x; //@line 258 "carriersai.cpp"
 var $595=$y; //@line 258 "carriersai.cpp"
 var $596=__Z11getLeftWalli($595); //@line 258 "carriersai.cpp"
 var $597=((($594)-($596))|0); //@line 258 "carriersai.cpp"
 var $598=(((-$597))|0); //@line 258 "carriersai.cpp"
 var $600=$598;label=66;break; //@line 258 "carriersai.cpp"
 case 66: 
 var $600; //@line 258 "carriersai.cpp"
 var $601=($600|0)<100; //@line 258 "carriersai.cpp"
 if($601){label=75;break;}else{label=67;break;} //@line 258 "carriersai.cpp"
 case 67: 
 var $603=$x; //@line 258 "carriersai.cpp"
 var $604=$y; //@line 259 "carriersai.cpp"
 var $605=__Z12getRightWalli($604); //@line 259 "carriersai.cpp"
 var $606=((($603)-($605))|0); //@line 259 "carriersai.cpp"
 var $607=($606|0)>=0; //@line 259 "carriersai.cpp"
 if($607){label=68;break;}else{label=69;break;} //@line 259 "carriersai.cpp"
 case 68: 
 var $609=$x; //@line 259 "carriersai.cpp"
 var $610=$y; //@line 259 "carriersai.cpp"
 var $611=__Z12getRightWalli($610); //@line 259 "carriersai.cpp"
 var $612=((($609)-($611))|0); //@line 259 "carriersai.cpp"
 var $620=$612;label=70;break; //@line 259 "carriersai.cpp"
 case 69: 
 var $614=$x; //@line 259 "carriersai.cpp"
 var $615=$y; //@line 259 "carriersai.cpp"
 var $616=__Z12getRightWalli($615); //@line 259 "carriersai.cpp"
 var $617=((($614)-($616))|0); //@line 259 "carriersai.cpp"
 var $618=(((-$617))|0); //@line 259 "carriersai.cpp"
 var $620=$618;label=70;break; //@line 259 "carriersai.cpp"
 case 70: 
 var $620; //@line 259 "carriersai.cpp"
 var $621=($620|0)<100; //@line 259 "carriersai.cpp"
 if($621){label=75;break;}else{label=71;break;} //@line 259 "carriersai.cpp"
 case 71: 
 var $623=$y; //@line 259 "carriersai.cpp"
 var $624=$x; //@line 260 "carriersai.cpp"
 var $625=__Z13getGroundWalli($624); //@line 260 "carriersai.cpp"
 var $626=((($623)-($625))|0); //@line 260 "carriersai.cpp"
 var $627=($626|0)>=0; //@line 260 "carriersai.cpp"
 if($627){label=72;break;}else{label=73;break;} //@line 260 "carriersai.cpp"
 case 72: 
 var $629=$y; //@line 260 "carriersai.cpp"
 var $630=$x; //@line 260 "carriersai.cpp"
 var $631=__Z13getGroundWalli($630); //@line 260 "carriersai.cpp"
 var $632=((($629)-($631))|0); //@line 260 "carriersai.cpp"
 var $640=$632;label=74;break; //@line 260 "carriersai.cpp"
 case 73: 
 var $634=$y; //@line 260 "carriersai.cpp"
 var $635=$x; //@line 260 "carriersai.cpp"
 var $636=__Z13getGroundWalli($635); //@line 260 "carriersai.cpp"
 var $637=((($634)-($636))|0); //@line 260 "carriersai.cpp"
 var $638=(((-$637))|0); //@line 260 "carriersai.cpp"
 var $640=$638;label=74;break; //@line 260 "carriersai.cpp"
 case 74: 
 var $640; //@line 260 "carriersai.cpp"
 var $641=($640|0)<100; //@line 260 "carriersai.cpp"
 if($641){label=75;break;}else{label=76;break;} //@line 260 "carriersai.cpp"
 case 75: 
 var $643=$onePlayer; //@line 265 "carriersai.cpp"
 var $644=(($643)|0); //@line 265 "carriersai.cpp"
 var $645=$644; //@line 265 "carriersai.cpp"
 var $646=(($645+8)|0); //@line 265 "carriersai.cpp"
 var $647=HEAPF64[(($646)>>3)]; //@line 265 "carriersai.cpp"
 var $648=$1; //@line 265 "carriersai.cpp"
 var $649=(($648)|0); //@line 265 "carriersai.cpp"
 var $650=$649; //@line 265 "carriersai.cpp"
 var $651=(($650+160)|0); //@line 265 "carriersai.cpp"
 HEAPF64[(($651)>>3)]=$647; //@line 265 "carriersai.cpp"
 var $652=$onePlayer; //@line 266 "carriersai.cpp"
 var $653=(($652)|0); //@line 266 "carriersai.cpp"
 var $654=$653; //@line 266 "carriersai.cpp"
 var $655=(($654+16)|0); //@line 266 "carriersai.cpp"
 var $656=HEAPF64[(($655)>>3)]; //@line 266 "carriersai.cpp"
 var $657=$1; //@line 266 "carriersai.cpp"
 var $658=(($657)|0); //@line 266 "carriersai.cpp"
 var $659=$658; //@line 266 "carriersai.cpp"
 var $660=(($659+168)|0); //@line 266 "carriersai.cpp"
 HEAPF64[(($660)>>3)]=$656; //@line 266 "carriersai.cpp"
 label=76;break; //@line 267 "carriersai.cpp"
 case 76: 
 var $662=$1; //@line 273 "carriersai.cpp"
 var $663=(($662)|0); //@line 273 "carriersai.cpp"
 var $664=(($663+224)|0); //@line 273 "carriersai.cpp"
 var $665=$664; //@line 273 "carriersai.cpp"
 var $666=(($665)|0); //@line 273 "carriersai.cpp"
 var $667=$4; //@line 273 "carriersai.cpp"
 var $668=$666; //@line 273 "carriersai.cpp"
 assert(12 % 1 === 0);HEAP32[(($667)>>2)]=HEAP32[(($668)>>2)];HEAP32[((($667)+(4))>>2)]=HEAP32[((($668)+(4))>>2)];HEAP32[((($667)+(8))>>2)]=HEAP32[((($668)+(8))>>2)]; //@line 273 "carriersai.cpp"
 var $669=__Z14getUnitPointer23gameObjectPointerStruct($4); //@line 273 "carriersai.cpp"
 var $670=$669; //@line 273 "carriersai.cpp"
 $followMe=$670; //@line 273 "carriersai.cpp"
 var $671=$followMe; //@line 276 "carriersai.cpp"
 var $672=($671|0)!=0; //@line 276 "carriersai.cpp"
 if($672){label=77;break;}else{label=85;break;} //@line 276 "carriersai.cpp"
 case 77: 
 var $674=$1; //@line 278 "carriersai.cpp"
 var $675=(($674)|0); //@line 278 "carriersai.cpp"
 var $676=$675; //@line 278 "carriersai.cpp"
 var $677=(($676+160)|0); //@line 278 "carriersai.cpp"
 var $678=HEAPF64[(($677)>>3)]; //@line 278 "carriersai.cpp"
 $tmpGoX=$678; //@line 278 "carriersai.cpp"
 var $679=$1; //@line 279 "carriersai.cpp"
 var $680=(($679)|0); //@line 279 "carriersai.cpp"
 var $681=$680; //@line 279 "carriersai.cpp"
 var $682=(($681+168)|0); //@line 279 "carriersai.cpp"
 var $683=HEAPF64[(($682)>>3)]; //@line 279 "carriersai.cpp"
 $tmpGoY=$683; //@line 279 "carriersai.cpp"
 var $684=$followMe; //@line 281 "carriersai.cpp"
 var $685=$684; //@line 281 "carriersai.cpp"
 var $686=(($685+156)|0); //@line 281 "carriersai.cpp"
 var $687=HEAP8[($686)]; //@line 281 "carriersai.cpp"
 var $688=(($687)&1); //@line 281 "carriersai.cpp"
 if($688){label=78;break;}else{label=79;break;} //@line 281 "carriersai.cpp"
 case 78: 
 var $690=$followMe; //@line 282 "carriersai.cpp"
 var $691=$690; //@line 282 "carriersai.cpp"
 var $692=(($691+160)|0); //@line 282 "carriersai.cpp"
 var $693=HEAPF64[(($692)>>3)]; //@line 282 "carriersai.cpp"
 $goX=$693; //@line 282 "carriersai.cpp"
 var $694=$followMe; //@line 283 "carriersai.cpp"
 var $695=$694; //@line 283 "carriersai.cpp"
 var $696=(($695+168)|0); //@line 283 "carriersai.cpp"
 var $697=HEAPF64[(($696)>>3)]; //@line 283 "carriersai.cpp"
 $goY=$697; //@line 283 "carriersai.cpp"
 label=80;break; //@line 284 "carriersai.cpp"
 case 79: 
 var $699=$followMe; //@line 285 "carriersai.cpp"
 var $700=$699; //@line 285 "carriersai.cpp"
 var $701=(($700+8)|0); //@line 285 "carriersai.cpp"
 var $702=HEAPF64[(($701)>>3)]; //@line 285 "carriersai.cpp"
 $goX=$702; //@line 285 "carriersai.cpp"
 var $703=$followMe; //@line 286 "carriersai.cpp"
 var $704=$703; //@line 286 "carriersai.cpp"
 var $705=(($704+16)|0); //@line 286 "carriersai.cpp"
 var $706=HEAPF64[(($705)>>3)]; //@line 286 "carriersai.cpp"
 $goY=$706; //@line 286 "carriersai.cpp"
 label=80;break;
 case 80: 
 var $708=$1; //@line 293 "carriersai.cpp"
 var $709=(($708)|0); //@line 293 "carriersai.cpp"
 var $710=$709; //@line 293 "carriersai.cpp"
 var $711=(($710+8)|0); //@line 293 "carriersai.cpp"
 var $712=HEAPF64[(($711)>>3)]; //@line 293 "carriersai.cpp"
 var $713=$goX; //@line 293 "carriersai.cpp"
 var $714=($712)-($713); //@line 293 "carriersai.cpp"
 var $715=$1; //@line 293 "carriersai.cpp"
 var $716=(($715)|0); //@line 293 "carriersai.cpp"
 var $717=$716; //@line 293 "carriersai.cpp"
 var $718=(($717+8)|0); //@line 293 "carriersai.cpp"
 var $719=HEAPF64[(($718)>>3)]; //@line 293 "carriersai.cpp"
 var $720=$goX; //@line 293 "carriersai.cpp"
 var $721=($719)-($720); //@line 293 "carriersai.cpp"
 var $722=($714)*($721); //@line 293 "carriersai.cpp"
 var $723=$1; //@line 293 "carriersai.cpp"
 var $724=(($723)|0); //@line 293 "carriersai.cpp"
 var $725=$724; //@line 293 "carriersai.cpp"
 var $726=(($725+16)|0); //@line 293 "carriersai.cpp"
 var $727=HEAPF64[(($726)>>3)]; //@line 293 "carriersai.cpp"
 var $728=$goY; //@line 293 "carriersai.cpp"
 var $729=($727)-($728); //@line 293 "carriersai.cpp"
 var $730=$1; //@line 293 "carriersai.cpp"
 var $731=(($730)|0); //@line 293 "carriersai.cpp"
 var $732=$731; //@line 293 "carriersai.cpp"
 var $733=(($732+16)|0); //@line 293 "carriersai.cpp"
 var $734=HEAPF64[(($733)>>3)]; //@line 293 "carriersai.cpp"
 var $735=$goY; //@line 293 "carriersai.cpp"
 var $736=($734)-($735); //@line 293 "carriersai.cpp"
 var $737=($729)*($736); //@line 293 "carriersai.cpp"
 var $738=($722)+($737); //@line 293 "carriersai.cpp"
 var $739=Math_sqrt($738); //@line 293 "carriersai.cpp"
 $distance=$739; //@line 293 "carriersai.cpp"
 var $740=$distance; //@line 295 "carriersai.cpp"
 var $741=$740>125; //@line 295 "carriersai.cpp"
 if($741){label=81;break;}else{label=84;break;} //@line 295 "carriersai.cpp"
 case 81: 
 var $743=$1; //@line 297 "carriersai.cpp"
 var $744=(($743)|0); //@line 297 "carriersai.cpp"
 var $745=$744; //@line 297 "carriersai.cpp"
 var $746=(($745+156)|0); //@line 297 "carriersai.cpp"
 HEAP8[($746)]=1; //@line 297 "carriersai.cpp"
 var $747=$goX; //@line 298 "carriersai.cpp"
 var $748=$1; //@line 298 "carriersai.cpp"
 var $749=(($748)|0); //@line 298 "carriersai.cpp"
 var $750=$749; //@line 298 "carriersai.cpp"
 var $751=(($750+160)|0); //@line 298 "carriersai.cpp"
 HEAPF64[(($751)>>3)]=$747; //@line 298 "carriersai.cpp"
 var $752=$goY; //@line 299 "carriersai.cpp"
 var $753=$1; //@line 299 "carriersai.cpp"
 var $754=(($753)|0); //@line 299 "carriersai.cpp"
 var $755=$754; //@line 299 "carriersai.cpp"
 var $756=(($755+168)|0); //@line 299 "carriersai.cpp"
 HEAPF64[(($756)>>3)]=$752; //@line 299 "carriersai.cpp"
 var $757=$1; //@line 305 "carriersai.cpp"
 var $758=(($757)|0); //@line 305 "carriersai.cpp"
 var $759=$758; //@line 305 "carriersai.cpp"
 var $760=(($759+8)|0); //@line 305 "carriersai.cpp"
 var $761=HEAPF64[(($760)>>3)]; //@line 305 "carriersai.cpp"
 var $762=$1; //@line 305 "carriersai.cpp"
 var $763=(($762)|0); //@line 305 "carriersai.cpp"
 var $764=$763; //@line 305 "carriersai.cpp"
 var $765=(($764+168)|0); //@line 305 "carriersai.cpp"
 var $766=HEAPF64[(($765)>>3)]; //@line 305 "carriersai.cpp"
 var $767=($761)-($766); //@line 305 "carriersai.cpp"
 var $768=$1; //@line 305 "carriersai.cpp"
 var $769=(($768)|0); //@line 305 "carriersai.cpp"
 var $770=$769; //@line 305 "carriersai.cpp"
 var $771=(($770+8)|0); //@line 305 "carriersai.cpp"
 var $772=HEAPF64[(($771)>>3)]; //@line 305 "carriersai.cpp"
 var $773=$1; //@line 305 "carriersai.cpp"
 var $774=(($773)|0); //@line 305 "carriersai.cpp"
 var $775=$774; //@line 305 "carriersai.cpp"
 var $776=(($775+168)|0); //@line 305 "carriersai.cpp"
 var $777=HEAPF64[(($776)>>3)]; //@line 305 "carriersai.cpp"
 var $778=($772)-($777); //@line 305 "carriersai.cpp"
 var $779=($767)*($778); //@line 305 "carriersai.cpp"
 var $780=$1; //@line 305 "carriersai.cpp"
 var $781=(($780)|0); //@line 305 "carriersai.cpp"
 var $782=$781; //@line 305 "carriersai.cpp"
 var $783=(($782+16)|0); //@line 305 "carriersai.cpp"
 var $784=HEAPF64[(($783)>>3)]; //@line 305 "carriersai.cpp"
 var $785=$1; //@line 305 "carriersai.cpp"
 var $786=(($785)|0); //@line 305 "carriersai.cpp"
 var $787=$786; //@line 305 "carriersai.cpp"
 var $788=(($787+168)|0); //@line 305 "carriersai.cpp"
 var $789=HEAPF64[(($788)>>3)]; //@line 305 "carriersai.cpp"
 var $790=($784)-($789); //@line 305 "carriersai.cpp"
 var $791=$1; //@line 305 "carriersai.cpp"
 var $792=(($791)|0); //@line 305 "carriersai.cpp"
 var $793=$792; //@line 305 "carriersai.cpp"
 var $794=(($793+16)|0); //@line 305 "carriersai.cpp"
 var $795=HEAPF64[(($794)>>3)]; //@line 305 "carriersai.cpp"
 var $796=$1; //@line 305 "carriersai.cpp"
 var $797=(($796)|0); //@line 305 "carriersai.cpp"
 var $798=$797; //@line 305 "carriersai.cpp"
 var $799=(($798+168)|0); //@line 305 "carriersai.cpp"
 var $800=HEAPF64[(($799)>>3)]; //@line 305 "carriersai.cpp"
 var $801=($795)-($800); //@line 305 "carriersai.cpp"
 var $802=($790)*($801); //@line 305 "carriersai.cpp"
 var $803=($779)+($802); //@line 305 "carriersai.cpp"
 var $804=Math_sqrt($803); //@line 305 "carriersai.cpp"
 $distance=$804; //@line 305 "carriersai.cpp"
 var $805=$distance; //@line 307 "carriersai.cpp"
 var $806=$805!=0; //@line 307 "carriersai.cpp"
 if($806){label=82;break;}else{label=83;break;} //@line 307 "carriersai.cpp"
 case 82: 
 var $808=$1; //@line 308 "carriersai.cpp"
 var $809=(($808)|0); //@line 308 "carriersai.cpp"
 var $810=$809; //@line 308 "carriersai.cpp"
 var $811=(($810+8)|0); //@line 308 "carriersai.cpp"
 var $812=HEAPF64[(($811)>>3)]; //@line 308 "carriersai.cpp"
 var $813=$1; //@line 308 "carriersai.cpp"
 var $814=(($813)|0); //@line 308 "carriersai.cpp"
 var $815=$814; //@line 308 "carriersai.cpp"
 var $816=(($815+160)|0); //@line 308 "carriersai.cpp"
 var $817=HEAPF64[(($816)>>3)]; //@line 308 "carriersai.cpp"
 var $818=$1; //@line 308 "carriersai.cpp"
 var $819=(($818)|0); //@line 308 "carriersai.cpp"
 var $820=$819; //@line 308 "carriersai.cpp"
 var $821=(($820+8)|0); //@line 308 "carriersai.cpp"
 var $822=HEAPF64[(($821)>>3)]; //@line 308 "carriersai.cpp"
 var $823=($817)-($822); //@line 308 "carriersai.cpp"
 var $824=$distance; //@line 308 "carriersai.cpp"
 var $825=($824)/(80); //@line 308 "carriersai.cpp"
 var $826=($823)/($825); //@line 308 "carriersai.cpp"
 var $827=($812)+($826); //@line 308 "carriersai.cpp"
 var $828=(($827)&-1); //@line 308 "carriersai.cpp"
 var $829=($828|0); //@line 308 "carriersai.cpp"
 var $830=$1; //@line 308 "carriersai.cpp"
 var $831=(($830)|0); //@line 308 "carriersai.cpp"
 var $832=$831; //@line 308 "carriersai.cpp"
 var $833=(($832+160)|0); //@line 308 "carriersai.cpp"
 HEAPF64[(($833)>>3)]=$829; //@line 308 "carriersai.cpp"
 var $834=$1; //@line 311 "carriersai.cpp"
 var $835=(($834)|0); //@line 311 "carriersai.cpp"
 var $836=$835; //@line 311 "carriersai.cpp"
 var $837=(($836+16)|0); //@line 311 "carriersai.cpp"
 var $838=HEAPF64[(($837)>>3)]; //@line 311 "carriersai.cpp"
 var $839=$1; //@line 311 "carriersai.cpp"
 var $840=(($839)|0); //@line 311 "carriersai.cpp"
 var $841=$840; //@line 311 "carriersai.cpp"
 var $842=(($841+168)|0); //@line 311 "carriersai.cpp"
 var $843=HEAPF64[(($842)>>3)]; //@line 311 "carriersai.cpp"
 var $844=$1; //@line 311 "carriersai.cpp"
 var $845=(($844)|0); //@line 311 "carriersai.cpp"
 var $846=$845; //@line 311 "carriersai.cpp"
 var $847=(($846+16)|0); //@line 311 "carriersai.cpp"
 var $848=HEAPF64[(($847)>>3)]; //@line 311 "carriersai.cpp"
 var $849=($843)-($848); //@line 311 "carriersai.cpp"
 var $850=$distance; //@line 311 "carriersai.cpp"
 var $851=($850)/(80); //@line 311 "carriersai.cpp"
 var $852=($849)/($851); //@line 311 "carriersai.cpp"
 var $853=($838)+($852); //@line 311 "carriersai.cpp"
 var $854=(($853)&-1); //@line 311 "carriersai.cpp"
 var $855=($854|0); //@line 311 "carriersai.cpp"
 var $856=$1; //@line 311 "carriersai.cpp"
 var $857=(($856)|0); //@line 311 "carriersai.cpp"
 var $858=$857; //@line 311 "carriersai.cpp"
 var $859=(($858+168)|0); //@line 311 "carriersai.cpp"
 HEAPF64[(($859)>>3)]=$855; //@line 311 "carriersai.cpp"
 label=83;break; //@line 314 "carriersai.cpp"
 case 83: 
 var $861=$tmpGoX; //@line 317 "carriersai.cpp"
 var $862=$1; //@line 317 "carriersai.cpp"
 var $863=(($862)|0); //@line 317 "carriersai.cpp"
 var $864=$863; //@line 317 "carriersai.cpp"
 var $865=(($864+160)|0); //@line 317 "carriersai.cpp"
 var $866=HEAPF64[(($865)>>3)]; //@line 317 "carriersai.cpp"
 var $867=($861)+($866); //@line 317 "carriersai.cpp"
 var $868=($867)/(2); //@line 317 "carriersai.cpp"
 var $869=$1; //@line 317 "carriersai.cpp"
 var $870=(($869)|0); //@line 317 "carriersai.cpp"
 var $871=$870; //@line 317 "carriersai.cpp"
 var $872=(($871+160)|0); //@line 317 "carriersai.cpp"
 HEAPF64[(($872)>>3)]=$868; //@line 317 "carriersai.cpp"
 var $873=$tmpGoY; //@line 318 "carriersai.cpp"
 var $874=$1; //@line 318 "carriersai.cpp"
 var $875=(($874)|0); //@line 318 "carriersai.cpp"
 var $876=$875; //@line 318 "carriersai.cpp"
 var $877=(($876+168)|0); //@line 318 "carriersai.cpp"
 var $878=HEAPF64[(($877)>>3)]; //@line 318 "carriersai.cpp"
 var $879=($873)+($878); //@line 318 "carriersai.cpp"
 var $880=($879)/(2); //@line 318 "carriersai.cpp"
 var $881=$1; //@line 318 "carriersai.cpp"
 var $882=(($881)|0); //@line 318 "carriersai.cpp"
 var $883=$882; //@line 318 "carriersai.cpp"
 var $884=(($883+168)|0); //@line 318 "carriersai.cpp"
 HEAPF64[(($884)>>3)]=$880; //@line 318 "carriersai.cpp"
 label=84;break; //@line 319 "carriersai.cpp"
 case 84: 
 label=85;break; //@line 320 "carriersai.cpp"
 case 85: 
 var $887=$1; //@line 325 "carriersai.cpp"
 var $888=(($887)|0); //@line 325 "carriersai.cpp"
 var $889=$888; //@line 325 "carriersai.cpp"
 var $890=(($889+156)|0); //@line 325 "carriersai.cpp"
 HEAP8[($890)]=1; //@line 325 "carriersai.cpp"
 var $891=$1; //@line 326 "carriersai.cpp"
 var $892=(($891)|0); //@line 326 "carriersai.cpp"
 var $893=$892; //@line 326 "carriersai.cpp"
 var $894=(($893+96)|0); //@line 326 "carriersai.cpp"
 var $895=HEAP8[($894)]; //@line 326 "carriersai.cpp"
 var $896=(($895)&1); //@line 326 "carriersai.cpp"
 if($896){label=86;break;}else{label=87;break;} //@line 326 "carriersai.cpp"
 case 86: 
 var $898=HEAPF64[((19560)>>3)]; //@line 328 "carriersai.cpp"
 var $899=$1; //@line 328 "carriersai.cpp"
 var $900=(($899)|0); //@line 328 "carriersai.cpp"
 var $901=$900; //@line 328 "carriersai.cpp"
 var $902=(($901+160)|0); //@line 328 "carriersai.cpp"
 var $903=HEAPF64[(($902)>>3)]; //@line 328 "carriersai.cpp"
 var $904=($903)-($898); //@line 328 "carriersai.cpp"
 HEAPF64[(($902)>>3)]=$904; //@line 328 "carriersai.cpp"
 var $905=HEAPF64[((19568)>>3)]; //@line 329 "carriersai.cpp"
 var $906=$1; //@line 329 "carriersai.cpp"
 var $907=(($906)|0); //@line 329 "carriersai.cpp"
 var $908=$907; //@line 329 "carriersai.cpp"
 var $909=(($908+168)|0); //@line 329 "carriersai.cpp"
 var $910=HEAPF64[(($909)>>3)]; //@line 329 "carriersai.cpp"
 var $911=($910)-($905); //@line 329 "carriersai.cpp"
 HEAPF64[(($909)>>3)]=$911; //@line 329 "carriersai.cpp"
 label=87;break; //@line 330 "carriersai.cpp"
 case 87: 
 var $913=$1; //@line 333 "carriersai.cpp"
 var $914=(($913)|0); //@line 333 "carriersai.cpp"
 var $915=$914; //@line 333 "carriersai.cpp"
 var $916=$1; //@line 333 "carriersai.cpp"
 var $917=(($916)|0); //@line 333 "carriersai.cpp"
 var $918=$917; //@line 333 "carriersai.cpp"
 var $919=(($918+160)|0); //@line 333 "carriersai.cpp"
 var $920=HEAPF64[(($919)>>3)]; //@line 333 "carriersai.cpp"
 var $921=$1; //@line 333 "carriersai.cpp"
 var $922=(($921)|0); //@line 333 "carriersai.cpp"
 var $923=$922; //@line 333 "carriersai.cpp"
 var $924=(($923+168)|0); //@line 333 "carriersai.cpp"
 var $925=HEAPF64[(($924)>>3)]; //@line 333 "carriersai.cpp"
 var $926=$1; //@line 333 "carriersai.cpp"
 var $927=(($926)|0); //@line 333 "carriersai.cpp"
 var $928=$927; //@line 333 "carriersai.cpp"
 var $929=(($928+80)|0); //@line 333 "carriersai.cpp"
 var $930=HEAPF64[(($929)>>3)]; //@line 333 "carriersai.cpp"
 var $931=($930)*((0.8)); //@line 333 "carriersai.cpp"
 var $932=__Z21setSpeedForLinealMoveP17genericUnitStructeed($915,$920,$925,$931); //@line 333 "carriersai.cpp"
 STACKTOP=sp;return 1; //@line 338 "carriersai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $5=HEAP32[(($4)>>2)]; //@line 320 "./vectorlist.h"
 var $6=(($5)|0); //@line 320 "./vectorlist.h"
 var $7=(($6+256)|0); //@line 320 "./vectorlist.h"
 var $8=HEAP8[($7)]; //@line 320 "./vectorlist.h"
 var $9=(($8)&1); //@line 320 "./vectorlist.h"
 if($9){label=3;break;}else{label=2;break;} //@line 320 "./vectorlist.h"
 case 2: 
 var $11=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 320 "./vectorlist.h"
 $1=$12; //@line 320 "./vectorlist.h"
 label=4;break; //@line 320 "./vectorlist.h"
 case 3: 
 var $14=(($3+20)|0); //@line 321 "./vectorlist.h"
 var $15=HEAP32[(($14)>>2)]; //@line 321 "./vectorlist.h"
 var $16=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($3,$15); //@line 321 "./vectorlist.h"
 $1=$16; //@line 321 "./vectorlist.h"
 label=4;break; //@line 321 "./vectorlist.h"
 case 4: 
 var $18=$1; //@line 322 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 322 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($this,$since){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$since;
 var $4=$2;
 var $5=$3; //@line 348 "./vectorlist.h"
 var $6=(($5+264)|0); //@line 348 "./vectorlist.h"
 $3=$6; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 2: 
 var $8=$3; //@line 348 "./vectorlist.h"
 var $9=(($4+20)|0); //@line 348 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 348 "./vectorlist.h"
 var $11=(($4+4)|0); //@line 348 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 348 "./vectorlist.h"
 var $13=(($10+((($12)*(264))&-1))|0); //@line 348 "./vectorlist.h"
 var $14=($8>>>0)<($13>>>0); //@line 348 "./vectorlist.h"
 if($14){label=3;break;}else{label=7;break;} //@line 348 "./vectorlist.h"
 case 3: 
 var $16=$3; //@line 351 "./vectorlist.h"
 var $17=(($16+256)|0); //@line 351 "./vectorlist.h"
 var $18=HEAP8[($17)]; //@line 351 "./vectorlist.h"
 var $19=(($18)&1); //@line 351 "./vectorlist.h"
 if($19){label=5;break;}else{label=4;break;} //@line 351 "./vectorlist.h"
 case 4: 
 label=7;break; //@line 351 "./vectorlist.h"
 case 5: 
 label=6;break; //@line 352 "./vectorlist.h"
 case 6: 
 var $23=$3; //@line 348 "./vectorlist.h"
 var $24=(($23+264)|0); //@line 348 "./vectorlist.h"
 $3=$24; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 7: 
 var $26=$3; //@line 354 "./vectorlist.h"
 var $27=(($4+20)|0); //@line 354 "./vectorlist.h"
 var $28=HEAP32[(($27)>>2)]; //@line 354 "./vectorlist.h"
 var $29=(($4+4)|0); //@line 354 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 354 "./vectorlist.h"
 var $31=(($28+((($30)*(264))&-1))|0); //@line 354 "./vectorlist.h"
 var $32=($26>>>0)>=($31>>>0); //@line 354 "./vectorlist.h"
 if($32){label=8;break;}else{label=9;break;} //@line 354 "./vectorlist.h"
 case 8: 
 $1=0; //@line 354 "./vectorlist.h"
 label=10;break; //@line 354 "./vectorlist.h"
 case 9: 
 var $35=$3; //@line 355 "./vectorlist.h"
 $1=$35; //@line 355 "./vectorlist.h"
 label=10;break; //@line 355 "./vectorlist.h"
 case 10: 
 var $37=$1; //@line 356 "./vectorlist.h"
 STACKTOP=sp;return $37; //@line 356 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $5=HEAP32[(($4)>>2)]; //@line 320 "./vectorlist.h"
 var $6=(($5)|0); //@line 320 "./vectorlist.h"
 var $7=(($6+256)|0); //@line 320 "./vectorlist.h"
 var $8=HEAP8[($7)]; //@line 320 "./vectorlist.h"
 var $9=(($8)&1); //@line 320 "./vectorlist.h"
 if($9){label=3;break;}else{label=2;break;} //@line 320 "./vectorlist.h"
 case 2: 
 var $11=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 320 "./vectorlist.h"
 $1=$12; //@line 320 "./vectorlist.h"
 label=4;break; //@line 320 "./vectorlist.h"
 case 3: 
 var $14=(($3+20)|0); //@line 321 "./vectorlist.h"
 var $15=HEAP32[(($14)>>2)]; //@line 321 "./vectorlist.h"
 var $16=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($3,$15); //@line 321 "./vectorlist.h"
 $1=$16; //@line 321 "./vectorlist.h"
 label=4;break; //@line 321 "./vectorlist.h"
 case 4: 
 var $18=$1; //@line 322 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 322 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z32carrierFinishUntouchabilityEventR20vectorListNodeStructI15enemyUnitStructE($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$unit;
 var $2=$1; //@line 357 "carriersai.cpp"
 var $3=(($2)|0); //@line 357 "carriersai.cpp"
 var $4=$3; //@line 357 "carriersai.cpp"
 var $5=(($4+131)|0); //@line 357 "carriersai.cpp"
 HEAP8[($5)]=0; //@line 357 "carriersai.cpp"
 STACKTOP=sp;return 1; //@line 360 "carriersai.cpp"
}


function __ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($this,$since){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$since;
 var $4=$2;
 var $5=$3; //@line 348 "./vectorlist.h"
 var $6=(($5+264)|0); //@line 348 "./vectorlist.h"
 $3=$6; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 2: 
 var $8=$3; //@line 348 "./vectorlist.h"
 var $9=(($4+20)|0); //@line 348 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 348 "./vectorlist.h"
 var $11=(($4+4)|0); //@line 348 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 348 "./vectorlist.h"
 var $13=(($10+((($12)*(264))&-1))|0); //@line 348 "./vectorlist.h"
 var $14=($8>>>0)<($13>>>0); //@line 348 "./vectorlist.h"
 if($14){label=3;break;}else{label=7;break;} //@line 348 "./vectorlist.h"
 case 3: 
 var $16=$3; //@line 351 "./vectorlist.h"
 var $17=(($16+256)|0); //@line 351 "./vectorlist.h"
 var $18=HEAP8[($17)]; //@line 351 "./vectorlist.h"
 var $19=(($18)&1); //@line 351 "./vectorlist.h"
 if($19){label=5;break;}else{label=4;break;} //@line 351 "./vectorlist.h"
 case 4: 
 label=7;break; //@line 351 "./vectorlist.h"
 case 5: 
 label=6;break; //@line 352 "./vectorlist.h"
 case 6: 
 var $23=$3; //@line 348 "./vectorlist.h"
 var $24=(($23+264)|0); //@line 348 "./vectorlist.h"
 $3=$24; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 7: 
 var $26=$3; //@line 354 "./vectorlist.h"
 var $27=(($4+20)|0); //@line 354 "./vectorlist.h"
 var $28=HEAP32[(($27)>>2)]; //@line 354 "./vectorlist.h"
 var $29=(($4+4)|0); //@line 354 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 354 "./vectorlist.h"
 var $31=(($28+((($30)*(264))&-1))|0); //@line 354 "./vectorlist.h"
 var $32=($26>>>0)>=($31>>>0); //@line 354 "./vectorlist.h"
 if($32){label=8;break;}else{label=9;break;} //@line 354 "./vectorlist.h"
 case 8: 
 $1=0; //@line 354 "./vectorlist.h"
 label=10;break; //@line 354 "./vectorlist.h"
 case 9: 
 var $35=$3; //@line 355 "./vectorlist.h"
 $1=$35; //@line 355 "./vectorlist.h"
 label=10;break; //@line 355 "./vectorlist.h"
 case 10: 
 var $37=$1; //@line 356 "./vectorlist.h"
 STACKTOP=sp;return $37; //@line 356 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12enemyUnitHitR20vectorListNodeStructI15enemyUnitStructER23gameObjectPointerStruct($eUnit,$toucher){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+160)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $player;
 var $bullet;
 var $cunit;
 var $4=sp;
 var $5=(sp)+(80);
 $2=$eUnit;
 $3=$toucher;
 var $6=$2; //@line 47 "collisions.cpp"
 var $7=(($6)|0); //@line 47 "collisions.cpp"
 var $8=(($7+208)|0); //@line 47 "collisions.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 47 "collisions.cpp"
 var $10=($9|0)>0; //@line 47 "collisions.cpp"
 if($10){label=3;break;}else{label=2;break;} //@line 47 "collisions.cpp"
 case 2: 
 var $12=$2; //@line 47 "collisions.cpp"
 var $13=(($12)|0); //@line 47 "collisions.cpp"
 var $14=(($13+200)|0); //@line 47 "collisions.cpp"
 var $15=HEAPF64[(($14)>>3)]; //@line 47 "collisions.cpp"
 var $16=$15<=0; //@line 47 "collisions.cpp"
 if($16){label=3;break;}else{label=4;break;} //@line 47 "collisions.cpp"
 case 3: 
 $1=1; //@line 48 "collisions.cpp"
 label=40;break; //@line 48 "collisions.cpp"
 case 4: 
 var $19=$2; //@line 51 "collisions.cpp"
 var $20=(($19)|0); //@line 51 "collisions.cpp"
 var $21=(($20+176)|0); //@line 51 "collisions.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 51 "collisions.cpp"
 var $23=$2; //@line 51 "collisions.cpp"
 var $24=(($23)|0); //@line 51 "collisions.cpp"
 var $25=(($24+208)|0); //@line 51 "collisions.cpp"
 HEAP32[(($25)>>2)]=$22; //@line 51 "collisions.cpp"
 var $26=$2; //@line 55 "collisions.cpp"
 var $27=(($26)|0); //@line 55 "collisions.cpp"
 var $28=(($27+197)|0); //@line 55 "collisions.cpp"
 HEAP8[($28)]=0; //@line 55 "collisions.cpp"
 var $29=$2; //@line 56 "collisions.cpp"
 var $30=(($29)|0); //@line 56 "collisions.cpp"
 var $31=(($30+196)|0); //@line 56 "collisions.cpp"
 HEAP8[($31)]=0; //@line 56 "collisions.cpp"
 var $32=$3; //@line 59 "collisions.cpp"
 var $33=(($32+4)|0); //@line 59 "collisions.cpp"
 var $34=HEAP8[($33)]; //@line 59 "collisions.cpp"
 var $35=($34&255); //@line 59 "collisions.cpp"
 if(($35|0)==4){ label=10;break;}else if(($35|0)==2){ label=5;break;}else{label=19;break;}
 case 5: 
 var $37=$3; //@line 62 "collisions.cpp"
 var $38=(($37+8)|0); //@line 62 "collisions.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 62 "collisions.cpp"
 var $40=__ZN15vectorListClassI16playerUnitStructE7getNodeEm(19240,$39); //@line 62 "collisions.cpp"
 $player=$40; //@line 62 "collisions.cpp"
 var $41=$3; //@line 66 "collisions.cpp"
 var $42=$2; //@line 66 "collisions.cpp"
 var $43=(($42)|0); //@line 66 "collisions.cpp"
 var $44=(($43+184)|0); //@line 66 "collisions.cpp"
 var $45=HEAPF64[(($44)>>3)]; //@line 66 "collisions.cpp"
 var $46=__Z26playerIncrementScoreForHitR23gameObjectPointerStructd($41,$45); //@line 66 "collisions.cpp"
 var $47=$2; //@line 70 "collisions.cpp"
 var $48=(($47)|0); //@line 70 "collisions.cpp"
 var $49=$48; //@line 70 "collisions.cpp"
 var $50=(($49+128)|0); //@line 70 "collisions.cpp"
 var $51=HEAP8[($50)]; //@line 70 "collisions.cpp"
 var $52=(($51)&1); //@line 70 "collisions.cpp"
 if($52){label=6;break;}else{label=7;break;} //@line 70 "collisions.cpp"
 case 6: 
 var $54=$player; //@line 71 "collisions.cpp"
 var $55=(($54)|0); //@line 71 "collisions.cpp"
 var $56=$55; //@line 71 "collisions.cpp"
 var $57=(($56+120)|0); //@line 71 "collisions.cpp"
 var $58=HEAPF64[(($57)>>3)]; //@line 71 "collisions.cpp"
 var $59=$2; //@line 71 "collisions.cpp"
 var $60=(($59)|0); //@line 71 "collisions.cpp"
 var $61=(($60+200)|0); //@line 71 "collisions.cpp"
 var $62=HEAPF64[(($61)>>3)]; //@line 71 "collisions.cpp"
 var $63=($62)-($58); //@line 71 "collisions.cpp"
 HEAPF64[(($61)>>3)]=$63; //@line 71 "collisions.cpp"
 label=7;break; //@line 71 "collisions.cpp"
 case 7: 
 var $65=$2; //@line 72 "collisions.cpp"
 var $66=(($65)|0); //@line 72 "collisions.cpp"
 var $67=(($66+200)|0); //@line 72 "collisions.cpp"
 var $68=HEAPF64[(($67)>>3)]; //@line 72 "collisions.cpp"
 var $69=$68<0; //@line 72 "collisions.cpp"
 if($69){label=8;break;}else{label=9;break;} //@line 72 "collisions.cpp"
 case 8: 
 var $71=$2; //@line 72 "collisions.cpp"
 var $72=(($71)|0); //@line 72 "collisions.cpp"
 var $73=(($72+200)|0); //@line 72 "collisions.cpp"
 HEAPF64[(($73)>>3)]=0; //@line 72 "collisions.cpp"
 label=9;break; //@line 72 "collisions.cpp"
 case 9: 
 label=19;break; //@line 74 "collisions.cpp"
 case 10: 
 var $76=$3; //@line 77 "collisions.cpp"
 var $77=(($76+8)|0); //@line 77 "collisions.cpp"
 var $78=HEAP32[(($77)>>2)]; //@line 77 "collisions.cpp"
 var $79=__ZN15vectorListClassI16bulletUnitStructE7getNodeEm(19920,$78); //@line 77 "collisions.cpp"
 $bullet=$79; //@line 77 "collisions.cpp"
 var $80=$bullet; //@line 81 "collisions.cpp"
 var $81=(($80)|0); //@line 81 "collisions.cpp"
 var $82=(($81+184)|0); //@line 81 "collisions.cpp"
 var $83=(($82+4)|0); //@line 81 "collisions.cpp"
 var $84=HEAP8[($83)]; //@line 81 "collisions.cpp"
 var $85=($84&255); //@line 81 "collisions.cpp"
 var $86=($85|0)==2; //@line 81 "collisions.cpp"
 if($86){label=11;break;}else{label=14;break;} //@line 81 "collisions.cpp"
 case 11: 
 var $88=$bullet; //@line 86 "collisions.cpp"
 var $89=(($88)|0); //@line 86 "collisions.cpp"
 var $90=(($89+184)|0); //@line 86 "collisions.cpp"
 var $91=$2; //@line 86 "collisions.cpp"
 var $92=(($91)|0); //@line 86 "collisions.cpp"
 var $93=(($92+184)|0); //@line 86 "collisions.cpp"
 var $94=HEAPF64[(($93)>>3)]; //@line 86 "collisions.cpp"
 var $95=__Z26playerIncrementScoreForHitR23gameObjectPointerStructd($90,$94); //@line 86 "collisions.cpp"
 if($95){label=13;break;}else{label=12;break;} //@line 86 "collisions.cpp"
 case 12: 
 $1=0; //@line 88 "collisions.cpp"
 label=40;break; //@line 88 "collisions.cpp"
 case 13: 
 label=14;break; //@line 89 "collisions.cpp"
 case 14: 
 var $99=$2; //@line 93 "collisions.cpp"
 var $100=(($99)|0); //@line 93 "collisions.cpp"
 var $101=$100; //@line 93 "collisions.cpp"
 var $102=(($101+128)|0); //@line 93 "collisions.cpp"
 var $103=HEAP8[($102)]; //@line 93 "collisions.cpp"
 var $104=(($103)&1); //@line 93 "collisions.cpp"
 if($104){label=15;break;}else{label=16;break;} //@line 93 "collisions.cpp"
 case 15: 
 var $106=$bullet; //@line 94 "collisions.cpp"
 var $107=(($106)|0); //@line 94 "collisions.cpp"
 var $108=$107; //@line 94 "collisions.cpp"
 var $109=(($108+120)|0); //@line 94 "collisions.cpp"
 var $110=HEAPF64[(($109)>>3)]; //@line 94 "collisions.cpp"
 var $111=$2; //@line 94 "collisions.cpp"
 var $112=(($111)|0); //@line 94 "collisions.cpp"
 var $113=(($112+200)|0); //@line 94 "collisions.cpp"
 var $114=HEAPF64[(($113)>>3)]; //@line 94 "collisions.cpp"
 var $115=($114)-($110); //@line 94 "collisions.cpp"
 HEAPF64[(($113)>>3)]=$115; //@line 94 "collisions.cpp"
 label=16;break; //@line 94 "collisions.cpp"
 case 16: 
 var $117=$2; //@line 95 "collisions.cpp"
 var $118=(($117)|0); //@line 95 "collisions.cpp"
 var $119=(($118+200)|0); //@line 95 "collisions.cpp"
 var $120=HEAPF64[(($119)>>3)]; //@line 95 "collisions.cpp"
 var $121=$120<0; //@line 95 "collisions.cpp"
 if($121){label=17;break;}else{label=18;break;} //@line 95 "collisions.cpp"
 case 17: 
 var $123=$2; //@line 95 "collisions.cpp"
 var $124=(($123)|0); //@line 95 "collisions.cpp"
 var $125=(($124+200)|0); //@line 95 "collisions.cpp"
 HEAPF64[(($125)>>3)]=0; //@line 95 "collisions.cpp"
 label=18;break; //@line 95 "collisions.cpp"
 case 18: 
 label=19;break; //@line 97 "collisions.cpp"
 case 19: 
 var $128=$2; //@line 101 "collisions.cpp"
 var $129=(($128)|0); //@line 101 "collisions.cpp"
 var $130=(($129+208)|0); //@line 101 "collisions.cpp"
 var $131=HEAP32[(($130)>>2)]; //@line 101 "collisions.cpp"
 var $132=($131|0)>0; //@line 101 "collisions.cpp"
 if($132){label=20;break;}else{label=39;break;} //@line 101 "collisions.cpp"
 case 20: 
 var $134=$2; //@line 102 "collisions.cpp"
 var $135=(($134)|0); //@line 102 "collisions.cpp"
 var $136=$135; //@line 102 "collisions.cpp"
 var $137=(($136+24)|0); //@line 102 "collisions.cpp"
 var $138=HEAP32[(($137)>>2)]; //@line 102 "collisions.cpp"
 if(($138|0)==7|($138|0)==6){ label=21;break;}else{label=38;break;}
 case 21: 
 var $140=$2; //@line 105 "collisions.cpp"
 var $141=(($140)|0); //@line 105 "collisions.cpp"
 var $142=$141; //@line 105 "collisions.cpp"
 var $143=(($142+24)|0); //@line 105 "collisions.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 105 "collisions.cpp"
 if(($144|0)==7){ label=22;break;}else if(($144|0)==6){ label=23;break;}else{label=24;break;}
 case 22: 
 var $146=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(16472,0); //@line 108 "collisions.cpp"
 var $147=$2; //@line 108 "collisions.cpp"
 var $148=(($147)|0); //@line 108 "collisions.cpp"
 var $149=$148; //@line 108 "collisions.cpp"
 var $150=(($149+88)|0); //@line 108 "collisions.cpp"
 HEAP32[(($150)>>2)]=$146; //@line 108 "collisions.cpp"
 label=24;break; //@line 109 "collisions.cpp"
 case 23: 
 var $152=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(16448,0); //@line 113 "collisions.cpp"
 var $153=$2; //@line 113 "collisions.cpp"
 var $154=(($153)|0); //@line 113 "collisions.cpp"
 var $155=$154; //@line 113 "collisions.cpp"
 var $156=(($155+88)|0); //@line 113 "collisions.cpp"
 HEAP32[(($156)>>2)]=$152; //@line 113 "collisions.cpp"
 label=24;break; //@line 114 "collisions.cpp"
 case 24: 
 var $158=$2; //@line 117 "collisions.cpp"
 var $159=(($158)|0); //@line 117 "collisions.cpp"
 var $160=$159; //@line 117 "collisions.cpp"
 var $161=(($160+131)|0); //@line 117 "collisions.cpp"
 HEAP8[($161)]=1; //@line 117 "collisions.cpp"
 var $162=$2; //@line 119 "collisions.cpp"
 var $163=(($162)|0); //@line 119 "collisions.cpp"
 var $164=$163; //@line 119 "collisions.cpp"
 var $165=(($164+92)|0); //@line 119 "collisions.cpp"
 HEAP32[(($165)>>2)]=0; //@line 119 "collisions.cpp"
 var $166=$2; //@line 123 "collisions.cpp"
 var $167=(($166)|0); //@line 123 "collisions.cpp"
 var $168=$167; //@line 123 "collisions.cpp"
 var $169=(($168+144)|0); //@line 123 "collisions.cpp"
 var $170=(($169+4)|0); //@line 123 "collisions.cpp"
 var $171=HEAP8[($170)]; //@line 123 "collisions.cpp"
 var $172=($171&255); //@line 123 "collisions.cpp"
 var $173=($172|0)!=0; //@line 123 "collisions.cpp"
 if($173){label=25;break;}else{label=35;break;} //@line 123 "collisions.cpp"
 case 25: 
 var $175=$2; //@line 130 "collisions.cpp"
 var $176=(($175)|0); //@line 130 "collisions.cpp"
 var $177=$176; //@line 130 "collisions.cpp"
 var $178=(($177+144)|0); //@line 130 "collisions.cpp"
 var $179=(($178+4)|0); //@line 130 "collisions.cpp"
 var $180=HEAP8[($179)]; //@line 130 "collisions.cpp"
 var $181=($180&255); //@line 130 "collisions.cpp"
 var $182=($181|0)!=3; //@line 130 "collisions.cpp"
 if($182){label=26;break;}else{label=27;break;} //@line 130 "collisions.cpp"
 case 26: 
 $1=0; //@line 131 "collisions.cpp"
 label=40;break; //@line 131 "collisions.cpp"
 case 27: 
 var $185=$2; //@line 134 "collisions.cpp"
 var $186=(($185)|0); //@line 134 "collisions.cpp"
 var $187=$186; //@line 134 "collisions.cpp"
 var $188=(($187+144)|0); //@line 134 "collisions.cpp"
 var $189=(($188+8)|0); //@line 134 "collisions.cpp"
 var $190=HEAP32[(($189)>>2)]; //@line 134 "collisions.cpp"
 var $191=__ZN15vectorListClassI15enemyUnitStructE7getNodeEm(19752,$190); //@line 134 "collisions.cpp"
 $cunit=$191; //@line 134 "collisions.cpp"
 var $192=$cunit; //@line 136 "collisions.cpp"
 var $193=($192|0)==0; //@line 136 "collisions.cpp"
 if($193){label=29;break;}else{label=28;break;} //@line 136 "collisions.cpp"
 case 28: 
 var $195=$cunit; //@line 136 "collisions.cpp"
 var $196=(($195)|0); //@line 136 "collisions.cpp"
 var $197=$196; //@line 136 "collisions.cpp"
 var $198=(($197)|0); //@line 136 "collisions.cpp"
 var $199=HEAP32[(($198)>>2)]; //@line 136 "collisions.cpp"
 var $200=$2; //@line 136 "collisions.cpp"
 var $201=(($200)|0); //@line 136 "collisions.cpp"
 var $202=$201; //@line 136 "collisions.cpp"
 var $203=(($202+144)|0); //@line 136 "collisions.cpp"
 var $204=(($203)|0); //@line 136 "collisions.cpp"
 var $205=HEAP32[(($204)>>2)]; //@line 136 "collisions.cpp"
 var $206=($199|0)!=($205|0); //@line 136 "collisions.cpp"
 if($206){label=29;break;}else{label=30;break;} //@line 136 "collisions.cpp"
 case 29: 
 $1=0; //@line 138 "collisions.cpp"
 label=40;break; //@line 138 "collisions.cpp"
 case 30: 
 var $209=$2; //@line 141 "collisions.cpp"
 var $210=(($209)|0); //@line 141 "collisions.cpp"
 var $211=$210; //@line 141 "collisions.cpp"
 var $212=__Z12freeSlavesOfP17genericUnitStruct($211); //@line 141 "collisions.cpp"
 if($212){label=32;break;}else{label=31;break;} //@line 141 "collisions.cpp"
 case 31: 
 $1=0; //@line 141 "collisions.cpp"
 label=40;break; //@line 141 "collisions.cpp"
 case 32: 
 var $215=$cunit; //@line 144 "collisions.cpp"
 var $216=(($215)|0); //@line 144 "collisions.cpp"
 var $217=__Z16unitStartFallingR15enemyUnitStruct($216); //@line 144 "collisions.cpp"
 if($217){label=34;break;}else{label=33;break;} //@line 144 "collisions.cpp"
 case 33: 
 $1=0; //@line 144 "collisions.cpp"
 label=40;break; //@line 144 "collisions.cpp"
 case 34: 
 label=35;break; //@line 145 "collisions.cpp"
 case 35: 
 var $221=$2; //@line 148 "collisions.cpp"
 var $222=(($221)|0); //@line 148 "collisions.cpp"
 var $223=$222; //@line 148 "collisions.cpp"
 var $224=(($223+8)|0); //@line 148 "collisions.cpp"
 var $225=HEAPF64[(($224)>>3)]; //@line 148 "collisions.cpp"
 var $226=($225)-(50); //@line 148 "collisions.cpp"
 var $227=$2; //@line 148 "collisions.cpp"
 var $228=(($227)|0); //@line 148 "collisions.cpp"
 var $229=$228; //@line 148 "collisions.cpp"
 var $230=(($229+160)|0); //@line 148 "collisions.cpp"
 HEAPF64[(($230)>>3)]=$226; //@line 148 "collisions.cpp"
 var $231=$2; //@line 150 "collisions.cpp"
 var $232=(($231)|0); //@line 150 "collisions.cpp"
 var $233=$232; //@line 150 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($4,$233); //@line 150 "collisions.cpp"
 var $234=(($4+20)|0); //@line 150 "collisions.cpp"
 var $235=HEAP32[(($234)>>2)]; //@line 150 "collisions.cpp"
 var $236=$2; //@line 151 "collisions.cpp"
 var $237=(($236)|0); //@line 151 "collisions.cpp"
 var $238=$237; //@line 151 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($5,$238); //@line 151 "collisions.cpp"
 var $239=(($5+44)|0); //@line 151 "collisions.cpp"
 var $240=HEAP32[(($239)>>2)]; //@line 151 "collisions.cpp"
 var $241=((($235)-($240))|0); //@line 151 "collisions.cpp"
 var $242=(((-$241))|0); //@line 151 "collisions.cpp"
 var $243=($242|0); //@line 151 "collisions.cpp"
 var $244=$2; //@line 151 "collisions.cpp"
 var $245=(($244)|0); //@line 151 "collisions.cpp"
 var $246=$245; //@line 151 "collisions.cpp"
 var $247=(($246+168)|0); //@line 151 "collisions.cpp"
 HEAPF64[(($247)>>3)]=$243; //@line 151 "collisions.cpp"
 var $248=$2; //@line 152 "collisions.cpp"
 var $249=(($248)|0); //@line 152 "collisions.cpp"
 var $250=$249; //@line 152 "collisions.cpp"
 var $251=(($250+156)|0); //@line 152 "collisions.cpp"
 HEAP8[($251)]=1; //@line 152 "collisions.cpp"
 var $252=$2; //@line 153 "collisions.cpp"
 var $253=(($252)|0); //@line 153 "collisions.cpp"
 var $254=$253; //@line 153 "collisions.cpp"
 var $255=(($254+96)|0); //@line 153 "collisions.cpp"
 var $256=HEAP8[($255)]; //@line 153 "collisions.cpp"
 var $257=(($256)&1); //@line 153 "collisions.cpp"
 if($257){label=36;break;}else{label=37;break;} //@line 153 "collisions.cpp"
 case 36: 
 var $259=HEAPF64[((19560)>>3)]; //@line 155 "collisions.cpp"
 var $260=$2; //@line 155 "collisions.cpp"
 var $261=(($260)|0); //@line 155 "collisions.cpp"
 var $262=$261; //@line 155 "collisions.cpp"
 var $263=(($262+160)|0); //@line 155 "collisions.cpp"
 var $264=HEAPF64[(($263)>>3)]; //@line 155 "collisions.cpp"
 var $265=($264)-($259); //@line 155 "collisions.cpp"
 HEAPF64[(($263)>>3)]=$265; //@line 155 "collisions.cpp"
 var $266=HEAPF64[((19568)>>3)]; //@line 156 "collisions.cpp"
 var $267=$2; //@line 156 "collisions.cpp"
 var $268=(($267)|0); //@line 156 "collisions.cpp"
 var $269=$268; //@line 156 "collisions.cpp"
 var $270=(($269+168)|0); //@line 156 "collisions.cpp"
 var $271=HEAPF64[(($270)>>3)]; //@line 156 "collisions.cpp"
 var $272=($271)-($266); //@line 156 "collisions.cpp"
 HEAPF64[(($270)>>3)]=$272; //@line 156 "collisions.cpp"
 label=37;break; //@line 157 "collisions.cpp"
 case 37: 
 var $274=$2; //@line 159 "collisions.cpp"
 var $275=(($274)|0); //@line 159 "collisions.cpp"
 var $276=$275; //@line 159 "collisions.cpp"
 var $277=$2; //@line 159 "collisions.cpp"
 var $278=(($277)|0); //@line 159 "collisions.cpp"
 var $279=$278; //@line 159 "collisions.cpp"
 var $280=(($279+160)|0); //@line 159 "collisions.cpp"
 var $281=HEAPF64[(($280)>>3)]; //@line 159 "collisions.cpp"
 var $282=$2; //@line 159 "collisions.cpp"
 var $283=(($282)|0); //@line 159 "collisions.cpp"
 var $284=$283; //@line 159 "collisions.cpp"
 var $285=(($284+168)|0); //@line 159 "collisions.cpp"
 var $286=HEAPF64[(($285)>>3)]; //@line 159 "collisions.cpp"
 var $287=$2; //@line 159 "collisions.cpp"
 var $288=(($287)|0); //@line 159 "collisions.cpp"
 var $289=$288; //@line 159 "collisions.cpp"
 var $290=(($289+80)|0); //@line 159 "collisions.cpp"
 var $291=HEAPF64[(($290)>>3)]; //@line 159 "collisions.cpp"
 var $292=($291)*((1.5)); //@line 159 "collisions.cpp"
 var $293=__Z21setSpeedForLinealMoveP17genericUnitStructeed($276,$281,$286,$292); //@line 159 "collisions.cpp"
 label=38;break; //@line 163 "collisions.cpp"
 case 38: 
 label=39;break; //@line 165 "collisions.cpp"
 case 39: 
 $1=1; //@line 167 "collisions.cpp"
 label=40;break; //@line 167 "collisions.cpp"
 case 40: 
 var $297=$1; //@line 168 "collisions.cpp"
 STACKTOP=sp;return $297; //@line 168 "collisions.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE7getNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$nodeNumber;
 var $3=$1;
 var $4=$2; //@line 102 "./vectorlist.h"
 var $5=__ZN15vectorListClassI16playerUnitStructE12isValidIndexEm($3,$4); //@line 102 "./vectorlist.h"
 if($5){label=2;break;}else{label=3;break;} //@line 102 "./vectorlist.h"
 case 2: 
 var $7=(($3+20)|0); //@line 102 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 102 "./vectorlist.h"
 var $9=$2; //@line 102 "./vectorlist.h"
 var $10=(($8+((($9)*(264))&-1))|0); //@line 102 "./vectorlist.h"
 var $13=$10;label=4;break; //@line 102 "./vectorlist.h"
 case 3: 
 var $13=0;label=4;break; //@line 102 "./vectorlist.h"
 case 4: 
 var $13; //@line 102 "./vectorlist.h"
 STACKTOP=sp;return $13; //@line 102 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE7getNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$nodeNumber;
 var $3=$1;
 var $4=$2; //@line 102 "./vectorlist.h"
 var $5=__ZN15vectorListClassI16bulletUnitStructE12isValidIndexEm($3,$4); //@line 102 "./vectorlist.h"
 if($5){label=2;break;}else{label=3;break;} //@line 102 "./vectorlist.h"
 case 2: 
 var $7=(($3+20)|0); //@line 102 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 102 "./vectorlist.h"
 var $9=$2; //@line 102 "./vectorlist.h"
 var $10=(($8+((($9)*(216))&-1))|0); //@line 102 "./vectorlist.h"
 var $13=$10;label=4;break; //@line 102 "./vectorlist.h"
 case 3: 
 var $13=0;label=4;break; //@line 102 "./vectorlist.h"
 case 4: 
 var $13; //@line 102 "./vectorlist.h"
 STACKTOP=sp;return $13; //@line 102 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE7getNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$nodeNumber;
 var $3=$1;
 var $4=$2; //@line 102 "./vectorlist.h"
 var $5=__ZN15vectorListClassI15enemyUnitStructE12isValidIndexEm($3,$4); //@line 102 "./vectorlist.h"
 if($5){label=2;break;}else{label=3;break;} //@line 102 "./vectorlist.h"
 case 2: 
 var $7=(($3+20)|0); //@line 102 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 102 "./vectorlist.h"
 var $9=$2; //@line 102 "./vectorlist.h"
 var $10=(($8+((($9)*(264))&-1))|0); //@line 102 "./vectorlist.h"
 var $13=$10;label=4;break; //@line 102 "./vectorlist.h"
 case 3: 
 var $13=0;label=4;break; //@line 102 "./vectorlist.h"
 case 4: 
 var $13; //@line 102 "./vectorlist.h"
 STACKTOP=sp;return $13; //@line 102 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13playerUnitHitR20vectorListNodeStructI16playerUnitStructER23gameObjectPointerStruct($pUnit,$toucher){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+160)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $enemy;
 var $player2;
 var $bullet;
 var $counter;
 var $extraPlayer;
 var $4=sp;
 var $5=(sp)+(80);
 $2=$pUnit;
 $3=$toucher;
 var $6=$2; //@line 188 "collisions.cpp"
 var $7=(($6)|0); //@line 188 "collisions.cpp"
 var $8=(($7+228)|0); //@line 188 "collisions.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 188 "collisions.cpp"
 var $10=($9|0)>0; //@line 188 "collisions.cpp"
 if($10){label=3;break;}else{label=2;break;} //@line 188 "collisions.cpp"
 case 2: 
 var $12=$2; //@line 188 "collisions.cpp"
 var $13=(($12)|0); //@line 188 "collisions.cpp"
 var $14=(($13+240)|0); //@line 188 "collisions.cpp"
 var $15=HEAPF64[(($14)>>3)]; //@line 188 "collisions.cpp"
 var $16=$15<=0; //@line 188 "collisions.cpp"
 if($16){label=3;break;}else{label=4;break;} //@line 188 "collisions.cpp"
 case 3: 
 $1=1; //@line 189 "collisions.cpp"
 label=47;break; //@line 189 "collisions.cpp"
 case 4: 
 var $19=$2; //@line 192 "collisions.cpp"
 var $20=(($19)|0); //@line 192 "collisions.cpp"
 var $21=(($20+204)|0); //@line 192 "collisions.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 192 "collisions.cpp"
 var $23=$2; //@line 192 "collisions.cpp"
 var $24=(($23)|0); //@line 192 "collisions.cpp"
 var $25=(($24+228)|0); //@line 192 "collisions.cpp"
 HEAP32[(($25)>>2)]=$22; //@line 192 "collisions.cpp"
 var $26=$3; //@line 195 "collisions.cpp"
 var $27=(($26+4)|0); //@line 195 "collisions.cpp"
 var $28=HEAP8[($27)]; //@line 195 "collisions.cpp"
 var $29=($28&255); //@line 195 "collisions.cpp"
 if(($29|0)==2){ label=10;break;}else if(($29|0)==4){ label=15;break;}else if(($29|0)==3){ label=5;break;}else{label=24;break;}
 case 5: 
 var $31=$3; //@line 198 "collisions.cpp"
 var $32=(($31+8)|0); //@line 198 "collisions.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 198 "collisions.cpp"
 var $34=__ZN15vectorListClassI15enemyUnitStructE7getNodeEm(19752,$33); //@line 198 "collisions.cpp"
 $enemy=$34; //@line 198 "collisions.cpp"
 var $35=$2; //@line 203 "collisions.cpp"
 var $36=(($35)|0); //@line 203 "collisions.cpp"
 var $37=$36; //@line 203 "collisions.cpp"
 var $38=(($37+128)|0); //@line 203 "collisions.cpp"
 var $39=HEAP8[($38)]; //@line 203 "collisions.cpp"
 var $40=(($39)&1); //@line 203 "collisions.cpp"
 if($40){label=6;break;}else{label=7;break;} //@line 203 "collisions.cpp"
 case 6: 
 var $42=$enemy; //@line 204 "collisions.cpp"
 var $43=(($42)|0); //@line 204 "collisions.cpp"
 var $44=$43; //@line 204 "collisions.cpp"
 var $45=(($44+120)|0); //@line 204 "collisions.cpp"
 var $46=HEAPF64[(($45)>>3)]; //@line 204 "collisions.cpp"
 var $47=$2; //@line 204 "collisions.cpp"
 var $48=(($47)|0); //@line 204 "collisions.cpp"
 var $49=(($48+240)|0); //@line 204 "collisions.cpp"
 var $50=HEAPF64[(($49)>>3)]; //@line 204 "collisions.cpp"
 var $51=($50)-($46); //@line 204 "collisions.cpp"
 HEAPF64[(($49)>>3)]=$51; //@line 204 "collisions.cpp"
 label=7;break; //@line 204 "collisions.cpp"
 case 7: 
 var $53=$2; //@line 205 "collisions.cpp"
 var $54=(($53)|0); //@line 205 "collisions.cpp"
 var $55=(($54+240)|0); //@line 205 "collisions.cpp"
 var $56=HEAPF64[(($55)>>3)]; //@line 205 "collisions.cpp"
 var $57=$56<0; //@line 205 "collisions.cpp"
 if($57){label=8;break;}else{label=9;break;} //@line 205 "collisions.cpp"
 case 8: 
 var $59=$2; //@line 205 "collisions.cpp"
 var $60=(($59)|0); //@line 205 "collisions.cpp"
 var $61=(($60+240)|0); //@line 205 "collisions.cpp"
 HEAPF64[(($61)>>3)]=0; //@line 205 "collisions.cpp"
 label=9;break; //@line 205 "collisions.cpp"
 case 9: 
 label=24;break; //@line 207 "collisions.cpp"
 case 10: 
 var $64=$3; //@line 210 "collisions.cpp"
 var $65=(($64+8)|0); //@line 210 "collisions.cpp"
 var $66=HEAP32[(($65)>>2)]; //@line 210 "collisions.cpp"
 var $67=__ZN15vectorListClassI16playerUnitStructE7getNodeEm(19240,$66); //@line 210 "collisions.cpp"
 $player2=$67; //@line 210 "collisions.cpp"
 var $68=$3; //@line 214 "collisions.cpp"
 var $69=$2; //@line 214 "collisions.cpp"
 var $70=(($69)|0); //@line 214 "collisions.cpp"
 var $71=(($70+216)|0); //@line 214 "collisions.cpp"
 var $72=HEAPF64[(($71)>>3)]; //@line 214 "collisions.cpp"
 var $73=__Z26playerIncrementScoreForHitR23gameObjectPointerStructd($68,$72); //@line 214 "collisions.cpp"
 var $74=$2; //@line 220 "collisions.cpp"
 var $75=(($74)|0); //@line 220 "collisions.cpp"
 var $76=$75; //@line 220 "collisions.cpp"
 var $77=(($76+128)|0); //@line 220 "collisions.cpp"
 var $78=HEAP8[($77)]; //@line 220 "collisions.cpp"
 var $79=(($78)&1); //@line 220 "collisions.cpp"
 if($79){label=11;break;}else{label=12;break;} //@line 220 "collisions.cpp"
 case 11: 
 var $81=$player2; //@line 221 "collisions.cpp"
 var $82=(($81)|0); //@line 221 "collisions.cpp"
 var $83=$82; //@line 221 "collisions.cpp"
 var $84=(($83+120)|0); //@line 221 "collisions.cpp"
 var $85=HEAPF64[(($84)>>3)]; //@line 221 "collisions.cpp"
 var $86=$2; //@line 221 "collisions.cpp"
 var $87=(($86)|0); //@line 221 "collisions.cpp"
 var $88=(($87+240)|0); //@line 221 "collisions.cpp"
 var $89=HEAPF64[(($88)>>3)]; //@line 221 "collisions.cpp"
 var $90=($89)-($85); //@line 221 "collisions.cpp"
 HEAPF64[(($88)>>3)]=$90; //@line 221 "collisions.cpp"
 label=12;break; //@line 221 "collisions.cpp"
 case 12: 
 var $92=$2; //@line 222 "collisions.cpp"
 var $93=(($92)|0); //@line 222 "collisions.cpp"
 var $94=(($93+240)|0); //@line 222 "collisions.cpp"
 var $95=HEAPF64[(($94)>>3)]; //@line 222 "collisions.cpp"
 var $96=$95<0; //@line 222 "collisions.cpp"
 if($96){label=13;break;}else{label=14;break;} //@line 222 "collisions.cpp"
 case 13: 
 var $98=$2; //@line 222 "collisions.cpp"
 var $99=(($98)|0); //@line 222 "collisions.cpp"
 var $100=(($99+240)|0); //@line 222 "collisions.cpp"
 HEAPF64[(($100)>>3)]=0; //@line 222 "collisions.cpp"
 label=14;break; //@line 222 "collisions.cpp"
 case 14: 
 label=24;break; //@line 224 "collisions.cpp"
 case 15: 
 var $103=$3; //@line 227 "collisions.cpp"
 var $104=(($103+8)|0); //@line 227 "collisions.cpp"
 var $105=HEAP32[(($104)>>2)]; //@line 227 "collisions.cpp"
 var $106=__ZN15vectorListClassI16bulletUnitStructE7getNodeEm(19920,$105); //@line 227 "collisions.cpp"
 $bullet=$106; //@line 227 "collisions.cpp"
 var $107=$bullet; //@line 231 "collisions.cpp"
 var $108=(($107)|0); //@line 231 "collisions.cpp"
 var $109=(($108+184)|0); //@line 231 "collisions.cpp"
 var $110=(($109+4)|0); //@line 231 "collisions.cpp"
 var $111=HEAP8[($110)]; //@line 231 "collisions.cpp"
 var $112=($111&255); //@line 231 "collisions.cpp"
 var $113=($112|0)==2; //@line 231 "collisions.cpp"
 if($113){label=16;break;}else{label=19;break;} //@line 231 "collisions.cpp"
 case 16: 
 var $115=$bullet; //@line 236 "collisions.cpp"
 var $116=(($115)|0); //@line 236 "collisions.cpp"
 var $117=(($116+184)|0); //@line 236 "collisions.cpp"
 var $118=$2; //@line 236 "collisions.cpp"
 var $119=(($118)|0); //@line 236 "collisions.cpp"
 var $120=(($119+216)|0); //@line 236 "collisions.cpp"
 var $121=HEAPF64[(($120)>>3)]; //@line 236 "collisions.cpp"
 var $122=__Z26playerIncrementScoreForHitR23gameObjectPointerStructd($117,$121); //@line 236 "collisions.cpp"
 if($122){label=18;break;}else{label=17;break;} //@line 236 "collisions.cpp"
 case 17: 
 $1=0; //@line 238 "collisions.cpp"
 label=47;break; //@line 238 "collisions.cpp"
 case 18: 
 label=19;break; //@line 239 "collisions.cpp"
 case 19: 
 var $126=$2; //@line 243 "collisions.cpp"
 var $127=(($126)|0); //@line 243 "collisions.cpp"
 var $128=$127; //@line 243 "collisions.cpp"
 var $129=(($128+128)|0); //@line 243 "collisions.cpp"
 var $130=HEAP8[($129)]; //@line 243 "collisions.cpp"
 var $131=(($130)&1); //@line 243 "collisions.cpp"
 if($131){label=20;break;}else{label=21;break;} //@line 243 "collisions.cpp"
 case 20: 
 var $133=$bullet; //@line 244 "collisions.cpp"
 var $134=(($133)|0); //@line 244 "collisions.cpp"
 var $135=$134; //@line 244 "collisions.cpp"
 var $136=(($135+120)|0); //@line 244 "collisions.cpp"
 var $137=HEAPF64[(($136)>>3)]; //@line 244 "collisions.cpp"
 var $138=$2; //@line 244 "collisions.cpp"
 var $139=(($138)|0); //@line 244 "collisions.cpp"
 var $140=(($139+240)|0); //@line 244 "collisions.cpp"
 var $141=HEAPF64[(($140)>>3)]; //@line 244 "collisions.cpp"
 var $142=($141)-($137); //@line 244 "collisions.cpp"
 HEAPF64[(($140)>>3)]=$142; //@line 244 "collisions.cpp"
 label=21;break; //@line 244 "collisions.cpp"
 case 21: 
 var $144=$2; //@line 245 "collisions.cpp"
 var $145=(($144)|0); //@line 245 "collisions.cpp"
 var $146=(($145+240)|0); //@line 245 "collisions.cpp"
 var $147=HEAPF64[(($146)>>3)]; //@line 245 "collisions.cpp"
 var $148=$147<0; //@line 245 "collisions.cpp"
 if($148){label=22;break;}else{label=23;break;} //@line 245 "collisions.cpp"
 case 22: 
 var $150=$2; //@line 245 "collisions.cpp"
 var $151=(($150)|0); //@line 245 "collisions.cpp"
 var $152=(($151+240)|0); //@line 245 "collisions.cpp"
 HEAPF64[(($152)>>3)]=0; //@line 245 "collisions.cpp"
 label=23;break; //@line 245 "collisions.cpp"
 case 23: 
 label=24;break; //@line 247 "collisions.cpp"
 case 24: 
 var $155=$2; //@line 251 "collisions.cpp"
 var $156=(($155)|0); //@line 251 "collisions.cpp"
 var $157=(($156+240)|0); //@line 251 "collisions.cpp"
 var $158=HEAPF64[(($157)>>3)]; //@line 251 "collisions.cpp"
 var $159=$158<=0; //@line 251 "collisions.cpp"
 if($159){label=25;break;}else{label=41;break;} //@line 251 "collisions.cpp"
 case 25: 
 var $161=$2; //@line 256 "collisions.cpp"
 var $162=(($161)|0); //@line 256 "collisions.cpp"
 var $163=$162; //@line 256 "collisions.cpp"
 var $164=(($163+24)|0); //@line 256 "collisions.cpp"
 var $165=HEAP32[(($164)>>2)]; //@line 256 "collisions.cpp"
 if(($165|0)==4){ label=26;break;}else{label=27;break;}
 case 26: 
 var $167=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(12616,0); //@line 259 "collisions.cpp"
 var $168=$2; //@line 259 "collisions.cpp"
 var $169=(($168)|0); //@line 259 "collisions.cpp"
 var $170=$169; //@line 259 "collisions.cpp"
 var $171=(($170+88)|0); //@line 259 "collisions.cpp"
 HEAP32[(($171)>>2)]=$167; //@line 259 "collisions.cpp"
 var $172=$2; //@line 261 "collisions.cpp"
 var $173=(($172)|0); //@line 261 "collisions.cpp"
 var $174=$173; //@line 261 "collisions.cpp"
 var $175=(($174+92)|0); //@line 261 "collisions.cpp"
 HEAP32[(($175)>>2)]=0; //@line 261 "collisions.cpp"
 label=27;break; //@line 262 "collisions.cpp"
 case 27: 
 var $177=$2; //@line 266 "collisions.cpp"
 var $178=(($177)|0); //@line 266 "collisions.cpp"
 var $179=(($178+228)|0); //@line 266 "collisions.cpp"
 HEAP32[(($179)>>2)]=0; //@line 266 "collisions.cpp"
 var $180=$2; //@line 267 "collisions.cpp"
 var $181=(($180)|0); //@line 267 "collisions.cpp"
 var $182=(($181+232)|0); //@line 267 "collisions.cpp"
 HEAP32[(($182)>>2)]=0; //@line 267 "collisions.cpp"
 var $183=$2; //@line 268 "collisions.cpp"
 var $184=(($183)|0); //@line 268 "collisions.cpp"
 var $185=$184; //@line 268 "collisions.cpp"
 var $186=(($185+131)|0); //@line 268 "collisions.cpp"
 HEAP8[($186)]=0; //@line 268 "collisions.cpp"
 var $187=$2; //@line 271 "collisions.cpp"
 var $188=(($187)|0); //@line 271 "collisions.cpp"
 var $189=$188; //@line 271 "collisions.cpp"
 var $190=(($189+156)|0); //@line 271 "collisions.cpp"
 HEAP8[($190)]=1; //@line 271 "collisions.cpp"
 var $191=$2; //@line 272 "collisions.cpp"
 var $192=(($191)|0); //@line 272 "collisions.cpp"
 var $193=$192; //@line 272 "collisions.cpp"
 var $194=(($193+160)|0); //@line 272 "collisions.cpp"
 HEAPF64[(($194)>>3)]=110; //@line 272 "collisions.cpp"
 var $195=HEAPF64[((19568)>>3)]; //@line 273 "collisions.cpp"
 var $196=$2; //@line 275 "collisions.cpp"
 var $197=(($196)|0); //@line 275 "collisions.cpp"
 var $198=$197; //@line 275 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($4,$198); //@line 275 "collisions.cpp"
 var $199=(($4+20)|0); //@line 275 "collisions.cpp"
 var $200=HEAP32[(($199)>>2)]; //@line 275 "collisions.cpp"
 var $201=((($200)+(20))|0); //@line 275 "collisions.cpp"
 var $202=($201|0); //@line 275 "collisions.cpp"
 var $203=($195)-($202); //@line 275 "collisions.cpp"
 var $204=$2; //@line 276 "collisions.cpp"
 var $205=(($204)|0); //@line 276 "collisions.cpp"
 var $206=$205; //@line 276 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($5,$206); //@line 276 "collisions.cpp"
 var $207=(($5+44)|0); //@line 276 "collisions.cpp"
 var $208=HEAP32[(($207)>>2)]; //@line 276 "collisions.cpp"
 var $209=($208|0); //@line 276 "collisions.cpp"
 var $210=($203)+($209); //@line 276 "collisions.cpp"
 var $211=$2; //@line 276 "collisions.cpp"
 var $212=(($211)|0); //@line 276 "collisions.cpp"
 var $213=$212; //@line 276 "collisions.cpp"
 var $214=(($213+168)|0); //@line 276 "collisions.cpp"
 HEAPF64[(($214)>>3)]=$210; //@line 276 "collisions.cpp"
 var $215=$2; //@line 277 "collisions.cpp"
 var $216=(($215)|0); //@line 277 "collisions.cpp"
 var $217=$216; //@line 277 "collisions.cpp"
 var $218=(($217+96)|0); //@line 277 "collisions.cpp"
 var $219=HEAP8[($218)]; //@line 277 "collisions.cpp"
 var $220=(($219)&1); //@line 277 "collisions.cpp"
 if($220){label=28;break;}else{label=29;break;} //@line 277 "collisions.cpp"
 case 28: 
 var $222=HEAPF64[((19560)>>3)]; //@line 279 "collisions.cpp"
 var $223=$2; //@line 279 "collisions.cpp"
 var $224=(($223)|0); //@line 279 "collisions.cpp"
 var $225=$224; //@line 279 "collisions.cpp"
 var $226=(($225+160)|0); //@line 279 "collisions.cpp"
 var $227=HEAPF64[(($226)>>3)]; //@line 279 "collisions.cpp"
 var $228=($227)-($222); //@line 279 "collisions.cpp"
 HEAPF64[(($226)>>3)]=$228; //@line 279 "collisions.cpp"
 var $229=HEAPF64[((19568)>>3)]; //@line 280 "collisions.cpp"
 var $230=$2; //@line 280 "collisions.cpp"
 var $231=(($230)|0); //@line 280 "collisions.cpp"
 var $232=$231; //@line 280 "collisions.cpp"
 var $233=(($232+168)|0); //@line 280 "collisions.cpp"
 var $234=HEAPF64[(($233)>>3)]; //@line 280 "collisions.cpp"
 var $235=($234)-($229); //@line 280 "collisions.cpp"
 HEAPF64[(($233)>>3)]=$235; //@line 280 "collisions.cpp"
 label=29;break; //@line 281 "collisions.cpp"
 case 29: 
 var $237=$2; //@line 282 "collisions.cpp"
 var $238=(($237)|0); //@line 282 "collisions.cpp"
 var $239=$238; //@line 282 "collisions.cpp"
 var $240=$2; //@line 282 "collisions.cpp"
 var $241=(($240)|0); //@line 282 "collisions.cpp"
 var $242=$241; //@line 282 "collisions.cpp"
 var $243=(($242+160)|0); //@line 282 "collisions.cpp"
 var $244=HEAPF64[(($243)>>3)]; //@line 282 "collisions.cpp"
 var $245=$2; //@line 282 "collisions.cpp"
 var $246=(($245)|0); //@line 282 "collisions.cpp"
 var $247=$246; //@line 282 "collisions.cpp"
 var $248=(($247+168)|0); //@line 282 "collisions.cpp"
 var $249=HEAPF64[(($248)>>3)]; //@line 282 "collisions.cpp"
 var $250=HEAP32[((2136)>>2)]; //@line 282 "collisions.cpp"
 var $251=($250|0); //@line 282 "collisions.cpp"
 var $252=(160)/($251); //@line 282 "collisions.cpp"
 var $253=__Z21setSpeedForLinealMoveP17genericUnitStructeed($239,$244,$249,$252); //@line 282 "collisions.cpp"
 var $254=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 291 "collisions.cpp"
 $extraPlayer=$254; //@line 291 "collisions.cpp"
 $counter=0; //@line 291 "collisions.cpp"
 label=30;break; //@line 291 "collisions.cpp"
 case 30: 
 var $256=$extraPlayer; //@line 291 "collisions.cpp"
 var $257=($256|0)!=0; //@line 291 "collisions.cpp"
 if($257){label=31;break;}else{label=37;break;} //@line 291 "collisions.cpp"
 case 31: 
 var $259=$extraPlayer; //@line 297 "collisions.cpp"
 var $260=(($259)|0); //@line 297 "collisions.cpp"
 var $261=$260; //@line 297 "collisions.cpp"
 var $262=(($261+130)|0); //@line 297 "collisions.cpp"
 var $263=HEAP8[($262)]; //@line 297 "collisions.cpp"
 var $264=(($263)&1); //@line 297 "collisions.cpp"
 if($264){label=32;break;}else{label=34;break;} //@line 297 "collisions.cpp"
 case 32: 
 var $266=$extraPlayer; //@line 297 "collisions.cpp"
 var $267=(($266)|0); //@line 297 "collisions.cpp"
 var $268=$267; //@line 297 "collisions.cpp"
 var $269=(($268)|0); //@line 297 "collisions.cpp"
 var $270=HEAP32[(($269)>>2)]; //@line 297 "collisions.cpp"
 var $271=$2; //@line 297 "collisions.cpp"
 var $272=(($271)|0); //@line 297 "collisions.cpp"
 var $273=$272; //@line 297 "collisions.cpp"
 var $274=(($273)|0); //@line 297 "collisions.cpp"
 var $275=HEAP32[(($274)>>2)]; //@line 297 "collisions.cpp"
 var $276=($270|0)==($275|0); //@line 297 "collisions.cpp"
 if($276){label=34;break;}else{label=33;break;} //@line 297 "collisions.cpp"
 case 33: 
 var $278=$extraPlayer; //@line 297 "collisions.cpp"
 var $279=(($278)|0); //@line 297 "collisions.cpp"
 var $280=(($279+240)|0); //@line 297 "collisions.cpp"
 var $281=HEAPF64[(($280)>>3)]; //@line 297 "collisions.cpp"
 var $282=$281<=0; //@line 297 "collisions.cpp"
 if($282){label=34;break;}else{label=35;break;} //@line 297 "collisions.cpp"
 case 34: 
 label=36;break; //@line 300 "collisions.cpp"
 case 35: 
 var $285=$counter; //@line 301 "collisions.cpp"
 var $286=((($285)+(1))|0); //@line 301 "collisions.cpp"
 $counter=$286; //@line 301 "collisions.cpp"
 label=36;break; //@line 302 "collisions.cpp"
 case 36: 
 var $288=$extraPlayer; //@line 293 "collisions.cpp"
 var $289=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$288); //@line 293 "collisions.cpp"
 $extraPlayer=$289; //@line 293 "collisions.cpp"
 label=30;break; //@line 293 "collisions.cpp"
 case 37: 
 var $291=$counter; //@line 303 "collisions.cpp"
 var $292=($291|0)<=0; //@line 303 "collisions.cpp"
 if($292){label=38;break;}else{label=40;break;} //@line 303 "collisions.cpp"
 case 38: 
 var $294=HEAP8[(19624)]; //@line 303 "collisions.cpp"
 var $295=(($294)&1); //@line 303 "collisions.cpp"
 if($295){label=40;break;}else{label=39;break;} //@line 303 "collisions.cpp"
 case 39: 
 HEAP8[(19624)]=1; //@line 307 "collisions.cpp"
 label=40;break; //@line 311 "collisions.cpp"
 case 40: 
 label=46;break; //@line 315 "collisions.cpp"
 case 41: 
 var $299=$2; //@line 318 "collisions.cpp"
 var $300=(($299)|0); //@line 318 "collisions.cpp"
 var $301=(($300+228)|0); //@line 318 "collisions.cpp"
 var $302=HEAP32[(($301)>>2)]; //@line 318 "collisions.cpp"
 var $303=($302|0)>0; //@line 318 "collisions.cpp"
 if($303){label=42;break;}else{label=45;break;} //@line 318 "collisions.cpp"
 case 42: 
 var $305=$2; //@line 319 "collisions.cpp"
 var $306=(($305)|0); //@line 319 "collisions.cpp"
 var $307=$306; //@line 319 "collisions.cpp"
 var $308=(($307+24)|0); //@line 319 "collisions.cpp"
 var $309=HEAP32[(($308)>>2)]; //@line 319 "collisions.cpp"
 if(($309|0)==4){ label=43;break;}else{label=44;break;}
 case 43: 
 var $311=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(9440,0); //@line 322 "collisions.cpp"
 var $312=$2; //@line 322 "collisions.cpp"
 var $313=(($312)|0); //@line 322 "collisions.cpp"
 var $314=$313; //@line 322 "collisions.cpp"
 var $315=(($314+88)|0); //@line 322 "collisions.cpp"
 HEAP32[(($315)>>2)]=$311; //@line 322 "collisions.cpp"
 var $316=$2; //@line 323 "collisions.cpp"
 var $317=(($316)|0); //@line 323 "collisions.cpp"
 var $318=$317; //@line 323 "collisions.cpp"
 var $319=(($318+131)|0); //@line 323 "collisions.cpp"
 HEAP8[($319)]=1; //@line 323 "collisions.cpp"
 var $320=$2; //@line 325 "collisions.cpp"
 var $321=(($320)|0); //@line 325 "collisions.cpp"
 var $322=$321; //@line 325 "collisions.cpp"
 var $323=(($322+92)|0); //@line 325 "collisions.cpp"
 HEAP32[(($323)>>2)]=0; //@line 325 "collisions.cpp"
 label=44;break; //@line 326 "collisions.cpp"
 case 44: 
 label=45;break; //@line 328 "collisions.cpp"
 case 45: 
 label=46;break;
 case 46: 
 $1=1; //@line 334 "collisions.cpp"
 label=47;break; //@line 334 "collisions.cpp"
 case 47: 
 var $328=$1; //@line 335 "collisions.cpp"
 STACKTOP=sp;return $328; //@line 335 "collisions.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($bUnit,$toucher){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+160)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $wasToucherAWall;
 var $4=sp;
 var $5=(sp)+(80);
 $2=$bUnit;
 $3=$toucher;
 $wasToucherAWall=0; //@line 345 "collisions.cpp"
 var $6=$2; //@line 347 "collisions.cpp"
 var $7=(($6)|0); //@line 347 "collisions.cpp"
 var $8=(($7+200)|0); //@line 347 "collisions.cpp"
 var $9=HEAP8[($8)]; //@line 347 "collisions.cpp"
 var $10=(($9)&1); //@line 347 "collisions.cpp"
 if($10){label=2;break;}else{label=3;break;} //@line 347 "collisions.cpp"
 case 2: 
 $1=1; //@line 350 "collisions.cpp"
 label=11;break; //@line 350 "collisions.cpp"
 case 3: 
 var $13=$3; //@line 353 "collisions.cpp"
 var $14=(($13+4)|0); //@line 353 "collisions.cpp"
 var $15=HEAP8[($14)]; //@line 353 "collisions.cpp"
 var $16=($15&255); //@line 353 "collisions.cpp"
 if(($16|0)==3){ label=4;break;}else if(($16|0)==2){ label=5;break;}else if(($16|0)==4){ label=6;break;}else if(($16|0)==7){ label=7;break;}else{label=8;break;}
 case 4: 
 label=8;break; //@line 357 "collisions.cpp"
 case 5: 
 label=8;break; //@line 360 "collisions.cpp"
 case 6: 
 label=8;break; //@line 363 "collisions.cpp"
 case 7: 
 $wasToucherAWall=1; //@line 369 "collisions.cpp"
 label=8;break; //@line 370 "collisions.cpp"
 case 8: 
 var $22=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(7600,0); //@line 375 "collisions.cpp"
 var $23=$2; //@line 375 "collisions.cpp"
 var $24=(($23)|0); //@line 375 "collisions.cpp"
 var $25=$24; //@line 375 "collisions.cpp"
 var $26=(($25+88)|0); //@line 375 "collisions.cpp"
 HEAP32[(($26)>>2)]=$22; //@line 375 "collisions.cpp"
 var $27=$2; //@line 377 "collisions.cpp"
 var $28=(($27)|0); //@line 377 "collisions.cpp"
 var $29=$28; //@line 377 "collisions.cpp"
 var $30=(($29+92)|0); //@line 377 "collisions.cpp"
 HEAP32[(($30)>>2)]=0; //@line 377 "collisions.cpp"
 var $31=$2; //@line 388 "collisions.cpp"
 var $32=(($31)|0); //@line 388 "collisions.cpp"
 var $33=(($32+178)|0); //@line 388 "collisions.cpp"
 HEAP8[($33)]=0; //@line 388 "collisions.cpp"
 var $34=$2; //@line 389 "collisions.cpp"
 var $35=(($34)|0); //@line 389 "collisions.cpp"
 var $36=(($35+177)|0); //@line 389 "collisions.cpp"
 HEAP8[($36)]=0; //@line 389 "collisions.cpp"
 var $37=$2; //@line 390 "collisions.cpp"
 var $38=(($37)|0); //@line 390 "collisions.cpp"
 var $39=(($38+176)|0); //@line 390 "collisions.cpp"
 HEAP8[($39)]=0; //@line 390 "collisions.cpp"
 var $40=$2; //@line 393 "collisions.cpp"
 var $41=(($40)|0); //@line 393 "collisions.cpp"
 var $42=$41; //@line 393 "collisions.cpp"
 var $43=(($42+8)|0); //@line 393 "collisions.cpp"
 var $44=HEAPF64[(($43)>>3)]; //@line 393 "collisions.cpp"
 var $45=$wasToucherAWall; //@line 393 "collisions.cpp"
 var $46=(($45)&1); //@line 393 "collisions.cpp"
 var $47=($46?200:70); //@line 393 "collisions.cpp"
 var $48=($47|0); //@line 393 "collisions.cpp"
 var $49=($44)-($48); //@line 393 "collisions.cpp"
 var $50=$2; //@line 393 "collisions.cpp"
 var $51=(($50)|0); //@line 393 "collisions.cpp"
 var $52=$51; //@line 393 "collisions.cpp"
 var $53=(($52+160)|0); //@line 393 "collisions.cpp"
 HEAPF64[(($53)>>3)]=$49; //@line 393 "collisions.cpp"
 var $54=$2; //@line 396 "collisions.cpp"
 var $55=(($54)|0); //@line 396 "collisions.cpp"
 var $56=$55; //@line 396 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($4,$56); //@line 396 "collisions.cpp"
 var $57=(($4+20)|0); //@line 396 "collisions.cpp"
 var $58=HEAP32[(($57)>>2)]; //@line 396 "collisions.cpp"
 var $59=$2; //@line 397 "collisions.cpp"
 var $60=(($59)|0); //@line 397 "collisions.cpp"
 var $61=$60; //@line 397 "collisions.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($5,$61); //@line 397 "collisions.cpp"
 var $62=(($5+44)|0); //@line 397 "collisions.cpp"
 var $63=HEAP32[(($62)>>2)]; //@line 397 "collisions.cpp"
 var $64=((($58)-($63))|0); //@line 397 "collisions.cpp"
 var $65=(((-$64))|0); //@line 397 "collisions.cpp"
 var $66=($65|0); //@line 397 "collisions.cpp"
 var $67=$2; //@line 397 "collisions.cpp"
 var $68=(($67)|0); //@line 397 "collisions.cpp"
 var $69=$68; //@line 397 "collisions.cpp"
 var $70=(($69+168)|0); //@line 397 "collisions.cpp"
 HEAPF64[(($70)>>3)]=$66; //@line 397 "collisions.cpp"
 var $71=$2; //@line 398 "collisions.cpp"
 var $72=(($71)|0); //@line 398 "collisions.cpp"
 var $73=$72; //@line 398 "collisions.cpp"
 var $74=(($73+156)|0); //@line 398 "collisions.cpp"
 HEAP8[($74)]=1; //@line 398 "collisions.cpp"
 var $75=$2; //@line 399 "collisions.cpp"
 var $76=(($75)|0); //@line 399 "collisions.cpp"
 var $77=$76; //@line 399 "collisions.cpp"
 var $78=(($77+96)|0); //@line 399 "collisions.cpp"
 var $79=HEAP8[($78)]; //@line 399 "collisions.cpp"
 var $80=(($79)&1); //@line 399 "collisions.cpp"
 if($80){label=9;break;}else{label=10;break;} //@line 399 "collisions.cpp"
 case 9: 
 var $82=HEAPF64[((19560)>>3)]; //@line 401 "collisions.cpp"
 var $83=$2; //@line 401 "collisions.cpp"
 var $84=(($83)|0); //@line 401 "collisions.cpp"
 var $85=$84; //@line 401 "collisions.cpp"
 var $86=(($85+160)|0); //@line 401 "collisions.cpp"
 var $87=HEAPF64[(($86)>>3)]; //@line 401 "collisions.cpp"
 var $88=($87)-($82); //@line 401 "collisions.cpp"
 HEAPF64[(($86)>>3)]=$88; //@line 401 "collisions.cpp"
 var $89=HEAPF64[((19568)>>3)]; //@line 402 "collisions.cpp"
 var $90=$2; //@line 402 "collisions.cpp"
 var $91=(($90)|0); //@line 402 "collisions.cpp"
 var $92=$91; //@line 402 "collisions.cpp"
 var $93=(($92+168)|0); //@line 402 "collisions.cpp"
 var $94=HEAPF64[(($93)>>3)]; //@line 402 "collisions.cpp"
 var $95=($94)-($89); //@line 402 "collisions.cpp"
 HEAPF64[(($93)>>3)]=$95; //@line 402 "collisions.cpp"
 label=10;break; //@line 403 "collisions.cpp"
 case 10: 
 var $97=$2; //@line 405 "collisions.cpp"
 var $98=(($97)|0); //@line 405 "collisions.cpp"
 var $99=$98; //@line 405 "collisions.cpp"
 var $100=$2; //@line 405 "collisions.cpp"
 var $101=(($100)|0); //@line 405 "collisions.cpp"
 var $102=$101; //@line 405 "collisions.cpp"
 var $103=(($102+160)|0); //@line 405 "collisions.cpp"
 var $104=HEAPF64[(($103)>>3)]; //@line 405 "collisions.cpp"
 var $105=$2; //@line 405 "collisions.cpp"
 var $106=(($105)|0); //@line 405 "collisions.cpp"
 var $107=$106; //@line 405 "collisions.cpp"
 var $108=(($107+168)|0); //@line 405 "collisions.cpp"
 var $109=HEAPF64[(($108)>>3)]; //@line 405 "collisions.cpp"
 var $110=HEAP32[((2136)>>2)]; //@line 405 "collisions.cpp"
 var $111=($110|0); //@line 405 "collisions.cpp"
 var $112=(260)/($111); //@line 405 "collisions.cpp"
 var $113=__Z21setSpeedForLinealMoveP17genericUnitStructeed($99,$104,$109,$112); //@line 405 "collisions.cpp"
 $1=1; //@line 410 "collisions.cpp"
 label=11;break; //@line 410 "collisions.cpp"
 case 11: 
 var $115=$1; //@line 411 "collisions.cpp"
 STACKTOP=sp;return $115; //@line 411 "collisions.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z15checkCollisionsv(){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $node;
 var $nodeP;
 var $nodeP2;
 var $nodeB;
 var $nodeB2;
 var $myEnemyType;
 var $myPlayerType;
 var $myPlayerType2;
 var $myBulletType;
 var $myBulletType2;
 var $myEnemyFrame;
 var $myPlayerFrame;
 var $myPlayerFrame2;
 var $myBulletFrame;
 var $myBulletFrame2;
 var $pX;
 var $pY;
 var $pX2;
 var $pY2;
 var $eX;
 var $eY;
 var $eX2;
 var $eY2;
 var $objPointer=sp;
 var $2=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 448 "collisions.cpp"
 $nodeP=$2; //@line 448 "collisions.cpp"
 label=2;break; //@line 448 "collisions.cpp"
 case 2: 
 var $4=$nodeP; //@line 448 "collisions.cpp"
 var $5=($4|0)!=0; //@line 448 "collisions.cpp"
 if($5){label=3;break;}else{label=49;break;} //@line 448 "collisions.cpp"
 case 3: 
 var $7=$nodeP; //@line 450 "collisions.cpp"
 var $8=(($7)|0); //@line 450 "collisions.cpp"
 var $9=$8; //@line 450 "collisions.cpp"
 var $10=(($9+130)|0); //@line 450 "collisions.cpp"
 var $11=HEAP8[($10)]; //@line 450 "collisions.cpp"
 var $12=(($11)&1); //@line 450 "collisions.cpp"
 if($12){label=5;break;}else{label=4;break;} //@line 450 "collisions.cpp"
 case 4: 
 label=48;break; //@line 450 "collisions.cpp"
 case 5: 
 var $15=$nodeP; //@line 453 "collisions.cpp"
 var $16=(($15)|0); //@line 453 "collisions.cpp"
 var $17=$16; //@line 453 "collisions.cpp"
 var $18=(($17+24)|0); //@line 453 "collisions.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 453 "collisions.cpp"
 var $20=((448+((($19)*(24))&-1))|0); //@line 453 "collisions.cpp"
 $myPlayerType=$20; //@line 453 "collisions.cpp"
 var $21=$nodeP; //@line 454 "collisions.cpp"
 var $22=(($21)|0); //@line 454 "collisions.cpp"
 var $23=$22; //@line 454 "collisions.cpp"
 var $24=(($23+88)|0); //@line 454 "collisions.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 454 "collisions.cpp"
 var $26=$myPlayerType; //@line 454 "collisions.cpp"
 var $27=(($26+16)|0); //@line 454 "collisions.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 454 "collisions.cpp"
 var $29=(($28+((($25)*(80))&-1))|0); //@line 454 "collisions.cpp"
 $myPlayerFrame=$29; //@line 454 "collisions.cpp"
 var $30=$myPlayerFrame; //@line 455 "collisions.cpp"
 var $31=(($30+24)|0); //@line 455 "collisions.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 455 "collisions.cpp"
 var $33=$myPlayerFrame; //@line 455 "collisions.cpp"
 var $34=(($33+40)|0); //@line 455 "collisions.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 455 "collisions.cpp"
 var $36=((($32)-($35))|0); //@line 455 "collisions.cpp"
 var $37=$nodeP; //@line 455 "collisions.cpp"
 var $38=(($37)|0); //@line 455 "collisions.cpp"
 var $39=$38; //@line 455 "collisions.cpp"
 var $40=(($39+8)|0); //@line 455 "collisions.cpp"
 var $41=HEAPF64[(($40)>>3)]; //@line 455 "collisions.cpp"
 var $42=(($41)&-1); //@line 455 "collisions.cpp"
 var $43=((($36)+($42))|0); //@line 455 "collisions.cpp"
 $pX=$43; //@line 455 "collisions.cpp"
 var $44=$myPlayerFrame; //@line 456 "collisions.cpp"
 var $45=(($44+28)|0); //@line 456 "collisions.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 456 "collisions.cpp"
 var $47=$myPlayerFrame; //@line 456 "collisions.cpp"
 var $48=(($47+44)|0); //@line 456 "collisions.cpp"
 var $49=HEAP32[(($48)>>2)]; //@line 456 "collisions.cpp"
 var $50=((($46)-($49))|0); //@line 456 "collisions.cpp"
 var $51=$nodeP; //@line 456 "collisions.cpp"
 var $52=(($51)|0); //@line 456 "collisions.cpp"
 var $53=$52; //@line 456 "collisions.cpp"
 var $54=(($53+16)|0); //@line 456 "collisions.cpp"
 var $55=HEAPF64[(($54)>>3)]; //@line 456 "collisions.cpp"
 var $56=(($55)&-1); //@line 456 "collisions.cpp"
 var $57=((($50)+($56))|0); //@line 456 "collisions.cpp"
 $pY=$57; //@line 456 "collisions.cpp"
 var $58=$pX; //@line 457 "collisions.cpp"
 var $59=$myPlayerFrame; //@line 457 "collisions.cpp"
 var $60=(($59+32)|0); //@line 457 "collisions.cpp"
 var $61=HEAP32[(($60)>>2)]; //@line 457 "collisions.cpp"
 var $62=((($58)+($61))|0); //@line 457 "collisions.cpp"
 var $63=((($62)-(1))|0); //@line 457 "collisions.cpp"
 $pX2=$63; //@line 457 "collisions.cpp"
 var $64=$pY; //@line 457 "collisions.cpp"
 var $65=$myPlayerFrame; //@line 457 "collisions.cpp"
 var $66=(($65+36)|0); //@line 457 "collisions.cpp"
 var $67=HEAP32[(($66)>>2)]; //@line 457 "collisions.cpp"
 var $68=((($64)+($67))|0); //@line 457 "collisions.cpp"
 var $69=((($68)-(1))|0); //@line 457 "collisions.cpp"
 $pY2=$69; //@line 457 "collisions.cpp"
 var $70=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 461 "collisions.cpp"
 $node=$70; //@line 461 "collisions.cpp"
 label=6;break; //@line 461 "collisions.cpp"
 case 6: 
 var $72=$node; //@line 461 "collisions.cpp"
 var $73=($72|0)!=0; //@line 461 "collisions.cpp"
 if($73){label=7;break;}else{label=26;break;} //@line 461 "collisions.cpp"
 case 7: 
 var $75=$node; //@line 463 "collisions.cpp"
 var $76=(($75)|0); //@line 463 "collisions.cpp"
 var $77=$76; //@line 463 "collisions.cpp"
 var $78=(($77+130)|0); //@line 463 "collisions.cpp"
 var $79=HEAP8[($78)]; //@line 463 "collisions.cpp"
 var $80=(($79)&1); //@line 463 "collisions.cpp"
 if($80){label=9;break;}else{label=8;break;} //@line 463 "collisions.cpp"
 case 8: 
 label=25;break; //@line 463 "collisions.cpp"
 case 9: 
 var $83=$node; //@line 466 "collisions.cpp"
 var $84=(($83)|0); //@line 466 "collisions.cpp"
 var $85=(($84+196)|0); //@line 466 "collisions.cpp"
 var $86=HEAP8[($85)]; //@line 466 "collisions.cpp"
 var $87=(($86)&1); //@line 466 "collisions.cpp"
 if($87){label=11;break;}else{label=10;break;} //@line 466 "collisions.cpp"
 case 10: 
 label=25;break; //@line 466 "collisions.cpp"
 case 11: 
 var $90=$node; //@line 469 "collisions.cpp"
 var $91=(($90)|0); //@line 469 "collisions.cpp"
 var $92=$91; //@line 469 "collisions.cpp"
 var $93=(($92+24)|0); //@line 469 "collisions.cpp"
 var $94=HEAP32[(($93)>>2)]; //@line 469 "collisions.cpp"
 var $95=((1904+((($94)*(24))&-1))|0); //@line 469 "collisions.cpp"
 $myEnemyType=$95; //@line 469 "collisions.cpp"
 var $96=$node; //@line 470 "collisions.cpp"
 var $97=(($96)|0); //@line 470 "collisions.cpp"
 var $98=$97; //@line 470 "collisions.cpp"
 var $99=(($98+88)|0); //@line 470 "collisions.cpp"
 var $100=HEAP32[(($99)>>2)]; //@line 470 "collisions.cpp"
 var $101=$myEnemyType; //@line 470 "collisions.cpp"
 var $102=(($101+16)|0); //@line 470 "collisions.cpp"
 var $103=HEAP32[(($102)>>2)]; //@line 470 "collisions.cpp"
 var $104=(($103+((($100)*(80))&-1))|0); //@line 470 "collisions.cpp"
 $myEnemyFrame=$104; //@line 470 "collisions.cpp"
 var $105=$myEnemyFrame; //@line 471 "collisions.cpp"
 var $106=(($105+24)|0); //@line 471 "collisions.cpp"
 var $107=HEAP32[(($106)>>2)]; //@line 471 "collisions.cpp"
 var $108=$myEnemyFrame; //@line 471 "collisions.cpp"
 var $109=(($108+40)|0); //@line 471 "collisions.cpp"
 var $110=HEAP32[(($109)>>2)]; //@line 471 "collisions.cpp"
 var $111=((($107)-($110))|0); //@line 471 "collisions.cpp"
 var $112=$node; //@line 471 "collisions.cpp"
 var $113=(($112)|0); //@line 471 "collisions.cpp"
 var $114=$113; //@line 471 "collisions.cpp"
 var $115=(($114+8)|0); //@line 471 "collisions.cpp"
 var $116=HEAPF64[(($115)>>3)]; //@line 471 "collisions.cpp"
 var $117=(($116)&-1); //@line 471 "collisions.cpp"
 var $118=((($111)+($117))|0); //@line 471 "collisions.cpp"
 $eX=$118; //@line 471 "collisions.cpp"
 var $119=$myEnemyFrame; //@line 472 "collisions.cpp"
 var $120=(($119+28)|0); //@line 472 "collisions.cpp"
 var $121=HEAP32[(($120)>>2)]; //@line 472 "collisions.cpp"
 var $122=$myEnemyFrame; //@line 472 "collisions.cpp"
 var $123=(($122+44)|0); //@line 472 "collisions.cpp"
 var $124=HEAP32[(($123)>>2)]; //@line 472 "collisions.cpp"
 var $125=((($121)-($124))|0); //@line 472 "collisions.cpp"
 var $126=$node; //@line 472 "collisions.cpp"
 var $127=(($126)|0); //@line 472 "collisions.cpp"
 var $128=$127; //@line 472 "collisions.cpp"
 var $129=(($128+16)|0); //@line 472 "collisions.cpp"
 var $130=HEAPF64[(($129)>>3)]; //@line 472 "collisions.cpp"
 var $131=(($130)&-1); //@line 472 "collisions.cpp"
 var $132=((($125)+($131))|0); //@line 472 "collisions.cpp"
 $eY=$132; //@line 472 "collisions.cpp"
 var $133=$eX; //@line 473 "collisions.cpp"
 var $134=$myEnemyFrame; //@line 473 "collisions.cpp"
 var $135=(($134+32)|0); //@line 473 "collisions.cpp"
 var $136=HEAP32[(($135)>>2)]; //@line 473 "collisions.cpp"
 var $137=((($133)+($136))|0); //@line 473 "collisions.cpp"
 var $138=((($137)-(1))|0); //@line 473 "collisions.cpp"
 $eX2=$138; //@line 473 "collisions.cpp"
 var $139=$eY; //@line 473 "collisions.cpp"
 var $140=$myEnemyFrame; //@line 473 "collisions.cpp"
 var $141=(($140+36)|0); //@line 473 "collisions.cpp"
 var $142=HEAP32[(($141)>>2)]; //@line 473 "collisions.cpp"
 var $143=((($139)+($142))|0); //@line 473 "collisions.cpp"
 var $144=((($143)-(1))|0); //@line 473 "collisions.cpp"
 $eY2=$144; //@line 473 "collisions.cpp"
 var $145=$pX2; //@line 476 "collisions.cpp"
 var $146=$pX; //@line 476 "collisions.cpp"
 var $147=((($145)-($146))|0); //@line 476 "collisions.cpp"
 var $148=((($147)+(1))|0); //@line 476 "collisions.cpp"
 var $149=($148|0)!=0; //@line 476 "collisions.cpp"
 if($149){label=12;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 12: 
 var $151=$pY2; //@line 476 "collisions.cpp"
 var $152=$pY; //@line 476 "collisions.cpp"
 var $153=((($151)-($152))|0); //@line 476 "collisions.cpp"
 var $154=((($153)+(1))|0); //@line 476 "collisions.cpp"
 var $155=($154|0)!=0; //@line 476 "collisions.cpp"
 if($155){label=13;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 13: 
 var $157=$eX2; //@line 476 "collisions.cpp"
 var $158=$eX; //@line 476 "collisions.cpp"
 var $159=((($157)-($158))|0); //@line 476 "collisions.cpp"
 var $160=((($159)+(1))|0); //@line 476 "collisions.cpp"
 var $161=($160|0)!=0; //@line 476 "collisions.cpp"
 if($161){label=14;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 14: 
 var $163=$eY2; //@line 476 "collisions.cpp"
 var $164=$eY; //@line 476 "collisions.cpp"
 var $165=((($163)-($164))|0); //@line 476 "collisions.cpp"
 var $166=((($165)+(1))|0); //@line 476 "collisions.cpp"
 var $167=($166|0)!=0; //@line 476 "collisions.cpp"
 if($167){label=15;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 15: 
 var $169=$pX2; //@line 476 "collisions.cpp"
 var $170=$eX; //@line 476 "collisions.cpp"
 var $171=($169|0)>=($170|0); //@line 476 "collisions.cpp"
 if($171){label=16;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 16: 
 var $173=$eX2; //@line 476 "collisions.cpp"
 var $174=$pX; //@line 476 "collisions.cpp"
 var $175=($173|0)>=($174|0); //@line 476 "collisions.cpp"
 if($175){label=17;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 17: 
 var $177=$pY2; //@line 476 "collisions.cpp"
 var $178=$eY; //@line 476 "collisions.cpp"
 var $179=($177|0)>=($178|0); //@line 476 "collisions.cpp"
 if($179){label=18;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 18: 
 var $181=$eY2; //@line 476 "collisions.cpp"
 var $182=$pY; //@line 476 "collisions.cpp"
 var $183=($181|0)>=($182|0); //@line 476 "collisions.cpp"
 if($183){label=19;break;}else{label=24;break;} //@line 476 "collisions.cpp"
 case 19: 
 var $185=$nodeP; //@line 483 "collisions.cpp"
 var $186=(($185)|0); //@line 483 "collisions.cpp"
 var $187=$186; //@line 483 "collisions.cpp"
 var $188=(($187)|0); //@line 483 "collisions.cpp"
 var $189=HEAP32[(($188)>>2)]; //@line 483 "collisions.cpp"
 var $190=(($objPointer)|0); //@line 483 "collisions.cpp"
 HEAP32[(($190)>>2)]=$189; //@line 483 "collisions.cpp"
 var $191=$nodeP; //@line 484 "collisions.cpp"
 var $192=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$191); //@line 484 "collisions.cpp"
 var $193=(($objPointer+8)|0); //@line 484 "collisions.cpp"
 HEAP32[(($193)>>2)]=$192; //@line 484 "collisions.cpp"
 var $194=(($objPointer+4)|0); //@line 485 "collisions.cpp"
 HEAP8[($194)]=2; //@line 485 "collisions.cpp"
 var $195=$node; //@line 487 "collisions.cpp"
 var $196=__Z12enemyUnitHitR20vectorListNodeStructI15enemyUnitStructER23gameObjectPointerStruct($195,$objPointer); //@line 487 "collisions.cpp"
 if($196){label=21;break;}else{label=20;break;} //@line 487 "collisions.cpp"
 case 20: 
 $1=0; //@line 488 "collisions.cpp"
 label=129;break; //@line 488 "collisions.cpp"
 case 21: 
 var $199=$node; //@line 492 "collisions.cpp"
 var $200=(($199)|0); //@line 492 "collisions.cpp"
 var $201=$200; //@line 492 "collisions.cpp"
 var $202=(($201)|0); //@line 492 "collisions.cpp"
 var $203=HEAP32[(($202)>>2)]; //@line 492 "collisions.cpp"
 var $204=(($objPointer)|0); //@line 492 "collisions.cpp"
 HEAP32[(($204)>>2)]=$203; //@line 492 "collisions.cpp"
 var $205=$node; //@line 493 "collisions.cpp"
 var $206=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$205); //@line 493 "collisions.cpp"
 var $207=(($objPointer+8)|0); //@line 493 "collisions.cpp"
 HEAP32[(($207)>>2)]=$206; //@line 493 "collisions.cpp"
 var $208=(($objPointer+4)|0); //@line 494 "collisions.cpp"
 HEAP8[($208)]=3; //@line 494 "collisions.cpp"
 var $209=$nodeP; //@line 496 "collisions.cpp"
 var $210=__Z13playerUnitHitR20vectorListNodeStructI16playerUnitStructER23gameObjectPointerStruct($209,$objPointer); //@line 496 "collisions.cpp"
 if($210){label=23;break;}else{label=22;break;} //@line 496 "collisions.cpp"
 case 22: 
 $1=0; //@line 497 "collisions.cpp"
 label=129;break; //@line 497 "collisions.cpp"
 case 23: 
 label=24;break; //@line 498 "collisions.cpp"
 case 24: 
 label=25;break; //@line 499 "collisions.cpp"
 case 25: 
 var $215=$node; //@line 461 "collisions.cpp"
 var $216=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$215); //@line 461 "collisions.cpp"
 $node=$216; //@line 461 "collisions.cpp"
 label=6;break; //@line 461 "collisions.cpp"
 case 26: 
 var $218=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 504 "collisions.cpp"
 $nodeP2=$218; //@line 504 "collisions.cpp"
 label=27;break; //@line 504 "collisions.cpp"
 case 27: 
 var $220=$nodeP2; //@line 504 "collisions.cpp"
 var $221=($220|0)!=0; //@line 504 "collisions.cpp"
 if($221){label=28;break;}else{label=47;break;} //@line 504 "collisions.cpp"
 case 28: 
 var $223=$nodeP2; //@line 506 "collisions.cpp"
 var $224=(($223)|0); //@line 506 "collisions.cpp"
 var $225=$224; //@line 506 "collisions.cpp"
 var $226=(($225+130)|0); //@line 506 "collisions.cpp"
 var $227=HEAP8[($226)]; //@line 506 "collisions.cpp"
 var $228=(($227)&1); //@line 506 "collisions.cpp"
 if($228){label=30;break;}else{label=29;break;} //@line 506 "collisions.cpp"
 case 29: 
 label=46;break; //@line 506 "collisions.cpp"
 case 30: 
 var $231=$nodeP; //@line 509 "collisions.cpp"
 var $232=$nodeP2; //@line 509 "collisions.cpp"
 var $233=($231|0)==($232|0); //@line 509 "collisions.cpp"
 if($233){label=31;break;}else{label=32;break;} //@line 509 "collisions.cpp"
 case 31: 
 label=46;break; //@line 509 "collisions.cpp"
 case 32: 
 var $236=$nodeP2; //@line 512 "collisions.cpp"
 var $237=(($236)|0); //@line 512 "collisions.cpp"
 var $238=$237; //@line 512 "collisions.cpp"
 var $239=(($238+24)|0); //@line 512 "collisions.cpp"
 var $240=HEAP32[(($239)>>2)]; //@line 512 "collisions.cpp"
 var $241=((448+((($240)*(24))&-1))|0); //@line 512 "collisions.cpp"
 $myPlayerType2=$241; //@line 512 "collisions.cpp"
 var $242=$nodeP2; //@line 513 "collisions.cpp"
 var $243=(($242)|0); //@line 513 "collisions.cpp"
 var $244=$243; //@line 513 "collisions.cpp"
 var $245=(($244+88)|0); //@line 513 "collisions.cpp"
 var $246=HEAP32[(($245)>>2)]; //@line 513 "collisions.cpp"
 var $247=$myPlayerType2; //@line 513 "collisions.cpp"
 var $248=(($247+16)|0); //@line 513 "collisions.cpp"
 var $249=HEAP32[(($248)>>2)]; //@line 513 "collisions.cpp"
 var $250=(($249+((($246)*(80))&-1))|0); //@line 513 "collisions.cpp"
 $myPlayerFrame2=$250; //@line 513 "collisions.cpp"
 var $251=$myPlayerFrame2; //@line 514 "collisions.cpp"
 var $252=(($251+24)|0); //@line 514 "collisions.cpp"
 var $253=HEAP32[(($252)>>2)]; //@line 514 "collisions.cpp"
 var $254=$myPlayerFrame2; //@line 514 "collisions.cpp"
 var $255=(($254+40)|0); //@line 514 "collisions.cpp"
 var $256=HEAP32[(($255)>>2)]; //@line 514 "collisions.cpp"
 var $257=((($253)-($256))|0); //@line 514 "collisions.cpp"
 var $258=$nodeP2; //@line 514 "collisions.cpp"
 var $259=(($258)|0); //@line 514 "collisions.cpp"
 var $260=$259; //@line 514 "collisions.cpp"
 var $261=(($260+8)|0); //@line 514 "collisions.cpp"
 var $262=HEAPF64[(($261)>>3)]; //@line 514 "collisions.cpp"
 var $263=(($262)&-1); //@line 514 "collisions.cpp"
 var $264=((($257)+($263))|0); //@line 514 "collisions.cpp"
 $eX=$264; //@line 514 "collisions.cpp"
 var $265=$myPlayerFrame2; //@line 515 "collisions.cpp"
 var $266=(($265+28)|0); //@line 515 "collisions.cpp"
 var $267=HEAP32[(($266)>>2)]; //@line 515 "collisions.cpp"
 var $268=$myPlayerFrame2; //@line 515 "collisions.cpp"
 var $269=(($268+44)|0); //@line 515 "collisions.cpp"
 var $270=HEAP32[(($269)>>2)]; //@line 515 "collisions.cpp"
 var $271=((($267)-($270))|0); //@line 515 "collisions.cpp"
 var $272=$nodeP2; //@line 515 "collisions.cpp"
 var $273=(($272)|0); //@line 515 "collisions.cpp"
 var $274=$273; //@line 515 "collisions.cpp"
 var $275=(($274+16)|0); //@line 515 "collisions.cpp"
 var $276=HEAPF64[(($275)>>3)]; //@line 515 "collisions.cpp"
 var $277=(($276)&-1); //@line 515 "collisions.cpp"
 var $278=((($271)+($277))|0); //@line 515 "collisions.cpp"
 $eY=$278; //@line 515 "collisions.cpp"
 var $279=$eX; //@line 516 "collisions.cpp"
 var $280=$myPlayerFrame2; //@line 516 "collisions.cpp"
 var $281=(($280+32)|0); //@line 516 "collisions.cpp"
 var $282=HEAP32[(($281)>>2)]; //@line 516 "collisions.cpp"
 var $283=((($279)+($282))|0); //@line 516 "collisions.cpp"
 var $284=((($283)-(1))|0); //@line 516 "collisions.cpp"
 $eX2=$284; //@line 516 "collisions.cpp"
 var $285=$eY; //@line 516 "collisions.cpp"
 var $286=$myPlayerFrame2; //@line 516 "collisions.cpp"
 var $287=(($286+36)|0); //@line 516 "collisions.cpp"
 var $288=HEAP32[(($287)>>2)]; //@line 516 "collisions.cpp"
 var $289=((($285)+($288))|0); //@line 516 "collisions.cpp"
 var $290=((($289)-(1))|0); //@line 516 "collisions.cpp"
 $eY2=$290; //@line 516 "collisions.cpp"
 var $291=$pX2; //@line 519 "collisions.cpp"
 var $292=$pX; //@line 519 "collisions.cpp"
 var $293=((($291)-($292))|0); //@line 519 "collisions.cpp"
 var $294=((($293)+(1))|0); //@line 519 "collisions.cpp"
 var $295=($294|0)!=0; //@line 519 "collisions.cpp"
 if($295){label=33;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 33: 
 var $297=$pY2; //@line 519 "collisions.cpp"
 var $298=$pY; //@line 519 "collisions.cpp"
 var $299=((($297)-($298))|0); //@line 519 "collisions.cpp"
 var $300=((($299)+(1))|0); //@line 519 "collisions.cpp"
 var $301=($300|0)!=0; //@line 519 "collisions.cpp"
 if($301){label=34;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 34: 
 var $303=$eX2; //@line 519 "collisions.cpp"
 var $304=$eX; //@line 519 "collisions.cpp"
 var $305=((($303)-($304))|0); //@line 519 "collisions.cpp"
 var $306=((($305)+(1))|0); //@line 519 "collisions.cpp"
 var $307=($306|0)!=0; //@line 519 "collisions.cpp"
 if($307){label=35;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 35: 
 var $309=$eY2; //@line 519 "collisions.cpp"
 var $310=$eY; //@line 519 "collisions.cpp"
 var $311=((($309)-($310))|0); //@line 519 "collisions.cpp"
 var $312=((($311)+(1))|0); //@line 519 "collisions.cpp"
 var $313=($312|0)!=0; //@line 519 "collisions.cpp"
 if($313){label=36;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 36: 
 var $315=$pX2; //@line 519 "collisions.cpp"
 var $316=$eX; //@line 519 "collisions.cpp"
 var $317=($315|0)>=($316|0); //@line 519 "collisions.cpp"
 if($317){label=37;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 37: 
 var $319=$eX2; //@line 519 "collisions.cpp"
 var $320=$pX; //@line 519 "collisions.cpp"
 var $321=($319|0)>=($320|0); //@line 519 "collisions.cpp"
 if($321){label=38;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 38: 
 var $323=$pY2; //@line 519 "collisions.cpp"
 var $324=$eY; //@line 519 "collisions.cpp"
 var $325=($323|0)>=($324|0); //@line 519 "collisions.cpp"
 if($325){label=39;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 39: 
 var $327=$eY2; //@line 519 "collisions.cpp"
 var $328=$pY; //@line 519 "collisions.cpp"
 var $329=($327|0)>=($328|0); //@line 519 "collisions.cpp"
 if($329){label=40;break;}else{label=45;break;} //@line 519 "collisions.cpp"
 case 40: 
 var $331=$nodeP2; //@line 526 "collisions.cpp"
 var $332=(($331)|0); //@line 526 "collisions.cpp"
 var $333=$332; //@line 526 "collisions.cpp"
 var $334=(($333)|0); //@line 526 "collisions.cpp"
 var $335=HEAP32[(($334)>>2)]; //@line 526 "collisions.cpp"
 var $336=(($objPointer)|0); //@line 526 "collisions.cpp"
 HEAP32[(($336)>>2)]=$335; //@line 526 "collisions.cpp"
 var $337=$nodeP2; //@line 527 "collisions.cpp"
 var $338=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$337); //@line 527 "collisions.cpp"
 var $339=(($objPointer+8)|0); //@line 527 "collisions.cpp"
 HEAP32[(($339)>>2)]=$338; //@line 527 "collisions.cpp"
 var $340=(($objPointer+4)|0); //@line 528 "collisions.cpp"
 HEAP8[($340)]=2; //@line 528 "collisions.cpp"
 var $341=$nodeP; //@line 530 "collisions.cpp"
 var $342=__Z13playerUnitHitR20vectorListNodeStructI16playerUnitStructER23gameObjectPointerStruct($341,$objPointer); //@line 530 "collisions.cpp"
 if($342){label=42;break;}else{label=41;break;} //@line 530 "collisions.cpp"
 case 41: 
 $1=0; //@line 531 "collisions.cpp"
 label=129;break; //@line 531 "collisions.cpp"
 case 42: 
 var $345=$nodeP; //@line 535 "collisions.cpp"
 var $346=(($345)|0); //@line 535 "collisions.cpp"
 var $347=$346; //@line 535 "collisions.cpp"
 var $348=(($347)|0); //@line 535 "collisions.cpp"
 var $349=HEAP32[(($348)>>2)]; //@line 535 "collisions.cpp"
 var $350=(($objPointer)|0); //@line 535 "collisions.cpp"
 HEAP32[(($350)>>2)]=$349; //@line 535 "collisions.cpp"
 var $351=$nodeP; //@line 536 "collisions.cpp"
 var $352=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$351); //@line 536 "collisions.cpp"
 var $353=(($objPointer+8)|0); //@line 536 "collisions.cpp"
 HEAP32[(($353)>>2)]=$352; //@line 536 "collisions.cpp"
 var $354=(($objPointer+4)|0); //@line 537 "collisions.cpp"
 HEAP8[($354)]=2; //@line 537 "collisions.cpp"
 var $355=$nodeP2; //@line 539 "collisions.cpp"
 var $356=__Z13playerUnitHitR20vectorListNodeStructI16playerUnitStructER23gameObjectPointerStruct($355,$objPointer); //@line 539 "collisions.cpp"
 if($356){label=44;break;}else{label=43;break;} //@line 539 "collisions.cpp"
 case 43: 
 $1=0; //@line 540 "collisions.cpp"
 label=129;break; //@line 540 "collisions.cpp"
 case 44: 
 label=45;break; //@line 541 "collisions.cpp"
 case 45: 
 label=46;break; //@line 542 "collisions.cpp"
 case 46: 
 var $361=$nodeP2; //@line 504 "collisions.cpp"
 var $362=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$361); //@line 504 "collisions.cpp"
 $nodeP2=$362; //@line 504 "collisions.cpp"
 label=27;break; //@line 504 "collisions.cpp"
 case 47: 
 label=48;break; //@line 543 "collisions.cpp"
 case 48: 
 var $365=$nodeP; //@line 448 "collisions.cpp"
 var $366=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$365); //@line 448 "collisions.cpp"
 $nodeP=$366; //@line 448 "collisions.cpp"
 label=2;break; //@line 448 "collisions.cpp"
 case 49: 
 var $368=__ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv(19920); //@line 547 "collisions.cpp"
 $nodeB=$368; //@line 547 "collisions.cpp"
 label=50;break; //@line 547 "collisions.cpp"
 case 50: 
 var $370=$nodeB; //@line 547 "collisions.cpp"
 var $371=($370|0)!=0; //@line 547 "collisions.cpp"
 if($371){label=51;break;}else{label=128;break;} //@line 547 "collisions.cpp"
 case 51: 
 var $373=$nodeB; //@line 549 "collisions.cpp"
 var $374=(($373)|0); //@line 549 "collisions.cpp"
 var $375=$374; //@line 549 "collisions.cpp"
 var $376=(($375+130)|0); //@line 549 "collisions.cpp"
 var $377=HEAP8[($376)]; //@line 549 "collisions.cpp"
 var $378=(($377)&1); //@line 549 "collisions.cpp"
 if($378){label=53;break;}else{label=52;break;} //@line 549 "collisions.cpp"
 case 52: 
 label=127;break; //@line 549 "collisions.cpp"
 case 53: 
 var $381=$nodeB; //@line 552 "collisions.cpp"
 var $382=(($381)|0); //@line 552 "collisions.cpp"
 var $383=$382; //@line 552 "collisions.cpp"
 var $384=(($383+24)|0); //@line 552 "collisions.cpp"
 var $385=HEAP32[(($384)>>2)]; //@line 552 "collisions.cpp"
 var $386=((2192+((($385)*(24))&-1))|0); //@line 552 "collisions.cpp"
 $myBulletType=$386; //@line 552 "collisions.cpp"
 var $387=$nodeB; //@line 553 "collisions.cpp"
 var $388=(($387)|0); //@line 553 "collisions.cpp"
 var $389=$388; //@line 553 "collisions.cpp"
 var $390=(($389+88)|0); //@line 553 "collisions.cpp"
 var $391=HEAP32[(($390)>>2)]; //@line 553 "collisions.cpp"
 var $392=$myBulletType; //@line 553 "collisions.cpp"
 var $393=(($392+16)|0); //@line 553 "collisions.cpp"
 var $394=HEAP32[(($393)>>2)]; //@line 553 "collisions.cpp"
 var $395=(($394+((($391)*(80))&-1))|0); //@line 553 "collisions.cpp"
 $myBulletFrame=$395; //@line 553 "collisions.cpp"
 var $396=$myBulletFrame; //@line 554 "collisions.cpp"
 var $397=(($396+24)|0); //@line 554 "collisions.cpp"
 var $398=HEAP32[(($397)>>2)]; //@line 554 "collisions.cpp"
 var $399=$myBulletFrame; //@line 554 "collisions.cpp"
 var $400=(($399+40)|0); //@line 554 "collisions.cpp"
 var $401=HEAP32[(($400)>>2)]; //@line 554 "collisions.cpp"
 var $402=((($398)-($401))|0); //@line 554 "collisions.cpp"
 var $403=$nodeB; //@line 554 "collisions.cpp"
 var $404=(($403)|0); //@line 554 "collisions.cpp"
 var $405=$404; //@line 554 "collisions.cpp"
 var $406=(($405+8)|0); //@line 554 "collisions.cpp"
 var $407=HEAPF64[(($406)>>3)]; //@line 554 "collisions.cpp"
 var $408=(($407)&-1); //@line 554 "collisions.cpp"
 var $409=((($402)+($408))|0); //@line 554 "collisions.cpp"
 $pX=$409; //@line 554 "collisions.cpp"
 var $410=$myBulletFrame; //@line 555 "collisions.cpp"
 var $411=(($410+28)|0); //@line 555 "collisions.cpp"
 var $412=HEAP32[(($411)>>2)]; //@line 555 "collisions.cpp"
 var $413=$myBulletFrame; //@line 555 "collisions.cpp"
 var $414=(($413+44)|0); //@line 555 "collisions.cpp"
 var $415=HEAP32[(($414)>>2)]; //@line 555 "collisions.cpp"
 var $416=((($412)-($415))|0); //@line 555 "collisions.cpp"
 var $417=$nodeB; //@line 555 "collisions.cpp"
 var $418=(($417)|0); //@line 555 "collisions.cpp"
 var $419=$418; //@line 555 "collisions.cpp"
 var $420=(($419+16)|0); //@line 555 "collisions.cpp"
 var $421=HEAPF64[(($420)>>3)]; //@line 555 "collisions.cpp"
 var $422=(($421)&-1); //@line 555 "collisions.cpp"
 var $423=((($416)+($422))|0); //@line 555 "collisions.cpp"
 $pY=$423; //@line 555 "collisions.cpp"
 var $424=$pX; //@line 556 "collisions.cpp"
 var $425=$myBulletFrame; //@line 556 "collisions.cpp"
 var $426=(($425+32)|0); //@line 556 "collisions.cpp"
 var $427=HEAP32[(($426)>>2)]; //@line 556 "collisions.cpp"
 var $428=((($424)+($427))|0); //@line 556 "collisions.cpp"
 var $429=((($428)-(1))|0); //@line 556 "collisions.cpp"
 $pX2=$429; //@line 556 "collisions.cpp"
 var $430=$pY; //@line 556 "collisions.cpp"
 var $431=$myBulletFrame; //@line 556 "collisions.cpp"
 var $432=(($431+36)|0); //@line 556 "collisions.cpp"
 var $433=HEAP32[(($432)>>2)]; //@line 556 "collisions.cpp"
 var $434=((($430)+($433))|0); //@line 556 "collisions.cpp"
 var $435=((($434)-(1))|0); //@line 556 "collisions.cpp"
 $pY2=$435; //@line 556 "collisions.cpp"
 var $436=$nodeB; //@line 559 "collisions.cpp"
 var $437=(($436)|0); //@line 559 "collisions.cpp"
 var $438=(($437+176)|0); //@line 559 "collisions.cpp"
 var $439=HEAP8[($438)]; //@line 559 "collisions.cpp"
 var $440=(($439)&1); //@line 559 "collisions.cpp"
 if($440){label=54;break;}else{label=77;break;} //@line 559 "collisions.cpp"
 case 54: 
 var $442=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 561 "collisions.cpp"
 $nodeP=$442; //@line 561 "collisions.cpp"
 label=55;break; //@line 561 "collisions.cpp"
 case 55: 
 var $444=$nodeP; //@line 561 "collisions.cpp"
 var $445=($444|0)!=0; //@line 561 "collisions.cpp"
 if($445){label=56;break;}else{label=76;break;} //@line 561 "collisions.cpp"
 case 56: 
 var $447=$nodeP; //@line 563 "collisions.cpp"
 var $448=(($447)|0); //@line 563 "collisions.cpp"
 var $449=$448; //@line 563 "collisions.cpp"
 var $450=(($449+130)|0); //@line 563 "collisions.cpp"
 var $451=HEAP8[($450)]; //@line 563 "collisions.cpp"
 var $452=(($451)&1); //@line 563 "collisions.cpp"
 if($452){label=58;break;}else{label=57;break;} //@line 563 "collisions.cpp"
 case 57: 
 label=75;break; //@line 563 "collisions.cpp"
 case 58: 
 var $455=$nodeP; //@line 566 "collisions.cpp"
 var $456=(($455)|0); //@line 566 "collisions.cpp"
 var $457=$456; //@line 566 "collisions.cpp"
 var $458=(($457+24)|0); //@line 566 "collisions.cpp"
 var $459=HEAP32[(($458)>>2)]; //@line 566 "collisions.cpp"
 var $460=((448+((($459)*(24))&-1))|0); //@line 566 "collisions.cpp"
 $myPlayerType=$460; //@line 566 "collisions.cpp"
 var $461=$nodeP; //@line 567 "collisions.cpp"
 var $462=(($461)|0); //@line 567 "collisions.cpp"
 var $463=$462; //@line 567 "collisions.cpp"
 var $464=(($463+88)|0); //@line 567 "collisions.cpp"
 var $465=HEAP32[(($464)>>2)]; //@line 567 "collisions.cpp"
 var $466=$myPlayerType; //@line 567 "collisions.cpp"
 var $467=(($466+16)|0); //@line 567 "collisions.cpp"
 var $468=HEAP32[(($467)>>2)]; //@line 567 "collisions.cpp"
 var $469=(($468+((($465)*(80))&-1))|0); //@line 567 "collisions.cpp"
 $myPlayerFrame=$469; //@line 567 "collisions.cpp"
 var $470=$myPlayerFrame; //@line 568 "collisions.cpp"
 var $471=(($470+24)|0); //@line 568 "collisions.cpp"
 var $472=HEAP32[(($471)>>2)]; //@line 568 "collisions.cpp"
 var $473=$myPlayerFrame; //@line 568 "collisions.cpp"
 var $474=(($473+40)|0); //@line 568 "collisions.cpp"
 var $475=HEAP32[(($474)>>2)]; //@line 568 "collisions.cpp"
 var $476=((($472)-($475))|0); //@line 568 "collisions.cpp"
 var $477=$nodeP; //@line 568 "collisions.cpp"
 var $478=(($477)|0); //@line 568 "collisions.cpp"
 var $479=$478; //@line 568 "collisions.cpp"
 var $480=(($479+8)|0); //@line 568 "collisions.cpp"
 var $481=HEAPF64[(($480)>>3)]; //@line 568 "collisions.cpp"
 var $482=(($481)&-1); //@line 568 "collisions.cpp"
 var $483=((($476)+($482))|0); //@line 568 "collisions.cpp"
 $eX=$483; //@line 568 "collisions.cpp"
 var $484=$myPlayerFrame; //@line 569 "collisions.cpp"
 var $485=(($484+28)|0); //@line 569 "collisions.cpp"
 var $486=HEAP32[(($485)>>2)]; //@line 569 "collisions.cpp"
 var $487=$myPlayerFrame; //@line 569 "collisions.cpp"
 var $488=(($487+44)|0); //@line 569 "collisions.cpp"
 var $489=HEAP32[(($488)>>2)]; //@line 569 "collisions.cpp"
 var $490=((($486)-($489))|0); //@line 569 "collisions.cpp"
 var $491=$nodeP; //@line 569 "collisions.cpp"
 var $492=(($491)|0); //@line 569 "collisions.cpp"
 var $493=$492; //@line 569 "collisions.cpp"
 var $494=(($493+16)|0); //@line 569 "collisions.cpp"
 var $495=HEAPF64[(($494)>>3)]; //@line 569 "collisions.cpp"
 var $496=(($495)&-1); //@line 569 "collisions.cpp"
 var $497=((($490)+($496))|0); //@line 569 "collisions.cpp"
 $eY=$497; //@line 569 "collisions.cpp"
 var $498=$eX; //@line 570 "collisions.cpp"
 var $499=$myPlayerFrame; //@line 570 "collisions.cpp"
 var $500=(($499+32)|0); //@line 570 "collisions.cpp"
 var $501=HEAP32[(($500)>>2)]; //@line 570 "collisions.cpp"
 var $502=((($498)+($501))|0); //@line 570 "collisions.cpp"
 var $503=((($502)-(1))|0); //@line 570 "collisions.cpp"
 $eX2=$503; //@line 570 "collisions.cpp"
 var $504=$eY; //@line 570 "collisions.cpp"
 var $505=$myPlayerFrame; //@line 570 "collisions.cpp"
 var $506=(($505+36)|0); //@line 570 "collisions.cpp"
 var $507=HEAP32[(($506)>>2)]; //@line 570 "collisions.cpp"
 var $508=((($504)+($507))|0); //@line 570 "collisions.cpp"
 var $509=((($508)-(1))|0); //@line 570 "collisions.cpp"
 $eY2=$509; //@line 570 "collisions.cpp"
 var $510=$pX2; //@line 573 "collisions.cpp"
 var $511=$pX; //@line 573 "collisions.cpp"
 var $512=((($510)-($511))|0); //@line 573 "collisions.cpp"
 var $513=((($512)+(1))|0); //@line 573 "collisions.cpp"
 var $514=($513|0)!=0; //@line 573 "collisions.cpp"
 if($514){label=59;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 59: 
 var $516=$pY2; //@line 573 "collisions.cpp"
 var $517=$pY; //@line 573 "collisions.cpp"
 var $518=((($516)-($517))|0); //@line 573 "collisions.cpp"
 var $519=((($518)+(1))|0); //@line 573 "collisions.cpp"
 var $520=($519|0)!=0; //@line 573 "collisions.cpp"
 if($520){label=60;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 60: 
 var $522=$eX2; //@line 573 "collisions.cpp"
 var $523=$eX; //@line 573 "collisions.cpp"
 var $524=((($522)-($523))|0); //@line 573 "collisions.cpp"
 var $525=((($524)+(1))|0); //@line 573 "collisions.cpp"
 var $526=($525|0)!=0; //@line 573 "collisions.cpp"
 if($526){label=61;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 61: 
 var $528=$eY2; //@line 573 "collisions.cpp"
 var $529=$eY; //@line 573 "collisions.cpp"
 var $530=((($528)-($529))|0); //@line 573 "collisions.cpp"
 var $531=((($530)+(1))|0); //@line 573 "collisions.cpp"
 var $532=($531|0)!=0; //@line 573 "collisions.cpp"
 if($532){label=62;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 62: 
 var $534=$pX2; //@line 573 "collisions.cpp"
 var $535=$eX; //@line 573 "collisions.cpp"
 var $536=($534|0)>=($535|0); //@line 573 "collisions.cpp"
 if($536){label=63;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 63: 
 var $538=$eX2; //@line 573 "collisions.cpp"
 var $539=$pX; //@line 573 "collisions.cpp"
 var $540=($538|0)>=($539|0); //@line 573 "collisions.cpp"
 if($540){label=64;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 64: 
 var $542=$pY2; //@line 573 "collisions.cpp"
 var $543=$eY; //@line 573 "collisions.cpp"
 var $544=($542|0)>=($543|0); //@line 573 "collisions.cpp"
 if($544){label=65;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 65: 
 var $546=$eY2; //@line 573 "collisions.cpp"
 var $547=$pY; //@line 573 "collisions.cpp"
 var $548=($546|0)>=($547|0); //@line 573 "collisions.cpp"
 if($548){label=66;break;}else{label=74;break;} //@line 573 "collisions.cpp"
 case 66: 
 var $550=$nodeB; //@line 577 "collisions.cpp"
 var $551=(($550)|0); //@line 577 "collisions.cpp"
 var $552=(($551+179)|0); //@line 577 "collisions.cpp"
 var $553=HEAP8[($552)]; //@line 577 "collisions.cpp"
 var $554=(($553)&1); //@line 577 "collisions.cpp"
 if($554){label=69;break;}else{label=67;break;} //@line 577 "collisions.cpp"
 case 67: 
 var $556=$nodeB; //@line 577 "collisions.cpp"
 var $557=(($556)|0); //@line 577 "collisions.cpp"
 var $558=(($557+184)|0); //@line 577 "collisions.cpp"
 var $559=(($558)|0); //@line 577 "collisions.cpp"
 var $560=HEAP32[(($559)>>2)]; //@line 577 "collisions.cpp"
 var $561=$nodeP; //@line 577 "collisions.cpp"
 var $562=(($561)|0); //@line 577 "collisions.cpp"
 var $563=$562; //@line 577 "collisions.cpp"
 var $564=(($563)|0); //@line 577 "collisions.cpp"
 var $565=HEAP32[(($564)>>2)]; //@line 577 "collisions.cpp"
 var $566=($560|0)==($565|0); //@line 577 "collisions.cpp"
 if($566){label=68;break;}else{label=69;break;} //@line 577 "collisions.cpp"
 case 68: 
 label=75;break; //@line 579 "collisions.cpp"
 case 69: 
 var $569=$nodeP; //@line 585 "collisions.cpp"
 var $570=(($569)|0); //@line 585 "collisions.cpp"
 var $571=$570; //@line 585 "collisions.cpp"
 var $572=(($571)|0); //@line 585 "collisions.cpp"
 var $573=HEAP32[(($572)>>2)]; //@line 585 "collisions.cpp"
 var $574=(($objPointer)|0); //@line 585 "collisions.cpp"
 HEAP32[(($574)>>2)]=$573; //@line 585 "collisions.cpp"
 var $575=$nodeP; //@line 586 "collisions.cpp"
 var $576=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$575); //@line 586 "collisions.cpp"
 var $577=(($objPointer+8)|0); //@line 586 "collisions.cpp"
 HEAP32[(($577)>>2)]=$576; //@line 586 "collisions.cpp"
 var $578=(($objPointer+4)|0); //@line 587 "collisions.cpp"
 HEAP8[($578)]=2; //@line 587 "collisions.cpp"
 var $579=$nodeB; //@line 589 "collisions.cpp"
 var $580=__Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($579,$objPointer); //@line 589 "collisions.cpp"
 if($580){label=71;break;}else{label=70;break;} //@line 589 "collisions.cpp"
 case 70: 
 $1=0; //@line 590 "collisions.cpp"
 label=129;break; //@line 590 "collisions.cpp"
 case 71: 
 var $583=$nodeB; //@line 594 "collisions.cpp"
 var $584=(($583)|0); //@line 594 "collisions.cpp"
 var $585=$584; //@line 594 "collisions.cpp"
 var $586=(($585)|0); //@line 594 "collisions.cpp"
 var $587=HEAP32[(($586)>>2)]; //@line 594 "collisions.cpp"
 var $588=(($objPointer)|0); //@line 594 "collisions.cpp"
 HEAP32[(($588)>>2)]=$587; //@line 594 "collisions.cpp"
 var $589=$nodeB; //@line 595 "collisions.cpp"
 var $590=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$589); //@line 595 "collisions.cpp"
 var $591=(($objPointer+8)|0); //@line 595 "collisions.cpp"
 HEAP32[(($591)>>2)]=$590; //@line 595 "collisions.cpp"
 var $592=(($objPointer+4)|0); //@line 596 "collisions.cpp"
 HEAP8[($592)]=4; //@line 596 "collisions.cpp"
 var $593=$nodeP; //@line 598 "collisions.cpp"
 var $594=__Z13playerUnitHitR20vectorListNodeStructI16playerUnitStructER23gameObjectPointerStruct($593,$objPointer); //@line 598 "collisions.cpp"
 if($594){label=73;break;}else{label=72;break;} //@line 598 "collisions.cpp"
 case 72: 
 $1=0; //@line 599 "collisions.cpp"
 label=129;break; //@line 599 "collisions.cpp"
 case 73: 
 label=74;break; //@line 600 "collisions.cpp"
 case 74: 
 label=75;break; //@line 601 "collisions.cpp"
 case 75: 
 var $599=$nodeP; //@line 561 "collisions.cpp"
 var $600=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$599); //@line 561 "collisions.cpp"
 $nodeP=$600; //@line 561 "collisions.cpp"
 label=55;break; //@line 561 "collisions.cpp"
 case 76: 
 label=77;break; //@line 602 "collisions.cpp"
 case 77: 
 var $603=$nodeB; //@line 605 "collisions.cpp"
 var $604=(($603)|0); //@line 605 "collisions.cpp"
 var $605=(($604+177)|0); //@line 605 "collisions.cpp"
 var $606=HEAP8[($605)]; //@line 605 "collisions.cpp"
 var $607=(($606)&1); //@line 605 "collisions.cpp"
 if($607){label=78;break;}else{label=103;break;} //@line 605 "collisions.cpp"
 case 78: 
 var $609=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 607 "collisions.cpp"
 $node=$609; //@line 607 "collisions.cpp"
 label=79;break; //@line 607 "collisions.cpp"
 case 79: 
 var $611=$node; //@line 607 "collisions.cpp"
 var $612=($611|0)!=0; //@line 607 "collisions.cpp"
 if($612){label=80;break;}else{label=102;break;} //@line 607 "collisions.cpp"
 case 80: 
 var $614=$node; //@line 609 "collisions.cpp"
 var $615=(($614)|0); //@line 609 "collisions.cpp"
 var $616=$615; //@line 609 "collisions.cpp"
 var $617=(($616+130)|0); //@line 609 "collisions.cpp"
 var $618=HEAP8[($617)]; //@line 609 "collisions.cpp"
 var $619=(($618)&1); //@line 609 "collisions.cpp"
 if($619){label=82;break;}else{label=81;break;} //@line 609 "collisions.cpp"
 case 81: 
 label=101;break; //@line 609 "collisions.cpp"
 case 82: 
 var $622=$node; //@line 612 "collisions.cpp"
 var $623=(($622)|0); //@line 612 "collisions.cpp"
 var $624=(($623+197)|0); //@line 612 "collisions.cpp"
 var $625=HEAP8[($624)]; //@line 612 "collisions.cpp"
 var $626=(($625)&1); //@line 612 "collisions.cpp"
 if($626){label=84;break;}else{label=83;break;} //@line 612 "collisions.cpp"
 case 83: 
 label=101;break; //@line 612 "collisions.cpp"
 case 84: 
 var $629=$node; //@line 615 "collisions.cpp"
 var $630=(($629)|0); //@line 615 "collisions.cpp"
 var $631=$630; //@line 615 "collisions.cpp"
 var $632=(($631+24)|0); //@line 615 "collisions.cpp"
 var $633=HEAP32[(($632)>>2)]; //@line 615 "collisions.cpp"
 var $634=((1904+((($633)*(24))&-1))|0); //@line 615 "collisions.cpp"
 $myEnemyType=$634; //@line 615 "collisions.cpp"
 var $635=$node; //@line 616 "collisions.cpp"
 var $636=(($635)|0); //@line 616 "collisions.cpp"
 var $637=$636; //@line 616 "collisions.cpp"
 var $638=(($637+88)|0); //@line 616 "collisions.cpp"
 var $639=HEAP32[(($638)>>2)]; //@line 616 "collisions.cpp"
 var $640=$myEnemyType; //@line 616 "collisions.cpp"
 var $641=(($640+16)|0); //@line 616 "collisions.cpp"
 var $642=HEAP32[(($641)>>2)]; //@line 616 "collisions.cpp"
 var $643=(($642+((($639)*(80))&-1))|0); //@line 616 "collisions.cpp"
 $myEnemyFrame=$643; //@line 616 "collisions.cpp"
 var $644=$myEnemyFrame; //@line 617 "collisions.cpp"
 var $645=(($644+24)|0); //@line 617 "collisions.cpp"
 var $646=HEAP32[(($645)>>2)]; //@line 617 "collisions.cpp"
 var $647=$myEnemyFrame; //@line 617 "collisions.cpp"
 var $648=(($647+40)|0); //@line 617 "collisions.cpp"
 var $649=HEAP32[(($648)>>2)]; //@line 617 "collisions.cpp"
 var $650=((($646)-($649))|0); //@line 617 "collisions.cpp"
 var $651=$node; //@line 617 "collisions.cpp"
 var $652=(($651)|0); //@line 617 "collisions.cpp"
 var $653=$652; //@line 617 "collisions.cpp"
 var $654=(($653+8)|0); //@line 617 "collisions.cpp"
 var $655=HEAPF64[(($654)>>3)]; //@line 617 "collisions.cpp"
 var $656=(($655)&-1); //@line 617 "collisions.cpp"
 var $657=((($650)+($656))|0); //@line 617 "collisions.cpp"
 $eX=$657; //@line 617 "collisions.cpp"
 var $658=$myEnemyFrame; //@line 618 "collisions.cpp"
 var $659=(($658+28)|0); //@line 618 "collisions.cpp"
 var $660=HEAP32[(($659)>>2)]; //@line 618 "collisions.cpp"
 var $661=$myEnemyFrame; //@line 618 "collisions.cpp"
 var $662=(($661+44)|0); //@line 618 "collisions.cpp"
 var $663=HEAP32[(($662)>>2)]; //@line 618 "collisions.cpp"
 var $664=((($660)-($663))|0); //@line 618 "collisions.cpp"
 var $665=$node; //@line 618 "collisions.cpp"
 var $666=(($665)|0); //@line 618 "collisions.cpp"
 var $667=$666; //@line 618 "collisions.cpp"
 var $668=(($667+16)|0); //@line 618 "collisions.cpp"
 var $669=HEAPF64[(($668)>>3)]; //@line 618 "collisions.cpp"
 var $670=(($669)&-1); //@line 618 "collisions.cpp"
 var $671=((($664)+($670))|0); //@line 618 "collisions.cpp"
 $eY=$671; //@line 618 "collisions.cpp"
 var $672=$eX; //@line 619 "collisions.cpp"
 var $673=$myEnemyFrame; //@line 619 "collisions.cpp"
 var $674=(($673+32)|0); //@line 619 "collisions.cpp"
 var $675=HEAP32[(($674)>>2)]; //@line 619 "collisions.cpp"
 var $676=((($672)+($675))|0); //@line 619 "collisions.cpp"
 var $677=((($676)-(1))|0); //@line 619 "collisions.cpp"
 $eX2=$677; //@line 619 "collisions.cpp"
 var $678=$eY; //@line 619 "collisions.cpp"
 var $679=$myEnemyFrame; //@line 619 "collisions.cpp"
 var $680=(($679+36)|0); //@line 619 "collisions.cpp"
 var $681=HEAP32[(($680)>>2)]; //@line 619 "collisions.cpp"
 var $682=((($678)+($681))|0); //@line 619 "collisions.cpp"
 var $683=((($682)-(1))|0); //@line 619 "collisions.cpp"
 $eY2=$683; //@line 619 "collisions.cpp"
 var $684=$pX2; //@line 622 "collisions.cpp"
 var $685=$pX; //@line 622 "collisions.cpp"
 var $686=((($684)-($685))|0); //@line 622 "collisions.cpp"
 var $687=((($686)+(1))|0); //@line 622 "collisions.cpp"
 var $688=($687|0)!=0; //@line 622 "collisions.cpp"
 if($688){label=85;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 85: 
 var $690=$pY2; //@line 622 "collisions.cpp"
 var $691=$pY; //@line 622 "collisions.cpp"
 var $692=((($690)-($691))|0); //@line 622 "collisions.cpp"
 var $693=((($692)+(1))|0); //@line 622 "collisions.cpp"
 var $694=($693|0)!=0; //@line 622 "collisions.cpp"
 if($694){label=86;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 86: 
 var $696=$eX2; //@line 622 "collisions.cpp"
 var $697=$eX; //@line 622 "collisions.cpp"
 var $698=((($696)-($697))|0); //@line 622 "collisions.cpp"
 var $699=((($698)+(1))|0); //@line 622 "collisions.cpp"
 var $700=($699|0)!=0; //@line 622 "collisions.cpp"
 if($700){label=87;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 87: 
 var $702=$eY2; //@line 622 "collisions.cpp"
 var $703=$eY; //@line 622 "collisions.cpp"
 var $704=((($702)-($703))|0); //@line 622 "collisions.cpp"
 var $705=((($704)+(1))|0); //@line 622 "collisions.cpp"
 var $706=($705|0)!=0; //@line 622 "collisions.cpp"
 if($706){label=88;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 88: 
 var $708=$pX2; //@line 622 "collisions.cpp"
 var $709=$eX; //@line 622 "collisions.cpp"
 var $710=($708|0)>=($709|0); //@line 622 "collisions.cpp"
 if($710){label=89;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 89: 
 var $712=$eX2; //@line 622 "collisions.cpp"
 var $713=$pX; //@line 622 "collisions.cpp"
 var $714=($712|0)>=($713|0); //@line 622 "collisions.cpp"
 if($714){label=90;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 90: 
 var $716=$pY2; //@line 622 "collisions.cpp"
 var $717=$eY; //@line 622 "collisions.cpp"
 var $718=($716|0)>=($717|0); //@line 622 "collisions.cpp"
 if($718){label=91;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 91: 
 var $720=$eY2; //@line 622 "collisions.cpp"
 var $721=$pY; //@line 622 "collisions.cpp"
 var $722=($720|0)>=($721|0); //@line 622 "collisions.cpp"
 if($722){label=92;break;}else{label=100;break;} //@line 622 "collisions.cpp"
 case 92: 
 var $724=$nodeB; //@line 626 "collisions.cpp"
 var $725=(($724)|0); //@line 626 "collisions.cpp"
 var $726=(($725+179)|0); //@line 626 "collisions.cpp"
 var $727=HEAP8[($726)]; //@line 626 "collisions.cpp"
 var $728=(($727)&1); //@line 626 "collisions.cpp"
 if($728){label=95;break;}else{label=93;break;} //@line 626 "collisions.cpp"
 case 93: 
 var $730=$nodeB; //@line 626 "collisions.cpp"
 var $731=(($730)|0); //@line 626 "collisions.cpp"
 var $732=(($731+184)|0); //@line 626 "collisions.cpp"
 var $733=(($732)|0); //@line 626 "collisions.cpp"
 var $734=HEAP32[(($733)>>2)]; //@line 626 "collisions.cpp"
 var $735=$node; //@line 626 "collisions.cpp"
 var $736=(($735)|0); //@line 626 "collisions.cpp"
 var $737=$736; //@line 626 "collisions.cpp"
 var $738=(($737)|0); //@line 626 "collisions.cpp"
 var $739=HEAP32[(($738)>>2)]; //@line 626 "collisions.cpp"
 var $740=($734|0)==($739|0); //@line 626 "collisions.cpp"
 if($740){label=94;break;}else{label=95;break;} //@line 626 "collisions.cpp"
 case 94: 
 label=101;break; //@line 628 "collisions.cpp"
 case 95: 
 var $743=$node; //@line 634 "collisions.cpp"
 var $744=(($743)|0); //@line 634 "collisions.cpp"
 var $745=$744; //@line 634 "collisions.cpp"
 var $746=(($745)|0); //@line 634 "collisions.cpp"
 var $747=HEAP32[(($746)>>2)]; //@line 634 "collisions.cpp"
 var $748=(($objPointer)|0); //@line 634 "collisions.cpp"
 HEAP32[(($748)>>2)]=$747; //@line 634 "collisions.cpp"
 var $749=$node; //@line 635 "collisions.cpp"
 var $750=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$749); //@line 635 "collisions.cpp"
 var $751=(($objPointer+8)|0); //@line 635 "collisions.cpp"
 HEAP32[(($751)>>2)]=$750; //@line 635 "collisions.cpp"
 var $752=(($objPointer+4)|0); //@line 636 "collisions.cpp"
 HEAP8[($752)]=3; //@line 636 "collisions.cpp"
 var $753=$nodeB; //@line 638 "collisions.cpp"
 var $754=__Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($753,$objPointer); //@line 638 "collisions.cpp"
 if($754){label=97;break;}else{label=96;break;} //@line 638 "collisions.cpp"
 case 96: 
 $1=0; //@line 639 "collisions.cpp"
 label=129;break; //@line 639 "collisions.cpp"
 case 97: 
 var $757=$nodeB; //@line 643 "collisions.cpp"
 var $758=(($757)|0); //@line 643 "collisions.cpp"
 var $759=$758; //@line 643 "collisions.cpp"
 var $760=(($759)|0); //@line 643 "collisions.cpp"
 var $761=HEAP32[(($760)>>2)]; //@line 643 "collisions.cpp"
 var $762=(($objPointer)|0); //@line 643 "collisions.cpp"
 HEAP32[(($762)>>2)]=$761; //@line 643 "collisions.cpp"
 var $763=$nodeB; //@line 644 "collisions.cpp"
 var $764=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$763); //@line 644 "collisions.cpp"
 var $765=(($objPointer+8)|0); //@line 644 "collisions.cpp"
 HEAP32[(($765)>>2)]=$764; //@line 644 "collisions.cpp"
 var $766=(($objPointer+4)|0); //@line 645 "collisions.cpp"
 HEAP8[($766)]=4; //@line 645 "collisions.cpp"
 var $767=$node; //@line 647 "collisions.cpp"
 var $768=__Z12enemyUnitHitR20vectorListNodeStructI15enemyUnitStructER23gameObjectPointerStruct($767,$objPointer); //@line 647 "collisions.cpp"
 if($768){label=99;break;}else{label=98;break;} //@line 647 "collisions.cpp"
 case 98: 
 $1=0; //@line 648 "collisions.cpp"
 label=129;break; //@line 648 "collisions.cpp"
 case 99: 
 label=100;break; //@line 649 "collisions.cpp"
 case 100: 
 label=101;break; //@line 650 "collisions.cpp"
 case 101: 
 var $773=$node; //@line 607 "collisions.cpp"
 var $774=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$773); //@line 607 "collisions.cpp"
 $node=$774; //@line 607 "collisions.cpp"
 label=79;break; //@line 607 "collisions.cpp"
 case 102: 
 label=103;break; //@line 651 "collisions.cpp"
 case 103: 
 var $777=$nodeB; //@line 654 "collisions.cpp"
 var $778=(($777)|0); //@line 654 "collisions.cpp"
 var $779=(($778+178)|0); //@line 654 "collisions.cpp"
 var $780=HEAP8[($779)]; //@line 654 "collisions.cpp"
 var $781=(($780)&1); //@line 654 "collisions.cpp"
 if($781){label=104;break;}else{label=126;break;} //@line 654 "collisions.cpp"
 case 104: 
 var $783=__ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv(19920); //@line 656 "collisions.cpp"
 $nodeB2=$783; //@line 656 "collisions.cpp"
 label=105;break; //@line 656 "collisions.cpp"
 case 105: 
 var $785=$nodeB2; //@line 656 "collisions.cpp"
 var $786=($785|0)!=0; //@line 656 "collisions.cpp"
 if($786){label=106;break;}else{label=125;break;} //@line 656 "collisions.cpp"
 case 106: 
 var $788=$nodeB2; //@line 658 "collisions.cpp"
 var $789=(($788)|0); //@line 658 "collisions.cpp"
 var $790=$789; //@line 658 "collisions.cpp"
 var $791=(($790+130)|0); //@line 658 "collisions.cpp"
 var $792=HEAP8[($791)]; //@line 658 "collisions.cpp"
 var $793=(($792)&1); //@line 658 "collisions.cpp"
 if($793){label=108;break;}else{label=107;break;} //@line 658 "collisions.cpp"
 case 107: 
 label=124;break; //@line 658 "collisions.cpp"
 case 108: 
 var $796=$nodeB; //@line 661 "collisions.cpp"
 var $797=$nodeB2; //@line 661 "collisions.cpp"
 var $798=($796|0)==($797|0); //@line 661 "collisions.cpp"
 if($798){label=109;break;}else{label=110;break;} //@line 661 "collisions.cpp"
 case 109: 
 label=124;break; //@line 661 "collisions.cpp"
 case 110: 
 var $801=$nodeB2; //@line 664 "collisions.cpp"
 var $802=(($801)|0); //@line 664 "collisions.cpp"
 var $803=$802; //@line 664 "collisions.cpp"
 var $804=(($803+24)|0); //@line 664 "collisions.cpp"
 var $805=HEAP32[(($804)>>2)]; //@line 664 "collisions.cpp"
 var $806=((2192+((($805)*(24))&-1))|0); //@line 664 "collisions.cpp"
 $myBulletType2=$806; //@line 664 "collisions.cpp"
 var $807=$nodeB2; //@line 665 "collisions.cpp"
 var $808=(($807)|0); //@line 665 "collisions.cpp"
 var $809=$808; //@line 665 "collisions.cpp"
 var $810=(($809+88)|0); //@line 665 "collisions.cpp"
 var $811=HEAP32[(($810)>>2)]; //@line 665 "collisions.cpp"
 var $812=$myBulletType2; //@line 665 "collisions.cpp"
 var $813=(($812+16)|0); //@line 665 "collisions.cpp"
 var $814=HEAP32[(($813)>>2)]; //@line 665 "collisions.cpp"
 var $815=(($814+((($811)*(80))&-1))|0); //@line 665 "collisions.cpp"
 $myBulletFrame2=$815; //@line 665 "collisions.cpp"
 var $816=$myBulletFrame2; //@line 666 "collisions.cpp"
 var $817=(($816+24)|0); //@line 666 "collisions.cpp"
 var $818=HEAP32[(($817)>>2)]; //@line 666 "collisions.cpp"
 var $819=$myBulletFrame2; //@line 666 "collisions.cpp"
 var $820=(($819+40)|0); //@line 666 "collisions.cpp"
 var $821=HEAP32[(($820)>>2)]; //@line 666 "collisions.cpp"
 var $822=((($818)-($821))|0); //@line 666 "collisions.cpp"
 var $823=$nodeB2; //@line 666 "collisions.cpp"
 var $824=(($823)|0); //@line 666 "collisions.cpp"
 var $825=$824; //@line 666 "collisions.cpp"
 var $826=(($825+8)|0); //@line 666 "collisions.cpp"
 var $827=HEAPF64[(($826)>>3)]; //@line 666 "collisions.cpp"
 var $828=(($827)&-1); //@line 666 "collisions.cpp"
 var $829=((($822)+($828))|0); //@line 666 "collisions.cpp"
 $eX=$829; //@line 666 "collisions.cpp"
 var $830=$myBulletFrame2; //@line 667 "collisions.cpp"
 var $831=(($830+28)|0); //@line 667 "collisions.cpp"
 var $832=HEAP32[(($831)>>2)]; //@line 667 "collisions.cpp"
 var $833=$myBulletFrame2; //@line 667 "collisions.cpp"
 var $834=(($833+44)|0); //@line 667 "collisions.cpp"
 var $835=HEAP32[(($834)>>2)]; //@line 667 "collisions.cpp"
 var $836=((($832)-($835))|0); //@line 667 "collisions.cpp"
 var $837=$nodeB2; //@line 667 "collisions.cpp"
 var $838=(($837)|0); //@line 667 "collisions.cpp"
 var $839=$838; //@line 667 "collisions.cpp"
 var $840=(($839+16)|0); //@line 667 "collisions.cpp"
 var $841=HEAPF64[(($840)>>3)]; //@line 667 "collisions.cpp"
 var $842=(($841)&-1); //@line 667 "collisions.cpp"
 var $843=((($836)+($842))|0); //@line 667 "collisions.cpp"
 $eY=$843; //@line 667 "collisions.cpp"
 var $844=$eX; //@line 668 "collisions.cpp"
 var $845=$myBulletFrame2; //@line 668 "collisions.cpp"
 var $846=(($845+32)|0); //@line 668 "collisions.cpp"
 var $847=HEAP32[(($846)>>2)]; //@line 668 "collisions.cpp"
 var $848=((($844)+($847))|0); //@line 668 "collisions.cpp"
 var $849=((($848)-(1))|0); //@line 668 "collisions.cpp"
 $eX2=$849; //@line 668 "collisions.cpp"
 var $850=$eY; //@line 668 "collisions.cpp"
 var $851=$myBulletFrame2; //@line 668 "collisions.cpp"
 var $852=(($851+36)|0); //@line 668 "collisions.cpp"
 var $853=HEAP32[(($852)>>2)]; //@line 668 "collisions.cpp"
 var $854=((($850)+($853))|0); //@line 668 "collisions.cpp"
 var $855=((($854)-(1))|0); //@line 668 "collisions.cpp"
 $eY2=$855; //@line 668 "collisions.cpp"
 var $856=$pX2; //@line 671 "collisions.cpp"
 var $857=$pX; //@line 671 "collisions.cpp"
 var $858=((($856)-($857))|0); //@line 671 "collisions.cpp"
 var $859=((($858)+(1))|0); //@line 671 "collisions.cpp"
 var $860=($859|0)!=0; //@line 671 "collisions.cpp"
 if($860){label=111;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 111: 
 var $862=$pY2; //@line 671 "collisions.cpp"
 var $863=$pY; //@line 671 "collisions.cpp"
 var $864=((($862)-($863))|0); //@line 671 "collisions.cpp"
 var $865=((($864)+(1))|0); //@line 671 "collisions.cpp"
 var $866=($865|0)!=0; //@line 671 "collisions.cpp"
 if($866){label=112;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 112: 
 var $868=$eX2; //@line 671 "collisions.cpp"
 var $869=$eX; //@line 671 "collisions.cpp"
 var $870=((($868)-($869))|0); //@line 671 "collisions.cpp"
 var $871=((($870)+(1))|0); //@line 671 "collisions.cpp"
 var $872=($871|0)!=0; //@line 671 "collisions.cpp"
 if($872){label=113;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 113: 
 var $874=$eY2; //@line 671 "collisions.cpp"
 var $875=$eY; //@line 671 "collisions.cpp"
 var $876=((($874)-($875))|0); //@line 671 "collisions.cpp"
 var $877=((($876)+(1))|0); //@line 671 "collisions.cpp"
 var $878=($877|0)!=0; //@line 671 "collisions.cpp"
 if($878){label=114;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 114: 
 var $880=$pX2; //@line 671 "collisions.cpp"
 var $881=$eX; //@line 671 "collisions.cpp"
 var $882=($880|0)>=($881|0); //@line 671 "collisions.cpp"
 if($882){label=115;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 115: 
 var $884=$eX2; //@line 671 "collisions.cpp"
 var $885=$pX; //@line 671 "collisions.cpp"
 var $886=($884|0)>=($885|0); //@line 671 "collisions.cpp"
 if($886){label=116;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 116: 
 var $888=$pY2; //@line 671 "collisions.cpp"
 var $889=$eY; //@line 671 "collisions.cpp"
 var $890=($888|0)>=($889|0); //@line 671 "collisions.cpp"
 if($890){label=117;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 117: 
 var $892=$eY2; //@line 671 "collisions.cpp"
 var $893=$pY; //@line 671 "collisions.cpp"
 var $894=($892|0)>=($893|0); //@line 671 "collisions.cpp"
 if($894){label=118;break;}else{label=123;break;} //@line 671 "collisions.cpp"
 case 118: 
 var $896=$nodeB2; //@line 678 "collisions.cpp"
 var $897=(($896)|0); //@line 678 "collisions.cpp"
 var $898=$897; //@line 678 "collisions.cpp"
 var $899=(($898)|0); //@line 678 "collisions.cpp"
 var $900=HEAP32[(($899)>>2)]; //@line 678 "collisions.cpp"
 var $901=(($objPointer)|0); //@line 678 "collisions.cpp"
 HEAP32[(($901)>>2)]=$900; //@line 678 "collisions.cpp"
 var $902=$nodeB2; //@line 679 "collisions.cpp"
 var $903=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$902); //@line 679 "collisions.cpp"
 var $904=(($objPointer+8)|0); //@line 679 "collisions.cpp"
 HEAP32[(($904)>>2)]=$903; //@line 679 "collisions.cpp"
 var $905=(($objPointer+4)|0); //@line 680 "collisions.cpp"
 HEAP8[($905)]=4; //@line 680 "collisions.cpp"
 var $906=$nodeB; //@line 682 "collisions.cpp"
 var $907=__Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($906,$objPointer); //@line 682 "collisions.cpp"
 if($907){label=120;break;}else{label=119;break;} //@line 682 "collisions.cpp"
 case 119: 
 $1=0; //@line 683 "collisions.cpp"
 label=129;break; //@line 683 "collisions.cpp"
 case 120: 
 var $910=$nodeB; //@line 687 "collisions.cpp"
 var $911=(($910)|0); //@line 687 "collisions.cpp"
 var $912=$911; //@line 687 "collisions.cpp"
 var $913=(($912)|0); //@line 687 "collisions.cpp"
 var $914=HEAP32[(($913)>>2)]; //@line 687 "collisions.cpp"
 var $915=(($objPointer)|0); //@line 687 "collisions.cpp"
 HEAP32[(($915)>>2)]=$914; //@line 687 "collisions.cpp"
 var $916=$nodeB; //@line 688 "collisions.cpp"
 var $917=__ZN15vectorListClassI16bulletUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19920,$916); //@line 688 "collisions.cpp"
 var $918=(($objPointer+8)|0); //@line 688 "collisions.cpp"
 HEAP32[(($918)>>2)]=$917; //@line 688 "collisions.cpp"
 var $919=(($objPointer+4)|0); //@line 689 "collisions.cpp"
 HEAP8[($919)]=4; //@line 689 "collisions.cpp"
 var $920=$nodeB2; //@line 691 "collisions.cpp"
 var $921=__Z13bulletUnitHitR20vectorListNodeStructI16bulletUnitStructER23gameObjectPointerStruct($920,$objPointer); //@line 691 "collisions.cpp"
 if($921){label=122;break;}else{label=121;break;} //@line 691 "collisions.cpp"
 case 121: 
 $1=0; //@line 692 "collisions.cpp"
 label=129;break; //@line 692 "collisions.cpp"
 case 122: 
 label=123;break; //@line 693 "collisions.cpp"
 case 123: 
 label=124;break; //@line 694 "collisions.cpp"
 case 124: 
 var $926=$nodeB2; //@line 656 "collisions.cpp"
 var $927=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19920,$926); //@line 656 "collisions.cpp"
 $nodeB2=$927; //@line 656 "collisions.cpp"
 label=105;break; //@line 656 "collisions.cpp"
 case 125: 
 label=126;break; //@line 695 "collisions.cpp"
 case 126: 
 label=127;break; //@line 696 "collisions.cpp"
 case 127: 
 var $931=$nodeB; //@line 547 "collisions.cpp"
 var $932=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19920,$931); //@line 547 "collisions.cpp"
 $nodeB=$932; //@line 547 "collisions.cpp"
 label=50;break; //@line 547 "collisions.cpp"
 case 128: 
 $1=1; //@line 698 "collisions.cpp"
 label=129;break; //@line 698 "collisions.cpp"
 case 129: 
 var $935=$1; //@line 699 "collisions.cpp"
 STACKTOP=sp;return $935; //@line 699 "collisions.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E($this,$node){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$node;
 var $3=$1;
 var $4=$2; //@line 103 "./vectorlist.h"
 var $5=(($3+20)|0); //@line 103 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 103 "./vectorlist.h"
 var $7=$4; //@line 103 "./vectorlist.h"
 var $8=$6; //@line 103 "./vectorlist.h"
 var $9=((($7)-($8))|0); //@line 103 "./vectorlist.h"
 var $10=(((($9|0))/(264))&-1); //@line 103 "./vectorlist.h"
 STACKTOP=sp;return $10; //@line 103 "./vectorlist.h"
}


function __ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E($this,$node){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$node;
 var $3=$1;
 var $4=$2; //@line 103 "./vectorlist.h"
 var $5=(($3+20)|0); //@line 103 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 103 "./vectorlist.h"
 var $7=$4; //@line 103 "./vectorlist.h"
 var $8=$6; //@line 103 "./vectorlist.h"
 var $9=((($7)-($8))|0); //@line 103 "./vectorlist.h"
 var $10=(((($9|0))/(264))&-1); //@line 103 "./vectorlist.h"
 STACKTOP=sp;return $10; //@line 103 "./vectorlist.h"
}


function __ZN15vectorListClassI15enemyUnitStructE12isValidIndexEm($this,$index){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$index;
 var $3=$1;
 var $4=$2; //@line 108 "./vectorlist.h"
 var $5=($4>>>0)>=0; //@line 108 "./vectorlist.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 108 "./vectorlist.h"
 case 2: 
 var $7=$2; //@line 108 "./vectorlist.h"
 var $8=__ZN15vectorListClassI15enemyUnitStructE10vectorSizeEv($3); //@line 108 "./vectorlist.h"
 var $9=($7>>>0)<($8>>>0); //@line 108 "./vectorlist.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 108 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE10vectorSizeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 107 "./vectorlist.h"
 var $4=HEAP32[(($3)>>2)]; //@line 107 "./vectorlist.h"
 STACKTOP=sp;return $4; //@line 107 "./vectorlist.h"
}


function __ZN15vectorListClassI16bulletUnitStructE12isValidIndexEm($this,$index){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$index;
 var $3=$1;
 var $4=$2; //@line 108 "./vectorlist.h"
 var $5=($4>>>0)>=0; //@line 108 "./vectorlist.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 108 "./vectorlist.h"
 case 2: 
 var $7=$2; //@line 108 "./vectorlist.h"
 var $8=__ZN15vectorListClassI16bulletUnitStructE10vectorSizeEv($3); //@line 108 "./vectorlist.h"
 var $9=($7>>>0)<($8>>>0); //@line 108 "./vectorlist.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 108 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE10vectorSizeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 107 "./vectorlist.h"
 var $4=HEAP32[(($3)>>2)]; //@line 107 "./vectorlist.h"
 STACKTOP=sp;return $4; //@line 107 "./vectorlist.h"
}


function __ZN15vectorListClassI16playerUnitStructE12isValidIndexEm($this,$index){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$index;
 var $3=$1;
 var $4=$2; //@line 108 "./vectorlist.h"
 var $5=($4>>>0)>=0; //@line 108 "./vectorlist.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 108 "./vectorlist.h"
 case 2: 
 var $7=$2; //@line 108 "./vectorlist.h"
 var $8=__ZN15vectorListClassI16playerUnitStructE10vectorSizeEv($3); //@line 108 "./vectorlist.h"
 var $9=($7>>>0)<($8>>>0); //@line 108 "./vectorlist.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 108 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE10vectorSizeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 107 "./vectorlist.h"
 var $4=HEAP32[(($3)>>2)]; //@line 107 "./vectorlist.h"
 STACKTOP=sp;return $4; //@line 107 "./vectorlist.h"
}


function __ZN14conLoggerClass4initEPcP12consoleClassii($this,$name,$console,$bytesBufferName,$bytesStrBuffer){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$this;
 $2=$name;
 $3=$console;
 $4=$bytesBufferName;
 $5=$bytesStrBuffer;
 var $6=$1;
 STACKTOP=sp;return 1; //@line 60 "con-logger.cpp"
}


function __ZN14conLoggerClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 73 "con-logger.cpp"
}


function __ZN14conLoggerClass7logLineEPcbbbz($this,$text,$file,$console,$noUnselError,varrp){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $paramList=sp;
 $1=$this;
 $2=$text;
 var $6=($file&1);
 $3=$6;
 var $7=($console&1);
 $4=$7;
 var $8=($noUnselError&1);
 $5=$8;
 var $9=$1;
 var $10=(($paramList)|0); //@line 169 "con-logger.cpp"
 var $11=$10; //@line 169 "con-logger.cpp"
 HEAP32[(($11)>>2)]=varrp;HEAP32[((($11)+(4))>>2)]=0; //@line 169 "con-logger.cpp"
 var $12=$2; //@line 170 "con-logger.cpp"
 var $13=(($paramList)|0); //@line 170 "con-logger.cpp"
 var $14=_vprintf($12,$13); //@line 170 "con-logger.cpp"
 var $15=_printf(6016,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 171 "con-logger.cpp"
 var $16=(($paramList)|0); //@line 172 "con-logger.cpp"
 var $17=$16; //@line 172 "con-logger.cpp"
 //@line 172 "con-logger.cpp"
 STACKTOP=sp;return 1; //@line 214 "con-logger.cpp"
}


function __ZN12consoleClass4initEiii($this,$width,$height,$maxLetters){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$this;
 $2=$width;
 $3=$height;
 $4=$maxLetters;
 var $5=$1;
 STACKTOP=sp;return 1; //@line 50 "console.cpp"
}


function __ZN12consoleClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 62 "console.cpp"
 var $4=__ZN15scrollTextClass3endEv($3); //@line 62 "console.cpp"
 STACKTOP=sp;return $4; //@line 62 "console.cpp"
}


function __ZN14ddSurfaceClass7bltFromERS_iibb($this,$srf,$xD,$yD,$clip,$transparent){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 $1=$this;
 $2=$srf;
 $3=$xD;
 $4=$yD;
 var $7=($clip&1);
 $5=$7;
 var $8=($transparent&1);
 $6=$8;
 var $9=$1;
 var $10=$9; //@line 47 "ddwrap.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 47 "ddwrap.cpp"
 var $12=(($11+12)|0); //@line 47 "ddwrap.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 47 "ddwrap.cpp"
 var $14=$2; //@line 47 "ddwrap.cpp"
 var $15=$3; //@line 47 "ddwrap.cpp"
 var $16=$4; //@line 47 "ddwrap.cpp"
 var $17=$2; //@line 47 "ddwrap.cpp"
 var $18=(($17+4)|0); //@line 47 "ddwrap.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 47 "ddwrap.cpp"
 var $20=$2; //@line 47 "ddwrap.cpp"
 var $21=(($20+8)|0); //@line 47 "ddwrap.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 47 "ddwrap.cpp"
 var $23=$5; //@line 47 "ddwrap.cpp"
 var $24=(($23)&1); //@line 47 "ddwrap.cpp"
 var $25=$6; //@line 47 "ddwrap.cpp"
 var $26=(($25)&1); //@line 47 "ddwrap.cpp"
 var $27=FUNCTION_TABLE[$13]($9,$14,$15,$16,0,0,$19,$22,$24,$26); //@line 47 "ddwrap.cpp"
 STACKTOP=sp;return $27; //@line 47 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass7bltFromERS_iiiiiibb($this,$srf,$xD,$yD,$xS,$yS,$wS,$hS,$clip,$transparent){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 $1=$this;
 $2=$srf;
 $3=$xD;
 $4=$yD;
 $5=$xS;
 $6=$yS;
 $7=$wS;
 $8=$hS;
 var $11=($clip&1);
 $9=$11;
 var $12=($transparent&1);
 $10=$12;
 var $13=$1;
 var $14=$13; //@line 64 "ddwrap.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 64 "ddwrap.cpp"
 var $16=(($15+16)|0); //@line 64 "ddwrap.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 64 "ddwrap.cpp"
 var $18=$2; //@line 64 "ddwrap.cpp"
 var $19=$3; //@line 64 "ddwrap.cpp"
 var $20=$4; //@line 64 "ddwrap.cpp"
 var $21=$5; //@line 64 "ddwrap.cpp"
 var $22=$6; //@line 64 "ddwrap.cpp"
 var $23=$7; //@line 64 "ddwrap.cpp"
 var $24=$8; //@line 64 "ddwrap.cpp"
 var $25=(($13+4)|0); //@line 64 "ddwrap.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 64 "ddwrap.cpp"
 var $27=(($13+8)|0); //@line 64 "ddwrap.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 64 "ddwrap.cpp"
 var $29=$9; //@line 64 "ddwrap.cpp"
 var $30=(($29)&1); //@line 64 "ddwrap.cpp"
 var $31=$10; //@line 64 "ddwrap.cpp"
 var $32=(($31)&1); //@line 64 "ddwrap.cpp"
 var $33=FUNCTION_TABLE[$17]($13,$18,$19,$20,$21,$22,$23,$24,0,0,$26,$28,$30,$32); //@line 64 "ddwrap.cpp"
 STACKTOP=sp;return $33; //@line 64 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass7bltFromERS_iiiiiiiiiibb($this,$srf,$xD,$yD,$xS,$yS,$wS,$hS,$xClip,$yClip,$wClip,$hClip,$clip,$transparent){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $14;
 var $15;
 var $rectS=sp;
 var $rectD=(sp)+(16);
 var $rectS2=(sp)+(32);
 var $rectD2=(sp)+(48);
 $2=$this;
 $3=$srf;
 $4=$xD;
 $5=$yD;
 $6=$xS;
 $7=$yS;
 $8=$wS;
 $9=$hS;
 $10=$xClip;
 $11=$yClip;
 $12=$wClip;
 $13=$hClip;
 var $16=($clip&1);
 $14=$16;
 var $17=($transparent&1);
 $15=$17;
 var $18=$2;
 var $19=$18; //@line 87 "ddwrap.cpp"
 var $20=HEAP32[(($19)>>2)]; //@line 87 "ddwrap.cpp"
 var $21=(($20+104)|0); //@line 87 "ddwrap.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 87 "ddwrap.cpp"
 var $23=FUNCTION_TABLE[$22]($18); //@line 87 "ddwrap.cpp"
 if($23){label=2;break;}else{label=3;break;} //@line 87 "ddwrap.cpp"
 case 2: 
 var $25=$3; //@line 87 "ddwrap.cpp"
 var $26=$25; //@line 87 "ddwrap.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 87 "ddwrap.cpp"
 var $28=(($27+104)|0); //@line 87 "ddwrap.cpp"
 var $29=HEAP32[(($28)>>2)]; //@line 87 "ddwrap.cpp"
 var $30=FUNCTION_TABLE[$29]($25); //@line 87 "ddwrap.cpp"
 if($30){label=4;break;}else{label=3;break;} //@line 87 "ddwrap.cpp"
 case 3: 
 $1=0; //@line 87 "ddwrap.cpp"
 label=22;break; //@line 87 "ddwrap.cpp"
 case 4: 
 var $33=$6; //@line 89 "ddwrap.cpp"
 var $34=(($rectS)|0); //@line 89 "ddwrap.cpp"
 HEAP32[(($34)>>2)]=$33; //@line 89 "ddwrap.cpp"
 var $35=$7; //@line 90 "ddwrap.cpp"
 var $36=(($rectS+4)|0); //@line 90 "ddwrap.cpp"
 HEAP32[(($36)>>2)]=$35; //@line 90 "ddwrap.cpp"
 var $37=$6; //@line 91 "ddwrap.cpp"
 var $38=$8; //@line 91 "ddwrap.cpp"
 var $39=((($37)+($38))|0); //@line 91 "ddwrap.cpp"
 var $40=(($rectS+8)|0); //@line 91 "ddwrap.cpp"
 HEAP32[(($40)>>2)]=$39; //@line 91 "ddwrap.cpp"
 var $41=$7; //@line 92 "ddwrap.cpp"
 var $42=$9; //@line 92 "ddwrap.cpp"
 var $43=((($41)+($42))|0); //@line 92 "ddwrap.cpp"
 var $44=(($rectS+12)|0); //@line 92 "ddwrap.cpp"
 HEAP32[(($44)>>2)]=$43; //@line 92 "ddwrap.cpp"
 var $45=$14; //@line 94 "ddwrap.cpp"
 var $46=(($45)&1); //@line 94 "ddwrap.cpp"
 if($46){label=5;break;}else{label=19;break;} //@line 94 "ddwrap.cpp"
 case 5: 
 var $48=$4; //@line 96 "ddwrap.cpp"
 var $49=$8; //@line 96 "ddwrap.cpp"
 var $50=((($48)+($49))|0); //@line 96 "ddwrap.cpp"
 var $51=$10; //@line 96 "ddwrap.cpp"
 var $52=($50|0)<=($51|0); //@line 96 "ddwrap.cpp"
 if($52){label=9;break;}else{label=6;break;} //@line 96 "ddwrap.cpp"
 case 6: 
 var $54=$5; //@line 96 "ddwrap.cpp"
 var $55=$9; //@line 96 "ddwrap.cpp"
 var $56=((($54)+($55))|0); //@line 96 "ddwrap.cpp"
 var $57=$11; //@line 96 "ddwrap.cpp"
 var $58=($56|0)<=($57|0); //@line 96 "ddwrap.cpp"
 if($58){label=9;break;}else{label=7;break;} //@line 96 "ddwrap.cpp"
 case 7: 
 var $60=$4; //@line 96 "ddwrap.cpp"
 var $61=$10; //@line 96 "ddwrap.cpp"
 var $62=$12; //@line 96 "ddwrap.cpp"
 var $63=((($61)+($62))|0); //@line 96 "ddwrap.cpp"
 var $64=($60|0)>=($63|0); //@line 96 "ddwrap.cpp"
 if($64){label=9;break;}else{label=8;break;} //@line 96 "ddwrap.cpp"
 case 8: 
 var $66=$5; //@line 96 "ddwrap.cpp"
 var $67=$11; //@line 96 "ddwrap.cpp"
 var $68=$13; //@line 96 "ddwrap.cpp"
 var $69=((($67)+($68))|0); //@line 96 "ddwrap.cpp"
 var $70=($66|0)>=($69|0); //@line 96 "ddwrap.cpp"
 if($70){label=9;break;}else{label=10;break;} //@line 96 "ddwrap.cpp"
 case 9: 
 $1=1; //@line 98 "ddwrap.cpp"
 label=22;break; //@line 98 "ddwrap.cpp"
 case 10: 
 var $73=$4; //@line 101 "ddwrap.cpp"
 var $74=$10; //@line 101 "ddwrap.cpp"
 var $75=($73|0)<($74|0); //@line 101 "ddwrap.cpp"
 if($75){label=11;break;}else{label=12;break;} //@line 101 "ddwrap.cpp"
 case 11: 
 var $77=(($rectS)|0); //@line 103 "ddwrap.cpp"
 var $78=HEAP32[(($77)>>2)]; //@line 103 "ddwrap.cpp"
 var $79=$4; //@line 103 "ddwrap.cpp"
 var $80=((($78)-($79))|0); //@line 103 "ddwrap.cpp"
 var $81=$10; //@line 103 "ddwrap.cpp"
 var $82=((($80)+($81))|0); //@line 103 "ddwrap.cpp"
 var $83=(($rectS)|0); //@line 103 "ddwrap.cpp"
 HEAP32[(($83)>>2)]=$82; //@line 103 "ddwrap.cpp"
 var $84=$10; //@line 104 "ddwrap.cpp"
 $4=$84; //@line 104 "ddwrap.cpp"
 label=12;break; //@line 105 "ddwrap.cpp"
 case 12: 
 var $86=$5; //@line 107 "ddwrap.cpp"
 var $87=$11; //@line 107 "ddwrap.cpp"
 var $88=($86|0)<($87|0); //@line 107 "ddwrap.cpp"
 if($88){label=13;break;}else{label=14;break;} //@line 107 "ddwrap.cpp"
 case 13: 
 var $90=(($rectS+4)|0); //@line 109 "ddwrap.cpp"
 var $91=HEAP32[(($90)>>2)]; //@line 109 "ddwrap.cpp"
 var $92=$5; //@line 109 "ddwrap.cpp"
 var $93=((($91)-($92))|0); //@line 109 "ddwrap.cpp"
 var $94=$11; //@line 109 "ddwrap.cpp"
 var $95=((($93)+($94))|0); //@line 109 "ddwrap.cpp"
 var $96=(($rectS+4)|0); //@line 109 "ddwrap.cpp"
 HEAP32[(($96)>>2)]=$95; //@line 109 "ddwrap.cpp"
 var $97=$11; //@line 110 "ddwrap.cpp"
 $5=$97; //@line 110 "ddwrap.cpp"
 label=14;break; //@line 111 "ddwrap.cpp"
 case 14: 
 var $99=$4; //@line 113 "ddwrap.cpp"
 var $100=$8; //@line 113 "ddwrap.cpp"
 var $101=((($99)+($100))|0); //@line 113 "ddwrap.cpp"
 var $102=$10; //@line 113 "ddwrap.cpp"
 var $103=$12; //@line 113 "ddwrap.cpp"
 var $104=((($102)+($103))|0); //@line 113 "ddwrap.cpp"
 var $105=($101|0)>($104|0); //@line 113 "ddwrap.cpp"
 if($105){label=15;break;}else{label=16;break;} //@line 113 "ddwrap.cpp"
 case 15: 
 var $107=(($rectS)|0); //@line 115 "ddwrap.cpp"
 var $108=HEAP32[(($107)>>2)]; //@line 115 "ddwrap.cpp"
 var $109=$10; //@line 115 "ddwrap.cpp"
 var $110=((($108)+($109))|0); //@line 115 "ddwrap.cpp"
 var $111=$12; //@line 115 "ddwrap.cpp"
 var $112=((($110)+($111))|0); //@line 115 "ddwrap.cpp"
 var $113=$4; //@line 115 "ddwrap.cpp"
 var $114=((($112)-($113))|0); //@line 115 "ddwrap.cpp"
 var $115=(($rectS+8)|0); //@line 115 "ddwrap.cpp"
 HEAP32[(($115)>>2)]=$114; //@line 115 "ddwrap.cpp"
 label=16;break; //@line 116 "ddwrap.cpp"
 case 16: 
 var $117=$5; //@line 118 "ddwrap.cpp"
 var $118=$9; //@line 118 "ddwrap.cpp"
 var $119=((($117)+($118))|0); //@line 118 "ddwrap.cpp"
 var $120=$11; //@line 118 "ddwrap.cpp"
 var $121=$13; //@line 118 "ddwrap.cpp"
 var $122=((($120)+($121))|0); //@line 118 "ddwrap.cpp"
 var $123=($119|0)>($122|0); //@line 118 "ddwrap.cpp"
 if($123){label=17;break;}else{label=18;break;} //@line 118 "ddwrap.cpp"
 case 17: 
 var $125=(($rectS+4)|0); //@line 120 "ddwrap.cpp"
 var $126=HEAP32[(($125)>>2)]; //@line 120 "ddwrap.cpp"
 var $127=$11; //@line 120 "ddwrap.cpp"
 var $128=((($126)+($127))|0); //@line 120 "ddwrap.cpp"
 var $129=$13; //@line 120 "ddwrap.cpp"
 var $130=((($128)+($129))|0); //@line 120 "ddwrap.cpp"
 var $131=$5; //@line 120 "ddwrap.cpp"
 var $132=((($130)-($131))|0); //@line 120 "ddwrap.cpp"
 var $133=(($rectS+12)|0); //@line 120 "ddwrap.cpp"
 HEAP32[(($133)>>2)]=$132; //@line 120 "ddwrap.cpp"
 label=18;break; //@line 121 "ddwrap.cpp"
 case 18: 
 label=19;break; //@line 122 "ddwrap.cpp"
 case 19: 
 var $136=$4; //@line 136 "ddwrap.cpp"
 var $137=(($rectD)|0); //@line 136 "ddwrap.cpp"
 HEAP32[(($137)>>2)]=$136; //@line 136 "ddwrap.cpp"
 var $138=$5; //@line 137 "ddwrap.cpp"
 var $139=(($rectD+4)|0); //@line 137 "ddwrap.cpp"
 HEAP32[(($139)>>2)]=$138; //@line 137 "ddwrap.cpp"
 var $140=(($rectD+4)|0); //@line 138 "ddwrap.cpp"
 var $141=HEAP32[(($140)>>2)]; //@line 138 "ddwrap.cpp"
 var $142=(($rectS+12)|0); //@line 138 "ddwrap.cpp"
 var $143=HEAP32[(($142)>>2)]; //@line 138 "ddwrap.cpp"
 var $144=((($141)+($143))|0); //@line 138 "ddwrap.cpp"
 var $145=(($rectS+4)|0); //@line 138 "ddwrap.cpp"
 var $146=HEAP32[(($145)>>2)]; //@line 138 "ddwrap.cpp"
 var $147=((($144)-($146))|0); //@line 138 "ddwrap.cpp"
 var $148=(($rectD+12)|0); //@line 138 "ddwrap.cpp"
 HEAP32[(($148)>>2)]=$147; //@line 138 "ddwrap.cpp"
 var $149=(($rectD)|0); //@line 139 "ddwrap.cpp"
 var $150=HEAP32[(($149)>>2)]; //@line 139 "ddwrap.cpp"
 var $151=(($rectS+8)|0); //@line 139 "ddwrap.cpp"
 var $152=HEAP32[(($151)>>2)]; //@line 139 "ddwrap.cpp"
 var $153=((($150)+($152))|0); //@line 139 "ddwrap.cpp"
 var $154=(($rectS)|0); //@line 139 "ddwrap.cpp"
 var $155=HEAP32[(($154)>>2)]; //@line 139 "ddwrap.cpp"
 var $156=((($153)-($155))|0); //@line 139 "ddwrap.cpp"
 var $157=(($rectD+8)|0); //@line 139 "ddwrap.cpp"
 HEAP32[(($157)>>2)]=$156; //@line 139 "ddwrap.cpp"
 var $158=(($rectS)|0); //@line 144 "ddwrap.cpp"
 var $159=HEAP32[(($158)>>2)]; //@line 144 "ddwrap.cpp"
 var $160=(($rectS2)|0); //@line 144 "ddwrap.cpp"
 HEAP32[(($160)>>2)]=$159; //@line 144 "ddwrap.cpp"
 var $161=(($rectS+4)|0); //@line 144 "ddwrap.cpp"
 var $162=HEAP32[(($161)>>2)]; //@line 144 "ddwrap.cpp"
 var $163=(($rectS2+4)|0); //@line 144 "ddwrap.cpp"
 HEAP32[(($163)>>2)]=$162; //@line 144 "ddwrap.cpp"
 var $164=(($rectS+8)|0); //@line 144 "ddwrap.cpp"
 var $165=HEAP32[(($164)>>2)]; //@line 144 "ddwrap.cpp"
 var $166=(($rectS)|0); //@line 144 "ddwrap.cpp"
 var $167=HEAP32[(($166)>>2)]; //@line 144 "ddwrap.cpp"
 var $168=((($165)-($167))|0); //@line 144 "ddwrap.cpp"
 var $169=(($rectS2+8)|0); //@line 144 "ddwrap.cpp"
 HEAP32[(($169)>>2)]=$168; //@line 144 "ddwrap.cpp"
 var $170=(($rectS+12)|0); //@line 144 "ddwrap.cpp"
 var $171=HEAP32[(($170)>>2)]; //@line 144 "ddwrap.cpp"
 var $172=(($rectS+4)|0); //@line 144 "ddwrap.cpp"
 var $173=HEAP32[(($172)>>2)]; //@line 144 "ddwrap.cpp"
 var $174=((($171)-($173))|0); //@line 144 "ddwrap.cpp"
 var $175=(($rectS2+12)|0); //@line 144 "ddwrap.cpp"
 HEAP32[(($175)>>2)]=$174; //@line 144 "ddwrap.cpp"
 var $176=(($rectD)|0); //@line 145 "ddwrap.cpp"
 var $177=HEAP32[(($176)>>2)]; //@line 145 "ddwrap.cpp"
 var $178=(($rectD2)|0); //@line 145 "ddwrap.cpp"
 HEAP32[(($178)>>2)]=$177; //@line 145 "ddwrap.cpp"
 var $179=(($rectD+4)|0); //@line 145 "ddwrap.cpp"
 var $180=HEAP32[(($179)>>2)]; //@line 145 "ddwrap.cpp"
 var $181=(($rectD2+4)|0); //@line 145 "ddwrap.cpp"
 HEAP32[(($181)>>2)]=$180; //@line 145 "ddwrap.cpp"
 var $182=(($rectD+8)|0); //@line 145 "ddwrap.cpp"
 var $183=HEAP32[(($182)>>2)]; //@line 145 "ddwrap.cpp"
 var $184=(($rectD)|0); //@line 145 "ddwrap.cpp"
 var $185=HEAP32[(($184)>>2)]; //@line 145 "ddwrap.cpp"
 var $186=((($183)-($185))|0); //@line 145 "ddwrap.cpp"
 var $187=(($rectD2+8)|0); //@line 145 "ddwrap.cpp"
 HEAP32[(($187)>>2)]=$186; //@line 145 "ddwrap.cpp"
 var $188=(($rectD+12)|0); //@line 145 "ddwrap.cpp"
 var $189=HEAP32[(($188)>>2)]; //@line 145 "ddwrap.cpp"
 var $190=(($rectD+4)|0); //@line 145 "ddwrap.cpp"
 var $191=HEAP32[(($190)>>2)]; //@line 145 "ddwrap.cpp"
 var $192=((($189)-($191))|0); //@line 145 "ddwrap.cpp"
 var $193=(($rectD2+12)|0); //@line 145 "ddwrap.cpp"
 HEAP32[(($193)>>2)]=$192; //@line 145 "ddwrap.cpp"
 var $194=$3; //@line 147 "ddwrap.cpp"
 var $195=(($194+32)|0); //@line 147 "ddwrap.cpp"
 var $196=HEAP32[(($195)>>2)]; //@line 147 "ddwrap.cpp"
 var $197=(($18+32)|0); //@line 147 "ddwrap.cpp"
 var $198=HEAP32[(($197)>>2)]; //@line 147 "ddwrap.cpp"
 var $199=_SDL_UpperBlit($196,$rectS2,$198,$rectD2); //@line 147 "ddwrap.cpp"
 var $200=($199|0)!=0; //@line 147 "ddwrap.cpp"
 if($200){label=20;break;}else{label=21;break;} //@line 147 "ddwrap.cpp"
 case 20: 
 $1=0; //@line 153 "ddwrap.cpp"
 label=22;break; //@line 153 "ddwrap.cpp"
 case 21: 
 $1=1; //@line 156 "ddwrap.cpp"
 label=22;break; //@line 156 "ddwrap.cpp"
 case 22: 
 var $204=$1; //@line 157 "ddwrap.cpp"
 STACKTOP=sp;return $204; //@line 157 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14ddSurfaceClass14stretchBltFromERS_iiiiiiiibbb($this,$srf,$xD,$yD,$wD,$hD,$xS,$yS,$wS,$hS,$mirrorX,$mirrorY,$transparent){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $rectS=sp;
 var $rectD=(sp)+(16);
 $1=$this;
 $2=$srf;
 $3=$xD;
 $4=$yD;
 $5=$wD;
 $6=$hD;
 $7=$xS;
 $8=$yS;
 $9=$wS;
 $10=$hS;
 var $14=($mirrorX&1);
 $11=$14;
 var $15=($mirrorY&1);
 $12=$15;
 var $16=($transparent&1);
 $13=$16;
 var $17=$1;
 STACKTOP=sp;return 1; //@line 211 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass15obscuredBltFromERS_iiib($this,$srfSrc,$xD,$yD,$lightness,$transparent){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 $1=$this;
 $2=$srfSrc;
 $3=$xD;
 $4=$yD;
 $5=$lightness;
 var $7=($transparent&1);
 $6=$7;
 var $8=$1;
 var $9=$8; //@line 230 "ddwrap.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 230 "ddwrap.cpp"
 var $11=(($10+8)|0); //@line 230 "ddwrap.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 230 "ddwrap.cpp"
 var $13=$2; //@line 230 "ddwrap.cpp"
 var $14=$3; //@line 230 "ddwrap.cpp"
 var $15=$4; //@line 230 "ddwrap.cpp"
 var $16=$6; //@line 230 "ddwrap.cpp"
 var $17=(($16)&1); //@line 230 "ddwrap.cpp"
 var $18=FUNCTION_TABLE[$12]($8,$13,$14,$15,1,$17); //@line 230 "ddwrap.cpp"
 STACKTOP=sp;return $18; //@line 230 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass12alphaBltFromERS_iiib($this,$srfSrc,$xD,$yD,$alphaValue,$transparent){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 $1=$this;
 $2=$srfSrc;
 $3=$xD;
 $4=$yD;
 $5=$alphaValue;
 var $7=($transparent&1);
 $6=$7;
 var $8=$1;
 STACKTOP=sp;return 1; //@line 603 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass8putPixelEiiiii($this,$x,$y,$r,$g,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 $1=$this;
 $2=$x;
 $3=$y;
 $4=$r;
 $5=$g;
 $6=$b;
 var $7=$1;
 STACKTOP=sp;return 1; //@line 628 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass8drawLineEiiiiiii($this,$x,$y,$x2,$y2,$r,$g,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 $1=$this;
 $2=$x;
 $3=$y;
 $4=$x2;
 $5=$y2;
 $6=$r;
 $7=$g;
 $8=$b;
 var $9=$1;
 STACKTOP=sp;return 1; //@line 691 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass8fillRectEiiiiiii($this,$r,$g,$b,$x,$y,$width,$height){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 $1=$this;
 $2=$r;
 $3=$g;
 $4=$b;
 $5=$x;
 $6=$y;
 $7=$width;
 $8=$height;
 var $9=$1;
 STACKTOP=sp;return 1; //@line 744 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass12fillAllDwordEm($this,$color){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$color;
 var $3=$1;
 STACKTOP=sp;return 1; //@line 771 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass9writeTextEPciii9alignEnumiiii($this,$text,$r,$g,$b,$align,$x,$y,$width,$height){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 $1=$this;
 $2=$text;
 $3=$r;
 $4=$g;
 $5=$b;
 $6=$align;
 $7=$x;
 $8=$y;
 $9=$width;
 $10=$height;
 var $11=$1;
 STACKTOP=sp;return 1; //@line 851 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass13calculateTextEPc9alignEnumRiS2_($this,$text,$align,$width,$height){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$this;
 $2=$text;
 $3=$align;
 $4=$width;
 $5=$height;
 var $6=$1;
 STACKTOP=sp;return 1; //@line 936 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass13saveAsBmpFileEPcb($this,$filename,$overwrite){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$this;
 $2=$filename;
 var $4=($overwrite&1);
 $3=$4;
 var $5=$1;
 STACKTOP=sp;return 1; //@line 1196 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass4lockEbbPmPPv($this,$onlyRead,$onlyWrite,$pitch,$pointer){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$this;
 var $6=($onlyRead&1);
 $2=$6;
 var $7=($onlyWrite&1);
 $3=$7;
 $4=$pitch;
 $5=$pointer;
 var $8=$1;
 STACKTOP=sp;return 1; //@line 1263 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass6unlockEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 1278 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass17getDwordFromPixelEiiRm($this,$x,$y,$color){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$this;
 $2=$x;
 $3=$y;
 $4=$color;
 var $5=$1;
 STACKTOP=sp;return 1; //@line 1312 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass15getDwordFromRGBEiiiRm($this,$r,$g,$b,$color){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$this;
 $2=$r;
 $3=$g;
 $4=$b;
 $5=$color;
 var $6=$1;
 STACKTOP=sp;return 1; //@line 1348 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass6isLostEPb($this,$errorCode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$errorCode;
 var $3=$1;
 STACKTOP=sp;return 0; //@line 1417 "ddwrap.cpp"
}


function __ZN14ddSurfaceClass7restoreEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 1428 "ddwrap.cpp"
}


function __ZN15directDrawClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=HEAP8[(20480)]; //@line 1436 "ddwrap.cpp"
 var $5=(($4)&1); //@line 1436 "ddwrap.cpp"
 if($5){label=2;break;}else{label=3;break;} //@line 1436 "ddwrap.cpp"
 case 2: 
 $1=0; //@line 1436 "ddwrap.cpp"
 label=4;break; //@line 1436 "ddwrap.cpp"
 case 3: 
 HEAP8[(20480)]=1; //@line 1439 "ddwrap.cpp"
 var $8=(($3+36)|0); //@line 1442 "ddwrap.cpp"
 HEAP8[($8)]=1; //@line 1442 "ddwrap.cpp"
 var $9=(($3+37)|0); //@line 1443 "ddwrap.cpp"
 HEAP8[($9)]=0; //@line 1443 "ddwrap.cpp"
 $1=1; //@line 1445 "ddwrap.cpp"
 label=4;break; //@line 1445 "ddwrap.cpp"
 case 4: 
 var $11=$1; //@line 1446 "ddwrap.cpp"
 STACKTOP=sp;return $11; //@line 1446 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+36)|0); //@line 1450 "ddwrap.cpp"
 var $5=HEAP8[($4)]; //@line 1450 "ddwrap.cpp"
 var $6=(($5)&1); //@line 1450 "ddwrap.cpp"
 var $7=($6&1); //@line 1450 "ddwrap.cpp"
 var $8=($7|0)==0; //@line 1450 "ddwrap.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 1450 "ddwrap.cpp"
 case 2: 
 $1=0; //@line 1450 "ddwrap.cpp"
 label=8;break; //@line 1450 "ddwrap.cpp"
 case 3: 
 var $11=(($3+37)|0); //@line 1453 "ddwrap.cpp"
 var $12=HEAP8[($11)]; //@line 1453 "ddwrap.cpp"
 var $13=(($12)&1); //@line 1453 "ddwrap.cpp"
 if($13){label=4;break;}else{label=7;break;} //@line 1453 "ddwrap.cpp"
 case 4: 
 var $15=__ZN15directDrawClass14closeVideoModeEv($3); //@line 1454 "ddwrap.cpp"
 if($15){label=6;break;}else{label=5;break;} //@line 1454 "ddwrap.cpp"
 case 5: 
 $1=0; //@line 1454 "ddwrap.cpp"
 label=8;break; //@line 1454 "ddwrap.cpp"
 case 6: 
 label=7;break; //@line 1455 "ddwrap.cpp"
 case 7: 
 HEAP32[((20504)>>2)]=0; //@line 1458 "ddwrap.cpp"
 var $19=$3; //@line 1459 "ddwrap.cpp"
 var $20=(($19+32)|0); //@line 1459 "ddwrap.cpp"
 HEAP32[(($20)>>2)]=0; //@line 1459 "ddwrap.cpp"
 HEAP8[(20480)]=0; //@line 1462 "ddwrap.cpp"
 var $21=(($3+36)|0); //@line 1465 "ddwrap.cpp"
 HEAP8[($21)]=0; //@line 1465 "ddwrap.cpp"
 var $22=(($3+37)|0); //@line 1466 "ddwrap.cpp"
 HEAP8[($22)]=0; //@line 1466 "ddwrap.cpp"
 $1=1; //@line 1468 "ddwrap.cpp"
 label=8;break; //@line 1468 "ddwrap.cpp"
 case 8: 
 var $24=$1; //@line 1469 "ddwrap.cpp"
 STACKTOP=sp;return $24; //@line 1469 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass14closeVideoModeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+37)|0); //@line 1473 "ddwrap.cpp"
 var $5=HEAP8[($4)]; //@line 1473 "ddwrap.cpp"
 var $6=(($5)&1); //@line 1473 "ddwrap.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 1473 "ddwrap.cpp"
 case 2: 
 $1=0; //@line 1473 "ddwrap.cpp"
 label=4;break; //@line 1473 "ddwrap.cpp"
 case 3: 
 var $9=(($3+37)|0); //@line 1479 "ddwrap.cpp"
 HEAP8[($9)]=0; //@line 1479 "ddwrap.cpp"
 $1=1; //@line 1481 "ddwrap.cpp"
 label=4;break; //@line 1481 "ddwrap.cpp"
 case 4: 
 var $11=$1; //@line 1482 "ddwrap.cpp"
 STACKTOP=sp;return $11; //@line 1482 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass12setVideoModeEiiii($this,$x,$y,$bpp,$backbuffers){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 $2=$this;
 $3=$x;
 $4=$y;
 $5=$bpp;
 $6=$backbuffers;
 var $7=$2;
 var $8=(($7+36)|0); //@line 1486 "ddwrap.cpp"
 var $9=HEAP8[($8)]; //@line 1486 "ddwrap.cpp"
 var $10=(($9)&1); //@line 1486 "ddwrap.cpp"
 if($10){label=3;break;}else{label=2;break;} //@line 1486 "ddwrap.cpp"
 case 2: 
 $1=0; //@line 1486 "ddwrap.cpp"
 label=6;break; //@line 1486 "ddwrap.cpp"
 case 3: 
 var $13=$6; //@line 1488 "ddwrap.cpp"
 var $14=($13|0)<1; //@line 1488 "ddwrap.cpp"
 if($14){label=4;break;}else{label=5;break;} //@line 1488 "ddwrap.cpp"
 case 4: 
 $1=0; //@line 1488 "ddwrap.cpp"
 label=6;break; //@line 1488 "ddwrap.cpp"
 case 5: 
 var $17=$3; //@line 1490 "ddwrap.cpp"
 var $18=$4; //@line 1490 "ddwrap.cpp"
 var $19=$5; //@line 1490 "ddwrap.cpp"
 var $20=_SDL_SetVideoMode($17,$18,$19,1048576); //@line 1490 "ddwrap.cpp"
 HEAP32[((20504)>>2)]=$20; //@line 1490 "ddwrap.cpp"
 var $21=HEAP32[((20504)>>2)]; //@line 1491 "ddwrap.cpp"
 var $22=$7; //@line 1491 "ddwrap.cpp"
 var $23=(($22+32)|0); //@line 1491 "ddwrap.cpp"
 HEAP32[(($23)>>2)]=$21; //@line 1491 "ddwrap.cpp"
 var $24=$3; //@line 1493 "ddwrap.cpp"
 var $25=$7; //@line 1493 "ddwrap.cpp"
 var $26=(($25+4)|0); //@line 1493 "ddwrap.cpp"
 HEAP32[(($26)>>2)]=$24; //@line 1493 "ddwrap.cpp"
 var $27=$4; //@line 1493 "ddwrap.cpp"
 var $28=$7; //@line 1493 "ddwrap.cpp"
 var $29=(($28+8)|0); //@line 1493 "ddwrap.cpp"
 HEAP32[(($29)>>2)]=$27; //@line 1493 "ddwrap.cpp"
 var $30=$5; //@line 1493 "ddwrap.cpp"
 HEAP32[((20496)>>2)]=$30; //@line 1493 "ddwrap.cpp"
 var $31=(($7+37)|0); //@line 1495 "ddwrap.cpp"
 HEAP8[($31)]=1; //@line 1495 "ddwrap.cpp"
 $1=1; //@line 1505 "ddwrap.cpp"
 label=6;break; //@line 1505 "ddwrap.cpp"
 case 6: 
 var $33=$1; //@line 1506 "ddwrap.cpp"
 STACKTOP=sp;return $33; //@line 1506 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass4flipEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=HEAP32[((20504)>>2)]; //@line 1684 "ddwrap.cpp"
 _SDL_UpdateRect($3,0,0,0,0); //@line 1684 "ddwrap.cpp"
 STACKTOP=sp;return 1; //@line 1686 "ddwrap.cpp"
}


function __ZN15directDrawClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+36)|0); //@line 1692 "ddwrap.cpp"
 var $4=HEAP8[($3)]; //@line 1692 "ddwrap.cpp"
 var $5=(($4)&1); //@line 1692 "ddwrap.cpp"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 1692 "ddwrap.cpp"
 case 2: 
 var $7=(($2+37)|0); //@line 1692 "ddwrap.cpp"
 var $8=HEAP8[($7)]; //@line 1692 "ddwrap.cpp"
 var $9=(($8)&1); //@line 1692 "ddwrap.cpp"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 1693 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass6isLostEPb($this,$errorCode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$errorCode;
 var $3=$1;
 STACKTOP=sp;return 0; //@line 1707 "ddwrap.cpp"
}


function __ZN15directDrawClass7restoreEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 1718 "ddwrap.cpp"
}


function __ZN13ddSpriteClass6createEiib($this,$x,$y,$videoMemory){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$this;
 $3=$x;
 $4=$y;
 var $6=($videoMemory&1);
 $5=$6;
 var $7=$2;
 var $8=$3; //@line 1724 "ddwrap.cpp"
 var $9=$7; //@line 1724 "ddwrap.cpp"
 var $10=(($9+4)|0); //@line 1724 "ddwrap.cpp"
 HEAP32[(($10)>>2)]=$8; //@line 1724 "ddwrap.cpp"
 var $11=$4; //@line 1724 "ddwrap.cpp"
 var $12=$7; //@line 1724 "ddwrap.cpp"
 var $13=(($12+8)|0); //@line 1724 "ddwrap.cpp"
 HEAP32[(($13)>>2)]=$11; //@line 1724 "ddwrap.cpp"
 var $14=$5; //@line 1726 "ddwrap.cpp"
 var $15=(($14)&1); //@line 1726 "ddwrap.cpp"
 var $16=($15?134217729:0); //@line 1726 "ddwrap.cpp"
 var $17=$3; //@line 1726 "ddwrap.cpp"
 var $18=$4; //@line 1726 "ddwrap.cpp"
 var $19=HEAP32[((20496)>>2)]; //@line 1726 "ddwrap.cpp"
 var $20=_SDL_CreateRGBSurface($16,$17,$18,$19,0,0,0,0); //@line 1726 "ddwrap.cpp"
 var $21=$7; //@line 1726 "ddwrap.cpp"
 var $22=(($21+32)|0); //@line 1726 "ddwrap.cpp"
 HEAP32[(($22)>>2)]=$20; //@line 1726 "ddwrap.cpp"
 var $23=$7; //@line 1727 "ddwrap.cpp"
 var $24=(($23+32)|0); //@line 1727 "ddwrap.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 1727 "ddwrap.cpp"
 var $26=($25|0)==0; //@line 1727 "ddwrap.cpp"
 if($26){label=2;break;}else{label=3;break;} //@line 1727 "ddwrap.cpp"
 case 2: 
 $1=0; //@line 1727 "ddwrap.cpp"
 label=4;break; //@line 1727 "ddwrap.cpp"
 case 3: 
 var $29=$3; //@line 1729 "ddwrap.cpp"
 var $30=$7; //@line 1729 "ddwrap.cpp"
 var $31=(($30+4)|0); //@line 1729 "ddwrap.cpp"
 HEAP32[(($31)>>2)]=$29; //@line 1729 "ddwrap.cpp"
 var $32=$4; //@line 1730 "ddwrap.cpp"
 var $33=$7; //@line 1730 "ddwrap.cpp"
 var $34=(($33+8)|0); //@line 1730 "ddwrap.cpp"
 HEAP32[(($34)>>2)]=$32; //@line 1730 "ddwrap.cpp"
 var $35=$3; //@line 1731 "ddwrap.cpp"
 var $36=$7; //@line 1731 "ddwrap.cpp"
 var $37=(($36+12)|0); //@line 1731 "ddwrap.cpp"
 HEAP32[(($37)>>2)]=$35; //@line 1731 "ddwrap.cpp"
 var $38=$4; //@line 1732 "ddwrap.cpp"
 var $39=$7; //@line 1732 "ddwrap.cpp"
 var $40=(($39+16)|0); //@line 1732 "ddwrap.cpp"
 HEAP32[(($40)>>2)]=$38; //@line 1732 "ddwrap.cpp"
 var $41=$5; //@line 1733 "ddwrap.cpp"
 var $42=(($41)&1); //@line 1733 "ddwrap.cpp"
 var $43=$7; //@line 1733 "ddwrap.cpp"
 var $44=(($43+20)|0); //@line 1733 "ddwrap.cpp"
 var $45=($42&1); //@line 1733 "ddwrap.cpp"
 HEAP8[($44)]=$45; //@line 1733 "ddwrap.cpp"
 var $46=(($7+36)|0); //@line 1734 "ddwrap.cpp"
 HEAP8[($46)]=1; //@line 1734 "ddwrap.cpp"
 $1=1; //@line 1774 "ddwrap.cpp"
 label=4;break; //@line 1774 "ddwrap.cpp"
 case 4: 
 var $48=$1; //@line 1775 "ddwrap.cpp"
 STACKTOP=sp;return $48; //@line 1775 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13ddSpriteClass4freeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 1786 "ddwrap.cpp"
}


function __ZN13ddSpriteClass22createFromGeneralImageEPhb($this,$filename,$videoMemory){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$this;
 $3=$filename;
 var $5=($videoMemory&1);
 $4=$5;
 var $6=$2;
 var $7=HEAP8[(20480)]; //@line 2253 "ddwrap.cpp"
 var $8=(($7)&1); //@line 2253 "ddwrap.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 2253 "ddwrap.cpp"
 case 2: 
 var $10=(($6+36)|0); //@line 2253 "ddwrap.cpp"
 var $11=HEAP8[($10)]; //@line 2253 "ddwrap.cpp"
 var $12=(($11)&1); //@line 2253 "ddwrap.cpp"
 if($12){label=3;break;}else{label=4;break;} //@line 2253 "ddwrap.cpp"
 case 3: 
 $1=0; //@line 2253 "ddwrap.cpp"
 label=7;break; //@line 2253 "ddwrap.cpp"
 case 4: 
 var $15=$3; //@line 2255 "ddwrap.cpp"
 var $16=_IMG_Load($15); //@line 2255 "ddwrap.cpp"
 var $17=$6; //@line 2255 "ddwrap.cpp"
 var $18=(($17+32)|0); //@line 2255 "ddwrap.cpp"
 HEAP32[(($18)>>2)]=$16; //@line 2255 "ddwrap.cpp"
 var $19=$6; //@line 2256 "ddwrap.cpp"
 var $20=(($19+32)|0); //@line 2256 "ddwrap.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 2256 "ddwrap.cpp"
 var $22=($21|0)!=0; //@line 2256 "ddwrap.cpp"
 if($22){label=6;break;}else{label=5;break;} //@line 2256 "ddwrap.cpp"
 case 5: 
 $1=0; //@line 2256 "ddwrap.cpp"
 label=7;break; //@line 2256 "ddwrap.cpp"
 case 6: 
 var $25=$6; //@line 2258 "ddwrap.cpp"
 var $26=(($25+32)|0); //@line 2258 "ddwrap.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 2258 "ddwrap.cpp"
 var $28=(($27+8)|0); //@line 2258 "ddwrap.cpp"
 var $29=HEAP32[(($28)>>2)]; //@line 2258 "ddwrap.cpp"
 var $30=$6; //@line 2258 "ddwrap.cpp"
 var $31=(($30+4)|0); //@line 2258 "ddwrap.cpp"
 HEAP32[(($31)>>2)]=$29; //@line 2258 "ddwrap.cpp"
 var $32=$6; //@line 2259 "ddwrap.cpp"
 var $33=(($32+32)|0); //@line 2259 "ddwrap.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 2259 "ddwrap.cpp"
 var $35=(($34+12)|0); //@line 2259 "ddwrap.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 2259 "ddwrap.cpp"
 var $37=$6; //@line 2259 "ddwrap.cpp"
 var $38=(($37+8)|0); //@line 2259 "ddwrap.cpp"
 HEAP32[(($38)>>2)]=$36; //@line 2259 "ddwrap.cpp"
 var $39=$6; //@line 2260 "ddwrap.cpp"
 var $40=(($39+4)|0); //@line 2260 "ddwrap.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 2260 "ddwrap.cpp"
 var $42=$6; //@line 2260 "ddwrap.cpp"
 var $43=(($42+12)|0); //@line 2260 "ddwrap.cpp"
 HEAP32[(($43)>>2)]=$41; //@line 2260 "ddwrap.cpp"
 var $44=$6; //@line 2261 "ddwrap.cpp"
 var $45=(($44+8)|0); //@line 2261 "ddwrap.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 2261 "ddwrap.cpp"
 var $47=$6; //@line 2261 "ddwrap.cpp"
 var $48=(($47+16)|0); //@line 2261 "ddwrap.cpp"
 HEAP32[(($48)>>2)]=$46; //@line 2261 "ddwrap.cpp"
 var $49=$4; //@line 2262 "ddwrap.cpp"
 var $50=(($49)&1); //@line 2262 "ddwrap.cpp"
 var $51=$6; //@line 2262 "ddwrap.cpp"
 var $52=(($51+20)|0); //@line 2262 "ddwrap.cpp"
 var $53=($50&1); //@line 2262 "ddwrap.cpp"
 HEAP8[($52)]=$53; //@line 2262 "ddwrap.cpp"
 var $54=(($6+36)|0); //@line 2263 "ddwrap.cpp"
 HEAP8[($54)]=1; //@line 2263 "ddwrap.cpp"
 $1=1; //@line 2265 "ddwrap.cpp"
 label=7;break; //@line 2265 "ddwrap.cpp"
 case 7: 
 var $56=$1; //@line 2266 "ddwrap.cpp"
 STACKTOP=sp;return $56; //@line 2266 "ddwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14ddSurfaceClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN14ddSurfaceClassD2Ev($2); //@line 128 "./ddwrap.h"
 STACKTOP=sp;return; //@line 128 "./ddwrap.h"
}


function __ZN14ddSurfaceClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN14ddSurfaceClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 128 "./ddwrap.h"
 case 2: 
 var $6=$4; //@line 128 "./ddwrap.h"
 __ZdlPv($6); //@line 128 "./ddwrap.h"
 STACKTOP=sp;return; //@line 128 "./ddwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 128 "./ddwrap.h"
 var $10=$8$1;
 $3=$10; //@line 128 "./ddwrap.h"
 var $11=$4; //@line 128 "./ddwrap.h"
 __ZdlPv($11); //@line 128 "./ddwrap.h"
 label=4;break; //@line 128 "./ddwrap.h"
 case 4: 
 var $13=$2; //@line 128 "./ddwrap.h"
 var $14=$3; //@line 128 "./ddwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 128 "./ddwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14ddSurfaceClass15isInVideoMemoryEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+20)|0); //@line 167 "./ddwrap.h"
 var $4=HEAP8[($3)]; //@line 167 "./ddwrap.h"
 var $5=(($4)&1); //@line 167 "./ddwrap.h"
 STACKTOP=sp;return $5; //@line 167 "./ddwrap.h"
}


function __ZN14ddSurfaceClass8getWidthEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 168 "./ddwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 168 "./ddwrap.h"
 STACKTOP=sp;return $4; //@line 168 "./ddwrap.h"
}


function __ZN14ddSurfaceClass9getHeightEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 169 "./ddwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 169 "./ddwrap.h"
 STACKTOP=sp;return $4; //@line 169 "./ddwrap.h"
}


function __ZN14ddSurfaceClass12getRealWidthEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+12)|0); //@line 170 "./ddwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 170 "./ddwrap.h"
 STACKTOP=sp;return $4; //@line 170 "./ddwrap.h"
}


function __ZN14ddSurfaceClass13getRealHeightEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+16)|0); //@line 171 "./ddwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 171 "./ddwrap.h"
 STACKTOP=sp;return $4; //@line 171 "./ddwrap.h"
}


function __ZN14ddSurfaceClass11getDDObjectEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=HEAP32[((20488)>>2)]; //@line 178 "./ddwrap.h"
 STACKTOP=sp;return $3; //@line 178 "./ddwrap.h"
}


function __ZN15directDrawClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15directDrawClassD2Ev($2); //@line 223 "./ddwrap.h"
 STACKTOP=sp;return; //@line 223 "./ddwrap.h"
}


function __ZN15directDrawClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN15directDrawClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 223 "./ddwrap.h"
 case 2: 
 var $6=$4; //@line 223 "./ddwrap.h"
 __ZdlPv($6); //@line 223 "./ddwrap.h"
 STACKTOP=sp;return; //@line 223 "./ddwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 223 "./ddwrap.h"
 var $10=$8$1;
 $3=$10; //@line 223 "./ddwrap.h"
 var $11=$4; //@line 223 "./ddwrap.h"
 __ZdlPv($11); //@line 223 "./ddwrap.h"
 label=4;break; //@line 223 "./ddwrap.h"
 case 4: 
 var $13=$2; //@line 223 "./ddwrap.h"
 var $14=$3; //@line 223 "./ddwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 223 "./ddwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 223 "./ddwrap.h"
 HEAP32[(($5)>>2)]=16952; //@line 223 "./ddwrap.h"
 var $6=(function() { try { __THREW__ = 0; return __ZN15directDrawClass3endEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 223 "./ddwrap.h"
 case 2: 
 var $8=$4; //@line 223 "./ddwrap.h"
 __ZN14ddSurfaceClassD2Ev($8); //@line 223 "./ddwrap.h"
 STACKTOP=sp;return; //@line 223 "./ddwrap.h"
 case 3: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 var $11=$10$0;
 $2=$11; //@line 223 "./ddwrap.h"
 var $12=$10$1;
 $3=$12; //@line 223 "./ddwrap.h"
 var $13=$4; //@line 223 "./ddwrap.h"
 (function() { try { __THREW__ = 0; return __ZN14ddSurfaceClassD2Ev($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 223 "./ddwrap.h"
 case 4: 
 label=5;break; //@line 223 "./ddwrap.h"
 case 5: 
 var $16=$2; //@line 223 "./ddwrap.h"
 var $17=$3; //@line 223 "./ddwrap.h"
 var $18$0=$16;
 var $18$1=0;
 var $19$0=$18$0;
 var $19$1=$17;
 ___resumeException($19$0) //@line 223 "./ddwrap.h"
 case 6: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1,0); var $21$1 = tempRet0;
 __ZSt9terminatev(); //@line 223 "./ddwrap.h"
 throw "Reached an unreachable!"; //@line 223 "./ddwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14ddSurfaceClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 128 "./ddwrap.h"
}


function __ZN20directInputBaseClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=HEAP32[((20472)>>2)]; //@line 47 "diwrap.cpp"
 var $4=($3|0)==0; //@line 47 "diwrap.cpp"
 if($4){label=2;break;}else{label=3;break;} //@line 47 "diwrap.cpp"
 case 2: 
 label=3;break; //@line 49 "diwrap.cpp"
 case 3: 
 var $7=HEAP32[((20472)>>2)]; //@line 72 "diwrap.cpp"
 var $8=((($7)+(1))|0); //@line 72 "diwrap.cpp"
 HEAP32[((20472)>>2)]=$8; //@line 72 "diwrap.cpp"
 STACKTOP=sp;return 1; //@line 74 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20directInputBaseClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=HEAP32[((20472)>>2)]; //@line 81 "diwrap.cpp"
 var $4=($3|0)==1; //@line 81 "diwrap.cpp"
 if($4){label=2;break;}else{label=3;break;} //@line 81 "diwrap.cpp"
 case 2: 
 label=3;break; //@line 86 "diwrap.cpp"
 case 3: 
 var $7=HEAP32[((20472)>>2)]; //@line 88 "diwrap.cpp"
 var $8=((($7)-(1))|0); //@line 88 "diwrap.cpp"
 HEAP32[((20472)>>2)]=$8; //@line 88 "diwrap.cpp"
 STACKTOP=sp;return 1; //@line 90 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 102 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 102 "diwrap.cpp"
 var $6=(($5)&1); //@line 102 "diwrap.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 102 "diwrap.cpp"
 case 2: 
 $1=0; //@line 102 "diwrap.cpp"
 label=4;break; //@line 102 "diwrap.cpp"
 case 3: 
 var $9=$3; //@line 104 "diwrap.cpp"
 var $10=__ZN20directInputBaseClass4initEv($9); //@line 104 "diwrap.cpp"
 var $11=(($3+4)|0); //@line 104 "diwrap.cpp"
 var $12=($10&1); //@line 104 "diwrap.cpp"
 HEAP8[($11)]=$12; //@line 104 "diwrap.cpp"
 var $13=(($3+4)|0); //@line 106 "diwrap.cpp"
 var $14=HEAP8[($13)]; //@line 106 "diwrap.cpp"
 var $15=(($14)&1); //@line 106 "diwrap.cpp"
 $1=$15; //@line 106 "diwrap.cpp"
 label=4;break; //@line 106 "diwrap.cpp"
 case 4: 
 var $17=$1; //@line 107 "diwrap.cpp"
 STACKTOP=sp;return $17; //@line 107 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 114 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 114 "diwrap.cpp"
 var $6=(($5)&1); //@line 114 "diwrap.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 114 "diwrap.cpp"
 case 2: 
 $1=0; //@line 114 "diwrap.cpp"
 label=8;break; //@line 114 "diwrap.cpp"
 case 3: 
 var $9=(($3+5)|0); //@line 116 "diwrap.cpp"
 var $10=HEAP8[($9)]; //@line 116 "diwrap.cpp"
 var $11=(($10)&1); //@line 116 "diwrap.cpp"
 if($11){label=4;break;}else{label=7;break;} //@line 116 "diwrap.cpp"
 case 4: 
 var $13=__ZN15diKeyboardClass13closeKeyboardEv($3); //@line 117 "diwrap.cpp"
 if($13){label=6;break;}else{label=5;break;} //@line 117 "diwrap.cpp"
 case 5: 
 $1=0; //@line 117 "diwrap.cpp"
 label=8;break; //@line 117 "diwrap.cpp"
 case 6: 
 label=7;break; //@line 118 "diwrap.cpp"
 case 7: 
 var $17=$3; //@line 120 "diwrap.cpp"
 var $18=__ZN20directInputBaseClass3endEv($17); //@line 120 "diwrap.cpp"
 var $19=$18^1; //@line 120 "diwrap.cpp"
 var $20=(($3+4)|0); //@line 120 "diwrap.cpp"
 var $21=($19&1); //@line 120 "diwrap.cpp"
 HEAP8[($20)]=$21; //@line 120 "diwrap.cpp"
 var $22=(($3+4)|0); //@line 122 "diwrap.cpp"
 var $23=HEAP8[($22)]; //@line 122 "diwrap.cpp"
 var $24=(($23)&1); //@line 122 "diwrap.cpp"
 var $25=$24^1; //@line 122 "diwrap.cpp"
 $1=$25; //@line 122 "diwrap.cpp"
 label=8;break; //@line 122 "diwrap.cpp"
 case 8: 
 var $27=$1; //@line 123 "diwrap.cpp"
 STACKTOP=sp;return $27; //@line 123 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass13closeKeyboardEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+5)|0); //@line 191 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 191 "diwrap.cpp"
 var $6=(($5)&1); //@line 191 "diwrap.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 191 "diwrap.cpp"
 case 2: 
 $1=0; //@line 191 "diwrap.cpp"
 label=8;break; //@line 191 "diwrap.cpp"
 case 3: 
 var $9=(($3+16)|0); //@line 194 "diwrap.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 194 "diwrap.cpp"
 var $11=($10|0)==0; //@line 194 "diwrap.cpp"
 if($11){label=5;break;}else{label=4;break;} //@line 194 "diwrap.cpp"
 case 4: 
 __ZdaPv($10); //@line 194 "diwrap.cpp"
 label=5;break; //@line 194 "diwrap.cpp"
 case 5: 
 var $14=(($3+12)|0); //@line 195 "diwrap.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 195 "diwrap.cpp"
 var $16=($15|0)==0; //@line 195 "diwrap.cpp"
 if($16){label=7;break;}else{label=6;break;} //@line 195 "diwrap.cpp"
 case 6: 
 __ZdaPv($15); //@line 195 "diwrap.cpp"
 label=7;break; //@line 195 "diwrap.cpp"
 case 7: 
 var $19=(($3+5)|0); //@line 199 "diwrap.cpp"
 HEAP8[($19)]=0; //@line 199 "diwrap.cpp"
 $1=1; //@line 201 "diwrap.cpp"
 label=8;break; //@line 201 "diwrap.cpp"
 case 8: 
 var $21=$1; //@line 202 "diwrap.cpp"
 STACKTOP=sp;return $21; //@line 202 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass15createKeysArrayEi($this,$numkeys){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $tmpk;
 $1=$this;
 $2=$numkeys;
 var $3=$1;
 var $4=$2; //@line 129 "diwrap.cpp"
 var $5=($4|0)<0; //@line 129 "diwrap.cpp"
 var $6=($5?-1:$4); //@line 129 "diwrap.cpp"
 var $7=__Znaj($6); //@line 129 "diwrap.cpp"
 $tmpk=$7; //@line 129 "diwrap.cpp"
 var $8=$tmpk; //@line 130 "diwrap.cpp"
 var $9=$2; //@line 130 "diwrap.cpp"
 var $10=$9; //@line 130 "diwrap.cpp"
 _memset($8, 0, $10)|0; //@line 130 "diwrap.cpp"
 var $11=$tmpk; //@line 132 "diwrap.cpp"
 STACKTOP=sp;return $11; //@line 132 "diwrap.cpp"
}


function __ZN15diKeyboardClass13setUpKeyboardEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $baseNumKeysUsed;
 $2=$this;
 var $3=$2;
 var $4=(($3+5)|0); //@line 142 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 142 "diwrap.cpp"
 var $6=(($5)&1); //@line 142 "diwrap.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 142 "diwrap.cpp"
 case 2: 
 $1=0; //@line 142 "diwrap.cpp"
 label=6;break; //@line 142 "diwrap.cpp"
 case 3: 
 $baseNumKeysUsed=256; //@line 174 "diwrap.cpp"
 var $9=(($3+8)|0); //@line 175 "diwrap.cpp"
 HEAP32[(($9)>>2)]=256; //@line 175 "diwrap.cpp"
 var $10=(($3+8)|0); //@line 178 "diwrap.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 178 "diwrap.cpp"
 var $12=__ZN15diKeyboardClass15createKeysArrayEi($3,$11); //@line 178 "diwrap.cpp"
 var $13=(($3+16)|0); //@line 178 "diwrap.cpp"
 HEAP32[(($13)>>2)]=$12; //@line 178 "diwrap.cpp"
 var $14=(($3+8)|0); //@line 179 "diwrap.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 179 "diwrap.cpp"
 var $16=__ZN15diKeyboardClass15createKeysArrayEi($3,$15); //@line 179 "diwrap.cpp"
 var $17=(($3+12)|0); //@line 179 "diwrap.cpp"
 HEAP32[(($17)>>2)]=$16; //@line 179 "diwrap.cpp"
 var $18=__ZN15diKeyboardClass7getKeysEPb($3,0); //@line 181 "diwrap.cpp"
 if($18){label=5;break;}else{label=4;break;} //@line 181 "diwrap.cpp"
 case 4: 
 $1=0; //@line 181 "diwrap.cpp"
 label=6;break; //@line 181 "diwrap.cpp"
 case 5: 
 var $21=(($3+5)|0); //@line 182 "diwrap.cpp"
 HEAP8[($21)]=1; //@line 182 "diwrap.cpp"
 $1=1; //@line 184 "diwrap.cpp"
 label=6;break; //@line 184 "diwrap.cpp"
 case 6: 
 var $23=$1; //@line 185 "diwrap.cpp"
 STACKTOP=sp;return $23; //@line 185 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass7getKeysEPb($this,$isLost){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $tmpKeys;
 var $numkeys=sp;
 $1=$this;
 $2=$isLost;
 var $3=$1;
 var $4=_SDL_GetKeyboardState($numkeys); //@line 263 "diwrap.cpp"
 $tmpKeys=$4; //@line 263 "diwrap.cpp"
 var $5=HEAP32[(($numkeys)>>2)]; //@line 269 "diwrap.cpp"
 var $6=(($3+8)|0); //@line 269 "diwrap.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 269 "diwrap.cpp"
 var $8=($5|0)>($7|0); //@line 269 "diwrap.cpp"
 if($8){label=2;break;}else{label=7;break;} //@line 269 "diwrap.cpp"
 case 2: 
 var $10=HEAP32[(($numkeys)>>2)]; //@line 270 "diwrap.cpp"
 var $11=(($3+8)|0); //@line 270 "diwrap.cpp"
 HEAP32[(($11)>>2)]=$10; //@line 270 "diwrap.cpp"
 var $12=(($3+16)|0); //@line 273 "diwrap.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 273 "diwrap.cpp"
 var $14=($13|0)==0; //@line 273 "diwrap.cpp"
 if($14){label=4;break;}else{label=3;break;} //@line 273 "diwrap.cpp"
 case 3: 
 __ZdaPv($13); //@line 273 "diwrap.cpp"
 label=4;break; //@line 273 "diwrap.cpp"
 case 4: 
 var $17=(($3+12)|0); //@line 274 "diwrap.cpp"
 var $18=HEAP32[(($17)>>2)]; //@line 274 "diwrap.cpp"
 var $19=($18|0)==0; //@line 274 "diwrap.cpp"
 if($19){label=6;break;}else{label=5;break;} //@line 274 "diwrap.cpp"
 case 5: 
 __ZdaPv($18); //@line 274 "diwrap.cpp"
 label=6;break; //@line 274 "diwrap.cpp"
 case 6: 
 var $22=(($3+8)|0); //@line 276 "diwrap.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 276 "diwrap.cpp"
 var $24=__ZN15diKeyboardClass15createKeysArrayEi($3,$23); //@line 276 "diwrap.cpp"
 var $25=(($3+16)|0); //@line 276 "diwrap.cpp"
 HEAP32[(($25)>>2)]=$24; //@line 276 "diwrap.cpp"
 var $26=(($3+8)|0); //@line 277 "diwrap.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 277 "diwrap.cpp"
 var $28=__ZN15diKeyboardClass15createKeysArrayEi($3,$27); //@line 277 "diwrap.cpp"
 var $29=(($3+12)|0); //@line 277 "diwrap.cpp"
 HEAP32[(($29)>>2)]=$28; //@line 277 "diwrap.cpp"
 label=7;break; //@line 278 "diwrap.cpp"
 case 7: 
 var $31=(($3+12)|0); //@line 280 "diwrap.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 280 "diwrap.cpp"
 var $33=(($3+16)|0); //@line 280 "diwrap.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 280 "diwrap.cpp"
 var $35=(($3+8)|0); //@line 280 "diwrap.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 280 "diwrap.cpp"
 var $37=$36; //@line 280 "diwrap.cpp"
 assert($37 % 1 === 0);(_memcpy($32, $34, $37)|0); //@line 280 "diwrap.cpp"
 var $38=(($3+16)|0); //@line 281 "diwrap.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 281 "diwrap.cpp"
 var $40=$tmpKeys; //@line 281 "diwrap.cpp"
 var $41=(($3+8)|0); //@line 281 "diwrap.cpp"
 var $42=HEAP32[(($41)>>2)]; //@line 281 "diwrap.cpp"
 var $43=$42; //@line 281 "diwrap.cpp"
 assert($43 % 1 === 0);(_memcpy($39, $40, $43)|0); //@line 281 "diwrap.cpp"
 STACKTOP=sp;return 1; //@line 283 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass7acquireEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 213 "diwrap.cpp"
}


function __ZN12diMouseClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 295 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 295 "diwrap.cpp"
 var $6=(($5)&1); //@line 295 "diwrap.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 295 "diwrap.cpp"
 case 2: 
 $1=0; //@line 295 "diwrap.cpp"
 label=4;break; //@line 295 "diwrap.cpp"
 case 3: 
 var $9=$3; //@line 297 "diwrap.cpp"
 var $10=__ZN20directInputBaseClass4initEv($9); //@line 297 "diwrap.cpp"
 var $11=(($3+4)|0); //@line 297 "diwrap.cpp"
 var $12=($10&1); //@line 297 "diwrap.cpp"
 HEAP8[($11)]=$12; //@line 297 "diwrap.cpp"
 var $13=(($3+4)|0); //@line 299 "diwrap.cpp"
 var $14=HEAP8[($13)]; //@line 299 "diwrap.cpp"
 var $15=(($14)&1); //@line 299 "diwrap.cpp"
 $1=$15; //@line 299 "diwrap.cpp"
 label=4;break; //@line 299 "diwrap.cpp"
 case 4: 
 var $17=$1; //@line 300 "diwrap.cpp"
 STACKTOP=sp;return $17; //@line 300 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12diMouseClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 307 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 307 "diwrap.cpp"
 var $6=(($5)&1); //@line 307 "diwrap.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 307 "diwrap.cpp"
 case 2: 
 $1=0; //@line 307 "diwrap.cpp"
 label=8;break; //@line 307 "diwrap.cpp"
 case 3: 
 var $9=(($3+5)|0); //@line 309 "diwrap.cpp"
 var $10=HEAP8[($9)]; //@line 309 "diwrap.cpp"
 var $11=(($10)&1); //@line 309 "diwrap.cpp"
 if($11){label=4;break;}else{label=7;break;} //@line 309 "diwrap.cpp"
 case 4: 
 var $13=__ZN12diMouseClass10closeMouseEv($3); //@line 310 "diwrap.cpp"
 if($13){label=6;break;}else{label=5;break;} //@line 310 "diwrap.cpp"
 case 5: 
 $1=0; //@line 310 "diwrap.cpp"
 label=8;break; //@line 310 "diwrap.cpp"
 case 6: 
 label=7;break; //@line 311 "diwrap.cpp"
 case 7: 
 var $17=$3; //@line 313 "diwrap.cpp"
 var $18=__ZN20directInputBaseClass3endEv($17); //@line 313 "diwrap.cpp"
 var $19=$18^1; //@line 313 "diwrap.cpp"
 var $20=(($3+4)|0); //@line 313 "diwrap.cpp"
 var $21=($19&1); //@line 313 "diwrap.cpp"
 HEAP8[($20)]=$21; //@line 313 "diwrap.cpp"
 var $22=(($3+4)|0); //@line 315 "diwrap.cpp"
 var $23=HEAP8[($22)]; //@line 315 "diwrap.cpp"
 var $24=(($23)&1); //@line 315 "diwrap.cpp"
 var $25=$24^1; //@line 315 "diwrap.cpp"
 $1=$25; //@line 315 "diwrap.cpp"
 label=8;break; //@line 315 "diwrap.cpp"
 case 8: 
 var $27=$1; //@line 316 "diwrap.cpp"
 STACKTOP=sp;return $27; //@line 316 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12diMouseClass10closeMouseEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+5)|0); //@line 375 "diwrap.cpp"
 var $5=HEAP8[($4)]; //@line 375 "diwrap.cpp"
 var $6=(($5)&1); //@line 375 "diwrap.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 375 "diwrap.cpp"
 case 2: 
 $1=0; //@line 375 "diwrap.cpp"
 label=4;break; //@line 375 "diwrap.cpp"
 case 3: 
 var $9=(($3+5)|0); //@line 381 "diwrap.cpp"
 HEAP8[($9)]=0; //@line 381 "diwrap.cpp"
 $1=1; //@line 383 "diwrap.cpp"
 label=4;break; //@line 383 "diwrap.cpp"
 case 4: 
 var $11=$1; //@line 384 "diwrap.cpp"
 STACKTOP=sp;return $11; //@line 384 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12diMouseClass10setUpMouseEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 324 "diwrap.cpp"
 var $4=(($3+8)|0); //@line 324 "diwrap.cpp"
 HEAP32[(($4)>>2)]=0; //@line 324 "diwrap.cpp"
 var $5=(($2+8)|0); //@line 325 "diwrap.cpp"
 var $6=(($5+12)|0); //@line 325 "diwrap.cpp"
 HEAP32[(($6)>>2)]=0; //@line 325 "diwrap.cpp"
 var $7=(($2+8)|0); //@line 326 "diwrap.cpp"
 var $8=(($7)|0); //@line 326 "diwrap.cpp"
 HEAP32[(($8)>>2)]=0; //@line 326 "diwrap.cpp"
 var $9=(($2+8)|0); //@line 327 "diwrap.cpp"
 var $10=(($9+4)|0); //@line 327 "diwrap.cpp"
 HEAP32[(($10)>>2)]=0; //@line 327 "diwrap.cpp"
 var $11=(($2+8)|0); //@line 328 "diwrap.cpp"
 var $12=(($11+16)|0); //@line 328 "diwrap.cpp"
 HEAP8[($12)]=0; //@line 328 "diwrap.cpp"
 var $13=(($2+5)|0); //@line 366 "diwrap.cpp"
 HEAP8[($13)]=1; //@line 366 "diwrap.cpp"
 STACKTOP=sp;return 1; //@line 368 "diwrap.cpp"
}


function __ZN12diMouseClass7acquireEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 395 "diwrap.cpp"
}


function __ZN12diMouseClass8getStateEPb($this,$isLost){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $latestMouseDataCopy=sp;
 $2=$this;
 $3=$isLost;
 var $4=$2;
 var $5=$4; //@line 418 "diwrap.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 418 "diwrap.cpp"
 var $7=(($6+8)|0); //@line 418 "diwrap.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 418 "diwrap.cpp"
 var $9=FUNCTION_TABLE[$8]($4); //@line 418 "diwrap.cpp"
 if($9){label=3;break;}else{label=2;break;} //@line 418 "diwrap.cpp"
 case 2: 
 $1=0; //@line 418 "diwrap.cpp"
 label=6;break; //@line 418 "diwrap.cpp"
 case 3: 
 var $12=$3; //@line 419 "diwrap.cpp"
 var $13=($12|0)!=0; //@line 419 "diwrap.cpp"
 if($13){label=4;break;}else{label=5;break;} //@line 419 "diwrap.cpp"
 case 4: 
 var $15=$3; //@line 419 "diwrap.cpp"
 HEAP8[($15)]=0; //@line 419 "diwrap.cpp"
 label=5;break; //@line 419 "diwrap.cpp"
 case 5: 
 var $17=(($4+28)|0); //@line 443 "diwrap.cpp"
 var $18=$latestMouseDataCopy; //@line 443 "diwrap.cpp"
 var $19=$17; //@line 443 "diwrap.cpp"
 assert(20 % 1 === 0);HEAP32[(($18)>>2)]=HEAP32[(($19)>>2)];HEAP32[((($18)+(4))>>2)]=HEAP32[((($19)+(4))>>2)];HEAP32[((($18)+(8))>>2)]=HEAP32[((($19)+(8))>>2)];HEAP32[((($18)+(12))>>2)]=HEAP32[((($19)+(12))>>2)];HEAP32[((($18)+(16))>>2)]=HEAP32[((($19)+(16))>>2)]; //@line 443 "diwrap.cpp"
 var $20=(($4+28)|0); //@line 445 "diwrap.cpp"
 var $21=(($4+8)|0); //@line 445 "diwrap.cpp"
 var $22=$20; //@line 445 "diwrap.cpp"
 var $23=$21; //@line 445 "diwrap.cpp"
 assert(20 % 1 === 0);HEAP32[(($22)>>2)]=HEAP32[(($23)>>2)];HEAP32[((($22)+(4))>>2)]=HEAP32[((($23)+(4))>>2)];HEAP32[((($22)+(8))>>2)]=HEAP32[((($23)+(8))>>2)];HEAP32[((($22)+(12))>>2)]=HEAP32[((($23)+(12))>>2)];HEAP32[((($22)+(16))>>2)]=HEAP32[((($23)+(16))>>2)]; //@line 445 "diwrap.cpp"
 var $24=(($4+8)|0); //@line 446 "diwrap.cpp"
 var $25=(($24+8)|0); //@line 446 "diwrap.cpp"
 var $26=(($4+8)|0); //@line 446 "diwrap.cpp"
 var $27=(($26+12)|0); //@line 446 "diwrap.cpp"
 var $28=_SDL_GetMouseState($25,$27); //@line 446 "diwrap.cpp"
 var $29=(($4+8)|0); //@line 446 "diwrap.cpp"
 var $30=(($29+16)|0); //@line 446 "diwrap.cpp"
 HEAP8[($30)]=$28; //@line 446 "diwrap.cpp"
 var $31=(($4+8)|0); //@line 447 "diwrap.cpp"
 var $32=(($31+8)|0); //@line 447 "diwrap.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 447 "diwrap.cpp"
 var $34=(($latestMouseDataCopy+8)|0); //@line 447 "diwrap.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 447 "diwrap.cpp"
 var $36=((($33)-($35))|0); //@line 447 "diwrap.cpp"
 var $37=(($4+8)|0); //@line 447 "diwrap.cpp"
 var $38=(($37)|0); //@line 447 "diwrap.cpp"
 HEAP32[(($38)>>2)]=$36; //@line 447 "diwrap.cpp"
 var $39=(($4+8)|0); //@line 448 "diwrap.cpp"
 var $40=(($39+12)|0); //@line 448 "diwrap.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 448 "diwrap.cpp"
 var $42=(($latestMouseDataCopy+12)|0); //@line 448 "diwrap.cpp"
 var $43=HEAP32[(($42)>>2)]; //@line 448 "diwrap.cpp"
 var $44=((($41)-($43))|0); //@line 448 "diwrap.cpp"
 var $45=(($4+8)|0); //@line 448 "diwrap.cpp"
 var $46=(($45+4)|0); //@line 448 "diwrap.cpp"
 HEAP32[(($46)>>2)]=$44; //@line 448 "diwrap.cpp"
 $1=1; //@line 450 "diwrap.cpp"
 label=6;break; //@line 450 "diwrap.cpp"
 case 6: 
 var $48=$1; //@line 451 "diwrap.cpp"
 STACKTOP=sp;return $48; //@line 451 "diwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z16unitStartFallingR15enemyUnitStruct($enemyData){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $atGroundFrameNum;
 var $nextFrameNum;
 var $fallingSpeed;
 var $minX;
 var $maxX;
 var $limitX;
 $2=$enemyData;
 var $3=$2; //@line 53 "enemyai.cpp"
 var $4=$3; //@line 53 "enemyai.cpp"
 var $5=(($4+24)|0); //@line 53 "enemyai.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 53 "enemyai.cpp"
 if(($6|0)==3){ label=2;break;}else if(($6|0)==4){ label=3;break;}else if(($6|0)==5){ label=4;break;}else{label=5;break;}
 case 2: 
 var $8=$2; //@line 56 "enemyai.cpp"
 var $9=(($8+224)|0); //@line 56 "enemyai.cpp"
 var $10=$9; //@line 56 "enemyai.cpp"
 var $11=(($10)|0); //@line 56 "enemyai.cpp"
 HEAP8[($11)]=1; //@line 56 "enemyai.cpp"
 var $12=$2; //@line 57 "enemyai.cpp"
 var $13=(($12+224)|0); //@line 57 "enemyai.cpp"
 var $14=$13; //@line 57 "enemyai.cpp"
 var $15=(($14+24)|0); //@line 57 "enemyai.cpp"
 var $16=HEAPF64[(($15)>>3)]; //@line 57 "enemyai.cpp"
 $fallingSpeed=$16; //@line 57 "enemyai.cpp"
 var $17=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(5160,0); //@line 60 "enemyai.cpp"
 $atGroundFrameNum=$17; //@line 60 "enemyai.cpp"
 var $18=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(13440,0); //@line 62 "enemyai.cpp"
 $nextFrameNum=$18; //@line 62 "enemyai.cpp"
 var $19=HEAP32[((19652)>>2)]; //@line 65 "enemyai.cpp"
 $minX=$19; //@line 65 "enemyai.cpp"
 var $20=HEAP32[((19656)>>2)]; //@line 66 "enemyai.cpp"
 $maxX=$20; //@line 66 "enemyai.cpp"
 label=6;break; //@line 67 "enemyai.cpp"
 case 3: 
 var $22=$2; //@line 70 "enemyai.cpp"
 var $23=(($22+224)|0); //@line 70 "enemyai.cpp"
 var $24=$23; //@line 70 "enemyai.cpp"
 var $25=(($24)|0); //@line 70 "enemyai.cpp"
 HEAP8[($25)]=1; //@line 70 "enemyai.cpp"
 var $26=$2; //@line 71 "enemyai.cpp"
 var $27=(($26+224)|0); //@line 71 "enemyai.cpp"
 var $28=$27; //@line 71 "enemyai.cpp"
 var $29=(($28+24)|0); //@line 71 "enemyai.cpp"
 var $30=HEAPF64[(($29)>>3)]; //@line 71 "enemyai.cpp"
 $fallingSpeed=$30; //@line 71 "enemyai.cpp"
 var $31=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(9904,0); //@line 74 "enemyai.cpp"
 $atGroundFrameNum=$31; //@line 74 "enemyai.cpp"
 var $32=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(7688,0); //@line 76 "enemyai.cpp"
 $nextFrameNum=$32; //@line 76 "enemyai.cpp"
 var $33=HEAP32[((19652)>>2)]; //@line 79 "enemyai.cpp"
 $minX=$33; //@line 79 "enemyai.cpp"
 var $34=HEAP32[((19656)>>2)]; //@line 80 "enemyai.cpp"
 $maxX=$34; //@line 80 "enemyai.cpp"
 label=6;break; //@line 81 "enemyai.cpp"
 case 4: 
 var $36=$2; //@line 84 "enemyai.cpp"
 var $37=(($36+224)|0); //@line 84 "enemyai.cpp"
 var $38=$37; //@line 84 "enemyai.cpp"
 var $39=(($38)|0); //@line 84 "enemyai.cpp"
 HEAP8[($39)]=1; //@line 84 "enemyai.cpp"
 var $40=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(7400,0); //@line 86 "enemyai.cpp"
 $atGroundFrameNum=$40; //@line 86 "enemyai.cpp"
 var $41=$atGroundFrameNum; //@line 87 "enemyai.cpp"
 $nextFrameNum=$41; //@line 87 "enemyai.cpp"
 var $42=$2; //@line 88 "enemyai.cpp"
 var $43=(($42+224)|0); //@line 88 "enemyai.cpp"
 var $44=$43; //@line 88 "enemyai.cpp"
 var $45=(($44+8)|0); //@line 88 "enemyai.cpp"
 var $46=HEAPF64[(($45)>>3)]; //@line 88 "enemyai.cpp"
 $fallingSpeed=$46; //@line 88 "enemyai.cpp"
 var $47=HEAP32[((19668)>>2)]; //@line 91 "enemyai.cpp"
 $minX=$47; //@line 91 "enemyai.cpp"
 var $48=HEAP32[((19672)>>2)]; //@line 92 "enemyai.cpp"
 $maxX=$48; //@line 92 "enemyai.cpp"
 label=6;break; //@line 94 "enemyai.cpp"
 case 5: 
 $1=0; //@line 97 "enemyai.cpp"
 label=13;break; //@line 97 "enemyai.cpp"
 case 6: 
 var $51=$2; //@line 102 "enemyai.cpp"
 var $52=$51; //@line 102 "enemyai.cpp"
 var $53=(($52+8)|0); //@line 102 "enemyai.cpp"
 var $54=HEAPF64[(($53)>>3)]; //@line 102 "enemyai.cpp"
 var $55=($54)-(30); //@line 102 "enemyai.cpp"
 var $56=$2; //@line 102 "enemyai.cpp"
 var $57=$56; //@line 102 "enemyai.cpp"
 var $58=(($57+160)|0); //@line 102 "enemyai.cpp"
 HEAPF64[(($58)>>3)]=$55; //@line 102 "enemyai.cpp"
 var $59=$minX; //@line 105 "enemyai.cpp"
 var $60=$atGroundFrameNum; //@line 105 "enemyai.cpp"
 var $61=$2; //@line 106 "enemyai.cpp"
 var $62=$61; //@line 106 "enemyai.cpp"
 var $63=__Z17getUnitFramesListP17genericUnitStruct($62); //@line 106 "enemyai.cpp"
 var $64=(($63+((($60)*(80))&-1))|0); //@line 106 "enemyai.cpp"
 var $65=(($64+44)|0); //@line 106 "enemyai.cpp"
 var $66=HEAP32[(($65)>>2)]; //@line 106 "enemyai.cpp"
 var $67=((($59)+($66))|0); //@line 106 "enemyai.cpp"
 $limitX=$67; //@line 106 "enemyai.cpp"
 var $68=$2; //@line 107 "enemyai.cpp"
 var $69=$68; //@line 107 "enemyai.cpp"
 var $70=(($69+160)|0); //@line 107 "enemyai.cpp"
 var $71=HEAPF64[(($70)>>3)]; //@line 107 "enemyai.cpp"
 var $72=$limitX; //@line 107 "enemyai.cpp"
 var $73=($72|0); //@line 107 "enemyai.cpp"
 var $74=$71<$73; //@line 107 "enemyai.cpp"
 if($74){label=7;break;}else{label=8;break;} //@line 107 "enemyai.cpp"
 case 7: 
 var $76=$limitX; //@line 108 "enemyai.cpp"
 var $77=_rand(); //@line 108 "enemyai.cpp"
 var $78=(((($77|0))%(70))&-1); //@line 108 "enemyai.cpp"
 var $79=((($76)+($78))|0); //@line 108 "enemyai.cpp"
 var $80=($79|0); //@line 108 "enemyai.cpp"
 var $81=$2; //@line 108 "enemyai.cpp"
 var $82=$81; //@line 108 "enemyai.cpp"
 var $83=(($82+160)|0); //@line 108 "enemyai.cpp"
 HEAPF64[(($83)>>3)]=$80; //@line 108 "enemyai.cpp"
 label=8;break; //@line 108 "enemyai.cpp"
 case 8: 
 var $85=$maxX; //@line 109 "enemyai.cpp"
 var $86=$atGroundFrameNum; //@line 109 "enemyai.cpp"
 var $87=$2; //@line 110 "enemyai.cpp"
 var $88=$87; //@line 110 "enemyai.cpp"
 var $89=__Z17getUnitFramesListP17genericUnitStruct($88); //@line 110 "enemyai.cpp"
 var $90=(($89+((($86)*(80))&-1))|0); //@line 110 "enemyai.cpp"
 var $91=(($90+32)|0); //@line 110 "enemyai.cpp"
 var $92=HEAP32[(($91)>>2)]; //@line 110 "enemyai.cpp"
 var $93=((($85)-($92))|0); //@line 110 "enemyai.cpp"
 var $94=$atGroundFrameNum; //@line 110 "enemyai.cpp"
 var $95=$2; //@line 111 "enemyai.cpp"
 var $96=$95; //@line 111 "enemyai.cpp"
 var $97=__Z17getUnitFramesListP17genericUnitStruct($96); //@line 111 "enemyai.cpp"
 var $98=(($97+((($94)*(80))&-1))|0); //@line 111 "enemyai.cpp"
 var $99=(($98+40)|0); //@line 111 "enemyai.cpp"
 var $100=HEAP32[(($99)>>2)]; //@line 111 "enemyai.cpp"
 var $101=((($93)+($100))|0); //@line 111 "enemyai.cpp"
 $limitX=$101; //@line 111 "enemyai.cpp"
 var $102=$2; //@line 112 "enemyai.cpp"
 var $103=$102; //@line 112 "enemyai.cpp"
 var $104=(($103+160)|0); //@line 112 "enemyai.cpp"
 var $105=HEAPF64[(($104)>>3)]; //@line 112 "enemyai.cpp"
 var $106=$limitX; //@line 112 "enemyai.cpp"
 var $107=($106|0); //@line 112 "enemyai.cpp"
 var $108=$105>$107; //@line 112 "enemyai.cpp"
 if($108){label=9;break;}else{label=10;break;} //@line 112 "enemyai.cpp"
 case 9: 
 var $110=$limitX; //@line 113 "enemyai.cpp"
 var $111=_rand(); //@line 113 "enemyai.cpp"
 var $112=(((($111|0))%(70))&-1); //@line 113 "enemyai.cpp"
 var $113=((($110)-($112))|0); //@line 113 "enemyai.cpp"
 var $114=($113|0); //@line 113 "enemyai.cpp"
 var $115=$2; //@line 113 "enemyai.cpp"
 var $116=$115; //@line 113 "enemyai.cpp"
 var $117=(($116+160)|0); //@line 113 "enemyai.cpp"
 HEAPF64[(($117)>>3)]=$114; //@line 113 "enemyai.cpp"
 label=10;break; //@line 113 "enemyai.cpp"
 case 10: 
 var $119=$2; //@line 117 "enemyai.cpp"
 var $120=$119; //@line 117 "enemyai.cpp"
 var $121=(($120+160)|0); //@line 117 "enemyai.cpp"
 var $122=HEAPF64[(($121)>>3)]; //@line 117 "enemyai.cpp"
 var $123=(($122)&-1); //@line 117 "enemyai.cpp"
 var $124=__Z13getGroundWalli($123); //@line 117 "enemyai.cpp"
 var $125=$atGroundFrameNum; //@line 117 "enemyai.cpp"
 var $126=$2; //@line 118 "enemyai.cpp"
 var $127=$126; //@line 118 "enemyai.cpp"
 var $128=__Z17getUnitFramesListP17genericUnitStruct($127); //@line 118 "enemyai.cpp"
 var $129=(($128+((($125)*(80))&-1))|0); //@line 118 "enemyai.cpp"
 var $130=(($129+36)|0); //@line 118 "enemyai.cpp"
 var $131=HEAP32[(($130)>>2)]; //@line 118 "enemyai.cpp"
 var $132=((($124)-($131))|0); //@line 118 "enemyai.cpp"
 var $133=$atGroundFrameNum; //@line 118 "enemyai.cpp"
 var $134=$2; //@line 119 "enemyai.cpp"
 var $135=$134; //@line 119 "enemyai.cpp"
 var $136=__Z17getUnitFramesListP17genericUnitStruct($135); //@line 119 "enemyai.cpp"
 var $137=(($136+((($133)*(80))&-1))|0); //@line 119 "enemyai.cpp"
 var $138=(($137+44)|0); //@line 119 "enemyai.cpp"
 var $139=HEAP32[(($138)>>2)]; //@line 119 "enemyai.cpp"
 var $140=((($132)+($139))|0); //@line 119 "enemyai.cpp"
 var $141=($140|0); //@line 119 "enemyai.cpp"
 var $142=$2; //@line 119 "enemyai.cpp"
 var $143=$142; //@line 119 "enemyai.cpp"
 var $144=(($143+168)|0); //@line 119 "enemyai.cpp"
 HEAPF64[(($144)>>3)]=$141; //@line 119 "enemyai.cpp"
 var $145=$2; //@line 122 "enemyai.cpp"
 var $146=$145; //@line 122 "enemyai.cpp"
 var $147=(($146+156)|0); //@line 122 "enemyai.cpp"
 HEAP8[($147)]=1; //@line 122 "enemyai.cpp"
 var $148=$2; //@line 123 "enemyai.cpp"
 var $149=$148; //@line 123 "enemyai.cpp"
 var $150=(($149+96)|0); //@line 123 "enemyai.cpp"
 var $151=HEAP8[($150)]; //@line 123 "enemyai.cpp"
 var $152=(($151)&1); //@line 123 "enemyai.cpp"
 if($152){label=11;break;}else{label=12;break;} //@line 123 "enemyai.cpp"
 case 11: 
 var $154=HEAPF64[((19560)>>3)]; //@line 125 "enemyai.cpp"
 var $155=$2; //@line 125 "enemyai.cpp"
 var $156=$155; //@line 125 "enemyai.cpp"
 var $157=(($156+160)|0); //@line 125 "enemyai.cpp"
 var $158=HEAPF64[(($157)>>3)]; //@line 125 "enemyai.cpp"
 var $159=($158)-($154); //@line 125 "enemyai.cpp"
 HEAPF64[(($157)>>3)]=$159; //@line 125 "enemyai.cpp"
 var $160=HEAPF64[((19568)>>3)]; //@line 126 "enemyai.cpp"
 var $161=$2; //@line 126 "enemyai.cpp"
 var $162=$161; //@line 126 "enemyai.cpp"
 var $163=(($162+168)|0); //@line 126 "enemyai.cpp"
 var $164=HEAPF64[(($163)>>3)]; //@line 126 "enemyai.cpp"
 var $165=($164)-($160); //@line 126 "enemyai.cpp"
 HEAPF64[(($163)>>3)]=$165; //@line 126 "enemyai.cpp"
 label=12;break; //@line 127 "enemyai.cpp"
 case 12: 
 var $167=$2; //@line 130 "enemyai.cpp"
 var $168=$167; //@line 130 "enemyai.cpp"
 var $169=$2; //@line 130 "enemyai.cpp"
 var $170=$169; //@line 130 "enemyai.cpp"
 var $171=(($170+160)|0); //@line 130 "enemyai.cpp"
 var $172=HEAPF64[(($171)>>3)]; //@line 130 "enemyai.cpp"
 var $173=$2; //@line 130 "enemyai.cpp"
 var $174=$173; //@line 130 "enemyai.cpp"
 var $175=(($174+168)|0); //@line 130 "enemyai.cpp"
 var $176=HEAPF64[(($175)>>3)]; //@line 130 "enemyai.cpp"
 var $177=$fallingSpeed; //@line 130 "enemyai.cpp"
 var $178=__Z21setSpeedForLinealMoveP17genericUnitStructeed($168,$172,$176,$177); //@line 130 "enemyai.cpp"
 var $179=$nextFrameNum; //@line 135 "enemyai.cpp"
 var $180=$2; //@line 135 "enemyai.cpp"
 var $181=$180; //@line 135 "enemyai.cpp"
 var $182=(($181+88)|0); //@line 135 "enemyai.cpp"
 HEAP32[(($182)>>2)]=$179; //@line 135 "enemyai.cpp"
 $1=1; //@line 137 "enemyai.cpp"
 label=13;break; //@line 137 "enemyai.cpp"
 case 13: 
 var $184=$1; //@line 138 "enemyai.cpp"
 STACKTOP=sp;return $184; //@line 138 "enemyai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14enemyUnitFreedP15enemyUnitStruct($enemyData){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $unitScore;
 var $statisticToUse;
 var $2=sp;
 var $3=(sp)+(16);
 var $4=(sp)+(32);
 var $5=(sp)+(48);
 $1=$enemyData;
 var $6=$1; //@line 149 "enemyai.cpp"
 var $7=$6; //@line 149 "enemyai.cpp"
 var $8=(($7+24)|0); //@line 149 "enemyai.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 149 "enemyai.cpp"
 if(($9|0)==5){ label=14;break;}else if(($9|0)==4){ label=2;break;}else if(($9|0)==3){ label=8;break;}else{label=15;break;}
 case 2: 
 var $11=$1; //@line 153 "enemyai.cpp"
 var $12=$11; //@line 153 "enemyai.cpp"
 var $13=(($12+144)|0); //@line 153 "enemyai.cpp"
 var $14=(($13+4)|0); //@line 153 "enemyai.cpp"
 var $15=HEAP8[($14)]; //@line 153 "enemyai.cpp"
 var $16=($15&255); //@line 153 "enemyai.cpp"
 var $17=($16|0)==3; //@line 153 "enemyai.cpp"
 if($17){label=3;break;}else{label=6;break;} //@line 153 "enemyai.cpp"
 case 3: 
 var $19=$1; //@line 155 "enemyai.cpp"
 var $20=$19; //@line 155 "enemyai.cpp"
 var $21=(($20+144)|0); //@line 155 "enemyai.cpp"
 var $22=$2; //@line 155 "enemyai.cpp"
 var $23=$21; //@line 155 "enemyai.cpp"
 assert(12 % 1 === 0);HEAP32[(($22)>>2)]=HEAP32[(($23)>>2)];HEAP32[((($22)+(4))>>2)]=HEAP32[((($23)+(4))>>2)];HEAP32[((($22)+(8))>>2)]=HEAP32[((($23)+(8))>>2)]; //@line 155 "enemyai.cpp"
 var $24=__Z14getUnitPointer23gameObjectPointerStruct($2); //@line 155 "enemyai.cpp"
 var $25=($24|0)!=0; //@line 155 "enemyai.cpp"
 if($25){label=4;break;}else{label=6;break;} //@line 155 "enemyai.cpp"
 case 4: 
 var $27=$1; //@line 156 "enemyai.cpp"
 var $28=$27; //@line 156 "enemyai.cpp"
 var $29=(($28+144)|0); //@line 156 "enemyai.cpp"
 var $30=$3; //@line 156 "enemyai.cpp"
 var $31=$29; //@line 156 "enemyai.cpp"
 assert(12 % 1 === 0);HEAP32[(($30)>>2)]=HEAP32[(($31)>>2)];HEAP32[((($30)+(4))>>2)]=HEAP32[((($31)+(4))>>2)];HEAP32[((($30)+(8))>>2)]=HEAP32[((($31)+(8))>>2)]; //@line 156 "enemyai.cpp"
 var $32=__Z14getUnitPointer23gameObjectPointerStruct($3); //@line 156 "enemyai.cpp"
 var $33=(($32+24)|0); //@line 156 "enemyai.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 156 "enemyai.cpp"
 var $35=($34|0)==5; //@line 156 "enemyai.cpp"
 if($35){label=5;break;}else{label=6;break;} //@line 156 "enemyai.cpp"
 case 5: 
 var $37=$1; //@line 161 "enemyai.cpp"
 var $38=(($37+224)|0); //@line 161 "enemyai.cpp"
 var $39=$38; //@line 161 "enemyai.cpp"
 var $40=(($39+20)|0); //@line 161 "enemyai.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 161 "enemyai.cpp"
 $unitScore=$41; //@line 161 "enemyai.cpp"
 label=7;break; //@line 163 "enemyai.cpp"
 case 6: 
 var $43=$1; //@line 166 "enemyai.cpp"
 var $44=(($43+224)|0); //@line 166 "enemyai.cpp"
 var $45=$44; //@line 166 "enemyai.cpp"
 var $46=(($45+16)|0); //@line 166 "enemyai.cpp"
 var $47=HEAP32[(($46)>>2)]; //@line 166 "enemyai.cpp"
 $unitScore=$47; //@line 166 "enemyai.cpp"
 label=7;break;
 case 7: 
 $statisticToUse=19636; //@line 171 "enemyai.cpp"
 label=16;break; //@line 172 "enemyai.cpp"
 case 8: 
 var $50=$1; //@line 176 "enemyai.cpp"
 var $51=$50; //@line 176 "enemyai.cpp"
 var $52=(($51+144)|0); //@line 176 "enemyai.cpp"
 var $53=(($52+4)|0); //@line 176 "enemyai.cpp"
 var $54=HEAP8[($53)]; //@line 176 "enemyai.cpp"
 var $55=($54&255); //@line 176 "enemyai.cpp"
 var $56=($55|0)==3; //@line 176 "enemyai.cpp"
 if($56){label=9;break;}else{label=12;break;} //@line 176 "enemyai.cpp"
 case 9: 
 var $58=$1; //@line 178 "enemyai.cpp"
 var $59=$58; //@line 178 "enemyai.cpp"
 var $60=(($59+144)|0); //@line 178 "enemyai.cpp"
 var $61=$4; //@line 178 "enemyai.cpp"
 var $62=$60; //@line 178 "enemyai.cpp"
 assert(12 % 1 === 0);HEAP32[(($61)>>2)]=HEAP32[(($62)>>2)];HEAP32[((($61)+(4))>>2)]=HEAP32[((($62)+(4))>>2)];HEAP32[((($61)+(8))>>2)]=HEAP32[((($62)+(8))>>2)]; //@line 178 "enemyai.cpp"
 var $63=__Z14getUnitPointer23gameObjectPointerStruct($4); //@line 178 "enemyai.cpp"
 var $64=($63|0)!=0; //@line 178 "enemyai.cpp"
 if($64){label=10;break;}else{label=12;break;} //@line 178 "enemyai.cpp"
 case 10: 
 var $66=$1; //@line 179 "enemyai.cpp"
 var $67=$66; //@line 179 "enemyai.cpp"
 var $68=(($67+144)|0); //@line 179 "enemyai.cpp"
 var $69=$5; //@line 179 "enemyai.cpp"
 var $70=$68; //@line 179 "enemyai.cpp"
 assert(12 % 1 === 0);HEAP32[(($69)>>2)]=HEAP32[(($70)>>2)];HEAP32[((($69)+(4))>>2)]=HEAP32[((($70)+(4))>>2)];HEAP32[((($69)+(8))>>2)]=HEAP32[((($70)+(8))>>2)]; //@line 179 "enemyai.cpp"
 var $71=__Z14getUnitPointer23gameObjectPointerStruct($5); //@line 179 "enemyai.cpp"
 var $72=(($71+24)|0); //@line 179 "enemyai.cpp"
 var $73=HEAP32[(($72)>>2)]; //@line 179 "enemyai.cpp"
 var $74=($73|0)==5; //@line 179 "enemyai.cpp"
 if($74){label=11;break;}else{label=12;break;} //@line 179 "enemyai.cpp"
 case 11: 
 var $76=$1; //@line 184 "enemyai.cpp"
 var $77=(($76+224)|0); //@line 184 "enemyai.cpp"
 var $78=$77; //@line 184 "enemyai.cpp"
 var $79=(($78+20)|0); //@line 184 "enemyai.cpp"
 var $80=HEAP32[(($79)>>2)]; //@line 184 "enemyai.cpp"
 $unitScore=$80; //@line 184 "enemyai.cpp"
 label=13;break; //@line 186 "enemyai.cpp"
 case 12: 
 var $82=$1; //@line 189 "enemyai.cpp"
 var $83=(($82+224)|0); //@line 189 "enemyai.cpp"
 var $84=$83; //@line 189 "enemyai.cpp"
 var $85=(($84+16)|0); //@line 189 "enemyai.cpp"
 var $86=HEAP32[(($85)>>2)]; //@line 189 "enemyai.cpp"
 $unitScore=$86; //@line 189 "enemyai.cpp"
 label=13;break;
 case 13: 
 $statisticToUse=19632; //@line 194 "enemyai.cpp"
 label=16;break; //@line 195 "enemyai.cpp"
 case 14: 
 var $89=$1; //@line 198 "enemyai.cpp"
 var $90=(($89+224)|0); //@line 198 "enemyai.cpp"
 var $91=$90; //@line 198 "enemyai.cpp"
 var $92=(($91+4)|0); //@line 198 "enemyai.cpp"
 var $93=HEAP32[(($92)>>2)]; //@line 198 "enemyai.cpp"
 $unitScore=$93; //@line 198 "enemyai.cpp"
 $statisticToUse=19640; //@line 200 "enemyai.cpp"
 label=16;break; //@line 201 "enemyai.cpp"
 case 15: 
 $unitScore=0; //@line 203 "enemyai.cpp"
 label=16;break; //@line 204 "enemyai.cpp"
 case 16: 
 var $96=$unitScore; //@line 208 "enemyai.cpp"
 var $97=($96|0); //@line 208 "enemyai.cpp"
 var $98=__Z24allPlayersIncrementScored($97); //@line 208 "enemyai.cpp"
 var $99=$unitScore; //@line 210 "enemyai.cpp"
 var $100=$statisticToUse; //@line 210 "enemyai.cpp"
 var $101=HEAP32[(($100)>>2)]; //@line 210 "enemyai.cpp"
 var $102=((($101)+($99))|0); //@line 210 "enemyai.cpp"
 HEAP32[(($100)>>2)]=$102; //@line 210 "enemyai.cpp"
 STACKTOP=sp;return 1; //@line 212 "enemyai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23checkWaveAntigenerationR20vectorListNodeStructI15enemyUnitStructEPb($unit,$wasRemoved){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $wgUnit;
 var $combFrame=sp;
 var $wgFrame;
 $2=$unit;
 $3=$wasRemoved;
 var $4=$3; //@line 233 "enemyai.cpp"
 var $5=($4|0)==0; //@line 233 "enemyai.cpp"
 if($5){label=2;break;}else{label=3;break;} //@line 233 "enemyai.cpp"
 case 2: 
 $1=0; //@line 233 "enemyai.cpp"
 label=27;break; //@line 233 "enemyai.cpp"
 case 3: 
 var $8=$3; //@line 234 "enemyai.cpp"
 HEAP8[($8)]=0; //@line 234 "enemyai.cpp"
 var $9=__ZN15vectorListClassI17waveGenUnitStructE12getFirstNodeEv(18544); //@line 237 "enemyai.cpp"
 $wgUnit=$9; //@line 237 "enemyai.cpp"
 label=4;break; //@line 237 "enemyai.cpp"
 case 4: 
 var $11=$wgUnit; //@line 237 "enemyai.cpp"
 var $12=($11|0)!=0; //@line 237 "enemyai.cpp"
 if($12){label=5;break;}else{label=26;break;} //@line 237 "enemyai.cpp"
 case 5: 
 var $14=$wgUnit; //@line 241 "enemyai.cpp"
 var $15=(($14)|0); //@line 241 "enemyai.cpp"
 var $16=$15; //@line 241 "enemyai.cpp"
 var $17=(($16+130)|0); //@line 241 "enemyai.cpp"
 var $18=HEAP8[($17)]; //@line 241 "enemyai.cpp"
 var $19=(($18)&1); //@line 241 "enemyai.cpp"
 if($19){label=7;break;}else{label=6;break;} //@line 241 "enemyai.cpp"
 case 6: 
 label=25;break; //@line 241 "enemyai.cpp"
 case 7: 
 var $22=$wgUnit; //@line 243 "enemyai.cpp"
 var $23=(($22)|0); //@line 243 "enemyai.cpp"
 var $24=$23; //@line 243 "enemyai.cpp"
 var $25=(($24+24)|0); //@line 243 "enemyai.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 243 "enemyai.cpp"
 var $27=($26|0)==4; //@line 243 "enemyai.cpp"
 if($27){label=8;break;}else{label=24;break;} //@line 243 "enemyai.cpp"
 case 8: 
 var $29=$2; //@line 246 "enemyai.cpp"
 var $30=(($29)|0); //@line 246 "enemyai.cpp"
 var $31=$30; //@line 246 "enemyai.cpp"
 var $32=__Z24constructSlaverFullFrameP17genericUnitStructP15frameDataStruct($31,$combFrame); //@line 246 "enemyai.cpp"
 if($32){label=10;break;}else{label=9;break;} //@line 246 "enemyai.cpp"
 case 9: 
 $1=0; //@line 247 "enemyai.cpp"
 label=27;break; //@line 247 "enemyai.cpp"
 case 10: 
 var $35=$wgUnit; //@line 250 "enemyai.cpp"
 var $36=(($35)|0); //@line 250 "enemyai.cpp"
 var $37=$36; //@line 250 "enemyai.cpp"
 var $38=__Z12getUnitFrameP17genericUnitStruct($37); //@line 250 "enemyai.cpp"
 $wgFrame=$38; //@line 250 "enemyai.cpp"
 var $39=$wgFrame; //@line 251 "enemyai.cpp"
 var $40=($39|0)==0; //@line 251 "enemyai.cpp"
 if($40){label=11;break;}else{label=12;break;} //@line 251 "enemyai.cpp"
 case 11: 
 $1=0; //@line 251 "enemyai.cpp"
 label=27;break; //@line 251 "enemyai.cpp"
 case 12: 
 var $43=$2; //@line 255 "enemyai.cpp"
 var $44=(($43)|0); //@line 255 "enemyai.cpp"
 var $45=$44; //@line 255 "enemyai.cpp"
 var $46=(($45+8)|0); //@line 255 "enemyai.cpp"
 var $47=HEAPF64[(($46)>>3)]; //@line 255 "enemyai.cpp"
 var $48=(($combFrame+40)|0); //@line 255 "enemyai.cpp"
 var $49=HEAP32[(($48)>>2)]; //@line 255 "enemyai.cpp"
 var $50=($49|0); //@line 255 "enemyai.cpp"
 var $51=($47)-($50); //@line 255 "enemyai.cpp"
 var $52=$wgUnit; //@line 255 "enemyai.cpp"
 var $53=(($52)|0); //@line 255 "enemyai.cpp"
 var $54=$53; //@line 255 "enemyai.cpp"
 var $55=(($54+8)|0); //@line 255 "enemyai.cpp"
 var $56=HEAPF64[(($55)>>3)]; //@line 255 "enemyai.cpp"
 var $57=$wgFrame; //@line 255 "enemyai.cpp"
 var $58=(($57+40)|0); //@line 255 "enemyai.cpp"
 var $59=HEAP32[(($58)>>2)]; //@line 255 "enemyai.cpp"
 var $60=($59|0); //@line 255 "enemyai.cpp"
 var $61=($56)-($60); //@line 255 "enemyai.cpp"
 var $62=$wgFrame; //@line 255 "enemyai.cpp"
 var $63=(($62+24)|0); //@line 255 "enemyai.cpp"
 var $64=HEAP32[(($63)>>2)]; //@line 255 "enemyai.cpp"
 var $65=($64|0); //@line 255 "enemyai.cpp"
 var $66=($61)+($65); //@line 255 "enemyai.cpp"
 var $67=$51>=$66; //@line 255 "enemyai.cpp"
 if($67){label=13;break;}else{label=23;break;} //@line 255 "enemyai.cpp"
 case 13: 
 var $69=$2; //@line 255 "enemyai.cpp"
 var $70=(($69)|0); //@line 255 "enemyai.cpp"
 var $71=$70; //@line 255 "enemyai.cpp"
 var $72=(($71+8)|0); //@line 255 "enemyai.cpp"
 var $73=HEAPF64[(($72)>>3)]; //@line 255 "enemyai.cpp"
 var $74=(($combFrame+16)|0); //@line 255 "enemyai.cpp"
 var $75=HEAP32[(($74)>>2)]; //@line 255 "enemyai.cpp"
 var $76=($75|0); //@line 255 "enemyai.cpp"
 var $77=($73)+($76); //@line 255 "enemyai.cpp"
 var $78=(($combFrame+40)|0); //@line 255 "enemyai.cpp"
 var $79=HEAP32[(($78)>>2)]; //@line 255 "enemyai.cpp"
 var $80=($79|0); //@line 255 "enemyai.cpp"
 var $81=($77)-($80); //@line 255 "enemyai.cpp"
 var $82=($81)-(1); //@line 255 "enemyai.cpp"
 var $83=$wgUnit; //@line 255 "enemyai.cpp"
 var $84=(($83)|0); //@line 255 "enemyai.cpp"
 var $85=$84; //@line 255 "enemyai.cpp"
 var $86=(($85+8)|0); //@line 255 "enemyai.cpp"
 var $87=HEAPF64[(($86)>>3)]; //@line 255 "enemyai.cpp"
 var $88=$wgFrame; //@line 255 "enemyai.cpp"
 var $89=(($88+40)|0); //@line 255 "enemyai.cpp"
 var $90=HEAP32[(($89)>>2)]; //@line 255 "enemyai.cpp"
 var $91=($90|0); //@line 255 "enemyai.cpp"
 var $92=($87)-($91); //@line 255 "enemyai.cpp"
 var $93=$wgFrame; //@line 255 "enemyai.cpp"
 var $94=(($93+24)|0); //@line 255 "enemyai.cpp"
 var $95=HEAP32[(($94)>>2)]; //@line 255 "enemyai.cpp"
 var $96=($95|0); //@line 255 "enemyai.cpp"
 var $97=($92)+($96); //@line 255 "enemyai.cpp"
 var $98=$wgFrame; //@line 255 "enemyai.cpp"
 var $99=(($98+32)|0); //@line 255 "enemyai.cpp"
 var $100=HEAP32[(($99)>>2)]; //@line 255 "enemyai.cpp"
 var $101=($100|0); //@line 255 "enemyai.cpp"
 var $102=($97)+($101); //@line 255 "enemyai.cpp"
 var $103=($102)-(1); //@line 255 "enemyai.cpp"
 var $104=$82<=$103; //@line 255 "enemyai.cpp"
 if($104){label=14;break;}else{label=23;break;} //@line 255 "enemyai.cpp"
 case 14: 
 var $106=$2; //@line 255 "enemyai.cpp"
 var $107=(($106)|0); //@line 255 "enemyai.cpp"
 var $108=$107; //@line 255 "enemyai.cpp"
 var $109=(($108+16)|0); //@line 255 "enemyai.cpp"
 var $110=HEAPF64[(($109)>>3)]; //@line 255 "enemyai.cpp"
 var $111=(($combFrame+44)|0); //@line 255 "enemyai.cpp"
 var $112=HEAP32[(($111)>>2)]; //@line 255 "enemyai.cpp"
 var $113=($112|0); //@line 255 "enemyai.cpp"
 var $114=($110)-($113); //@line 255 "enemyai.cpp"
 var $115=$wgUnit; //@line 255 "enemyai.cpp"
 var $116=(($115)|0); //@line 255 "enemyai.cpp"
 var $117=$116; //@line 255 "enemyai.cpp"
 var $118=(($117+16)|0); //@line 255 "enemyai.cpp"
 var $119=HEAPF64[(($118)>>3)]; //@line 255 "enemyai.cpp"
 var $120=$wgFrame; //@line 255 "enemyai.cpp"
 var $121=(($120+44)|0); //@line 255 "enemyai.cpp"
 var $122=HEAP32[(($121)>>2)]; //@line 255 "enemyai.cpp"
 var $123=($122|0); //@line 255 "enemyai.cpp"
 var $124=($119)-($123); //@line 255 "enemyai.cpp"
 var $125=$wgFrame; //@line 255 "enemyai.cpp"
 var $126=(($125+28)|0); //@line 255 "enemyai.cpp"
 var $127=HEAP32[(($126)>>2)]; //@line 255 "enemyai.cpp"
 var $128=($127|0); //@line 255 "enemyai.cpp"
 var $129=($124)+($128); //@line 255 "enemyai.cpp"
 var $130=$114>=$129; //@line 255 "enemyai.cpp"
 if($130){label=15;break;}else{label=23;break;} //@line 255 "enemyai.cpp"
 case 15: 
 var $132=$2; //@line 255 "enemyai.cpp"
 var $133=(($132)|0); //@line 255 "enemyai.cpp"
 var $134=$133; //@line 255 "enemyai.cpp"
 var $135=(($134+16)|0); //@line 255 "enemyai.cpp"
 var $136=HEAPF64[(($135)>>3)]; //@line 255 "enemyai.cpp"
 var $137=(($combFrame+20)|0); //@line 255 "enemyai.cpp"
 var $138=HEAP32[(($137)>>2)]; //@line 255 "enemyai.cpp"
 var $139=($138|0); //@line 255 "enemyai.cpp"
 var $140=($136)+($139); //@line 255 "enemyai.cpp"
 var $141=(($combFrame+44)|0); //@line 255 "enemyai.cpp"
 var $142=HEAP32[(($141)>>2)]; //@line 255 "enemyai.cpp"
 var $143=($142|0); //@line 255 "enemyai.cpp"
 var $144=($140)-($143); //@line 255 "enemyai.cpp"
 var $145=($144)-(1); //@line 255 "enemyai.cpp"
 var $146=$wgUnit; //@line 255 "enemyai.cpp"
 var $147=(($146)|0); //@line 255 "enemyai.cpp"
 var $148=$147; //@line 255 "enemyai.cpp"
 var $149=(($148+16)|0); //@line 255 "enemyai.cpp"
 var $150=HEAPF64[(($149)>>3)]; //@line 255 "enemyai.cpp"
 var $151=$wgFrame; //@line 255 "enemyai.cpp"
 var $152=(($151+44)|0); //@line 255 "enemyai.cpp"
 var $153=HEAP32[(($152)>>2)]; //@line 255 "enemyai.cpp"
 var $154=($153|0); //@line 255 "enemyai.cpp"
 var $155=($150)-($154); //@line 255 "enemyai.cpp"
 var $156=$wgFrame; //@line 255 "enemyai.cpp"
 var $157=(($156+28)|0); //@line 255 "enemyai.cpp"
 var $158=HEAP32[(($157)>>2)]; //@line 255 "enemyai.cpp"
 var $159=($158|0); //@line 255 "enemyai.cpp"
 var $160=($155)+($159); //@line 255 "enemyai.cpp"
 var $161=$wgFrame; //@line 255 "enemyai.cpp"
 var $162=(($161+36)|0); //@line 255 "enemyai.cpp"
 var $163=HEAP32[(($162)>>2)]; //@line 255 "enemyai.cpp"
 var $164=($163|0); //@line 255 "enemyai.cpp"
 var $165=($160)+($164); //@line 255 "enemyai.cpp"
 var $166=($165)-(1); //@line 255 "enemyai.cpp"
 var $167=$145<=$166; //@line 255 "enemyai.cpp"
 if($167){label=16;break;}else{label=23;break;} //@line 255 "enemyai.cpp"
 case 16: 
 var $169=$2; //@line 269 "enemyai.cpp"
 var $170=(($169)|0); //@line 269 "enemyai.cpp"
 var $171=__Z14enemyUnitFreedP15enemyUnitStruct($170); //@line 269 "enemyai.cpp"
 if($171){label=18;break;}else{label=17;break;} //@line 269 "enemyai.cpp"
 case 17: 
 $1=0; //@line 269 "enemyai.cpp"
 label=27;break; //@line 269 "enemyai.cpp"
 case 18: 
 var $174=$2; //@line 273 "enemyai.cpp"
 var $175=(($174)|0); //@line 273 "enemyai.cpp"
 var $176=$175; //@line 273 "enemyai.cpp"
 var $177=__Z12freeSlavesOfP17genericUnitStruct($176); //@line 273 "enemyai.cpp"
 if($177){label=20;break;}else{label=19;break;} //@line 273 "enemyai.cpp"
 case 19: 
 $1=0; //@line 273 "enemyai.cpp"
 label=27;break; //@line 273 "enemyai.cpp"
 case 20: 
 var $180=$2; //@line 275 "enemyai.cpp"
 var $181=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$180); //@line 275 "enemyai.cpp"
 var $182=__ZN15vectorListClassI15enemyUnitStructE10removeNodeEm(19752,$181); //@line 275 "enemyai.cpp"
 if($182){label=22;break;}else{label=21;break;} //@line 275 "enemyai.cpp"
 case 21: 
 $1=0; //@line 276 "enemyai.cpp"
 label=27;break; //@line 276 "enemyai.cpp"
 case 22: 
 var $185=$3; //@line 280 "enemyai.cpp"
 HEAP8[($185)]=1; //@line 280 "enemyai.cpp"
 $1=1; //@line 281 "enemyai.cpp"
 label=27;break; //@line 281 "enemyai.cpp"
 case 23: 
 label=24;break; //@line 283 "enemyai.cpp"
 case 24: 
 label=25;break; //@line 284 "enemyai.cpp"
 case 25: 
 var $189=$wgUnit; //@line 238 "enemyai.cpp"
 var $190=__ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(18544,$189); //@line 238 "enemyai.cpp"
 $wgUnit=$190; //@line 238 "enemyai.cpp"
 label=4;break; //@line 238 "enemyai.cpp"
 case 26: 
 $1=1; //@line 286 "enemyai.cpp"
 label=27;break; //@line 286 "enemyai.cpp"
 case 27: 
 var $193=$1; //@line 287 "enemyai.cpp"
 STACKTOP=sp;return $193; //@line 287 "enemyai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE12getFirstNodeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $5=HEAP32[(($4)>>2)]; //@line 320 "./vectorlist.h"
 var $6=(($5)|0); //@line 320 "./vectorlist.h"
 var $7=(($6+208)|0); //@line 320 "./vectorlist.h"
 var $8=HEAP8[($7)]; //@line 320 "./vectorlist.h"
 var $9=(($8)&1); //@line 320 "./vectorlist.h"
 if($9){label=3;break;}else{label=2;break;} //@line 320 "./vectorlist.h"
 case 2: 
 var $11=(($3+20)|0); //@line 320 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 320 "./vectorlist.h"
 $1=$12; //@line 320 "./vectorlist.h"
 label=4;break; //@line 320 "./vectorlist.h"
 case 3: 
 var $14=(($3+20)|0); //@line 321 "./vectorlist.h"
 var $15=HEAP32[(($14)>>2)]; //@line 321 "./vectorlist.h"
 var $16=__ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($3,$15); //@line 321 "./vectorlist.h"
 $1=$16; //@line 321 "./vectorlist.h"
 label=4;break; //@line 321 "./vectorlist.h"
 case 4: 
 var $18=$1; //@line 322 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 322 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE10removeNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 262 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 262 "./vectorlist.h"
 var $7=(($6)&1); //@line 262 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 262 "./vectorlist.h"
 case 2: 
 $1=0; //@line 262 "./vectorlist.h"
 label=17;break; //@line 262 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 265 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 265 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 265 "./vectorlist.h"
 var $13=(($12+((($10)*(264))&-1))|0); //@line 265 "./vectorlist.h"
 var $14=(($13+256)|0); //@line 265 "./vectorlist.h"
 HEAP8[($14)]=1; //@line 265 "./vectorlist.h"
 var $15=$3; //@line 269 "./vectorlist.h"
 var $16=(($4+12)|0); //@line 269 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 269 "./vectorlist.h"
 var $18=($15>>>0)<($17>>>0); //@line 269 "./vectorlist.h"
 if($18){label=4;break;}else{label=5;break;} //@line 269 "./vectorlist.h"
 case 4: 
 var $20=$3; //@line 271 "./vectorlist.h"
 var $21=(($4+12)|0); //@line 271 "./vectorlist.h"
 HEAP32[(($21)>>2)]=$20; //@line 271 "./vectorlist.h"
 label=5;break; //@line 272 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 275 "./vectorlist.h"
 var $24=(($4+8)|0); //@line 275 "./vectorlist.h"
 var $25=HEAP32[(($24)>>2)]; //@line 275 "./vectorlist.h"
 var $26=($23|0)==($25|0); //@line 275 "./vectorlist.h"
 if($26){label=6;break;}else{label=16;break;} //@line 275 "./vectorlist.h"
 case 6: 
 var $28=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $29=HEAP32[(($28)>>2)]; //@line 282 "./vectorlist.h"
 var $30=(($4+8)|0); //@line 282 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 282 "./vectorlist.h"
 var $32=(($29+((($31)*(264))&-1))|0); //@line 282 "./vectorlist.h"
 var $33=((($32)-(264))|0); //@line 282 "./vectorlist.h"
 $node=$33; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 7: 
 var $35=$node; //@line 282 "./vectorlist.h"
 var $36=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 282 "./vectorlist.h"
 var $38=($35>>>0)>=($37>>>0); //@line 282 "./vectorlist.h"
 if($38){label=8;break;}else{label=12;break;} //@line 282 "./vectorlist.h"
 case 8: 
 var $40=$node; //@line 285 "./vectorlist.h"
 var $41=(($40+256)|0); //@line 285 "./vectorlist.h"
 var $42=HEAP8[($41)]; //@line 285 "./vectorlist.h"
 var $43=(($42)&1); //@line 285 "./vectorlist.h"
 if($43){label=10;break;}else{label=9;break;} //@line 285 "./vectorlist.h"
 case 9: 
 label=12;break; //@line 285 "./vectorlist.h"
 case 10: 
 label=11;break; //@line 286 "./vectorlist.h"
 case 11: 
 var $47=$node; //@line 282 "./vectorlist.h"
 var $48=((($47)-(264))|0); //@line 282 "./vectorlist.h"
 $node=$48; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 12: 
 var $50=$node; //@line 289 "./vectorlist.h"
 var $51=(($4+20)|0); //@line 289 "./vectorlist.h"
 var $52=HEAP32[(($51)>>2)]; //@line 289 "./vectorlist.h"
 var $53=($50>>>0)<($52>>>0); //@line 289 "./vectorlist.h"
 if($53){label=13;break;}else{label=14;break;} //@line 289 "./vectorlist.h"
 case 13: 
 var $55=(($4+4)|0); //@line 291 "./vectorlist.h"
 var $56=HEAP32[(($55)>>2)]; //@line 291 "./vectorlist.h"
 var $57=(($4+8)|0); //@line 291 "./vectorlist.h"
 HEAP32[(($57)>>2)]=$56; //@line 291 "./vectorlist.h"
 label=15;break; //@line 292 "./vectorlist.h"
 case 14: 
 var $59=$node; //@line 294 "./vectorlist.h"
 var $60=(($4+20)|0); //@line 294 "./vectorlist.h"
 var $61=HEAP32[(($60)>>2)]; //@line 294 "./vectorlist.h"
 var $62=$59; //@line 294 "./vectorlist.h"
 var $63=$61; //@line 294 "./vectorlist.h"
 var $64=((($62)-($63))|0); //@line 294 "./vectorlist.h"
 var $65=(((($64|0))/(264))&-1); //@line 294 "./vectorlist.h"
 var $66=(($4+8)|0); //@line 294 "./vectorlist.h"
 HEAP32[(($66)>>2)]=$65; //@line 294 "./vectorlist.h"
 label=15;break;
 case 15: 
 label=16;break; //@line 297 "./vectorlist.h"
 case 16: 
 $1=1; //@line 299 "./vectorlist.h"
 label=17;break; //@line 299 "./vectorlist.h"
 case 17: 
 var $70=$1; //@line 300 "./vectorlist.h"
 STACKTOP=sp;return $70; //@line 300 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E($this,$since){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$since;
 var $4=$2;
 var $5=$3; //@line 348 "./vectorlist.h"
 var $6=(($5+216)|0); //@line 348 "./vectorlist.h"
 $3=$6; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 2: 
 var $8=$3; //@line 348 "./vectorlist.h"
 var $9=(($4+20)|0); //@line 348 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 348 "./vectorlist.h"
 var $11=(($4+4)|0); //@line 348 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 348 "./vectorlist.h"
 var $13=(($10+((($12)*(216))&-1))|0); //@line 348 "./vectorlist.h"
 var $14=($8>>>0)<($13>>>0); //@line 348 "./vectorlist.h"
 if($14){label=3;break;}else{label=7;break;} //@line 348 "./vectorlist.h"
 case 3: 
 var $16=$3; //@line 351 "./vectorlist.h"
 var $17=(($16+208)|0); //@line 351 "./vectorlist.h"
 var $18=HEAP8[($17)]; //@line 351 "./vectorlist.h"
 var $19=(($18)&1); //@line 351 "./vectorlist.h"
 if($19){label=5;break;}else{label=4;break;} //@line 351 "./vectorlist.h"
 case 4: 
 label=7;break; //@line 351 "./vectorlist.h"
 case 5: 
 label=6;break; //@line 352 "./vectorlist.h"
 case 6: 
 var $23=$3; //@line 348 "./vectorlist.h"
 var $24=(($23+216)|0); //@line 348 "./vectorlist.h"
 $3=$24; //@line 348 "./vectorlist.h"
 label=2;break; //@line 348 "./vectorlist.h"
 case 7: 
 var $26=$3; //@line 354 "./vectorlist.h"
 var $27=(($4+20)|0); //@line 354 "./vectorlist.h"
 var $28=HEAP32[(($27)>>2)]; //@line 354 "./vectorlist.h"
 var $29=(($4+4)|0); //@line 354 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 354 "./vectorlist.h"
 var $31=(($28+((($30)*(216))&-1))|0); //@line 354 "./vectorlist.h"
 var $32=($26>>>0)>=($31>>>0); //@line 354 "./vectorlist.h"
 if($32){label=8;break;}else{label=9;break;} //@line 354 "./vectorlist.h"
 case 8: 
 $1=0; //@line 354 "./vectorlist.h"
 label=10;break; //@line 354 "./vectorlist.h"
 case 9: 
 var $35=$3; //@line 355 "./vectorlist.h"
 $1=$35; //@line 355 "./vectorlist.h"
 label=10;break; //@line 355 "./vectorlist.h"
 case 10: 
 var $37=$1; //@line 356 "./vectorlist.h"
 STACKTOP=sp;return $37; //@line 356 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13executeUnitAImR20vectorListNodeStructI15enemyUnitStructE($frameNumber,$unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $myType;
 var $myUnitFrame;
 var $wasGoingToPoint;
 var $event;
 var $framesAmount;
 var $wasRemoved=sp;
 $2=$frameNumber;
 $3=$unit;
 var $4=$3; //@line 296 "enemyai.cpp"
 var $5=(($4)|0); //@line 296 "enemyai.cpp"
 var $6=$5; //@line 296 "enemyai.cpp"
 var $7=(($6+24)|0); //@line 296 "enemyai.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 296 "enemyai.cpp"
 var $9=((1904+((($8)*(24))&-1))|0); //@line 296 "enemyai.cpp"
 $myType=$9; //@line 296 "enemyai.cpp"
 var $10=$3; //@line 297 "enemyai.cpp"
 var $11=(($10)|0); //@line 297 "enemyai.cpp"
 var $12=$11; //@line 297 "enemyai.cpp"
 var $13=(($12+88)|0); //@line 297 "enemyai.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 297 "enemyai.cpp"
 var $15=$myType; //@line 297 "enemyai.cpp"
 var $16=(($15+16)|0); //@line 297 "enemyai.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 297 "enemyai.cpp"
 var $18=(($17+((($14)*(80))&-1))|0); //@line 297 "enemyai.cpp"
 $myUnitFrame=$18; //@line 297 "enemyai.cpp"
 var $19=$3; //@line 301 "enemyai.cpp"
 var $20=(($19)|0); //@line 301 "enemyai.cpp"
 var $21=$20; //@line 301 "enemyai.cpp"
 var $22=(($21+156)|0); //@line 301 "enemyai.cpp"
 var $23=HEAP8[($22)]; //@line 301 "enemyai.cpp"
 var $24=(($23)&1); //@line 301 "enemyai.cpp"
 var $25=($24&1); //@line 301 "enemyai.cpp"
 $wasGoingToPoint=$25; //@line 301 "enemyai.cpp"
 var $26=$3; //@line 305 "enemyai.cpp"
 var $27=(($26)|0); //@line 305 "enemyai.cpp"
 var $28=$27; //@line 305 "enemyai.cpp"
 var $29=__Z13autoFrameUnitP17genericUnitStruct($28); //@line 305 "enemyai.cpp"
 if($29){label=3;break;}else{label=2;break;} //@line 305 "enemyai.cpp"
 case 2: 
 $1=0; //@line 305 "enemyai.cpp"
 label=88;break; //@line 305 "enemyai.cpp"
 case 3: 
 var $32=$3; //@line 309 "enemyai.cpp"
 var $33=(($32)|0); //@line 309 "enemyai.cpp"
 var $34=$33; //@line 309 "enemyai.cpp"
 var $35=(($34+88)|0); //@line 309 "enemyai.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 309 "enemyai.cpp"
 if(($36|0)==-1){ label=4;break;}else{label=9;break;}
 case 4: 
 var $38=$3; //@line 314 "enemyai.cpp"
 var $39=(($38)|0); //@line 314 "enemyai.cpp"
 var $40=$39; //@line 314 "enemyai.cpp"
 var $41=__Z12freeSlavesOfP17genericUnitStruct($40); //@line 314 "enemyai.cpp"
 if($41){label=6;break;}else{label=5;break;} //@line 314 "enemyai.cpp"
 case 5: 
 $1=0; //@line 314 "enemyai.cpp"
 label=88;break; //@line 314 "enemyai.cpp"
 case 6: 
 var $44=$3; //@line 316 "enemyai.cpp"
 var $45=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$44); //@line 316 "enemyai.cpp"
 var $46=__ZN15vectorListClassI15enemyUnitStructE10removeNodeEm(19752,$45); //@line 316 "enemyai.cpp"
 if($46){label=8;break;}else{label=7;break;} //@line 316 "enemyai.cpp"
 case 7: 
 $1=0; //@line 317 "enemyai.cpp"
 label=88;break; //@line 317 "enemyai.cpp"
 case 8: 
 $1=1; //@line 319 "enemyai.cpp"
 label=88;break; //@line 319 "enemyai.cpp"
 case 9: 
 label=10;break; //@line 323 "enemyai.cpp"
 case 10: 
 var $51=$3; //@line 328 "enemyai.cpp"
 var $52=(($51)|0); //@line 328 "enemyai.cpp"
 var $53=$52; //@line 328 "enemyai.cpp"
 var $54=__Z12getUnitFrameP17genericUnitStruct($53); //@line 328 "enemyai.cpp"
 $myUnitFrame=$54; //@line 328 "enemyai.cpp"
 var $55=$3; //@line 333 "enemyai.cpp"
 var $56=(($55)|0); //@line 333 "enemyai.cpp"
 var $57=$56; //@line 333 "enemyai.cpp"
 var $58=(($57+132)|0); //@line 333 "enemyai.cpp"
 var $59=(($58+4)|0); //@line 333 "enemyai.cpp"
 var $60=HEAP8[($59)]; //@line 333 "enemyai.cpp"
 var $61=($60&255); //@line 333 "enemyai.cpp"
 var $62=($61|0)!=0; //@line 333 "enemyai.cpp"
 if($62){label=11;break;}else{label=12;break;} //@line 333 "enemyai.cpp"
 case 11: 
 $1=1; //@line 334 "enemyai.cpp"
 label=88;break; //@line 334 "enemyai.cpp"
 case 12: 
 var $65=$3; //@line 337 "enemyai.cpp"
 var $66=(($65)|0); //@line 337 "enemyai.cpp"
 var $67=$66; //@line 337 "enemyai.cpp"
 var $68=(($67+96)|0); //@line 337 "enemyai.cpp"
 var $69=HEAP8[($68)]; //@line 337 "enemyai.cpp"
 var $70=(($69)&1); //@line 337 "enemyai.cpp"
 if($70){label=13;break;}else{label=14;break;} //@line 337 "enemyai.cpp"
 case 13: 
 var $72=HEAPF64[((19560)>>3)]; //@line 338 "enemyai.cpp"
 var $73=$3; //@line 338 "enemyai.cpp"
 var $74=(($73)|0); //@line 338 "enemyai.cpp"
 var $75=$74; //@line 338 "enemyai.cpp"
 var $76=(($75+104)|0); //@line 338 "enemyai.cpp"
 var $77=HEAPF64[(($76)>>3)]; //@line 338 "enemyai.cpp"
 var $78=($72)+($77); //@line 338 "enemyai.cpp"
 var $79=$3; //@line 338 "enemyai.cpp"
 var $80=(($79)|0); //@line 338 "enemyai.cpp"
 var $81=$80; //@line 338 "enemyai.cpp"
 var $82=(($81+8)|0); //@line 338 "enemyai.cpp"
 HEAPF64[(($82)>>3)]=$78; //@line 338 "enemyai.cpp"
 var $83=HEAPF64[((19568)>>3)]; //@line 339 "enemyai.cpp"
 var $84=$3; //@line 339 "enemyai.cpp"
 var $85=(($84)|0); //@line 339 "enemyai.cpp"
 var $86=$85; //@line 339 "enemyai.cpp"
 var $87=(($86+112)|0); //@line 339 "enemyai.cpp"
 var $88=HEAPF64[(($87)>>3)]; //@line 339 "enemyai.cpp"
 var $89=($83)+($88); //@line 339 "enemyai.cpp"
 var $90=$3; //@line 339 "enemyai.cpp"
 var $91=(($90)|0); //@line 339 "enemyai.cpp"
 var $92=$91; //@line 339 "enemyai.cpp"
 var $93=(($92+16)|0); //@line 339 "enemyai.cpp"
 HEAPF64[(($93)>>3)]=$89; //@line 339 "enemyai.cpp"
 label=14;break; //@line 340 "enemyai.cpp"
 case 14: 
 var $95=$3; //@line 344 "enemyai.cpp"
 var $96=(($95)|0); //@line 344 "enemyai.cpp"
 var $97=(($96+208)|0); //@line 344 "enemyai.cpp"
 var $98=HEAP32[(($97)>>2)]; //@line 344 "enemyai.cpp"
 var $99=($98|0)>0; //@line 344 "enemyai.cpp"
 if($99){label=15;break;}else{label=23;break;} //@line 344 "enemyai.cpp"
 case 15: 
 var $101=$3; //@line 345 "enemyai.cpp"
 var $102=(($101)|0); //@line 345 "enemyai.cpp"
 var $103=(($102+208)|0); //@line 345 "enemyai.cpp"
 var $104=HEAP32[(($103)>>2)]; //@line 345 "enemyai.cpp"
 var $105=((($104)-(1))|0); //@line 345 "enemyai.cpp"
 HEAP32[(($103)>>2)]=$105; //@line 345 "enemyai.cpp"
 var $106=$3; //@line 347 "enemyai.cpp"
 var $107=(($106)|0); //@line 347 "enemyai.cpp"
 var $108=(($107+208)|0); //@line 347 "enemyai.cpp"
 var $109=HEAP32[(($108)>>2)]; //@line 347 "enemyai.cpp"
 var $110=($109|0)==0; //@line 347 "enemyai.cpp"
 if($110){label=16;break;}else{label=22;break;} //@line 347 "enemyai.cpp"
 case 16: 
 var $112=$3; //@line 347 "enemyai.cpp"
 var $113=(($112)|0); //@line 347 "enemyai.cpp"
 var $114=(($113+200)|0); //@line 347 "enemyai.cpp"
 var $115=HEAPF64[(($114)>>3)]; //@line 347 "enemyai.cpp"
 var $116=$115>0; //@line 347 "enemyai.cpp"
 if($116){label=17;break;}else{label=22;break;} //@line 347 "enemyai.cpp"
 case 17: 
 var $118=$3; //@line 350 "enemyai.cpp"
 var $119=(($118)|0); //@line 350 "enemyai.cpp"
 var $120=$119; //@line 350 "enemyai.cpp"
 var $121=(($120+24)|0); //@line 350 "enemyai.cpp"
 var $122=HEAP32[(($121)>>2)]; //@line 350 "enemyai.cpp"
 if(($122|0)==6|($122|0)==7){ label=18;break;}else{label=21;break;}
 case 18: 
 var $124=$3; //@line 353 "enemyai.cpp"
 var $125=__Z32carrierFinishUntouchabilityEventR20vectorListNodeStructI15enemyUnitStructE($124); //@line 353 "enemyai.cpp"
 if($125){label=20;break;}else{label=19;break;} //@line 353 "enemyai.cpp"
 case 19: 
 $1=0; //@line 354 "enemyai.cpp"
 label=88;break; //@line 354 "enemyai.cpp"
 case 20: 
 label=21;break; //@line 355 "enemyai.cpp"
 case 21: 
 var $129=$3; //@line 359 "enemyai.cpp"
 var $130=(($129)|0); //@line 359 "enemyai.cpp"
 var $131=$130; //@line 359 "enemyai.cpp"
 var $132=__Z12getUnitFrameP17genericUnitStruct($131); //@line 359 "enemyai.cpp"
 $myUnitFrame=$132; //@line 359 "enemyai.cpp"
 label=22;break; //@line 361 "enemyai.cpp"
 case 22: 
 label=23;break; //@line 362 "enemyai.cpp"
 case 23: 
 var $135=$3; //@line 364 "enemyai.cpp"
 var $136=(($135)|0); //@line 364 "enemyai.cpp"
 var $137=(($136+212)|0); //@line 364 "enemyai.cpp"
 var $138=HEAP32[(($137)>>2)]; //@line 364 "enemyai.cpp"
 var $139=($138|0)>0; //@line 364 "enemyai.cpp"
 if($139){label=24;break;}else{label=25;break;} //@line 364 "enemyai.cpp"
 case 24: 
 var $141=$3; //@line 365 "enemyai.cpp"
 var $142=(($141)|0); //@line 365 "enemyai.cpp"
 var $143=(($142+212)|0); //@line 365 "enemyai.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 365 "enemyai.cpp"
 var $145=((($144)-(1))|0); //@line 365 "enemyai.cpp"
 HEAP32[(($143)>>2)]=$145; //@line 365 "enemyai.cpp"
 label=25;break; //@line 365 "enemyai.cpp"
 case 25: 
 var $147=$3; //@line 369 "enemyai.cpp"
 var $148=(($147)|0); //@line 369 "enemyai.cpp"
 var $149=$148; //@line 369 "enemyai.cpp"
 var $150=(($149+156)|0); //@line 369 "enemyai.cpp"
 var $151=HEAP8[($150)]; //@line 369 "enemyai.cpp"
 var $152=(($151)&1); //@line 369 "enemyai.cpp"
 if($152){label=26;break;}else{label=29;break;} //@line 369 "enemyai.cpp"
 case 26: 
 var $154=$3; //@line 370 "enemyai.cpp"
 var $155=(($154)|0); //@line 370 "enemyai.cpp"
 var $156=$155; //@line 370 "enemyai.cpp"
 var $157=__Z23unintelligentLinealMoveP17genericUnitStruct($156); //@line 370 "enemyai.cpp"
 if($157){label=28;break;}else{label=27;break;} //@line 370 "enemyai.cpp"
 case 27: 
 $1=0; //@line 371 "enemyai.cpp"
 label=88;break; //@line 371 "enemyai.cpp"
 case 28: 
 label=30;break; //@line 372 "enemyai.cpp"
 case 29: 
 label=30;break;
 case 30: 
 var $162=$wasGoingToPoint; //@line 394 "enemyai.cpp"
 var $163=(($162)&1); //@line 394 "enemyai.cpp"
 if($163){label=31;break;}else{label=47;break;} //@line 394 "enemyai.cpp"
 case 31: 
 var $165=$3; //@line 394 "enemyai.cpp"
 var $166=(($165)|0); //@line 394 "enemyai.cpp"
 var $167=$166; //@line 394 "enemyai.cpp"
 var $168=(($167+156)|0); //@line 394 "enemyai.cpp"
 var $169=HEAP8[($168)]; //@line 394 "enemyai.cpp"
 var $170=(($169)&1); //@line 394 "enemyai.cpp"
 if($170){label=47;break;}else{label=32;break;} //@line 394 "enemyai.cpp"
 case 32: 
 var $172=$3; //@line 400 "enemyai.cpp"
 var $173=(($172)|0); //@line 400 "enemyai.cpp"
 var $174=$173; //@line 400 "enemyai.cpp"
 var $175=(($174+24)|0); //@line 400 "enemyai.cpp"
 var $176=HEAP32[(($175)>>2)]; //@line 400 "enemyai.cpp"
 var $177=($176|0)==7; //@line 400 "enemyai.cpp"
 if($177){label=34;break;}else{label=33;break;} //@line 400 "enemyai.cpp"
 case 33: 
 var $179=$3; //@line 400 "enemyai.cpp"
 var $180=(($179)|0); //@line 400 "enemyai.cpp"
 var $181=$180; //@line 400 "enemyai.cpp"
 var $182=(($181+24)|0); //@line 400 "enemyai.cpp"
 var $183=HEAP32[(($182)>>2)]; //@line 400 "enemyai.cpp"
 var $184=($183|0)==6; //@line 400 "enemyai.cpp"
 if($184){label=34;break;}else{label=37;break;} //@line 400 "enemyai.cpp"
 case 34: 
 var $186=$3; //@line 404 "enemyai.cpp"
 var $187=__Z30carrierLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($186); //@line 404 "enemyai.cpp"
 if($187){label=36;break;}else{label=35;break;} //@line 404 "enemyai.cpp"
 case 35: 
 $1=0; //@line 405 "enemyai.cpp"
 label=88;break; //@line 405 "enemyai.cpp"
 case 36: 
 label=37;break; //@line 406 "enemyai.cpp"
 case 37: 
 var $191=$3; //@line 409 "enemyai.cpp"
 var $192=(($191)|0); //@line 409 "enemyai.cpp"
 var $193=$192; //@line 409 "enemyai.cpp"
 var $194=(($193+24)|0); //@line 409 "enemyai.cpp"
 var $195=HEAP32[(($194)>>2)]; //@line 409 "enemyai.cpp"
 var $196=($195|0)==5; //@line 409 "enemyai.cpp"
 if($196){label=38;break;}else{label=41;break;} //@line 409 "enemyai.cpp"
 case 38: 
 var $198=$3; //@line 412 "enemyai.cpp"
 var $199=__Z27headLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($198); //@line 412 "enemyai.cpp"
 if($199){label=40;break;}else{label=39;break;} //@line 412 "enemyai.cpp"
 case 39: 
 $1=0; //@line 413 "enemyai.cpp"
 label=88;break; //@line 413 "enemyai.cpp"
 case 40: 
 label=41;break; //@line 414 "enemyai.cpp"
 case 41: 
 var $203=$3; //@line 417 "enemyai.cpp"
 var $204=(($203)|0); //@line 417 "enemyai.cpp"
 var $205=$204; //@line 417 "enemyai.cpp"
 var $206=(($205+24)|0); //@line 417 "enemyai.cpp"
 var $207=HEAP32[(($206)>>2)]; //@line 417 "enemyai.cpp"
 var $208=($207|0)==4; //@line 417 "enemyai.cpp"
 if($208){label=43;break;}else{label=42;break;} //@line 417 "enemyai.cpp"
 case 42: 
 var $210=$3; //@line 417 "enemyai.cpp"
 var $211=(($210)|0); //@line 417 "enemyai.cpp"
 var $212=$211; //@line 417 "enemyai.cpp"
 var $213=(($212+24)|0); //@line 417 "enemyai.cpp"
 var $214=HEAP32[(($213)>>2)]; //@line 417 "enemyai.cpp"
 var $215=($214|0)==3; //@line 417 "enemyai.cpp"
 if($215){label=43;break;}else{label=46;break;} //@line 417 "enemyai.cpp"
 case 43: 
 var $217=$3; //@line 421 "enemyai.cpp"
 var $218=__Z28sheepLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($217); //@line 421 "enemyai.cpp"
 if($218){label=45;break;}else{label=44;break;} //@line 421 "enemyai.cpp"
 case 44: 
 $1=0; //@line 422 "enemyai.cpp"
 label=88;break; //@line 422 "enemyai.cpp"
 case 45: 
 label=46;break; //@line 423 "enemyai.cpp"
 case 46: 
 label=65;break; //@line 425 "enemyai.cpp"
 case 47: 
 var $223=$3; //@line 429 "enemyai.cpp"
 var $224=(($223)|0); //@line 429 "enemyai.cpp"
 var $225=$224; //@line 429 "enemyai.cpp"
 var $226=(($225+24)|0); //@line 429 "enemyai.cpp"
 var $227=HEAP32[(($226)>>2)]; //@line 429 "enemyai.cpp"
 var $228=($227|0)==4; //@line 429 "enemyai.cpp"
 if($228){label=49;break;}else{label=48;break;} //@line 429 "enemyai.cpp"
 case 48: 
 var $230=$3; //@line 429 "enemyai.cpp"
 var $231=(($230)|0); //@line 429 "enemyai.cpp"
 var $232=$231; //@line 429 "enemyai.cpp"
 var $233=(($232+24)|0); //@line 429 "enemyai.cpp"
 var $234=HEAP32[(($233)>>2)]; //@line 429 "enemyai.cpp"
 var $235=($234|0)==3; //@line 429 "enemyai.cpp"
 if($235){label=49;break;}else{label=64;break;} //@line 429 "enemyai.cpp"
 case 49: 
 var $237=$3; //@line 432 "enemyai.cpp"
 var $238=(($237)|0); //@line 432 "enemyai.cpp"
 var $239=$238; //@line 432 "enemyai.cpp"
 var $240=__Z12getUnitFrameP17genericUnitStruct($239); //@line 432 "enemyai.cpp"
 var $241=(($240+72)|0); //@line 432 "enemyai.cpp"
 var $242=HEAP32[(($241)>>2)]; //@line 432 "enemyai.cpp"
 $event=$242; //@line 432 "enemyai.cpp"
 var $243=$3; //@line 434 "enemyai.cpp"
 var $244=(($243)|0); //@line 434 "enemyai.cpp"
 var $245=$244; //@line 434 "enemyai.cpp"
 var $246=__Z12getUnitFrameP17genericUnitStruct($245); //@line 434 "enemyai.cpp"
 var $247=(($246+68)|0); //@line 434 "enemyai.cpp"
 var $248=HEAP32[(($247)>>2)]; //@line 434 "enemyai.cpp"
 $framesAmount=$248; //@line 434 "enemyai.cpp"
 var $249=$3; //@line 437 "enemyai.cpp"
 var $250=(($249)|0); //@line 437 "enemyai.cpp"
 var $251=$250; //@line 437 "enemyai.cpp"
 var $252=(($251+24)|0); //@line 437 "enemyai.cpp"
 var $253=HEAP32[(($252)>>2)]; //@line 437 "enemyai.cpp"
 var $254=($253|0)==3; //@line 437 "enemyai.cpp"
 if($254){label=50;break;}else{label=56;break;} //@line 437 "enemyai.cpp"
 case 50: 
 var $256=$event; //@line 437 "enemyai.cpp"
 var $257=($256|0)!=0; //@line 437 "enemyai.cpp"
 if($257){label=51;break;}else{label=56;break;} //@line 437 "enemyai.cpp"
 case 51: 
 var $259=$3; //@line 437 "enemyai.cpp"
 var $260=(($259)|0); //@line 437 "enemyai.cpp"
 var $261=$260; //@line 437 "enemyai.cpp"
 var $262=(($261+92)|0); //@line 437 "enemyai.cpp"
 var $263=HEAP32[(($262)>>2)]; //@line 437 "enemyai.cpp"
 var $264=$framesAmount; //@line 437 "enemyai.cpp"
 var $265=((($264)-(1))|0); //@line 437 "enemyai.cpp"
 var $266=($263|0)==($265|0); //@line 437 "enemyai.cpp"
 if($266){label=52;break;}else{label=56;break;} //@line 437 "enemyai.cpp"
 case 52: 
 var $268=$event; //@line 440 "enemyai.cpp"
 var $269=_strcmp($268,5888); //@line 440 "enemyai.cpp"
 var $270=($269|0)==0; //@line 440 "enemyai.cpp"
 if($270){label=53;break;}else{label=56;break;} //@line 440 "enemyai.cpp"
 case 53: 
 var $272=$3; //@line 443 "enemyai.cpp"
 var $273=__Z13makeSheepWalkR20vectorListNodeStructI15enemyUnitStructE($272); //@line 443 "enemyai.cpp"
 if($273){label=55;break;}else{label=54;break;} //@line 443 "enemyai.cpp"
 case 54: 
 $1=0; //@line 443 "enemyai.cpp"
 label=88;break; //@line 443 "enemyai.cpp"
 case 55: 
 label=56;break; //@line 444 "enemyai.cpp"
 case 56: 
 var $277=$3; //@line 447 "enemyai.cpp"
 var $278=(($277)|0); //@line 447 "enemyai.cpp"
 var $279=$278; //@line 447 "enemyai.cpp"
 var $280=(($279+24)|0); //@line 447 "enemyai.cpp"
 var $281=HEAP32[(($280)>>2)]; //@line 447 "enemyai.cpp"
 var $282=($281|0)==4; //@line 447 "enemyai.cpp"
 if($282){label=57;break;}else{label=63;break;} //@line 447 "enemyai.cpp"
 case 57: 
 var $284=$event; //@line 447 "enemyai.cpp"
 var $285=($284|0)!=0; //@line 447 "enemyai.cpp"
 if($285){label=58;break;}else{label=63;break;} //@line 447 "enemyai.cpp"
 case 58: 
 var $287=$3; //@line 447 "enemyai.cpp"
 var $288=(($287)|0); //@line 447 "enemyai.cpp"
 var $289=$288; //@line 447 "enemyai.cpp"
 var $290=(($289+92)|0); //@line 447 "enemyai.cpp"
 var $291=HEAP32[(($290)>>2)]; //@line 447 "enemyai.cpp"
 var $292=$framesAmount; //@line 447 "enemyai.cpp"
 var $293=((($292)-(1))|0); //@line 447 "enemyai.cpp"
 var $294=($291|0)==($293|0); //@line 447 "enemyai.cpp"
 if($294){label=59;break;}else{label=63;break;} //@line 447 "enemyai.cpp"
 case 59: 
 var $296=$event; //@line 450 "enemyai.cpp"
 var $297=_strcmp($296,5024); //@line 450 "enemyai.cpp"
 var $298=($297|0)==0; //@line 450 "enemyai.cpp"
 if($298){label=60;break;}else{label=63;break;} //@line 450 "enemyai.cpp"
 case 60: 
 var $300=$3; //@line 453 "enemyai.cpp"
 var $301=__Z13makeSheepWalkR20vectorListNodeStructI15enemyUnitStructE($300); //@line 453 "enemyai.cpp"
 if($301){label=62;break;}else{label=61;break;} //@line 453 "enemyai.cpp"
 case 61: 
 $1=0; //@line 453 "enemyai.cpp"
 label=88;break; //@line 453 "enemyai.cpp"
 case 62: 
 label=63;break; //@line 454 "enemyai.cpp"
 case 63: 
 label=64;break; //@line 456 "enemyai.cpp"
 case 64: 
 label=65;break;
 case 65: 
 var $307=$3; //@line 462 "enemyai.cpp"
 var $308=(($307)|0); //@line 462 "enemyai.cpp"
 var $309=$308; //@line 462 "enemyai.cpp"
 var $310=__Z12getUnitFrameP17genericUnitStruct($309); //@line 462 "enemyai.cpp"
 $myUnitFrame=$310; //@line 462 "enemyai.cpp"
 var $311=$3; //@line 465 "enemyai.cpp"
 var $312=(($311)|0); //@line 465 "enemyai.cpp"
 var $313=$312; //@line 465 "enemyai.cpp"
 var $314=(($313+96)|0); //@line 465 "enemyai.cpp"
 var $315=HEAP8[($314)]; //@line 465 "enemyai.cpp"
 var $316=(($315)&1); //@line 465 "enemyai.cpp"
 if($316){label=66;break;}else{label=67;break;} //@line 465 "enemyai.cpp"
 case 66: 
 var $318=$3; //@line 466 "enemyai.cpp"
 var $319=(($318)|0); //@line 466 "enemyai.cpp"
 var $320=$319; //@line 466 "enemyai.cpp"
 var $321=(($320+8)|0); //@line 466 "enemyai.cpp"
 var $322=HEAPF64[(($321)>>3)]; //@line 466 "enemyai.cpp"
 var $323=HEAPF64[((19560)>>3)]; //@line 466 "enemyai.cpp"
 var $324=($322)-($323); //@line 466 "enemyai.cpp"
 var $325=$3; //@line 466 "enemyai.cpp"
 var $326=(($325)|0); //@line 466 "enemyai.cpp"
 var $327=$326; //@line 466 "enemyai.cpp"
 var $328=(($327+104)|0); //@line 466 "enemyai.cpp"
 HEAPF64[(($328)>>3)]=$324; //@line 466 "enemyai.cpp"
 var $329=$3; //@line 467 "enemyai.cpp"
 var $330=(($329)|0); //@line 467 "enemyai.cpp"
 var $331=$330; //@line 467 "enemyai.cpp"
 var $332=(($331+16)|0); //@line 467 "enemyai.cpp"
 var $333=HEAPF64[(($332)>>3)]; //@line 467 "enemyai.cpp"
 var $334=HEAPF64[((19568)>>3)]; //@line 467 "enemyai.cpp"
 var $335=($333)-($334); //@line 467 "enemyai.cpp"
 var $336=$3; //@line 467 "enemyai.cpp"
 var $337=(($336)|0); //@line 467 "enemyai.cpp"
 var $338=$337; //@line 467 "enemyai.cpp"
 var $339=(($338+112)|0); //@line 467 "enemyai.cpp"
 HEAPF64[(($339)>>3)]=$335; //@line 467 "enemyai.cpp"
 label=67;break; //@line 468 "enemyai.cpp"
 case 67: 
 var $341=$3; //@line 471 "enemyai.cpp"
 var $342=(($341)|0); //@line 471 "enemyai.cpp"
 var $343=$342; //@line 471 "enemyai.cpp"
 var $344=__Z13moveWithOwnerP17genericUnitStruct($343); //@line 471 "enemyai.cpp"
 if($344){label=69;break;}else{label=68;break;} //@line 471 "enemyai.cpp"
 case 68: 
 $1=0; //@line 471 "enemyai.cpp"
 label=88;break; //@line 471 "enemyai.cpp"
 case 69: 
 var $347=$3; //@line 475 "enemyai.cpp"
 var $348=(($347)|0); //@line 475 "enemyai.cpp"
 var $349=$348; //@line 475 "enemyai.cpp"
 var $350=(($349+24)|0); //@line 475 "enemyai.cpp"
 var $351=HEAP32[(($350)>>2)]; //@line 475 "enemyai.cpp"
 if(($351|0)==4|($351|0)==3|($351|0)==5){ label=70;break;}else{label=75;break;}
 case 70: 
 var $353=$3; //@line 482 "enemyai.cpp"
 var $354=__Z23checkWaveAntigenerationR20vectorListNodeStructI15enemyUnitStructEPb($353,$wasRemoved); //@line 482 "enemyai.cpp"
 if($354){label=72;break;}else{label=71;break;} //@line 482 "enemyai.cpp"
 case 71: 
 $1=0; //@line 482 "enemyai.cpp"
 label=88;break; //@line 482 "enemyai.cpp"
 case 72: 
 var $357=HEAP8[($wasRemoved)]; //@line 485 "enemyai.cpp"
 var $358=(($357)&1); //@line 485 "enemyai.cpp"
 if($358){label=73;break;}else{label=74;break;} //@line 485 "enemyai.cpp"
 case 73: 
 $1=1; //@line 485 "enemyai.cpp"
 label=88;break; //@line 485 "enemyai.cpp"
 case 74: 
 label=75;break; //@line 486 "enemyai.cpp"
 case 75: 
 var $362=$3; //@line 492 "enemyai.cpp"
 var $363=(($362)|0); //@line 492 "enemyai.cpp"
 var $364=$363; //@line 492 "enemyai.cpp"
 var $365=__Z21isUnitInsideTheScreenP17genericUnitStruct($364); //@line 492 "enemyai.cpp"
 if($365){label=76;break;}else{label=77;break;} //@line 492 "enemyai.cpp"
 case 76: 
 var $367=$3; //@line 495 "enemyai.cpp"
 var $368=(($367)|0); //@line 495 "enemyai.cpp"
 var $369=(($368+216)|0); //@line 495 "enemyai.cpp"
 HEAP32[(($369)>>2)]=0; //@line 495 "enemyai.cpp"
 label=87;break; //@line 496 "enemyai.cpp"
 case 77: 
 var $371=$3; //@line 498 "enemyai.cpp"
 var $372=(($371)|0); //@line 498 "enemyai.cpp"
 var $373=(($372+216)|0); //@line 498 "enemyai.cpp"
 var $374=HEAP32[(($373)>>2)]; //@line 498 "enemyai.cpp"
 var $375=($374|0)<=0; //@line 498 "enemyai.cpp"
 if($375){label=78;break;}else{label=79;break;} //@line 498 "enemyai.cpp"
 case 78: 
 var $377=$3; //@line 500 "enemyai.cpp"
 var $378=(($377)|0); //@line 500 "enemyai.cpp"
 var $379=(($378+192)|0); //@line 500 "enemyai.cpp"
 var $380=HEAP32[(($379)>>2)]; //@line 500 "enemyai.cpp"
 var $381=$3; //@line 500 "enemyai.cpp"
 var $382=(($381)|0); //@line 500 "enemyai.cpp"
 var $383=(($382+216)|0); //@line 500 "enemyai.cpp"
 HEAP32[(($383)>>2)]=$380; //@line 500 "enemyai.cpp"
 label=80;break; //@line 502 "enemyai.cpp"
 case 79: 
 var $385=$3; //@line 504 "enemyai.cpp"
 var $386=(($385)|0); //@line 504 "enemyai.cpp"
 var $387=(($386+216)|0); //@line 504 "enemyai.cpp"
 var $388=HEAP32[(($387)>>2)]; //@line 504 "enemyai.cpp"
 var $389=((($388)-(1))|0); //@line 504 "enemyai.cpp"
 HEAP32[(($387)>>2)]=$389; //@line 504 "enemyai.cpp"
 label=80;break;
 case 80: 
 var $391=$3; //@line 508 "enemyai.cpp"
 var $392=(($391)|0); //@line 508 "enemyai.cpp"
 var $393=(($392+216)|0); //@line 508 "enemyai.cpp"
 var $394=HEAP32[(($393)>>2)]; //@line 508 "enemyai.cpp"
 var $395=($394|0)<=0; //@line 508 "enemyai.cpp"
 if($395){label=81;break;}else{label=86;break;} //@line 508 "enemyai.cpp"
 case 81: 
 var $397=$3; //@line 511 "enemyai.cpp"
 var $398=(($397)|0); //@line 511 "enemyai.cpp"
 var $399=$398; //@line 511 "enemyai.cpp"
 var $400=__Z12freeSlavesOfP17genericUnitStruct($399); //@line 511 "enemyai.cpp"
 if($400){label=83;break;}else{label=82;break;} //@line 511 "enemyai.cpp"
 case 82: 
 $1=0; //@line 511 "enemyai.cpp"
 label=88;break; //@line 511 "enemyai.cpp"
 case 83: 
 var $403=$3; //@line 513 "enemyai.cpp"
 var $404=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$403); //@line 513 "enemyai.cpp"
 var $405=__ZN15vectorListClassI15enemyUnitStructE10removeNodeEm(19752,$404); //@line 513 "enemyai.cpp"
 if($405){label=85;break;}else{label=84;break;} //@line 513 "enemyai.cpp"
 case 84: 
 $1=0; //@line 514 "enemyai.cpp"
 label=88;break; //@line 514 "enemyai.cpp"
 case 85: 
 $1=1; //@line 516 "enemyai.cpp"
 label=88;break; //@line 516 "enemyai.cpp"
 case 86: 
 label=87;break;
 case 87: 
 $1=1; //@line 521 "enemyai.cpp"
 label=88;break; //@line 521 "enemyai.cpp"
 case 88: 
 var $411=$1; //@line 522 "enemyai.cpp"
 STACKTOP=sp;return $411; //@line 522 "enemyai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14executeEnemyAIm($frameNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $unit;
 $2=$frameNumber;
 var $3=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 532 "enemyai.cpp"
 $unit=$3; //@line 532 "enemyai.cpp"
 label=2;break; //@line 532 "enemyai.cpp"
 case 2: 
 var $5=$unit; //@line 532 "enemyai.cpp"
 var $6=($5|0)!=0; //@line 532 "enemyai.cpp"
 if($6){label=3;break;}else{label=9;break;} //@line 532 "enemyai.cpp"
 case 3: 
 var $8=$unit; //@line 534 "enemyai.cpp"
 var $9=(($8)|0); //@line 534 "enemyai.cpp"
 var $10=$9; //@line 534 "enemyai.cpp"
 var $11=(($10+130)|0); //@line 534 "enemyai.cpp"
 var $12=HEAP8[($11)]; //@line 534 "enemyai.cpp"
 var $13=(($12)&1); //@line 534 "enemyai.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 534 "enemyai.cpp"
 case 4: 
 label=8;break; //@line 534 "enemyai.cpp"
 case 5: 
 var $16=$2; //@line 537 "enemyai.cpp"
 var $17=$unit; //@line 537 "enemyai.cpp"
 var $18=__Z13executeUnitAImR20vectorListNodeStructI15enemyUnitStructE($16,$17); //@line 537 "enemyai.cpp"
 if($18){label=7;break;}else{label=6;break;} //@line 537 "enemyai.cpp"
 case 6: 
 $1=0; //@line 537 "enemyai.cpp"
 label=10;break; //@line 537 "enemyai.cpp"
 case 7: 
 label=8;break; //@line 538 "enemyai.cpp"
 case 8: 
 var $22=$unit; //@line 532 "enemyai.cpp"
 var $23=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$22); //@line 532 "enemyai.cpp"
 $unit=$23; //@line 532 "enemyai.cpp"
 label=2;break; //@line 532 "enemyai.cpp"
 case 9: 
 $1=1; //@line 540 "enemyai.cpp"
 label=10;break; //@line 540 "enemyai.cpp"
 case 10: 
 var $26=$1; //@line 541 "enemyai.cpp"
 STACKTOP=sp;return $26; //@line 541 "enemyai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass12openFromFileEPc($this,$fileName){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $file;
 var $fsize;
 var $readed;
 $2=$this;
 $3=$fileName;
 var $4=$2;
 var $5=$4; //@line 44 "fileString.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 44 "fileString.cpp"
 var $7=(($6+28)|0); //@line 44 "fileString.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 44 "fileString.cpp"
 var $9=FUNCTION_TABLE[$8]($4); //@line 44 "fileString.cpp"
 if($9){label=2;break;}else{label=3;break;} //@line 44 "fileString.cpp"
 case 2: 
 $1=0; //@line 44 "fileString.cpp"
 label=10;break; //@line 44 "fileString.cpp"
 case 3: 
 var $12=$3; //@line 47 "fileString.cpp"
 var $13=_fopen($12,13984); //@line 47 "fileString.cpp"
 $file=$13; //@line 47 "fileString.cpp"
 var $14=$file; //@line 48 "fileString.cpp"
 var $15=($14|0)==0; //@line 48 "fileString.cpp"
 if($15){label=4;break;}else{label=5;break;} //@line 48 "fileString.cpp"
 case 4: 
 $1=0; //@line 48 "fileString.cpp"
 label=10;break; //@line 48 "fileString.cpp"
 case 5: 
 var $18=$file; //@line 51 "fileString.cpp"
 var $19=_fseek($18,0,2); //@line 51 "fileString.cpp"
 var $20=($19|0)!=0; //@line 51 "fileString.cpp"
 if($20){label=6;break;}else{label=7;break;} //@line 51 "fileString.cpp"
 case 6: 
 var $22=$file; //@line 52 "fileString.cpp"
 var $23=_fclose($22); //@line 52 "fileString.cpp"
 $1=0; //@line 53 "fileString.cpp"
 label=10;break; //@line 53 "fileString.cpp"
 case 7: 
 var $25=$file; //@line 55 "fileString.cpp"
 var $26=_ftell($25); //@line 55 "fileString.cpp"
 $fsize=$26; //@line 55 "fileString.cpp"
 var $27=$file; //@line 56 "fileString.cpp"
 var $28=_fseek($27,0,0); //@line 56 "fileString.cpp"
 var $29=$fsize; //@line 59 "fileString.cpp"
 var $30=__Znaj($29); //@line 59 "fileString.cpp"
 var $31=(($4+4)|0); //@line 59 "fileString.cpp"
 HEAP32[(($31)>>2)]=$30; //@line 59 "fileString.cpp"
 var $32=(($4+4)|0); //@line 62 "fileString.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 62 "fileString.cpp"
 var $34=$fsize; //@line 62 "fileString.cpp"
 var $35=$file; //@line 62 "fileString.cpp"
 var $36=_fread($33,1,$34,$35); //@line 62 "fileString.cpp"
 $readed=$36; //@line 62 "fileString.cpp"
 var $37=$readed; //@line 64 "fileString.cpp"
 var $38=$fsize; //@line 64 "fileString.cpp"
 var $39=($37>>>0)<($38>>>0); //@line 64 "fileString.cpp"
 if($39){label=8;break;}else{label=9;break;} //@line 64 "fileString.cpp"
 case 8: 
 $1=0; //@line 64 "fileString.cpp"
 label=10;break; //@line 64 "fileString.cpp"
 case 9: 
 var $42=$file; //@line 67 "fileString.cpp"
 var $43=_fclose($42); //@line 67 "fileString.cpp"
 var $44=(($4+8)|0); //@line 70 "fileString.cpp"
 HEAP8[($44)]=1; //@line 70 "fileString.cpp"
 var $45=$fsize; //@line 71 "fileString.cpp"
 var $46=(($4+12)|0); //@line 71 "fileString.cpp"
 HEAP32[(($46)>>2)]=$45; //@line 71 "fileString.cpp"
 var $47=(($4+16)|0); //@line 72 "fileString.cpp"
 HEAP8[($47)]=1; //@line 72 "fileString.cpp"
 $1=1; //@line 75 "fileString.cpp"
 label=10;break; //@line 75 "fileString.cpp"
 case 10: 
 var $49=$1; //@line 76 "fileString.cpp"
 STACKTOP=sp;return $49; //@line 76 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass15openFromStringZEPcb($this,$stringz,$localCopy){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$this;
 $3=$stringz;
 var $5=($localCopy&1);
 $4=$5;
 var $6=$2;
 var $7=$6; //@line 100 "fileString.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 100 "fileString.cpp"
 var $9=(($8+28)|0); //@line 100 "fileString.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 100 "fileString.cpp"
 var $11=FUNCTION_TABLE[$10]($6); //@line 100 "fileString.cpp"
 if($11){label=2;break;}else{label=3;break;} //@line 100 "fileString.cpp"
 case 2: 
 $1=0; //@line 100 "fileString.cpp"
 label=7;break; //@line 100 "fileString.cpp"
 case 3: 
 var $14=$3; //@line 103 "fileString.cpp"
 var $15=_strlen($14); //@line 103 "fileString.cpp"
 var $16=(($6+12)|0); //@line 103 "fileString.cpp"
 HEAP32[(($16)>>2)]=$15; //@line 103 "fileString.cpp"
 var $17=$4; //@line 106 "fileString.cpp"
 var $18=(($17)&1); //@line 106 "fileString.cpp"
 if($18){label=4;break;}else{label=5;break;} //@line 106 "fileString.cpp"
 case 4: 
 var $20=(($6+12)|0); //@line 108 "fileString.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 108 "fileString.cpp"
 var $22=($21|0)<0; //@line 108 "fileString.cpp"
 var $23=($22?-1:$21); //@line 108 "fileString.cpp"
 var $24=__Znaj($23); //@line 108 "fileString.cpp"
 var $25=(($6+4)|0); //@line 108 "fileString.cpp"
 HEAP32[(($25)>>2)]=$24; //@line 108 "fileString.cpp"
 var $26=(($6+4)|0); //@line 109 "fileString.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 109 "fileString.cpp"
 var $28=$3; //@line 109 "fileString.cpp"
 var $29=(($6+12)|0); //@line 109 "fileString.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 109 "fileString.cpp"
 assert($30 % 1 === 0);(_memcpy($27, $28, $30)|0); //@line 109 "fileString.cpp"
 label=6;break; //@line 110 "fileString.cpp"
 case 5: 
 var $32=$3; //@line 112 "fileString.cpp"
 var $33=(($6+4)|0); //@line 112 "fileString.cpp"
 HEAP32[(($33)>>2)]=$32; //@line 112 "fileString.cpp"
 label=6;break;
 case 6: 
 var $35=$4; //@line 116 "fileString.cpp"
 var $36=(($35)&1); //@line 116 "fileString.cpp"
 var $37=(($6+8)|0); //@line 116 "fileString.cpp"
 var $38=($36&1); //@line 116 "fileString.cpp"
 HEAP8[($37)]=$38; //@line 116 "fileString.cpp"
 var $39=(($6+16)|0); //@line 117 "fileString.cpp"
 HEAP8[($39)]=1; //@line 117 "fileString.cpp"
 $1=1; //@line 120 "fileString.cpp"
 label=7;break; //@line 120 "fileString.cpp"
 case 7: 
 var $41=$1; //@line 121 "fileString.cpp"
 STACKTOP=sp;return $41; //@line 121 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass14openFromMemoryEPvib($this,$mem,$memSize,$localCopy){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$this;
 $3=$mem;
 $4=$memSize;
 var $6=($localCopy&1);
 $5=$6;
 var $7=$2;
 var $8=$7; //@line 132 "fileString.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 132 "fileString.cpp"
 var $10=(($9+28)|0); //@line 132 "fileString.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 132 "fileString.cpp"
 var $12=FUNCTION_TABLE[$11]($7); //@line 132 "fileString.cpp"
 if($12){label=2;break;}else{label=3;break;} //@line 132 "fileString.cpp"
 case 2: 
 $1=0; //@line 132 "fileString.cpp"
 label=7;break; //@line 132 "fileString.cpp"
 case 3: 
 var $15=$5; //@line 135 "fileString.cpp"
 var $16=(($15)&1); //@line 135 "fileString.cpp"
 if($16){label=4;break;}else{label=5;break;} //@line 135 "fileString.cpp"
 case 4: 
 var $18=$4; //@line 137 "fileString.cpp"
 var $19=($18|0)<0; //@line 137 "fileString.cpp"
 var $20=($19?-1:$18); //@line 137 "fileString.cpp"
 var $21=__Znaj($20); //@line 137 "fileString.cpp"
 var $22=(($7+4)|0); //@line 137 "fileString.cpp"
 HEAP32[(($22)>>2)]=$21; //@line 137 "fileString.cpp"
 var $23=(($7+4)|0); //@line 138 "fileString.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 138 "fileString.cpp"
 var $25=$3; //@line 138 "fileString.cpp"
 var $26=$4; //@line 138 "fileString.cpp"
 assert($26 % 1 === 0);(_memcpy($24, $25, $26)|0); //@line 138 "fileString.cpp"
 label=6;break; //@line 139 "fileString.cpp"
 case 5: 
 var $28=$3; //@line 141 "fileString.cpp"
 var $29=(($7+4)|0); //@line 141 "fileString.cpp"
 HEAP32[(($29)>>2)]=$28; //@line 141 "fileString.cpp"
 label=6;break;
 case 6: 
 var $31=$5; //@line 145 "fileString.cpp"
 var $32=(($31)&1); //@line 145 "fileString.cpp"
 var $33=(($7+8)|0); //@line 145 "fileString.cpp"
 var $34=($32&1); //@line 145 "fileString.cpp"
 HEAP8[($33)]=$34; //@line 145 "fileString.cpp"
 var $35=$4; //@line 146 "fileString.cpp"
 var $36=(($7+12)|0); //@line 146 "fileString.cpp"
 HEAP32[(($36)>>2)]=$35; //@line 146 "fileString.cpp"
 var $37=(($7+16)|0); //@line 147 "fileString.cpp"
 HEAP8[($37)]=1; //@line 147 "fileString.cpp"
 $1=1; //@line 150 "fileString.cpp"
 label=7;break; //@line 150 "fileString.cpp"
 case 7: 
 var $39=$1; //@line 151 "fileString.cpp"
 STACKTOP=sp;return $39; //@line 151 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass5closeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 158 "fileString.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 158 "fileString.cpp"
 var $6=(($5+28)|0); //@line 158 "fileString.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 158 "fileString.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 158 "fileString.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 158 "fileString.cpp"
 case 2: 
 $1=0; //@line 158 "fileString.cpp"
 label=8;break; //@line 158 "fileString.cpp"
 case 3: 
 var $11=(($3+8)|0); //@line 162 "fileString.cpp"
 var $12=HEAP8[($11)]; //@line 162 "fileString.cpp"
 var $13=(($12)&1); //@line 162 "fileString.cpp"
 if($13){label=4;break;}else{label=7;break;} //@line 162 "fileString.cpp"
 case 4: 
 var $15=(($3+4)|0); //@line 162 "fileString.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 162 "fileString.cpp"
 var $17=($16|0)==0; //@line 162 "fileString.cpp"
 if($17){label=6;break;}else{label=5;break;} //@line 162 "fileString.cpp"
 case 5: 
 __ZdaPv($16); //@line 162 "fileString.cpp"
 label=6;break; //@line 162 "fileString.cpp"
 case 6: 
 label=7;break; //@line 162 "fileString.cpp"
 case 7: 
 var $21=(($3+16)|0); //@line 165 "fileString.cpp"
 HEAP8[($21)]=0; //@line 165 "fileString.cpp"
 $1=1; //@line 168 "fileString.cpp"
 label=8;break; //@line 168 "fileString.cpp"
 case 8: 
 var $23=$1; //@line 169 "fileString.cpp"
 STACKTOP=sp;return $23; //@line 169 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass14getDataPointerEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 177 "fileString.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 177 "fileString.cpp"
 var $6=(($5+28)|0); //@line 177 "fileString.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 177 "fileString.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 177 "fileString.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 177 "fileString.cpp"
 case 2: 
 $1=0; //@line 177 "fileString.cpp"
 label=4;break; //@line 177 "fileString.cpp"
 case 3: 
 var $11=(($3+4)|0); //@line 179 "fileString.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 179 "fileString.cpp"
 $1=$12; //@line 179 "fileString.cpp"
 label=4;break; //@line 179 "fileString.cpp"
 case 4: 
 var $14=$1; //@line 180 "fileString.cpp"
 STACKTOP=sp;return $14; //@line 180 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+16)|0); //@line 187 "fileString.cpp"
 var $4=HEAP8[($3)]; //@line 187 "fileString.cpp"
 var $5=(($4)&1); //@line 187 "fileString.cpp"
 STACKTOP=sp;return $5; //@line 187 "fileString.cpp"
}


function __ZN15fileStringClass11getDataSizeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 196 "fileString.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 196 "fileString.cpp"
 var $6=(($5+28)|0); //@line 196 "fileString.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 196 "fileString.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 196 "fileString.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 196 "fileString.cpp"
 case 2: 
 $1=0; //@line 196 "fileString.cpp"
 label=4;break; //@line 196 "fileString.cpp"
 case 3: 
 var $11=(($3+12)|0); //@line 198 "fileString.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 198 "fileString.cpp"
 $1=$12; //@line 198 "fileString.cpp"
 label=4;break; //@line 198 "fileString.cpp"
 case 4: 
 var $14=$1; //@line 199 "fileString.cpp"
 STACKTOP=sp;return $14; //@line 199 "fileString.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15fileStringClassD2Ev($2); //@line 55 "./fileString.h"
 STACKTOP=sp;return; //@line 55 "./fileString.h"
}


function __ZN15fileStringClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN15fileStringClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 55 "./fileString.h"
 case 2: 
 var $6=$4; //@line 55 "./fileString.h"
 __ZdlPv($6); //@line 55 "./fileString.h"
 STACKTOP=sp;return; //@line 55 "./fileString.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 55 "./fileString.h"
 var $10=$8$1;
 $3=$10; //@line 55 "./fileString.h"
 var $11=$4; //@line 55 "./fileString.h"
 __ZdlPv($11); //@line 55 "./fileString.h"
 label=4;break; //@line 55 "./fileString.h"
 case 4: 
 var $13=$2; //@line 55 "./fileString.h"
 var $14=$3; //@line 55 "./fileString.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 55 "./fileString.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 55 "./fileString.h"
 HEAP32[(($3)>>2)]=16896; //@line 55 "./fileString.h"
 var $4=$2; //@line 55 "./fileString.h"
 var $5=HEAP32[(($4)>>2)]; //@line 55 "./fileString.h"
 var $6=(($5+20)|0); //@line 55 "./fileString.h"
 var $7=HEAP32[(($6)>>2)]; //@line 55 "./fileString.h"
 var $8=FUNCTION_TABLE[$7]($2); //@line 55 "./fileString.h"
 STACKTOP=sp;return; //@line 55 "./fileString.h"
}


function __ZN14fixedFontClass17calculateTextLineEPciiPS0_Pi($this,$text,$textSize,$maxWidth,$startOfLine,$lineSize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $endOfLoop;
 var $maxWidthInChars;
 var $thisChar;
 var $lastAcceptableEnd;
 var $tmpStartOfLine;
 $1=$this;
 $2=$text;
 $3=$textSize;
 $4=$maxWidth;
 $5=$startOfLine;
 $6=$lineSize;
 var $7=$1;
 $endOfLoop=0; //@line 48 "fixedfontwrap.cpp"
 var $8=$4; //@line 49 "fixedfontwrap.cpp"
 var $9=(($7+8)|0); //@line 49 "fixedfontwrap.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 49 "fixedfontwrap.cpp"
 var $11=(((($8|0))/(($10|0)))&-1); //@line 49 "fixedfontwrap.cpp"
 $maxWidthInChars=$11; //@line 49 "fixedfontwrap.cpp"
 var $12=$2; //@line 50 "fixedfontwrap.cpp"
 $thisChar=$12; //@line 50 "fixedfontwrap.cpp"
 label=2;break; //@line 55 "fixedfontwrap.cpp"
 case 2: 
 var $14=$thisChar; //@line 55 "fixedfontwrap.cpp"
 var $15=$2; //@line 55 "fixedfontwrap.cpp"
 var $16=$14; //@line 55 "fixedfontwrap.cpp"
 var $17=$15; //@line 55 "fixedfontwrap.cpp"
 var $18=((($16)-($17))|0); //@line 55 "fixedfontwrap.cpp"
 var $19=$3; //@line 55 "fixedfontwrap.cpp"
 var $20=($18|0)<($19|0); //@line 55 "fixedfontwrap.cpp"
 if($20){label=3;break;}else{var $27=0;label=4;break;} //@line 55 "fixedfontwrap.cpp"
 case 3: 
 var $22=$thisChar; //@line 55 "fixedfontwrap.cpp"
 var $23=HEAP8[($22)]; //@line 55 "fixedfontwrap.cpp"
 var $24=(($23<<24)>>24); //@line 55 "fixedfontwrap.cpp"
 var $25=($24|0)==32; //@line 55 "fixedfontwrap.cpp"
 var $27=$25;label=4;break;
 case 4: 
 var $27;
 if($27){label=5;break;}else{label=6;break;}
 case 5: 
 var $29=$thisChar; //@line 55 "fixedfontwrap.cpp"
 var $30=(($29+1)|0); //@line 55 "fixedfontwrap.cpp"
 $thisChar=$30; //@line 55 "fixedfontwrap.cpp"
 label=2;break; //@line 55 "fixedfontwrap.cpp"
 case 6: 
 var $32=$thisChar; //@line 56 "fixedfontwrap.cpp"
 $tmpStartOfLine=$32; //@line 56 "fixedfontwrap.cpp"
 var $33=$thisChar; //@line 57 "fixedfontwrap.cpp"
 $lastAcceptableEnd=$33; //@line 57 "fixedfontwrap.cpp"
 label=7;break; //@line 60 "fixedfontwrap.cpp"
 case 7: 
 var $35=$thisChar; //@line 62 "fixedfontwrap.cpp"
 var $36=$2; //@line 62 "fixedfontwrap.cpp"
 var $37=$35; //@line 62 "fixedfontwrap.cpp"
 var $38=$36; //@line 62 "fixedfontwrap.cpp"
 var $39=((($37)-($38))|0); //@line 62 "fixedfontwrap.cpp"
 var $40=$3; //@line 62 "fixedfontwrap.cpp"
 var $41=($39|0)>=($40|0); //@line 62 "fixedfontwrap.cpp"
 if($41){label=10;break;}else{label=8;break;} //@line 62 "fixedfontwrap.cpp"
 case 8: 
 var $43=$thisChar; //@line 62 "fixedfontwrap.cpp"
 var $44=HEAP8[($43)]; //@line 62 "fixedfontwrap.cpp"
 var $45=(($44<<24)>>24); //@line 62 "fixedfontwrap.cpp"
 var $46=($45|0)==10; //@line 62 "fixedfontwrap.cpp"
 if($46){label=10;break;}else{label=9;break;} //@line 62 "fixedfontwrap.cpp"
 case 9: 
 var $48=$thisChar; //@line 62 "fixedfontwrap.cpp"
 var $49=HEAP8[($48)]; //@line 62 "fixedfontwrap.cpp"
 var $50=(($49<<24)>>24); //@line 62 "fixedfontwrap.cpp"
 var $51=($50|0)==13; //@line 62 "fixedfontwrap.cpp"
 if($51){label=10;break;}else{label=11;break;} //@line 62 "fixedfontwrap.cpp"
 case 10: 
 var $53=$thisChar; //@line 66 "fixedfontwrap.cpp"
 $lastAcceptableEnd=$53; //@line 66 "fixedfontwrap.cpp"
 $endOfLoop=1; //@line 67 "fixedfontwrap.cpp"
 label=11;break; //@line 68 "fixedfontwrap.cpp"
 case 11: 
 var $55=$endOfLoop; //@line 70 "fixedfontwrap.cpp"
 var $56=(($55)&1); //@line 70 "fixedfontwrap.cpp"
 if($56){label=31;break;}else{label=12;break;} //@line 70 "fixedfontwrap.cpp"
 case 12: 
 label=13;break; //@line 72 "fixedfontwrap.cpp"
 case 13: 
 var $59=$thisChar; //@line 72 "fixedfontwrap.cpp"
 var $60=$2; //@line 72 "fixedfontwrap.cpp"
 var $61=$59; //@line 72 "fixedfontwrap.cpp"
 var $62=$60; //@line 72 "fixedfontwrap.cpp"
 var $63=((($61)-($62))|0); //@line 72 "fixedfontwrap.cpp"
 var $64=$3; //@line 72 "fixedfontwrap.cpp"
 var $65=($63|0)<($64|0); //@line 72 "fixedfontwrap.cpp"
 if($65){label=14;break;}else{var $82=0;label=17;break;} //@line 72 "fixedfontwrap.cpp"
 case 14: 
 var $67=$thisChar; //@line 72 "fixedfontwrap.cpp"
 var $68=HEAP8[($67)]; //@line 72 "fixedfontwrap.cpp"
 var $69=(($68<<24)>>24); //@line 72 "fixedfontwrap.cpp"
 var $70=($69|0)!=32; //@line 72 "fixedfontwrap.cpp"
 if($70){label=15;break;}else{var $82=0;label=17;break;} //@line 72 "fixedfontwrap.cpp"
 case 15: 
 var $72=$thisChar; //@line 72 "fixedfontwrap.cpp"
 var $73=HEAP8[($72)]; //@line 72 "fixedfontwrap.cpp"
 var $74=(($73<<24)>>24); //@line 72 "fixedfontwrap.cpp"
 var $75=($74|0)!=10; //@line 72 "fixedfontwrap.cpp"
 if($75){label=16;break;}else{var $82=0;label=17;break;} //@line 72 "fixedfontwrap.cpp"
 case 16: 
 var $77=$thisChar; //@line 72 "fixedfontwrap.cpp"
 var $78=HEAP8[($77)]; //@line 72 "fixedfontwrap.cpp"
 var $79=(($78<<24)>>24); //@line 72 "fixedfontwrap.cpp"
 var $80=($79|0)!=13; //@line 72 "fixedfontwrap.cpp"
 var $82=$80;label=17;break;
 case 17: 
 var $82;
 if($82){label=18;break;}else{label=19;break;}
 case 18: 
 var $84=$thisChar; //@line 73 "fixedfontwrap.cpp"
 var $85=(($84+1)|0); //@line 73 "fixedfontwrap.cpp"
 $thisChar=$85; //@line 73 "fixedfontwrap.cpp"
 label=13;break; //@line 73 "fixedfontwrap.cpp"
 case 19: 
 var $87=$thisChar; //@line 76 "fixedfontwrap.cpp"
 var $88=$tmpStartOfLine; //@line 76 "fixedfontwrap.cpp"
 var $89=$87; //@line 76 "fixedfontwrap.cpp"
 var $90=$88; //@line 76 "fixedfontwrap.cpp"
 var $91=((($89)-($90))|0); //@line 76 "fixedfontwrap.cpp"
 var $92=$maxWidthInChars; //@line 76 "fixedfontwrap.cpp"
 var $93=($91|0)>($92|0); //@line 76 "fixedfontwrap.cpp"
 if($93){label=20;break;}else{label=23;break;} //@line 76 "fixedfontwrap.cpp"
 case 20: 
 var $95=$lastAcceptableEnd; //@line 80 "fixedfontwrap.cpp"
 var $96=$tmpStartOfLine; //@line 80 "fixedfontwrap.cpp"
 var $97=($95|0)==($96|0); //@line 80 "fixedfontwrap.cpp"
 if($97){label=21;break;}else{label=22;break;} //@line 80 "fixedfontwrap.cpp"
 case 21: 
 var $99=$tmpStartOfLine; //@line 83 "fixedfontwrap.cpp"
 var $100=$maxWidthInChars; //@line 83 "fixedfontwrap.cpp"
 var $101=(($99+$100)|0); //@line 83 "fixedfontwrap.cpp"
 $lastAcceptableEnd=$101; //@line 83 "fixedfontwrap.cpp"
 label=22;break; //@line 84 "fixedfontwrap.cpp"
 case 22: 
 $endOfLoop=1; //@line 87 "fixedfontwrap.cpp"
 label=23;break; //@line 88 "fixedfontwrap.cpp"
 case 23: 
 var $104=$endOfLoop; //@line 90 "fixedfontwrap.cpp"
 var $105=(($104)&1); //@line 90 "fixedfontwrap.cpp"
 if($105){label=30;break;}else{label=24;break;} //@line 90 "fixedfontwrap.cpp"
 case 24: 
 var $107=$thisChar; //@line 93 "fixedfontwrap.cpp"
 $lastAcceptableEnd=$107; //@line 93 "fixedfontwrap.cpp"
 label=25;break; //@line 96 "fixedfontwrap.cpp"
 case 25: 
 var $109=$thisChar; //@line 96 "fixedfontwrap.cpp"
 var $110=$2; //@line 96 "fixedfontwrap.cpp"
 var $111=$109; //@line 96 "fixedfontwrap.cpp"
 var $112=$110; //@line 96 "fixedfontwrap.cpp"
 var $113=((($111)-($112))|0); //@line 96 "fixedfontwrap.cpp"
 var $114=$3; //@line 96 "fixedfontwrap.cpp"
 var $115=($113|0)<($114|0); //@line 96 "fixedfontwrap.cpp"
 if($115){label=26;break;}else{var $122=0;label=27;break;} //@line 96 "fixedfontwrap.cpp"
 case 26: 
 var $117=$thisChar; //@line 96 "fixedfontwrap.cpp"
 var $118=HEAP8[($117)]; //@line 96 "fixedfontwrap.cpp"
 var $119=(($118<<24)>>24); //@line 96 "fixedfontwrap.cpp"
 var $120=($119|0)==32; //@line 96 "fixedfontwrap.cpp"
 var $122=$120;label=27;break;
 case 27: 
 var $122;
 if($122){label=28;break;}else{label=29;break;}
 case 28: 
 var $124=$thisChar; //@line 96 "fixedfontwrap.cpp"
 var $125=(($124+1)|0); //@line 96 "fixedfontwrap.cpp"
 $thisChar=$125; //@line 96 "fixedfontwrap.cpp"
 label=25;break; //@line 96 "fixedfontwrap.cpp"
 case 29: 
 label=30;break; //@line 97 "fixedfontwrap.cpp"
 case 30: 
 label=31;break; //@line 98 "fixedfontwrap.cpp"
 case 31: 
 label=32;break; //@line 99 "fixedfontwrap.cpp"
 case 32: 
 var $130=$endOfLoop; //@line 99 "fixedfontwrap.cpp"
 var $131=(($130)&1); //@line 99 "fixedfontwrap.cpp"
 var $132=$131^1; //@line 99 "fixedfontwrap.cpp"
 if($132){label=7;break;}else{label=33;break;} //@line 99 "fixedfontwrap.cpp"
 case 33: 
 var $134=$tmpStartOfLine; //@line 102 "fixedfontwrap.cpp"
 var $135=$5; //@line 102 "fixedfontwrap.cpp"
 HEAP32[(($135)>>2)]=$134; //@line 102 "fixedfontwrap.cpp"
 var $136=$lastAcceptableEnd; //@line 103 "fixedfontwrap.cpp"
 var $137=$tmpStartOfLine; //@line 103 "fixedfontwrap.cpp"
 var $138=$136; //@line 103 "fixedfontwrap.cpp"
 var $139=$137; //@line 103 "fixedfontwrap.cpp"
 var $140=((($138)-($139))|0); //@line 103 "fixedfontwrap.cpp"
 var $141=$6; //@line 103 "fixedfontwrap.cpp"
 HEAP32[(($141)>>2)]=$140; //@line 103 "fixedfontwrap.cpp"
 STACKTOP=sp;return 1; //@line 105 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClass19privateDrawTextLineER14ddSurfaceClassPciiiiib9alignEnumbPiS4_S4_S4_($this,$srfTo,$text,$textSize,$x,$y,$boxWidth,$boxHeight,$transparent,$alignment,$drawText,$definitiveX,$definitiveY,$definitiveW,$definitiveH){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $14;
 var $15;
 var $16;
 var $realX;
 var $realY;
 var $textWidth;
 $2=$this;
 $3=$srfTo;
 $4=$text;
 $5=$textSize;
 $6=$x;
 $7=$y;
 $8=$boxWidth;
 $9=$boxHeight;
 var $17=($transparent&1);
 $10=$17;
 $11=$alignment;
 var $18=($drawText&1);
 $12=$18;
 $13=$definitiveX;
 $14=$definitiveY;
 $15=$definitiveW;
 $16=$definitiveH;
 var $19=$2;
 var $20=$5; //@line 125 "fixedfontwrap.cpp"
 var $21=(($19+8)|0); //@line 125 "fixedfontwrap.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 125 "fixedfontwrap.cpp"
 var $23=(Math_imul($20,$22)|0); //@line 125 "fixedfontwrap.cpp"
 $textWidth=$23; //@line 125 "fixedfontwrap.cpp"
 var $24=$6; //@line 128 "fixedfontwrap.cpp"
 $realX=$24; //@line 128 "fixedfontwrap.cpp"
 var $25=$7; //@line 128 "fixedfontwrap.cpp"
 $realY=$25; //@line 128 "fixedfontwrap.cpp"
 var $26=$textWidth; //@line 132 "fixedfontwrap.cpp"
 var $27=$8; //@line 132 "fixedfontwrap.cpp"
 var $28=($26|0)<=($27|0); //@line 132 "fixedfontwrap.cpp"
 if($28){label=2;break;}else{label=8;break;} //@line 132 "fixedfontwrap.cpp"
 case 2: 
 var $30=$11; //@line 133 "fixedfontwrap.cpp"
 if(($30|0)==0){ label=3;break;}else if(($30|0)==1){ label=5;break;}else if(($30|0)==2){ label=6;break;}else{label=4;break;}
 case 3: 
 label=4;break; //@line 133 "fixedfontwrap.cpp"
 case 4: 
 var $33=$6; //@line 136 "fixedfontwrap.cpp"
 $realX=$33; //@line 136 "fixedfontwrap.cpp"
 var $34=$7; //@line 137 "fixedfontwrap.cpp"
 $realY=$34; //@line 137 "fixedfontwrap.cpp"
 label=7;break; //@line 138 "fixedfontwrap.cpp"
 case 5: 
 var $36=$8; //@line 140 "fixedfontwrap.cpp"
 var $37=$textWidth; //@line 140 "fixedfontwrap.cpp"
 var $38=((($36)-($37))|0); //@line 140 "fixedfontwrap.cpp"
 var $39=(((($38|0))/(2))&-1); //@line 140 "fixedfontwrap.cpp"
 var $40=$6; //@line 140 "fixedfontwrap.cpp"
 var $41=((($39)+($40))|0); //@line 140 "fixedfontwrap.cpp"
 $realX=$41; //@line 140 "fixedfontwrap.cpp"
 var $42=$7; //@line 141 "fixedfontwrap.cpp"
 $realY=$42; //@line 141 "fixedfontwrap.cpp"
 label=7;break; //@line 142 "fixedfontwrap.cpp"
 case 6: 
 var $44=$6; //@line 144 "fixedfontwrap.cpp"
 var $45=$8; //@line 144 "fixedfontwrap.cpp"
 var $46=$textWidth; //@line 144 "fixedfontwrap.cpp"
 var $47=((($45)-($46))|0); //@line 144 "fixedfontwrap.cpp"
 var $48=((($44)+($47))|0); //@line 144 "fixedfontwrap.cpp"
 $realX=$48; //@line 144 "fixedfontwrap.cpp"
 var $49=$7; //@line 145 "fixedfontwrap.cpp"
 $realY=$49; //@line 145 "fixedfontwrap.cpp"
 label=7;break; //@line 146 "fixedfontwrap.cpp"
 case 7: 
 label=8;break; //@line 148 "fixedfontwrap.cpp"
 case 8: 
 var $52=$13; //@line 151 "fixedfontwrap.cpp"
 var $53=($52|0)!=0; //@line 151 "fixedfontwrap.cpp"
 if($53){label=9;break;}else{label=10;break;} //@line 151 "fixedfontwrap.cpp"
 case 9: 
 var $55=$realX; //@line 151 "fixedfontwrap.cpp"
 var $56=$13; //@line 151 "fixedfontwrap.cpp"
 HEAP32[(($56)>>2)]=$55; //@line 151 "fixedfontwrap.cpp"
 label=10;break; //@line 151 "fixedfontwrap.cpp"
 case 10: 
 var $58=$14; //@line 152 "fixedfontwrap.cpp"
 var $59=($58|0)!=0; //@line 152 "fixedfontwrap.cpp"
 if($59){label=11;break;}else{label=12;break;} //@line 152 "fixedfontwrap.cpp"
 case 11: 
 var $61=$realY; //@line 152 "fixedfontwrap.cpp"
 var $62=$14; //@line 152 "fixedfontwrap.cpp"
 HEAP32[(($62)>>2)]=$61; //@line 152 "fixedfontwrap.cpp"
 label=12;break; //@line 152 "fixedfontwrap.cpp"
 case 12: 
 var $64=$15; //@line 153 "fixedfontwrap.cpp"
 var $65=($64|0)!=0; //@line 153 "fixedfontwrap.cpp"
 if($65){label=13;break;}else{label=14;break;} //@line 153 "fixedfontwrap.cpp"
 case 13: 
 var $67=$textWidth; //@line 153 "fixedfontwrap.cpp"
 var $68=$8; //@line 153 "fixedfontwrap.cpp"
 var $69=($67|0)<($68|0); //@line 153 "fixedfontwrap.cpp"
 var $70=$textWidth; //@line 153 "fixedfontwrap.cpp"
 var $71=$8; //@line 153 "fixedfontwrap.cpp"
 var $72=($69?$70:$71); //@line 153 "fixedfontwrap.cpp"
 var $73=$15; //@line 153 "fixedfontwrap.cpp"
 HEAP32[(($73)>>2)]=$72; //@line 153 "fixedfontwrap.cpp"
 label=14;break; //@line 153 "fixedfontwrap.cpp"
 case 14: 
 var $75=$16; //@line 154 "fixedfontwrap.cpp"
 var $76=($75|0)!=0; //@line 154 "fixedfontwrap.cpp"
 if($76){label=15;break;}else{label=19;break;} //@line 154 "fixedfontwrap.cpp"
 case 15: 
 var $78=(($19+12)|0); //@line 154 "fixedfontwrap.cpp"
 var $79=HEAP32[(($78)>>2)]; //@line 154 "fixedfontwrap.cpp"
 var $80=$9; //@line 154 "fixedfontwrap.cpp"
 var $81=($79|0)<($80|0); //@line 154 "fixedfontwrap.cpp"
 if($81){label=16;break;}else{label=17;break;} //@line 154 "fixedfontwrap.cpp"
 case 16: 
 var $83=(($19+12)|0); //@line 154 "fixedfontwrap.cpp"
 var $84=HEAP32[(($83)>>2)]; //@line 154 "fixedfontwrap.cpp"
 var $88=$84;label=18;break; //@line 154 "fixedfontwrap.cpp"
 case 17: 
 var $86=$9; //@line 154 "fixedfontwrap.cpp"
 var $88=$86;label=18;break; //@line 154 "fixedfontwrap.cpp"
 case 18: 
 var $88; //@line 154 "fixedfontwrap.cpp"
 var $89=$16; //@line 154 "fixedfontwrap.cpp"
 HEAP32[(($89)>>2)]=$88; //@line 154 "fixedfontwrap.cpp"
 label=19;break; //@line 154 "fixedfontwrap.cpp"
 case 19: 
 var $91=$12; //@line 157 "fixedfontwrap.cpp"
 var $92=(($91)&1); //@line 157 "fixedfontwrap.cpp"
 if($92){label=20;break;}else{label=21;break;} //@line 157 "fixedfontwrap.cpp"
 case 20: 
 var $94=$19; //@line 159 "fixedfontwrap.cpp"
 var $95=HEAP32[(($94)>>2)]; //@line 159 "fixedfontwrap.cpp"
 var $96=(($95+4)|0); //@line 159 "fixedfontwrap.cpp"
 var $97=HEAP32[(($96)>>2)]; //@line 159 "fixedfontwrap.cpp"
 var $98=$3; //@line 159 "fixedfontwrap.cpp"
 var $99=$4; //@line 159 "fixedfontwrap.cpp"
 var $100=$5; //@line 159 "fixedfontwrap.cpp"
 var $101=$realX; //@line 159 "fixedfontwrap.cpp"
 var $102=$realY; //@line 159 "fixedfontwrap.cpp"
 var $103=$6; //@line 159 "fixedfontwrap.cpp"
 var $104=$7; //@line 159 "fixedfontwrap.cpp"
 var $105=$8; //@line 159 "fixedfontwrap.cpp"
 var $106=$9; //@line 159 "fixedfontwrap.cpp"
 var $107=$10; //@line 159 "fixedfontwrap.cpp"
 var $108=(($107)&1); //@line 159 "fixedfontwrap.cpp"
 var $109=FUNCTION_TABLE[$97]($19,$98,$99,$100,$101,$102,$103,$104,$105,$106,$108); //@line 159 "fixedfontwrap.cpp"
 $1=$109; //@line 159 "fixedfontwrap.cpp"
 label=22;break; //@line 159 "fixedfontwrap.cpp"
 case 21: 
 $1=1; //@line 167 "fixedfontwrap.cpp"
 label=22;break; //@line 167 "fixedfontwrap.cpp"
 case 22: 
 var $112=$1; //@line 169 "fixedfontwrap.cpp"
 STACKTOP=sp;return $112; //@line 169 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClass24privateDrawMultilineTextER14ddSurfaceClassPciiiiib9alignEnumbPiS4_S4_S4_($this,$srfTo,$text,$textSize,$x,$y,$boxWidth,$boxHeight,$transparent,$alignment,$drawText,$definitiveX,$definitiveY,$definitiveW,$definitiveH){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $14;
 var $15;
 var $16;
 var $currChar=sp;
 var $currX;
 var $currY;
 var $lineSize=(sp)+(8);
 var $tempDX;
 var $tempDY;
 var $tempDX2;
 var $tempDY2;
 var $lastDX=(sp)+(16);
 var $lastDY=(sp)+(24);
 var $lastDW=(sp)+(32);
 var $lastDH=(sp)+(40);
 $2=$this;
 $3=$srfTo;
 $4=$text;
 $5=$textSize;
 $6=$x;
 $7=$y;
 $8=$boxWidth;
 $9=$boxHeight;
 var $17=($transparent&1);
 $10=$17;
 $11=$alignment;
 var $18=($drawText&1);
 $12=$18;
 $13=$definitiveX;
 $14=$definitiveY;
 $15=$definitiveW;
 $16=$definitiveH;
 var $19=$2;
 var $20=$4; //@line 188 "fixedfontwrap.cpp"
 HEAP32[(($currChar)>>2)]=$20; //@line 188 "fixedfontwrap.cpp"
 var $21=$6; //@line 189 "fixedfontwrap.cpp"
 $currX=$21; //@line 189 "fixedfontwrap.cpp"
 var $22=$7; //@line 189 "fixedfontwrap.cpp"
 $currY=$22; //@line 189 "fixedfontwrap.cpp"
 var $23=$6; //@line 194 "fixedfontwrap.cpp"
 var $24=$8; //@line 194 "fixedfontwrap.cpp"
 var $25=((($23)+($24))|0); //@line 194 "fixedfontwrap.cpp"
 $tempDX=$25; //@line 194 "fixedfontwrap.cpp"
 var $26=$7; //@line 194 "fixedfontwrap.cpp"
 var $27=$9; //@line 194 "fixedfontwrap.cpp"
 var $28=((($26)+($27))|0); //@line 194 "fixedfontwrap.cpp"
 $tempDY=$28; //@line 194 "fixedfontwrap.cpp"
 var $29=$6; //@line 194 "fixedfontwrap.cpp"
 $tempDX2=$29; //@line 194 "fixedfontwrap.cpp"
 var $30=$7; //@line 194 "fixedfontwrap.cpp"
 $tempDY2=$30; //@line 194 "fixedfontwrap.cpp"
 var $31=$8; //@line 199 "fixedfontwrap.cpp"
 var $32=(($19+8)|0); //@line 199 "fixedfontwrap.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 199 "fixedfontwrap.cpp"
 var $34=($31|0)<($33|0); //@line 199 "fixedfontwrap.cpp"
 if($34){label=2;break;}else{label=11;break;} //@line 199 "fixedfontwrap.cpp"
 case 2: 
 var $36=$13; //@line 202 "fixedfontwrap.cpp"
 var $37=($36|0)!=0; //@line 202 "fixedfontwrap.cpp"
 if($37){label=3;break;}else{label=4;break;} //@line 202 "fixedfontwrap.cpp"
 case 3: 
 var $39=$6; //@line 202 "fixedfontwrap.cpp"
 var $40=$13; //@line 202 "fixedfontwrap.cpp"
 HEAP32[(($40)>>2)]=$39; //@line 202 "fixedfontwrap.cpp"
 label=4;break; //@line 202 "fixedfontwrap.cpp"
 case 4: 
 var $42=$14; //@line 203 "fixedfontwrap.cpp"
 var $43=($42|0)!=0; //@line 203 "fixedfontwrap.cpp"
 if($43){label=5;break;}else{label=6;break;} //@line 203 "fixedfontwrap.cpp"
 case 5: 
 var $45=$7; //@line 203 "fixedfontwrap.cpp"
 var $46=$14; //@line 203 "fixedfontwrap.cpp"
 HEAP32[(($46)>>2)]=$45; //@line 203 "fixedfontwrap.cpp"
 label=6;break; //@line 203 "fixedfontwrap.cpp"
 case 6: 
 var $48=$15; //@line 204 "fixedfontwrap.cpp"
 var $49=($48|0)!=0; //@line 204 "fixedfontwrap.cpp"
 if($49){label=7;break;}else{label=8;break;} //@line 204 "fixedfontwrap.cpp"
 case 7: 
 var $51=$15; //@line 204 "fixedfontwrap.cpp"
 HEAP32[(($51)>>2)]=0; //@line 204 "fixedfontwrap.cpp"
 label=8;break; //@line 204 "fixedfontwrap.cpp"
 case 8: 
 var $53=$16; //@line 205 "fixedfontwrap.cpp"
 var $54=($53|0)!=0; //@line 205 "fixedfontwrap.cpp"
 if($54){label=9;break;}else{label=10;break;} //@line 205 "fixedfontwrap.cpp"
 case 9: 
 var $56=$16; //@line 205 "fixedfontwrap.cpp"
 HEAP32[(($56)>>2)]=0; //@line 205 "fixedfontwrap.cpp"
 label=10;break; //@line 205 "fixedfontwrap.cpp"
 case 10: 
 $1=1; //@line 206 "fixedfontwrap.cpp"
 label=43;break; //@line 206 "fixedfontwrap.cpp"
 case 11: 
 label=12;break; //@line 209 "fixedfontwrap.cpp"
 case 12: 
 var $60=HEAP32[(($currChar)>>2)]; //@line 209 "fixedfontwrap.cpp"
 var $61=$4; //@line 209 "fixedfontwrap.cpp"
 var $62=$60; //@line 209 "fixedfontwrap.cpp"
 var $63=$61; //@line 209 "fixedfontwrap.cpp"
 var $64=((($62)-($63))|0); //@line 209 "fixedfontwrap.cpp"
 var $65=$5; //@line 209 "fixedfontwrap.cpp"
 var $66=($64|0)<($65|0); //@line 209 "fixedfontwrap.cpp"
 if($66){label=13;break;}else{label=34;break;} //@line 209 "fixedfontwrap.cpp"
 case 13: 
 var $68=$19; //@line 211 "fixedfontwrap.cpp"
 var $69=HEAP32[(($68)>>2)]; //@line 211 "fixedfontwrap.cpp"
 var $70=(($69)|0); //@line 211 "fixedfontwrap.cpp"
 var $71=HEAP32[(($70)>>2)]; //@line 211 "fixedfontwrap.cpp"
 var $72=HEAP32[(($currChar)>>2)]; //@line 211 "fixedfontwrap.cpp"
 var $73=$5; //@line 211 "fixedfontwrap.cpp"
 var $74=HEAP32[(($currChar)>>2)]; //@line 211 "fixedfontwrap.cpp"
 var $75=$4; //@line 211 "fixedfontwrap.cpp"
 var $76=$74; //@line 211 "fixedfontwrap.cpp"
 var $77=$75; //@line 211 "fixedfontwrap.cpp"
 var $78=((($76)-($77))|0); //@line 211 "fixedfontwrap.cpp"
 var $79=((($73)-($78))|0); //@line 211 "fixedfontwrap.cpp"
 var $80=$8; //@line 211 "fixedfontwrap.cpp"
 var $81=FUNCTION_TABLE[$71]($19,$72,$79,$80,$currChar,$lineSize); //@line 211 "fixedfontwrap.cpp"
 if($81){label=15;break;}else{label=14;break;} //@line 211 "fixedfontwrap.cpp"
 case 14: 
 $1=0; //@line 217 "fixedfontwrap.cpp"
 label=43;break; //@line 217 "fixedfontwrap.cpp"
 case 15: 
 var $84=$19; //@line 222 "fixedfontwrap.cpp"
 var $85=HEAP32[(($84)>>2)]; //@line 222 "fixedfontwrap.cpp"
 var $86=(($85+8)|0); //@line 222 "fixedfontwrap.cpp"
 var $87=HEAP32[(($86)>>2)]; //@line 222 "fixedfontwrap.cpp"
 var $88=$3; //@line 222 "fixedfontwrap.cpp"
 var $89=HEAP32[(($currChar)>>2)]; //@line 222 "fixedfontwrap.cpp"
 var $90=HEAP32[(($lineSize)>>2)]; //@line 222 "fixedfontwrap.cpp"
 var $91=$currX; //@line 222 "fixedfontwrap.cpp"
 var $92=$currY; //@line 222 "fixedfontwrap.cpp"
 var $93=$8; //@line 222 "fixedfontwrap.cpp"
 var $94=$9; //@line 222 "fixedfontwrap.cpp"
 var $95=$10; //@line 222 "fixedfontwrap.cpp"
 var $96=(($95)&1); //@line 222 "fixedfontwrap.cpp"
 var $97=$11; //@line 222 "fixedfontwrap.cpp"
 var $98=$12; //@line 222 "fixedfontwrap.cpp"
 var $99=(($98)&1); //@line 222 "fixedfontwrap.cpp"
 var $100=FUNCTION_TABLE[$87]($19,$88,$89,$90,$91,$92,$93,$94,$96,$97,$99,$lastDX,$lastDY,$lastDW,$lastDH); //@line 222 "fixedfontwrap.cpp"
 if($100){label=17;break;}else{label=16;break;} //@line 222 "fixedfontwrap.cpp"
 case 16: 
 $1=0; //@line 233 "fixedfontwrap.cpp"
 label=43;break; //@line 233 "fixedfontwrap.cpp"
 case 17: 
 var $103=$tempDX; //@line 238 "fixedfontwrap.cpp"
 var $104=HEAP32[(($lastDX)>>2)]; //@line 238 "fixedfontwrap.cpp"
 var $105=($103|0)<($104|0); //@line 238 "fixedfontwrap.cpp"
 var $106=$tempDX; //@line 238 "fixedfontwrap.cpp"
 var $107=HEAP32[(($lastDX)>>2)]; //@line 238 "fixedfontwrap.cpp"
 var $108=($105?$106:$107); //@line 238 "fixedfontwrap.cpp"
 $tempDX=$108; //@line 238 "fixedfontwrap.cpp"
 var $109=$tempDY; //@line 239 "fixedfontwrap.cpp"
 var $110=HEAP32[(($lastDY)>>2)]; //@line 239 "fixedfontwrap.cpp"
 var $111=($109|0)<($110|0); //@line 239 "fixedfontwrap.cpp"
 var $112=$tempDY; //@line 239 "fixedfontwrap.cpp"
 var $113=HEAP32[(($lastDY)>>2)]; //@line 239 "fixedfontwrap.cpp"
 var $114=($111?$112:$113); //@line 239 "fixedfontwrap.cpp"
 $tempDY=$114; //@line 239 "fixedfontwrap.cpp"
 var $115=$tempDX2; //@line 240 "fixedfontwrap.cpp"
 var $116=HEAP32[(($lastDX)>>2)]; //@line 240 "fixedfontwrap.cpp"
 var $117=HEAP32[(($lastDW)>>2)]; //@line 240 "fixedfontwrap.cpp"
 var $118=((($116)+($117))|0); //@line 240 "fixedfontwrap.cpp"
 var $119=($115|0)>($118|0); //@line 240 "fixedfontwrap.cpp"
 if($119){label=18;break;}else{label=19;break;} //@line 240 "fixedfontwrap.cpp"
 case 18: 
 var $121=$tempDX2; //@line 240 "fixedfontwrap.cpp"
 var $127=$121;label=20;break; //@line 240 "fixedfontwrap.cpp"
 case 19: 
 var $123=HEAP32[(($lastDX)>>2)]; //@line 240 "fixedfontwrap.cpp"
 var $124=HEAP32[(($lastDW)>>2)]; //@line 240 "fixedfontwrap.cpp"
 var $125=((($123)+($124))|0); //@line 240 "fixedfontwrap.cpp"
 var $127=$125;label=20;break; //@line 240 "fixedfontwrap.cpp"
 case 20: 
 var $127; //@line 240 "fixedfontwrap.cpp"
 $tempDX2=$127; //@line 240 "fixedfontwrap.cpp"
 var $128=$tempDY2; //@line 241 "fixedfontwrap.cpp"
 var $129=HEAP32[(($lastDY)>>2)]; //@line 241 "fixedfontwrap.cpp"
 var $130=HEAP32[(($lastDH)>>2)]; //@line 241 "fixedfontwrap.cpp"
 var $131=((($129)+($130))|0); //@line 241 "fixedfontwrap.cpp"
 var $132=($128|0)>($131|0); //@line 241 "fixedfontwrap.cpp"
 if($132){label=21;break;}else{label=22;break;} //@line 241 "fixedfontwrap.cpp"
 case 21: 
 var $134=$tempDY2; //@line 241 "fixedfontwrap.cpp"
 var $140=$134;label=23;break; //@line 241 "fixedfontwrap.cpp"
 case 22: 
 var $136=HEAP32[(($lastDY)>>2)]; //@line 241 "fixedfontwrap.cpp"
 var $137=HEAP32[(($lastDH)>>2)]; //@line 241 "fixedfontwrap.cpp"
 var $138=((($136)+($137))|0); //@line 241 "fixedfontwrap.cpp"
 var $140=$138;label=23;break; //@line 241 "fixedfontwrap.cpp"
 case 23: 
 var $140; //@line 241 "fixedfontwrap.cpp"
 $tempDY2=$140; //@line 241 "fixedfontwrap.cpp"
 var $141=HEAP32[(($lineSize)>>2)]; //@line 244 "fixedfontwrap.cpp"
 var $142=HEAP32[(($currChar)>>2)]; //@line 244 "fixedfontwrap.cpp"
 var $143=(($142+$141)|0); //@line 244 "fixedfontwrap.cpp"
 HEAP32[(($currChar)>>2)]=$143; //@line 244 "fixedfontwrap.cpp"
 var $144=HEAP32[(($currChar)>>2)]; //@line 245 "fixedfontwrap.cpp"
 var $145=$4; //@line 245 "fixedfontwrap.cpp"
 var $146=$144; //@line 245 "fixedfontwrap.cpp"
 var $147=$145; //@line 245 "fixedfontwrap.cpp"
 var $148=((($146)-($147))|0); //@line 245 "fixedfontwrap.cpp"
 var $149=$5; //@line 245 "fixedfontwrap.cpp"
 var $150=($148|0)<($149|0); //@line 245 "fixedfontwrap.cpp"
 if($150){label=24;break;}else{label=33;break;} //@line 245 "fixedfontwrap.cpp"
 case 24: 
 var $152=HEAP32[(($currChar)>>2)]; //@line 248 "fixedfontwrap.cpp"
 var $153=HEAP8[($152)]; //@line 248 "fixedfontwrap.cpp"
 var $154=(($153<<24)>>24); //@line 248 "fixedfontwrap.cpp"
 var $155=($154|0)==13; //@line 248 "fixedfontwrap.cpp"
 if($155){label=25;break;}else{label=29;break;} //@line 248 "fixedfontwrap.cpp"
 case 25: 
 var $157=HEAP32[(($currChar)>>2)]; //@line 249 "fixedfontwrap.cpp"
 var $158=(($157+1)|0); //@line 249 "fixedfontwrap.cpp"
 HEAP32[(($currChar)>>2)]=$158; //@line 249 "fixedfontwrap.cpp"
 var $159=HEAP32[(($currChar)>>2)]; //@line 250 "fixedfontwrap.cpp"
 var $160=$4; //@line 250 "fixedfontwrap.cpp"
 var $161=$159; //@line 250 "fixedfontwrap.cpp"
 var $162=$160; //@line 250 "fixedfontwrap.cpp"
 var $163=((($161)-($162))|0); //@line 250 "fixedfontwrap.cpp"
 var $164=$5; //@line 250 "fixedfontwrap.cpp"
 var $165=($163|0)<($164|0); //@line 250 "fixedfontwrap.cpp"
 if($165){label=26;break;}else{label=28;break;} //@line 250 "fixedfontwrap.cpp"
 case 26: 
 var $167=HEAP32[(($currChar)>>2)]; //@line 250 "fixedfontwrap.cpp"
 var $168=HEAP8[($167)]; //@line 250 "fixedfontwrap.cpp"
 var $169=(($168<<24)>>24); //@line 250 "fixedfontwrap.cpp"
 var $170=($169|0)==10; //@line 250 "fixedfontwrap.cpp"
 if($170){label=27;break;}else{label=28;break;} //@line 250 "fixedfontwrap.cpp"
 case 27: 
 var $172=HEAP32[(($currChar)>>2)]; //@line 250 "fixedfontwrap.cpp"
 var $173=(($172+1)|0); //@line 250 "fixedfontwrap.cpp"
 HEAP32[(($currChar)>>2)]=$173; //@line 250 "fixedfontwrap.cpp"
 label=28;break; //@line 250 "fixedfontwrap.cpp"
 case 28: 
 label=32;break; //@line 251 "fixedfontwrap.cpp"
 case 29: 
 var $176=HEAP32[(($currChar)>>2)]; //@line 251 "fixedfontwrap.cpp"
 var $177=HEAP8[($176)]; //@line 251 "fixedfontwrap.cpp"
 var $178=(($177<<24)>>24); //@line 251 "fixedfontwrap.cpp"
 var $179=($178|0)==10; //@line 251 "fixedfontwrap.cpp"
 if($179){label=30;break;}else{label=31;break;} //@line 251 "fixedfontwrap.cpp"
 case 30: 
 var $181=HEAP32[(($currChar)>>2)]; //@line 252 "fixedfontwrap.cpp"
 var $182=(($181+1)|0); //@line 252 "fixedfontwrap.cpp"
 HEAP32[(($currChar)>>2)]=$182; //@line 252 "fixedfontwrap.cpp"
 label=31;break; //@line 253 "fixedfontwrap.cpp"
 case 31: 
 label=32;break;
 case 32: 
 label=33;break; //@line 255 "fixedfontwrap.cpp"
 case 33: 
 var $186=(($19+12)|0); //@line 258 "fixedfontwrap.cpp"
 var $187=HEAP32[(($186)>>2)]; //@line 258 "fixedfontwrap.cpp"
 var $188=$currY; //@line 258 "fixedfontwrap.cpp"
 var $189=((($188)+($187))|0); //@line 258 "fixedfontwrap.cpp"
 $currY=$189; //@line 258 "fixedfontwrap.cpp"
 label=12;break; //@line 259 "fixedfontwrap.cpp"
 case 34: 
 var $191=$13; //@line 262 "fixedfontwrap.cpp"
 var $192=($191|0)!=0; //@line 262 "fixedfontwrap.cpp"
 if($192){label=35;break;}else{label=36;break;} //@line 262 "fixedfontwrap.cpp"
 case 35: 
 var $194=$tempDX; //@line 262 "fixedfontwrap.cpp"
 var $195=$13; //@line 262 "fixedfontwrap.cpp"
 HEAP32[(($195)>>2)]=$194; //@line 262 "fixedfontwrap.cpp"
 label=36;break; //@line 262 "fixedfontwrap.cpp"
 case 36: 
 var $197=$14; //@line 263 "fixedfontwrap.cpp"
 var $198=($197|0)!=0; //@line 263 "fixedfontwrap.cpp"
 if($198){label=37;break;}else{label=38;break;} //@line 263 "fixedfontwrap.cpp"
 case 37: 
 var $200=$tempDY; //@line 263 "fixedfontwrap.cpp"
 var $201=$14; //@line 263 "fixedfontwrap.cpp"
 HEAP32[(($201)>>2)]=$200; //@line 263 "fixedfontwrap.cpp"
 label=38;break; //@line 263 "fixedfontwrap.cpp"
 case 38: 
 var $203=$15; //@line 264 "fixedfontwrap.cpp"
 var $204=($203|0)!=0; //@line 264 "fixedfontwrap.cpp"
 if($204){label=39;break;}else{label=40;break;} //@line 264 "fixedfontwrap.cpp"
 case 39: 
 var $206=$tempDX2; //@line 264 "fixedfontwrap.cpp"
 var $207=$tempDX; //@line 264 "fixedfontwrap.cpp"
 var $208=((($206)-($207))|0); //@line 264 "fixedfontwrap.cpp"
 var $209=$15; //@line 264 "fixedfontwrap.cpp"
 HEAP32[(($209)>>2)]=$208; //@line 264 "fixedfontwrap.cpp"
 label=40;break; //@line 264 "fixedfontwrap.cpp"
 case 40: 
 var $211=$16; //@line 265 "fixedfontwrap.cpp"
 var $212=($211|0)!=0; //@line 265 "fixedfontwrap.cpp"
 if($212){label=41;break;}else{label=42;break;} //@line 265 "fixedfontwrap.cpp"
 case 41: 
 var $214=$tempDY2; //@line 265 "fixedfontwrap.cpp"
 var $215=$tempDY; //@line 265 "fixedfontwrap.cpp"
 var $216=((($214)-($215))|0); //@line 265 "fixedfontwrap.cpp"
 var $217=$16; //@line 265 "fixedfontwrap.cpp"
 HEAP32[(($217)>>2)]=$216; //@line 265 "fixedfontwrap.cpp"
 label=42;break; //@line 265 "fixedfontwrap.cpp"
 case 42: 
 $1=1; //@line 267 "fixedfontwrap.cpp"
 label=43;break; //@line 267 "fixedfontwrap.cpp"
 case 43: 
 var $220=$1; //@line 268 "fixedfontwrap.cpp"
 STACKTOP=sp;return $220; //@line 268 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClass26calculateMultilineTextSizeER14ddSurfaceClassPciiiii9alignEnum10valignEnumPiS5_S5_S5_($this,$srfTo,$text,$textSize,$x,$y,$boxWidth,$boxHeight,$alignment,$verticalAlignment,$definitiveX,$definitiveY,$definitiveW,$definitiveH){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $14;
 var $errorCode;
 var $tempDX=sp;
 var $tempDY=(sp)+(8);
 var $tempDW=(sp)+(16);
 var $tempDH=(sp)+(24);
 $1=$this;
 $2=$srfTo;
 $3=$text;
 $4=$textSize;
 $5=$x;
 $6=$y;
 $7=$boxWidth;
 $8=$boxHeight;
 $9=$alignment;
 $10=$verticalAlignment;
 $11=$definitiveX;
 $12=$definitiveY;
 $13=$definitiveW;
 $14=$definitiveH;
 var $15=$1;
 var $16=$15; //@line 291 "fixedfontwrap.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 291 "fixedfontwrap.cpp"
 var $18=(($17+12)|0); //@line 291 "fixedfontwrap.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 291 "fixedfontwrap.cpp"
 var $20=$2; //@line 291 "fixedfontwrap.cpp"
 var $21=$3; //@line 291 "fixedfontwrap.cpp"
 var $22=$4; //@line 291 "fixedfontwrap.cpp"
 var $23=$5; //@line 291 "fixedfontwrap.cpp"
 var $24=$6; //@line 291 "fixedfontwrap.cpp"
 var $25=$7; //@line 291 "fixedfontwrap.cpp"
 var $26=$8; //@line 291 "fixedfontwrap.cpp"
 var $27=$9; //@line 291 "fixedfontwrap.cpp"
 var $28=FUNCTION_TABLE[$19]($15,$20,$21,$22,$23,$24,$25,$26,0,$27,0,$tempDX,$tempDY,$tempDW,$tempDH); //@line 291 "fixedfontwrap.cpp"
 var $29=($28&1); //@line 291 "fixedfontwrap.cpp"
 $errorCode=$29; //@line 291 "fixedfontwrap.cpp"
 var $30=$10; //@line 298 "fixedfontwrap.cpp"
 if(($30|0)==0){ label=2;break;}else if(($30|0)==1){ label=3;break;}else if(($30|0)==2){ label=4;break;}else{label=5;break;}
 case 2: 
 label=5;break; //@line 301 "fixedfontwrap.cpp"
 case 3: 
 var $33=$8; //@line 303 "fixedfontwrap.cpp"
 var $34=HEAP32[(($tempDH)>>2)]; //@line 303 "fixedfontwrap.cpp"
 var $35=((($33)-($34))|0); //@line 303 "fixedfontwrap.cpp"
 var $36=(((($35|0))/(2))&-1); //@line 303 "fixedfontwrap.cpp"
 var $37=HEAP32[(($tempDY)>>2)]; //@line 303 "fixedfontwrap.cpp"
 var $38=((($36)+($37))|0); //@line 303 "fixedfontwrap.cpp"
 HEAP32[(($tempDY)>>2)]=$38; //@line 303 "fixedfontwrap.cpp"
 label=5;break; //@line 304 "fixedfontwrap.cpp"
 case 4: 
 var $40=$8; //@line 306 "fixedfontwrap.cpp"
 var $41=HEAP32[(($tempDH)>>2)]; //@line 306 "fixedfontwrap.cpp"
 var $42=((($40)-($41))|0); //@line 306 "fixedfontwrap.cpp"
 var $43=HEAP32[(($tempDY)>>2)]; //@line 306 "fixedfontwrap.cpp"
 var $44=((($42)+($43))|0); //@line 306 "fixedfontwrap.cpp"
 HEAP32[(($tempDY)>>2)]=$44; //@line 306 "fixedfontwrap.cpp"
 label=5;break; //@line 307 "fixedfontwrap.cpp"
 case 5: 
 var $46=$11; //@line 311 "fixedfontwrap.cpp"
 var $47=($46|0)!=0; //@line 311 "fixedfontwrap.cpp"
 if($47){label=6;break;}else{label=7;break;} //@line 311 "fixedfontwrap.cpp"
 case 6: 
 var $49=HEAP32[(($tempDX)>>2)]; //@line 311 "fixedfontwrap.cpp"
 var $50=$11; //@line 311 "fixedfontwrap.cpp"
 HEAP32[(($50)>>2)]=$49; //@line 311 "fixedfontwrap.cpp"
 label=7;break; //@line 311 "fixedfontwrap.cpp"
 case 7: 
 var $52=$12; //@line 312 "fixedfontwrap.cpp"
 var $53=($52|0)!=0; //@line 312 "fixedfontwrap.cpp"
 if($53){label=8;break;}else{label=9;break;} //@line 312 "fixedfontwrap.cpp"
 case 8: 
 var $55=HEAP32[(($tempDY)>>2)]; //@line 312 "fixedfontwrap.cpp"
 var $56=$12; //@line 312 "fixedfontwrap.cpp"
 HEAP32[(($56)>>2)]=$55; //@line 312 "fixedfontwrap.cpp"
 label=9;break; //@line 312 "fixedfontwrap.cpp"
 case 9: 
 var $58=$13; //@line 313 "fixedfontwrap.cpp"
 var $59=($58|0)!=0; //@line 313 "fixedfontwrap.cpp"
 if($59){label=10;break;}else{label=11;break;} //@line 313 "fixedfontwrap.cpp"
 case 10: 
 var $61=HEAP32[(($tempDW)>>2)]; //@line 313 "fixedfontwrap.cpp"
 var $62=$13; //@line 313 "fixedfontwrap.cpp"
 HEAP32[(($62)>>2)]=$61; //@line 313 "fixedfontwrap.cpp"
 label=11;break; //@line 313 "fixedfontwrap.cpp"
 case 11: 
 var $64=$14; //@line 314 "fixedfontwrap.cpp"
 var $65=($64|0)!=0; //@line 314 "fixedfontwrap.cpp"
 if($65){label=12;break;}else{label=13;break;} //@line 314 "fixedfontwrap.cpp"
 case 12: 
 var $67=HEAP32[(($tempDH)>>2)]; //@line 314 "fixedfontwrap.cpp"
 var $68=$14; //@line 314 "fixedfontwrap.cpp"
 HEAP32[(($68)>>2)]=$67; //@line 314 "fixedfontwrap.cpp"
 label=13;break; //@line 314 "fixedfontwrap.cpp"
 case 13: 
 var $70=$errorCode; //@line 316 "fixedfontwrap.cpp"
 var $71=(($70)&1); //@line 316 "fixedfontwrap.cpp"
 STACKTOP=sp;return $71; //@line 316 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClass17drawMultilineTextER14ddSurfaceClassPciiiiib9alignEnum10valignEnum($this,$srfTo,$text,$textSize,$x,$y,$boxWidth,$boxHeight,$transparent,$alignment,$verticalAlignment){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $tempDX=sp;
 var $tempDY=(sp)+(8);
 var $tempDW=(sp)+(16);
 var $tempDH=(sp)+(24);
 $2=$this;
 $3=$srfTo;
 $4=$text;
 $5=$textSize;
 $6=$x;
 $7=$y;
 $8=$boxWidth;
 $9=$boxHeight;
 var $13=($transparent&1);
 $10=$13;
 $11=$alignment;
 $12=$verticalAlignment;
 var $14=$2;
 var $15=$14; //@line 336 "fixedfontwrap.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 336 "fixedfontwrap.cpp"
 var $17=(($16+44)|0); //@line 336 "fixedfontwrap.cpp"
 var $18=HEAP32[(($17)>>2)]; //@line 336 "fixedfontwrap.cpp"
 var $19=$3; //@line 336 "fixedfontwrap.cpp"
 var $20=$4; //@line 336 "fixedfontwrap.cpp"
 var $21=$5; //@line 336 "fixedfontwrap.cpp"
 var $22=$6; //@line 336 "fixedfontwrap.cpp"
 var $23=$7; //@line 336 "fixedfontwrap.cpp"
 var $24=$8; //@line 336 "fixedfontwrap.cpp"
 var $25=$9; //@line 336 "fixedfontwrap.cpp"
 var $26=$11; //@line 336 "fixedfontwrap.cpp"
 var $27=$12; //@line 336 "fixedfontwrap.cpp"
 var $28=FUNCTION_TABLE[$18]($14,$19,$20,$21,$22,$23,$24,$25,$26,$27,$tempDX,$tempDY,$tempDW,$tempDH); //@line 336 "fixedfontwrap.cpp"
 if($28){label=3;break;}else{label=2;break;} //@line 336 "fixedfontwrap.cpp"
 case 2: 
 $1=0; //@line 343 "fixedfontwrap.cpp"
 label=4;break; //@line 343 "fixedfontwrap.cpp"
 case 3: 
 var $31=$14; //@line 347 "fixedfontwrap.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $33=(($32+12)|0); //@line 347 "fixedfontwrap.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $35=$3; //@line 347 "fixedfontwrap.cpp"
 var $36=$4; //@line 347 "fixedfontwrap.cpp"
 var $37=$5; //@line 347 "fixedfontwrap.cpp"
 var $38=HEAP32[(($tempDX)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $39=HEAP32[(($tempDY)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $40=HEAP32[(($tempDW)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $41=HEAP32[(($tempDH)>>2)]; //@line 347 "fixedfontwrap.cpp"
 var $42=$10; //@line 347 "fixedfontwrap.cpp"
 var $43=(($42)&1); //@line 347 "fixedfontwrap.cpp"
 var $44=$11; //@line 347 "fixedfontwrap.cpp"
 var $45=FUNCTION_TABLE[$34]($14,$35,$36,$37,$38,$39,$40,$41,$43,$44,1,0,0,0,0); //@line 347 "fixedfontwrap.cpp"
 $1=$45; //@line 347 "fixedfontwrap.cpp"
 label=4;break; //@line 347 "fixedfontwrap.cpp"
 case 4: 
 var $47=$1; //@line 351 "fixedfontwrap.cpp"
 STACKTOP=sp;return $47; //@line 351 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN23bitmappedFixedFontClass20lowLevelDrawTextLineER14ddSurfaceClassPciiiiiiib($this,$srfTo,$text,$textSize,$x,$y,$xClip,$yClip,$wClip,$hClip,$transparent){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $i;
 var $currCharInfo;
 var $currChar;
 var $xTemp;
 var $yTemp;
 $2=$this;
 $3=$srfTo;
 $4=$text;
 $5=$textSize;
 $6=$x;
 $7=$y;
 $8=$xClip;
 $9=$yClip;
 $10=$wClip;
 $11=$hClip;
 var $13=($transparent&1);
 $12=$13;
 var $14=$2;
 var $15=$4; //@line 375 "fixedfontwrap.cpp"
 $currChar=$15; //@line 375 "fixedfontwrap.cpp"
 var $16=$6; //@line 376 "fixedfontwrap.cpp"
 $xTemp=$16; //@line 376 "fixedfontwrap.cpp"
 var $17=$7; //@line 376 "fixedfontwrap.cpp"
 $yTemp=$17; //@line 376 "fixedfontwrap.cpp"
 var $18=$14; //@line 379 "fixedfontwrap.cpp"
 var $19=(($18+4)|0); //@line 379 "fixedfontwrap.cpp"
 var $20=HEAP8[($19)]; //@line 379 "fixedfontwrap.cpp"
 var $21=(($20)&1); //@line 379 "fixedfontwrap.cpp"
 if($21){label=3;break;}else{label=2;break;} //@line 379 "fixedfontwrap.cpp"
 case 2: 
 $1=0; //@line 379 "fixedfontwrap.cpp"
 label=25;break; //@line 379 "fixedfontwrap.cpp"
 case 3: 
 var $24=$3; //@line 382 "fixedfontwrap.cpp"
 var $25=$24; //@line 382 "fixedfontwrap.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 382 "fixedfontwrap.cpp"
 var $27=(($26+80)|0); //@line 382 "fixedfontwrap.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 382 "fixedfontwrap.cpp"
 var $29=FUNCTION_TABLE[$28]($24); //@line 382 "fixedfontwrap.cpp"
 var $30=$8; //@line 382 "fixedfontwrap.cpp"
 var $31=($29|0)>=($30|0); //@line 382 "fixedfontwrap.cpp"
 if($31){label=4;break;}else{label=7;break;} //@line 382 "fixedfontwrap.cpp"
 case 4: 
 var $33=$8; //@line 382 "fixedfontwrap.cpp"
 var $34=$10; //@line 382 "fixedfontwrap.cpp"
 var $35=((($33)+($34))|0); //@line 382 "fixedfontwrap.cpp"
 var $36=($35|0)>=0; //@line 382 "fixedfontwrap.cpp"
 if($36){label=5;break;}else{label=7;break;} //@line 382 "fixedfontwrap.cpp"
 case 5: 
 var $38=$3; //@line 382 "fixedfontwrap.cpp"
 var $39=$38; //@line 382 "fixedfontwrap.cpp"
 var $40=HEAP32[(($39)>>2)]; //@line 382 "fixedfontwrap.cpp"
 var $41=(($40+84)|0); //@line 382 "fixedfontwrap.cpp"
 var $42=HEAP32[(($41)>>2)]; //@line 382 "fixedfontwrap.cpp"
 var $43=FUNCTION_TABLE[$42]($38); //@line 382 "fixedfontwrap.cpp"
 var $44=$9; //@line 382 "fixedfontwrap.cpp"
 var $45=($43|0)>=($44|0); //@line 382 "fixedfontwrap.cpp"
 if($45){label=6;break;}else{label=7;break;} //@line 382 "fixedfontwrap.cpp"
 case 6: 
 var $47=$9; //@line 382 "fixedfontwrap.cpp"
 var $48=$11; //@line 382 "fixedfontwrap.cpp"
 var $49=((($47)+($48))|0); //@line 382 "fixedfontwrap.cpp"
 var $50=($49|0)>=0; //@line 382 "fixedfontwrap.cpp"
 if($50){label=8;break;}else{label=7;break;} //@line 382 "fixedfontwrap.cpp"
 case 7: 
 $1=1; //@line 387 "fixedfontwrap.cpp"
 label=25;break; //@line 387 "fixedfontwrap.cpp"
 case 8: 
 var $53=$8; //@line 392 "fixedfontwrap.cpp"
 var $54=($53|0)<0; //@line 392 "fixedfontwrap.cpp"
 if($54){label=9;break;}else{label=10;break;} //@line 392 "fixedfontwrap.cpp"
 case 9: 
 var $56=$8; //@line 393 "fixedfontwrap.cpp"
 var $57=$10; //@line 393 "fixedfontwrap.cpp"
 var $58=((($57)+($56))|0); //@line 393 "fixedfontwrap.cpp"
 $10=$58; //@line 393 "fixedfontwrap.cpp"
 $8=0; //@line 394 "fixedfontwrap.cpp"
 label=10;break; //@line 395 "fixedfontwrap.cpp"
 case 10: 
 var $60=$9; //@line 396 "fixedfontwrap.cpp"
 var $61=($60|0)<0; //@line 396 "fixedfontwrap.cpp"
 if($61){label=11;break;}else{label=12;break;} //@line 396 "fixedfontwrap.cpp"
 case 11: 
 var $63=$9; //@line 397 "fixedfontwrap.cpp"
 var $64=$11; //@line 397 "fixedfontwrap.cpp"
 var $65=((($64)+($63))|0); //@line 397 "fixedfontwrap.cpp"
 $11=$65; //@line 397 "fixedfontwrap.cpp"
 $9=0; //@line 398 "fixedfontwrap.cpp"
 label=12;break; //@line 399 "fixedfontwrap.cpp"
 case 12: 
 var $67=$8; //@line 400 "fixedfontwrap.cpp"
 var $68=$10; //@line 400 "fixedfontwrap.cpp"
 var $69=((($67)+($68))|0); //@line 400 "fixedfontwrap.cpp"
 var $70=$3; //@line 400 "fixedfontwrap.cpp"
 var $71=$70; //@line 400 "fixedfontwrap.cpp"
 var $72=HEAP32[(($71)>>2)]; //@line 400 "fixedfontwrap.cpp"
 var $73=(($72+80)|0); //@line 400 "fixedfontwrap.cpp"
 var $74=HEAP32[(($73)>>2)]; //@line 400 "fixedfontwrap.cpp"
 var $75=FUNCTION_TABLE[$74]($70); //@line 400 "fixedfontwrap.cpp"
 var $76=($69|0)>($75|0); //@line 400 "fixedfontwrap.cpp"
 if($76){label=13;break;}else{label=14;break;} //@line 400 "fixedfontwrap.cpp"
 case 13: 
 var $78=$3; //@line 400 "fixedfontwrap.cpp"
 var $79=$78; //@line 400 "fixedfontwrap.cpp"
 var $80=HEAP32[(($79)>>2)]; //@line 400 "fixedfontwrap.cpp"
 var $81=(($80+80)|0); //@line 400 "fixedfontwrap.cpp"
 var $82=HEAP32[(($81)>>2)]; //@line 400 "fixedfontwrap.cpp"
 var $83=FUNCTION_TABLE[$82]($78); //@line 400 "fixedfontwrap.cpp"
 var $84=$8; //@line 400 "fixedfontwrap.cpp"
 var $85=((($83)-($84))|0); //@line 400 "fixedfontwrap.cpp"
 $10=$85; //@line 400 "fixedfontwrap.cpp"
 label=14;break; //@line 400 "fixedfontwrap.cpp"
 case 14: 
 var $87=$9; //@line 401 "fixedfontwrap.cpp"
 var $88=$11; //@line 401 "fixedfontwrap.cpp"
 var $89=((($87)+($88))|0); //@line 401 "fixedfontwrap.cpp"
 var $90=$3; //@line 401 "fixedfontwrap.cpp"
 var $91=$90; //@line 401 "fixedfontwrap.cpp"
 var $92=HEAP32[(($91)>>2)]; //@line 401 "fixedfontwrap.cpp"
 var $93=(($92+84)|0); //@line 401 "fixedfontwrap.cpp"
 var $94=HEAP32[(($93)>>2)]; //@line 401 "fixedfontwrap.cpp"
 var $95=FUNCTION_TABLE[$94]($90); //@line 401 "fixedfontwrap.cpp"
 var $96=($89|0)>($95|0); //@line 401 "fixedfontwrap.cpp"
 if($96){label=15;break;}else{label=16;break;} //@line 401 "fixedfontwrap.cpp"
 case 15: 
 var $98=$3; //@line 401 "fixedfontwrap.cpp"
 var $99=$98; //@line 401 "fixedfontwrap.cpp"
 var $100=HEAP32[(($99)>>2)]; //@line 401 "fixedfontwrap.cpp"
 var $101=(($100+84)|0); //@line 401 "fixedfontwrap.cpp"
 var $102=HEAP32[(($101)>>2)]; //@line 401 "fixedfontwrap.cpp"
 var $103=FUNCTION_TABLE[$102]($98); //@line 401 "fixedfontwrap.cpp"
 var $104=$9; //@line 401 "fixedfontwrap.cpp"
 var $105=((($103)-($104))|0); //@line 401 "fixedfontwrap.cpp"
 $11=$105; //@line 401 "fixedfontwrap.cpp"
 label=16;break; //@line 401 "fixedfontwrap.cpp"
 case 16: 
 $i=0; //@line 404 "fixedfontwrap.cpp"
 label=17;break; //@line 404 "fixedfontwrap.cpp"
 case 17: 
 var $108=$i; //@line 404 "fixedfontwrap.cpp"
 var $109=$5; //@line 404 "fixedfontwrap.cpp"
 var $110=($108|0)<($109|0); //@line 404 "fixedfontwrap.cpp"
 if($110){label=18;break;}else{label=24;break;} //@line 404 "fixedfontwrap.cpp"
 case 18: 
 var $112=$currChar; //@line 405 "fixedfontwrap.cpp"
 var $113=HEAP8[($112)]; //@line 405 "fixedfontwrap.cpp"
 var $114=($113&255); //@line 405 "fixedfontwrap.cpp"
 var $115=(($14+16)|0); //@line 405 "fixedfontwrap.cpp"
 var $116=HEAP32[(($115)>>2)]; //@line 405 "fixedfontwrap.cpp"
 var $117=(($116+((($114)*(12))&-1))|0); //@line 405 "fixedfontwrap.cpp"
 $currCharInfo=$117; //@line 405 "fixedfontwrap.cpp"
 var $118=$currCharInfo; //@line 407 "fixedfontwrap.cpp"
 var $119=(($118+8)|0); //@line 407 "fixedfontwrap.cpp"
 var $120=HEAP8[($119)]; //@line 407 "fixedfontwrap.cpp"
 var $121=(($120)&1); //@line 407 "fixedfontwrap.cpp"
 if($121){label=19;break;}else{label=22;break;} //@line 407 "fixedfontwrap.cpp"
 case 19: 
 var $123=$3; //@line 409 "fixedfontwrap.cpp"
 var $124=$123; //@line 409 "fixedfontwrap.cpp"
 var $125=HEAP32[(($124)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $126=(($125+16)|0); //@line 409 "fixedfontwrap.cpp"
 var $127=HEAP32[(($126)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $128=(($14+20)|0); //@line 409 "fixedfontwrap.cpp"
 var $129=HEAP32[(($128)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $130=$129; //@line 409 "fixedfontwrap.cpp"
 var $131=$xTemp; //@line 409 "fixedfontwrap.cpp"
 var $132=$yTemp; //@line 409 "fixedfontwrap.cpp"
 var $133=$currCharInfo; //@line 409 "fixedfontwrap.cpp"
 var $134=(($133)|0); //@line 409 "fixedfontwrap.cpp"
 var $135=HEAP32[(($134)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $136=$currCharInfo; //@line 409 "fixedfontwrap.cpp"
 var $137=(($136+4)|0); //@line 409 "fixedfontwrap.cpp"
 var $138=HEAP32[(($137)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $139=$14; //@line 409 "fixedfontwrap.cpp"
 var $140=(($139+8)|0); //@line 409 "fixedfontwrap.cpp"
 var $141=HEAP32[(($140)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $142=$14; //@line 409 "fixedfontwrap.cpp"
 var $143=(($142+12)|0); //@line 409 "fixedfontwrap.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 409 "fixedfontwrap.cpp"
 var $145=$8; //@line 409 "fixedfontwrap.cpp"
 var $146=$9; //@line 409 "fixedfontwrap.cpp"
 var $147=$10; //@line 409 "fixedfontwrap.cpp"
 var $148=$11; //@line 409 "fixedfontwrap.cpp"
 var $149=$12; //@line 409 "fixedfontwrap.cpp"
 var $150=(($149)&1); //@line 409 "fixedfontwrap.cpp"
 var $151=FUNCTION_TABLE[$127]($123,$130,$131,$132,$135,$138,$141,$144,$145,$146,$147,$148,1,$150); //@line 409 "fixedfontwrap.cpp"
 if($151){label=21;break;}else{label=20;break;} //@line 409 "fixedfontwrap.cpp"
 case 20: 
 $1=0; //@line 418 "fixedfontwrap.cpp"
 label=25;break; //@line 418 "fixedfontwrap.cpp"
 case 21: 
 label=22;break; //@line 419 "fixedfontwrap.cpp"
 case 22: 
 var $155=$currChar; //@line 422 "fixedfontwrap.cpp"
 var $156=(($155+1)|0); //@line 422 "fixedfontwrap.cpp"
 $currChar=$156; //@line 422 "fixedfontwrap.cpp"
 var $157=$14; //@line 423 "fixedfontwrap.cpp"
 var $158=(($157+8)|0); //@line 423 "fixedfontwrap.cpp"
 var $159=HEAP32[(($158)>>2)]; //@line 423 "fixedfontwrap.cpp"
 var $160=$xTemp; //@line 423 "fixedfontwrap.cpp"
 var $161=((($160)+($159))|0); //@line 423 "fixedfontwrap.cpp"
 $xTemp=$161; //@line 423 "fixedfontwrap.cpp"
 label=23;break; //@line 424 "fixedfontwrap.cpp"
 case 23: 
 var $163=$i; //@line 404 "fixedfontwrap.cpp"
 var $164=((($163)+(1))|0); //@line 404 "fixedfontwrap.cpp"
 $i=$164; //@line 404 "fixedfontwrap.cpp"
 label=17;break; //@line 404 "fixedfontwrap.cpp"
 case 24: 
 $1=1; //@line 426 "fixedfontwrap.cpp"
 label=25;break; //@line 426 "fixedfontwrap.cpp"
 case 25: 
 var $167=$1; //@line 427 "fixedfontwrap.cpp"
 STACKTOP=sp;return $167; //@line 427 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN23bitmappedFixedFontClass4initEP13ddSpriteClassii($this,$fontSurface,$charWidth,$charHeight){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $i;
 $2=$this;
 $3=$fontSurface;
 $4=$charWidth;
 $5=$charHeight;
 var $6=$2;
 var $7=$6; //@line 443 "fixedfontwrap.cpp"
 var $8=(($7+4)|0); //@line 443 "fixedfontwrap.cpp"
 var $9=HEAP8[($8)]; //@line 443 "fixedfontwrap.cpp"
 var $10=(($9)&1); //@line 443 "fixedfontwrap.cpp"
 if($10){label=2;break;}else{label=3;break;} //@line 443 "fixedfontwrap.cpp"
 case 2: 
 $1=0; //@line 443 "fixedfontwrap.cpp"
 label=8;break; //@line 443 "fixedfontwrap.cpp"
 case 3: 
 var $13=__Znaj(3072); //@line 446 "fixedfontwrap.cpp"
 var $14=$13; //@line 446 "fixedfontwrap.cpp"
 var $15=(($6+16)|0); //@line 446 "fixedfontwrap.cpp"
 HEAP32[(($15)>>2)]=$14; //@line 446 "fixedfontwrap.cpp"
 $i=0; //@line 447 "fixedfontwrap.cpp"
 label=4;break; //@line 447 "fixedfontwrap.cpp"
 case 4: 
 var $17=$i; //@line 447 "fixedfontwrap.cpp"
 var $18=($17|0)<256; //@line 447 "fixedfontwrap.cpp"
 if($18){label=5;break;}else{label=7;break;} //@line 447 "fixedfontwrap.cpp"
 case 5: 
 var $20=$i; //@line 447 "fixedfontwrap.cpp"
 var $21=(($6+16)|0); //@line 447 "fixedfontwrap.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 447 "fixedfontwrap.cpp"
 var $23=(($22+((($20)*(12))&-1))|0); //@line 447 "fixedfontwrap.cpp"
 var $24=(($23+8)|0); //@line 447 "fixedfontwrap.cpp"
 HEAP8[($24)]=0; //@line 447 "fixedfontwrap.cpp"
 label=6;break; //@line 447 "fixedfontwrap.cpp"
 case 6: 
 var $26=$i; //@line 447 "fixedfontwrap.cpp"
 var $27=((($26)+(1))|0); //@line 447 "fixedfontwrap.cpp"
 $i=$27; //@line 447 "fixedfontwrap.cpp"
 label=4;break; //@line 447 "fixedfontwrap.cpp"
 case 7: 
 var $29=$3; //@line 450 "fixedfontwrap.cpp"
 var $30=(($6+20)|0); //@line 450 "fixedfontwrap.cpp"
 HEAP32[(($30)>>2)]=$29; //@line 450 "fixedfontwrap.cpp"
 var $31=$4; //@line 450 "fixedfontwrap.cpp"
 var $32=$6; //@line 450 "fixedfontwrap.cpp"
 var $33=(($32+8)|0); //@line 450 "fixedfontwrap.cpp"
 HEAP32[(($33)>>2)]=$31; //@line 450 "fixedfontwrap.cpp"
 var $34=$5; //@line 450 "fixedfontwrap.cpp"
 var $35=$6; //@line 450 "fixedfontwrap.cpp"
 var $36=(($35+12)|0); //@line 450 "fixedfontwrap.cpp"
 HEAP32[(($36)>>2)]=$34; //@line 450 "fixedfontwrap.cpp"
 var $37=$6; //@line 451 "fixedfontwrap.cpp"
 var $38=(($37+4)|0); //@line 451 "fixedfontwrap.cpp"
 HEAP8[($38)]=1; //@line 451 "fixedfontwrap.cpp"
 $1=1; //@line 453 "fixedfontwrap.cpp"
 label=8;break; //@line 453 "fixedfontwrap.cpp"
 case 8: 
 var $40=$1; //@line 454 "fixedfontwrap.cpp"
 STACKTOP=sp;return $40; //@line 454 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN23bitmappedFixedFontClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 461 "fixedfontwrap.cpp"
 var $5=(($4+4)|0); //@line 461 "fixedfontwrap.cpp"
 var $6=HEAP8[($5)]; //@line 461 "fixedfontwrap.cpp"
 var $7=(($6)&1); //@line 461 "fixedfontwrap.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 461 "fixedfontwrap.cpp"
 case 2: 
 $1=0; //@line 461 "fixedfontwrap.cpp"
 label=6;break; //@line 461 "fixedfontwrap.cpp"
 case 3: 
 var $10=(($3+16)|0); //@line 463 "fixedfontwrap.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 463 "fixedfontwrap.cpp"
 var $12=($11|0)==0; //@line 463 "fixedfontwrap.cpp"
 if($12){label=5;break;}else{label=4;break;} //@line 463 "fixedfontwrap.cpp"
 case 4: 
 var $14=$11; //@line 463 "fixedfontwrap.cpp"
 __ZdaPv($14); //@line 463 "fixedfontwrap.cpp"
 label=5;break; //@line 463 "fixedfontwrap.cpp"
 case 5: 
 var $16=$3; //@line 465 "fixedfontwrap.cpp"
 var $17=(($16+4)|0); //@line 465 "fixedfontwrap.cpp"
 HEAP8[($17)]=0; //@line 465 "fixedfontwrap.cpp"
 $1=1; //@line 467 "fixedfontwrap.cpp"
 label=6;break; //@line 467 "fixedfontwrap.cpp"
 case 6: 
 var $19=$1; //@line 468 "fixedfontwrap.cpp"
 STACKTOP=sp;return $19; //@line 468 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN23bitmappedFixedFontClass23setUpCharactersInMatrixEPciiiii($this,$string,$xMat,$yMat,$matWidthChars,$hSpace,$vSpace){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $currChar;
 var $currCharInfo;
 var $x;
 var $y;
 $1=$this;
 $2=$string;
 $3=$xMat;
 $4=$yMat;
 $5=$matWidthChars;
 $6=$hSpace;
 $7=$vSpace;
 var $8=$1;
 var $9=$3; //@line 488 "fixedfontwrap.cpp"
 $x=$9; //@line 488 "fixedfontwrap.cpp"
 var $10=$4; //@line 488 "fixedfontwrap.cpp"
 $y=$10; //@line 488 "fixedfontwrap.cpp"
 var $11=$2; //@line 490 "fixedfontwrap.cpp"
 $currChar=$11; //@line 490 "fixedfontwrap.cpp"
 label=2;break; //@line 490 "fixedfontwrap.cpp"
 case 2: 
 var $13=$currChar; //@line 490 "fixedfontwrap.cpp"
 var $14=HEAP8[($13)]; //@line 490 "fixedfontwrap.cpp"
 var $15=(($14<<24)>>24); //@line 490 "fixedfontwrap.cpp"
 var $16=($15|0)!=0; //@line 490 "fixedfontwrap.cpp"
 if($16){label=3;break;}else{label=7;break;} //@line 490 "fixedfontwrap.cpp"
 case 3: 
 var $18=$currChar; //@line 492 "fixedfontwrap.cpp"
 var $19=HEAP8[($18)]; //@line 492 "fixedfontwrap.cpp"
 var $20=($19&255); //@line 492 "fixedfontwrap.cpp"
 var $21=(($8+16)|0); //@line 492 "fixedfontwrap.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 492 "fixedfontwrap.cpp"
 var $23=(($22+((($20)*(12))&-1))|0); //@line 492 "fixedfontwrap.cpp"
 $currCharInfo=$23; //@line 492 "fixedfontwrap.cpp"
 var $24=$currCharInfo; //@line 493 "fixedfontwrap.cpp"
 var $25=(($24+8)|0); //@line 493 "fixedfontwrap.cpp"
 HEAP8[($25)]=1; //@line 493 "fixedfontwrap.cpp"
 var $26=$x; //@line 494 "fixedfontwrap.cpp"
 var $27=$currCharInfo; //@line 494 "fixedfontwrap.cpp"
 var $28=(($27)|0); //@line 494 "fixedfontwrap.cpp"
 HEAP32[(($28)>>2)]=$26; //@line 494 "fixedfontwrap.cpp"
 var $29=$y; //@line 495 "fixedfontwrap.cpp"
 var $30=$currCharInfo; //@line 495 "fixedfontwrap.cpp"
 var $31=(($30+4)|0); //@line 495 "fixedfontwrap.cpp"
 HEAP32[(($31)>>2)]=$29; //@line 495 "fixedfontwrap.cpp"
 var $32=$8; //@line 498 "fixedfontwrap.cpp"
 var $33=(($32+8)|0); //@line 498 "fixedfontwrap.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 498 "fixedfontwrap.cpp"
 var $35=$6; //@line 498 "fixedfontwrap.cpp"
 var $36=((($34)+($35))|0); //@line 498 "fixedfontwrap.cpp"
 var $37=$x; //@line 498 "fixedfontwrap.cpp"
 var $38=((($37)+($36))|0); //@line 498 "fixedfontwrap.cpp"
 $x=$38; //@line 498 "fixedfontwrap.cpp"
 var $39=$x; //@line 500 "fixedfontwrap.cpp"
 var $40=$5; //@line 500 "fixedfontwrap.cpp"
 var $41=$8; //@line 500 "fixedfontwrap.cpp"
 var $42=(($41+8)|0); //@line 500 "fixedfontwrap.cpp"
 var $43=HEAP32[(($42)>>2)]; //@line 500 "fixedfontwrap.cpp"
 var $44=$6; //@line 500 "fixedfontwrap.cpp"
 var $45=((($43)+($44))|0); //@line 500 "fixedfontwrap.cpp"
 var $46=(Math_imul($40,$45)|0); //@line 500 "fixedfontwrap.cpp"
 var $47=$3; //@line 500 "fixedfontwrap.cpp"
 var $48=((($46)+($47))|0); //@line 500 "fixedfontwrap.cpp"
 var $49=($39|0)>=($48|0); //@line 500 "fixedfontwrap.cpp"
 if($49){label=4;break;}else{label=5;break;} //@line 500 "fixedfontwrap.cpp"
 case 4: 
 var $51=$3; //@line 501 "fixedfontwrap.cpp"
 $x=$51; //@line 501 "fixedfontwrap.cpp"
 var $52=$8; //@line 502 "fixedfontwrap.cpp"
 var $53=(($52+12)|0); //@line 502 "fixedfontwrap.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 502 "fixedfontwrap.cpp"
 var $55=$7; //@line 502 "fixedfontwrap.cpp"
 var $56=((($54)+($55))|0); //@line 502 "fixedfontwrap.cpp"
 var $57=$y; //@line 502 "fixedfontwrap.cpp"
 var $58=((($57)+($56))|0); //@line 502 "fixedfontwrap.cpp"
 $y=$58; //@line 502 "fixedfontwrap.cpp"
 label=5;break; //@line 503 "fixedfontwrap.cpp"
 case 5: 
 label=6;break; //@line 504 "fixedfontwrap.cpp"
 case 6: 
 var $61=$currChar; //@line 490 "fixedfontwrap.cpp"
 var $62=(($61+1)|0); //@line 490 "fixedfontwrap.cpp"
 $currChar=$62; //@line 490 "fixedfontwrap.cpp"
 label=2;break; //@line 490 "fixedfontwrap.cpp"
 case 7: 
 STACKTOP=sp;return 1; //@line 506 "fixedfontwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN14fixedFontClassD2Ev($2); //@line 67 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 67 "./fixedfontwrap.h"
}


function __ZN14fixedFontClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN14fixedFontClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 67 "./fixedfontwrap.h"
 case 2: 
 var $6=$4; //@line 67 "./fixedfontwrap.h"
 __ZdlPv($6); //@line 67 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 67 "./fixedfontwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 67 "./fixedfontwrap.h"
 var $10=$8$1;
 $3=$10; //@line 67 "./fixedfontwrap.h"
 var $11=$4; //@line 67 "./fixedfontwrap.h"
 __ZdlPv($11); //@line 67 "./fixedfontwrap.h"
 label=4;break; //@line 67 "./fixedfontwrap.h"
 case 4: 
 var $13=$2; //@line 67 "./fixedfontwrap.h"
 var $14=$3; //@line 67 "./fixedfontwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 67 "./fixedfontwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 73 "./fixedfontwrap.h"
 var $4=HEAP8[($3)]; //@line 73 "./fixedfontwrap.h"
 var $5=(($4)&1); //@line 73 "./fixedfontwrap.h"
 STACKTOP=sp;return $5; //@line 73 "./fixedfontwrap.h"
}


function __ZN14fixedFontClass12getCharWidthEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 74 "./fixedfontwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 74 "./fixedfontwrap.h"
 STACKTOP=sp;return $4; //@line 74 "./fixedfontwrap.h"
}


function __ZN14fixedFontClass13getCharHeightEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+12)|0); //@line 75 "./fixedfontwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 75 "./fixedfontwrap.h"
 STACKTOP=sp;return $4; //@line 75 "./fixedfontwrap.h"
}


function __ZN14fixedFontClass12drawTextLineER14ddSurfaceClassPciiiiib9alignEnum($this,$srfTo,$text,$textSize,$x,$y,$boxWidth,$boxHeight,$transparent,$alignment){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 $1=$this;
 $2=$srfTo;
 $3=$text;
 $4=$textSize;
 $5=$x;
 $6=$y;
 $7=$boxWidth;
 $8=$boxHeight;
 var $11=($transparent&1);
 $9=$11;
 $10=$alignment;
 var $12=$1;
 var $13=$12; //@line 79 "./fixedfontwrap.h"
 var $14=HEAP32[(($13)>>2)]; //@line 79 "./fixedfontwrap.h"
 var $15=(($14+8)|0); //@line 79 "./fixedfontwrap.h"
 var $16=HEAP32[(($15)>>2)]; //@line 79 "./fixedfontwrap.h"
 var $17=$2; //@line 79 "./fixedfontwrap.h"
 var $18=$3; //@line 79 "./fixedfontwrap.h"
 var $19=$4; //@line 79 "./fixedfontwrap.h"
 var $20=$5; //@line 79 "./fixedfontwrap.h"
 var $21=$6; //@line 79 "./fixedfontwrap.h"
 var $22=$7; //@line 79 "./fixedfontwrap.h"
 var $23=$8; //@line 79 "./fixedfontwrap.h"
 var $24=$9; //@line 79 "./fixedfontwrap.h"
 var $25=(($24)&1); //@line 79 "./fixedfontwrap.h"
 var $26=$10; //@line 79 "./fixedfontwrap.h"
 var $27=FUNCTION_TABLE[$16]($12,$17,$18,$19,$20,$21,$22,$23,$25,$26,1,0,0,0,0); //@line 79 "./fixedfontwrap.h"
 STACKTOP=sp;return $27; //@line 79 "./fixedfontwrap.h"
}


function __ZN23bitmappedFixedFontClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN23bitmappedFixedFontClassD2Ev($2); //@line 99 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 99 "./fixedfontwrap.h"
}


function __ZN23bitmappedFixedFontClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN23bitmappedFixedFontClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 99 "./fixedfontwrap.h"
 case 2: 
 var $6=$4; //@line 99 "./fixedfontwrap.h"
 __ZdlPv($6); //@line 99 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 99 "./fixedfontwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 99 "./fixedfontwrap.h"
 var $10=$8$1;
 $3=$10; //@line 99 "./fixedfontwrap.h"
 var $11=$4; //@line 99 "./fixedfontwrap.h"
 __ZdlPv($11); //@line 99 "./fixedfontwrap.h"
 label=4;break; //@line 99 "./fixedfontwrap.h"
 case 4: 
 var $13=$2; //@line 99 "./fixedfontwrap.h"
 var $14=$3; //@line 99 "./fixedfontwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 99 "./fixedfontwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN23bitmappedFixedFontClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 99 "./fixedfontwrap.h"
 HEAP32[(($5)>>2)]=16536; //@line 99 "./fixedfontwrap.h"
 var $6=$4; //@line 99 "./fixedfontwrap.h"
 var $7=HEAP32[(($6)>>2)]; //@line 99 "./fixedfontwrap.h"
 var $8=(($7+24)|0); //@line 99 "./fixedfontwrap.h"
 var $9=HEAP32[(($8)>>2)]; //@line 99 "./fixedfontwrap.h"
 var $10=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 99 "./fixedfontwrap.h"
 case 2: 
 var $12=$4; //@line 99 "./fixedfontwrap.h"
 __ZN14fixedFontClassD2Ev($12); //@line 99 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 99 "./fixedfontwrap.h"
 case 3: 
 var $14$0 = ___cxa_find_matching_catch(-1, -1); var $14$1 = tempRet0;
 var $15=$14$0;
 $2=$15; //@line 99 "./fixedfontwrap.h"
 var $16=$14$1;
 $3=$16; //@line 99 "./fixedfontwrap.h"
 var $17=$4; //@line 99 "./fixedfontwrap.h"
 (function() { try { __THREW__ = 0; return __ZN14fixedFontClassD2Ev($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 99 "./fixedfontwrap.h"
 case 4: 
 label=5;break; //@line 99 "./fixedfontwrap.h"
 case 5: 
 var $20=$2; //@line 99 "./fixedfontwrap.h"
 var $21=$3; //@line 99 "./fixedfontwrap.h"
 var $22$0=$20;
 var $22$1=0;
 var $23$0=$22$0;
 var $23$1=$21;
 ___resumeException($23$0) //@line 99 "./fixedfontwrap.h"
 case 6: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev(); //@line 99 "./fixedfontwrap.h"
 throw "Reached an unreachable!"; //@line 99 "./fixedfontwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14fixedFontClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 67 "./fixedfontwrap.h"
}


function __Z10moveCamerav(){
 var label=0;


 var $1=HEAPF64[((19584)>>3)]; //@line 53 "gamecode.cpp"
 var $2=HEAPF64[((19560)>>3)]; //@line 53 "gamecode.cpp"
 var $3=($2)+($1); //@line 53 "gamecode.cpp"
 HEAPF64[((19560)>>3)]=$3; //@line 53 "gamecode.cpp"
 var $4=HEAPF64[((19592)>>3)]; //@line 54 "gamecode.cpp"
 var $5=HEAPF64[((19568)>>3)]; //@line 54 "gamecode.cpp"
 var $6=($5)+($4); //@line 54 "gamecode.cpp"
 HEAPF64[((19568)>>3)]=$6; //@line 54 "gamecode.cpp"
 var $7=HEAPF64[((19600)>>3)]; //@line 57 "gamecode.cpp"
 var $8=HEAPF64[((19536)>>3)]; //@line 57 "gamecode.cpp"
 var $9=($8)+($7); //@line 57 "gamecode.cpp"
 HEAPF64[((19536)>>3)]=$9; //@line 57 "gamecode.cpp"
 var $10=HEAPF64[((19608)>>3)]; //@line 58 "gamecode.cpp"
 var $11=HEAPF64[((19544)>>3)]; //@line 58 "gamecode.cpp"
 var $12=($11)+($10); //@line 58 "gamecode.cpp"
 HEAPF64[((19544)>>3)]=$12; //@line 58 "gamecode.cpp"
 return 1; //@line 60 "gamecode.cpp"
}


function __Z25drawBackgroundComplementsv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+200)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $x;
 var $y;
 var $tempText=sp;
 var $nodeP;
 $x=44; //@line 74 "gamecode.cpp"
 $y=89; //@line 74 "gamecode.cpp"
 var $1=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 75 "gamecode.cpp"
 $nodeP=$1; //@line 75 "gamecode.cpp"
 label=2;break; //@line 75 "gamecode.cpp"
 case 2: 
 var $3=$nodeP; //@line 75 "gamecode.cpp"
 var $4=($3|0)!=0; //@line 75 "gamecode.cpp"
 if($4){label=3;break;}else{label=5;break;} //@line 75 "gamecode.cpp"
 case 3: 
 var $6=(($tempText)|0); //@line 76 "gamecode.cpp"
 var $7=HEAP32[((19848)>>2)]; //@line 76 "gamecode.cpp"
 var $8=($7|0)==0; //@line 76 "gamecode.cpp"
 var $9=($8?13728:15376); //@line 76 "gamecode.cpp"
 var $10=$nodeP; //@line 76 "gamecode.cpp"
 var $11=(($10)|0); //@line 76 "gamecode.cpp"
 var $12=(($11+248)|0); //@line 76 "gamecode.cpp"
 var $13=HEAPF64[(($12)>>3)]; //@line 76 "gamecode.cpp"
 var $14=(($13)&-1); //@line 76 "gamecode.cpp"
 var $15=$nodeP; //@line 76 "gamecode.cpp"
 var $16=(($15)|0); //@line 76 "gamecode.cpp"
 var $17=(($16+240)|0); //@line 76 "gamecode.cpp"
 var $18=HEAPF64[(($17)>>3)]; //@line 76 "gamecode.cpp"
 var $19=(($18)&-1); //@line 76 "gamecode.cpp"
 var $20=_sprintf($6,$9,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAP32[(((tempVarArgs)+(8))>>2)]=$19,tempVarArgs)); STACKTOP=tempVarArgs; //@line 76 "gamecode.cpp"
 var $21=HEAP32[((19680)>>2)]; //@line 81 "gamecode.cpp"
 var $22=(($21+48)|0); //@line 81 "gamecode.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 81 "gamecode.cpp"
 var $24=(($tempText)|0); //@line 81 "gamecode.cpp"
 var $25=(($tempText)|0); //@line 81 "gamecode.cpp"
 var $26=_strlen($25); //@line 81 "gamecode.cpp"
 var $27=$x; //@line 81 "gamecode.cpp"
 var $28=$y; //@line 81 "gamecode.cpp"
 var $29=FUNCTION_TABLE[$23](19680,20656,$24,$26,$27,$28,83,19,1,0,1); //@line 81 "gamecode.cpp"
 var $30=$x; //@line 85 "gamecode.cpp"
 var $31=((($30)+(300))|0); //@line 85 "gamecode.cpp"
 $x=$31; //@line 85 "gamecode.cpp"
 label=4;break; //@line 86 "gamecode.cpp"
 case 4: 
 var $33=$nodeP; //@line 75 "gamecode.cpp"
 var $34=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$33); //@line 75 "gamecode.cpp"
 $nodeP=$34; //@line 75 "gamecode.cpp"
 label=2;break; //@line 75 "gamecode.cpp"
 case 5: 
 STACKTOP=sp;return 1; //@line 95 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z25drawForegroundComplementsv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $x;
 var $y;
 var $gameOverText;
 var $pausedText;
 var $2=HEAP8[(19808)]; //@line 106 "gamecode.cpp"
 var $3=(($2)&1); //@line 106 "gamecode.cpp"
 if($3){label=2;break;}else{label=15;break;} //@line 106 "gamecode.cpp"
 case 2: 
 var $5=HEAP32[((19500)>>2)]; //@line 110 "gamecode.cpp"
 var $6=$5; //@line 110 "gamecode.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 110 "gamecode.cpp"
 var $8=(($7+60)|0); //@line 110 "gamecode.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 110 "gamecode.cpp"
 var $10=HEAP32[((19652)>>2)]; //@line 110 "gamecode.cpp"
 var $11=HEAP32[((19656)>>2)]; //@line 112 "gamecode.cpp"
 var $12=__Z13getGroundWalli($11); //@line 112 "gamecode.cpp"
 var $13=HEAP32[((19652)>>2)]; //@line 112 "gamecode.cpp"
 var $14=HEAP32[((19580)>>2)]; //@line 112 "gamecode.cpp"
 var $15=((($14)-(1))|0); //@line 112 "gamecode.cpp"
 var $16=FUNCTION_TABLE[$9]($5,$10,$12,$13,$15,255,0,0); //@line 112 "gamecode.cpp"
 if($16){label=4;break;}else{label=3;break;} //@line 112 "gamecode.cpp"
 case 3: 
 var $18=__ZN14conLoggerClass7logLineEPcbbbz(19416,11928,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 118 "gamecode.cpp"
 $1=0; //@line 120 "gamecode.cpp"
 label=54;break; //@line 120 "gamecode.cpp"
 case 4: 
 var $20=HEAP32[((19500)>>2)]; //@line 123 "gamecode.cpp"
 var $21=$20; //@line 123 "gamecode.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 123 "gamecode.cpp"
 var $23=(($22+60)|0); //@line 123 "gamecode.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 123 "gamecode.cpp"
 var $25=HEAP32[((19656)>>2)]; //@line 123 "gamecode.cpp"
 var $26=HEAP32[((19656)>>2)]; //@line 125 "gamecode.cpp"
 var $27=__Z13getGroundWalli($26); //@line 125 "gamecode.cpp"
 var $28=HEAP32[((19656)>>2)]; //@line 125 "gamecode.cpp"
 var $29=HEAP32[((19580)>>2)]; //@line 125 "gamecode.cpp"
 var $30=((($29)-(1))|0); //@line 125 "gamecode.cpp"
 var $31=FUNCTION_TABLE[$24]($20,$25,$27,$28,$30,255,0,0); //@line 125 "gamecode.cpp"
 if($31){label=6;break;}else{label=5;break;} //@line 125 "gamecode.cpp"
 case 5: 
 var $33=__ZN14conLoggerClass7logLineEPcbbbz(19416,8992,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 131 "gamecode.cpp"
 $1=0; //@line 133 "gamecode.cpp"
 label=54;break; //@line 133 "gamecode.cpp"
 case 6: 
 var $35=HEAP32[((19500)>>2)]; //@line 136 "gamecode.cpp"
 var $36=$35; //@line 136 "gamecode.cpp"
 var $37=HEAP32[(($36)>>2)]; //@line 136 "gamecode.cpp"
 var $38=(($37+60)|0); //@line 136 "gamecode.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 136 "gamecode.cpp"
 var $40=HEAP32[((19660)>>2)]; //@line 136 "gamecode.cpp"
 var $41=HEAP32[((19660)>>2)]; //@line 138 "gamecode.cpp"
 var $42=__Z13getGroundWalli($41); //@line 138 "gamecode.cpp"
 var $43=HEAP32[((19660)>>2)]; //@line 138 "gamecode.cpp"
 var $44=HEAP32[((19580)>>2)]; //@line 138 "gamecode.cpp"
 var $45=((($44)-(1))|0); //@line 138 "gamecode.cpp"
 var $46=FUNCTION_TABLE[$39]($35,$40,$42,$43,$45,0,255,0); //@line 138 "gamecode.cpp"
 if($46){label=8;break;}else{label=7;break;} //@line 138 "gamecode.cpp"
 case 7: 
 var $48=__ZN14conLoggerClass7logLineEPcbbbz(19416,7040,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 144 "gamecode.cpp"
 $1=0; //@line 146 "gamecode.cpp"
 label=54;break; //@line 146 "gamecode.cpp"
 case 8: 
 var $50=HEAP32[((19500)>>2)]; //@line 149 "gamecode.cpp"
 var $51=$50; //@line 149 "gamecode.cpp"
 var $52=HEAP32[(($51)>>2)]; //@line 149 "gamecode.cpp"
 var $53=(($52+60)|0); //@line 149 "gamecode.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 149 "gamecode.cpp"
 var $55=HEAP32[((19664)>>2)]; //@line 149 "gamecode.cpp"
 var $56=HEAP32[((19664)>>2)]; //@line 151 "gamecode.cpp"
 var $57=__Z13getGroundWalli($56); //@line 151 "gamecode.cpp"
 var $58=HEAP32[((19664)>>2)]; //@line 151 "gamecode.cpp"
 var $59=HEAP32[((19580)>>2)]; //@line 151 "gamecode.cpp"
 var $60=((($59)-(1))|0); //@line 151 "gamecode.cpp"
 var $61=FUNCTION_TABLE[$54]($50,$55,$57,$58,$60,0,255,0); //@line 151 "gamecode.cpp"
 if($61){label=10;break;}else{label=9;break;} //@line 151 "gamecode.cpp"
 case 9: 
 var $63=__ZN14conLoggerClass7logLineEPcbbbz(19416,5696,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 157 "gamecode.cpp"
 $1=0; //@line 159 "gamecode.cpp"
 label=54;break; //@line 159 "gamecode.cpp"
 case 10: 
 var $65=HEAP32[((19500)>>2)]; //@line 162 "gamecode.cpp"
 var $66=$65; //@line 162 "gamecode.cpp"
 var $67=HEAP32[(($66)>>2)]; //@line 162 "gamecode.cpp"
 var $68=(($67+60)|0); //@line 162 "gamecode.cpp"
 var $69=HEAP32[(($68)>>2)]; //@line 162 "gamecode.cpp"
 var $70=HEAP32[((19668)>>2)]; //@line 162 "gamecode.cpp"
 var $71=HEAP32[((19668)>>2)]; //@line 164 "gamecode.cpp"
 var $72=__Z13getGroundWalli($71); //@line 164 "gamecode.cpp"
 var $73=HEAP32[((19668)>>2)]; //@line 164 "gamecode.cpp"
 var $74=HEAP32[((19580)>>2)]; //@line 164 "gamecode.cpp"
 var $75=((($74)-(1))|0); //@line 164 "gamecode.cpp"
 var $76=FUNCTION_TABLE[$69]($65,$70,$72,$73,$75,0,0,255); //@line 164 "gamecode.cpp"
 if($76){label=12;break;}else{label=11;break;} //@line 164 "gamecode.cpp"
 case 11: 
 var $78=__ZN14conLoggerClass7logLineEPcbbbz(19416,4848,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 170 "gamecode.cpp"
 $1=0; //@line 172 "gamecode.cpp"
 label=54;break; //@line 172 "gamecode.cpp"
 case 12: 
 var $80=HEAP32[((19500)>>2)]; //@line 175 "gamecode.cpp"
 var $81=$80; //@line 175 "gamecode.cpp"
 var $82=HEAP32[(($81)>>2)]; //@line 175 "gamecode.cpp"
 var $83=(($82+60)|0); //@line 175 "gamecode.cpp"
 var $84=HEAP32[(($83)>>2)]; //@line 175 "gamecode.cpp"
 var $85=HEAP32[((19672)>>2)]; //@line 175 "gamecode.cpp"
 var $86=HEAP32[((19672)>>2)]; //@line 177 "gamecode.cpp"
 var $87=__Z13getGroundWalli($86); //@line 177 "gamecode.cpp"
 var $88=HEAP32[((19672)>>2)]; //@line 177 "gamecode.cpp"
 var $89=HEAP32[((19580)>>2)]; //@line 177 "gamecode.cpp"
 var $90=((($89)-(1))|0); //@line 177 "gamecode.cpp"
 var $91=FUNCTION_TABLE[$84]($80,$85,$87,$88,$90,0,0,255); //@line 177 "gamecode.cpp"
 if($91){label=14;break;}else{label=13;break;} //@line 177 "gamecode.cpp"
 case 13: 
 var $93=__ZN14conLoggerClass7logLineEPcbbbz(19416,4416,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 183 "gamecode.cpp"
 $1=0; //@line 185 "gamecode.cpp"
 label=54;break; //@line 185 "gamecode.cpp"
 case 14: 
 label=15;break; //@line 187 "gamecode.cpp"
 case 15: 
 var $96=HEAP8[(19776)]; //@line 191 "gamecode.cpp"
 var $97=(($96)&1); //@line 191 "gamecode.cpp"
 if($97){label=16;break;}else{label=49;break;} //@line 191 "gamecode.cpp"
 case 16: 
 $y=0; //@line 192 "gamecode.cpp"
 label=17;break; //@line 192 "gamecode.cpp"
 case 17: 
 var $100=$y; //@line 192 "gamecode.cpp"
 var $101=HEAP32[((19580)>>2)]; //@line 192 "gamecode.cpp"
 var $102=($100|0)<($101|0); //@line 192 "gamecode.cpp"
 if($102){label=18;break;}else{label=36;break;} //@line 192 "gamecode.cpp"
 case 18: 
 var $104=$y; //@line 194 "gamecode.cpp"
 var $105=__Z11getLeftWalli($104); //@line 194 "gamecode.cpp"
 $x=$105; //@line 194 "gamecode.cpp"
 var $106=$x; //@line 195 "gamecode.cpp"
 var $107=($106|0)<0; //@line 195 "gamecode.cpp"
 if($107){label=19;break;}else{label=20;break;} //@line 195 "gamecode.cpp"
 case 19: 
 var $112=0;label=21;break; //@line 195 "gamecode.cpp"
 case 20: 
 var $110=$x; //@line 195 "gamecode.cpp"
 var $112=$110;label=21;break; //@line 195 "gamecode.cpp"
 case 21: 
 var $112; //@line 195 "gamecode.cpp"
 $x=$112; //@line 195 "gamecode.cpp"
 var $113=$x; //@line 196 "gamecode.cpp"
 var $114=HEAP32[((19576)>>2)]; //@line 196 "gamecode.cpp"
 var $115=((($114)-(1))|0); //@line 196 "gamecode.cpp"
 var $116=($113|0)>($115|0); //@line 196 "gamecode.cpp"
 if($116){label=22;break;}else{label=23;break;} //@line 196 "gamecode.cpp"
 case 22: 
 var $118=HEAP32[((19576)>>2)]; //@line 196 "gamecode.cpp"
 var $119=((($118)-(1))|0); //@line 196 "gamecode.cpp"
 var $123=$119;label=24;break; //@line 196 "gamecode.cpp"
 case 23: 
 var $121=$x; //@line 196 "gamecode.cpp"
 var $123=$121;label=24;break; //@line 196 "gamecode.cpp"
 case 24: 
 var $123; //@line 196 "gamecode.cpp"
 $x=$123; //@line 196 "gamecode.cpp"
 var $124=HEAP32[((19500)>>2)]; //@line 198 "gamecode.cpp"
 var $125=$124; //@line 198 "gamecode.cpp"
 var $126=HEAP32[(($125)>>2)]; //@line 198 "gamecode.cpp"
 var $127=(($126+56)|0); //@line 198 "gamecode.cpp"
 var $128=HEAP32[(($127)>>2)]; //@line 198 "gamecode.cpp"
 var $129=$x; //@line 198 "gamecode.cpp"
 var $130=HEAP32[((19504)>>2)]; //@line 198 "gamecode.cpp"
 var $131=($130|0); //@line 198 "gamecode.cpp"
 var $132=HEAPF64[((19560)>>3)]; //@line 198 "gamecode.cpp"
 var $133=($131)-($132); //@line 198 "gamecode.cpp"
 var $134=(($133)&-1); //@line 198 "gamecode.cpp"
 var $135=((($129)+($134))|0); //@line 198 "gamecode.cpp"
 var $136=$y; //@line 198 "gamecode.cpp"
 var $137=HEAP32[((19508)>>2)]; //@line 198 "gamecode.cpp"
 var $138=($137|0); //@line 198 "gamecode.cpp"
 var $139=HEAPF64[((19568)>>3)]; //@line 198 "gamecode.cpp"
 var $140=($138)-($139); //@line 198 "gamecode.cpp"
 var $141=(($140)&-1); //@line 198 "gamecode.cpp"
 var $142=((($136)+($141))|0); //@line 198 "gamecode.cpp"
 var $143=FUNCTION_TABLE[$128]($124,$135,$142,255,255,255); //@line 198 "gamecode.cpp"
 if($143){label=26;break;}else{label=25;break;} //@line 198 "gamecode.cpp"
 case 25: 
 var $145=$x; //@line 204 "gamecode.cpp"
 var $146=$y; //@line 204 "gamecode.cpp"
 var $147=__ZN14conLoggerClass7logLineEPcbbbz(19416,3608,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$145,HEAP32[(((tempVarArgs)+(8))>>2)]=$146,tempVarArgs)); STACKTOP=tempVarArgs; //@line 204 "gamecode.cpp"
 $1=0; //@line 207 "gamecode.cpp"
 label=54;break; //@line 207 "gamecode.cpp"
 case 26: 
 var $149=$y; //@line 211 "gamecode.cpp"
 var $150=__Z12getRightWalli($149); //@line 211 "gamecode.cpp"
 $x=$150; //@line 211 "gamecode.cpp"
 var $151=$x; //@line 212 "gamecode.cpp"
 var $152=($151|0)<0; //@line 212 "gamecode.cpp"
 if($152){label=27;break;}else{label=28;break;} //@line 212 "gamecode.cpp"
 case 27: 
 var $157=0;label=29;break; //@line 212 "gamecode.cpp"
 case 28: 
 var $155=$x; //@line 212 "gamecode.cpp"
 var $157=$155;label=29;break; //@line 212 "gamecode.cpp"
 case 29: 
 var $157; //@line 212 "gamecode.cpp"
 $x=$157; //@line 212 "gamecode.cpp"
 var $158=$x; //@line 213 "gamecode.cpp"
 var $159=HEAP32[((19576)>>2)]; //@line 213 "gamecode.cpp"
 var $160=((($159)-(1))|0); //@line 213 "gamecode.cpp"
 var $161=($158|0)>($160|0); //@line 213 "gamecode.cpp"
 if($161){label=30;break;}else{label=31;break;} //@line 213 "gamecode.cpp"
 case 30: 
 var $163=HEAP32[((19576)>>2)]; //@line 213 "gamecode.cpp"
 var $164=((($163)-(1))|0); //@line 213 "gamecode.cpp"
 var $168=$164;label=32;break; //@line 213 "gamecode.cpp"
 case 31: 
 var $166=$x; //@line 213 "gamecode.cpp"
 var $168=$166;label=32;break; //@line 213 "gamecode.cpp"
 case 32: 
 var $168; //@line 213 "gamecode.cpp"
 $x=$168; //@line 213 "gamecode.cpp"
 var $169=HEAP32[((19500)>>2)]; //@line 215 "gamecode.cpp"
 var $170=$169; //@line 215 "gamecode.cpp"
 var $171=HEAP32[(($170)>>2)]; //@line 215 "gamecode.cpp"
 var $172=(($171+56)|0); //@line 215 "gamecode.cpp"
 var $173=HEAP32[(($172)>>2)]; //@line 215 "gamecode.cpp"
 var $174=$x; //@line 215 "gamecode.cpp"
 var $175=HEAP32[((19504)>>2)]; //@line 215 "gamecode.cpp"
 var $176=($175|0); //@line 215 "gamecode.cpp"
 var $177=HEAPF64[((19560)>>3)]; //@line 215 "gamecode.cpp"
 var $178=($176)-($177); //@line 215 "gamecode.cpp"
 var $179=(($178)&-1); //@line 215 "gamecode.cpp"
 var $180=((($174)+($179))|0); //@line 215 "gamecode.cpp"
 var $181=$y; //@line 215 "gamecode.cpp"
 var $182=HEAP32[((19508)>>2)]; //@line 215 "gamecode.cpp"
 var $183=($182|0); //@line 215 "gamecode.cpp"
 var $184=HEAPF64[((19568)>>3)]; //@line 215 "gamecode.cpp"
 var $185=($183)-($184); //@line 215 "gamecode.cpp"
 var $186=(($185)&-1); //@line 215 "gamecode.cpp"
 var $187=((($181)+($186))|0); //@line 215 "gamecode.cpp"
 var $188=FUNCTION_TABLE[$173]($169,$180,$187,255,255,255); //@line 215 "gamecode.cpp"
 if($188){label=34;break;}else{label=33;break;} //@line 215 "gamecode.cpp"
 case 33: 
 var $190=$x; //@line 221 "gamecode.cpp"
 var $191=$y; //@line 221 "gamecode.cpp"
 var $192=__ZN14conLoggerClass7logLineEPcbbbz(19416,2912,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$190,HEAP32[(((tempVarArgs)+(8))>>2)]=$191,tempVarArgs)); STACKTOP=tempVarArgs; //@line 221 "gamecode.cpp"
 $1=0; //@line 224 "gamecode.cpp"
 label=54;break; //@line 224 "gamecode.cpp"
 case 34: 
 label=35;break; //@line 226 "gamecode.cpp"
 case 35: 
 var $195=$y; //@line 192 "gamecode.cpp"
 var $196=((($195)+(1))|0); //@line 192 "gamecode.cpp"
 $y=$196; //@line 192 "gamecode.cpp"
 label=17;break; //@line 192 "gamecode.cpp"
 case 36: 
 $x=0; //@line 228 "gamecode.cpp"
 label=37;break; //@line 228 "gamecode.cpp"
 case 37: 
 var $199=$x; //@line 228 "gamecode.cpp"
 var $200=HEAP32[((19576)>>2)]; //@line 228 "gamecode.cpp"
 var $201=($199|0)<($200|0); //@line 228 "gamecode.cpp"
 if($201){label=38;break;}else{label=48;break;} //@line 228 "gamecode.cpp"
 case 38: 
 var $203=$x; //@line 230 "gamecode.cpp"
 var $204=__Z13getGroundWalli($203); //@line 230 "gamecode.cpp"
 $y=$204; //@line 230 "gamecode.cpp"
 var $205=$y; //@line 231 "gamecode.cpp"
 var $206=($205|0)<0; //@line 231 "gamecode.cpp"
 if($206){label=39;break;}else{label=40;break;} //@line 231 "gamecode.cpp"
 case 39: 
 var $211=0;label=41;break; //@line 231 "gamecode.cpp"
 case 40: 
 var $209=$y; //@line 231 "gamecode.cpp"
 var $211=$209;label=41;break; //@line 231 "gamecode.cpp"
 case 41: 
 var $211; //@line 231 "gamecode.cpp"
 $y=$211; //@line 231 "gamecode.cpp"
 var $212=$y; //@line 232 "gamecode.cpp"
 var $213=HEAP32[((19580)>>2)]; //@line 232 "gamecode.cpp"
 var $214=((($213)-(1))|0); //@line 232 "gamecode.cpp"
 var $215=($212|0)>($214|0); //@line 232 "gamecode.cpp"
 if($215){label=42;break;}else{label=43;break;} //@line 232 "gamecode.cpp"
 case 42: 
 var $217=HEAP32[((19580)>>2)]; //@line 232 "gamecode.cpp"
 var $218=((($217)-(1))|0); //@line 232 "gamecode.cpp"
 var $222=$218;label=44;break; //@line 232 "gamecode.cpp"
 case 43: 
 var $220=$y; //@line 232 "gamecode.cpp"
 var $222=$220;label=44;break; //@line 232 "gamecode.cpp"
 case 44: 
 var $222; //@line 232 "gamecode.cpp"
 $y=$222; //@line 232 "gamecode.cpp"
 var $223=HEAP32[((19500)>>2)]; //@line 234 "gamecode.cpp"
 var $224=$223; //@line 234 "gamecode.cpp"
 var $225=HEAP32[(($224)>>2)]; //@line 234 "gamecode.cpp"
 var $226=(($225+56)|0); //@line 234 "gamecode.cpp"
 var $227=HEAP32[(($226)>>2)]; //@line 234 "gamecode.cpp"
 var $228=$x; //@line 234 "gamecode.cpp"
 var $229=HEAP32[((19504)>>2)]; //@line 234 "gamecode.cpp"
 var $230=($229|0); //@line 234 "gamecode.cpp"
 var $231=HEAPF64[((19560)>>3)]; //@line 234 "gamecode.cpp"
 var $232=($230)-($231); //@line 234 "gamecode.cpp"
 var $233=(($232)&-1); //@line 234 "gamecode.cpp"
 var $234=((($228)+($233))|0); //@line 234 "gamecode.cpp"
 var $235=$y; //@line 234 "gamecode.cpp"
 var $236=HEAP32[((19508)>>2)]; //@line 234 "gamecode.cpp"
 var $237=($236|0); //@line 234 "gamecode.cpp"
 var $238=HEAPF64[((19568)>>3)]; //@line 234 "gamecode.cpp"
 var $239=($237)-($238); //@line 234 "gamecode.cpp"
 var $240=(($239)&-1); //@line 234 "gamecode.cpp"
 var $241=((($235)+($240))|0); //@line 234 "gamecode.cpp"
 var $242=FUNCTION_TABLE[$227]($223,$234,$241,255,255,255); //@line 234 "gamecode.cpp"
 if($242){label=46;break;}else{label=45;break;} //@line 234 "gamecode.cpp"
 case 45: 
 var $244=$x; //@line 240 "gamecode.cpp"
 var $245=$y; //@line 240 "gamecode.cpp"
 var $246=__ZN14conLoggerClass7logLineEPcbbbz(19416,16400,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$244,HEAP32[(((tempVarArgs)+(8))>>2)]=$245,tempVarArgs)); STACKTOP=tempVarArgs; //@line 240 "gamecode.cpp"
 $1=0; //@line 243 "gamecode.cpp"
 label=54;break; //@line 243 "gamecode.cpp"
 case 46: 
 label=47;break; //@line 245 "gamecode.cpp"
 case 47: 
 var $249=$x; //@line 228 "gamecode.cpp"
 var $250=((($249)+(1))|0); //@line 228 "gamecode.cpp"
 $x=$250; //@line 228 "gamecode.cpp"
 label=37;break; //@line 228 "gamecode.cpp"
 case 48: 
 label=49;break; //@line 246 "gamecode.cpp"
 case 49: 
 var $253=HEAP32[((19848)>>2)]; //@line 250 "gamecode.cpp"
 var $254=($253|0)==0; //@line 250 "gamecode.cpp"
 var $255=($254?15944:15296); //@line 250 "gamecode.cpp"
 $gameOverText=$255; //@line 250 "gamecode.cpp"
 var $256=HEAP8[(19624)]; //@line 251 "gamecode.cpp"
 var $257=(($256)&1); //@line 251 "gamecode.cpp"
 if($257){label=50;break;}else{label=51;break;} //@line 251 "gamecode.cpp"
 case 50: 
 var $259=HEAP32[((19704)>>2)]; //@line 252 "gamecode.cpp"
 var $260=(($259+48)|0); //@line 252 "gamecode.cpp"
 var $261=HEAP32[(($260)>>2)]; //@line 252 "gamecode.cpp"
 var $262=$gameOverText; //@line 252 "gamecode.cpp"
 var $263=$gameOverText; //@line 255 "gamecode.cpp"
 var $264=_strlen($263); //@line 255 "gamecode.cpp"
 var $265=HEAP32[((20656)>>2)]; //@line 257 "gamecode.cpp"
 var $266=(($265+80)|0); //@line 257 "gamecode.cpp"
 var $267=HEAP32[(($266)>>2)]; //@line 257 "gamecode.cpp"
 var $268=FUNCTION_TABLE[$267](20656); //@line 257 "gamecode.cpp"
 var $269=HEAP32[((20656)>>2)]; //@line 257 "gamecode.cpp"
 var $270=(($269+84)|0); //@line 257 "gamecode.cpp"
 var $271=HEAP32[(($270)>>2)]; //@line 257 "gamecode.cpp"
 var $272=FUNCTION_TABLE[$271](20656); //@line 257 "gamecode.cpp"
 var $273=FUNCTION_TABLE[$261](19704,20656,$262,$264,0,0,$268,$272,1,1,1); //@line 257 "gamecode.cpp"
 label=51;break; //@line 261 "gamecode.cpp"
 case 51: 
 var $275=HEAP32[((19848)>>2)]; //@line 264 "gamecode.cpp"
 var $276=($275|0)==0; //@line 264 "gamecode.cpp"
 var $277=($276?14776:14288); //@line 264 "gamecode.cpp"
 $pausedText=$277; //@line 264 "gamecode.cpp"
 var $278=HEAP8[(19480)]; //@line 265 "gamecode.cpp"
 var $279=(($278)&1); //@line 265 "gamecode.cpp"
 if($279){label=52;break;}else{label=53;break;} //@line 265 "gamecode.cpp"
 case 52: 
 var $281=HEAP32[((19704)>>2)]; //@line 266 "gamecode.cpp"
 var $282=(($281+48)|0); //@line 266 "gamecode.cpp"
 var $283=HEAP32[(($282)>>2)]; //@line 266 "gamecode.cpp"
 var $284=$pausedText; //@line 266 "gamecode.cpp"
 var $285=$pausedText; //@line 269 "gamecode.cpp"
 var $286=_strlen($285); //@line 269 "gamecode.cpp"
 var $287=HEAP32[((20656)>>2)]; //@line 271 "gamecode.cpp"
 var $288=(($287+80)|0); //@line 271 "gamecode.cpp"
 var $289=HEAP32[(($288)>>2)]; //@line 271 "gamecode.cpp"
 var $290=FUNCTION_TABLE[$289](20656); //@line 271 "gamecode.cpp"
 var $291=HEAP32[((20656)>>2)]; //@line 271 "gamecode.cpp"
 var $292=(($291+84)|0); //@line 271 "gamecode.cpp"
 var $293=HEAP32[(($292)>>2)]; //@line 271 "gamecode.cpp"
 var $294=FUNCTION_TABLE[$293](20656); //@line 271 "gamecode.cpp"
 var $295=FUNCTION_TABLE[$283](19704,20656,$284,$286,0,0,$290,$294,1,1,1); //@line 271 "gamecode.cpp"
 label=53;break; //@line 275 "gamecode.cpp"
 case 53: 
 $1=1; //@line 278 "gamecode.cpp"
 label=54;break; //@line 278 "gamecode.cpp"
 case 54: 
 var $298=$1; //@line 279 "gamecode.cpp"
 STACKTOP=sp;return $298; //@line 279 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14drawBackgroundv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $bgX;
 var $bgY;
 var $bgW;
 var $bgH;
 var $2=HEAP32[((19552)>>2)]; //@line 297 "gamecode.cpp"
 var $3=$2; //@line 297 "gamecode.cpp"
 var $4=HEAP32[(($3)>>2)]; //@line 297 "gamecode.cpp"
 var $5=(($4+80)|0); //@line 297 "gamecode.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 297 "gamecode.cpp"
 var $7=FUNCTION_TABLE[$6]($2); //@line 297 "gamecode.cpp"
 $bgW=$7; //@line 297 "gamecode.cpp"
 var $8=HEAP32[((19552)>>2)]; //@line 298 "gamecode.cpp"
 var $9=$8; //@line 298 "gamecode.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 298 "gamecode.cpp"
 var $11=(($10+84)|0); //@line 298 "gamecode.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 298 "gamecode.cpp"
 var $13=FUNCTION_TABLE[$12]($8); //@line 298 "gamecode.cpp"
 $bgH=$13; //@line 298 "gamecode.cpp"
 var $14=HEAPF64[((19568)>>3)]; //@line 301 "gamecode.cpp"
 var $15=HEAPF64[((19544)>>3)]; //@line 301 "gamecode.cpp"
 var $16=($14)+($15); //@line 301 "gamecode.cpp"
 var $17=(($16)&-1); //@line 301 "gamecode.cpp"
 var $18=$bgH; //@line 301 "gamecode.cpp"
 var $19=(((($17|0))%(($18|0)))&-1); //@line 301 "gamecode.cpp"
 var $20=(((-$19))|0); //@line 301 "gamecode.cpp"
 $bgY=$20; //@line 301 "gamecode.cpp"
 var $21=$bgY; //@line 302 "gamecode.cpp"
 var $22=($21|0)>0; //@line 302 "gamecode.cpp"
 if($22){label=2;break;}else{label=3;break;} //@line 302 "gamecode.cpp"
 case 2: 
 var $24=$bgY; //@line 302 "gamecode.cpp"
 var $25=$bgH; //@line 302 "gamecode.cpp"
 var $26=((($24)-($25))|0); //@line 302 "gamecode.cpp"
 $bgY=$26; //@line 302 "gamecode.cpp"
 label=3;break; //@line 302 "gamecode.cpp"
 case 3: 
 label=4;break; //@line 305 "gamecode.cpp"
 case 4: 
 var $29=$bgY; //@line 305 "gamecode.cpp"
 var $30=HEAP32[((19580)>>2)]; //@line 305 "gamecode.cpp"
 var $31=($29|0)<($30|0); //@line 305 "gamecode.cpp"
 if($31){label=5;break;}else{label=13;break;} //@line 305 "gamecode.cpp"
 case 5: 
 var $33=HEAPF64[((19560)>>3)]; //@line 308 "gamecode.cpp"
 var $34=HEAPF64[((19536)>>3)]; //@line 308 "gamecode.cpp"
 var $35=($33)+($34); //@line 308 "gamecode.cpp"
 var $36=(($35)&-1); //@line 308 "gamecode.cpp"
 var $37=$bgW; //@line 308 "gamecode.cpp"
 var $38=(((($36|0))%(($37|0)))&-1); //@line 308 "gamecode.cpp"
 var $39=(((-$38))|0); //@line 308 "gamecode.cpp"
 $bgX=$39; //@line 308 "gamecode.cpp"
 var $40=$bgX; //@line 309 "gamecode.cpp"
 var $41=($40|0)>0; //@line 309 "gamecode.cpp"
 if($41){label=6;break;}else{label=7;break;} //@line 309 "gamecode.cpp"
 case 6: 
 var $43=$bgX; //@line 309 "gamecode.cpp"
 var $44=$bgW; //@line 309 "gamecode.cpp"
 var $45=((($43)-($44))|0); //@line 309 "gamecode.cpp"
 $bgX=$45; //@line 309 "gamecode.cpp"
 label=7;break; //@line 309 "gamecode.cpp"
 case 7: 
 label=8;break; //@line 312 "gamecode.cpp"
 case 8: 
 var $48=$bgX; //@line 312 "gamecode.cpp"
 var $49=HEAP32[((19576)>>2)]; //@line 312 "gamecode.cpp"
 var $50=($48|0)<($49|0); //@line 312 "gamecode.cpp"
 if($50){label=9;break;}else{label=11;break;} //@line 312 "gamecode.cpp"
 case 9: 
 var $52=HEAP32[((19500)>>2)]; //@line 315 "gamecode.cpp"
 var $53=$52; //@line 315 "gamecode.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 315 "gamecode.cpp"
 var $55=(($54+16)|0); //@line 315 "gamecode.cpp"
 var $56=HEAP32[(($55)>>2)]; //@line 315 "gamecode.cpp"
 var $57=HEAP32[((19552)>>2)]; //@line 315 "gamecode.cpp"
 var $58=HEAP32[((19504)>>2)]; //@line 315 "gamecode.cpp"
 var $59=$bgX; //@line 315 "gamecode.cpp"
 var $60=((($58)+($59))|0); //@line 315 "gamecode.cpp"
 var $61=HEAP32[((19508)>>2)]; //@line 315 "gamecode.cpp"
 var $62=$bgY; //@line 315 "gamecode.cpp"
 var $63=((($61)+($62))|0); //@line 315 "gamecode.cpp"
 var $64=$bgW; //@line 315 "gamecode.cpp"
 var $65=$bgH; //@line 315 "gamecode.cpp"
 var $66=HEAP32[((19504)>>2)]; //@line 315 "gamecode.cpp"
 var $67=HEAP32[((19508)>>2)]; //@line 315 "gamecode.cpp"
 var $68=HEAP32[((19576)>>2)]; //@line 315 "gamecode.cpp"
 var $69=HEAP32[((19580)>>2)]; //@line 315 "gamecode.cpp"
 var $70=FUNCTION_TABLE[$56]($52,$57,$60,$63,0,0,$64,$65,$66,$67,$68,$69,1,0); //@line 315 "gamecode.cpp"
 label=10;break; //@line 323 "gamecode.cpp"
 case 10: 
 var $72=$bgW; //@line 312 "gamecode.cpp"
 var $73=$bgX; //@line 312 "gamecode.cpp"
 var $74=((($73)+($72))|0); //@line 312 "gamecode.cpp"
 $bgX=$74; //@line 312 "gamecode.cpp"
 label=8;break; //@line 312 "gamecode.cpp"
 case 11: 
 label=12;break; //@line 324 "gamecode.cpp"
 case 12: 
 var $77=$bgH; //@line 305 "gamecode.cpp"
 var $78=$bgY; //@line 305 "gamecode.cpp"
 var $79=((($78)+($77))|0); //@line 305 "gamecode.cpp"
 $bgY=$79; //@line 305 "gamecode.cpp"
 label=4;break; //@line 305 "gamecode.cpp"
 case 13: 
 var $81=__Z25drawBackgroundComplementsv(); //@line 327 "gamecode.cpp"
 if($81){label=15;break;}else{label=14;break;} //@line 327 "gamecode.cpp"
 case 14: 
 $1=0; //@line 327 "gamecode.cpp"
 label=16;break; //@line 327 "gamecode.cpp"
 case 15: 
 $1=1; //@line 329 "gamecode.cpp"
 label=16;break; //@line 329 "gamecode.cpp"
 case 16: 
 var $85=$1; //@line 330 "gamecode.cpp"
 STACKTOP=sp;return $85; //@line 330 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z8drawUnitP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $x;
 var $y;
 var $cx;
 var $cy;
 var $myUnitType;
 var $typeDataList;
 var $myUnitFrame;
 var $pixelsToTrembleWhenTrembling;
 var $3=sp;
 var $x1;
 var $y2;
 var $x2;
 var $y23;
 var $unit1;
 var $unit2;
 var $x4;
 var $y5;
 var $x26;
 var $y27;
 var $4=(sp)+(16);
 var $x8;
 var $y9;
 $2=$unit;
 var $5=$2; //@line 350 "gamecode.cpp"
 var $6=($5|0)==0; //@line 350 "gamecode.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 350 "gamecode.cpp"
 case 2: 
 $1=0; //@line 350 "gamecode.cpp"
 label=38;break; //@line 350 "gamecode.cpp"
 case 3: 
 var $9=$2; //@line 353 "gamecode.cpp"
 var $10=(($9+144)|0); //@line 353 "gamecode.cpp"
 var $11=(($10+4)|0); //@line 353 "gamecode.cpp"
 var $12=HEAP8[($11)]; //@line 353 "gamecode.cpp"
 var $13=($12&255); //@line 353 "gamecode.cpp"
 var $14=($13|0)!=0; //@line 353 "gamecode.cpp"
 if($14){label=4;break;}else{label=7;break;} //@line 353 "gamecode.cpp"
 case 4: 
 var $16=$2; //@line 355 "gamecode.cpp"
 var $17=(($16+144)|0); //@line 355 "gamecode.cpp"
 var $18=$3; //@line 355 "gamecode.cpp"
 var $19=$17; //@line 355 "gamecode.cpp"
 assert(12 % 1 === 0);HEAP32[(($18)>>2)]=HEAP32[(($19)>>2)];HEAP32[((($18)+(4))>>2)]=HEAP32[((($19)+(4))>>2)];HEAP32[((($18)+(8))>>2)]=HEAP32[((($19)+(8))>>2)]; //@line 355 "gamecode.cpp"
 var $20=__Z14getUnitPointer23gameObjectPointerStruct($3); //@line 355 "gamecode.cpp"
 var $21=__Z8drawUnitP17genericUnitStruct($20); //@line 355 "gamecode.cpp"
 if($21){label=6;break;}else{label=5;break;} //@line 355 "gamecode.cpp"
 case 5: 
 $1=0; //@line 356 "gamecode.cpp"
 label=38;break; //@line 356 "gamecode.cpp"
 case 6: 
 label=7;break; //@line 357 "gamecode.cpp"
 case 7: 
 var $25=$2; //@line 360 "gamecode.cpp"
 var $26=(($25+28)|0); //@line 360 "gamecode.cpp"
 var $27=HEAP8[($26)]; //@line 360 "gamecode.cpp"
 var $28=($27&255); //@line 360 "gamecode.cpp"
 var $29=__Z17getTypeDataStructi($28); //@line 360 "gamecode.cpp"
 $typeDataList=$29; //@line 360 "gamecode.cpp"
 var $30=$typeDataList; //@line 361 "gamecode.cpp"
 var $31=($30|0)==0; //@line 361 "gamecode.cpp"
 if($31){label=8;break;}else{label=9;break;} //@line 361 "gamecode.cpp"
 case 8: 
 $1=0; //@line 361 "gamecode.cpp"
 label=38;break; //@line 361 "gamecode.cpp"
 case 9: 
 var $34=$2; //@line 362 "gamecode.cpp"
 var $35=(($34+24)|0); //@line 362 "gamecode.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 362 "gamecode.cpp"
 var $37=$typeDataList; //@line 362 "gamecode.cpp"
 var $38=(($37+((($36)*(24))&-1))|0); //@line 362 "gamecode.cpp"
 $myUnitType=$38; //@line 362 "gamecode.cpp"
 var $39=$2; //@line 365 "gamecode.cpp"
 var $40=(($39+88)|0); //@line 365 "gamecode.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 365 "gamecode.cpp"
 var $42=$myUnitType; //@line 365 "gamecode.cpp"
 var $43=(($42+16)|0); //@line 365 "gamecode.cpp"
 var $44=HEAP32[(($43)>>2)]; //@line 365 "gamecode.cpp"
 var $45=(($44+((($41)*(80))&-1))|0); //@line 365 "gamecode.cpp"
 $myUnitFrame=$45; //@line 365 "gamecode.cpp"
 var $46=$myUnitType; //@line 366 "gamecode.cpp"
 var $47=(($46+20)|0); //@line 366 "gamecode.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 366 "gamecode.cpp"
 $pixelsToTrembleWhenTrembling=$48; //@line 366 "gamecode.cpp"
 var $49=$2; //@line 373 "gamecode.cpp"
 var $50=(($49+8)|0); //@line 373 "gamecode.cpp"
 var $51=HEAPF64[(($50)>>3)]; //@line 373 "gamecode.cpp"
 var $52=$myUnitFrame; //@line 373 "gamecode.cpp"
 var $53=(($52+40)|0); //@line 373 "gamecode.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 373 "gamecode.cpp"
 var $55=($54|0); //@line 373 "gamecode.cpp"
 var $56=($51)-($55); //@line 373 "gamecode.cpp"
 var $57=HEAP32[((19504)>>2)]; //@line 373 "gamecode.cpp"
 var $58=($57|0); //@line 373 "gamecode.cpp"
 var $59=($56)+($58); //@line 373 "gamecode.cpp"
 var $60=HEAPF64[((19560)>>3)]; //@line 373 "gamecode.cpp"
 var $61=($59)-($60); //@line 373 "gamecode.cpp"
 var $62=(($61)&-1); //@line 373 "gamecode.cpp"
 $x=$62; //@line 373 "gamecode.cpp"
 var $63=$2; //@line 375 "gamecode.cpp"
 var $64=(($63+16)|0); //@line 375 "gamecode.cpp"
 var $65=HEAPF64[(($64)>>3)]; //@line 375 "gamecode.cpp"
 var $66=$myUnitFrame; //@line 375 "gamecode.cpp"
 var $67=(($66+44)|0); //@line 375 "gamecode.cpp"
 var $68=HEAP32[(($67)>>2)]; //@line 375 "gamecode.cpp"
 var $69=($68|0); //@line 375 "gamecode.cpp"
 var $70=($65)-($69); //@line 375 "gamecode.cpp"
 var $71=HEAP32[((19508)>>2)]; //@line 375 "gamecode.cpp"
 var $72=($71|0); //@line 375 "gamecode.cpp"
 var $73=($70)+($72); //@line 375 "gamecode.cpp"
 var $74=HEAPF64[((19568)>>3)]; //@line 375 "gamecode.cpp"
 var $75=($73)-($74); //@line 375 "gamecode.cpp"
 var $76=(($75)&-1); //@line 375 "gamecode.cpp"
 $y=$76; //@line 375 "gamecode.cpp"
 var $77=HEAP8[(19816)]; //@line 379 "gamecode.cpp"
 var $78=(($77)&1); //@line 379 "gamecode.cpp"
 if($78){label=10;break;}else{label=14;break;} //@line 379 "gamecode.cpp"
 case 10: 
 var $80=$x; //@line 382 "gamecode.cpp"
 var $81=$myUnitFrame; //@line 382 "gamecode.cpp"
 var $82=(($81+24)|0); //@line 382 "gamecode.cpp"
 var $83=HEAP32[(($82)>>2)]; //@line 382 "gamecode.cpp"
 var $84=((($80)+($83))|0); //@line 382 "gamecode.cpp"
 $cx=$84; //@line 382 "gamecode.cpp"
 var $85=$y; //@line 383 "gamecode.cpp"
 var $86=$myUnitFrame; //@line 383 "gamecode.cpp"
 var $87=(($86+28)|0); //@line 383 "gamecode.cpp"
 var $88=HEAP32[(($87)>>2)]; //@line 383 "gamecode.cpp"
 var $89=((($85)+($88))|0); //@line 383 "gamecode.cpp"
 $cy=$89; //@line 383 "gamecode.cpp"
 var $90=$myUnitFrame; //@line 387 "gamecode.cpp"
 var $91=(($90+32)|0); //@line 387 "gamecode.cpp"
 var $92=HEAP32[(($91)>>2)]; //@line 387 "gamecode.cpp"
 var $93=($92|0)>0; //@line 387 "gamecode.cpp"
 if($93){label=11;break;}else{label=13;break;} //@line 387 "gamecode.cpp"
 case 11: 
 var $95=$myUnitFrame; //@line 387 "gamecode.cpp"
 var $96=(($95+36)|0); //@line 387 "gamecode.cpp"
 var $97=HEAP32[(($96)>>2)]; //@line 387 "gamecode.cpp"
 var $98=($97|0)>0; //@line 387 "gamecode.cpp"
 if($98){label=12;break;}else{label=13;break;} //@line 387 "gamecode.cpp"
 case 12: 
 var $100=HEAP32[((19500)>>2)]; //@line 388 "gamecode.cpp"
 var $101=$100; //@line 388 "gamecode.cpp"
 var $102=HEAP32[(($101)>>2)]; //@line 388 "gamecode.cpp"
 var $103=(($102+40)|0); //@line 388 "gamecode.cpp"
 var $104=HEAP32[(($103)>>2)]; //@line 388 "gamecode.cpp"
 var $105=$cx; //@line 388 "gamecode.cpp"
 var $106=$cy; //@line 388 "gamecode.cpp"
 var $107=$myUnitFrame; //@line 388 "gamecode.cpp"
 var $108=(($107+32)|0); //@line 388 "gamecode.cpp"
 var $109=HEAP32[(($108)>>2)]; //@line 388 "gamecode.cpp"
 var $110=$myUnitFrame; //@line 388 "gamecode.cpp"
 var $111=(($110+36)|0); //@line 388 "gamecode.cpp"
 var $112=HEAP32[(($111)>>2)]; //@line 388 "gamecode.cpp"
 var $113=FUNCTION_TABLE[$104]($100,0,0,0,$105,$106,$109,$112); //@line 388 "gamecode.cpp"
 label=13;break; //@line 393 "gamecode.cpp"
 case 13: 
 label=14;break; //@line 394 "gamecode.cpp"
 case 14: 
 var $116=$2; //@line 399 "gamecode.cpp"
 var $117=(($116+131)|0); //@line 399 "gamecode.cpp"
 var $118=HEAP8[($117)]; //@line 399 "gamecode.cpp"
 var $119=(($118)&1); //@line 399 "gamecode.cpp"
 if($119){label=15;break;}else{label=19;break;} //@line 399 "gamecode.cpp"
 case 15: 
 var $121=HEAP8[(19480)]; //@line 399 "gamecode.cpp"
 var $122=(($121)&1); //@line 399 "gamecode.cpp"
 if($122){label=19;break;}else{label=16;break;} //@line 399 "gamecode.cpp"
 case 16: 
 var $124=$pixelsToTrembleWhenTrembling; //@line 399 "gamecode.cpp"
 var $125=($124|0)>0; //@line 399 "gamecode.cpp"
 if($125){label=17;break;}else{label=19;break;} //@line 399 "gamecode.cpp"
 case 17: 
 var $127=HEAP8[(1752)]; //@line 399 "gamecode.cpp"
 var $128=(($127)&1); //@line 399 "gamecode.cpp"
 if($128){label=18;break;}else{label=19;break;} //@line 399 "gamecode.cpp"
 case 18: 
 var $130=$x; //@line 405 "gamecode.cpp"
 var $131=$pixelsToTrembleWhenTrembling; //@line 405 "gamecode.cpp"
 var $132=(((($131|0))/(2))&-1); //@line 405 "gamecode.cpp"
 var $133=((($130)-($132))|0); //@line 405 "gamecode.cpp"
 var $134=_rand(); //@line 406 "gamecode.cpp"
 var $135=$pixelsToTrembleWhenTrembling; //@line 406 "gamecode.cpp"
 var $136=((($135)+(1))|0); //@line 406 "gamecode.cpp"
 var $137=(((($134|0))%(($136|0)))&-1); //@line 406 "gamecode.cpp"
 var $138=((($133)+($137))|0); //@line 406 "gamecode.cpp"
 $x=$138; //@line 406 "gamecode.cpp"
 var $139=$y; //@line 407 "gamecode.cpp"
 var $140=$pixelsToTrembleWhenTrembling; //@line 407 "gamecode.cpp"
 var $141=(((($140|0))/(2))&-1); //@line 407 "gamecode.cpp"
 var $142=((($139)-($141))|0); //@line 407 "gamecode.cpp"
 var $143=_rand(); //@line 408 "gamecode.cpp"
 var $144=$pixelsToTrembleWhenTrembling; //@line 408 "gamecode.cpp"
 var $145=((($144)+(1))|0); //@line 408 "gamecode.cpp"
 var $146=(((($143|0))%(($145|0)))&-1); //@line 408 "gamecode.cpp"
 var $147=((($142)+($146))|0); //@line 408 "gamecode.cpp"
 $y=$147; //@line 408 "gamecode.cpp"
 label=19;break; //@line 409 "gamecode.cpp"
 case 19: 
 var $149=HEAP32[((19500)>>2)]; //@line 412 "gamecode.cpp"
 var $150=$149; //@line 412 "gamecode.cpp"
 var $151=HEAP32[(($150)>>2)]; //@line 412 "gamecode.cpp"
 var $152=(($151+16)|0); //@line 412 "gamecode.cpp"
 var $153=HEAP32[(($152)>>2)]; //@line 412 "gamecode.cpp"
 var $154=$myUnitFrame; //@line 412 "gamecode.cpp"
 var $155=(($154+4)|0); //@line 412 "gamecode.cpp"
 var $156=HEAP32[(($155)>>2)]; //@line 412 "gamecode.cpp"
 var $157=$x; //@line 412 "gamecode.cpp"
 var $158=$y; //@line 412 "gamecode.cpp"
 var $159=$myUnitFrame; //@line 412 "gamecode.cpp"
 var $160=(($159+8)|0); //@line 412 "gamecode.cpp"
 var $161=HEAP32[(($160)>>2)]; //@line 412 "gamecode.cpp"
 var $162=$myUnitFrame; //@line 412 "gamecode.cpp"
 var $163=(($162+12)|0); //@line 412 "gamecode.cpp"
 var $164=HEAP32[(($163)>>2)]; //@line 412 "gamecode.cpp"
 var $165=$myUnitFrame; //@line 412 "gamecode.cpp"
 var $166=(($165+16)|0); //@line 412 "gamecode.cpp"
 var $167=HEAP32[(($166)>>2)]; //@line 412 "gamecode.cpp"
 var $168=$myUnitFrame; //@line 412 "gamecode.cpp"
 var $169=(($168+20)|0); //@line 412 "gamecode.cpp"
 var $170=HEAP32[(($169)>>2)]; //@line 412 "gamecode.cpp"
 var $171=HEAP32[((19504)>>2)]; //@line 412 "gamecode.cpp"
 var $172=HEAP32[((19508)>>2)]; //@line 412 "gamecode.cpp"
 var $173=HEAP32[((19576)>>2)]; //@line 412 "gamecode.cpp"
 var $174=HEAP32[((19580)>>2)]; //@line 412 "gamecode.cpp"
 var $175=HEAP8[(2184)]; //@line 412 "gamecode.cpp"
 var $176=(($175)&1); //@line 412 "gamecode.cpp"
 var $177=FUNCTION_TABLE[$153]($149,$156,$157,$158,$161,$164,$167,$170,$171,$172,$173,$174,$176,1); //@line 412 "gamecode.cpp"
 var $178=HEAP8[(19792)]; //@line 426 "gamecode.cpp"
 var $179=(($178)&1); //@line 426 "gamecode.cpp"
 if($179){label=20;break;}else{label=25;break;} //@line 426 "gamecode.cpp"
 case 20: 
 var $181=$2; //@line 427 "gamecode.cpp"
 var $182=(($181+156)|0); //@line 427 "gamecode.cpp"
 var $183=HEAP8[($182)]; //@line 427 "gamecode.cpp"
 var $184=(($183)&1); //@line 427 "gamecode.cpp"
 if($184){label=21;break;}else{label=24;break;} //@line 427 "gamecode.cpp"
 case 21: 
 var $186=$2; //@line 433 "gamecode.cpp"
 var $187=(($186+8)|0); //@line 433 "gamecode.cpp"
 var $188=HEAPF64[(($187)>>3)]; //@line 433 "gamecode.cpp"
 var $189=HEAP32[((19504)>>2)]; //@line 433 "gamecode.cpp"
 var $190=($189|0); //@line 433 "gamecode.cpp"
 var $191=($188)+($190); //@line 433 "gamecode.cpp"
 var $192=HEAPF64[((19560)>>3)]; //@line 433 "gamecode.cpp"
 var $193=($191)-($192); //@line 433 "gamecode.cpp"
 var $194=(($193)&-1); //@line 433 "gamecode.cpp"
 $x1=$194; //@line 433 "gamecode.cpp"
 var $195=$2; //@line 434 "gamecode.cpp"
 var $196=(($195+16)|0); //@line 434 "gamecode.cpp"
 var $197=HEAPF64[(($196)>>3)]; //@line 434 "gamecode.cpp"
 var $198=HEAP32[((19508)>>2)]; //@line 434 "gamecode.cpp"
 var $199=($198|0); //@line 434 "gamecode.cpp"
 var $200=($197)+($199); //@line 434 "gamecode.cpp"
 var $201=HEAPF64[((19568)>>3)]; //@line 434 "gamecode.cpp"
 var $202=($200)-($201); //@line 434 "gamecode.cpp"
 var $203=(($202)&-1); //@line 434 "gamecode.cpp"
 $y2=$203; //@line 434 "gamecode.cpp"
 var $204=$2; //@line 435 "gamecode.cpp"
 var $205=(($204+160)|0); //@line 435 "gamecode.cpp"
 var $206=HEAPF64[(($205)>>3)]; //@line 435 "gamecode.cpp"
 var $207=HEAP32[((19504)>>2)]; //@line 435 "gamecode.cpp"
 var $208=($207|0); //@line 435 "gamecode.cpp"
 var $209=($206)+($208); //@line 435 "gamecode.cpp"
 var $210=HEAPF64[((19560)>>3)]; //@line 435 "gamecode.cpp"
 var $211=($209)-($210); //@line 435 "gamecode.cpp"
 var $212=(($211)&-1); //@line 435 "gamecode.cpp"
 $x2=$212; //@line 435 "gamecode.cpp"
 var $213=$2; //@line 437 "gamecode.cpp"
 var $214=(($213+168)|0); //@line 437 "gamecode.cpp"
 var $215=HEAPF64[(($214)>>3)]; //@line 437 "gamecode.cpp"
 var $216=HEAP32[((19508)>>2)]; //@line 437 "gamecode.cpp"
 var $217=($216|0); //@line 437 "gamecode.cpp"
 var $218=($215)+($217); //@line 437 "gamecode.cpp"
 var $219=HEAPF64[((19568)>>3)]; //@line 437 "gamecode.cpp"
 var $220=($218)-($219); //@line 437 "gamecode.cpp"
 var $221=(($220)&-1); //@line 437 "gamecode.cpp"
 $y23=$221; //@line 437 "gamecode.cpp"
 var $222=$2; //@line 439 "gamecode.cpp"
 var $223=(($222+96)|0); //@line 439 "gamecode.cpp"
 var $224=HEAP8[($223)]; //@line 439 "gamecode.cpp"
 var $225=(($224)&1); //@line 439 "gamecode.cpp"
 if($225){label=22;break;}else{label=23;break;} //@line 439 "gamecode.cpp"
 case 22: 
 var $227=$2; //@line 440 "gamecode.cpp"
 var $228=(($227+160)|0); //@line 440 "gamecode.cpp"
 var $229=HEAPF64[(($228)>>3)]; //@line 440 "gamecode.cpp"
 var $230=HEAP32[((19504)>>2)]; //@line 440 "gamecode.cpp"
 var $231=($230|0); //@line 440 "gamecode.cpp"
 var $232=($229)+($231); //@line 440 "gamecode.cpp"
 var $233=(($232)&-1); //@line 440 "gamecode.cpp"
 $x2=$233; //@line 440 "gamecode.cpp"
 var $234=$2; //@line 441 "gamecode.cpp"
 var $235=(($234+168)|0); //@line 441 "gamecode.cpp"
 var $236=HEAPF64[(($235)>>3)]; //@line 441 "gamecode.cpp"
 var $237=HEAP32[((19508)>>2)]; //@line 441 "gamecode.cpp"
 var $238=($237|0); //@line 441 "gamecode.cpp"
 var $239=($236)+($238); //@line 441 "gamecode.cpp"
 var $240=(($239)&-1); //@line 441 "gamecode.cpp"
 $y23=$240; //@line 441 "gamecode.cpp"
 label=23;break; //@line 442 "gamecode.cpp"
 case 23: 
 var $242=HEAP32[((19500)>>2)]; //@line 445 "gamecode.cpp"
 var $243=$242; //@line 445 "gamecode.cpp"
 var $244=HEAP32[(($243)>>2)]; //@line 445 "gamecode.cpp"
 var $245=(($244+60)|0); //@line 445 "gamecode.cpp"
 var $246=HEAP32[(($245)>>2)]; //@line 445 "gamecode.cpp"
 var $247=$x1; //@line 445 "gamecode.cpp"
 var $248=$y2; //@line 445 "gamecode.cpp"
 var $249=$x2; //@line 445 "gamecode.cpp"
 var $250=$y23; //@line 445 "gamecode.cpp"
 var $251=FUNCTION_TABLE[$246]($242,$247,$248,$249,$250,255,0,0); //@line 445 "gamecode.cpp"
 label=24;break; //@line 449 "gamecode.cpp"
 case 24: 
 label=25;break; //@line 450 "gamecode.cpp"
 case 25: 
 var $254=HEAP8[(19800)]; //@line 454 "gamecode.cpp"
 var $255=(($254)&1); //@line 454 "gamecode.cpp"
 if($255){label=26;break;}else{label=35;break;} //@line 454 "gamecode.cpp"
 case 26: 
 var $257=$2; //@line 455 "gamecode.cpp"
 var $258=(($257+28)|0); //@line 455 "gamecode.cpp"
 var $259=HEAP8[($258)]; //@line 455 "gamecode.cpp"
 var $260=($259&255); //@line 455 "gamecode.cpp"
 var $261=($260|0)==3; //@line 455 "gamecode.cpp"
 if($261){label=27;break;}else{label=34;break;} //@line 455 "gamecode.cpp"
 case 27: 
 var $263=$2; //@line 461 "gamecode.cpp"
 var $264=(($263+24)|0); //@line 461 "gamecode.cpp"
 var $265=HEAP32[(($264)>>2)]; //@line 461 "gamecode.cpp"
 if(($265|0)==6|($265|0)==7){ label=28;break;}else{label=33;break;}
 case 28: 
 var $267=$2; //@line 464 "gamecode.cpp"
 var $268=$267; //@line 464 "gamecode.cpp"
 $unit1=$268; //@line 464 "gamecode.cpp"
 var $269=$unit1; //@line 466 "gamecode.cpp"
 var $270=(($269+224)|0); //@line 466 "gamecode.cpp"
 var $271=$270; //@line 466 "gamecode.cpp"
 var $272=(($271)|0); //@line 466 "gamecode.cpp"
 var $273=(($272+4)|0); //@line 466 "gamecode.cpp"
 var $274=HEAP8[($273)]; //@line 466 "gamecode.cpp"
 var $275=($274&255); //@line 466 "gamecode.cpp"
 var $276=($275|0)!=0; //@line 466 "gamecode.cpp"
 if($276){label=29;break;}else{label=32;break;} //@line 466 "gamecode.cpp"
 case 29: 
 var $278=$unit1; //@line 470 "gamecode.cpp"
 var $279=(($278+224)|0); //@line 470 "gamecode.cpp"
 var $280=$279; //@line 470 "gamecode.cpp"
 var $281=(($280)|0); //@line 470 "gamecode.cpp"
 var $282=$4; //@line 470 "gamecode.cpp"
 var $283=$281; //@line 470 "gamecode.cpp"
 assert(12 % 1 === 0);HEAP32[(($282)>>2)]=HEAP32[(($283)>>2)];HEAP32[((($282)+(4))>>2)]=HEAP32[((($283)+(4))>>2)];HEAP32[((($282)+(8))>>2)]=HEAP32[((($283)+(8))>>2)]; //@line 470 "gamecode.cpp"
 var $284=__Z14getUnitPointer23gameObjectPointerStruct($4); //@line 470 "gamecode.cpp"
 var $285=$284; //@line 470 "gamecode.cpp"
 $unit2=$285; //@line 470 "gamecode.cpp"
 var $286=$unit2; //@line 474 "gamecode.cpp"
 var $287=($286|0)!=0; //@line 474 "gamecode.cpp"
 if($287){label=30;break;}else{label=31;break;} //@line 474 "gamecode.cpp"
 case 30: 
 var $289=$unit1; //@line 477 "gamecode.cpp"
 var $290=$289; //@line 477 "gamecode.cpp"
 var $291=(($290+8)|0); //@line 477 "gamecode.cpp"
 var $292=HEAPF64[(($291)>>3)]; //@line 477 "gamecode.cpp"
 var $293=HEAP32[((19504)>>2)]; //@line 477 "gamecode.cpp"
 var $294=($293|0); //@line 477 "gamecode.cpp"
 var $295=($292)+($294); //@line 477 "gamecode.cpp"
 var $296=HEAPF64[((19560)>>3)]; //@line 477 "gamecode.cpp"
 var $297=($295)-($296); //@line 477 "gamecode.cpp"
 var $298=(($297)&-1); //@line 477 "gamecode.cpp"
 $x4=$298; //@line 477 "gamecode.cpp"
 var $299=$unit1; //@line 478 "gamecode.cpp"
 var $300=$299; //@line 478 "gamecode.cpp"
 var $301=(($300+16)|0); //@line 478 "gamecode.cpp"
 var $302=HEAPF64[(($301)>>3)]; //@line 478 "gamecode.cpp"
 var $303=HEAP32[((19508)>>2)]; //@line 478 "gamecode.cpp"
 var $304=($303|0); //@line 478 "gamecode.cpp"
 var $305=($302)+($304); //@line 478 "gamecode.cpp"
 var $306=HEAPF64[((19568)>>3)]; //@line 478 "gamecode.cpp"
 var $307=($305)-($306); //@line 478 "gamecode.cpp"
 var $308=(($307)&-1); //@line 478 "gamecode.cpp"
 $y5=$308; //@line 478 "gamecode.cpp"
 var $309=$unit2; //@line 479 "gamecode.cpp"
 var $310=$309; //@line 479 "gamecode.cpp"
 var $311=(($310+8)|0); //@line 479 "gamecode.cpp"
 var $312=HEAPF64[(($311)>>3)]; //@line 479 "gamecode.cpp"
 var $313=HEAP32[((19504)>>2)]; //@line 479 "gamecode.cpp"
 var $314=($313|0); //@line 479 "gamecode.cpp"
 var $315=($312)+($314); //@line 479 "gamecode.cpp"
 var $316=HEAPF64[((19560)>>3)]; //@line 479 "gamecode.cpp"
 var $317=($315)-($316); //@line 479 "gamecode.cpp"
 var $318=(($317)&-1); //@line 479 "gamecode.cpp"
 $x26=$318; //@line 479 "gamecode.cpp"
 var $319=$unit2; //@line 480 "gamecode.cpp"
 var $320=$319; //@line 480 "gamecode.cpp"
 var $321=(($320+16)|0); //@line 480 "gamecode.cpp"
 var $322=HEAPF64[(($321)>>3)]; //@line 480 "gamecode.cpp"
 var $323=HEAP32[((19508)>>2)]; //@line 480 "gamecode.cpp"
 var $324=($323|0); //@line 480 "gamecode.cpp"
 var $325=($322)+($324); //@line 480 "gamecode.cpp"
 var $326=HEAPF64[((19568)>>3)]; //@line 480 "gamecode.cpp"
 var $327=($325)-($326); //@line 480 "gamecode.cpp"
 var $328=(($327)&-1); //@line 480 "gamecode.cpp"
 $y27=$328; //@line 480 "gamecode.cpp"
 var $329=HEAP32[((19500)>>2)]; //@line 483 "gamecode.cpp"
 var $330=$329; //@line 483 "gamecode.cpp"
 var $331=HEAP32[(($330)>>2)]; //@line 483 "gamecode.cpp"
 var $332=(($331+60)|0); //@line 483 "gamecode.cpp"
 var $333=HEAP32[(($332)>>2)]; //@line 483 "gamecode.cpp"
 var $334=$x4; //@line 483 "gamecode.cpp"
 var $335=$y5; //@line 483 "gamecode.cpp"
 var $336=$x26; //@line 483 "gamecode.cpp"
 var $337=$y27; //@line 483 "gamecode.cpp"
 var $338=FUNCTION_TABLE[$333]($329,$334,$335,$336,$337,0,0,255); //@line 483 "gamecode.cpp"
 label=31;break; //@line 487 "gamecode.cpp"
 case 31: 
 label=32;break; //@line 488 "gamecode.cpp"
 case 32: 
 label=33;break; //@line 489 "gamecode.cpp"
 case 33: 
 label=34;break; //@line 491 "gamecode.cpp"
 case 34: 
 label=35;break; //@line 492 "gamecode.cpp"
 case 35: 
 var $344=HEAP8[(19784)]; //@line 496 "gamecode.cpp"
 var $345=(($344)&1); //@line 496 "gamecode.cpp"
 if($345){label=36;break;}else{label=37;break;} //@line 496 "gamecode.cpp"
 case 36: 
 var $347=$2; //@line 499 "gamecode.cpp"
 var $348=(($347+8)|0); //@line 499 "gamecode.cpp"
 var $349=HEAPF64[(($348)>>3)]; //@line 499 "gamecode.cpp"
 var $350=HEAP32[((19504)>>2)]; //@line 499 "gamecode.cpp"
 var $351=($350|0); //@line 499 "gamecode.cpp"
 var $352=($349)+($351); //@line 499 "gamecode.cpp"
 var $353=HEAPF64[((19560)>>3)]; //@line 499 "gamecode.cpp"
 var $354=($352)-($353); //@line 499 "gamecode.cpp"
 var $355=(($354)&-1); //@line 499 "gamecode.cpp"
 $x8=$355; //@line 499 "gamecode.cpp"
 var $356=$2; //@line 500 "gamecode.cpp"
 var $357=(($356+16)|0); //@line 500 "gamecode.cpp"
 var $358=HEAPF64[(($357)>>3)]; //@line 500 "gamecode.cpp"
 var $359=HEAP32[((19508)>>2)]; //@line 500 "gamecode.cpp"
 var $360=($359|0); //@line 500 "gamecode.cpp"
 var $361=($358)+($360); //@line 500 "gamecode.cpp"
 var $362=HEAPF64[((19568)>>3)]; //@line 500 "gamecode.cpp"
 var $363=($361)-($362); //@line 500 "gamecode.cpp"
 var $364=(($363)&-1); //@line 500 "gamecode.cpp"
 $y9=$364; //@line 500 "gamecode.cpp"
 var $365=HEAP32[((19500)>>2)]; //@line 504 "gamecode.cpp"
 var $366=$365; //@line 504 "gamecode.cpp"
 var $367=HEAP32[(($366)>>2)]; //@line 504 "gamecode.cpp"
 var $368=(($367+40)|0); //@line 504 "gamecode.cpp"
 var $369=HEAP32[(($368)>>2)]; //@line 504 "gamecode.cpp"
 var $370=$x8; //@line 504 "gamecode.cpp"
 var $371=((($370)-(1))|0); //@line 504 "gamecode.cpp"
 var $372=$y9; //@line 504 "gamecode.cpp"
 var $373=((($372)-(1))|0); //@line 504 "gamecode.cpp"
 var $374=FUNCTION_TABLE[$369]($365,255,0,0,$371,$373,3,3); //@line 504 "gamecode.cpp"
 var $375=HEAP32[((19500)>>2)]; //@line 506 "gamecode.cpp"
 var $376=$375; //@line 506 "gamecode.cpp"
 var $377=HEAP32[(($376)>>2)]; //@line 506 "gamecode.cpp"
 var $378=(($377+40)|0); //@line 506 "gamecode.cpp"
 var $379=HEAP32[(($378)>>2)]; //@line 506 "gamecode.cpp"
 var $380=$x8; //@line 506 "gamecode.cpp"
 var $381=$y9; //@line 506 "gamecode.cpp"
 var $382=FUNCTION_TABLE[$379]($375,255,255,255,$380,$381,1,1); //@line 506 "gamecode.cpp"
 label=37;break; //@line 508 "gamecode.cpp"
 case 37: 
 $1=1; //@line 511 "gamecode.cpp"
 label=38;break; //@line 511 "gamecode.cpp"
 case 38: 
 var $385=$1; //@line 512 "gamecode.cpp"
 STACKTOP=sp;return $385; //@line 512 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12GameLoopCode9drawFrameEv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $nodeP;
 var $node;
 var $nodeB;
 var $nodeWG;
 var $x;
 var $y;
 var $2=__Z14drawBackgroundv(); //@line 532 "gamecode.cpp"
 if($2){label=3;break;}else{label=2;break;} //@line 532 "gamecode.cpp"
 case 2: 
 var $4=__ZN14conLoggerClass7logLineEPcbbbz(19416,13912,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 533 "gamecode.cpp"
 $1=0; //@line 534 "gamecode.cpp"
 label=42;break; //@line 534 "gamecode.cpp"
 case 3: 
 var $6=__ZN15vectorListClassI16bulletUnitStructE12getFirstNodeEv(19920); //@line 538 "gamecode.cpp"
 $nodeB=$6; //@line 538 "gamecode.cpp"
 label=4;break; //@line 538 "gamecode.cpp"
 case 4: 
 var $8=$nodeB; //@line 538 "gamecode.cpp"
 var $9=($8|0)!=0; //@line 538 "gamecode.cpp"
 if($9){label=5;break;}else{label=11;break;} //@line 538 "gamecode.cpp"
 case 5: 
 var $11=$nodeB; //@line 540 "gamecode.cpp"
 var $12=(($11)|0); //@line 540 "gamecode.cpp"
 var $13=$12; //@line 540 "gamecode.cpp"
 var $14=(($13+130)|0); //@line 540 "gamecode.cpp"
 var $15=HEAP8[($14)]; //@line 540 "gamecode.cpp"
 var $16=(($15)&1); //@line 540 "gamecode.cpp"
 if($16){label=7;break;}else{label=6;break;} //@line 540 "gamecode.cpp"
 case 6: 
 label=10;break; //@line 540 "gamecode.cpp"
 case 7: 
 var $19=$nodeB; //@line 542 "gamecode.cpp"
 var $20=(($19)|0); //@line 542 "gamecode.cpp"
 var $21=$20; //@line 542 "gamecode.cpp"
 var $22=(($21+129)|0); //@line 542 "gamecode.cpp"
 var $23=HEAP8[($22)]; //@line 542 "gamecode.cpp"
 var $24=(($23)&1); //@line 542 "gamecode.cpp"
 if($24){label=9;break;}else{label=8;break;} //@line 542 "gamecode.cpp"
 case 8: 
 label=10;break; //@line 542 "gamecode.cpp"
 case 9: 
 var $27=$nodeB; //@line 545 "gamecode.cpp"
 var $28=(($27)|0); //@line 545 "gamecode.cpp"
 var $29=$28; //@line 545 "gamecode.cpp"
 var $30=__Z8drawUnitP17genericUnitStruct($29); //@line 545 "gamecode.cpp"
 label=10;break; //@line 546 "gamecode.cpp"
 case 10: 
 var $32=$nodeB; //@line 538 "gamecode.cpp"
 var $33=__ZN15vectorListClassI16bulletUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19920,$32); //@line 538 "gamecode.cpp"
 $nodeB=$33; //@line 538 "gamecode.cpp"
 label=4;break; //@line 538 "gamecode.cpp"
 case 11: 
 var $35=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 549 "gamecode.cpp"
 $node=$35; //@line 549 "gamecode.cpp"
 label=12;break; //@line 549 "gamecode.cpp"
 case 12: 
 var $37=$node; //@line 549 "gamecode.cpp"
 var $38=($37|0)!=0; //@line 549 "gamecode.cpp"
 if($38){label=13;break;}else{label=19;break;} //@line 549 "gamecode.cpp"
 case 13: 
 var $40=$node; //@line 551 "gamecode.cpp"
 var $41=(($40)|0); //@line 551 "gamecode.cpp"
 var $42=$41; //@line 551 "gamecode.cpp"
 var $43=(($42+130)|0); //@line 551 "gamecode.cpp"
 var $44=HEAP8[($43)]; //@line 551 "gamecode.cpp"
 var $45=(($44)&1); //@line 551 "gamecode.cpp"
 if($45){label=15;break;}else{label=14;break;} //@line 551 "gamecode.cpp"
 case 14: 
 label=18;break; //@line 551 "gamecode.cpp"
 case 15: 
 var $48=$node; //@line 553 "gamecode.cpp"
 var $49=(($48)|0); //@line 553 "gamecode.cpp"
 var $50=$49; //@line 553 "gamecode.cpp"
 var $51=(($50+129)|0); //@line 553 "gamecode.cpp"
 var $52=HEAP8[($51)]; //@line 553 "gamecode.cpp"
 var $53=(($52)&1); //@line 553 "gamecode.cpp"
 if($53){label=17;break;}else{label=16;break;} //@line 553 "gamecode.cpp"
 case 16: 
 label=18;break; //@line 553 "gamecode.cpp"
 case 17: 
 var $56=$node; //@line 556 "gamecode.cpp"
 var $57=(($56)|0); //@line 556 "gamecode.cpp"
 var $58=$57; //@line 556 "gamecode.cpp"
 var $59=__Z8drawUnitP17genericUnitStruct($58); //@line 556 "gamecode.cpp"
 label=18;break; //@line 557 "gamecode.cpp"
 case 18: 
 var $61=$node; //@line 549 "gamecode.cpp"
 var $62=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$61); //@line 549 "gamecode.cpp"
 $node=$62; //@line 549 "gamecode.cpp"
 label=12;break; //@line 549 "gamecode.cpp"
 case 19: 
 var $64=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 560 "gamecode.cpp"
 $nodeP=$64; //@line 560 "gamecode.cpp"
 label=20;break; //@line 560 "gamecode.cpp"
 case 20: 
 var $66=$nodeP; //@line 560 "gamecode.cpp"
 var $67=($66|0)!=0; //@line 560 "gamecode.cpp"
 if($67){label=21;break;}else{label=27;break;} //@line 560 "gamecode.cpp"
 case 21: 
 var $69=$nodeP; //@line 562 "gamecode.cpp"
 var $70=(($69)|0); //@line 562 "gamecode.cpp"
 var $71=$70; //@line 562 "gamecode.cpp"
 var $72=(($71+130)|0); //@line 562 "gamecode.cpp"
 var $73=HEAP8[($72)]; //@line 562 "gamecode.cpp"
 var $74=(($73)&1); //@line 562 "gamecode.cpp"
 if($74){label=23;break;}else{label=22;break;} //@line 562 "gamecode.cpp"
 case 22: 
 label=26;break; //@line 562 "gamecode.cpp"
 case 23: 
 var $77=$nodeP; //@line 564 "gamecode.cpp"
 var $78=(($77)|0); //@line 564 "gamecode.cpp"
 var $79=$78; //@line 564 "gamecode.cpp"
 var $80=(($79+129)|0); //@line 564 "gamecode.cpp"
 var $81=HEAP8[($80)]; //@line 564 "gamecode.cpp"
 var $82=(($81)&1); //@line 564 "gamecode.cpp"
 if($82){label=25;break;}else{label=24;break;} //@line 564 "gamecode.cpp"
 case 24: 
 label=26;break; //@line 564 "gamecode.cpp"
 case 25: 
 var $85=$nodeP; //@line 567 "gamecode.cpp"
 var $86=(($85)|0); //@line 567 "gamecode.cpp"
 var $87=$86; //@line 567 "gamecode.cpp"
 var $88=__Z8drawUnitP17genericUnitStruct($87); //@line 567 "gamecode.cpp"
 label=26;break; //@line 568 "gamecode.cpp"
 case 26: 
 var $90=$nodeP; //@line 560 "gamecode.cpp"
 var $91=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$90); //@line 560 "gamecode.cpp"
 $nodeP=$91; //@line 560 "gamecode.cpp"
 label=20;break; //@line 560 "gamecode.cpp"
 case 27: 
 var $93=HEAP8[(2128)]; //@line 572 "gamecode.cpp"
 var $94=(($93)&1); //@line 572 "gamecode.cpp"
 if($94){label=28;break;}else{label=37;break;} //@line 572 "gamecode.cpp"
 case 28: 
 var $96=__ZN15vectorListClassI17waveGenUnitStructE12getFirstNodeEv(18544); //@line 573 "gamecode.cpp"
 $nodeWG=$96; //@line 573 "gamecode.cpp"
 label=29;break; //@line 573 "gamecode.cpp"
 case 29: 
 var $98=$nodeWG; //@line 573 "gamecode.cpp"
 var $99=($98|0)!=0; //@line 573 "gamecode.cpp"
 if($99){label=30;break;}else{label=36;break;} //@line 573 "gamecode.cpp"
 case 30: 
 var $101=$nodeWG; //@line 575 "gamecode.cpp"
 var $102=(($101)|0); //@line 575 "gamecode.cpp"
 var $103=$102; //@line 575 "gamecode.cpp"
 var $104=(($103+130)|0); //@line 575 "gamecode.cpp"
 var $105=HEAP8[($104)]; //@line 575 "gamecode.cpp"
 var $106=(($105)&1); //@line 575 "gamecode.cpp"
 if($106){label=32;break;}else{label=31;break;} //@line 575 "gamecode.cpp"
 case 31: 
 label=35;break; //@line 575 "gamecode.cpp"
 case 32: 
 var $109=$nodeWG; //@line 577 "gamecode.cpp"
 var $110=(($109)|0); //@line 577 "gamecode.cpp"
 var $111=$110; //@line 577 "gamecode.cpp"
 var $112=(($111+129)|0); //@line 577 "gamecode.cpp"
 var $113=HEAP8[($112)]; //@line 577 "gamecode.cpp"
 var $114=(($113)&1); //@line 577 "gamecode.cpp"
 if($114){label=34;break;}else{label=33;break;} //@line 577 "gamecode.cpp"
 case 33: 
 label=35;break; //@line 577 "gamecode.cpp"
 case 34: 
 var $117=$nodeWG; //@line 580 "gamecode.cpp"
 var $118=(($117)|0); //@line 580 "gamecode.cpp"
 var $119=$118; //@line 580 "gamecode.cpp"
 var $120=__Z8drawUnitP17genericUnitStruct($119); //@line 580 "gamecode.cpp"
 label=35;break; //@line 581 "gamecode.cpp"
 case 35: 
 var $122=$nodeWG; //@line 573 "gamecode.cpp"
 var $123=__ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(18544,$122); //@line 573 "gamecode.cpp"
 $nodeWG=$123; //@line 573 "gamecode.cpp"
 label=29;break; //@line 573 "gamecode.cpp"
 case 36: 
 label=37;break; //@line 582 "gamecode.cpp"
 case 37: 
 var $126=__Z25drawForegroundComplementsv(); //@line 585 "gamecode.cpp"
 if($126){label=39;break;}else{label=38;break;} //@line 585 "gamecode.cpp"
 case 38: 
 $1=0; //@line 586 "gamecode.cpp"
 label=42;break; //@line 586 "gamecode.cpp"
 case 39: 
 var $129=HEAP8[(19512)]; //@line 589 "gamecode.cpp"
 var $130=(($129)&1); //@line 589 "gamecode.cpp"
 if($130){label=40;break;}else{label=41;break;} //@line 589 "gamecode.cpp"
 case 40: 
 var $132=HEAP32[((20656)>>2)]; //@line 590 "gamecode.cpp"
 var $133=(($132+80)|0); //@line 590 "gamecode.cpp"
 var $134=HEAP32[(($133)>>2)]; //@line 590 "gamecode.cpp"
 var $135=FUNCTION_TABLE[$134](20656); //@line 590 "gamecode.cpp"
 var $136=($135|0); //@line 590 "gamecode.cpp"
 var $137=HEAPF64[((19520)>>3)]; //@line 590 "gamecode.cpp"
 var $138=($136)/($137); //@line 590 "gamecode.cpp"
 var $139=(($138)&-1); //@line 590 "gamecode.cpp"
 $x=$139; //@line 590 "gamecode.cpp"
 var $140=HEAP32[((20656)>>2)]; //@line 591 "gamecode.cpp"
 var $141=(($140+84)|0); //@line 591 "gamecode.cpp"
 var $142=HEAP32[(($141)>>2)]; //@line 591 "gamecode.cpp"
 var $143=FUNCTION_TABLE[$142](20656); //@line 591 "gamecode.cpp"
 var $144=($143|0); //@line 591 "gamecode.cpp"
 var $145=HEAPF64[((19520)>>3)]; //@line 591 "gamecode.cpp"
 var $146=($144)/($145); //@line 591 "gamecode.cpp"
 var $147=(($146)&-1); //@line 591 "gamecode.cpp"
 $y=$147; //@line 591 "gamecode.cpp"
 var $148=HEAP32[((20656)>>2)]; //@line 594 "gamecode.cpp"
 var $149=(($148+20)|0); //@line 594 "gamecode.cpp"
 var $150=HEAP32[(($149)>>2)]; //@line 594 "gamecode.cpp"
 var $151=HEAP32[((20656)>>2)]; //@line 594 "gamecode.cpp"
 var $152=(($151+80)|0); //@line 594 "gamecode.cpp"
 var $153=HEAP32[(($152)>>2)]; //@line 594 "gamecode.cpp"
 var $154=FUNCTION_TABLE[$153](20656); //@line 594 "gamecode.cpp"
 var $155=HEAP32[((20656)>>2)]; //@line 594 "gamecode.cpp"
 var $156=(($155+84)|0); //@line 594 "gamecode.cpp"
 var $157=HEAP32[(($156)>>2)]; //@line 594 "gamecode.cpp"
 var $158=FUNCTION_TABLE[$157](20656); //@line 594 "gamecode.cpp"
 var $159=HEAP32[((19528)>>2)]; //@line 594 "gamecode.cpp"
 var $160=$x; //@line 594 "gamecode.cpp"
 var $161=(((($160|0))/(2))&-1); //@line 594 "gamecode.cpp"
 var $162=((($159)-($161))|0); //@line 594 "gamecode.cpp"
 var $163=HEAP32[((19532)>>2)]; //@line 594 "gamecode.cpp"
 var $164=$y; //@line 594 "gamecode.cpp"
 var $165=(((($164|0))/(2))&-1); //@line 594 "gamecode.cpp"
 var $166=((($163)-($165))|0); //@line 594 "gamecode.cpp"
 var $167=$x; //@line 594 "gamecode.cpp"
 var $168=$y; //@line 594 "gamecode.cpp"
 var $169=FUNCTION_TABLE[$150](20656,20656,0,0,$154,$158,$162,$166,$167,$168,0,0,0); //@line 594 "gamecode.cpp"
 label=41;break; //@line 597 "gamecode.cpp"
 case 41: 
 $1=1; //@line 602 "gamecode.cpp"
 label=42;break; //@line 602 "gamecode.cpp"
 case 42: 
 var $172=$1; //@line 603 "gamecode.cpp"
 STACKTOP=sp;return $172; //@line 603 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12GameLoopCode12executeFrameEm($frameNumber){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $unit;
 $2=$frameNumber;
 var $3=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 616 "gamecode.cpp"
 $unit=$3; //@line 616 "gamecode.cpp"
 $i=0; //@line 616 "gamecode.cpp"
 label=2;break; //@line 616 "gamecode.cpp"
 case 2: 
 var $5=$unit; //@line 616 "gamecode.cpp"
 var $6=($5|0)!=0; //@line 616 "gamecode.cpp"
 if($6){label=3;break;}else{label=7;break;} //@line 616 "gamecode.cpp"
 case 3: 
 var $8=$unit; //@line 617 "gamecode.cpp"
 var $9=(($8)|0); //@line 617 "gamecode.cpp"
 var $10=$9; //@line 617 "gamecode.cpp"
 var $11=(($10+130)|0); //@line 617 "gamecode.cpp"
 var $12=HEAP8[($11)]; //@line 617 "gamecode.cpp"
 var $13=(($12)&1); //@line 617 "gamecode.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 617 "gamecode.cpp"
 case 4: 
 label=6;break; //@line 617 "gamecode.cpp"
 case 5: 
 var $16=$i; //@line 618 "gamecode.cpp"
 var $17=((($16)+(1))|0); //@line 618 "gamecode.cpp"
 $i=$17; //@line 618 "gamecode.cpp"
 label=6;break; //@line 619 "gamecode.cpp"
 case 6: 
 var $19=$unit; //@line 616 "gamecode.cpp"
 var $20=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$19); //@line 616 "gamecode.cpp"
 $unit=$20; //@line 616 "gamecode.cpp"
 label=2;break; //@line 616 "gamecode.cpp"
 case 7: 
 var $22=$i; //@line 622 "gamecode.cpp"
 var $23=($22|0)<=0; //@line 622 "gamecode.cpp"
 if($23){label=8;break;}else{label=10;break;} //@line 622 "gamecode.cpp"
 case 8: 
 var $25=HEAP32[((19620)>>2)]; //@line 622 "gamecode.cpp"
 var $26=($25|0)==-1; //@line 622 "gamecode.cpp"
 if($26){label=9;break;}else{label=10;break;} //@line 622 "gamecode.cpp"
 case 9: 
 var $28=HEAP32[((19616)>>2)]; //@line 624 "gamecode.cpp"
 HEAP32[((19620)>>2)]=$28; //@line 624 "gamecode.cpp"
 label=10;break; //@line 625 "gamecode.cpp"
 case 10: 
 var $30=HEAP8[(19480)]; //@line 646 "gamecode.cpp"
 var $31=(($30)&1); //@line 646 "gamecode.cpp"
 if($31){label=11;break;}else{label=12;break;} //@line 646 "gamecode.cpp"
 case 11: 
 $1=1; //@line 647 "gamecode.cpp"
 label=29;break; //@line 647 "gamecode.cpp"
 case 12: 
 var $34=HEAP32[((19288)>>2)]; //@line 650 "gamecode.cpp"
 var $35=((($34)+(1))|0); //@line 650 "gamecode.cpp"
 HEAP32[((19288)>>2)]=$35; //@line 650 "gamecode.cpp"
 var $36=__Z10moveCamerav(); //@line 653 "gamecode.cpp"
 if($36){label=14;break;}else{label=13;break;} //@line 653 "gamecode.cpp"
 case 13: 
 var $38=__ZN14conLoggerClass7logLineEPcbbbz(19416,13632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 654 "gamecode.cpp"
 $1=0; //@line 655 "gamecode.cpp"
 label=29;break; //@line 655 "gamecode.cpp"
 case 14: 
 var $40=$2; //@line 659 "gamecode.cpp"
 var $41=__Z22manageAutomaticStagingmPb($40,0); //@line 659 "gamecode.cpp"
 if($41){label=16;break;}else{label=15;break;} //@line 659 "gamecode.cpp"
 case 15: 
 var $43=__ZN14conLoggerClass7logLineEPcbbbz(19416,13312,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 660 "gamecode.cpp"
 $1=0; //@line 661 "gamecode.cpp"
 label=29;break; //@line 661 "gamecode.cpp"
 case 16: 
 var $45=HEAP32[((19620)>>2)]; //@line 665 "gamecode.cpp"
 var $46=($45|0)>0; //@line 665 "gamecode.cpp"
 if($46){label=17;break;}else{label=18;break;} //@line 665 "gamecode.cpp"
 case 17: 
 var $48=HEAP32[((19620)>>2)]; //@line 666 "gamecode.cpp"
 var $49=((($48)-(1))|0); //@line 666 "gamecode.cpp"
 HEAP32[((19620)>>2)]=$49; //@line 666 "gamecode.cpp"
 label=18;break; //@line 666 "gamecode.cpp"
 case 18: 
 var $51=$2; //@line 671 "gamecode.cpp"
 var $52=__Z11moveBulletsm($51); //@line 671 "gamecode.cpp"
 if($52){label=20;break;}else{label=19;break;} //@line 671 "gamecode.cpp"
 case 19: 
 var $54=__ZN14conLoggerClass7logLineEPcbbbz(19416,13144,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 672 "gamecode.cpp"
 $1=0; //@line 673 "gamecode.cpp"
 label=29;break; //@line 673 "gamecode.cpp"
 case 20: 
 var $56=HEAP32[((19456)>>2)]; //@line 677 "gamecode.cpp"
 var $57=__Z11movePlayersPh($56); //@line 677 "gamecode.cpp"
 if($57){label=22;break;}else{label=21;break;} //@line 677 "gamecode.cpp"
 case 21: 
 var $59=__ZN14conLoggerClass7logLineEPcbbbz(19416,12872,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 678 "gamecode.cpp"
 $1=0; //@line 679 "gamecode.cpp"
 label=29;break; //@line 679 "gamecode.cpp"
 case 22: 
 var $61=$2; //@line 684 "gamecode.cpp"
 var $62=__Z17executeEnemyWavesm($61); //@line 684 "gamecode.cpp"
 if($62){label=24;break;}else{label=23;break;} //@line 684 "gamecode.cpp"
 case 23: 
 var $64=__ZN14conLoggerClass7logLineEPcbbbz(19416,12584,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 685 "gamecode.cpp"
 $1=0; //@line 686 "gamecode.cpp"
 label=29;break; //@line 686 "gamecode.cpp"
 case 24: 
 var $66=$2; //@line 690 "gamecode.cpp"
 var $67=__Z14executeEnemyAIm($66); //@line 690 "gamecode.cpp"
 if($67){label=26;break;}else{label=25;break;} //@line 690 "gamecode.cpp"
 case 25: 
 var $69=__ZN14conLoggerClass7logLineEPcbbbz(19416,12320,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 691 "gamecode.cpp"
 $1=0; //@line 692 "gamecode.cpp"
 label=29;break; //@line 692 "gamecode.cpp"
 case 26: 
 var $71=__Z15checkCollisionsv(); //@line 696 "gamecode.cpp"
 if($71){label=28;break;}else{label=27;break;} //@line 696 "gamecode.cpp"
 case 27: 
 var $73=__ZN14conLoggerClass7logLineEPcbbbz(19416,11856,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 697 "gamecode.cpp"
 $1=0; //@line 698 "gamecode.cpp"
 label=29;break; //@line 698 "gamecode.cpp"
 case 28: 
 $1=1; //@line 701 "gamecode.cpp"
 label=29;break; //@line 701 "gamecode.cpp"
 case 29: 
 var $76=$1; //@line 702 "gamecode.cpp"
 STACKTOP=sp;return $76; //@line 702 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12GameLoopCode10beforeLoopEv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 HEAP32[((19288)>>2)]=0; //@line 710 "gamecode.cpp"
 var $2=__ZN14worldDataClass14initializeGameEi(19480,0); //@line 713 "gamecode.cpp"
 if($2){label=3;break;}else{label=2;break;} //@line 713 "gamecode.cpp"
 case 2: 
 $1=0; //@line 714 "gamecode.cpp"
 label=4;break; //@line 714 "gamecode.cpp"
 case 3: 
 $1=1; //@line 716 "gamecode.cpp"
 label=4;break; //@line 716 "gamecode.cpp"
 case 4: 
 var $6=$1; //@line 717 "gamecode.cpp"
 STACKTOP=sp;return $6; //@line 717 "gamecode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12GameLoopCode9afterLoopEv(){
 var label=0;


 var $1=__ZN14worldDataClass16deinitializeGameEv(19480); //@line 779 "gamecode.cpp"
 return 1; //@line 781 "gamecode.cpp"
}


function __ZN14worldDataClass14initializeGameEi($this,$gameZoneNumber){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$gameZoneNumber;
 var $4=$2;
 var $5=__ZN14conLoggerClass7logLineEPcbbbz(19416,10320,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 41 "gamedata.cpp"
 var $6=(($4)|0); //@line 44 "gamedata.cpp"
 HEAP8[($6)]=0; //@line 44 "gamedata.cpp"
 var $7=(($4+4)|0); //@line 47 "gamedata.cpp"
 HEAP32[(($7)>>2)]=0; //@line 47 "gamedata.cpp"
 var $8=(($4+8)|0); //@line 48 "gamedata.cpp"
 HEAP32[(($8)>>2)]=0; //@line 48 "gamedata.cpp"
 var $9=(($4+12)|0); //@line 49 "gamedata.cpp"
 HEAP32[(($9)>>2)]=0; //@line 49 "gamedata.cpp"
 HEAP32[((19296)>>2)]=4; //@line 53 "gamedata.cpp"
 var $10=(($4+20)|0); //@line 63 "gamedata.cpp"
 HEAP32[(($10)>>2)]=20656; //@line 63 "gamedata.cpp"
 var $11=__Z24getSurfaceByResourceNamePc(14888); //@line 64 "gamedata.cpp"
 var $12=$11; //@line 64 "gamedata.cpp"
 var $13=(($4+72)|0); //@line 64 "gamedata.cpp"
 HEAP32[(($13)>>2)]=$12; //@line 64 "gamedata.cpp"
 var $14=(($4+80)|0); //@line 65 "gamedata.cpp"
 HEAPF64[(($14)>>3)]=0; //@line 65 "gamedata.cpp"
 var $15=(($4+88)|0); //@line 65 "gamedata.cpp"
 HEAPF64[(($15)>>3)]=0; //@line 65 "gamedata.cpp"
 var $16=(($4+24)|0); //@line 66 "gamedata.cpp"
 HEAP32[(($16)>>2)]=0; //@line 66 "gamedata.cpp"
 var $17=(($4+28)|0); //@line 66 "gamedata.cpp"
 HEAP32[(($17)>>2)]=0; //@line 66 "gamedata.cpp"
 var $18=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,11600,0); //@line 67 "gamedata.cpp"
 var $19=(($4+96)|0); //@line 67 "gamedata.cpp"
 HEAP32[(($19)>>2)]=$18; //@line 67 "gamedata.cpp"
 var $20=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,8688,0); //@line 68 "gamedata.cpp"
 var $21=(($4+100)|0); //@line 68 "gamedata.cpp"
 HEAP32[(($21)>>2)]=$20; //@line 68 "gamedata.cpp"
 var $22=(($4+56)|0); //@line 69 "gamedata.cpp"
 HEAPF64[(($22)>>3)]=0; //@line 69 "gamedata.cpp"
 var $23=(($4+64)|0); //@line 69 "gamedata.cpp"
 HEAPF64[(($23)>>3)]=0; //@line 69 "gamedata.cpp"
 var $24=(($4+104)|0); //@line 72 "gamedata.cpp"
 HEAPF64[(($24)>>3)]=0; //@line 72 "gamedata.cpp"
 var $25=(($4+112)|0); //@line 73 "gamedata.cpp"
 HEAPF64[(($25)>>3)]=0; //@line 73 "gamedata.cpp"
 var $26=(($4+120)|0); //@line 74 "gamedata.cpp"
 HEAPF64[(($26)>>3)]=0; //@line 74 "gamedata.cpp"
 var $27=(($4+128)|0); //@line 74 "gamedata.cpp"
 HEAPF64[(($27)>>3)]=0; //@line 74 "gamedata.cpp"
 var $28=(($4+32)|0); //@line 77 "gamedata.cpp"
 HEAP8[($28)]=0; //@line 77 "gamedata.cpp"
 var $29=(($4+40)|0); //@line 78 "gamedata.cpp"
 HEAPF64[(($29)>>3)]=1; //@line 78 "gamedata.cpp"
 var $30=(($4+48)|0); //@line 79 "gamedata.cpp"
 HEAP32[(($30)>>2)]=0; //@line 79 "gamedata.cpp"
 var $31=(($4+52)|0); //@line 79 "gamedata.cpp"
 HEAP32[(($31)>>2)]=0; //@line 79 "gamedata.cpp"
 var $32=HEAP32[((2136)>>2)]; //@line 82 "gamedata.cpp"
 var $33=($32|0); //@line 82 "gamedata.cpp"
 var $34=$33; //@line 82 "gamedata.cpp"
 var $35=(($34)&-1); //@line 82 "gamedata.cpp"
 var $36=(($4+136)|0); //@line 82 "gamedata.cpp"
 HEAP32[(($36)>>2)]=$35; //@line 82 "gamedata.cpp"
 var $37=(($4+140)|0); //@line 83 "gamedata.cpp"
 HEAP32[(($37)>>2)]=-1; //@line 83 "gamedata.cpp"
 var $38=(($4+144)|0); //@line 84 "gamedata.cpp"
 HEAP8[($38)]=0; //@line 84 "gamedata.cpp"
 var $39=(($4+148)|0); //@line 87 "gamedata.cpp"
 HEAP32[(($39)>>2)]=0; //@line 87 "gamedata.cpp"
 var $40=(($4+152)|0); //@line 88 "gamedata.cpp"
 HEAP32[(($40)>>2)]=0; //@line 88 "gamedata.cpp"
 var $41=(($4+156)|0); //@line 89 "gamedata.cpp"
 HEAP32[(($41)>>2)]=0; //@line 89 "gamedata.cpp"
 var $42=(($4+160)|0); //@line 90 "gamedata.cpp"
 HEAP32[(($42)>>2)]=0; //@line 90 "gamedata.cpp"
 var $43=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,6736,0); //@line 94 "gamedata.cpp"
 var $44=(($4+164)|0); //@line 94 "gamedata.cpp"
 HEAP32[(($44)>>2)]=$43; //@line 94 "gamedata.cpp"
 var $45=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,5496,0); //@line 96 "gamedata.cpp"
 var $46=(($4+168)|0); //@line 96 "gamedata.cpp"
 HEAP32[(($46)>>2)]=$45; //@line 96 "gamedata.cpp"
 var $47=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,4744,0); //@line 100 "gamedata.cpp"
 var $48=(($4+172)|0); //@line 100 "gamedata.cpp"
 HEAP32[(($48)>>2)]=$47; //@line 100 "gamedata.cpp"
 var $49=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,4008,0); //@line 102 "gamedata.cpp"
 var $50=(($4+176)|0); //@line 102 "gamedata.cpp"
 HEAP32[(($50)>>2)]=$49; //@line 102 "gamedata.cpp"
 var $51=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3256,0); //@line 104 "gamedata.cpp"
 var $52=(($4+180)|0); //@line 104 "gamedata.cpp"
 HEAP32[(($52)>>2)]=$51; //@line 104 "gamedata.cpp"
 var $53=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,2624,0); //@line 106 "gamedata.cpp"
 var $54=(($4+184)|0); //@line 106 "gamedata.cpp"
 HEAP32[(($54)>>2)]=$53; //@line 106 "gamedata.cpp"
 var $55=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,16128,0); //@line 108 "gamedata.cpp"
 var $56=(($4+188)|0); //@line 108 "gamedata.cpp"
 HEAP32[(($56)>>2)]=$55; //@line 108 "gamedata.cpp"
 var $57=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,15504,0); //@line 110 "gamedata.cpp"
 var $58=(($4+192)|0); //@line 110 "gamedata.cpp"
 HEAP32[(($58)>>2)]=$57; //@line 110 "gamedata.cpp"
 var $59=__Z19createPlayerObjectsv(); //@line 113 "gamedata.cpp"
 if($59){label=3;break;}else{label=2;break;} //@line 113 "gamedata.cpp"
 case 2: 
 var $61=__ZN14worldDataClass16deinitializeGameEv($4); //@line 114 "gamedata.cpp"
 $1=0; //@line 115 "gamedata.cpp"
 label=12;break; //@line 115 "gamedata.cpp"
 case 3: 
 var $63=__Z20createWaveGenObjectsv(); //@line 119 "gamedata.cpp"
 if($63){label=5;break;}else{label=4;break;} //@line 119 "gamedata.cpp"
 case 4: 
 var $65=__ZN14worldDataClass16deinitializeGameEv($4); //@line 120 "gamedata.cpp"
 $1=0; //@line 121 "gamedata.cpp"
 label=12;break; //@line 121 "gamedata.cpp"
 case 5: 
 var $67=__ZN15vectorListClassI15enemyUnitStructE9resetListEv(19752); //@line 126 "gamedata.cpp"
 if($67){label=7;break;}else{label=6;break;} //@line 126 "gamedata.cpp"
 case 6: 
 var $69=__ZN14worldDataClass16deinitializeGameEv($4); //@line 127 "gamedata.cpp"
 $1=0; //@line 128 "gamedata.cpp"
 label=12;break; //@line 128 "gamedata.cpp"
 case 7: 
 var $71=__ZN15vectorListClassI16bulletUnitStructE9resetListEv(19920); //@line 131 "gamedata.cpp"
 if($71){label=9;break;}else{label=8;break;} //@line 131 "gamedata.cpp"
 case 8: 
 var $73=__ZN14worldDataClass16deinitializeGameEv($4); //@line 132 "gamedata.cpp"
 $1=0; //@line 133 "gamedata.cpp"
 label=12;break; //@line 133 "gamedata.cpp"
 case 9: 
 var $75=__Z12advanceStagev(); //@line 137 "gamedata.cpp"
 if($75){label=11;break;}else{label=10;break;} //@line 137 "gamedata.cpp"
 case 10: 
 var $77=__ZN14worldDataClass16deinitializeGameEv($4); //@line 138 "gamedata.cpp"
 $1=0; //@line 139 "gamedata.cpp"
 label=12;break; //@line 139 "gamedata.cpp"
 case 11: 
 $1=1; //@line 142 "gamedata.cpp"
 label=12;break; //@line 142 "gamedata.cpp"
 case 12: 
 var $80=$1; //@line 143 "gamedata.cpp"
 STACKTOP=sp;return $80; //@line 143 "gamedata.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN14worldDataClass16deinitializeGameEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__Z20destroyPlayerObjectsv(); //@line 161 "gamedata.cpp"
 var $4=__Z21destroyWaveGenObjectsv(); //@line 164 "gamedata.cpp"
 STACKTOP=sp;return 1; //@line 166 "gamedata.cpp"
}


function __ZN15vectorListClassI15enemyUnitStructE9resetListEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $node;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 168 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 168 "./vectorlist.h"
 var $6=(($5)&1); //@line 168 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 168 "./vectorlist.h"
 case 2: 
 $1=0; //@line 168 "./vectorlist.h"
 label=8;break; //@line 168 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 171 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 171 "./vectorlist.h"
 $node=$10; //@line 171 "./vectorlist.h"
 $i=0; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 4: 
 var $12=$i; //@line 174 "./vectorlist.h"
 var $13=(($3+4)|0); //@line 174 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 174 "./vectorlist.h"
 var $15=($12>>>0)<($14>>>0); //@line 174 "./vectorlist.h"
 if($15){label=5;break;}else{label=7;break;} //@line 174 "./vectorlist.h"
 case 5: 
 var $17=$node; //@line 176 "./vectorlist.h"
 var $18=(($17+256)|0); //@line 176 "./vectorlist.h"
 HEAP8[($18)]=1; //@line 176 "./vectorlist.h"
 var $19=$node; //@line 179 "./vectorlist.h"
 var $20=(($19+264)|0); //@line 179 "./vectorlist.h"
 $node=$20; //@line 179 "./vectorlist.h"
 label=6;break; //@line 180 "./vectorlist.h"
 case 6: 
 var $22=$i; //@line 174 "./vectorlist.h"
 var $23=((($22)+(1))|0); //@line 174 "./vectorlist.h"
 $i=$23; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 7: 
 var $25=(($3+4)|0); //@line 183 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 183 "./vectorlist.h"
 var $27=(($3+8)|0); //@line 183 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 183 "./vectorlist.h"
 var $28=(($3+12)|0); //@line 184 "./vectorlist.h"
 HEAP32[(($28)>>2)]=0; //@line 184 "./vectorlist.h"
 $1=1; //@line 186 "./vectorlist.h"
 label=8;break; //@line 186 "./vectorlist.h"
 case 8: 
 var $30=$1; //@line 187 "./vectorlist.h"
 STACKTOP=sp;return $30; //@line 187 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE9resetListEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $node;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 168 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 168 "./vectorlist.h"
 var $6=(($5)&1); //@line 168 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 168 "./vectorlist.h"
 case 2: 
 $1=0; //@line 168 "./vectorlist.h"
 label=8;break; //@line 168 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 171 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 171 "./vectorlist.h"
 $node=$10; //@line 171 "./vectorlist.h"
 $i=0; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 4: 
 var $12=$i; //@line 174 "./vectorlist.h"
 var $13=(($3+4)|0); //@line 174 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 174 "./vectorlist.h"
 var $15=($12>>>0)<($14>>>0); //@line 174 "./vectorlist.h"
 if($15){label=5;break;}else{label=7;break;} //@line 174 "./vectorlist.h"
 case 5: 
 var $17=$node; //@line 176 "./vectorlist.h"
 var $18=(($17+208)|0); //@line 176 "./vectorlist.h"
 HEAP8[($18)]=1; //@line 176 "./vectorlist.h"
 var $19=$node; //@line 179 "./vectorlist.h"
 var $20=(($19+216)|0); //@line 179 "./vectorlist.h"
 $node=$20; //@line 179 "./vectorlist.h"
 label=6;break; //@line 180 "./vectorlist.h"
 case 6: 
 var $22=$i; //@line 174 "./vectorlist.h"
 var $23=((($22)+(1))|0); //@line 174 "./vectorlist.h"
 $i=$23; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 7: 
 var $25=(($3+4)|0); //@line 183 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 183 "./vectorlist.h"
 var $27=(($3+8)|0); //@line 183 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 183 "./vectorlist.h"
 var $28=(($3+12)|0); //@line 184 "./vectorlist.h"
 HEAP32[(($28)>>2)]=0; //@line 184 "./vectorlist.h"
 $1=1; //@line 186 "./vectorlist.h"
 label=8;break; //@line 186 "./vectorlist.h"
 case 8: 
 var $30=$1; //@line 187 "./vectorlist.h"
 STACKTOP=sp;return $30; //@line 187 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function ___cxx_global_var_init(){
 var label=0;


 __ZN18scriptManagerClassC1Ev(18600); //@line 38 "gameglobals.cpp"
 var $1=_atexit((404),18600,___dso_handle); //@line 38 "gameglobals.cpp"
 return; //@line 38 "gameglobals.cpp"
}


function __ZN18scriptManagerClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN18scriptManagerClassC2Ev($2); //@line 57 "./scriptman.h"
 STACKTOP=sp;return; //@line 57 "./scriptman.h"
}


function __ZN18scriptManagerClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN18scriptManagerClassD2Ev($2); //@line 58 "./scriptman.h"
 STACKTOP=sp;return; //@line 58 "./scriptman.h"
}


function ___cxx_global_var_init1(){
 var label=0;


 __ZN16optionsFileClassC1Ev(19264); //@line 48 "gameglobals.cpp"
 var $1=_atexit((70),19264,___dso_handle); //@line 48 "gameglobals.cpp"
 return; //@line 48 "gameglobals.cpp"
}


function __ZN16optionsFileClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN16optionsFileClassC2Ev($2); //@line 115 "./optionsfile.h"
 STACKTOP=sp;return; //@line 115 "./optionsfile.h"
}


function __ZN16optionsFileClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN16optionsFileClassD2Ev($2); //@line 116 "./optionsfile.h"
 STACKTOP=sp;return; //@line 116 "./optionsfile.h"
}


function ___cxx_global_var_init2(){
 var label=0;


 __ZN15vectorListClassI16playerUnitStructEC1Ev(19240); //@line 72 "gameglobals.cpp"
 var $1=_atexit((24),19240,___dso_handle); //@line 72 "gameglobals.cpp"
 return; //@line 72 "gameglobals.cpp"
}


function __ZN15vectorListClassI16playerUnitStructEC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI16playerUnitStructEC2Ev($2); //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI16playerUnitStructED1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI16playerUnitStructED2Ev($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function ___cxx_global_var_init3(){
 var label=0;


 __ZN15vectorListClassI15enemyUnitStructEC1Ev(19752); //@line 73 "gameglobals.cpp"
 var $1=_atexit((258),19752,___dso_handle); //@line 73 "gameglobals.cpp"
 return; //@line 73 "gameglobals.cpp"
}


function __ZN15vectorListClassI15enemyUnitStructEC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI15enemyUnitStructEC2Ev($2); //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI15enemyUnitStructED1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI15enemyUnitStructED2Ev($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function ___cxx_global_var_init4(){
 var label=0;


 __ZN15vectorListClassI16bulletUnitStructEC1Ev(19920); //@line 74 "gameglobals.cpp"
 var $1=_atexit((168),19920,___dso_handle); //@line 74 "gameglobals.cpp"
 return; //@line 74 "gameglobals.cpp"
}


function __ZN15vectorListClassI16bulletUnitStructEC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI16bulletUnitStructEC2Ev($2); //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI16bulletUnitStructED1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI16bulletUnitStructED2Ev($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function ___cxx_global_var_init5(){
 var label=0;


 __ZN15vectorListClassI17waveGenUnitStructEC1Ev(18544); //@line 75 "gameglobals.cpp"
 var $1=_atexit((400),18544,___dso_handle); //@line 75 "gameglobals.cpp"
 return; //@line 75 "gameglobals.cpp"
}


function __ZN15vectorListClassI17waveGenUnitStructEC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI17waveGenUnitStructEC2Ev($2); //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI17waveGenUnitStructED1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15vectorListClassI17waveGenUnitStructED2Ev($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function ___cxx_global_var_init6(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $4=$3; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($4,3944,0,0,0,1,0,0,0,0,0,0,0,0,0,800,600) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=68;break; } //@line 571 "gameglobals.cpp"
 case 2: 
 var $6=$4; //@line 571 "gameglobals.cpp"
 HEAP32[((18608)>>2)]=$6; //@line 571 "gameglobals.cpp"
 HEAP32[((18612)>>2)]=2; //@line 571 "gameglobals.cpp"
 HEAP32[((18616)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18620)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $8=18624;label=3;break; //@line 571 "gameglobals.cpp"
 case 3: 
 var $8; //@line 571 "gameglobals.cpp"
 HEAP32[(($8)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $9=(($8+4)|0); //@line 571 "gameglobals.cpp"
 var $10=($9|0)==18632; //@line 571 "gameglobals.cpp"
 if($10){label=4;break;}else{var $8=$9;label=3;break;} //@line 571 "gameglobals.cpp"
 case 4: 
 HEAP8[(18632)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18633)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18634)]=1; //@line 571 "gameglobals.cpp"
 var $12=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $13=$12; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($13,3760,3016,1,0,1,0,0,1,0,0,0,0,1,1,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=69;break; } //@line 571 "gameglobals.cpp"
 case 5: 
 var $15=$13; //@line 571 "gameglobals.cpp"
 HEAP32[((18636)>>2)]=$15; //@line 571 "gameglobals.cpp"
 HEAP32[((18640)>>2)]=2; //@line 571 "gameglobals.cpp"
 HEAP32[((18644)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((18648)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18652)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $17=18656;label=6;break; //@line 571 "gameglobals.cpp"
 case 6: 
 var $17; //@line 571 "gameglobals.cpp"
 HEAP32[(($17)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $18=(($17+4)|0); //@line 571 "gameglobals.cpp"
 var $19=($18|0)==18660; //@line 571 "gameglobals.cpp"
 if($19){label=7;break;}else{var $17=$18;label=6;break;} //@line 571 "gameglobals.cpp"
 case 7: 
 HEAP8[(18660)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18661)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18662)]=1; //@line 571 "gameglobals.cpp"
 var $21=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $22=$21; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($22,2536,16000,1,0,1,0,0,1,0,0,0,0,1,1,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=70;break; } //@line 571 "gameglobals.cpp"
 case 8: 
 var $24=$22; //@line 571 "gameglobals.cpp"
 HEAP32[((18664)>>2)]=$24; //@line 571 "gameglobals.cpp"
 HEAP32[((18668)>>2)]=2; //@line 571 "gameglobals.cpp"
 HEAP32[((18672)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((18676)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18680)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $26=18684;label=9;break; //@line 571 "gameglobals.cpp"
 case 9: 
 var $26; //@line 571 "gameglobals.cpp"
 HEAP32[(($26)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $27=(($26+4)|0); //@line 571 "gameglobals.cpp"
 var $28=($27|0)==18688; //@line 571 "gameglobals.cpp"
 if($28){label=10;break;}else{var $26=$27;label=9;break;} //@line 571 "gameglobals.cpp"
 case 10: 
 HEAP8[(18688)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18689)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18690)]=1; //@line 571 "gameglobals.cpp"
 var $30=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $31=$30; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($31,15328,14848,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=71;break; } //@line 571 "gameglobals.cpp"
 case 11: 
 var $33=$31; //@line 571 "gameglobals.cpp"
 HEAP32[((18692)>>2)]=$33; //@line 571 "gameglobals.cpp"
 HEAP32[((18696)>>2)]=2; //@line 571 "gameglobals.cpp"
 HEAP32[((18700)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $35=18704;label=12;break; //@line 571 "gameglobals.cpp"
 case 12: 
 var $35; //@line 571 "gameglobals.cpp"
 HEAP32[(($35)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $36=(($35+4)|0); //@line 571 "gameglobals.cpp"
 var $37=($36|0)==18716; //@line 571 "gameglobals.cpp"
 if($37){label=13;break;}else{var $35=$36;label=12;break;} //@line 571 "gameglobals.cpp"
 case 13: 
 HEAP8[(18716)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18717)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18718)]=1; //@line 571 "gameglobals.cpp"
 var $39=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $40=$39; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($40,14312,14000,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=72;break; } //@line 571 "gameglobals.cpp"
 case 14: 
 var $42=$40; //@line 571 "gameglobals.cpp"
 HEAP32[((18720)>>2)]=$42; //@line 571 "gameglobals.cpp"
 HEAP32[((18724)>>2)]=2; //@line 571 "gameglobals.cpp"
 HEAP32[((18728)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $44=18732;label=15;break; //@line 571 "gameglobals.cpp"
 case 15: 
 var $44; //@line 571 "gameglobals.cpp"
 HEAP32[(($44)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $45=(($44+4)|0); //@line 571 "gameglobals.cpp"
 var $46=($45|0)==18744; //@line 571 "gameglobals.cpp"
 if($46){label=16;break;}else{var $44=$45;label=15;break;} //@line 571 "gameglobals.cpp"
 case 16: 
 HEAP8[(18744)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18745)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18746)]=1; //@line 571 "gameglobals.cpp"
 var $48=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $49=$48; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($49,13768,13472,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=73;break; } //@line 571 "gameglobals.cpp"
 case 17: 
 var $51=$49; //@line 571 "gameglobals.cpp"
 HEAP32[((18748)>>2)]=$51; //@line 571 "gameglobals.cpp"
 HEAP32[((18752)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18756)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $53=18760;label=18;break; //@line 571 "gameglobals.cpp"
 case 18: 
 var $53; //@line 571 "gameglobals.cpp"
 HEAP32[(($53)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $54=(($53+4)|0); //@line 571 "gameglobals.cpp"
 var $55=($54|0)==18772; //@line 571 "gameglobals.cpp"
 if($55){label=19;break;}else{var $53=$54;label=18;break;} //@line 571 "gameglobals.cpp"
 case 19: 
 HEAP8[(18772)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18773)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18774)]=1; //@line 571 "gameglobals.cpp"
 var $57=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $58=$57; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($58,13184,12912,1,1,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=74;break; } //@line 571 "gameglobals.cpp"
 case 20: 
 var $60=$58; //@line 571 "gameglobals.cpp"
 HEAP32[((18776)>>2)]=$60; //@line 571 "gameglobals.cpp"
 HEAP32[((18780)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18784)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $62=18788;label=21;break; //@line 571 "gameglobals.cpp"
 case 21: 
 var $62; //@line 571 "gameglobals.cpp"
 HEAP32[(($62)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $63=(($62+4)|0); //@line 571 "gameglobals.cpp"
 var $64=($63|0)==18800; //@line 571 "gameglobals.cpp"
 if($64){label=22;break;}else{var $62=$63;label=21;break;} //@line 571 "gameglobals.cpp"
 case 22: 
 HEAP8[(18800)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18801)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18802)]=1; //@line 571 "gameglobals.cpp"
 var $66=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $67=$66; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($67,12640,12360,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=75;break; } //@line 571 "gameglobals.cpp"
 case 23: 
 var $69=$67; //@line 571 "gameglobals.cpp"
 HEAP32[((18804)>>2)]=$69; //@line 571 "gameglobals.cpp"
 HEAP32[((18808)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18812)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $71=18816;label=24;break; //@line 571 "gameglobals.cpp"
 case 24: 
 var $71; //@line 571 "gameglobals.cpp"
 HEAP32[(($71)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $72=(($71+4)|0); //@line 571 "gameglobals.cpp"
 var $73=($72|0)==18828; //@line 571 "gameglobals.cpp"
 if($73){label=25;break;}else{var $71=$72;label=24;break;} //@line 571 "gameglobals.cpp"
 case 25: 
 HEAP8[(18828)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18829)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18830)]=1; //@line 571 "gameglobals.cpp"
 var $75=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $76=$75; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($76,12640,12360,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=76;break; } //@line 571 "gameglobals.cpp"
 case 26: 
 var $78=$76; //@line 571 "gameglobals.cpp"
 HEAP32[((18832)>>2)]=$78; //@line 571 "gameglobals.cpp"
 HEAP32[((18836)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18840)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $80=18844;label=27;break; //@line 571 "gameglobals.cpp"
 case 27: 
 var $80; //@line 571 "gameglobals.cpp"
 HEAP32[(($80)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $81=(($80+4)|0); //@line 571 "gameglobals.cpp"
 var $82=($81|0)==18856; //@line 571 "gameglobals.cpp"
 if($82){label=28;break;}else{var $80=$81;label=27;break;} //@line 571 "gameglobals.cpp"
 case 28: 
 HEAP8[(18856)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18857)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18858)]=1; //@line 571 "gameglobals.cpp"
 var $84=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $85=$84; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($85,11896,11560,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=77;break; } //@line 571 "gameglobals.cpp"
 case 29: 
 var $87=$85; //@line 571 "gameglobals.cpp"
 HEAP32[((18860)>>2)]=$87; //@line 571 "gameglobals.cpp"
 HEAP32[((18864)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18868)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $89=18872;label=30;break; //@line 571 "gameglobals.cpp"
 case 30: 
 var $89; //@line 571 "gameglobals.cpp"
 HEAP32[(($89)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $90=(($89+4)|0); //@line 571 "gameglobals.cpp"
 var $91=($90|0)==18884; //@line 571 "gameglobals.cpp"
 if($91){label=31;break;}else{var $89=$90;label=30;break;} //@line 571 "gameglobals.cpp"
 case 31: 
 HEAP8[(18884)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18885)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18886)]=1; //@line 571 "gameglobals.cpp"
 var $93=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $94=$93; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($94,11520,10936,1,1,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=78;break; } //@line 571 "gameglobals.cpp"
 case 32: 
 var $96=$94; //@line 571 "gameglobals.cpp"
 HEAP32[((18888)>>2)]=$96; //@line 571 "gameglobals.cpp"
 HEAP32[((18892)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18896)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $98=18900;label=33;break; //@line 571 "gameglobals.cpp"
 case 33: 
 var $98; //@line 571 "gameglobals.cpp"
 HEAP32[(($98)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $99=(($98+4)|0); //@line 571 "gameglobals.cpp"
 var $100=($99|0)==18912; //@line 571 "gameglobals.cpp"
 if($100){label=34;break;}else{var $98=$99;label=33;break;} //@line 571 "gameglobals.cpp"
 case 34: 
 HEAP8[(18912)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18913)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18914)]=1; //@line 571 "gameglobals.cpp"
 var $102=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $103=$102; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($103,10592,10152,1,1,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=79;break; } //@line 571 "gameglobals.cpp"
 case 35: 
 var $105=$103; //@line 571 "gameglobals.cpp"
 HEAP32[((18916)>>2)]=$105; //@line 571 "gameglobals.cpp"
 HEAP32[((18920)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18924)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $107=18928;label=36;break; //@line 571 "gameglobals.cpp"
 case 36: 
 var $107; //@line 571 "gameglobals.cpp"
 HEAP32[(($107)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $108=(($107+4)|0); //@line 571 "gameglobals.cpp"
 var $109=($108|0)==18940; //@line 571 "gameglobals.cpp"
 if($109){label=37;break;}else{var $107=$108;label=36;break;} //@line 571 "gameglobals.cpp"
 case 37: 
 HEAP8[(18940)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18941)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18942)]=1; //@line 571 "gameglobals.cpp"
 var $111=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $112=$111; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($112,10120,9696,1,0,1,0,0,1,0,0,0,0,8,16,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=80;break; } //@line 571 "gameglobals.cpp"
 case 38: 
 var $114=$112; //@line 571 "gameglobals.cpp"
 HEAP32[((18944)>>2)]=$114; //@line 571 "gameglobals.cpp"
 HEAP32[((18948)>>2)]=3; //@line 571 "gameglobals.cpp"
 HEAP32[((18952)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $116=18956;label=39;break; //@line 571 "gameglobals.cpp"
 case 39: 
 var $116; //@line 571 "gameglobals.cpp"
 HEAP32[(($116)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $117=(($116+4)|0); //@line 571 "gameglobals.cpp"
 var $118=($117|0)==18968; //@line 571 "gameglobals.cpp"
 if($118){label=40;break;}else{var $116=$117;label=39;break;} //@line 571 "gameglobals.cpp"
 case 40: 
 HEAP8[(18968)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18969)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18970)]=1; //@line 571 "gameglobals.cpp"
 var $120=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $121=$120; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($121,9656,9408,1,0,1,0,0,0,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=81;break; } //@line 571 "gameglobals.cpp"
 case 41: 
 var $123=$121; //@line 571 "gameglobals.cpp"
 HEAP32[((18972)>>2)]=$123; //@line 571 "gameglobals.cpp"
 HEAP32[((18976)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((18980)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $125=18984;label=42;break; //@line 571 "gameglobals.cpp"
 case 42: 
 var $125; //@line 571 "gameglobals.cpp"
 HEAP32[(($125)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $126=(($125+4)|0); //@line 571 "gameglobals.cpp"
 var $127=($126|0)==18996; //@line 571 "gameglobals.cpp"
 if($127){label=43;break;}else{var $125=$126;label=42;break;} //@line 571 "gameglobals.cpp"
 case 43: 
 HEAP8[(18996)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(18997)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(18998)]=1; //@line 571 "gameglobals.cpp"
 var $129=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $130=$129; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($130,9224,8920,1,0,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=44;break; } else { label=82;break; } //@line 571 "gameglobals.cpp"
 case 44: 
 var $132=$130; //@line 571 "gameglobals.cpp"
 HEAP32[((19000)>>2)]=$132; //@line 571 "gameglobals.cpp"
 HEAP32[((19004)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19008)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $134=19012;label=45;break; //@line 571 "gameglobals.cpp"
 case 45: 
 var $134; //@line 571 "gameglobals.cpp"
 HEAP32[(($134)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $135=(($134+4)|0); //@line 571 "gameglobals.cpp"
 var $136=($135|0)==19024; //@line 571 "gameglobals.cpp"
 if($136){label=46;break;}else{var $134=$135;label=45;break;} //@line 571 "gameglobals.cpp"
 case 46: 
 HEAP8[(19024)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19025)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19026)]=1; //@line 571 "gameglobals.cpp"
 var $138=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $139=$138; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($139,8640,8328,1,0,1,0,0,1,0,0,0,0,1,1,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=47;break; } else { label=83;break; } //@line 571 "gameglobals.cpp"
 case 47: 
 var $141=$139; //@line 571 "gameglobals.cpp"
 HEAP32[((19028)>>2)]=$141; //@line 571 "gameglobals.cpp"
 HEAP32[((19032)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19036)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $143=19040;label=48;break; //@line 571 "gameglobals.cpp"
 case 48: 
 var $143; //@line 571 "gameglobals.cpp"
 HEAP32[(($143)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $144=(($143+4)|0); //@line 571 "gameglobals.cpp"
 var $145=($144|0)==19052; //@line 571 "gameglobals.cpp"
 if($145){label=49;break;}else{var $143=$144;label=48;break;} //@line 571 "gameglobals.cpp"
 case 49: 
 HEAP8[(19052)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19053)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19054)]=1; //@line 571 "gameglobals.cpp"
 var $147=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $148=$147; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($148,8120,8016,1,0,1,0,0,1,0,0,0,0,59,58,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=50;break; } else { label=84;break; } //@line 571 "gameglobals.cpp"
 case 50: 
 var $150=$148; //@line 571 "gameglobals.cpp"
 HEAP32[((19056)>>2)]=$150; //@line 571 "gameglobals.cpp"
 HEAP32[((19060)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19064)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $152=19068;label=51;break; //@line 571 "gameglobals.cpp"
 case 51: 
 var $152; //@line 571 "gameglobals.cpp"
 HEAP32[(($152)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $153=(($152+4)|0); //@line 571 "gameglobals.cpp"
 var $154=($153|0)==19080; //@line 571 "gameglobals.cpp"
 if($154){label=52;break;}else{var $152=$153;label=51;break;} //@line 571 "gameglobals.cpp"
 case 52: 
 HEAP8[(19080)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19081)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19082)]=1; //@line 571 "gameglobals.cpp"
 var $156=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $157=$156; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($157,7912,7800,1,0,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { label=85;break; } //@line 571 "gameglobals.cpp"
 case 53: 
 var $159=$157; //@line 571 "gameglobals.cpp"
 HEAP32[((19084)>>2)]=$159; //@line 571 "gameglobals.cpp"
 HEAP32[((19088)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19092)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $161=19096;label=54;break; //@line 571 "gameglobals.cpp"
 case 54: 
 var $161; //@line 571 "gameglobals.cpp"
 HEAP32[(($161)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $162=(($161+4)|0); //@line 571 "gameglobals.cpp"
 var $163=($162|0)==19108; //@line 571 "gameglobals.cpp"
 if($163){label=55;break;}else{var $161=$162;label=54;break;} //@line 571 "gameglobals.cpp"
 case 55: 
 HEAP8[(19108)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19109)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19110)]=1; //@line 571 "gameglobals.cpp"
 var $165=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $166=$165; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($166,7632,7568,1,0,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=56;break; } else { label=86;break; } //@line 571 "gameglobals.cpp"
 case 56: 
 var $168=$166; //@line 571 "gameglobals.cpp"
 HEAP32[((19112)>>2)]=$168; //@line 571 "gameglobals.cpp"
 HEAP32[((19116)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19120)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $170=19124;label=57;break; //@line 571 "gameglobals.cpp"
 case 57: 
 var $170; //@line 571 "gameglobals.cpp"
 HEAP32[(($170)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $171=(($170+4)|0); //@line 571 "gameglobals.cpp"
 var $172=($171|0)==19136; //@line 571 "gameglobals.cpp"
 if($172){label=58;break;}else{var $170=$171;label=57;break;} //@line 571 "gameglobals.cpp"
 case 58: 
 HEAP8[(19136)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19137)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19138)]=1; //@line 571 "gameglobals.cpp"
 var $174=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $175=$174; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($175,7424,7088,1,0,1,0,0,1,0,0,0,0,1,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=59;break; } else { label=87;break; } //@line 571 "gameglobals.cpp"
 case 59: 
 var $177=$175; //@line 571 "gameglobals.cpp"
 HEAP32[((19140)>>2)]=$177; //@line 571 "gameglobals.cpp"
 HEAP32[((19144)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19148)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $179=19152;label=60;break; //@line 571 "gameglobals.cpp"
 case 60: 
 var $179; //@line 571 "gameglobals.cpp"
 HEAP32[(($179)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $180=(($179+4)|0); //@line 571 "gameglobals.cpp"
 var $181=($180|0)==19164; //@line 571 "gameglobals.cpp"
 if($181){label=61;break;}else{var $179=$180;label=60;break;} //@line 571 "gameglobals.cpp"
 case 61: 
 HEAP8[(19164)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19165)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19166)]=1; //@line 571 "gameglobals.cpp"
 var $183=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $184=$183; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($184,6744,6504,1,0,1,0,0,1,0,0,0,0,1,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { label=88;break; } //@line 571 "gameglobals.cpp"
 case 62: 
 var $186=$184; //@line 571 "gameglobals.cpp"
 HEAP32[((19168)>>2)]=$186; //@line 571 "gameglobals.cpp"
 HEAP32[((19172)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19176)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $188=19180;label=63;break; //@line 571 "gameglobals.cpp"
 case 63: 
 var $188; //@line 571 "gameglobals.cpp"
 HEAP32[(($188)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $189=(($188+4)|0); //@line 571 "gameglobals.cpp"
 var $190=($189|0)==19192; //@line 571 "gameglobals.cpp"
 if($190){label=64;break;}else{var $188=$189;label=63;break;} //@line 571 "gameglobals.cpp"
 case 64: 
 HEAP8[(19192)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19193)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19194)]=1; //@line 571 "gameglobals.cpp"
 var $192=__Znwj(92); //@line 571 "gameglobals.cpp"
 var $193=$192; //@line 571 "gameglobals.cpp"
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($193,6328,6224,1,0,1,0,0,1,0,0,0,0,0,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=65;break; } else { label=89;break; } //@line 571 "gameglobals.cpp"
 case 65: 
 var $195=$193; //@line 571 "gameglobals.cpp"
 HEAP32[((19196)>>2)]=$195; //@line 571 "gameglobals.cpp"
 HEAP32[((19200)>>2)]=1; //@line 571 "gameglobals.cpp"
 HEAP32[((19204)>>2)]=4; //@line 571 "gameglobals.cpp"
 var $197=19208;label=66;break; //@line 571 "gameglobals.cpp"
 case 66: 
 var $197; //@line 571 "gameglobals.cpp"
 HEAP32[(($197)>>2)]=0; //@line 571 "gameglobals.cpp"
 var $198=(($197+4)|0); //@line 571 "gameglobals.cpp"
 var $199=($198|0)==19220; //@line 571 "gameglobals.cpp"
 if($199){label=67;break;}else{var $197=$198;label=66;break;} //@line 571 "gameglobals.cpp"
 case 67: 
 HEAP8[(19220)]=1; //@line 571 "gameglobals.cpp"
 HEAP8[(19221)]=0; //@line 571 "gameglobals.cpp"
 HEAP8[(19222)]=1; //@line 571 "gameglobals.cpp"
 STACKTOP=sp;return; //@line 571 "gameglobals.cpp"
 case 68: 
 var $202$0 = ___cxa_find_matching_catch(-1, -1); var $202$1 = tempRet0;
 var $203=$202$0;
 $1=$203; //@line 571 "gameglobals.cpp"
 var $204=$202$1;
 $2=$204; //@line 571 "gameglobals.cpp"
 __ZdlPv($3); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 69: 
 var $206$0 = ___cxa_find_matching_catch(-1, -1); var $206$1 = tempRet0;
 var $207=$206$0;
 $1=$207; //@line 571 "gameglobals.cpp"
 var $208=$206$1;
 $2=$208; //@line 571 "gameglobals.cpp"
 __ZdlPv($12); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 70: 
 var $210$0 = ___cxa_find_matching_catch(-1, -1); var $210$1 = tempRet0;
 var $211=$210$0;
 $1=$211; //@line 571 "gameglobals.cpp"
 var $212=$210$1;
 $2=$212; //@line 571 "gameglobals.cpp"
 __ZdlPv($21); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 71: 
 var $214$0 = ___cxa_find_matching_catch(-1, -1); var $214$1 = tempRet0;
 var $215=$214$0;
 $1=$215; //@line 571 "gameglobals.cpp"
 var $216=$214$1;
 $2=$216; //@line 571 "gameglobals.cpp"
 __ZdlPv($30); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 72: 
 var $218$0 = ___cxa_find_matching_catch(-1, -1); var $218$1 = tempRet0;
 var $219=$218$0;
 $1=$219; //@line 571 "gameglobals.cpp"
 var $220=$218$1;
 $2=$220; //@line 571 "gameglobals.cpp"
 __ZdlPv($39); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 73: 
 var $222$0 = ___cxa_find_matching_catch(-1, -1); var $222$1 = tempRet0;
 var $223=$222$0;
 $1=$223; //@line 571 "gameglobals.cpp"
 var $224=$222$1;
 $2=$224; //@line 571 "gameglobals.cpp"
 __ZdlPv($48); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 74: 
 var $226$0 = ___cxa_find_matching_catch(-1, -1); var $226$1 = tempRet0;
 var $227=$226$0;
 $1=$227; //@line 571 "gameglobals.cpp"
 var $228=$226$1;
 $2=$228; //@line 571 "gameglobals.cpp"
 __ZdlPv($57); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 75: 
 var $230$0 = ___cxa_find_matching_catch(-1, -1); var $230$1 = tempRet0;
 var $231=$230$0;
 $1=$231; //@line 571 "gameglobals.cpp"
 var $232=$230$1;
 $2=$232; //@line 571 "gameglobals.cpp"
 __ZdlPv($66); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 76: 
 var $234$0 = ___cxa_find_matching_catch(-1, -1); var $234$1 = tempRet0;
 var $235=$234$0;
 $1=$235; //@line 571 "gameglobals.cpp"
 var $236=$234$1;
 $2=$236; //@line 571 "gameglobals.cpp"
 __ZdlPv($75); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 77: 
 var $238$0 = ___cxa_find_matching_catch(-1, -1); var $238$1 = tempRet0;
 var $239=$238$0;
 $1=$239; //@line 571 "gameglobals.cpp"
 var $240=$238$1;
 $2=$240; //@line 571 "gameglobals.cpp"
 __ZdlPv($84); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 78: 
 var $242$0 = ___cxa_find_matching_catch(-1, -1); var $242$1 = tempRet0;
 var $243=$242$0;
 $1=$243; //@line 571 "gameglobals.cpp"
 var $244=$242$1;
 $2=$244; //@line 571 "gameglobals.cpp"
 __ZdlPv($93); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 79: 
 var $246$0 = ___cxa_find_matching_catch(-1, -1); var $246$1 = tempRet0;
 var $247=$246$0;
 $1=$247; //@line 571 "gameglobals.cpp"
 var $248=$246$1;
 $2=$248; //@line 571 "gameglobals.cpp"
 __ZdlPv($102); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 80: 
 var $250$0 = ___cxa_find_matching_catch(-1, -1); var $250$1 = tempRet0;
 var $251=$250$0;
 $1=$251; //@line 571 "gameglobals.cpp"
 var $252=$250$1;
 $2=$252; //@line 571 "gameglobals.cpp"
 __ZdlPv($111); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 81: 
 var $254$0 = ___cxa_find_matching_catch(-1, -1); var $254$1 = tempRet0;
 var $255=$254$0;
 $1=$255; //@line 571 "gameglobals.cpp"
 var $256=$254$1;
 $2=$256; //@line 571 "gameglobals.cpp"
 __ZdlPv($120); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 82: 
 var $258$0 = ___cxa_find_matching_catch(-1, -1); var $258$1 = tempRet0;
 var $259=$258$0;
 $1=$259; //@line 571 "gameglobals.cpp"
 var $260=$258$1;
 $2=$260; //@line 571 "gameglobals.cpp"
 __ZdlPv($129); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 83: 
 var $262$0 = ___cxa_find_matching_catch(-1, -1); var $262$1 = tempRet0;
 var $263=$262$0;
 $1=$263; //@line 571 "gameglobals.cpp"
 var $264=$262$1;
 $2=$264; //@line 571 "gameglobals.cpp"
 __ZdlPv($138); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 84: 
 var $266$0 = ___cxa_find_matching_catch(-1, -1); var $266$1 = tempRet0;
 var $267=$266$0;
 $1=$267; //@line 571 "gameglobals.cpp"
 var $268=$266$1;
 $2=$268; //@line 571 "gameglobals.cpp"
 __ZdlPv($147); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 85: 
 var $270$0 = ___cxa_find_matching_catch(-1, -1); var $270$1 = tempRet0;
 var $271=$270$0;
 $1=$271; //@line 571 "gameglobals.cpp"
 var $272=$270$1;
 $2=$272; //@line 571 "gameglobals.cpp"
 __ZdlPv($156); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 86: 
 var $274$0 = ___cxa_find_matching_catch(-1, -1); var $274$1 = tempRet0;
 var $275=$274$0;
 $1=$275; //@line 571 "gameglobals.cpp"
 var $276=$274$1;
 $2=$276; //@line 571 "gameglobals.cpp"
 __ZdlPv($165); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 87: 
 var $278$0 = ___cxa_find_matching_catch(-1, -1); var $278$1 = tempRet0;
 var $279=$278$0;
 $1=$279; //@line 571 "gameglobals.cpp"
 var $280=$278$1;
 $2=$280; //@line 571 "gameglobals.cpp"
 __ZdlPv($174); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 88: 
 var $282$0 = ___cxa_find_matching_catch(-1, -1); var $282$1 = tempRet0;
 var $283=$282$0;
 $1=$283; //@line 571 "gameglobals.cpp"
 var $284=$282$1;
 $2=$284; //@line 571 "gameglobals.cpp"
 __ZdlPv($183); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 89: 
 var $286$0 = ___cxa_find_matching_catch(-1, -1); var $286$1 = tempRet0;
 var $287=$286$0;
 $1=$287; //@line 571 "gameglobals.cpp"
 var $288=$286$1;
 $2=$288; //@line 571 "gameglobals.cpp"
 __ZdlPv($192); //@line 571 "gameglobals.cpp"
 label=90;break; //@line 571 "gameglobals.cpp"
 case 90: 
 var $290=$1; //@line 571 "gameglobals.cpp"
 var $291=$2; //@line 571 "gameglobals.cpp"
 var $292$0=$290;
 var $292$1=0;
 var $293$0=$292$0;
 var $293$1=$291;
 ___resumeException($293$0) //@line 571 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function ___cxx_global_var_init47(){
 var label=0;


 __ZN23bitmappedFixedFontClassC1Ev(19728); //@line 1806 "gameglobals.cpp"
 var $1=_atexit((22),19728,___dso_handle); //@line 1806 "gameglobals.cpp"
 return; //@line 1806 "gameglobals.cpp"
}


function __ZN23bitmappedFixedFontClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN23bitmappedFixedFontClassC2Ev($2); //@line 98 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 98 "./fixedfontwrap.h"
}


function ___cxx_global_var_init48(){
 var label=0;


 __ZN23bitmappedFixedFontClassC1Ev(19680); //@line 1807 "gameglobals.cpp"
 var $1=_atexit((22),19680,___dso_handle); //@line 1807 "gameglobals.cpp"
 return; //@line 1807 "gameglobals.cpp"
}


function ___cxx_global_var_init49(){
 var label=0;


 __ZN23bitmappedFixedFontClassC1Ev(19704); //@line 1808 "gameglobals.cpp"
 var $1=_atexit((22),19704,___dso_handle); //@line 1808 "gameglobals.cpp"
 return; //@line 1808 "gameglobals.cpp"
}


function __Z23setupGameDataStructuresv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $typeList;
 var $i;
 var $j;
 var $siz;
 var $flname;
 var $2=__Z17initializeResInfov(); //@line 2081 "gameglobals.cpp"
 if($2){label=3;break;}else{label=2;break;} //@line 2081 "gameglobals.cpp"
 case 2: 
 var $4=__ZN14conLoggerClass7logLineEPcbbbz(19416,4160,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2082 "gameglobals.cpp"
 $1=0; //@line 2083 "gameglobals.cpp"
 label=33;break; //@line 2083 "gameglobals.cpp"
 case 3: 
 $i=0; //@line 2088 "gameglobals.cpp"
 label=4;break; //@line 2088 "gameglobals.cpp"
 case 4: 
 var $7=$i; //@line 2088 "gameglobals.cpp"
 var $8=($7|0)<4; //@line 2088 "gameglobals.cpp"
 if($8){label=5;break;}else{label=18;break;} //@line 2088 "gameglobals.cpp"
 case 5: 
 var $10=$i; //@line 2090 "gameglobals.cpp"
 if(($10|0)==0){ label=6;break;}else if(($10|0)==1){ label=7;break;}else if(($10|0)==2){ label=8;break;}else if(($10|0)==3){ label=9;break;}else{label=10;break;}
 case 6: 
 $siz=5; //@line 2092 "gameglobals.cpp"
 $typeList=448; //@line 2093 "gameglobals.cpp"
 label=10;break; //@line 2094 "gameglobals.cpp"
 case 7: 
 $siz=8; //@line 2096 "gameglobals.cpp"
 $typeList=1904; //@line 2097 "gameglobals.cpp"
 label=10;break; //@line 2098 "gameglobals.cpp"
 case 8: 
 $siz=4; //@line 2100 "gameglobals.cpp"
 $typeList=2192; //@line 2101 "gameglobals.cpp"
 label=10;break; //@line 2102 "gameglobals.cpp"
 case 9: 
 $siz=6; //@line 2104 "gameglobals.cpp"
 $typeList=8; //@line 2105 "gameglobals.cpp"
 label=10;break; //@line 2106 "gameglobals.cpp"
 case 10: 
 $j=0; //@line 2109 "gameglobals.cpp"
 label=11;break; //@line 2109 "gameglobals.cpp"
 case 11: 
 var $17=$j; //@line 2109 "gameglobals.cpp"
 var $18=$siz; //@line 2109 "gameglobals.cpp"
 var $19=($17|0)<($18|0); //@line 2109 "gameglobals.cpp"
 if($19){label=12;break;}else{label=16;break;} //@line 2109 "gameglobals.cpp"
 case 12: 
 var $21=$j; //@line 2112 "gameglobals.cpp"
 var $22=$typeList; //@line 2112 "gameglobals.cpp"
 var $23=(($22+((($21)*(24))&-1))|0); //@line 2112 "gameglobals.cpp"
 var $24=(($23+4)|0); //@line 2112 "gameglobals.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 2112 "gameglobals.cpp"
 var $26=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct($25,0); //@line 2112 "gameglobals.cpp"
 var $27=$j; //@line 2112 "gameglobals.cpp"
 var $28=$typeList; //@line 2112 "gameglobals.cpp"
 var $29=(($28+((($27)*(24))&-1))|0); //@line 2112 "gameglobals.cpp"
 var $30=(($29+8)|0); //@line 2112 "gameglobals.cpp"
 HEAP32[(($30)>>2)]=$26; //@line 2112 "gameglobals.cpp"
 var $31=$j; //@line 2115 "gameglobals.cpp"
 var $32=$typeList; //@line 2115 "gameglobals.cpp"
 var $33=(($32+((($31)*(24))&-1))|0); //@line 2115 "gameglobals.cpp"
 var $34=(($33+12)|0); //@line 2115 "gameglobals.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 2115 "gameglobals.cpp"
 var $36=($35|0)!=0; //@line 2115 "gameglobals.cpp"
 if($36){label=13;break;}else{label=14;break;} //@line 2115 "gameglobals.cpp"
 case 13: 
 var $38=$j; //@line 2116 "gameglobals.cpp"
 var $39=$typeList; //@line 2116 "gameglobals.cpp"
 var $40=(($39+((($38)*(24))&-1))|0); //@line 2116 "gameglobals.cpp"
 var $41=(($40+12)|0); //@line 2116 "gameglobals.cpp"
 var $42=HEAP32[(($41)>>2)]; //@line 2116 "gameglobals.cpp"
 $flname=$42; //@line 2116 "gameglobals.cpp"
 var $43=$flname; //@line 2119 "gameglobals.cpp"
 var $44=__Z22getFrameListNodeByNamePc($43); //@line 2119 "gameglobals.cpp"
 var $45=(($44)|0); //@line 2119 "gameglobals.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 2119 "gameglobals.cpp"
 var $47=$j; //@line 2119 "gameglobals.cpp"
 var $48=$typeList; //@line 2119 "gameglobals.cpp"
 var $49=(($48+((($47)*(24))&-1))|0); //@line 2119 "gameglobals.cpp"
 var $50=(($49+16)|0); //@line 2119 "gameglobals.cpp"
 HEAP32[(($50)>>2)]=$46; //@line 2119 "gameglobals.cpp"
 label=14;break; //@line 2120 "gameglobals.cpp"
 case 14: 
 label=15;break; //@line 2121 "gameglobals.cpp"
 case 15: 
 var $53=$j; //@line 2109 "gameglobals.cpp"
 var $54=((($53)+(1))|0); //@line 2109 "gameglobals.cpp"
 $j=$54; //@line 2109 "gameglobals.cpp"
 label=11;break; //@line 2109 "gameglobals.cpp"
 case 16: 
 label=17;break; //@line 2122 "gameglobals.cpp"
 case 17: 
 var $57=$i; //@line 2088 "gameglobals.cpp"
 var $58=((($57)+(1))|0); //@line 2088 "gameglobals.cpp"
 $i=$58; //@line 2088 "gameglobals.cpp"
 label=4;break; //@line 2088 "gameglobals.cpp"
 case 18: 
 var $60=__ZN15vectorListClassI16playerUnitStructE10initializeEm(19240,5); //@line 2126 "gameglobals.cpp"
 if($60){label=20;break;}else{label=19;break;} //@line 2126 "gameglobals.cpp"
 case 19: 
 var $62=__Z8closeAllPc(4056); //@line 2128 "gameglobals.cpp"
 $1=0; //@line 2129 "gameglobals.cpp"
 label=33;break; //@line 2129 "gameglobals.cpp"
 case 20: 
 var $64=__ZN15vectorListClassI15enemyUnitStructE10initializeEm(19752,400); //@line 2132 "gameglobals.cpp"
 if($64){label=22;break;}else{label=21;break;} //@line 2132 "gameglobals.cpp"
 case 21: 
 var $66=__Z8closeAllPc(3920); //@line 2134 "gameglobals.cpp"
 $1=0; //@line 2135 "gameglobals.cpp"
 label=33;break; //@line 2135 "gameglobals.cpp"
 case 22: 
 var $68=__ZN15vectorListClassI16bulletUnitStructE10initializeEm(19920,400); //@line 2138 "gameglobals.cpp"
 if($68){label=24;break;}else{label=23;break;} //@line 2138 "gameglobals.cpp"
 case 23: 
 var $70=__Z8closeAllPc(3856); //@line 2140 "gameglobals.cpp"
 $1=0; //@line 2141 "gameglobals.cpp"
 label=33;break; //@line 2141 "gameglobals.cpp"
 case 24: 
 var $72=__ZN15vectorListClassI17waveGenUnitStructE10initializeEm(18544,10); //@line 2144 "gameglobals.cpp"
 if($72){label=26;break;}else{label=25;break;} //@line 2144 "gameglobals.cpp"
 case 25: 
 var $74=__Z8closeAllPc(3816); //@line 2146 "gameglobals.cpp"
 $1=0; //@line 2147 "gameglobals.cpp"
 label=33;break; //@line 2147 "gameglobals.cpp"
 case 26: 
 var $76=__Z22initializeVirtualWallsv(); //@line 2151 "gameglobals.cpp"
 if($76){label=28;break;}else{label=27;break;} //@line 2151 "gameglobals.cpp"
 case 27: 
 var $78=__Z8closeAllPc(3776); //@line 2153 "gameglobals.cpp"
 $1=0; //@line 2154 "gameglobals.cpp"
 label=33;break; //@line 2154 "gameglobals.cpp"
 case 28: 
 var $80=__ZN16optionsFileClass4initEv(19264); //@line 2158 "gameglobals.cpp"
 if($80){label=29;break;}else{label=31;break;} //@line 2158 "gameglobals.cpp"
 case 29: 
 var $82=__ZN16optionsFileClass18createFileIfNeededEv(19264); //@line 2159 "gameglobals.cpp"
 if($82){label=30;break;}else{label=31;break;} //@line 2159 "gameglobals.cpp"
 case 30: 
 var $84=__ZN16optionsFileClass4loadEv(19264); //@line 2160 "gameglobals.cpp"
 if($84){label=32;break;}else{label=31;break;} //@line 2160 "gameglobals.cpp"
 case 31: 
 var $86=__Z8closeAllPc(3720); //@line 2162 "gameglobals.cpp"
 $1=0; //@line 2163 "gameglobals.cpp"
 label=33;break; //@line 2163 "gameglobals.cpp"
 case 32: 
 var $88=__ZN16optionsFileClass17getOptionsPointerEv(19264); //@line 2167 "gameglobals.cpp"
 var $89=(($88+8)|0); //@line 2167 "gameglobals.cpp"
 var $90=HEAP32[(($89)>>2)]; //@line 2167 "gameglobals.cpp"
 HEAP32[((19848)>>2)]=$90; //@line 2167 "gameglobals.cpp"
 var $91=HEAP32[((19848)>>2)]; //@line 2169 "gameglobals.cpp"
 var $92=__ZN18scriptManagerClass23setCurrentLanguageInLuaE12languageEnum(18600,$91); //@line 2169 "gameglobals.cpp"
 var $93=__ZN16optionsFileClass17getOptionsPointerEv(19264); //@line 2181 "gameglobals.cpp"
 var $94=(($93+16)|0); //@line 2181 "gameglobals.cpp"
 var $95=HEAP32[(($94)>>2)]; //@line 2181 "gameglobals.cpp"
 var $96=__ZN14conLoggerClass7logLineEPcbbbz(19416,3664,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$95,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2181 "gameglobals.cpp"
 $1=1; //@line 2184 "gameglobals.cpp"
 label=33;break; //@line 2184 "gameglobals.cpp"
 case 33: 
 var $98=$1; //@line 2185 "gameglobals.cpp"
 STACKTOP=sp;return $98; //@line 2185 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z26getFrameIndexAndListByNamePcPP19frameListDataStruct($frameName,$foundList){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $list;
 var $idx;
 $2=$frameName;
 $3=$foundList;
 $list=1760; //@line 2624 "gameglobals.cpp"
 var $4=$2; //@line 2627 "gameglobals.cpp"
 var $5=($4|0)==0; //@line 2627 "gameglobals.cpp"
 if($5){label=2;break;}else{label=3;break;} //@line 2627 "gameglobals.cpp"
 case 2: 
 $1=-1; //@line 2627 "gameglobals.cpp"
 label=12;break; //@line 2627 "gameglobals.cpp"
 case 3: 
 label=4;break; //@line 2630 "gameglobals.cpp"
 case 4: 
 var $9=$list; //@line 2630 "gameglobals.cpp"
 var $10=(($9)|0); //@line 2630 "gameglobals.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 2630 "gameglobals.cpp"
 var $12=($11|0)!=0; //@line 2630 "gameglobals.cpp"
 if($12){label=5;break;}else{label=11;break;} //@line 2630 "gameglobals.cpp"
 case 5: 
 var $14=$list; //@line 2631 "gameglobals.cpp"
 var $15=(($14+4)|0); //@line 2631 "gameglobals.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 2631 "gameglobals.cpp"
 var $17=$2; //@line 2631 "gameglobals.cpp"
 var $18=__Z19getFrameIndexByNamePcS_($16,$17); //@line 2631 "gameglobals.cpp"
 $idx=$18; //@line 2631 "gameglobals.cpp"
 var $19=$idx; //@line 2632 "gameglobals.cpp"
 var $20=($19|0)!=-1; //@line 2632 "gameglobals.cpp"
 if($20){label=6;break;}else{label=9;break;} //@line 2632 "gameglobals.cpp"
 case 6: 
 var $22=$3; //@line 2634 "gameglobals.cpp"
 var $23=($22|0)!=0; //@line 2634 "gameglobals.cpp"
 if($23){label=7;break;}else{label=8;break;} //@line 2634 "gameglobals.cpp"
 case 7: 
 var $25=$list; //@line 2634 "gameglobals.cpp"
 var $26=$3; //@line 2634 "gameglobals.cpp"
 HEAP32[(($26)>>2)]=$25; //@line 2634 "gameglobals.cpp"
 label=8;break; //@line 2634 "gameglobals.cpp"
 case 8: 
 var $28=$idx; //@line 2635 "gameglobals.cpp"
 $1=$28; //@line 2635 "gameglobals.cpp"
 label=12;break; //@line 2635 "gameglobals.cpp"
 case 9: 
 label=10;break; //@line 2637 "gameglobals.cpp"
 case 10: 
 var $31=$list; //@line 2630 "gameglobals.cpp"
 var $32=(($31+12)|0); //@line 2630 "gameglobals.cpp"
 $list=$32; //@line 2630 "gameglobals.cpp"
 label=4;break; //@line 2630 "gameglobals.cpp"
 case 11: 
 var $34=$2; //@line 2640 "gameglobals.cpp"
 var $35=__ZN14conLoggerClass7logLineEPcbbbz(19416,3048,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2640 "gameglobals.cpp"
 $1=-1; //@line 2642 "gameglobals.cpp"
 label=12;break; //@line 2642 "gameglobals.cpp"
 case 12: 
 var $37=$1; //@line 2643 "gameglobals.cpp"
 STACKTOP=sp;return $37; //@line 2643 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z22getFrameListNodeByNamePc($frameListName){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $listIdx;
 $1=$frameListName;
 var $2=$1; //@line 2553 "gameglobals.cpp"
 var $3=__Z23getFrameListIndexByNamePc($2); //@line 2553 "gameglobals.cpp"
 $listIdx=$3; //@line 2553 "gameglobals.cpp"
 var $4=$listIdx; //@line 2555 "gameglobals.cpp"
 var $5=($4|0)==-1; //@line 2555 "gameglobals.cpp"
 if($5){label=2;break;}else{label=3;break;} //@line 2555 "gameglobals.cpp"
 case 2: 
 var $11=0;label=4;break; //@line 2555 "gameglobals.cpp"
 case 3: 
 var $8=$listIdx; //@line 2555 "gameglobals.cpp"
 var $9=((1760+((($8)*(12))&-1))|0); //@line 2555 "gameglobals.cpp"
 var $11=$9;label=4;break; //@line 2555 "gameglobals.cpp"
 case 4: 
 var $11; //@line 2555 "gameglobals.cpp"
 STACKTOP=sp;return $11; //@line 2555 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE10initializeEm($this,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$size;
 var $4=$2;
 var $5=(($4)|0); //@line 122 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 122 "./vectorlist.h"
 var $7=(($6)&1); //@line 122 "./vectorlist.h"
 if($7){label=2;break;}else{label=3;break;} //@line 122 "./vectorlist.h"
 case 2: 
 $1=0; //@line 122 "./vectorlist.h"
 label=8;break; //@line 122 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 125 "./vectorlist.h"
 var $11$0=_llvm_umul_with_overflow_i32($10,264);
 var $11$1=tempRet0;
 var $12=$11$1;
 var $13=$11$0;
 var $14=($12?-1:$13); //@line 125 "./vectorlist.h"
 var $15=__Znaj($14); //@line 125 "./vectorlist.h"
 var $16=$15; //@line 125 "./vectorlist.h"
 var $17=(($4+20)|0); //@line 125 "./vectorlist.h"
 HEAP32[(($17)>>2)]=$16; //@line 125 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 126 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 126 "./vectorlist.h"
 var $20=($19|0)==0; //@line 126 "./vectorlist.h"
 if($20){label=4;break;}else{label=5;break;} //@line 126 "./vectorlist.h"
 case 4: 
 $1=0; //@line 126 "./vectorlist.h"
 label=8;break; //@line 126 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 127 "./vectorlist.h"
 var $24=(($4+4)|0); //@line 127 "./vectorlist.h"
 HEAP32[(($24)>>2)]=$23; //@line 127 "./vectorlist.h"
 var $25=(($4+16)|0); //@line 130 "./vectorlist.h"
 HEAP32[(($25)>>2)]=0; //@line 130 "./vectorlist.h"
 var $26=(($4)|0); //@line 133 "./vectorlist.h"
 HEAP8[($26)]=1; //@line 133 "./vectorlist.h"
 var $27=__ZN15vectorListClassI16playerUnitStructE9resetListEv($4); //@line 136 "./vectorlist.h"
 if($27){label=7;break;}else{label=6;break;} //@line 136 "./vectorlist.h"
 case 6: 
 var $29=(($4)|0); //@line 138 "./vectorlist.h"
 HEAP8[($29)]=0; //@line 138 "./vectorlist.h"
 $1=0; //@line 139 "./vectorlist.h"
 label=8;break; //@line 139 "./vectorlist.h"
 case 7: 
 $1=1; //@line 142 "./vectorlist.h"
 label=8;break; //@line 142 "./vectorlist.h"
 case 8: 
 var $32=$1; //@line 143 "./vectorlist.h"
 STACKTOP=sp;return $32; //@line 143 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE10initializeEm($this,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$size;
 var $4=$2;
 var $5=(($4)|0); //@line 122 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 122 "./vectorlist.h"
 var $7=(($6)&1); //@line 122 "./vectorlist.h"
 if($7){label=2;break;}else{label=3;break;} //@line 122 "./vectorlist.h"
 case 2: 
 $1=0; //@line 122 "./vectorlist.h"
 label=8;break; //@line 122 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 125 "./vectorlist.h"
 var $11$0=_llvm_umul_with_overflow_i32($10,264);
 var $11$1=tempRet0;
 var $12=$11$1;
 var $13=$11$0;
 var $14=($12?-1:$13); //@line 125 "./vectorlist.h"
 var $15=__Znaj($14); //@line 125 "./vectorlist.h"
 var $16=$15; //@line 125 "./vectorlist.h"
 var $17=(($4+20)|0); //@line 125 "./vectorlist.h"
 HEAP32[(($17)>>2)]=$16; //@line 125 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 126 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 126 "./vectorlist.h"
 var $20=($19|0)==0; //@line 126 "./vectorlist.h"
 if($20){label=4;break;}else{label=5;break;} //@line 126 "./vectorlist.h"
 case 4: 
 $1=0; //@line 126 "./vectorlist.h"
 label=8;break; //@line 126 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 127 "./vectorlist.h"
 var $24=(($4+4)|0); //@line 127 "./vectorlist.h"
 HEAP32[(($24)>>2)]=$23; //@line 127 "./vectorlist.h"
 var $25=(($4+16)|0); //@line 130 "./vectorlist.h"
 HEAP32[(($25)>>2)]=0; //@line 130 "./vectorlist.h"
 var $26=(($4)|0); //@line 133 "./vectorlist.h"
 HEAP8[($26)]=1; //@line 133 "./vectorlist.h"
 var $27=__ZN15vectorListClassI15enemyUnitStructE9resetListEv($4); //@line 136 "./vectorlist.h"
 if($27){label=7;break;}else{label=6;break;} //@line 136 "./vectorlist.h"
 case 6: 
 var $29=(($4)|0); //@line 138 "./vectorlist.h"
 HEAP8[($29)]=0; //@line 138 "./vectorlist.h"
 $1=0; //@line 139 "./vectorlist.h"
 label=8;break; //@line 139 "./vectorlist.h"
 case 7: 
 $1=1; //@line 142 "./vectorlist.h"
 label=8;break; //@line 142 "./vectorlist.h"
 case 8: 
 var $32=$1; //@line 143 "./vectorlist.h"
 STACKTOP=sp;return $32; //@line 143 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE10initializeEm($this,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$size;
 var $4=$2;
 var $5=(($4)|0); //@line 122 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 122 "./vectorlist.h"
 var $7=(($6)&1); //@line 122 "./vectorlist.h"
 if($7){label=2;break;}else{label=3;break;} //@line 122 "./vectorlist.h"
 case 2: 
 $1=0; //@line 122 "./vectorlist.h"
 label=8;break; //@line 122 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 125 "./vectorlist.h"
 var $11$0=_llvm_umul_with_overflow_i32($10,216);
 var $11$1=tempRet0;
 var $12=$11$1;
 var $13=$11$0;
 var $14=($12?-1:$13); //@line 125 "./vectorlist.h"
 var $15=__Znaj($14); //@line 125 "./vectorlist.h"
 var $16=$15; //@line 125 "./vectorlist.h"
 var $17=(($4+20)|0); //@line 125 "./vectorlist.h"
 HEAP32[(($17)>>2)]=$16; //@line 125 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 126 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 126 "./vectorlist.h"
 var $20=($19|0)==0; //@line 126 "./vectorlist.h"
 if($20){label=4;break;}else{label=5;break;} //@line 126 "./vectorlist.h"
 case 4: 
 $1=0; //@line 126 "./vectorlist.h"
 label=8;break; //@line 126 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 127 "./vectorlist.h"
 var $24=(($4+4)|0); //@line 127 "./vectorlist.h"
 HEAP32[(($24)>>2)]=$23; //@line 127 "./vectorlist.h"
 var $25=(($4+16)|0); //@line 130 "./vectorlist.h"
 HEAP32[(($25)>>2)]=0; //@line 130 "./vectorlist.h"
 var $26=(($4)|0); //@line 133 "./vectorlist.h"
 HEAP8[($26)]=1; //@line 133 "./vectorlist.h"
 var $27=__ZN15vectorListClassI16bulletUnitStructE9resetListEv($4); //@line 136 "./vectorlist.h"
 if($27){label=7;break;}else{label=6;break;} //@line 136 "./vectorlist.h"
 case 6: 
 var $29=(($4)|0); //@line 138 "./vectorlist.h"
 HEAP8[($29)]=0; //@line 138 "./vectorlist.h"
 $1=0; //@line 139 "./vectorlist.h"
 label=8;break; //@line 139 "./vectorlist.h"
 case 7: 
 $1=1; //@line 142 "./vectorlist.h"
 label=8;break; //@line 142 "./vectorlist.h"
 case 8: 
 var $32=$1; //@line 143 "./vectorlist.h"
 STACKTOP=sp;return $32; //@line 143 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE10initializeEm($this,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$size;
 var $4=$2;
 var $5=(($4)|0); //@line 122 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 122 "./vectorlist.h"
 var $7=(($6)&1); //@line 122 "./vectorlist.h"
 if($7){label=2;break;}else{label=3;break;} //@line 122 "./vectorlist.h"
 case 2: 
 $1=0; //@line 122 "./vectorlist.h"
 label=8;break; //@line 122 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 125 "./vectorlist.h"
 var $11$0=_llvm_umul_with_overflow_i32($10,216);
 var $11$1=tempRet0;
 var $12=$11$1;
 var $13=$11$0;
 var $14=($12?-1:$13); //@line 125 "./vectorlist.h"
 var $15=__Znaj($14); //@line 125 "./vectorlist.h"
 var $16=$15; //@line 125 "./vectorlist.h"
 var $17=(($4+20)|0); //@line 125 "./vectorlist.h"
 HEAP32[(($17)>>2)]=$16; //@line 125 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 126 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 126 "./vectorlist.h"
 var $20=($19|0)==0; //@line 126 "./vectorlist.h"
 if($20){label=4;break;}else{label=5;break;} //@line 126 "./vectorlist.h"
 case 4: 
 $1=0; //@line 126 "./vectorlist.h"
 label=8;break; //@line 126 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 127 "./vectorlist.h"
 var $24=(($4+4)|0); //@line 127 "./vectorlist.h"
 HEAP32[(($24)>>2)]=$23; //@line 127 "./vectorlist.h"
 var $25=(($4+16)|0); //@line 130 "./vectorlist.h"
 HEAP32[(($25)>>2)]=0; //@line 130 "./vectorlist.h"
 var $26=(($4)|0); //@line 133 "./vectorlist.h"
 HEAP8[($26)]=1; //@line 133 "./vectorlist.h"
 var $27=__ZN15vectorListClassI17waveGenUnitStructE9resetListEv($4); //@line 136 "./vectorlist.h"
 if($27){label=7;break;}else{label=6;break;} //@line 136 "./vectorlist.h"
 case 6: 
 var $29=(($4)|0); //@line 138 "./vectorlist.h"
 HEAP8[($29)]=0; //@line 138 "./vectorlist.h"
 $1=0; //@line 139 "./vectorlist.h"
 label=8;break; //@line 139 "./vectorlist.h"
 case 7: 
 $1=1; //@line 142 "./vectorlist.h"
 label=8;break; //@line 142 "./vectorlist.h"
 case 8: 
 var $32=$1; //@line 143 "./vectorlist.h"
 STACKTOP=sp;return $32; //@line 143 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16optionsFileClass17getOptionsPointerEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 150 "./optionsfile.h"
 var $4=HEAP32[(($3)>>2)]; //@line 150 "./optionsfile.h"
 STACKTOP=sp;return $4; //@line 150 "./optionsfile.h"
}


function __Z16setupGenericUnitR17genericUnitStructi($unit,$unitType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$unit;
 $2=$unitType;
 var $3=$2; //@line 2197 "gameglobals.cpp"
 var $4=$1; //@line 2197 "gameglobals.cpp"
 var $5=(($4+24)|0); //@line 2197 "gameglobals.cpp"
 HEAP32[(($5)>>2)]=$3; //@line 2197 "gameglobals.cpp"
 var $6=HEAP32[((19296)>>2)]; //@line 2201 "gameglobals.cpp"
 var $7=$1; //@line 2201 "gameglobals.cpp"
 var $8=(($7)|0); //@line 2201 "gameglobals.cpp"
 HEAP32[(($8)>>2)]=$6; //@line 2201 "gameglobals.cpp"
 var $9=HEAP32[((19296)>>2)]; //@line 2202 "gameglobals.cpp"
 var $10=((($9)+(1))|0); //@line 2202 "gameglobals.cpp"
 HEAP32[((19296)>>2)]=$10; //@line 2202 "gameglobals.cpp"
 var $11=$1; //@line 2206 "gameglobals.cpp"
 var $12=(($11+32)|0); //@line 2206 "gameglobals.cpp"
 HEAPF64[(($12)>>3)]=0; //@line 2206 "gameglobals.cpp"
 var $13=$1; //@line 2206 "gameglobals.cpp"
 var $14=(($13+40)|0); //@line 2206 "gameglobals.cpp"
 HEAPF64[(($14)>>3)]=0; //@line 2206 "gameglobals.cpp"
 var $15=$1; //@line 2207 "gameglobals.cpp"
 var $16=(($15+48)|0); //@line 2207 "gameglobals.cpp"
 HEAPF64[(($16)>>3)]=0; //@line 2207 "gameglobals.cpp"
 var $17=$1; //@line 2207 "gameglobals.cpp"
 var $18=(($17+56)|0); //@line 2207 "gameglobals.cpp"
 HEAPF64[(($18)>>3)]=0; //@line 2207 "gameglobals.cpp"
 var $19=$1; //@line 2208 "gameglobals.cpp"
 var $20=(($19+64)|0); //@line 2208 "gameglobals.cpp"
 HEAPF64[(($20)>>3)]=0; //@line 2208 "gameglobals.cpp"
 var $21=$1; //@line 2208 "gameglobals.cpp"
 var $22=(($21+72)|0); //@line 2208 "gameglobals.cpp"
 HEAPF64[(($22)>>3)]=0; //@line 2208 "gameglobals.cpp"
 var $23=$1; //@line 2209 "gameglobals.cpp"
 var $24=(($23+80)|0); //@line 2209 "gameglobals.cpp"
 HEAPF64[(($24)>>3)]=0; //@line 2209 "gameglobals.cpp"
 var $25=$1; //@line 2210 "gameglobals.cpp"
 var $26=(($25+92)|0); //@line 2210 "gameglobals.cpp"
 HEAP32[(($26)>>2)]=0; //@line 2210 "gameglobals.cpp"
 var $27=$1; //@line 2211 "gameglobals.cpp"
 var $28=(($27+8)|0); //@line 2211 "gameglobals.cpp"
 HEAPF64[(($28)>>3)]=0; //@line 2211 "gameglobals.cpp"
 var $29=$1; //@line 2211 "gameglobals.cpp"
 var $30=(($29+16)|0); //@line 2211 "gameglobals.cpp"
 HEAPF64[(($30)>>3)]=0; //@line 2211 "gameglobals.cpp"
 var $31=$1; //@line 2214 "gameglobals.cpp"
 var $32=(($31+96)|0); //@line 2214 "gameglobals.cpp"
 HEAP8[($32)]=0; //@line 2214 "gameglobals.cpp"
 var $33=$1; //@line 2215 "gameglobals.cpp"
 var $34=(($33+104)|0); //@line 2215 "gameglobals.cpp"
 HEAPF64[(($34)>>3)]=0; //@line 2215 "gameglobals.cpp"
 var $35=$1; //@line 2215 "gameglobals.cpp"
 var $36=(($35+112)|0); //@line 2215 "gameglobals.cpp"
 HEAPF64[(($36)>>3)]=0; //@line 2215 "gameglobals.cpp"
 var $37=$1; //@line 2218 "gameglobals.cpp"
 var $38=(($37+120)|0); //@line 2218 "gameglobals.cpp"
 HEAPF64[(($38)>>3)]=0; //@line 2218 "gameglobals.cpp"
 var $39=$1; //@line 2219 "gameglobals.cpp"
 var $40=(($39+128)|0); //@line 2219 "gameglobals.cpp"
 HEAP8[($40)]=1; //@line 2219 "gameglobals.cpp"
 var $41=$1; //@line 2222 "gameglobals.cpp"
 var $42=(($41+130)|0); //@line 2222 "gameglobals.cpp"
 HEAP8[($42)]=1; //@line 2222 "gameglobals.cpp"
 var $43=$1; //@line 2224 "gameglobals.cpp"
 var $44=(($43+129)|0); //@line 2224 "gameglobals.cpp"
 HEAP8[($44)]=1; //@line 2224 "gameglobals.cpp"
 var $45=$1; //@line 2225 "gameglobals.cpp"
 var $46=(($45+131)|0); //@line 2225 "gameglobals.cpp"
 HEAP8[($46)]=0; //@line 2225 "gameglobals.cpp"
 var $47=$1; //@line 2228 "gameglobals.cpp"
 var $48=(($47+132)|0); //@line 2228 "gameglobals.cpp"
 var $49=(($48+4)|0); //@line 2228 "gameglobals.cpp"
 HEAP8[($49)]=0; //@line 2228 "gameglobals.cpp"
 var $50=$1; //@line 2229 "gameglobals.cpp"
 var $51=(($50+144)|0); //@line 2229 "gameglobals.cpp"
 var $52=(($51+4)|0); //@line 2229 "gameglobals.cpp"
 HEAP8[($52)]=0; //@line 2229 "gameglobals.cpp"
 var $53=$1; //@line 2230 "gameglobals.cpp"
 var $54=(($53+132)|0); //@line 2230 "gameglobals.cpp"
 var $55=(($54)|0); //@line 2230 "gameglobals.cpp"
 HEAP32[(($55)>>2)]=0; //@line 2230 "gameglobals.cpp"
 var $56=$1; //@line 2231 "gameglobals.cpp"
 var $57=(($56+144)|0); //@line 2231 "gameglobals.cpp"
 var $58=(($57)|0); //@line 2231 "gameglobals.cpp"
 HEAP32[(($58)>>2)]=0; //@line 2231 "gameglobals.cpp"
 var $59=$1; //@line 2234 "gameglobals.cpp"
 var $60=(($59+156)|0); //@line 2234 "gameglobals.cpp"
 HEAP8[($60)]=0; //@line 2234 "gameglobals.cpp"
 var $61=$1; //@line 2235 "gameglobals.cpp"
 var $62=(($61+160)|0); //@line 2235 "gameglobals.cpp"
 HEAPF64[(($62)>>3)]=0; //@line 2235 "gameglobals.cpp"
 var $63=$1; //@line 2236 "gameglobals.cpp"
 var $64=(($63+168)|0); //@line 2236 "gameglobals.cpp"
 HEAPF64[(($64)>>3)]=0; //@line 2236 "gameglobals.cpp"
 STACKTOP=sp;return 1; //@line 2238 "gameglobals.cpp"
}


function __Z14setupEnemyUnitR15enemyUnitStructi($unit,$unitType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $headCarrierScore;
 var $sheepCarrierScore;
 var $headScore;
 var $wSheepScore;
 var $wSheepScoreWithHead;
 var $bSheepScore;
 var $bSheepScoreWithHead;
 $2=$unit;
 $3=$unitType;
 var $4=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3584,0); //@line 2249 "gameglobals.cpp"
 $headCarrierScore=$4; //@line 2249 "gameglobals.cpp"
 var $5=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3560,0); //@line 2251 "gameglobals.cpp"
 $sheepCarrierScore=$5; //@line 2251 "gameglobals.cpp"
 var $6=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3376,0); //@line 2253 "gameglobals.cpp"
 $headScore=$6; //@line 2253 "gameglobals.cpp"
 var $7=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3296,0); //@line 2255 "gameglobals.cpp"
 $wSheepScore=$7; //@line 2255 "gameglobals.cpp"
 var $8=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3200,0); //@line 2257 "gameglobals.cpp"
 $wSheepScoreWithHead=$8; //@line 2257 "gameglobals.cpp"
 var $9=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3168,0); //@line 2259 "gameglobals.cpp"
 $bSheepScore=$9; //@line 2259 "gameglobals.cpp"
 var $10=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3112,0); //@line 2261 "gameglobals.cpp"
 $bSheepScoreWithHead=$10; //@line 2261 "gameglobals.cpp"
 var $11=$2; //@line 2264 "gameglobals.cpp"
 var $12=$11; //@line 2264 "gameglobals.cpp"
 var $13=$3; //@line 2264 "gameglobals.cpp"
 var $14=__Z16setupGenericUnitR17genericUnitStructi($12,$13); //@line 2264 "gameglobals.cpp"
 if($14){label=3;break;}else{label=2;break;} //@line 2264 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2264 "gameglobals.cpp"
 label=13;break; //@line 2264 "gameglobals.cpp"
 case 3: 
 var $17=$3; //@line 2267 "gameglobals.cpp"
 var $18=((1904+((($17)*(24))&-1))|0); //@line 2267 "gameglobals.cpp"
 var $19=(($18+8)|0); //@line 2267 "gameglobals.cpp"
 var $20=HEAP32[(($19)>>2)]; //@line 2267 "gameglobals.cpp"
 var $21=$2; //@line 2267 "gameglobals.cpp"
 var $22=$21; //@line 2267 "gameglobals.cpp"
 var $23=(($22+88)|0); //@line 2267 "gameglobals.cpp"
 HEAP32[(($23)>>2)]=$20; //@line 2267 "gameglobals.cpp"
 var $24=$2; //@line 2270 "gameglobals.cpp"
 var $25=$24; //@line 2270 "gameglobals.cpp"
 var $26=(($25+28)|0); //@line 2270 "gameglobals.cpp"
 HEAP8[($26)]=3; //@line 2270 "gameglobals.cpp"
 var $27=HEAPF64[((19560)>>3)]; //@line 2273 "gameglobals.cpp"
 var $28=HEAP32[((19576)>>2)]; //@line 2273 "gameglobals.cpp"
 var $29=($28>>>0); //@line 2273 "gameglobals.cpp"
 var $30=($27)+($29); //@line 2273 "gameglobals.cpp"
 var $31=$2; //@line 2273 "gameglobals.cpp"
 var $32=$31; //@line 2273 "gameglobals.cpp"
 var $33=(($32+88)|0); //@line 2273 "gameglobals.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 2273 "gameglobals.cpp"
 var $35=$2; //@line 2273 "gameglobals.cpp"
 var $36=$35; //@line 2273 "gameglobals.cpp"
 var $37=(($36+24)|0); //@line 2273 "gameglobals.cpp"
 var $38=HEAP32[(($37)>>2)]; //@line 2273 "gameglobals.cpp"
 var $39=((1904+((($38)*(24))&-1))|0); //@line 2273 "gameglobals.cpp"
 var $40=(($39+16)|0); //@line 2273 "gameglobals.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 2273 "gameglobals.cpp"
 var $42=(($41+((($34)*(80))&-1))|0); //@line 2273 "gameglobals.cpp"
 var $43=(($42+40)|0); //@line 2273 "gameglobals.cpp"
 var $44=HEAP32[(($43)>>2)]; //@line 2273 "gameglobals.cpp"
 var $45=($44|0); //@line 2273 "gameglobals.cpp"
 var $46=($30)+($45); //@line 2273 "gameglobals.cpp"
 var $47=($46)-(1); //@line 2273 "gameglobals.cpp"
 var $48=$2; //@line 2273 "gameglobals.cpp"
 var $49=$48; //@line 2273 "gameglobals.cpp"
 var $50=(($49+8)|0); //@line 2273 "gameglobals.cpp"
 HEAPF64[(($50)>>3)]=$47; //@line 2273 "gameglobals.cpp"
 var $51=HEAP32[((2136)>>2)]; //@line 2277 "gameglobals.cpp"
 var $52=($51|0); //@line 2277 "gameglobals.cpp"
 var $53=((0.4))*($52); //@line 2277 "gameglobals.cpp"
 var $54=(($53)&-1); //@line 2277 "gameglobals.cpp"
 var $55=$2; //@line 2277 "gameglobals.cpp"
 var $56=(($55+176)|0); //@line 2277 "gameglobals.cpp"
 HEAP32[(($56)>>2)]=$54; //@line 2277 "gameglobals.cpp"
 var $57=HEAP32[((2136)>>2)]; //@line 2278 "gameglobals.cpp"
 var $58=($57|0); //@line 2278 "gameglobals.cpp"
 var $59=((0.4))*($58); //@line 2278 "gameglobals.cpp"
 var $60=(($59)&-1); //@line 2278 "gameglobals.cpp"
 var $61=$2; //@line 2278 "gameglobals.cpp"
 var $62=(($61+180)|0); //@line 2278 "gameglobals.cpp"
 HEAP32[(($62)>>2)]=$60; //@line 2278 "gameglobals.cpp"
 var $63=$2; //@line 2279 "gameglobals.cpp"
 var $64=$63; //@line 2279 "gameglobals.cpp"
 var $65=(($64+120)|0); //@line 2279 "gameglobals.cpp"
 HEAPF64[(($65)>>3)]=8; //@line 2279 "gameglobals.cpp"
 var $66=$2; //@line 2281 "gameglobals.cpp"
 var $67=(($66+192)|0); //@line 2281 "gameglobals.cpp"
 HEAP32[(($67)>>2)]=0; //@line 2281 "gameglobals.cpp"
 var $68=$2; //@line 2284 "gameglobals.cpp"
 var $69=(($68+208)|0); //@line 2284 "gameglobals.cpp"
 HEAP32[(($69)>>2)]=0; //@line 2284 "gameglobals.cpp"
 var $70=$2; //@line 2285 "gameglobals.cpp"
 var $71=(($70+212)|0); //@line 2285 "gameglobals.cpp"
 HEAP32[(($71)>>2)]=0; //@line 2285 "gameglobals.cpp"
 var $72=$2; //@line 2286 "gameglobals.cpp"
 var $73=(($72+216)|0); //@line 2286 "gameglobals.cpp"
 HEAP32[(($73)>>2)]=0; //@line 2286 "gameglobals.cpp"
 var $74=$2; //@line 2287 "gameglobals.cpp"
 var $75=(($74+220)|0); //@line 2287 "gameglobals.cpp"
 HEAP8[($75)]=0; //@line 2287 "gameglobals.cpp"
 var $76=$2; //@line 2290 "gameglobals.cpp"
 var $77=(($76+196)|0); //@line 2290 "gameglobals.cpp"
 HEAP8[($77)]=1; //@line 2290 "gameglobals.cpp"
 var $78=$2; //@line 2291 "gameglobals.cpp"
 var $79=(($78+197)|0); //@line 2291 "gameglobals.cpp"
 HEAP8[($79)]=1; //@line 2291 "gameglobals.cpp"
 var $80=$3; //@line 2294 "gameglobals.cpp"
 switch(($80|0)){case 7:{ label=4;break;}case 6:{ label=5;break;}case 4:case 3:case 5:{ label=6;break;}default:{label=7;break;}}break;
 case 4: 
 var $82=HEAP32[((2136)>>2)]; //@line 2297 "gameglobals.cpp"
 var $83=($82|0); //@line 2297 "gameglobals.cpp"
 var $84=((0.7))*($83); //@line 2297 "gameglobals.cpp"
 var $85=(($84)&-1); //@line 2297 "gameglobals.cpp"
 var $86=$2; //@line 2297 "gameglobals.cpp"
 var $87=(($86+176)|0); //@line 2297 "gameglobals.cpp"
 HEAP32[(($87)>>2)]=$85; //@line 2297 "gameglobals.cpp"
 var $88=$2; //@line 2299 "gameglobals.cpp"
 var $89=(($88+200)|0); //@line 2299 "gameglobals.cpp"
 HEAPF64[(($89)>>3)]=30; //@line 2299 "gameglobals.cpp"
 var $90=$2; //@line 2300 "gameglobals.cpp"
 var $91=$90; //@line 2300 "gameglobals.cpp"
 var $92=(($91+128)|0); //@line 2300 "gameglobals.cpp"
 HEAP8[($92)]=0; //@line 2300 "gameglobals.cpp"
 var $93=$headCarrierScore; //@line 2301 "gameglobals.cpp"
 var $94=($93|0); //@line 2301 "gameglobals.cpp"
 var $95=$2; //@line 2301 "gameglobals.cpp"
 var $96=(($95+184)|0); //@line 2301 "gameglobals.cpp"
 HEAPF64[(($96)>>3)]=$94; //@line 2301 "gameglobals.cpp"
 label=7;break; //@line 2302 "gameglobals.cpp"
 case 5: 
 var $98=HEAP32[((2136)>>2)]; //@line 2305 "gameglobals.cpp"
 var $99=($98|0); //@line 2305 "gameglobals.cpp"
 var $100=((0.7))*($99); //@line 2305 "gameglobals.cpp"
 var $101=(($100)&-1); //@line 2305 "gameglobals.cpp"
 var $102=$2; //@line 2305 "gameglobals.cpp"
 var $103=(($102+176)|0); //@line 2305 "gameglobals.cpp"
 HEAP32[(($103)>>2)]=$101; //@line 2305 "gameglobals.cpp"
 var $104=$2; //@line 2307 "gameglobals.cpp"
 var $105=(($104+200)|0); //@line 2307 "gameglobals.cpp"
 HEAPF64[(($105)>>3)]=30; //@line 2307 "gameglobals.cpp"
 var $106=$2; //@line 2308 "gameglobals.cpp"
 var $107=$106; //@line 2308 "gameglobals.cpp"
 var $108=(($107+128)|0); //@line 2308 "gameglobals.cpp"
 HEAP8[($108)]=0; //@line 2308 "gameglobals.cpp"
 var $109=$sheepCarrierScore; //@line 2309 "gameglobals.cpp"
 var $110=($109|0); //@line 2309 "gameglobals.cpp"
 var $111=$2; //@line 2309 "gameglobals.cpp"
 var $112=(($111+184)|0); //@line 2309 "gameglobals.cpp"
 HEAPF64[(($112)>>3)]=$110; //@line 2309 "gameglobals.cpp"
 label=7;break; //@line 2310 "gameglobals.cpp"
 case 6: 
 var $114=$2; //@line 2315 "gameglobals.cpp"
 var $115=(($114+196)|0); //@line 2315 "gameglobals.cpp"
 HEAP8[($115)]=0; //@line 2315 "gameglobals.cpp"
 var $116=$2; //@line 2316 "gameglobals.cpp"
 var $117=(($116+197)|0); //@line 2316 "gameglobals.cpp"
 HEAP8[($117)]=0; //@line 2316 "gameglobals.cpp"
 var $118=$2; //@line 2319 "gameglobals.cpp"
 var $119=(($118+200)|0); //@line 2319 "gameglobals.cpp"
 HEAPF64[(($119)>>3)]=50; //@line 2319 "gameglobals.cpp"
 var $120=$2; //@line 2320 "gameglobals.cpp"
 var $121=$120; //@line 2320 "gameglobals.cpp"
 var $122=(($121+128)|0); //@line 2320 "gameglobals.cpp"
 HEAP8[($122)]=0; //@line 2320 "gameglobals.cpp"
 var $123=$2; //@line 2321 "gameglobals.cpp"
 var $124=(($123+184)|0); //@line 2321 "gameglobals.cpp"
 HEAPF64[(($124)>>3)]=0; //@line 2321 "gameglobals.cpp"
 label=7;break; //@line 2322 "gameglobals.cpp"
 case 7: 
 var $126=$3; //@line 2327 "gameglobals.cpp"
 switch(($126|0)){case 5:{ label=10;break;}case 6:case 7:{ label=11;break;}case 3:{ label=8;break;}case 4:{ label=9;break;}default:{label=12;break;}}break;
 case 8: 
 var $128=$2; //@line 2330 "gameglobals.cpp"
 var $129=(($128+224)|0); //@line 2330 "gameglobals.cpp"
 var $130=$129; //@line 2330 "gameglobals.cpp"
 var $131=(($130)|0); //@line 2330 "gameglobals.cpp"
 HEAP8[($131)]=0; //@line 2330 "gameglobals.cpp"
 var $132=$2; //@line 2331 "gameglobals.cpp"
 var $133=(($132+224)|0); //@line 2331 "gameglobals.cpp"
 var $134=$133; //@line 2331 "gameglobals.cpp"
 var $135=(($134+1)|0); //@line 2331 "gameglobals.cpp"
 HEAP8[($135)]=0; //@line 2331 "gameglobals.cpp"
 var $136=$2; //@line 2334 "gameglobals.cpp"
 var $137=(($136+224)|0); //@line 2334 "gameglobals.cpp"
 var $138=$137; //@line 2334 "gameglobals.cpp"
 var $139=(($138+4)|0); //@line 2334 "gameglobals.cpp"
 HEAP32[(($139)>>2)]=40; //@line 2334 "gameglobals.cpp"
 var $140=$2; //@line 2335 "gameglobals.cpp"
 var $141=(($140+224)|0); //@line 2335 "gameglobals.cpp"
 var $142=$141; //@line 2335 "gameglobals.cpp"
 var $143=(($142+8)|0); //@line 2335 "gameglobals.cpp"
 HEAP32[(($143)>>2)]=5; //@line 2335 "gameglobals.cpp"
 var $144=$2; //@line 2336 "gameglobals.cpp"
 var $145=(($144+224)|0); //@line 2336 "gameglobals.cpp"
 var $146=$145; //@line 2336 "gameglobals.cpp"
 var $147=(($146+12)|0); //@line 2336 "gameglobals.cpp"
 HEAP32[(($147)>>2)]=20; //@line 2336 "gameglobals.cpp"
 var $148=$wSheepScore; //@line 2339 "gameglobals.cpp"
 var $149=$2; //@line 2339 "gameglobals.cpp"
 var $150=(($149+224)|0); //@line 2339 "gameglobals.cpp"
 var $151=$150; //@line 2339 "gameglobals.cpp"
 var $152=(($151+16)|0); //@line 2339 "gameglobals.cpp"
 HEAP32[(($152)>>2)]=$148; //@line 2339 "gameglobals.cpp"
 var $153=$wSheepScoreWithHead; //@line 2341 "gameglobals.cpp"
 var $154=$2; //@line 2341 "gameglobals.cpp"
 var $155=(($154+224)|0); //@line 2341 "gameglobals.cpp"
 var $156=$155; //@line 2341 "gameglobals.cpp"
 var $157=(($156+20)|0); //@line 2341 "gameglobals.cpp"
 HEAP32[(($157)>>2)]=$153; //@line 2341 "gameglobals.cpp"
 var $158=$2; //@line 2345 "gameglobals.cpp"
 var $159=(($158+224)|0); //@line 2345 "gameglobals.cpp"
 var $160=$159; //@line 2345 "gameglobals.cpp"
 var $161=(($160+24)|0); //@line 2345 "gameglobals.cpp"
 HEAPF64[(($161)>>3)]=0; //@line 2345 "gameglobals.cpp"
 label=12;break; //@line 2346 "gameglobals.cpp"
 case 9: 
 var $163=$2; //@line 2349 "gameglobals.cpp"
 var $164=(($163+224)|0); //@line 2349 "gameglobals.cpp"
 var $165=$164; //@line 2349 "gameglobals.cpp"
 var $166=(($165)|0); //@line 2349 "gameglobals.cpp"
 HEAP8[($166)]=0; //@line 2349 "gameglobals.cpp"
 var $167=$2; //@line 2350 "gameglobals.cpp"
 var $168=(($167+224)|0); //@line 2350 "gameglobals.cpp"
 var $169=$168; //@line 2350 "gameglobals.cpp"
 var $170=(($169+1)|0); //@line 2350 "gameglobals.cpp"
 HEAP8[($170)]=0; //@line 2350 "gameglobals.cpp"
 var $171=$2; //@line 2353 "gameglobals.cpp"
 var $172=(($171+224)|0); //@line 2353 "gameglobals.cpp"
 var $173=$172; //@line 2353 "gameglobals.cpp"
 var $174=(($173+4)|0); //@line 2353 "gameglobals.cpp"
 HEAP32[(($174)>>2)]=40; //@line 2353 "gameglobals.cpp"
 var $175=$2; //@line 2354 "gameglobals.cpp"
 var $176=(($175+224)|0); //@line 2354 "gameglobals.cpp"
 var $177=$176; //@line 2354 "gameglobals.cpp"
 var $178=(($177+8)|0); //@line 2354 "gameglobals.cpp"
 HEAP32[(($178)>>2)]=5; //@line 2354 "gameglobals.cpp"
 var $179=$2; //@line 2355 "gameglobals.cpp"
 var $180=(($179+224)|0); //@line 2355 "gameglobals.cpp"
 var $181=$180; //@line 2355 "gameglobals.cpp"
 var $182=(($181+12)|0); //@line 2355 "gameglobals.cpp"
 HEAP32[(($182)>>2)]=20; //@line 2355 "gameglobals.cpp"
 var $183=$bSheepScore; //@line 2358 "gameglobals.cpp"
 var $184=$2; //@line 2358 "gameglobals.cpp"
 var $185=(($184+224)|0); //@line 2358 "gameglobals.cpp"
 var $186=$185; //@line 2358 "gameglobals.cpp"
 var $187=(($186+16)|0); //@line 2358 "gameglobals.cpp"
 HEAP32[(($187)>>2)]=$183; //@line 2358 "gameglobals.cpp"
 var $188=$bSheepScoreWithHead; //@line 2360 "gameglobals.cpp"
 var $189=$2; //@line 2360 "gameglobals.cpp"
 var $190=(($189+224)|0); //@line 2360 "gameglobals.cpp"
 var $191=$190; //@line 2360 "gameglobals.cpp"
 var $192=(($191+20)|0); //@line 2360 "gameglobals.cpp"
 HEAP32[(($192)>>2)]=$188; //@line 2360 "gameglobals.cpp"
 var $193=$2; //@line 2364 "gameglobals.cpp"
 var $194=(($193+224)|0); //@line 2364 "gameglobals.cpp"
 var $195=$194; //@line 2364 "gameglobals.cpp"
 var $196=(($195+24)|0); //@line 2364 "gameglobals.cpp"
 HEAPF64[(($196)>>3)]=0; //@line 2364 "gameglobals.cpp"
 label=12;break; //@line 2365 "gameglobals.cpp"
 case 10: 
 var $198=$2; //@line 2368 "gameglobals.cpp"
 var $199=(($198+224)|0); //@line 2368 "gameglobals.cpp"
 var $200=$199; //@line 2368 "gameglobals.cpp"
 var $201=(($200)|0); //@line 2368 "gameglobals.cpp"
 HEAP8[($201)]=0; //@line 2368 "gameglobals.cpp"
 var $202=$headScore; //@line 2371 "gameglobals.cpp"
 var $203=$2; //@line 2371 "gameglobals.cpp"
 var $204=(($203+224)|0); //@line 2371 "gameglobals.cpp"
 var $205=$204; //@line 2371 "gameglobals.cpp"
 var $206=(($205+4)|0); //@line 2371 "gameglobals.cpp"
 HEAP32[(($206)>>2)]=$202; //@line 2371 "gameglobals.cpp"
 var $207=$2; //@line 2374 "gameglobals.cpp"
 var $208=(($207+224)|0); //@line 2374 "gameglobals.cpp"
 var $209=$208; //@line 2374 "gameglobals.cpp"
 var $210=(($209+8)|0); //@line 2374 "gameglobals.cpp"
 HEAPF64[(($210)>>3)]=0; //@line 2374 "gameglobals.cpp"
 label=12;break; //@line 2376 "gameglobals.cpp"
 case 11: 
 var $212=$2; //@line 2381 "gameglobals.cpp"
 var $213=(($212+224)|0); //@line 2381 "gameglobals.cpp"
 var $214=$213; //@line 2381 "gameglobals.cpp"
 var $215=(($214)|0); //@line 2381 "gameglobals.cpp"
 var $216=(($215+4)|0); //@line 2381 "gameglobals.cpp"
 HEAP8[($216)]=0; //@line 2381 "gameglobals.cpp"
 var $217=$2; //@line 2383 "gameglobals.cpp"
 var $218=(($217+224)|0); //@line 2383 "gameglobals.cpp"
 var $219=$218; //@line 2383 "gameglobals.cpp"
 var $220=(($219)|0); //@line 2383 "gameglobals.cpp"
 var $221=(($220)|0); //@line 2383 "gameglobals.cpp"
 HEAP32[(($221)>>2)]=0; //@line 2383 "gameglobals.cpp"
 label=12;break; //@line 2385 "gameglobals.cpp"
 case 12: 
 $1=1; //@line 2388 "gameglobals.cpp"
 label=13;break; //@line 2388 "gameglobals.cpp"
 case 13: 
 var $224=$1; //@line 2389 "gameglobals.cpp"
 STACKTOP=sp;return $224; //@line 2389 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z15setupPlayerUnitR16playerUnitStructi($unit,$unitType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$unit;
 $3=$unitType;
 var $4=$2; //@line 2398 "gameglobals.cpp"
 var $5=$4; //@line 2398 "gameglobals.cpp"
 var $6=$3; //@line 2398 "gameglobals.cpp"
 var $7=__Z16setupGenericUnitR17genericUnitStructi($5,$6); //@line 2398 "gameglobals.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 2398 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2398 "gameglobals.cpp"
 label=4;break; //@line 2398 "gameglobals.cpp"
 case 3: 
 var $10=$3; //@line 2402 "gameglobals.cpp"
 var $11=((448+((($10)*(24))&-1))|0); //@line 2402 "gameglobals.cpp"
 var $12=(($11+8)|0); //@line 2402 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2402 "gameglobals.cpp"
 var $14=$2; //@line 2402 "gameglobals.cpp"
 var $15=$14; //@line 2402 "gameglobals.cpp"
 var $16=(($15+88)|0); //@line 2402 "gameglobals.cpp"
 HEAP32[(($16)>>2)]=$13; //@line 2402 "gameglobals.cpp"
 var $17=$2; //@line 2405 "gameglobals.cpp"
 var $18=$17; //@line 2405 "gameglobals.cpp"
 var $19=(($18+28)|0); //@line 2405 "gameglobals.cpp"
 HEAP8[($19)]=2; //@line 2405 "gameglobals.cpp"
 var $20=$2; //@line 2408 "gameglobals.cpp"
 var $21=(($20+176)|0); //@line 2408 "gameglobals.cpp"
 HEAP8[($21)]=1; //@line 2408 "gameglobals.cpp"
 var $22=$2; //@line 2416 "gameglobals.cpp"
 var $23=$22; //@line 2416 "gameglobals.cpp"
 var $24=(($23+96)|0); //@line 2416 "gameglobals.cpp"
 HEAP8[($24)]=1; //@line 2416 "gameglobals.cpp"
 var $25=$2; //@line 2417 "gameglobals.cpp"
 var $26=$25; //@line 2417 "gameglobals.cpp"
 var $27=(($26+104)|0); //@line 2417 "gameglobals.cpp"
 HEAPF64[(($27)>>3)]=60; //@line 2417 "gameglobals.cpp"
 var $28=$2; //@line 2417 "gameglobals.cpp"
 var $29=$28; //@line 2417 "gameglobals.cpp"
 var $30=(($29+112)|0); //@line 2417 "gameglobals.cpp"
 HEAPF64[(($30)>>3)]=210; //@line 2417 "gameglobals.cpp"
 var $31=$2; //@line 2420 "gameglobals.cpp"
 var $32=$31; //@line 2420 "gameglobals.cpp"
 var $33=(($32+104)|0); //@line 2420 "gameglobals.cpp"
 var $34=HEAPF64[(($33)>>3)]; //@line 2420 "gameglobals.cpp"
 var $35=$2; //@line 2420 "gameglobals.cpp"
 var $36=$35; //@line 2420 "gameglobals.cpp"
 var $37=(($36+8)|0); //@line 2420 "gameglobals.cpp"
 HEAPF64[(($37)>>3)]=$34; //@line 2420 "gameglobals.cpp"
 var $38=$2; //@line 2421 "gameglobals.cpp"
 var $39=$38; //@line 2421 "gameglobals.cpp"
 var $40=(($39+112)|0); //@line 2421 "gameglobals.cpp"
 var $41=HEAPF64[(($40)>>3)]; //@line 2421 "gameglobals.cpp"
 var $42=$2; //@line 2421 "gameglobals.cpp"
 var $43=$42; //@line 2421 "gameglobals.cpp"
 var $44=(($43+16)|0); //@line 2421 "gameglobals.cpp"
 HEAPF64[(($44)>>3)]=$41; //@line 2421 "gameglobals.cpp"
 var $45=HEAP32[((2136)>>2)]; //@line 2424 "gameglobals.cpp"
 var $46=($45|0); //@line 2424 "gameglobals.cpp"
 var $47=((0.6))*($46); //@line 2424 "gameglobals.cpp"
 var $48=(($47)&-1); //@line 2424 "gameglobals.cpp"
 var $49=$2; //@line 2424 "gameglobals.cpp"
 var $50=(($49+204)|0); //@line 2424 "gameglobals.cpp"
 HEAP32[(($50)>>2)]=$48; //@line 2424 "gameglobals.cpp"
 var $51=$2; //@line 2425 "gameglobals.cpp"
 var $52=$51; //@line 2425 "gameglobals.cpp"
 var $53=(($52+120)|0); //@line 2425 "gameglobals.cpp"
 HEAPF64[(($53)>>3)]=10; //@line 2425 "gameglobals.cpp"
 var $54=$2; //@line 2426 "gameglobals.cpp"
 var $55=(($54+216)|0); //@line 2426 "gameglobals.cpp"
 HEAPF64[(($55)>>3)]=20; //@line 2426 "gameglobals.cpp"
 var $56=$2; //@line 2427 "gameglobals.cpp"
 var $57=(($56+224)|0); //@line 2427 "gameglobals.cpp"
 HEAP8[($57)]=1; //@line 2427 "gameglobals.cpp"
 var $58=$2; //@line 2428 "gameglobals.cpp"
 var $59=(($58+200)|0); //@line 2428 "gameglobals.cpp"
 HEAP8[($59)]=0; //@line 2428 "gameglobals.cpp"
 var $60=HEAP32[((2136)>>2)]; //@line 2432 "gameglobals.cpp"
 var $61=($60|0); //@line 2432 "gameglobals.cpp"
 var $62=((0.8))*($61); //@line 2432 "gameglobals.cpp"
 var $63=(($62)&-1); //@line 2432 "gameglobals.cpp"
 var $64=$2; //@line 2432 "gameglobals.cpp"
 var $65=(($64+208)|0); //@line 2432 "gameglobals.cpp"
 HEAP32[(($65)>>2)]=$63; //@line 2432 "gameglobals.cpp"
 var $66=$2; //@line 2435 "gameglobals.cpp"
 var $67=(($66+225)|0); //@line 2435 "gameglobals.cpp"
 HEAP8[($67)]=1; //@line 2435 "gameglobals.cpp"
 var $68=$2; //@line 2436 "gameglobals.cpp"
 var $69=(($68+240)|0); //@line 2436 "gameglobals.cpp"
 HEAPF64[(($69)>>3)]=100; //@line 2436 "gameglobals.cpp"
 var $70=$2; //@line 2437 "gameglobals.cpp"
 var $71=(($70+228)|0); //@line 2437 "gameglobals.cpp"
 HEAP32[(($71)>>2)]=0; //@line 2437 "gameglobals.cpp"
 var $72=$2; //@line 2438 "gameglobals.cpp"
 var $73=(($72+232)|0); //@line 2438 "gameglobals.cpp"
 HEAP32[(($73)>>2)]=0; //@line 2438 "gameglobals.cpp"
 var $74=$2; //@line 2439 "gameglobals.cpp"
 var $75=(($74+248)|0); //@line 2439 "gameglobals.cpp"
 HEAPF64[(($75)>>3)]=0; //@line 2439 "gameglobals.cpp"
 $1=1; //@line 2441 "gameglobals.cpp"
 label=4;break; //@line 2441 "gameglobals.cpp"
 case 4: 
 var $77=$1; //@line 2442 "gameglobals.cpp"
 STACKTOP=sp;return $77; //@line 2442 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z15setupBulletUnitR16bulletUnitStructi($unit,$unitType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$unit;
 $3=$unitType;
 var $4=$2; //@line 2451 "gameglobals.cpp"
 var $5=$4; //@line 2451 "gameglobals.cpp"
 var $6=$3; //@line 2451 "gameglobals.cpp"
 var $7=__Z16setupGenericUnitR17genericUnitStructi($5,$6); //@line 2451 "gameglobals.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 2451 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2451 "gameglobals.cpp"
 label=6;break; //@line 2451 "gameglobals.cpp"
 case 3: 
 var $10=$3; //@line 2454 "gameglobals.cpp"
 var $11=((2192+((($10)*(24))&-1))|0); //@line 2454 "gameglobals.cpp"
 var $12=(($11+8)|0); //@line 2454 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2454 "gameglobals.cpp"
 var $14=$2; //@line 2454 "gameglobals.cpp"
 var $15=$14; //@line 2454 "gameglobals.cpp"
 var $16=(($15+88)|0); //@line 2454 "gameglobals.cpp"
 HEAP32[(($16)>>2)]=$13; //@line 2454 "gameglobals.cpp"
 var $17=$2; //@line 2457 "gameglobals.cpp"
 var $18=$17; //@line 2457 "gameglobals.cpp"
 var $19=(($18+28)|0); //@line 2457 "gameglobals.cpp"
 HEAP8[($19)]=4; //@line 2457 "gameglobals.cpp"
 var $20=$2; //@line 2461 "gameglobals.cpp"
 var $21=(($20+176)|0); //@line 2461 "gameglobals.cpp"
 HEAP8[($21)]=0; //@line 2461 "gameglobals.cpp"
 var $22=$2; //@line 2462 "gameglobals.cpp"
 var $23=(($22+177)|0); //@line 2462 "gameglobals.cpp"
 HEAP8[($23)]=0; //@line 2462 "gameglobals.cpp"
 var $24=$2; //@line 2463 "gameglobals.cpp"
 var $25=(($24+178)|0); //@line 2463 "gameglobals.cpp"
 HEAP8[($25)]=0; //@line 2463 "gameglobals.cpp"
 var $26=$2; //@line 2464 "gameglobals.cpp"
 var $27=(($26+179)|0); //@line 2464 "gameglobals.cpp"
 HEAP8[($27)]=0; //@line 2464 "gameglobals.cpp"
 var $28=$2; //@line 2467 "gameglobals.cpp"
 var $29=$28; //@line 2467 "gameglobals.cpp"
 var $30=(($29+120)|0); //@line 2467 "gameglobals.cpp"
 HEAPF64[(($30)>>3)]=10; //@line 2467 "gameglobals.cpp"
 var $31=$2; //@line 2469 "gameglobals.cpp"
 var $32=(($31+180)|0); //@line 2469 "gameglobals.cpp"
 HEAP32[(($32)>>2)]=0; //@line 2469 "gameglobals.cpp"
 var $33=$2; //@line 2472 "gameglobals.cpp"
 var $34=(($33+196)|0); //@line 2472 "gameglobals.cpp"
 HEAP32[(($34)>>2)]=0; //@line 2472 "gameglobals.cpp"
 var $35=$2; //@line 2473 "gameglobals.cpp"
 var $36=(($35+200)|0); //@line 2473 "gameglobals.cpp"
 HEAP8[($36)]=0; //@line 2473 "gameglobals.cpp"
 var $37=$2; //@line 2476 "gameglobals.cpp"
 var $38=(($37+184)|0); //@line 2476 "gameglobals.cpp"
 var $39=(($38+8)|0); //@line 2476 "gameglobals.cpp"
 HEAP32[(($39)>>2)]=0; //@line 2476 "gameglobals.cpp"
 var $40=$2; //@line 2477 "gameglobals.cpp"
 var $41=(($40+184)|0); //@line 2477 "gameglobals.cpp"
 var $42=(($41+4)|0); //@line 2477 "gameglobals.cpp"
 HEAP8[($42)]=0; //@line 2477 "gameglobals.cpp"
 var $43=$2; //@line 2478 "gameglobals.cpp"
 var $44=(($43+184)|0); //@line 2478 "gameglobals.cpp"
 var $45=(($44)|0); //@line 2478 "gameglobals.cpp"
 HEAP32[(($45)>>2)]=0; //@line 2478 "gameglobals.cpp"
 var $46=$3; //@line 2481 "gameglobals.cpp"
 if(($46|0)==3){ label=4;break;}else{label=5;break;}
 case 4: 
 label=5;break; //@line 2483 "gameglobals.cpp"
 case 5: 
 $1=1; //@line 2486 "gameglobals.cpp"
 label=6;break; //@line 2486 "gameglobals.cpp"
 case 6: 
 var $50=$1; //@line 2487 "gameglobals.cpp"
 STACKTOP=sp;return $50; //@line 2487 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z16setupWaveGenUnitR17waveGenUnitStructi($unit,$unitType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$unit;
 $3=$unitType;
 var $4=$2; //@line 2497 "gameglobals.cpp"
 var $5=$4; //@line 2497 "gameglobals.cpp"
 var $6=$3; //@line 2497 "gameglobals.cpp"
 var $7=__Z16setupGenericUnitR17genericUnitStructi($5,$6); //@line 2497 "gameglobals.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 2497 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2497 "gameglobals.cpp"
 label=4;break; //@line 2497 "gameglobals.cpp"
 case 3: 
 var $10=$3; //@line 2500 "gameglobals.cpp"
 var $11=((8+((($10)*(24))&-1))|0); //@line 2500 "gameglobals.cpp"
 var $12=(($11+8)|0); //@line 2500 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2500 "gameglobals.cpp"
 var $14=$2; //@line 2500 "gameglobals.cpp"
 var $15=$14; //@line 2500 "gameglobals.cpp"
 var $16=(($15+88)|0); //@line 2500 "gameglobals.cpp"
 HEAP32[(($16)>>2)]=$13; //@line 2500 "gameglobals.cpp"
 var $17=$2; //@line 2503 "gameglobals.cpp"
 var $18=$17; //@line 2503 "gameglobals.cpp"
 var $19=(($18+28)|0); //@line 2503 "gameglobals.cpp"
 HEAP8[($19)]=6; //@line 2503 "gameglobals.cpp"
 var $20=$2; //@line 2507 "gameglobals.cpp"
 var $21=(($20+176)|0); //@line 2507 "gameglobals.cpp"
 HEAP8[($21)]=0; //@line 2507 "gameglobals.cpp"
 var $22=$2; //@line 2512 "gameglobals.cpp"
 var $23=(($22+184)|0); //@line 2512 "gameglobals.cpp"
 HEAPF64[(($23)>>3)]=1; //@line 2512 "gameglobals.cpp"
 var $24=HEAP32[((2136)>>2)]; //@line 2513 "gameglobals.cpp"
 var $25=($24|0); //@line 2513 "gameglobals.cpp"
 var $26=(1)/($25); //@line 2513 "gameglobals.cpp"
 var $27=$2; //@line 2513 "gameglobals.cpp"
 var $28=(($27+192)|0); //@line 2513 "gameglobals.cpp"
 HEAPF64[(($28)>>3)]=$26; //@line 2513 "gameglobals.cpp"
 var $29=HEAPF64[((19560)>>3)]; //@line 2514 "gameglobals.cpp"
 var $30=HEAP32[((19576)>>2)]; //@line 2514 "gameglobals.cpp"
 var $31=($30>>>0); //@line 2514 "gameglobals.cpp"
 var $32=($29)+($31); //@line 2514 "gameglobals.cpp"
 var $33=$2; //@line 2514 "gameglobals.cpp"
 var $34=(($33+200)|0); //@line 2514 "gameglobals.cpp"
 HEAPF64[(($34)>>3)]=$32; //@line 2514 "gameglobals.cpp"
 $1=1; //@line 2519 "gameglobals.cpp"
 label=4;break; //@line 2519 "gameglobals.cpp"
 case 4: 
 var $36=$1; //@line 2520 "gameglobals.cpp"
 STACKTOP=sp;return $36; //@line 2520 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23getFrameListIndexByNamePc($frameListName){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $flist;
 $2=$frameListName;
 $flist=1760; //@line 2534 "gameglobals.cpp"
 label=2;break; //@line 2537 "gameglobals.cpp"
 case 2: 
 var $4=$flist; //@line 2537 "gameglobals.cpp"
 var $5=(($4)|0); //@line 2537 "gameglobals.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 2537 "gameglobals.cpp"
 var $7=($6|0)==0; //@line 2537 "gameglobals.cpp"
 if($7){label=3;break;}else{var $14=0;label=4;break;} //@line 2537 "gameglobals.cpp"
 case 3: 
 var $9=$flist; //@line 2537 "gameglobals.cpp"
 var $10=(($9+4)|0); //@line 2537 "gameglobals.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 2537 "gameglobals.cpp"
 var $12=($11|0)==0; //@line 2537 "gameglobals.cpp"
 var $14=$12;label=4;break;
 case 4: 
 var $14;
 var $15=$14^1;
 if($15){label=5;break;}else{label=9;break;}
 case 5: 
 var $17=$flist; //@line 2538 "gameglobals.cpp"
 var $18=(($17+4)|0); //@line 2538 "gameglobals.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 2538 "gameglobals.cpp"
 var $20=$2; //@line 2538 "gameglobals.cpp"
 var $21=_strcmp($19,$20); //@line 2538 "gameglobals.cpp"
 var $22=($21|0)==0; //@line 2538 "gameglobals.cpp"
 if($22){label=6;break;}else{label=7;break;} //@line 2538 "gameglobals.cpp"
 case 6: 
 var $24=$flist; //@line 2539 "gameglobals.cpp"
 var $25=$24; //@line 2539 "gameglobals.cpp"
 var $26=((($25)-(1760))|0); //@line 2539 "gameglobals.cpp"
 var $27=(((($26|0))/(12))&-1); //@line 2539 "gameglobals.cpp"
 $1=$27; //@line 2539 "gameglobals.cpp"
 label=10;break; //@line 2539 "gameglobals.cpp"
 case 7: 
 label=8;break; //@line 2540 "gameglobals.cpp"
 case 8: 
 var $30=$flist; //@line 2537 "gameglobals.cpp"
 var $31=(($30+12)|0); //@line 2537 "gameglobals.cpp"
 $flist=$31; //@line 2537 "gameglobals.cpp"
 label=2;break; //@line 2537 "gameglobals.cpp"
 case 9: 
 $1=-1; //@line 2543 "gameglobals.cpp"
 label=10;break; //@line 2543 "gameglobals.cpp"
 case 10: 
 var $34=$1; //@line 2544 "gameglobals.cpp"
 STACKTOP=sp;return $34; //@line 2544 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14getFramesCountP15frameDataStruct($framesList){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $thisFrame;
 $1=$framesList;
 var $2=$1; //@line 2581 "gameglobals.cpp"
 $thisFrame=$2; //@line 2581 "gameglobals.cpp"
 label=2;break; //@line 2581 "gameglobals.cpp"
 case 2: 
 var $4=$thisFrame; //@line 2581 "gameglobals.cpp"
 var $5=(($4+4)|0); //@line 2581 "gameglobals.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 2581 "gameglobals.cpp"
 var $7=($6|0)!=0; //@line 2581 "gameglobals.cpp"
 if($7){label=3;break;}else{label=5;break;} //@line 2581 "gameglobals.cpp"
 case 3: 
 label=4;break; //@line 2581 "gameglobals.cpp"
 case 4: 
 var $10=$thisFrame; //@line 2581 "gameglobals.cpp"
 var $11=(($10+80)|0); //@line 2581 "gameglobals.cpp"
 $thisFrame=$11; //@line 2581 "gameglobals.cpp"
 label=2;break; //@line 2581 "gameglobals.cpp"
 case 5: 
 var $13=$thisFrame; //@line 2583 "gameglobals.cpp"
 var $14=$1; //@line 2583 "gameglobals.cpp"
 var $15=$13; //@line 2583 "gameglobals.cpp"
 var $16=$14; //@line 2583 "gameglobals.cpp"
 var $17=((($15)-($16))|0); //@line 2583 "gameglobals.cpp"
 var $18=(((($17|0))/(80))&-1); //@line 2583 "gameglobals.cpp"
 STACKTOP=sp;return $18; //@line 2583 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z19getFrameIndexByNamePcS_($frameListName,$frameName){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $list;
 var $frame;
 $2=$frameListName;
 $3=$frameName;
 var $4=$2; //@line 2595 "gameglobals.cpp"
 var $5=__Z22getFrameListNodeByNamePc($4); //@line 2595 "gameglobals.cpp"
 $list=$5; //@line 2595 "gameglobals.cpp"
 var $6=$list; //@line 2596 "gameglobals.cpp"
 var $7=($6|0)==0; //@line 2596 "gameglobals.cpp"
 if($7){label=2;break;}else{label=3;break;} //@line 2596 "gameglobals.cpp"
 case 2: 
 $1=-1; //@line 2596 "gameglobals.cpp"
 label=14;break; //@line 2596 "gameglobals.cpp"
 case 3: 
 var $10=$list; //@line 2600 "gameglobals.cpp"
 var $11=(($10)|0); //@line 2600 "gameglobals.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 2600 "gameglobals.cpp"
 $frame=$12; //@line 2600 "gameglobals.cpp"
 label=4;break; //@line 2600 "gameglobals.cpp"
 case 4: 
 var $14=$frame; //@line 2600 "gameglobals.cpp"
 var $15=(($14+4)|0); //@line 2600 "gameglobals.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 2600 "gameglobals.cpp"
 var $17=($16|0)!=0; //@line 2600 "gameglobals.cpp"
 if($17){label=5;break;}else{var $33=0;label=8;break;} //@line 2600 "gameglobals.cpp"
 case 5: 
 var $19=$frame; //@line 2600 "gameglobals.cpp"
 var $20=(($19)|0); //@line 2600 "gameglobals.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 2600 "gameglobals.cpp"
 var $22=($21|0)==0; //@line 2600 "gameglobals.cpp"
 if($22){var $31=1;label=7;break;}else{label=6;break;} //@line 2600 "gameglobals.cpp"
 case 6: 
 var $24=$frame; //@line 2602 "gameglobals.cpp"
 var $25=(($24)|0); //@line 2602 "gameglobals.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 2602 "gameglobals.cpp"
 var $27=$3; //@line 2602 "gameglobals.cpp"
 var $28=_strcmp($26,$27); //@line 2602 "gameglobals.cpp"
 var $29=($28|0)!=0; //@line 2602 "gameglobals.cpp"
 var $31=$29;label=7;break; //@line 2602 "gameglobals.cpp"
 case 7: 
 var $31;
 var $33=$31;label=8;break;
 case 8: 
 var $33;
 if($33){label=9;break;}else{label=11;break;}
 case 9: 
 label=10;break;
 case 10: 
 var $36=$frame; //@line 2603 "gameglobals.cpp"
 var $37=(($36+80)|0); //@line 2603 "gameglobals.cpp"
 $frame=$37; //@line 2603 "gameglobals.cpp"
 label=4;break; //@line 2603 "gameglobals.cpp"
 case 11: 
 var $39=$frame; //@line 2606 "gameglobals.cpp"
 var $40=(($39+4)|0); //@line 2606 "gameglobals.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 2606 "gameglobals.cpp"
 var $42=($41|0)==0; //@line 2606 "gameglobals.cpp"
 if($42){label=12;break;}else{label=13;break;} //@line 2606 "gameglobals.cpp"
 case 12: 
 $1=-1; //@line 2606 "gameglobals.cpp"
 label=14;break; //@line 2606 "gameglobals.cpp"
 case 13: 
 var $45=$frame; //@line 2609 "gameglobals.cpp"
 var $46=$list; //@line 2609 "gameglobals.cpp"
 var $47=(($46)|0); //@line 2609 "gameglobals.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 2609 "gameglobals.cpp"
 var $49=$45; //@line 2609 "gameglobals.cpp"
 var $50=$48; //@line 2609 "gameglobals.cpp"
 var $51=((($49)-($50))|0); //@line 2609 "gameglobals.cpp"
 var $52=(((($51|0))/(80))&-1); //@line 2609 "gameglobals.cpp"
 $1=$52; //@line 2609 "gameglobals.cpp"
 label=14;break; //@line 2609 "gameglobals.cpp"
 case 14: 
 var $54=$1; //@line 2610 "gameglobals.cpp"
 STACKTOP=sp;return $54; //@line 2610 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z27getFrameIndexByNameInSheepsbPcS_($isSheepWhite,$frameListName,$frameNamePart){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $fnStringLen;
 var $completeFrameName=sp;
 var $stringToAdd;
 var $5=($isSheepWhite&1);
 $2=$5;
 $3=$frameListName;
 $4=$frameNamePart;
 $fnStringLen=50; //@line 2659 "gameglobals.cpp"
 var $6=$2; //@line 2662 "gameglobals.cpp"
 var $7=(($6)&1); //@line 2662 "gameglobals.cpp"
 if($7){label=2;break;}else{label=3;break;} //@line 2662 "gameglobals.cpp"
 case 2: 
 var $11=3000;label=4;break; //@line 2662 "gameglobals.cpp"
 case 3: 
 var $11=2968;label=4;break; //@line 2662 "gameglobals.cpp"
 case 4: 
 var $11; //@line 2662 "gameglobals.cpp"
 var $12=(($11)|0); //@line 2662 "gameglobals.cpp"
 $stringToAdd=$12; //@line 2662 "gameglobals.cpp"
 var $13=$4; //@line 2666 "gameglobals.cpp"
 var $14=_strlen($13); //@line 2666 "gameglobals.cpp"
 var $15=$stringToAdd; //@line 2666 "gameglobals.cpp"
 var $16=_strlen($15); //@line 2666 "gameglobals.cpp"
 var $17=((($14)+($16))|0); //@line 2666 "gameglobals.cpp"
 var $18=((($17)+(1))|0); //@line 2666 "gameglobals.cpp"
 var $19=($18>>>0)>50; //@line 2666 "gameglobals.cpp"
 if($19){label=5;break;}else{label=6;break;} //@line 2666 "gameglobals.cpp"
 case 5: 
 $1=-1; //@line 2667 "gameglobals.cpp"
 label=7;break; //@line 2667 "gameglobals.cpp"
 case 6: 
 var $22=(($completeFrameName)|0); //@line 2670 "gameglobals.cpp"
 var $23=$stringToAdd; //@line 2670 "gameglobals.cpp"
 var $24=$4; //@line 2670 "gameglobals.cpp"
 var $25=_sprintf($22,2904,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$23,HEAP32[(((tempVarArgs)+(8))>>2)]=$24,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2670 "gameglobals.cpp"
 var $26=$3; //@line 2674 "gameglobals.cpp"
 var $27=(($completeFrameName)|0); //@line 2674 "gameglobals.cpp"
 var $28=__Z19getFrameIndexByNamePcS_($26,$27); //@line 2674 "gameglobals.cpp"
 $1=$28; //@line 2674 "gameglobals.cpp"
 label=7;break; //@line 2674 "gameglobals.cpp"
 case 7: 
 var $30=$1; //@line 2675 "gameglobals.cpp"
 STACKTOP=sp;return $30; //@line 2675 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z34getFrameIndexAndListByNameInSheepsbPcPP19frameListDataStruct($isSheepWhite,$frameNamePart,$foundList){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $list;
 var $idx;
 var $5=($isSheepWhite&1);
 $2=$5;
 $3=$frameNamePart;
 $4=$foundList;
 $list=1760; //@line 2691 "gameglobals.cpp"
 label=2;break; //@line 2694 "gameglobals.cpp"
 case 2: 
 var $7=$list; //@line 2694 "gameglobals.cpp"
 var $8=(($7)|0); //@line 2694 "gameglobals.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 2694 "gameglobals.cpp"
 var $10=($9|0)!=0; //@line 2694 "gameglobals.cpp"
 if($10){label=3;break;}else{label=9;break;} //@line 2694 "gameglobals.cpp"
 case 3: 
 var $12=$2; //@line 2695 "gameglobals.cpp"
 var $13=(($12)&1); //@line 2695 "gameglobals.cpp"
 var $14=$list; //@line 2695 "gameglobals.cpp"
 var $15=(($14+4)|0); //@line 2695 "gameglobals.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 2695 "gameglobals.cpp"
 var $17=$3; //@line 2695 "gameglobals.cpp"
 var $18=__Z27getFrameIndexByNameInSheepsbPcS_($13,$16,$17); //@line 2695 "gameglobals.cpp"
 $idx=$18; //@line 2695 "gameglobals.cpp"
 var $19=$idx; //@line 2697 "gameglobals.cpp"
 var $20=($19|0)!=-1; //@line 2697 "gameglobals.cpp"
 if($20){label=4;break;}else{label=7;break;} //@line 2697 "gameglobals.cpp"
 case 4: 
 var $22=$4; //@line 2699 "gameglobals.cpp"
 var $23=($22|0)!=0; //@line 2699 "gameglobals.cpp"
 if($23){label=5;break;}else{label=6;break;} //@line 2699 "gameglobals.cpp"
 case 5: 
 var $25=$list; //@line 2699 "gameglobals.cpp"
 var $26=$4; //@line 2699 "gameglobals.cpp"
 HEAP32[(($26)>>2)]=$25; //@line 2699 "gameglobals.cpp"
 label=6;break; //@line 2699 "gameglobals.cpp"
 case 6: 
 var $28=$idx; //@line 2700 "gameglobals.cpp"
 $1=$28; //@line 2700 "gameglobals.cpp"
 label=10;break; //@line 2700 "gameglobals.cpp"
 case 7: 
 label=8;break; //@line 2702 "gameglobals.cpp"
 case 8: 
 var $31=$list; //@line 2694 "gameglobals.cpp"
 var $32=(($31+12)|0); //@line 2694 "gameglobals.cpp"
 $list=$32; //@line 2694 "gameglobals.cpp"
 label=2;break; //@line 2694 "gameglobals.cpp"
 case 9: 
 var $34=$3; //@line 2705 "gameglobals.cpp"
 var $35=__ZN14conLoggerClass7logLineEPcbbbz(19416,3048,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2705 "gameglobals.cpp"
 $1=-1; //@line 2707 "gameglobals.cpp"
 label=10;break; //@line 2707 "gameglobals.cpp"
 case 10: 
 var $37=$1; //@line 2708 "gameglobals.cpp"
 STACKTOP=sp;return $37; //@line 2708 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23getResObjectIndexByNamePc($resname){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $nodeIdx;
 $2=$resname;
 var $3=$2; //@line 2726 "gameglobals.cpp"
 var $4=($3|0)==0; //@line 2726 "gameglobals.cpp"
 if($4){label=2;break;}else{label=3;break;} //@line 2726 "gameglobals.cpp"
 case 2: 
 $1=-1; //@line 2726 "gameglobals.cpp"
 label=10;break; //@line 2726 "gameglobals.cpp"
 case 3: 
 $nodeIdx=0; //@line 2729 "gameglobals.cpp"
 label=4;break; //@line 2729 "gameglobals.cpp"
 case 4: 
 var $8=$nodeIdx; //@line 2729 "gameglobals.cpp"
 var $9=HEAP32[((344)>>2)]; //@line 2729 "gameglobals.cpp"
 var $10=($8|0)<($9|0); //@line 2729 "gameglobals.cpp"
 if($10){label=5;break;}else{label=9;break;} //@line 2729 "gameglobals.cpp"
 case 5: 
 var $12=$nodeIdx; //@line 2731 "gameglobals.cpp"
 var $13=((18608+((($12)*(28))&-1))|0); //@line 2731 "gameglobals.cpp"
 var $14=(($13)|0); //@line 2731 "gameglobals.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 2731 "gameglobals.cpp"
 var $16=$15; //@line 2731 "gameglobals.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 2731 "gameglobals.cpp"
 var $18=(($17+20)|0); //@line 2731 "gameglobals.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 2731 "gameglobals.cpp"
 var $20=FUNCTION_TABLE[$19]($15); //@line 2731 "gameglobals.cpp"
 var $21=$2; //@line 2731 "gameglobals.cpp"
 var $22=_strcmp($20,$21); //@line 2731 "gameglobals.cpp"
 var $23=($22|0)==0; //@line 2731 "gameglobals.cpp"
 if($23){label=6;break;}else{label=7;break;} //@line 2731 "gameglobals.cpp"
 case 6: 
 var $25=$nodeIdx; //@line 2735 "gameglobals.cpp"
 $1=$25; //@line 2735 "gameglobals.cpp"
 label=10;break; //@line 2735 "gameglobals.cpp"
 case 7: 
 label=8;break; //@line 2737 "gameglobals.cpp"
 case 8: 
 var $28=$nodeIdx; //@line 2729 "gameglobals.cpp"
 var $29=((($28)+(1))|0); //@line 2729 "gameglobals.cpp"
 $nodeIdx=$29; //@line 2729 "gameglobals.cpp"
 label=4;break; //@line 2729 "gameglobals.cpp"
 case 9: 
 var $31=$2; //@line 2740 "gameglobals.cpp"
 var $32=__ZN14conLoggerClass7logLineEPcbbbz(19416,2848,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$31,tempVarArgs)); STACKTOP=tempVarArgs; //@line 2740 "gameglobals.cpp"
 $1=-1; //@line 2744 "gameglobals.cpp"
 label=10;break; //@line 2744 "gameglobals.cpp"
 case 10: 
 var $34=$1; //@line 2745 "gameglobals.cpp"
 STACKTOP=sp;return $34; //@line 2745 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18getResObjectByNamePc($resname){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $index;
 $2=$resname;
 var $3=$2; //@line 2755 "gameglobals.cpp"
 var $4=__Z23getResObjectIndexByNamePc($3); //@line 2755 "gameglobals.cpp"
 $index=$4; //@line 2755 "gameglobals.cpp"
 var $5=$index; //@line 2757 "gameglobals.cpp"
 var $6=($5|0)==-1; //@line 2757 "gameglobals.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 2757 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2759 "gameglobals.cpp"
 label=4;break; //@line 2759 "gameglobals.cpp"
 case 3: 
 var $9=$index; //@line 2762 "gameglobals.cpp"
 var $10=((18608+((($9)*(28))&-1))|0); //@line 2762 "gameglobals.cpp"
 var $11=(($10)|0); //@line 2762 "gameglobals.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 2762 "gameglobals.cpp"
 $1=$12; //@line 2762 "gameglobals.cpp"
 label=4;break; //@line 2762 "gameglobals.cpp"
 case 4: 
 var $14=$1; //@line 2764 "gameglobals.cpp"
 STACKTOP=sp;return $14; //@line 2764 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z24getGraphicResourceByNamePc($resname){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $object;
 $2=$resname;
 var $3=$2; //@line 2776 "gameglobals.cpp"
 var $4=__Z18getResObjectByNamePc($3); //@line 2776 "gameglobals.cpp"
 $object=$4; //@line 2776 "gameglobals.cpp"
 var $5=$object; //@line 2778 "gameglobals.cpp"
 var $6=($5|0)==0; //@line 2778 "gameglobals.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 2778 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2780 "gameglobals.cpp"
 label=6;break; //@line 2780 "gameglobals.cpp"
 case 3: 
 var $9=$object; //@line 2783 "gameglobals.cpp"
 var $10=$9; //@line 2783 "gameglobals.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 2783 "gameglobals.cpp"
 var $12=(($11+16)|0); //@line 2783 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2783 "gameglobals.cpp"
 var $14=FUNCTION_TABLE[$13]($9); //@line 2783 "gameglobals.cpp"
 var $15=($14|0)!=0; //@line 2783 "gameglobals.cpp"
 if($15){label=4;break;}else{label=5;break;} //@line 2783 "gameglobals.cpp"
 case 4: 
 $1=0; //@line 2783 "gameglobals.cpp"
 label=6;break; //@line 2783 "gameglobals.cpp"
 case 5: 
 var $18=$object; //@line 2786 "gameglobals.cpp"
 var $19=$18; //@line 2786 "gameglobals.cpp"
 $1=$19; //@line 2786 "gameglobals.cpp"
 label=6;break; //@line 2786 "gameglobals.cpp"
 case 6: 
 var $21=$1; //@line 2788 "gameglobals.cpp"
 STACKTOP=sp;return $21; //@line 2788 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z24getSurfaceByResourceNamePc($resname){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $resource;
 $2=$resname;
 var $3=$2; //@line 2845 "gameglobals.cpp"
 var $4=__Z24getGraphicResourceByNamePc($3); //@line 2845 "gameglobals.cpp"
 $resource=$4; //@line 2845 "gameglobals.cpp"
 var $5=$resource; //@line 2847 "gameglobals.cpp"
 var $6=($5|0)==0; //@line 2847 "gameglobals.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 2847 "gameglobals.cpp"
 case 2: 
 $1=0; //@line 2849 "gameglobals.cpp"
 label=4;break; //@line 2849 "gameglobals.cpp"
 case 3: 
 var $9=$resource; //@line 2852 "gameglobals.cpp"
 var $10=__ZN20graphicResourceClass16getObjectPointerEv($9); //@line 2852 "gameglobals.cpp"
 $1=$10; //@line 2852 "gameglobals.cpp"
 label=4;break; //@line 2852 "gameglobals.cpp"
 case 4: 
 var $12=$1; //@line 2854 "gameglobals.cpp"
 STACKTOP=sp;return $12; //@line 2854 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClass16getObjectPointerEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 109 "./resobjects.h"
 STACKTOP=sp;return $3; //@line 109 "./resobjects.h"
}


function __Z24isResObjectInProgramZoneP19resObjectDataStruct16programZonesEnum($resObject,$programZone){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ptrPz;
 $2=$resObject;
 $3=$programZone;
 var $4=$2; //@line 2911 "gameglobals.cpp"
 var $5=(($4+4)|0); //@line 2911 "gameglobals.cpp"
 var $6=(($5)|0); //@line 2911 "gameglobals.cpp"
 $ptrPz=$6; //@line 2911 "gameglobals.cpp"
 label=2;break; //@line 2911 "gameglobals.cpp"
 case 2: 
 var $8=$ptrPz; //@line 2911 "gameglobals.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 2911 "gameglobals.cpp"
 var $10=($9|0)!=4; //@line 2911 "gameglobals.cpp"
 if($10){label=3;break;}else{label=7;break;} //@line 2911 "gameglobals.cpp"
 case 3: 
 var $12=$ptrPz; //@line 2915 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2915 "gameglobals.cpp"
 var $14=$3; //@line 2915 "gameglobals.cpp"
 var $15=($13|0)==($14|0); //@line 2915 "gameglobals.cpp"
 if($15){label=4;break;}else{label=5;break;} //@line 2915 "gameglobals.cpp"
 case 4: 
 $1=1; //@line 2916 "gameglobals.cpp"
 label=8;break; //@line 2916 "gameglobals.cpp"
 case 5: 
 label=6;break; //@line 2918 "gameglobals.cpp"
 case 6: 
 var $19=$ptrPz; //@line 2912 "gameglobals.cpp"
 var $20=(($19+4)|0); //@line 2912 "gameglobals.cpp"
 $ptrPz=$20; //@line 2912 "gameglobals.cpp"
 label=2;break; //@line 2912 "gameglobals.cpp"
 case 7: 
 $1=0; //@line 2921 "gameglobals.cpp"
 label=8;break; //@line 2921 "gameglobals.cpp"
 case 8: 
 var $23=$1; //@line 2922 "gameglobals.cpp"
 STACKTOP=sp;return $23; //@line 2922 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23destroyAllResourcesDatav(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $nodeIdx;
 $nodeIdx=0; //@line 2931 "gameglobals.cpp"
 label=2;break; //@line 2931 "gameglobals.cpp"
 case 2: 
 var $2=$nodeIdx; //@line 2931 "gameglobals.cpp"
 var $3=HEAP32[((344)>>2)]; //@line 2931 "gameglobals.cpp"
 var $4=($2|0)<($3|0); //@line 2931 "gameglobals.cpp"
 if($4){label=3;break;}else{label=7;break;} //@line 2931 "gameglobals.cpp"
 case 3: 
 var $6=$nodeIdx; //@line 2933 "gameglobals.cpp"
 var $7=((18608+((($6)*(28))&-1))|0); //@line 2933 "gameglobals.cpp"
 var $8=(($7)|0); //@line 2933 "gameglobals.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 2933 "gameglobals.cpp"
 var $10=($9|0)==0; //@line 2933 "gameglobals.cpp"
 if($10){label=5;break;}else{label=4;break;} //@line 2933 "gameglobals.cpp"
 case 4: 
 var $12=$9; //@line 2933 "gameglobals.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 2933 "gameglobals.cpp"
 var $14=(($13+4)|0); //@line 2933 "gameglobals.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 2933 "gameglobals.cpp"
 FUNCTION_TABLE[$15]($9); //@line 2933 "gameglobals.cpp"
 label=5;break; //@line 2933 "gameglobals.cpp"
 case 5: 
 label=6;break; //@line 2934 "gameglobals.cpp"
 case 6: 
 var $18=$nodeIdx; //@line 2931 "gameglobals.cpp"
 var $19=((($18)+(1))|0); //@line 2931 "gameglobals.cpp"
 $nodeIdx=$19; //@line 2931 "gameglobals.cpp"
 label=2;break; //@line 2931 "gameglobals.cpp"
 case 7: 
 STACKTOP=sp;return 1; //@line 2937 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z17getTypeDataStructi($objectType){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$objectType;
 var $3=$2; //@line 2970 "gameglobals.cpp"
 if(($3|0)==2){ label=2;break;}else if(($3|0)==3){ label=3;break;}else if(($3|0)==4){ label=4;break;}else if(($3|0)==6){ label=5;break;}else{label=6;break;}
 case 2: 
 $1=448; //@line 2972 "gameglobals.cpp"
 label=7;break; //@line 2972 "gameglobals.cpp"
 case 3: 
 $1=1904; //@line 2975 "gameglobals.cpp"
 label=7;break; //@line 2975 "gameglobals.cpp"
 case 4: 
 $1=2192; //@line 2978 "gameglobals.cpp"
 label=7;break; //@line 2978 "gameglobals.cpp"
 case 5: 
 $1=8; //@line 2981 "gameglobals.cpp"
 label=7;break; //@line 2981 "gameglobals.cpp"
 case 6: 
 $1=0; //@line 2985 "gameglobals.cpp"
 label=7;break; //@line 2985 "gameglobals.cpp"
 case 7: 
 var $10=$1; //@line 2986 "gameglobals.cpp"
 STACKTOP=sp;return $10; //@line 2986 "gameglobals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE9resetListEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $node;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 168 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 168 "./vectorlist.h"
 var $6=(($5)&1); //@line 168 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 168 "./vectorlist.h"
 case 2: 
 $1=0; //@line 168 "./vectorlist.h"
 label=8;break; //@line 168 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 171 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 171 "./vectorlist.h"
 $node=$10; //@line 171 "./vectorlist.h"
 $i=0; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 4: 
 var $12=$i; //@line 174 "./vectorlist.h"
 var $13=(($3+4)|0); //@line 174 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 174 "./vectorlist.h"
 var $15=($12>>>0)<($14>>>0); //@line 174 "./vectorlist.h"
 if($15){label=5;break;}else{label=7;break;} //@line 174 "./vectorlist.h"
 case 5: 
 var $17=$node; //@line 176 "./vectorlist.h"
 var $18=(($17+208)|0); //@line 176 "./vectorlist.h"
 HEAP8[($18)]=1; //@line 176 "./vectorlist.h"
 var $19=$node; //@line 179 "./vectorlist.h"
 var $20=(($19+216)|0); //@line 179 "./vectorlist.h"
 $node=$20; //@line 179 "./vectorlist.h"
 label=6;break; //@line 180 "./vectorlist.h"
 case 6: 
 var $22=$i; //@line 174 "./vectorlist.h"
 var $23=((($22)+(1))|0); //@line 174 "./vectorlist.h"
 $i=$23; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 7: 
 var $25=(($3+4)|0); //@line 183 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 183 "./vectorlist.h"
 var $27=(($3+8)|0); //@line 183 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 183 "./vectorlist.h"
 var $28=(($3+12)|0); //@line 184 "./vectorlist.h"
 HEAP32[(($28)>>2)]=0; //@line 184 "./vectorlist.h"
 $1=1; //@line 186 "./vectorlist.h"
 label=8;break; //@line 186 "./vectorlist.h"
 case 8: 
 var $30=$1; //@line 187 "./vectorlist.h"
 STACKTOP=sp;return $30; //@line 187 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE9resetListEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $node;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 168 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 168 "./vectorlist.h"
 var $6=(($5)&1); //@line 168 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 168 "./vectorlist.h"
 case 2: 
 $1=0; //@line 168 "./vectorlist.h"
 label=8;break; //@line 168 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 171 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 171 "./vectorlist.h"
 $node=$10; //@line 171 "./vectorlist.h"
 $i=0; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 4: 
 var $12=$i; //@line 174 "./vectorlist.h"
 var $13=(($3+4)|0); //@line 174 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 174 "./vectorlist.h"
 var $15=($12>>>0)<($14>>>0); //@line 174 "./vectorlist.h"
 if($15){label=5;break;}else{label=7;break;} //@line 174 "./vectorlist.h"
 case 5: 
 var $17=$node; //@line 176 "./vectorlist.h"
 var $18=(($17+256)|0); //@line 176 "./vectorlist.h"
 HEAP8[($18)]=1; //@line 176 "./vectorlist.h"
 var $19=$node; //@line 179 "./vectorlist.h"
 var $20=(($19+264)|0); //@line 179 "./vectorlist.h"
 $node=$20; //@line 179 "./vectorlist.h"
 label=6;break; //@line 180 "./vectorlist.h"
 case 6: 
 var $22=$i; //@line 174 "./vectorlist.h"
 var $23=((($22)+(1))|0); //@line 174 "./vectorlist.h"
 $i=$23; //@line 174 "./vectorlist.h"
 label=4;break; //@line 174 "./vectorlist.h"
 case 7: 
 var $25=(($3+4)|0); //@line 183 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 183 "./vectorlist.h"
 var $27=(($3+8)|0); //@line 183 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 183 "./vectorlist.h"
 var $28=(($3+12)|0); //@line 184 "./vectorlist.h"
 HEAP32[(($28)>>2)]=0; //@line 184 "./vectorlist.h"
 $1=1; //@line 186 "./vectorlist.h"
 label=8;break; //@line 186 "./vectorlist.h"
 case 8: 
 var $30=$1; //@line 187 "./vectorlist.h"
 STACKTOP=sp;return $30; //@line 187 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructED2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN15vectorListClassI17waveGenUnitStructE3endEv($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function __ZN15vectorListClassI17waveGenUnitStructE3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 149 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 149 "./vectorlist.h"
 var $6=(($5)&1); //@line 149 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 149 "./vectorlist.h"
 case 2: 
 $1=0; //@line 149 "./vectorlist.h"
 label=6;break; //@line 149 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 152 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 152 "./vectorlist.h"
 var $11=($10|0)==0; //@line 152 "./vectorlist.h"
 if($11){label=5;break;}else{label=4;break;} //@line 152 "./vectorlist.h"
 case 4: 
 var $13=$10; //@line 152 "./vectorlist.h"
 __ZdaPv($13); //@line 152 "./vectorlist.h"
 label=5;break; //@line 152 "./vectorlist.h"
 case 5: 
 var $15=(($3+20)|0); //@line 153 "./vectorlist.h"
 HEAP32[(($15)>>2)]=0; //@line 153 "./vectorlist.h"
 var $16=(($3)|0); //@line 156 "./vectorlist.h"
 HEAP8[($16)]=0; //@line 156 "./vectorlist.h"
 $1=1; //@line 158 "./vectorlist.h"
 label=6;break; //@line 158 "./vectorlist.h"
 case 6: 
 var $18=$1; //@line 159 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 159 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructEC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 112 "./vectorlist.h"
 HEAP8[($3)]=0; //@line 112 "./vectorlist.h"
 var $4=(($2+20)|0); //@line 112 "./vectorlist.h"
 HEAP32[(($4)>>2)]=0; //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI16bulletUnitStructED2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN15vectorListClassI16bulletUnitStructE3endEv($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function __ZN15vectorListClassI16bulletUnitStructE3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 149 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 149 "./vectorlist.h"
 var $6=(($5)&1); //@line 149 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 149 "./vectorlist.h"
 case 2: 
 $1=0; //@line 149 "./vectorlist.h"
 label=6;break; //@line 149 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 152 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 152 "./vectorlist.h"
 var $11=($10|0)==0; //@line 152 "./vectorlist.h"
 if($11){label=5;break;}else{label=4;break;} //@line 152 "./vectorlist.h"
 case 4: 
 var $13=$10; //@line 152 "./vectorlist.h"
 __ZdaPv($13); //@line 152 "./vectorlist.h"
 label=5;break; //@line 152 "./vectorlist.h"
 case 5: 
 var $15=(($3+20)|0); //@line 153 "./vectorlist.h"
 HEAP32[(($15)>>2)]=0; //@line 153 "./vectorlist.h"
 var $16=(($3)|0); //@line 156 "./vectorlist.h"
 HEAP8[($16)]=0; //@line 156 "./vectorlist.h"
 $1=1; //@line 158 "./vectorlist.h"
 label=6;break; //@line 158 "./vectorlist.h"
 case 6: 
 var $18=$1; //@line 159 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 159 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructEC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 112 "./vectorlist.h"
 HEAP8[($3)]=0; //@line 112 "./vectorlist.h"
 var $4=(($2+20)|0); //@line 112 "./vectorlist.h"
 HEAP32[(($4)>>2)]=0; //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI15enemyUnitStructED2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN15vectorListClassI15enemyUnitStructE3endEv($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function __ZN15vectorListClassI15enemyUnitStructE3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 149 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 149 "./vectorlist.h"
 var $6=(($5)&1); //@line 149 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 149 "./vectorlist.h"
 case 2: 
 $1=0; //@line 149 "./vectorlist.h"
 label=6;break; //@line 149 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 152 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 152 "./vectorlist.h"
 var $11=($10|0)==0; //@line 152 "./vectorlist.h"
 if($11){label=5;break;}else{label=4;break;} //@line 152 "./vectorlist.h"
 case 4: 
 var $13=$10; //@line 152 "./vectorlist.h"
 __ZdaPv($13); //@line 152 "./vectorlist.h"
 label=5;break; //@line 152 "./vectorlist.h"
 case 5: 
 var $15=(($3+20)|0); //@line 153 "./vectorlist.h"
 HEAP32[(($15)>>2)]=0; //@line 153 "./vectorlist.h"
 var $16=(($3)|0); //@line 156 "./vectorlist.h"
 HEAP8[($16)]=0; //@line 156 "./vectorlist.h"
 $1=1; //@line 158 "./vectorlist.h"
 label=6;break; //@line 158 "./vectorlist.h"
 case 6: 
 var $18=$1; //@line 159 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 159 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructEC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 112 "./vectorlist.h"
 HEAP8[($3)]=0; //@line 112 "./vectorlist.h"
 var $4=(($2+20)|0); //@line 112 "./vectorlist.h"
 HEAP32[(($4)>>2)]=0; //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN15vectorListClassI16playerUnitStructED2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN15vectorListClassI16playerUnitStructE3endEv($2); //@line 113 "./vectorlist.h"
 STACKTOP=sp;return; //@line 113 "./vectorlist.h"
}


function __ZN15vectorListClassI16playerUnitStructE3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 149 "./vectorlist.h"
 var $5=HEAP8[($4)]; //@line 149 "./vectorlist.h"
 var $6=(($5)&1); //@line 149 "./vectorlist.h"
 if($6){label=3;break;}else{label=2;break;} //@line 149 "./vectorlist.h"
 case 2: 
 $1=0; //@line 149 "./vectorlist.h"
 label=6;break; //@line 149 "./vectorlist.h"
 case 3: 
 var $9=(($3+20)|0); //@line 152 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 152 "./vectorlist.h"
 var $11=($10|0)==0; //@line 152 "./vectorlist.h"
 if($11){label=5;break;}else{label=4;break;} //@line 152 "./vectorlist.h"
 case 4: 
 var $13=$10; //@line 152 "./vectorlist.h"
 __ZdaPv($13); //@line 152 "./vectorlist.h"
 label=5;break; //@line 152 "./vectorlist.h"
 case 5: 
 var $15=(($3+20)|0); //@line 153 "./vectorlist.h"
 HEAP32[(($15)>>2)]=0; //@line 153 "./vectorlist.h"
 var $16=(($3)|0); //@line 156 "./vectorlist.h"
 HEAP8[($16)]=0; //@line 156 "./vectorlist.h"
 $1=1; //@line 158 "./vectorlist.h"
 label=6;break; //@line 158 "./vectorlist.h"
 case 6: 
 var $18=$1; //@line 159 "./vectorlist.h"
 STACKTOP=sp;return $18; //@line 159 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructEC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 112 "./vectorlist.h"
 HEAP8[($3)]=0; //@line 112 "./vectorlist.h"
 var $4=(($2+20)|0); //@line 112 "./vectorlist.h"
 HEAP32[(($4)>>2)]=0; //@line 112 "./vectorlist.h"
 STACKTOP=sp;return; //@line 112 "./vectorlist.h"
}


function __ZN23bitmappedFixedFontClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 98 "./fixedfontwrap.h"
 __ZN14fixedFontClassC2Ev($3); //@line 98 "./fixedfontwrap.h"
 var $4=$2; //@line 98 "./fixedfontwrap.h"
 HEAP32[(($4)>>2)]=16536; //@line 98 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 98 "./fixedfontwrap.h"
}


function __ZN14fixedFontClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 66 "./fixedfontwrap.h"
 HEAP32[(($3)>>2)]=17112; //@line 66 "./fixedfontwrap.h"
 var $4=(($2+4)|0); //@line 66 "./fixedfontwrap.h"
 HEAP8[($4)]=0; //@line 66 "./fixedfontwrap.h"
 STACKTOP=sp;return; //@line 66 "./fixedfontwrap.h"
}


function __ZN16optionsFileClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 116 "./optionsfile.h"
 HEAP32[(($3)>>2)]=16800; //@line 116 "./optionsfile.h"
 var $4=__ZN16optionsFileClass7isReadyEv($2); //@line 116 "./optionsfile.h"
 if($4){label=2;break;}else{label=3;break;} //@line 116 "./optionsfile.h"
 case 2: 
 var $6=__ZN16optionsFileClass3endEv($2); //@line 116 "./optionsfile.h"
 label=3;break; //@line 116 "./optionsfile.h"
 case 3: 
 STACKTOP=sp;return; //@line 116 "./optionsfile.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16optionsFileClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 149 "./optionsfile.h"
 var $4=HEAP8[($3)]; //@line 149 "./optionsfile.h"
 var $5=(($4)&1); //@line 149 "./optionsfile.h"
 STACKTOP=sp;return $5; //@line 149 "./optionsfile.h"
}


function __ZN16optionsFileClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN16optionsFileClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 116 "./optionsfile.h"
 case 2: 
 var $6=$4; //@line 116 "./optionsfile.h"
 __ZdlPv($6); //@line 116 "./optionsfile.h"
 STACKTOP=sp;return; //@line 116 "./optionsfile.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 116 "./optionsfile.h"
 var $10=$8$1;
 $3=$10; //@line 116 "./optionsfile.h"
 var $11=$4; //@line 116 "./optionsfile.h"
 __ZdlPv($11); //@line 116 "./optionsfile.h"
 label=4;break; //@line 116 "./optionsfile.h"
 case 4: 
 var $13=$2; //@line 116 "./optionsfile.h"
 var $14=$3; //@line 116 "./optionsfile.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 116 "./optionsfile.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16optionsFileClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 115 "./optionsfile.h"
 HEAP32[(($3)>>2)]=16800; //@line 115 "./optionsfile.h"
 var $4=(($2+4)|0); //@line 115 "./optionsfile.h"
 HEAP8[($4)]=0; //@line 115 "./optionsfile.h"
 STACKTOP=sp;return; //@line 115 "./optionsfile.h"
}


function __ZN18scriptManagerClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 58 "./scriptman.h"
}


function __ZN18scriptManagerClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 57 "./scriptman.h"
 HEAP8[($3)]=0; //@line 57 "./scriptman.h"
 STACKTOP=sp;return; //@line 57 "./scriptman.h"
}


function __GLOBAL__I_a(){
 var label=0;


 ___cxx_global_var_init(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init1(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init2(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init3(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init4(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init5(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init6(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init47(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init48(); //@line 57 "gameglobals.cpp"
 ___cxx_global_var_init49(); //@line 57 "gameglobals.cpp"
 return; //@line 57 "gameglobals.cpp"
}


function __Z21setSpeedForLinealMoveP17genericUnitStructeed($unit,$xTo,$yTo,$linealSpeed){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $dx;
 var $dy;
 var $dDiagonal;
 var $ratio;
 $2=$unit;
 $3=$xTo;
 $4=$yTo;
 $5=$linealSpeed;
 var $6=$3; //@line 43 "genericunits.cpp"
 var $7=$2; //@line 43 "genericunits.cpp"
 var $8=(($7+8)|0); //@line 43 "genericunits.cpp"
 var $9=HEAPF64[(($8)>>3)]; //@line 43 "genericunits.cpp"
 var $10=($6)-($9); //@line 43 "genericunits.cpp"
 $dx=$10; //@line 43 "genericunits.cpp"
 var $11=$4; //@line 44 "genericunits.cpp"
 var $12=$2; //@line 44 "genericunits.cpp"
 var $13=(($12+16)|0); //@line 44 "genericunits.cpp"
 var $14=HEAPF64[(($13)>>3)]; //@line 44 "genericunits.cpp"
 var $15=($11)-($14); //@line 44 "genericunits.cpp"
 $dy=$15; //@line 44 "genericunits.cpp"
 var $16=$dx; //@line 45 "genericunits.cpp"
 var $17=$dx; //@line 45 "genericunits.cpp"
 var $18=($16)*($17); //@line 45 "genericunits.cpp"
 var $19=$dy; //@line 45 "genericunits.cpp"
 var $20=$dy; //@line 45 "genericunits.cpp"
 var $21=($19)*($20); //@line 45 "genericunits.cpp"
 var $22=($18)+($21); //@line 45 "genericunits.cpp"
 var $23=Math_sqrt($22); //@line 45 "genericunits.cpp"
 $dDiagonal=$23; //@line 45 "genericunits.cpp"
 var $24=$5; //@line 46 "genericunits.cpp"
 var $25=$24>=0; //@line 46 "genericunits.cpp"
 if($25){label=2;break;}else{label=3;break;} //@line 46 "genericunits.cpp"
 case 2: 
 var $27=$5; //@line 46 "genericunits.cpp"
 var $32=$27;label=4;break; //@line 46 "genericunits.cpp"
 case 3: 
 var $29=$5; //@line 46 "genericunits.cpp"
 var $30=((-.0))-($29); //@line 46 "genericunits.cpp"
 var $32=$30;label=4;break; //@line 46 "genericunits.cpp"
 case 4: 
 var $32; //@line 46 "genericunits.cpp"
 $5=$32; //@line 46 "genericunits.cpp"
 var $33=$dDiagonal; //@line 49 "genericunits.cpp"
 var $34=$33==0; //@line 49 "genericunits.cpp"
 if($34){label=5;break;}else{label=6;break;} //@line 49 "genericunits.cpp"
 case 5: 
 var $36=$2; //@line 50 "genericunits.cpp"
 var $37=(($36+32)|0); //@line 50 "genericunits.cpp"
 HEAPF64[(($37)>>3)]=0; //@line 50 "genericunits.cpp"
 var $38=$2; //@line 51 "genericunits.cpp"
 var $39=(($38+40)|0); //@line 51 "genericunits.cpp"
 HEAPF64[(($39)>>3)]=0; //@line 51 "genericunits.cpp"
 $1=1; //@line 52 "genericunits.cpp"
 label=7;break; //@line 52 "genericunits.cpp"
 case 6: 
 var $41=$5; //@line 57 "genericunits.cpp"
 var $42=$dDiagonal; //@line 57 "genericunits.cpp"
 var $43=($41)/($42); //@line 57 "genericunits.cpp"
 $ratio=$43; //@line 57 "genericunits.cpp"
 var $44=$dx; //@line 60 "genericunits.cpp"
 var $45=$ratio; //@line 60 "genericunits.cpp"
 var $46=($44)*($45); //@line 60 "genericunits.cpp"
 var $47=$2; //@line 60 "genericunits.cpp"
 var $48=(($47+32)|0); //@line 60 "genericunits.cpp"
 HEAPF64[(($48)>>3)]=$46; //@line 60 "genericunits.cpp"
 var $49=$dy; //@line 61 "genericunits.cpp"
 var $50=$ratio; //@line 61 "genericunits.cpp"
 var $51=($49)*($50); //@line 61 "genericunits.cpp"
 var $52=$2; //@line 61 "genericunits.cpp"
 var $53=(($52+40)|0); //@line 61 "genericunits.cpp"
 HEAPF64[(($53)>>3)]=$51; //@line 61 "genericunits.cpp"
 $1=1; //@line 63 "genericunits.cpp"
 label=7;break; //@line 63 "genericunits.cpp"
 case 7: 
 var $55=$1; //@line 64 "genericunits.cpp"
 STACKTOP=sp;return $55; //@line 64 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23unintelligentLinealMoveP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $gx;
 var $gy;
 var $sx;
 var $sy;
 $2=$unit;
 var $3=$2; //@line 73 "genericunits.cpp"
 var $4=(($3+160)|0); //@line 73 "genericunits.cpp"
 var $5=HEAPF64[(($4)>>3)]; //@line 73 "genericunits.cpp"
 $gx=$5; //@line 73 "genericunits.cpp"
 var $6=$2; //@line 74 "genericunits.cpp"
 var $7=(($6+168)|0); //@line 74 "genericunits.cpp"
 var $8=HEAPF64[(($7)>>3)]; //@line 74 "genericunits.cpp"
 $gy=$8; //@line 74 "genericunits.cpp"
 var $9=$2; //@line 77 "genericunits.cpp"
 var $10=(($9+156)|0); //@line 77 "genericunits.cpp"
 var $11=HEAP8[($10)]; //@line 77 "genericunits.cpp"
 var $12=(($11)&1); //@line 77 "genericunits.cpp"
 if($12){label=3;break;}else{label=2;break;} //@line 77 "genericunits.cpp"
 case 2: 
 $1=1; //@line 77 "genericunits.cpp"
 label=27;break; //@line 77 "genericunits.cpp"
 case 3: 
 var $15=$2; //@line 80 "genericunits.cpp"
 var $16=(($15+32)|0); //@line 80 "genericunits.cpp"
 var $17=HEAPF64[(($16)>>3)]; //@line 80 "genericunits.cpp"
 $sx=$17; //@line 80 "genericunits.cpp"
 var $18=$2; //@line 81 "genericunits.cpp"
 var $19=(($18+40)|0); //@line 81 "genericunits.cpp"
 var $20=HEAPF64[(($19)>>3)]; //@line 81 "genericunits.cpp"
 $sy=$20; //@line 81 "genericunits.cpp"
 var $21=$2; //@line 84 "genericunits.cpp"
 var $22=(($21+96)|0); //@line 84 "genericunits.cpp"
 var $23=HEAP8[($22)]; //@line 84 "genericunits.cpp"
 var $24=(($23)&1); //@line 84 "genericunits.cpp"
 if($24){label=4;break;}else{label=5;break;} //@line 84 "genericunits.cpp"
 case 4: 
 var $26=HEAPF64[((19560)>>3)]; //@line 85 "genericunits.cpp"
 var $27=$gx; //@line 85 "genericunits.cpp"
 var $28=($27)+($26); //@line 85 "genericunits.cpp"
 $gx=$28; //@line 85 "genericunits.cpp"
 var $29=HEAPF64[((19568)>>3)]; //@line 86 "genericunits.cpp"
 var $30=$gy; //@line 86 "genericunits.cpp"
 var $31=($30)+($29); //@line 86 "genericunits.cpp"
 $gy=$31; //@line 86 "genericunits.cpp"
 label=5;break; //@line 87 "genericunits.cpp"
 case 5: 
 var $33=$gx; //@line 92 "genericunits.cpp"
 var $34=$2; //@line 92 "genericunits.cpp"
 var $35=(($34+8)|0); //@line 92 "genericunits.cpp"
 var $36=HEAPF64[(($35)>>3)]; //@line 92 "genericunits.cpp"
 var $37=($33)-($36); //@line 92 "genericunits.cpp"
 var $38=$37>=0; //@line 92 "genericunits.cpp"
 if($38){label=6;break;}else{label=7;break;} //@line 92 "genericunits.cpp"
 case 6: 
 var $40=$gx; //@line 92 "genericunits.cpp"
 var $41=$2; //@line 92 "genericunits.cpp"
 var $42=(($41+8)|0); //@line 92 "genericunits.cpp"
 var $43=HEAPF64[(($42)>>3)]; //@line 92 "genericunits.cpp"
 var $44=($40)-($43); //@line 92 "genericunits.cpp"
 var $53=$44;label=8;break; //@line 92 "genericunits.cpp"
 case 7: 
 var $46=$gx; //@line 92 "genericunits.cpp"
 var $47=$2; //@line 92 "genericunits.cpp"
 var $48=(($47+8)|0); //@line 92 "genericunits.cpp"
 var $49=HEAPF64[(($48)>>3)]; //@line 92 "genericunits.cpp"
 var $50=($46)-($49); //@line 92 "genericunits.cpp"
 var $51=((-.0))-($50); //@line 92 "genericunits.cpp"
 var $53=$51;label=8;break; //@line 92 "genericunits.cpp"
 case 8: 
 var $53; //@line 92 "genericunits.cpp"
 var $54=$sx; //@line 92 "genericunits.cpp"
 var $55=$54>=0; //@line 92 "genericunits.cpp"
 if($55){label=9;break;}else{label=10;break;} //@line 92 "genericunits.cpp"
 case 9: 
 var $57=$sx; //@line 92 "genericunits.cpp"
 var $62=$57;label=11;break; //@line 92 "genericunits.cpp"
 case 10: 
 var $59=$sx; //@line 92 "genericunits.cpp"
 var $60=((-.0))-($59); //@line 92 "genericunits.cpp"
 var $62=$60;label=11;break; //@line 92 "genericunits.cpp"
 case 11: 
 var $62; //@line 92 "genericunits.cpp"
 var $63=$53<=$62; //@line 92 "genericunits.cpp"
 if($63){label=12;break;}else{label=13;break;} //@line 92 "genericunits.cpp"
 case 12: 
 var $65=$gx; //@line 94 "genericunits.cpp"
 var $66=$2; //@line 94 "genericunits.cpp"
 var $67=(($66+8)|0); //@line 94 "genericunits.cpp"
 HEAPF64[(($67)>>3)]=$65; //@line 94 "genericunits.cpp"
 label=14;break; //@line 95 "genericunits.cpp"
 case 13: 
 var $69=$sx; //@line 97 "genericunits.cpp"
 var $70=$2; //@line 97 "genericunits.cpp"
 var $71=(($70+8)|0); //@line 97 "genericunits.cpp"
 var $72=HEAPF64[(($71)>>3)]; //@line 97 "genericunits.cpp"
 var $73=($72)+($69); //@line 97 "genericunits.cpp"
 HEAPF64[(($71)>>3)]=$73; //@line 97 "genericunits.cpp"
 label=14;break;
 case 14: 
 var $75=$gy; //@line 100 "genericunits.cpp"
 var $76=$2; //@line 100 "genericunits.cpp"
 var $77=(($76+16)|0); //@line 100 "genericunits.cpp"
 var $78=HEAPF64[(($77)>>3)]; //@line 100 "genericunits.cpp"
 var $79=($75)-($78); //@line 100 "genericunits.cpp"
 var $80=$79>=0; //@line 100 "genericunits.cpp"
 if($80){label=15;break;}else{label=16;break;} //@line 100 "genericunits.cpp"
 case 15: 
 var $82=$gy; //@line 100 "genericunits.cpp"
 var $83=$2; //@line 100 "genericunits.cpp"
 var $84=(($83+16)|0); //@line 100 "genericunits.cpp"
 var $85=HEAPF64[(($84)>>3)]; //@line 100 "genericunits.cpp"
 var $86=($82)-($85); //@line 100 "genericunits.cpp"
 var $95=$86;label=17;break; //@line 100 "genericunits.cpp"
 case 16: 
 var $88=$gy; //@line 100 "genericunits.cpp"
 var $89=$2; //@line 100 "genericunits.cpp"
 var $90=(($89+16)|0); //@line 100 "genericunits.cpp"
 var $91=HEAPF64[(($90)>>3)]; //@line 100 "genericunits.cpp"
 var $92=($88)-($91); //@line 100 "genericunits.cpp"
 var $93=((-.0))-($92); //@line 100 "genericunits.cpp"
 var $95=$93;label=17;break; //@line 100 "genericunits.cpp"
 case 17: 
 var $95; //@line 100 "genericunits.cpp"
 var $96=$sy; //@line 100 "genericunits.cpp"
 var $97=$96>=0; //@line 100 "genericunits.cpp"
 if($97){label=18;break;}else{label=19;break;} //@line 100 "genericunits.cpp"
 case 18: 
 var $99=$sy; //@line 100 "genericunits.cpp"
 var $104=$99;label=20;break; //@line 100 "genericunits.cpp"
 case 19: 
 var $101=$sy; //@line 100 "genericunits.cpp"
 var $102=((-.0))-($101); //@line 100 "genericunits.cpp"
 var $104=$102;label=20;break; //@line 100 "genericunits.cpp"
 case 20: 
 var $104; //@line 100 "genericunits.cpp"
 var $105=$95<=$104; //@line 100 "genericunits.cpp"
 if($105){label=21;break;}else{label=22;break;} //@line 100 "genericunits.cpp"
 case 21: 
 var $107=$gy; //@line 102 "genericunits.cpp"
 var $108=$2; //@line 102 "genericunits.cpp"
 var $109=(($108+16)|0); //@line 102 "genericunits.cpp"
 HEAPF64[(($109)>>3)]=$107; //@line 102 "genericunits.cpp"
 label=23;break; //@line 103 "genericunits.cpp"
 case 22: 
 var $111=$sy; //@line 105 "genericunits.cpp"
 var $112=$2; //@line 105 "genericunits.cpp"
 var $113=(($112+16)|0); //@line 105 "genericunits.cpp"
 var $114=HEAPF64[(($113)>>3)]; //@line 105 "genericunits.cpp"
 var $115=($114)+($111); //@line 105 "genericunits.cpp"
 HEAPF64[(($113)>>3)]=$115; //@line 105 "genericunits.cpp"
 label=23;break;
 case 23: 
 var $117=$2; //@line 109 "genericunits.cpp"
 var $118=(($117+8)|0); //@line 109 "genericunits.cpp"
 var $119=HEAPF64[(($118)>>3)]; //@line 109 "genericunits.cpp"
 var $120=$gx; //@line 109 "genericunits.cpp"
 var $121=$119==$120; //@line 109 "genericunits.cpp"
 if($121){label=24;break;}else{label=26;break;} //@line 109 "genericunits.cpp"
 case 24: 
 var $123=$2; //@line 109 "genericunits.cpp"
 var $124=(($123+16)|0); //@line 109 "genericunits.cpp"
 var $125=HEAPF64[(($124)>>3)]; //@line 109 "genericunits.cpp"
 var $126=$gy; //@line 109 "genericunits.cpp"
 var $127=$125==$126; //@line 109 "genericunits.cpp"
 if($127){label=25;break;}else{label=26;break;} //@line 109 "genericunits.cpp"
 case 25: 
 var $129=$2; //@line 110 "genericunits.cpp"
 var $130=(($129+156)|0); //@line 110 "genericunits.cpp"
 HEAP8[($130)]=0; //@line 110 "genericunits.cpp"
 var $131=$2; //@line 111 "genericunits.cpp"
 var $132=(($131+32)|0); //@line 111 "genericunits.cpp"
 HEAPF64[(($132)>>3)]=0; //@line 111 "genericunits.cpp"
 var $133=$2; //@line 112 "genericunits.cpp"
 var $134=(($133+40)|0); //@line 112 "genericunits.cpp"
 HEAPF64[(($134)>>3)]=0; //@line 112 "genericunits.cpp"
 label=26;break; //@line 113 "genericunits.cpp"
 case 26: 
 $1=1; //@line 115 "genericunits.cpp"
 label=27;break; //@line 115 "genericunits.cpp"
 case 27: 
 var $137=$1; //@line 116 "genericunits.cpp"
 STACKTOP=sp;return $137; //@line 116 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z17getUnitFramesListP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $typeDataList;
 var $myUnitType;
 $2=$unit;
 var $3=$2; //@line 128 "genericunits.cpp"
 var $4=(($3+28)|0); //@line 128 "genericunits.cpp"
 var $5=HEAP8[($4)]; //@line 128 "genericunits.cpp"
 var $6=($5&255); //@line 128 "genericunits.cpp"
 var $7=__Z17getTypeDataStructi($6); //@line 128 "genericunits.cpp"
 $typeDataList=$7; //@line 128 "genericunits.cpp"
 var $8=$typeDataList; //@line 130 "genericunits.cpp"
 var $9=($8|0)==0; //@line 130 "genericunits.cpp"
 if($9){label=2;break;}else{label=3;break;} //@line 130 "genericunits.cpp"
 case 2: 
 $1=0; //@line 130 "genericunits.cpp"
 label=4;break; //@line 130 "genericunits.cpp"
 case 3: 
 var $12=$2; //@line 132 "genericunits.cpp"
 var $13=(($12+24)|0); //@line 132 "genericunits.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 132 "genericunits.cpp"
 var $15=$typeDataList; //@line 132 "genericunits.cpp"
 var $16=(($15+((($14)*(24))&-1))|0); //@line 132 "genericunits.cpp"
 $myUnitType=$16; //@line 132 "genericunits.cpp"
 var $17=$myUnitType; //@line 134 "genericunits.cpp"
 var $18=(($17+16)|0); //@line 134 "genericunits.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 134 "genericunits.cpp"
 $1=$19; //@line 134 "genericunits.cpp"
 label=4;break; //@line 134 "genericunits.cpp"
 case 4: 
 var $21=$1; //@line 135 "genericunits.cpp"
 STACKTOP=sp;return $21; //@line 135 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12getUnitFrameP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $frames;
 $2=$unit;
 var $3=$2; //@line 145 "genericunits.cpp"
 var $4=__Z17getUnitFramesListP17genericUnitStruct($3); //@line 145 "genericunits.cpp"
 $frames=$4; //@line 145 "genericunits.cpp"
 var $5=$frames; //@line 147 "genericunits.cpp"
 var $6=($5|0)==0; //@line 147 "genericunits.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 147 "genericunits.cpp"
 case 2: 
 var $8=$frames; //@line 148 "genericunits.cpp"
 $1=$8; //@line 148 "genericunits.cpp"
 label=4;break; //@line 148 "genericunits.cpp"
 case 3: 
 var $10=$2; //@line 150 "genericunits.cpp"
 var $11=(($10+88)|0); //@line 150 "genericunits.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 150 "genericunits.cpp"
 var $13=$frames; //@line 150 "genericunits.cpp"
 var $14=(($13+((($12)*(80))&-1))|0); //@line 150 "genericunits.cpp"
 $1=$14; //@line 150 "genericunits.cpp"
 label=4;break; //@line 150 "genericunits.cpp"
 case 4: 
 var $16=$1; //@line 151 "genericunits.cpp"
 STACKTOP=sp;return $16; //@line 151 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23constructContainerFrameP17genericUnitStructP15frameDataStruct($unit,$frameToWrite){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $frames;
 var $framesCount;
 var $thisFrame;
 var $wToLeft;
 var $wToRight;
 var $hToTop;
 var $hToBottom;
 var $tempWToLeft;
 var $tempWToRight;
 var $tempHToTop;
 var $tempHToBottom;
 $2=$unit;
 $3=$frameToWrite;
 $wToLeft=0; //@line 173 "genericunits.cpp"
 $wToRight=0; //@line 173 "genericunits.cpp"
 $hToTop=0; //@line 173 "genericunits.cpp"
 $hToBottom=0; //@line 173 "genericunits.cpp"
 var $4=$2; //@line 177 "genericunits.cpp"
 var $5=__Z17getUnitFramesListP17genericUnitStruct($4); //@line 177 "genericunits.cpp"
 $frames=$5; //@line 177 "genericunits.cpp"
 var $6=$frames; //@line 178 "genericunits.cpp"
 var $7=($6|0)==0; //@line 178 "genericunits.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 178 "genericunits.cpp"
 case 2: 
 var $9=$3; //@line 178 "genericunits.cpp"
 var $10=($9|0)==0; //@line 178 "genericunits.cpp"
 if($10){label=3;break;}else{label=4;break;} //@line 178 "genericunits.cpp"
 case 3: 
 $1=0; //@line 179 "genericunits.cpp"
 label=11;break; //@line 179 "genericunits.cpp"
 case 4: 
 var $13=$frames; //@line 180 "genericunits.cpp"
 var $14=__Z14getFramesCountP15frameDataStruct($13); //@line 180 "genericunits.cpp"
 $framesCount=$14; //@line 180 "genericunits.cpp"
 var $15=$framesCount; //@line 181 "genericunits.cpp"
 var $16=($15|0)<=0; //@line 181 "genericunits.cpp"
 if($16){label=5;break;}else{label=6;break;} //@line 181 "genericunits.cpp"
 case 5: 
 $1=0; //@line 181 "genericunits.cpp"
 label=11;break; //@line 181 "genericunits.cpp"
 case 6: 
 var $19=$frames; //@line 184 "genericunits.cpp"
 $thisFrame=$19; //@line 184 "genericunits.cpp"
 label=7;break; //@line 184 "genericunits.cpp"
 case 7: 
 var $21=$thisFrame; //@line 184 "genericunits.cpp"
 var $22=$frames; //@line 184 "genericunits.cpp"
 var $23=$21; //@line 184 "genericunits.cpp"
 var $24=$22; //@line 184 "genericunits.cpp"
 var $25=((($23)-($24))|0); //@line 184 "genericunits.cpp"
 var $26=(((($25|0))/(80))&-1); //@line 184 "genericunits.cpp"
 var $27=$framesCount; //@line 184 "genericunits.cpp"
 var $28=($26|0)<($27|0); //@line 184 "genericunits.cpp"
 if($28){label=8;break;}else{label=10;break;} //@line 184 "genericunits.cpp"
 case 8: 
 var $30=$thisFrame; //@line 186 "genericunits.cpp"
 var $31=(($30+40)|0); //@line 186 "genericunits.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 186 "genericunits.cpp"
 $tempWToLeft=$32; //@line 186 "genericunits.cpp"
 var $33=$thisFrame; //@line 187 "genericunits.cpp"
 var $34=(($33+16)|0); //@line 187 "genericunits.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 187 "genericunits.cpp"
 var $36=$thisFrame; //@line 187 "genericunits.cpp"
 var $37=(($36+40)|0); //@line 187 "genericunits.cpp"
 var $38=HEAP32[(($37)>>2)]; //@line 187 "genericunits.cpp"
 var $39=((($35)-($38))|0); //@line 187 "genericunits.cpp"
 $tempWToRight=$39; //@line 187 "genericunits.cpp"
 var $40=$thisFrame; //@line 188 "genericunits.cpp"
 var $41=(($40+44)|0); //@line 188 "genericunits.cpp"
 var $42=HEAP32[(($41)>>2)]; //@line 188 "genericunits.cpp"
 $tempHToTop=$42; //@line 188 "genericunits.cpp"
 var $43=$thisFrame; //@line 189 "genericunits.cpp"
 var $44=(($43+20)|0); //@line 189 "genericunits.cpp"
 var $45=HEAP32[(($44)>>2)]; //@line 189 "genericunits.cpp"
 var $46=$thisFrame; //@line 189 "genericunits.cpp"
 var $47=(($46+44)|0); //@line 189 "genericunits.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 189 "genericunits.cpp"
 var $49=((($45)-($48))|0); //@line 189 "genericunits.cpp"
 $tempHToBottom=$49; //@line 189 "genericunits.cpp"
 var $50=$wToLeft; //@line 192 "genericunits.cpp"
 var $51=$tempWToLeft; //@line 192 "genericunits.cpp"
 var $52=($50|0)>($51|0); //@line 192 "genericunits.cpp"
 var $53=$wToLeft; //@line 192 "genericunits.cpp"
 var $54=$tempWToLeft; //@line 192 "genericunits.cpp"
 var $55=($52?$53:$54); //@line 192 "genericunits.cpp"
 $wToLeft=$55; //@line 192 "genericunits.cpp"
 var $56=$wToRight; //@line 193 "genericunits.cpp"
 var $57=$tempWToRight; //@line 193 "genericunits.cpp"
 var $58=($56|0)>($57|0); //@line 193 "genericunits.cpp"
 var $59=$wToRight; //@line 193 "genericunits.cpp"
 var $60=$tempWToRight; //@line 193 "genericunits.cpp"
 var $61=($58?$59:$60); //@line 193 "genericunits.cpp"
 $wToRight=$61; //@line 193 "genericunits.cpp"
 var $62=$hToTop; //@line 194 "genericunits.cpp"
 var $63=$tempHToTop; //@line 194 "genericunits.cpp"
 var $64=($62|0)>($63|0); //@line 194 "genericunits.cpp"
 var $65=$hToTop; //@line 194 "genericunits.cpp"
 var $66=$tempHToTop; //@line 194 "genericunits.cpp"
 var $67=($64?$65:$66); //@line 194 "genericunits.cpp"
 $hToTop=$67; //@line 194 "genericunits.cpp"
 var $68=$hToBottom; //@line 195 "genericunits.cpp"
 var $69=$tempHToBottom; //@line 195 "genericunits.cpp"
 var $70=($68|0)>($69|0); //@line 195 "genericunits.cpp"
 var $71=$hToBottom; //@line 195 "genericunits.cpp"
 var $72=$tempHToBottom; //@line 195 "genericunits.cpp"
 var $73=($70?$71:$72); //@line 195 "genericunits.cpp"
 $hToBottom=$73; //@line 195 "genericunits.cpp"
 label=9;break; //@line 196 "genericunits.cpp"
 case 9: 
 var $75=$thisFrame; //@line 184 "genericunits.cpp"
 var $76=(($75+80)|0); //@line 184 "genericunits.cpp"
 $thisFrame=$76; //@line 184 "genericunits.cpp"
 label=7;break; //@line 184 "genericunits.cpp"
 case 10: 
 var $78=$wToLeft; //@line 199 "genericunits.cpp"
 var $79=$3; //@line 199 "genericunits.cpp"
 var $80=(($79+40)|0); //@line 199 "genericunits.cpp"
 HEAP32[(($80)>>2)]=$78; //@line 199 "genericunits.cpp"
 var $81=$hToTop; //@line 200 "genericunits.cpp"
 var $82=$3; //@line 200 "genericunits.cpp"
 var $83=(($82+44)|0); //@line 200 "genericunits.cpp"
 HEAP32[(($83)>>2)]=$81; //@line 200 "genericunits.cpp"
 var $84=$wToLeft; //@line 201 "genericunits.cpp"
 var $85=$wToRight; //@line 201 "genericunits.cpp"
 var $86=((($84)+($85))|0); //@line 201 "genericunits.cpp"
 var $87=$3; //@line 201 "genericunits.cpp"
 var $88=(($87+16)|0); //@line 201 "genericunits.cpp"
 HEAP32[(($88)>>2)]=$86; //@line 201 "genericunits.cpp"
 var $89=$hToTop; //@line 202 "genericunits.cpp"
 var $90=$hToBottom; //@line 202 "genericunits.cpp"
 var $91=((($89)+($90))|0); //@line 202 "genericunits.cpp"
 var $92=$3; //@line 202 "genericunits.cpp"
 var $93=(($92+20)|0); //@line 202 "genericunits.cpp"
 HEAP32[(($93)>>2)]=$91; //@line 202 "genericunits.cpp"
 $1=1; //@line 204 "genericunits.cpp"
 label=11;break; //@line 204 "genericunits.cpp"
 case 11: 
 var $95=$1; //@line 205 "genericunits.cpp"
 STACKTOP=sp;return $95; //@line 205 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23constructContainerFrameP17genericUnitStruct($agg_result,$unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$unit;
 var $2=$1; //@line 214 "genericunits.cpp"
 var $3=__Z23constructContainerFrameP17genericUnitStructP15frameDataStruct($2,$agg_result); //@line 214 "genericunits.cpp"
 STACKTOP=sp;return; //@line 218 "genericunits.cpp"
}


function __Z24constructSlaverFullFrameP17genericUnitStructP15frameDataStruct($unit,$frameToWrite){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+96)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $unitFrame;
 var $slaveFrame=sp;
 var $slave;
 var $wToLeft;
 var $wToRight;
 var $hToTop;
 var $hToBottom;
 var $tempWToLeft;
 var $tempWToRight;
 var $tempHToTop;
 var $tempHToBottom;
 var $xOff;
 var $yOff;
 var $4=(sp)+(80);
 $2=$unit;
 $3=$frameToWrite;
 $wToLeft=0; //@line 243 "genericunits.cpp"
 $wToRight=0; //@line 243 "genericunits.cpp"
 $hToTop=0; //@line 243 "genericunits.cpp"
 $hToBottom=0; //@line 243 "genericunits.cpp"
 var $5=$2; //@line 248 "genericunits.cpp"
 var $6=__Z12getUnitFrameP17genericUnitStruct($5); //@line 248 "genericunits.cpp"
 $unitFrame=$6; //@line 248 "genericunits.cpp"
 var $7=$unitFrame; //@line 249 "genericunits.cpp"
 var $8=($7|0)==0; //@line 249 "genericunits.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 249 "genericunits.cpp"
 case 2: 
 $1=0; //@line 249 "genericunits.cpp"
 label=11;break; //@line 249 "genericunits.cpp"
 case 3: 
 var $11=$2; //@line 252 "genericunits.cpp"
 var $12=(($11+144)|0); //@line 252 "genericunits.cpp"
 var $13=(($12+4)|0); //@line 252 "genericunits.cpp"
 var $14=HEAP8[($13)]; //@line 252 "genericunits.cpp"
 var $15=($14&255); //@line 252 "genericunits.cpp"
 var $16=($15|0)==0; //@line 252 "genericunits.cpp"
 if($16){label=4;break;}else{label=5;break;} //@line 252 "genericunits.cpp"
 case 4: 
 var $18=$3; //@line 255 "genericunits.cpp"
 var $19=$unitFrame; //@line 255 "genericunits.cpp"
 var $20=$18; //@line 255 "genericunits.cpp"
 var $21=$19; //@line 255 "genericunits.cpp"
 assert(80 % 1 === 0);(_memcpy($20, $21, 80)|0); //@line 255 "genericunits.cpp"
 label=10;break; //@line 256 "genericunits.cpp"
 case 5: 
 var $23=$2; //@line 258 "genericunits.cpp"
 var $24=(($23+144)|0); //@line 258 "genericunits.cpp"
 var $25=$4; //@line 258 "genericunits.cpp"
 var $26=$24; //@line 258 "genericunits.cpp"
 assert(12 % 1 === 0);HEAP32[(($25)>>2)]=HEAP32[(($26)>>2)];HEAP32[((($25)+(4))>>2)]=HEAP32[((($26)+(4))>>2)];HEAP32[((($25)+(8))>>2)]=HEAP32[((($26)+(8))>>2)]; //@line 258 "genericunits.cpp"
 var $27=__Z14getUnitPointer23gameObjectPointerStruct($4); //@line 258 "genericunits.cpp"
 $slave=$27; //@line 258 "genericunits.cpp"
 var $28=$slave; //@line 259 "genericunits.cpp"
 var $29=($28|0)==0; //@line 259 "genericunits.cpp"
 if($29){label=6;break;}else{label=7;break;} //@line 259 "genericunits.cpp"
 case 6: 
 $1=0; //@line 259 "genericunits.cpp"
 label=11;break; //@line 259 "genericunits.cpp"
 case 7: 
 var $32=$slave; //@line 262 "genericunits.cpp"
 var $33=__Z24constructSlaverFullFrameP17genericUnitStructP15frameDataStruct($32,$slaveFrame); //@line 262 "genericunits.cpp"
 if($33){label=9;break;}else{label=8;break;} //@line 262 "genericunits.cpp"
 case 8: 
 $1=0; //@line 262 "genericunits.cpp"
 label=11;break; //@line 262 "genericunits.cpp"
 case 9: 
 var $36=$unitFrame; //@line 268 "genericunits.cpp"
 var $37=(($36+56)|0); //@line 268 "genericunits.cpp"
 var $38=HEAP32[(($37)>>2)]; //@line 268 "genericunits.cpp"
 var $39=(($slaveFrame+56)|0); //@line 268 "genericunits.cpp"
 var $40=HEAP32[(($39)>>2)]; //@line 268 "genericunits.cpp"
 var $41=((($38)-($40))|0); //@line 268 "genericunits.cpp"
 $xOff=$41; //@line 268 "genericunits.cpp"
 var $42=$unitFrame; //@line 269 "genericunits.cpp"
 var $43=(($42+60)|0); //@line 269 "genericunits.cpp"
 var $44=HEAP32[(($43)>>2)]; //@line 269 "genericunits.cpp"
 var $45=(($slaveFrame+60)|0); //@line 269 "genericunits.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 269 "genericunits.cpp"
 var $47=((($44)-($46))|0); //@line 269 "genericunits.cpp"
 $yOff=$47; //@line 269 "genericunits.cpp"
 var $48=$unitFrame; //@line 271 "genericunits.cpp"
 var $49=(($48+40)|0); //@line 271 "genericunits.cpp"
 var $50=HEAP32[(($49)>>2)]; //@line 271 "genericunits.cpp"
 $wToLeft=$50; //@line 271 "genericunits.cpp"
 var $51=$unitFrame; //@line 272 "genericunits.cpp"
 var $52=(($51+16)|0); //@line 272 "genericunits.cpp"
 var $53=HEAP32[(($52)>>2)]; //@line 272 "genericunits.cpp"
 var $54=$unitFrame; //@line 272 "genericunits.cpp"
 var $55=(($54+40)|0); //@line 272 "genericunits.cpp"
 var $56=HEAP32[(($55)>>2)]; //@line 272 "genericunits.cpp"
 var $57=((($53)-($56))|0); //@line 272 "genericunits.cpp"
 $wToRight=$57; //@line 272 "genericunits.cpp"
 var $58=$unitFrame; //@line 273 "genericunits.cpp"
 var $59=(($58+44)|0); //@line 273 "genericunits.cpp"
 var $60=HEAP32[(($59)>>2)]; //@line 273 "genericunits.cpp"
 $hToTop=$60; //@line 273 "genericunits.cpp"
 var $61=$unitFrame; //@line 274 "genericunits.cpp"
 var $62=(($61+20)|0); //@line 274 "genericunits.cpp"
 var $63=HEAP32[(($62)>>2)]; //@line 274 "genericunits.cpp"
 var $64=$unitFrame; //@line 274 "genericunits.cpp"
 var $65=(($64+44)|0); //@line 274 "genericunits.cpp"
 var $66=HEAP32[(($65)>>2)]; //@line 274 "genericunits.cpp"
 var $67=((($63)-($66))|0); //@line 274 "genericunits.cpp"
 $hToBottom=$67; //@line 274 "genericunits.cpp"
 var $68=(($slaveFrame+40)|0); //@line 276 "genericunits.cpp"
 var $69=HEAP32[(($68)>>2)]; //@line 276 "genericunits.cpp"
 var $70=$xOff; //@line 276 "genericunits.cpp"
 var $71=((($69)-($70))|0); //@line 276 "genericunits.cpp"
 $tempWToLeft=$71; //@line 276 "genericunits.cpp"
 var $72=(($slaveFrame+16)|0); //@line 277 "genericunits.cpp"
 var $73=HEAP32[(($72)>>2)]; //@line 277 "genericunits.cpp"
 var $74=(($slaveFrame+40)|0); //@line 277 "genericunits.cpp"
 var $75=HEAP32[(($74)>>2)]; //@line 277 "genericunits.cpp"
 var $76=((($73)-($75))|0); //@line 277 "genericunits.cpp"
 var $77=$xOff; //@line 277 "genericunits.cpp"
 var $78=((($76)+($77))|0); //@line 277 "genericunits.cpp"
 $tempWToRight=$78; //@line 277 "genericunits.cpp"
 var $79=(($slaveFrame+44)|0); //@line 278 "genericunits.cpp"
 var $80=HEAP32[(($79)>>2)]; //@line 278 "genericunits.cpp"
 var $81=$yOff; //@line 278 "genericunits.cpp"
 var $82=((($80)-($81))|0); //@line 278 "genericunits.cpp"
 $tempHToTop=$82; //@line 278 "genericunits.cpp"
 var $83=(($slaveFrame+20)|0); //@line 279 "genericunits.cpp"
 var $84=HEAP32[(($83)>>2)]; //@line 279 "genericunits.cpp"
 var $85=(($slaveFrame+44)|0); //@line 279 "genericunits.cpp"
 var $86=HEAP32[(($85)>>2)]; //@line 279 "genericunits.cpp"
 var $87=((($84)-($86))|0); //@line 279 "genericunits.cpp"
 var $88=$yOff; //@line 279 "genericunits.cpp"
 var $89=((($87)+($88))|0); //@line 279 "genericunits.cpp"
 $tempHToBottom=$89; //@line 279 "genericunits.cpp"
 var $90=$wToLeft; //@line 282 "genericunits.cpp"
 var $91=$tempWToLeft; //@line 282 "genericunits.cpp"
 var $92=($90|0)>($91|0); //@line 282 "genericunits.cpp"
 var $93=$wToLeft; //@line 282 "genericunits.cpp"
 var $94=$tempWToLeft; //@line 282 "genericunits.cpp"
 var $95=($92?$93:$94); //@line 282 "genericunits.cpp"
 $wToLeft=$95; //@line 282 "genericunits.cpp"
 var $96=$wToRight; //@line 283 "genericunits.cpp"
 var $97=$tempWToRight; //@line 283 "genericunits.cpp"
 var $98=($96|0)>($97|0); //@line 283 "genericunits.cpp"
 var $99=$wToRight; //@line 283 "genericunits.cpp"
 var $100=$tempWToRight; //@line 283 "genericunits.cpp"
 var $101=($98?$99:$100); //@line 283 "genericunits.cpp"
 $wToRight=$101; //@line 283 "genericunits.cpp"
 var $102=$hToTop; //@line 284 "genericunits.cpp"
 var $103=$tempHToTop; //@line 284 "genericunits.cpp"
 var $104=($102|0)>($103|0); //@line 284 "genericunits.cpp"
 var $105=$hToTop; //@line 284 "genericunits.cpp"
 var $106=$tempHToTop; //@line 284 "genericunits.cpp"
 var $107=($104?$105:$106); //@line 284 "genericunits.cpp"
 $hToTop=$107; //@line 284 "genericunits.cpp"
 var $108=$hToBottom; //@line 285 "genericunits.cpp"
 var $109=$tempHToBottom; //@line 285 "genericunits.cpp"
 var $110=($108|0)>($109|0); //@line 285 "genericunits.cpp"
 var $111=$hToBottom; //@line 285 "genericunits.cpp"
 var $112=$tempHToBottom; //@line 285 "genericunits.cpp"
 var $113=($110?$111:$112); //@line 285 "genericunits.cpp"
 $hToBottom=$113; //@line 285 "genericunits.cpp"
 var $114=$wToLeft; //@line 288 "genericunits.cpp"
 var $115=$3; //@line 288 "genericunits.cpp"
 var $116=(($115+40)|0); //@line 288 "genericunits.cpp"
 HEAP32[(($116)>>2)]=$114; //@line 288 "genericunits.cpp"
 var $117=$hToTop; //@line 289 "genericunits.cpp"
 var $118=$3; //@line 289 "genericunits.cpp"
 var $119=(($118+44)|0); //@line 289 "genericunits.cpp"
 HEAP32[(($119)>>2)]=$117; //@line 289 "genericunits.cpp"
 var $120=$wToLeft; //@line 290 "genericunits.cpp"
 var $121=$wToRight; //@line 290 "genericunits.cpp"
 var $122=((($120)+($121))|0); //@line 290 "genericunits.cpp"
 var $123=$3; //@line 290 "genericunits.cpp"
 var $124=(($123+16)|0); //@line 290 "genericunits.cpp"
 HEAP32[(($124)>>2)]=$122; //@line 290 "genericunits.cpp"
 var $125=$hToTop; //@line 291 "genericunits.cpp"
 var $126=$hToBottom; //@line 291 "genericunits.cpp"
 var $127=((($125)+($126))|0); //@line 291 "genericunits.cpp"
 var $128=$3; //@line 291 "genericunits.cpp"
 var $129=(($128+20)|0); //@line 291 "genericunits.cpp"
 HEAP32[(($129)>>2)]=$127; //@line 291 "genericunits.cpp"
 label=10;break;
 case 10: 
 $1=1; //@line 294 "genericunits.cpp"
 label=11;break; //@line 294 "genericunits.cpp"
 case 11: 
 var $132=$1; //@line 295 "genericunits.cpp"
 STACKTOP=sp;return $132; //@line 295 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14getUnitPointer23gameObjectPointerStruct($unitInfo){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $unitInfo; $unitInfo=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($unitInfo)>>2)]=HEAP32[((tempParam)>>2)];HEAP32[((($unitInfo)+(4))>>2)]=HEAP32[(((tempParam)+(4))>>2)];HEAP32[((($unitInfo)+(8))>>2)]=HEAP32[(((tempParam)+(8))>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $unit;
 var $1=(($unitInfo+4)|0); //@line 347 "genericunits.cpp"
 var $2=HEAP8[($1)]; //@line 347 "genericunits.cpp"
 var $3=($2&255); //@line 347 "genericunits.cpp"
 switch(($3|0)){case 0:{ label=2;break;}case 2:{ label=3;break;}case 4:{ label=4;break;}case 3:{ label=5;break;}case 6:{ label=6;break;}default:{label=7;break;}}break;
 case 2: 
 $unit=0; //@line 350 "genericunits.cpp"
 label=8;break; //@line 351 "genericunits.cpp"
 case 3: 
 var $6=(($unitInfo+8)|0); //@line 353 "genericunits.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 353 "genericunits.cpp"
 var $8=__ZN15vectorListClassI16playerUnitStructE7getNodeEm(19240,$7); //@line 353 "genericunits.cpp"
 var $9=(($8)|0); //@line 353 "genericunits.cpp"
 var $10=$9; //@line 353 "genericunits.cpp"
 $unit=$10; //@line 353 "genericunits.cpp"
 label=8;break; //@line 354 "genericunits.cpp"
 case 4: 
 var $12=(($unitInfo+8)|0); //@line 356 "genericunits.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 356 "genericunits.cpp"
 var $14=__ZN15vectorListClassI16bulletUnitStructE7getNodeEm(19920,$13); //@line 356 "genericunits.cpp"
 var $15=(($14)|0); //@line 356 "genericunits.cpp"
 var $16=$15; //@line 356 "genericunits.cpp"
 $unit=$16; //@line 356 "genericunits.cpp"
 label=8;break; //@line 357 "genericunits.cpp"
 case 5: 
 var $18=(($unitInfo+8)|0); //@line 359 "genericunits.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 359 "genericunits.cpp"
 var $20=__ZN15vectorListClassI15enemyUnitStructE7getNodeEm(19752,$19); //@line 359 "genericunits.cpp"
 var $21=(($20)|0); //@line 359 "genericunits.cpp"
 var $22=$21; //@line 359 "genericunits.cpp"
 $unit=$22; //@line 359 "genericunits.cpp"
 label=8;break; //@line 360 "genericunits.cpp"
 case 6: 
 var $24=(($unitInfo+8)|0); //@line 362 "genericunits.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 362 "genericunits.cpp"
 var $26=__ZN15vectorListClassI17waveGenUnitStructE7getNodeEm(18544,$25); //@line 362 "genericunits.cpp"
 var $27=(($26)|0); //@line 362 "genericunits.cpp"
 var $28=$27; //@line 362 "genericunits.cpp"
 $unit=$28; //@line 362 "genericunits.cpp"
 label=8;break; //@line 363 "genericunits.cpp"
 case 7: 
 $unit=0; //@line 366 "genericunits.cpp"
 label=8;break; //@line 367 "genericunits.cpp"
 case 8: 
 var $31=$unit; //@line 371 "genericunits.cpp"
 var $32=($31|0)!=0; //@line 371 "genericunits.cpp"
 if($32){label=9;break;}else{label=11;break;} //@line 371 "genericunits.cpp"
 case 9: 
 var $34=$unit; //@line 371 "genericunits.cpp"
 var $35=(($34)|0); //@line 371 "genericunits.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 371 "genericunits.cpp"
 var $37=(($unitInfo)|0); //@line 371 "genericunits.cpp"
 var $38=HEAP32[(($37)>>2)]; //@line 371 "genericunits.cpp"
 var $39=($36|0)!=($38|0); //@line 371 "genericunits.cpp"
 if($39){label=10;break;}else{label=11;break;} //@line 371 "genericunits.cpp"
 case 10: 
 $unit=0; //@line 371 "genericunits.cpp"
 label=11;break; //@line 371 "genericunits.cpp"
 case 11: 
 var $42=$unit; //@line 374 "genericunits.cpp"
 STACKTOP=sp;return $42; //@line 374 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12freeSlavesOfP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $slave;
 var $3=sp;
 $2=$unit;
 var $4=$2; //@line 318 "genericunits.cpp"
 var $5=(($4+144)|0); //@line 318 "genericunits.cpp"
 var $6=(($5+4)|0); //@line 318 "genericunits.cpp"
 var $7=HEAP8[($6)]; //@line 318 "genericunits.cpp"
 var $8=($7&255); //@line 318 "genericunits.cpp"
 var $9=($8|0)==0; //@line 318 "genericunits.cpp"
 if($9){label=2;break;}else{label=3;break;} //@line 318 "genericunits.cpp"
 case 2: 
 $1=1; //@line 320 "genericunits.cpp"
 label=7;break; //@line 320 "genericunits.cpp"
 case 3: 
 var $12=$2; //@line 323 "genericunits.cpp"
 var $13=(($12+144)|0); //@line 323 "genericunits.cpp"
 var $14=$3; //@line 323 "genericunits.cpp"
 var $15=$13; //@line 323 "genericunits.cpp"
 assert(12 % 1 === 0);HEAP32[(($14)>>2)]=HEAP32[(($15)>>2)];HEAP32[((($14)+(4))>>2)]=HEAP32[((($15)+(4))>>2)];HEAP32[((($14)+(8))>>2)]=HEAP32[((($15)+(8))>>2)]; //@line 323 "genericunits.cpp"
 var $16=__Z14getUnitPointer23gameObjectPointerStruct($3); //@line 323 "genericunits.cpp"
 $slave=$16; //@line 323 "genericunits.cpp"
 var $17=$slave; //@line 324 "genericunits.cpp"
 var $18=($17|0)==0; //@line 324 "genericunits.cpp"
 if($18){label=4;break;}else{label=5;break;} //@line 324 "genericunits.cpp"
 case 4: 
 $1=0; //@line 324 "genericunits.cpp"
 label=7;break; //@line 324 "genericunits.cpp"
 case 5: 
 var $21=$2; //@line 327 "genericunits.cpp"
 var $22=(($21+144)|0); //@line 327 "genericunits.cpp"
 var $23=(($22+4)|0); //@line 327 "genericunits.cpp"
 HEAP8[($23)]=0; //@line 327 "genericunits.cpp"
 var $24=$2; //@line 328 "genericunits.cpp"
 var $25=(($24+144)|0); //@line 328 "genericunits.cpp"
 var $26=(($25)|0); //@line 328 "genericunits.cpp"
 HEAP32[(($26)>>2)]=0; //@line 328 "genericunits.cpp"
 var $27=$slave; //@line 329 "genericunits.cpp"
 var $28=(($27+132)|0); //@line 329 "genericunits.cpp"
 var $29=(($28+4)|0); //@line 329 "genericunits.cpp"
 HEAP8[($29)]=0; //@line 329 "genericunits.cpp"
 var $30=$slave; //@line 330 "genericunits.cpp"
 var $31=(($30+132)|0); //@line 330 "genericunits.cpp"
 var $32=(($31)|0); //@line 330 "genericunits.cpp"
 HEAP32[(($32)>>2)]=0; //@line 330 "genericunits.cpp"
 var $33=$slave; //@line 333 "genericunits.cpp"
 var $34=(($33+129)|0); //@line 333 "genericunits.cpp"
 HEAP8[($34)]=1; //@line 333 "genericunits.cpp"
 label=6;break;
 case 6: 
 $1=1; //@line 336 "genericunits.cpp"
 label=7;break; //@line 336 "genericunits.cpp"
 case 7: 
 var $37=$1; //@line 337 "genericunits.cpp"
 STACKTOP=sp;return $37; //@line 337 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE7getNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$nodeNumber;
 var $3=$1;
 var $4=$2; //@line 102 "./vectorlist.h"
 var $5=__ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm($3,$4); //@line 102 "./vectorlist.h"
 if($5){label=2;break;}else{label=3;break;} //@line 102 "./vectorlist.h"
 case 2: 
 var $7=(($3+20)|0); //@line 102 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 102 "./vectorlist.h"
 var $9=$2; //@line 102 "./vectorlist.h"
 var $10=(($8+((($9)*(216))&-1))|0); //@line 102 "./vectorlist.h"
 var $13=$10;label=4;break; //@line 102 "./vectorlist.h"
 case 3: 
 var $13=0;label=4;break; //@line 102 "./vectorlist.h"
 case 4: 
 var $13; //@line 102 "./vectorlist.h"
 STACKTOP=sp;return $13; //@line 102 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13autoFrameUnitP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $myUnitFrame;
 $1=$unit;
 var $2=$1; //@line 384 "genericunits.cpp"
 var $3=__Z12getUnitFrameP17genericUnitStruct($2); //@line 384 "genericunits.cpp"
 $myUnitFrame=$3; //@line 384 "genericunits.cpp"
 var $4=$myUnitFrame; //@line 387 "genericunits.cpp"
 var $5=(($4+68)|0); //@line 387 "genericunits.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 387 "genericunits.cpp"
 var $7=($6|0)!=0; //@line 387 "genericunits.cpp"
 if($7){label=2;break;}else{label=5;break;} //@line 387 "genericunits.cpp"
 case 2: 
 var $9=$1; //@line 388 "genericunits.cpp"
 var $10=(($9+92)|0); //@line 388 "genericunits.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 388 "genericunits.cpp"
 var $12=((($11)+(1))|0); //@line 388 "genericunits.cpp"
 HEAP32[(($10)>>2)]=$12; //@line 388 "genericunits.cpp"
 var $13=$1; //@line 389 "genericunits.cpp"
 var $14=(($13+92)|0); //@line 389 "genericunits.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 389 "genericunits.cpp"
 var $16=$myUnitFrame; //@line 389 "genericunits.cpp"
 var $17=(($16+68)|0); //@line 389 "genericunits.cpp"
 var $18=HEAP32[(($17)>>2)]; //@line 389 "genericunits.cpp"
 var $19=($15>>>0)>=($18>>>0); //@line 389 "genericunits.cpp"
 if($19){label=3;break;}else{label=4;break;} //@line 389 "genericunits.cpp"
 case 3: 
 var $21=$myUnitFrame; //@line 391 "genericunits.cpp"
 var $22=(($21+64)|0); //@line 391 "genericunits.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 391 "genericunits.cpp"
 var $24=$1; //@line 391 "genericunits.cpp"
 var $25=(($24+88)|0); //@line 391 "genericunits.cpp"
 HEAP32[(($25)>>2)]=$23; //@line 391 "genericunits.cpp"
 var $26=$1; //@line 394 "genericunits.cpp"
 var $27=(($26+92)|0); //@line 394 "genericunits.cpp"
 HEAP32[(($27)>>2)]=0; //@line 394 "genericunits.cpp"
 label=4;break; //@line 395 "genericunits.cpp"
 case 4: 
 label=5;break; //@line 396 "genericunits.cpp"
 case 5: 
 STACKTOP=sp;return 1; //@line 399 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13moveWithOwnerP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $myUnitFrame;
 var $slave;
 var $slaveFrame;
 var $3=sp;
 $2=$unit;
 var $4=$2; //@line 412 "genericunits.cpp"
 var $5=__Z12getUnitFrameP17genericUnitStruct($4); //@line 412 "genericunits.cpp"
 $myUnitFrame=$5; //@line 412 "genericunits.cpp"
 var $6=$2; //@line 416 "genericunits.cpp"
 var $7=(($6+144)|0); //@line 416 "genericunits.cpp"
 var $8=(($7+4)|0); //@line 416 "genericunits.cpp"
 var $9=HEAP8[($8)]; //@line 416 "genericunits.cpp"
 var $10=($9&255); //@line 416 "genericunits.cpp"
 var $11=($10|0)!=0; //@line 416 "genericunits.cpp"
 if($11){label=2;break;}else{label=5;break;} //@line 416 "genericunits.cpp"
 case 2: 
 var $13=$2; //@line 419 "genericunits.cpp"
 var $14=(($13+144)|0); //@line 419 "genericunits.cpp"
 var $15=$3; //@line 419 "genericunits.cpp"
 var $16=$14; //@line 419 "genericunits.cpp"
 assert(12 % 1 === 0);HEAP32[(($15)>>2)]=HEAP32[(($16)>>2)];HEAP32[((($15)+(4))>>2)]=HEAP32[((($16)+(4))>>2)];HEAP32[((($15)+(8))>>2)]=HEAP32[((($16)+(8))>>2)]; //@line 419 "genericunits.cpp"
 var $17=__Z14getUnitPointer23gameObjectPointerStruct($3); //@line 419 "genericunits.cpp"
 $slave=$17; //@line 419 "genericunits.cpp"
 var $18=($17|0)==0; //@line 419 "genericunits.cpp"
 if($18){label=3;break;}else{label=4;break;} //@line 419 "genericunits.cpp"
 case 3: 
 $1=0; //@line 420 "genericunits.cpp"
 label=6;break; //@line 420 "genericunits.cpp"
 case 4: 
 var $21=$slave; //@line 421 "genericunits.cpp"
 var $22=__Z12getUnitFrameP17genericUnitStruct($21); //@line 421 "genericunits.cpp"
 $slaveFrame=$22; //@line 421 "genericunits.cpp"
 var $23=$2; //@line 424 "genericunits.cpp"
 var $24=(($23+8)|0); //@line 424 "genericunits.cpp"
 var $25=HEAPF64[(($24)>>3)]; //@line 424 "genericunits.cpp"
 var $26=$myUnitFrame; //@line 424 "genericunits.cpp"
 var $27=(($26+56)|0); //@line 424 "genericunits.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 424 "genericunits.cpp"
 var $29=($28|0); //@line 424 "genericunits.cpp"
 var $30=($25)+($29); //@line 424 "genericunits.cpp"
 var $31=$slaveFrame; //@line 424 "genericunits.cpp"
 var $32=(($31+56)|0); //@line 424 "genericunits.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 424 "genericunits.cpp"
 var $34=($33|0); //@line 424 "genericunits.cpp"
 var $35=($30)-($34); //@line 424 "genericunits.cpp"
 var $36=$slave; //@line 424 "genericunits.cpp"
 var $37=(($36+8)|0); //@line 424 "genericunits.cpp"
 HEAPF64[(($37)>>3)]=$35; //@line 424 "genericunits.cpp"
 var $38=$2; //@line 426 "genericunits.cpp"
 var $39=(($38+16)|0); //@line 426 "genericunits.cpp"
 var $40=HEAPF64[(($39)>>3)]; //@line 426 "genericunits.cpp"
 var $41=$myUnitFrame; //@line 426 "genericunits.cpp"
 var $42=(($41+60)|0); //@line 426 "genericunits.cpp"
 var $43=HEAP32[(($42)>>2)]; //@line 426 "genericunits.cpp"
 var $44=($43|0); //@line 426 "genericunits.cpp"
 var $45=($40)+($44); //@line 426 "genericunits.cpp"
 var $46=$slaveFrame; //@line 426 "genericunits.cpp"
 var $47=(($46+60)|0); //@line 426 "genericunits.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 426 "genericunits.cpp"
 var $49=($48|0); //@line 426 "genericunits.cpp"
 var $50=($45)-($49); //@line 426 "genericunits.cpp"
 var $51=$slave; //@line 426 "genericunits.cpp"
 var $52=(($51+16)|0); //@line 426 "genericunits.cpp"
 HEAPF64[(($52)>>3)]=$50; //@line 426 "genericunits.cpp"
 label=5;break; //@line 428 "genericunits.cpp"
 case 5: 
 $1=1; //@line 430 "genericunits.cpp"
 label=6;break; //@line 430 "genericunits.cpp"
 case 6: 
 var $55=$1; //@line 431 "genericunits.cpp"
 STACKTOP=sp;return $55; //@line 431 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z21isUnitInsideTheScreenP17genericUnitStruct($unit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $combFrame=sp;
 $2=$unit;
 var $3=$2; //@line 440 "genericunits.cpp"
 var $4=__Z24constructSlaverFullFrameP17genericUnitStructP15frameDataStruct($3,$combFrame); //@line 440 "genericunits.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 440 "genericunits.cpp"
 case 2: 
 $1=0; //@line 440 "genericunits.cpp"
 label=8;break; //@line 440 "genericunits.cpp"
 case 3: 
 var $7=$2; //@line 444 "genericunits.cpp"
 var $8=(($7+8)|0); //@line 444 "genericunits.cpp"
 var $9=HEAPF64[(($8)>>3)]; //@line 444 "genericunits.cpp"
 var $10=(($combFrame+16)|0); //@line 444 "genericunits.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 444 "genericunits.cpp"
 var $12=($11|0); //@line 444 "genericunits.cpp"
 var $13=($9)+($12); //@line 444 "genericunits.cpp"
 var $14=(($combFrame+40)|0); //@line 444 "genericunits.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 444 "genericunits.cpp"
 var $16=($15|0); //@line 444 "genericunits.cpp"
 var $17=($13)-($16); //@line 444 "genericunits.cpp"
 var $18=($17)-(1); //@line 444 "genericunits.cpp"
 var $19=HEAPF64[((19560)>>3)]; //@line 444 "genericunits.cpp"
 var $20=$18>=$19; //@line 444 "genericunits.cpp"
 if($20){label=4;break;}else{var $65=0;label=7;break;} //@line 444 "genericunits.cpp"
 case 4: 
 var $22=HEAPF64[((19560)>>3)]; //@line 444 "genericunits.cpp"
 var $23=HEAP32[((19576)>>2)]; //@line 444 "genericunits.cpp"
 var $24=($23>>>0); //@line 444 "genericunits.cpp"
 var $25=($22)+($24); //@line 444 "genericunits.cpp"
 var $26=($25)-(1); //@line 444 "genericunits.cpp"
 var $27=$2; //@line 444 "genericunits.cpp"
 var $28=(($27+8)|0); //@line 444 "genericunits.cpp"
 var $29=HEAPF64[(($28)>>3)]; //@line 444 "genericunits.cpp"
 var $30=(($combFrame+40)|0); //@line 444 "genericunits.cpp"
 var $31=HEAP32[(($30)>>2)]; //@line 444 "genericunits.cpp"
 var $32=($31|0); //@line 444 "genericunits.cpp"
 var $33=($29)-($32); //@line 444 "genericunits.cpp"
 var $34=$26>=$33; //@line 444 "genericunits.cpp"
 if($34){label=5;break;}else{var $65=0;label=7;break;} //@line 444 "genericunits.cpp"
 case 5: 
 var $36=$2; //@line 444 "genericunits.cpp"
 var $37=(($36+16)|0); //@line 444 "genericunits.cpp"
 var $38=HEAPF64[(($37)>>3)]; //@line 444 "genericunits.cpp"
 var $39=(($combFrame+20)|0); //@line 444 "genericunits.cpp"
 var $40=HEAP32[(($39)>>2)]; //@line 444 "genericunits.cpp"
 var $41=($40|0); //@line 444 "genericunits.cpp"
 var $42=($38)+($41); //@line 444 "genericunits.cpp"
 var $43=(($combFrame+44)|0); //@line 444 "genericunits.cpp"
 var $44=HEAP32[(($43)>>2)]; //@line 444 "genericunits.cpp"
 var $45=($44|0); //@line 444 "genericunits.cpp"
 var $46=($42)-($45); //@line 444 "genericunits.cpp"
 var $47=($46)-(1); //@line 444 "genericunits.cpp"
 var $48=HEAPF64[((19568)>>3)]; //@line 444 "genericunits.cpp"
 var $49=$47>=$48; //@line 444 "genericunits.cpp"
 if($49){label=6;break;}else{var $65=0;label=7;break;} //@line 444 "genericunits.cpp"
 case 6: 
 var $51=HEAPF64[((19568)>>3)]; //@line 444 "genericunits.cpp"
 var $52=HEAP32[((19580)>>2)]; //@line 444 "genericunits.cpp"
 var $53=($52>>>0); //@line 444 "genericunits.cpp"
 var $54=($51)+($53); //@line 444 "genericunits.cpp"
 var $55=($54)-(1); //@line 444 "genericunits.cpp"
 var $56=$2; //@line 444 "genericunits.cpp"
 var $57=(($56+16)|0); //@line 444 "genericunits.cpp"
 var $58=HEAPF64[(($57)>>3)]; //@line 444 "genericunits.cpp"
 var $59=(($combFrame+44)|0); //@line 444 "genericunits.cpp"
 var $60=HEAP32[(($59)>>2)]; //@line 444 "genericunits.cpp"
 var $61=($60|0); //@line 444 "genericunits.cpp"
 var $62=($58)-($61); //@line 444 "genericunits.cpp"
 var $63=$55>=$62; //@line 444 "genericunits.cpp"
 var $65=$63;label=7;break;
 case 7: 
 var $65;
 $1=$65;
 label=8;break;
 case 8: 
 var $67=$1; //@line 452 "genericunits.cpp"
 STACKTOP=sp;return $67; //@line 452 "genericunits.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm($this,$index){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$this;
 $2=$index;
 var $3=$1;
 var $4=$2; //@line 108 "./vectorlist.h"
 var $5=($4>>>0)>=0; //@line 108 "./vectorlist.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 108 "./vectorlist.h"
 case 2: 
 var $7=$2; //@line 108 "./vectorlist.h"
 var $8=__ZN15vectorListClassI17waveGenUnitStructE10vectorSizeEv($3); //@line 108 "./vectorlist.h"
 var $9=($7>>>0)<($8>>>0); //@line 108 "./vectorlist.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 108 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE10vectorSizeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 107 "./vectorlist.h"
 var $4=HEAP32[(($3)>>2)]; //@line 107 "./vectorlist.h"
 STACKTOP=sp;return $4; //@line 107 "./vectorlist.h"
}


function ___cxx_global_var_init198(){
 var label=0;


 __ZN15directDrawClassC1Ev(20656); //@line 56 "globals.cpp"
 var $1=_atexit((380),20656,___dso_handle); //@line 56 "globals.cpp"
 return; //@line 56 "globals.cpp"
}


function __ZN15directDrawClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15directDrawClassC2Ev($2); //@line 222 "./ddwrap.h"
 STACKTOP=sp;return; //@line 222 "./ddwrap.h"
}


function ___cxx_global_var_init1199(){
 var label=0;


 __ZN15diKeyboardClassC1Ev(19440); //@line 59 "globals.cpp"
 var $1=_atexit((284),19440,___dso_handle); //@line 59 "globals.cpp"
 return; //@line 59 "globals.cpp"
}


function __ZN15diKeyboardClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15diKeyboardClassC2Ev($2); //@line 141 "./diwrap.h"
 STACKTOP=sp;return; //@line 141 "./diwrap.h"
}


function __ZN15diKeyboardClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15diKeyboardClassD2Ev($2); //@line 142 "./diwrap.h"
 STACKTOP=sp;return; //@line 142 "./diwrap.h"
}


function ___cxx_global_var_init2200(){
 var label=0;


 __ZN12diMouseClassC1Ev(19328); //@line 60 "globals.cpp"
 var $1=_atexit((12),19328,___dso_handle); //@line 60 "globals.cpp"
 return; //@line 60 "globals.cpp"
}


function __ZN12diMouseClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN12diMouseClassC2Ev($2); //@line 178 "./diwrap.h"
 STACKTOP=sp;return; //@line 178 "./diwrap.h"
}


function __ZN12diMouseClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN12diMouseClassD2Ev($2); //@line 179 "./diwrap.h"
 STACKTOP=sp;return; //@line 179 "./diwrap.h"
}


function ___cxx_global_var_init3201(){
 var label=0;


 __ZN12consoleClassC1Ev(19856); //@line 63 "globals.cpp"
 var $1=_atexit((212),19856,___dso_handle); //@line 63 "globals.cpp"
 return; //@line 63 "globals.cpp"
}


function __ZN12consoleClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN12consoleClassC2Ev($2); //@line 71 "./console.h"
 STACKTOP=sp;return; //@line 71 "./console.h"
}


function __ZN12consoleClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN12consoleClassD2Ev($2); //@line 72 "./console.h"
 STACKTOP=sp;return; //@line 72 "./console.h"
}


function ___cxx_global_var_init4202(){
 var label=0;


 __ZN14conLoggerClassC1Ev(19416); //@line 64 "globals.cpp"
 var $1=_atexit((132),19416,___dso_handle); //@line 64 "globals.cpp"
 return; //@line 64 "globals.cpp"
}


function __ZN14conLoggerClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN14conLoggerClassC2Ev($2); //@line 58 "./con-logger.h"
 STACKTOP=sp;return; //@line 58 "./con-logger.h"
}


function __ZN14conLoggerClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN14conLoggerClassD2Ev($2); //@line 59 "./con-logger.h"
 STACKTOP=sp;return; //@line 59 "./con-logger.h"
}


function ___cxx_global_var_init5203(){
 var label=0;


 __ZN16timeWrapperClassC1Ev(18568); //@line 85 "globals.cpp"
 var $1=_atexit((130),18568,___dso_handle); //@line 85 "globals.cpp"
 return; //@line 85 "globals.cpp"
}


function __ZN16timeWrapperClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN16timeWrapperClassC2Ev($2); //@line 67 "./timewrap.h"
 STACKTOP=sp;return; //@line 67 "./timewrap.h"
}


function __ZN16timeWrapperClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN16timeWrapperClassD2Ev($2); //@line 68 "./timewrap.h"
 STACKTOP=sp;return; //@line 68 "./timewrap.h"
}


function ___cxx_global_var_init6204(){
 var label=0;


 __ZN13mainLoopClassC1Ev(19376); //@line 112 "globals.cpp"
 var $1=_atexit((444),19376,___dso_handle); //@line 112 "globals.cpp"
 return; //@line 112 "globals.cpp"
}


function __ZN13mainLoopClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN13mainLoopClassC2Ev($2); //@line 51 "./mainloop.h"
 STACKTOP=sp;return; //@line 51 "./mainloop.h"
}


function __ZN13mainLoopClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN13mainLoopClassD2Ev($2); //@line 52 "./mainloop.h"
 STACKTOP=sp;return; //@line 52 "./mainloop.h"
}


function __Z15initializeFirstv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=__ZN14conLoggerClass4initEPcP12consoleClassii(19416,13424,0,100,200); //@line 130 "globals.cpp"
 var $3=__ZN14conLoggerClass7logLineEPcbbbz(19416,19944,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 131 "globals.cpp"
 var $4=__ZN14conLoggerClass7logLineEPcbbbz(19416,3392,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 132 "globals.cpp"
 var $5=__ZN14conLoggerClass7logLineEPcbbbz(19416,2760,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 134 "globals.cpp"
 var $6=__ZN14conLoggerClass7logLineEPcbbbz(19416,16304,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=352,tempVarArgs)); STACKTOP=tempVarArgs; //@line 138 "globals.cpp"
 var $7=HEAP8[(400)]; //@line 142 "globals.cpp"
 var $8=(($7)&1); //@line 142 "globals.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 142 "globals.cpp"
 case 2: 
 var $10=__ZN14conLoggerClass7logLineEPcbbbz(19416,15632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 142 "globals.cpp"
 label=3;break; //@line 142 "globals.cpp"
 case 3: 
 var $12=__Z14logDateAndTimePc(15160); //@line 144 "globals.cpp"
 var $13=__ZN18scriptManagerClass4initEv(18600); //@line 150 "globals.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 150 "globals.cpp"
 case 4: 
 var $15=__Z8closeAllPc(14656); //@line 151 "globals.cpp"
 $1=0; //@line 152 "globals.cpp"
 label=27;break; //@line 152 "globals.cpp"
 case 5: 
 var $17=__Z23setupGameDataStructuresv(); //@line 158 "globals.cpp"
 if($17){label=7;break;}else{label=6;break;} //@line 158 "globals.cpp"
 case 6: 
 var $19=__Z8closeAllPc(14224); //@line 159 "globals.cpp"
 $1=0; //@line 160 "globals.cpp"
 label=27;break; //@line 160 "globals.cpp"
 case 7: 
 var $21=_SDL_Init(32); //@line 174 "globals.cpp"
 var $22=__ZN15directDrawClass4initEv(20656); //@line 177 "globals.cpp"
 if($22){label=9;break;}else{label=8;break;} //@line 177 "globals.cpp"
 case 8: 
 var $24=__Z8closeAllPc(13936); //@line 179 "globals.cpp"
 $1=0; //@line 180 "globals.cpp"
 label=27;break; //@line 180 "globals.cpp"
 case 9: 
 var $26=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,13656,0); //@line 185 "globals.cpp"
 var $27=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,13352,0); //@line 186 "globals.cpp"
 var $28=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,13088,0); //@line 187 "globals.cpp"
 var $29=__ZN15directDrawClass12setVideoModeEiiii(20656,$26,$27,$28,1); //@line 187 "globals.cpp"
 if($29){label=11;break;}else{label=10;break;} //@line 187 "globals.cpp"
 case 10: 
 var $31=__Z8closeAllPc(12792); //@line 189 "globals.cpp"
 $1=0; //@line 190 "globals.cpp"
 label=27;break; //@line 190 "globals.cpp"
 case 11: 
 var $33=HEAP32[((20656)>>2)]; //@line 193 "globals.cpp"
 var $34=(($33+44)|0); //@line 193 "globals.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 193 "globals.cpp"
 var $36=FUNCTION_TABLE[$35](20656,0); //@line 193 "globals.cpp"
 var $37=__ZN15directDrawClass4flipEv(20656); //@line 194 "globals.cpp"
 var $38=__Z23executePostInstallTasksb(1); //@line 198 "globals.cpp"
 if($38){label=13;break;}else{label=12;break;} //@line 198 "globals.cpp"
 case 12: 
 var $40=__Z8closeAllPc(12512); //@line 200 "globals.cpp"
 $1=0; //@line 201 "globals.cpp"
 label=27;break; //@line 201 "globals.cpp"
 case 13: 
 var $42=__ZN15diKeyboardClass4initEv(19440); //@line 227 "globals.cpp"
 if($42){label=15;break;}else{label=14;break;} //@line 227 "globals.cpp"
 case 14: 
 var $44=__Z8closeAllPc(12136); //@line 229 "globals.cpp"
 $1=0; //@line 230 "globals.cpp"
 label=27;break; //@line 230 "globals.cpp"
 case 15: 
 var $46=__ZN12diMouseClass4initEv(19328); //@line 233 "globals.cpp"
 if($46){label=17;break;}else{label=16;break;} //@line 233 "globals.cpp"
 case 16: 
 var $48=__Z8closeAllPc(11776); //@line 235 "globals.cpp"
 $1=0; //@line 236 "globals.cpp"
 label=27;break; //@line 236 "globals.cpp"
 case 17: 
 var $50=__ZN12diMouseClass10setUpMouseEv(19328); //@line 239 "globals.cpp"
 if($50){label=18;break;}else{label=19;break;} //@line 239 "globals.cpp"
 case 18: 
 var $52=__ZN15diKeyboardClass13setUpKeyboardEv(19440); //@line 239 "globals.cpp"
 if($52){label=20;break;}else{label=19;break;} //@line 239 "globals.cpp"
 case 19: 
 var $54=__Z8closeAllPc(11448); //@line 241 "globals.cpp"
 $1=0; //@line 242 "globals.cpp"
 label=27;break; //@line 242 "globals.cpp"
 case 20: 
 var $56=__ZN12consoleClass4initEiii(19856,400,100,200); //@line 245 "globals.cpp"
 if($56){label=22;break;}else{label=21;break;} //@line 245 "globals.cpp"
 case 21: 
 var $58=__Z8closeAllPc(10888); //@line 247 "globals.cpp"
 $1=0; //@line 248 "globals.cpp"
 label=27;break; //@line 248 "globals.cpp"
 case 22: 
 var $60=__ZN16timeWrapperClass4initEv(18568); //@line 252 "globals.cpp"
 if($60){label=24;break;}else{label=23;break;} //@line 252 "globals.cpp"
 case 23: 
 var $62=__Z8closeAllPc(10536); //@line 254 "globals.cpp"
 $1=0; //@line 255 "globals.cpp"
 label=27;break; //@line 255 "globals.cpp"
 case 24: 
 var $64=__Z17setUpProgramFontsb(0); //@line 292 "globals.cpp"
 if($64){label=26;break;}else{label=25;break;} //@line 292 "globals.cpp"
 case 25: 
 var $66=__ZN14conLoggerClass7logLineEPcbbbz(19416,10264,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 293 "globals.cpp"
 label=26;break; //@line 294 "globals.cpp"
 case 26: 
 $1=1; //@line 296 "globals.cpp"
 label=27;break; //@line 296 "globals.cpp"
 case 27: 
 var $69=$1; //@line 297 "globals.cpp"
 STACKTOP=sp;return $69; //@line 297 "globals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14logDateAndTimePc($stringToUse){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$stringToUse;
 var $2=__ZN14conLoggerClass7logLineEPcbbbz(19416,9392,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 439 "globals.cpp"
 var $3=$1; //@line 440 "globals.cpp"
 var $4=__ZN14conLoggerClass7logLineEPcbbbz(19416,$3,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=9152,HEAP32[(((tempVarArgs)+(8))>>2)]=9152,tempVarArgs)); STACKTOP=tempVarArgs; //@line 440 "globals.cpp"
 STACKTOP=sp;return 1; //@line 442 "globals.cpp"
}


function __Z8closeAllPc($errorText){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$errorText;
 var $2=__Z14logDateAndTimePc(10056); //@line 340 "globals.cpp"
 var $3=$1; //@line 342 "globals.cpp"
 var $4=($3|0)!=0; //@line 342 "globals.cpp"
 if($4){label=2;break;}else{label=3;break;} //@line 342 "globals.cpp"
 case 2: 
 var $6=$1; //@line 342 "globals.cpp"
 var $7=__ZN14conLoggerClass7logLineEPcbbbz(19416,$6,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 342 "globals.cpp"
 label=3;break; //@line 342 "globals.cpp"
 case 3: 
 var $9=__ZN16optionsFileClass7isReadyEv(19264); //@line 345 "globals.cpp"
 if($9){label=4;break;}else{label=6;break;} //@line 345 "globals.cpp"
 case 4: 
 var $11=__ZN16timeWrapperClass7isReadyEv(18568); //@line 345 "globals.cpp"
 if($11){label=5;break;}else{label=6;break;} //@line 345 "globals.cpp"
 case 5: 
 var $13=__ZN16timeWrapperClass7getTimeEPb(18568,0); //@line 347 "globals.cpp"
 var $14=(((($13>>>0))/(1000))&-1); //@line 347 "globals.cpp"
 var $15=__ZN16optionsFileClass17getOptionsPointerEv(19264); //@line 346 "globals.cpp"
 var $16=(($15+16)|0); //@line 346 "globals.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 346 "globals.cpp"
 var $18=((($17)+($14))|0); //@line 346 "globals.cpp"
 HEAP32[(($16)>>2)]=$18; //@line 346 "globals.cpp"
 label=6;break; //@line 348 "globals.cpp"
 case 6: 
 var $20=__ZN16timeWrapperClass3endEv(18568); //@line 349 "globals.cpp"
 var $21=__ZN16optionsFileClass7isReadyEv(19264); //@line 352 "globals.cpp"
 if($21){label=7;break;}else{label=10;break;} //@line 352 "globals.cpp"
 case 7: 
 var $23=__ZN16optionsFileClass4saveEv(19264); //@line 353 "globals.cpp"
 if($23){label=9;break;}else{label=8;break;} //@line 353 "globals.cpp"
 case 8: 
 var $25=__ZN14conLoggerClass7logLineEPcbbbz(19416,9848,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 354 "globals.cpp"
 label=9;break; //@line 354 "globals.cpp"
 case 9: 
 var $27=__ZN16optionsFileClass3endEv(19264); //@line 355 "globals.cpp"
 label=10;break; //@line 356 "globals.cpp"
 case 10: 
 var $29=__ZN15vectorListClassI16playerUnitStructE3endEv(19240); //@line 359 "globals.cpp"
 var $30=__ZN15vectorListClassI15enemyUnitStructE3endEv(19752); //@line 360 "globals.cpp"
 var $31=__ZN15vectorListClassI16bulletUnitStructE3endEv(19920); //@line 361 "globals.cpp"
 var $32=__Z24deinitializeVirtualWallsv(); //@line 362 "globals.cpp"
 var $33=__Z18closeResourcesInfov(); //@line 363 "globals.cpp"
 var $34=__Z23destroyAllResourcesDatav(); //@line 364 "globals.cpp"
 var $35=__ZN18scriptManagerClass5closeEv(18600); //@line 367 "globals.cpp"
 var $36=__Z17setUpProgramFontsb(1); //@line 368 "globals.cpp"
 var $37=__ZN12consoleClass3endEv(19856); //@line 369 "globals.cpp"
 var $38=__ZN12diMouseClass3endEv(19328); //@line 370 "globals.cpp"
 var $39=__ZN15diKeyboardClass3endEv(19440); //@line 371 "globals.cpp"
 var $40=__ZN15directDrawClass14closeVideoModeEv(20656); //@line 375 "globals.cpp"
 var $41=__ZN15directDrawClass3endEv(20656); //@line 376 "globals.cpp"
 var $42=__ZN14conLoggerClass7logLineEPcbbbz(19416,9624,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 379 "globals.cpp"
 var $43=__ZN14conLoggerClass3endEv(19416); //@line 380 "globals.cpp"
 STACKTOP=sp;return 1; //@line 382 "globals.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18checkLostResourcesv(){
 var label=0;


 return 1; //@line 332 "globals.cpp"
}


function __ZN16timeWrapperClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 70 "./timewrap.h"
 var $4=HEAP8[($3)]; //@line 70 "./timewrap.h"
 var $5=(($4)&1); //@line 70 "./timewrap.h"
 STACKTOP=sp;return $5; //@line 70 "./timewrap.h"
}


function __Z10globalExitv(){
 var label=0;


 var $1=HEAP32[((19376)>>2)]; //@line 406 "globals.cpp"
 var $2=(($1+16)|0); //@line 406 "globals.cpp"
 var $3=HEAP32[(($2)>>2)]; //@line 406 "globals.cpp"
 FUNCTION_TABLE[$3](19376); //@line 406 "globals.cpp"
 return 1; //@line 408 "globals.cpp"
}


function __ZN13mainLoopClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 52 "./mainloop.h"
 __ZN16loopWrapperClassD2Ev($3); //@line 52 "./mainloop.h"
 STACKTOP=sp;return; //@line 52 "./mainloop.h"
}


function __ZN16loopWrapperClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 60 "./loopwrap.h"
 HEAP32[(($5)>>2)]=16824; //@line 60 "./loopwrap.h"
 var $6=$4; //@line 60 "./loopwrap.h"
 var $7=HEAP32[(($6)>>2)]; //@line 60 "./loopwrap.h"
 var $8=(($7+12)|0); //@line 60 "./loopwrap.h"
 var $9=HEAP32[(($8)>>2)]; //@line 60 "./loopwrap.h"
 var $10=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 60 "./loopwrap.h"
 case 2: 
 var $12=(($4+8)|0); //@line 60 "./loopwrap.h"
 __ZN16timeWrapperClassD1Ev($12); //@line 60 "./loopwrap.h"
 STACKTOP=sp;return; //@line 60 "./loopwrap.h"
 case 3: 
 var $14$0 = ___cxa_find_matching_catch(-1, -1); var $14$1 = tempRet0;
 var $15=$14$0;
 $2=$15; //@line 60 "./loopwrap.h"
 var $16=$14$1;
 $3=$16; //@line 60 "./loopwrap.h"
 var $17=(($4+8)|0); //@line 60 "./loopwrap.h"
 (function() { try { __THREW__ = 0; return __ZN16timeWrapperClassD1Ev($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 60 "./loopwrap.h"
 case 4: 
 label=5;break; //@line 60 "./loopwrap.h"
 case 5: 
 var $20=$2; //@line 60 "./loopwrap.h"
 var $21=$3; //@line 60 "./loopwrap.h"
 var $22$0=$20;
 var $22$1=0;
 var $23$0=$22$0;
 var $23$1=$21;
 ___resumeException($23$0) //@line 60 "./loopwrap.h"
 case 6: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev(); //@line 60 "./loopwrap.h"
 throw "Reached an unreachable!"; //@line 60 "./loopwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13mainLoopClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 51 "./mainloop.h"
 __ZN16loopWrapperClassC2Ev($3); //@line 51 "./mainloop.h"
 var $4=$2; //@line 51 "./mainloop.h"
 HEAP32[(($4)>>2)]=17368; //@line 51 "./mainloop.h"
 STACKTOP=sp;return; //@line 51 "./mainloop.h"
}


function __ZN16loopWrapperClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 59 "./loopwrap.h"
 HEAP32[(($3)>>2)]=16824; //@line 59 "./loopwrap.h"
 var $4=(($2+8)|0); //@line 59 "./loopwrap.h"
 __ZN16timeWrapperClassC1Ev($4); //@line 59 "./loopwrap.h"
 STACKTOP=sp;return; //@line 59 "./loopwrap.h"
}


function __ZN16timeWrapperClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 68 "./timewrap.h"
 HEAP32[(($3)>>2)]=16776; //@line 68 "./timewrap.h"
 var $4=__ZN16timeWrapperClass3endEv($2); //@line 68 "./timewrap.h"
 STACKTOP=sp;return; //@line 68 "./timewrap.h"
}


function __ZN16timeWrapperClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN16timeWrapperClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 68 "./timewrap.h"
 case 2: 
 var $6=$4; //@line 68 "./timewrap.h"
 __ZdlPv($6); //@line 68 "./timewrap.h"
 STACKTOP=sp;return; //@line 68 "./timewrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 68 "./timewrap.h"
 var $10=$8$1;
 $3=$10; //@line 68 "./timewrap.h"
 var $11=$4; //@line 68 "./timewrap.h"
 __ZdlPv($11); //@line 68 "./timewrap.h"
 label=4;break; //@line 68 "./timewrap.h"
 case 4: 
 var $13=$2; //@line 68 "./timewrap.h"
 var $14=$3; //@line 68 "./timewrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 68 "./timewrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 67 "./timewrap.h"
 HEAP32[(($3)>>2)]=16776; //@line 67 "./timewrap.h"
 var $4=(($2+4)|0); //@line 67 "./timewrap.h"
 HEAP8[($4)]=0; //@line 67 "./timewrap.h"
 STACKTOP=sp;return; //@line 67 "./timewrap.h"
}


function __ZN14conLoggerClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN14conLoggerClass3endEv($2); //@line 59 "./con-logger.h"
 STACKTOP=sp;return; //@line 59 "./con-logger.h"
}


function __ZN14conLoggerClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 58 "./con-logger.h"
 HEAP8[($3)]=0; //@line 58 "./con-logger.h"
 STACKTOP=sp;return; //@line 58 "./con-logger.h"
}


function __ZN12consoleClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=(function() { try { __THREW__ = 0; return __ZN12consoleClass3endEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 72 "./console.h"
 case 2: 
 var $7=(($4)|0); //@line 72 "./console.h"
 __ZN15scrollTextClassD1Ev($7); //@line 72 "./console.h"
 STACKTOP=sp;return; //@line 72 "./console.h"
 case 3: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1); var $9$1 = tempRet0;
 var $10=$9$0;
 $2=$10; //@line 72 "./console.h"
 var $11=$9$1;
 $3=$11; //@line 72 "./console.h"
 var $12=(($4)|0); //@line 72 "./console.h"
 (function() { try { __THREW__ = 0; return __ZN15scrollTextClassD1Ev($12) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 72 "./console.h"
 case 4: 
 label=5;break; //@line 72 "./console.h"
 case 5: 
 var $15=$2; //@line 72 "./console.h"
 var $16=$3; //@line 72 "./console.h"
 var $17$0=$15;
 var $17$1=0;
 var $18$0=$17$0;
 var $18$1=$16;
 ___resumeException($18$0) //@line 72 "./console.h"
 case 6: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1,0); var $20$1 = tempRet0;
 __ZSt9terminatev(); //@line 72 "./console.h"
 throw "Reached an unreachable!"; //@line 72 "./console.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15scrollTextClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15scrollTextClassD2Ev($2); //@line 56 "./scrolltext.h"
 STACKTOP=sp;return; //@line 56 "./scrolltext.h"
}


function __ZN15scrollTextClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=__ZN15scrollTextClass3endEv($2); //@line 56 "./scrolltext.h"
 STACKTOP=sp;return; //@line 56 "./scrolltext.h"
}


function __ZN12consoleClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 71 "./console.h"
 __ZN15scrollTextClassC1Ev($3); //@line 71 "./console.h"
 var $4=(($2+36)|0); //@line 71 "./console.h"
 HEAP8[($4)]=0; //@line 71 "./console.h"
 STACKTOP=sp;return; //@line 71 "./console.h"
}


function __ZN15scrollTextClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15scrollTextClassC2Ev($2); //@line 55 "./scrolltext.h"
 STACKTOP=sp;return; //@line 55 "./scrolltext.h"
}


function __ZN15scrollTextClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2)|0); //@line 55 "./scrolltext.h"
 HEAP8[($3)]=0; //@line 55 "./scrolltext.h"
 STACKTOP=sp;return; //@line 55 "./scrolltext.h"
}


function __ZN12diMouseClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 179 "./diwrap.h"
 HEAP32[(($5)>>2)]=17568; //@line 179 "./diwrap.h"
 var $6=(function() { try { __THREW__ = 0; return __ZN12diMouseClass3endEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 179 "./diwrap.h"
 case 2: 
 var $8=$4; //@line 179 "./diwrap.h"
 __ZN20directInputBaseClassD2Ev($8); //@line 179 "./diwrap.h"
 STACKTOP=sp;return; //@line 179 "./diwrap.h"
 case 3: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 var $11=$10$0;
 $2=$11; //@line 179 "./diwrap.h"
 var $12=$10$1;
 $3=$12; //@line 179 "./diwrap.h"
 var $13=$4; //@line 179 "./diwrap.h"
 (function() { try { __THREW__ = 0; return __ZN20directInputBaseClassD2Ev($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 179 "./diwrap.h"
 case 4: 
 label=5;break; //@line 179 "./diwrap.h"
 case 5: 
 var $16=$2; //@line 179 "./diwrap.h"
 var $17=$3; //@line 179 "./diwrap.h"
 var $18$0=$16;
 var $18$1=0;
 var $19$0=$18$0;
 var $19$1=$17;
 ___resumeException($19$0) //@line 179 "./diwrap.h"
 case 6: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1,0); var $21$1 = tempRet0;
 __ZSt9terminatev(); //@line 179 "./diwrap.h"
 throw "Reached an unreachable!"; //@line 179 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20directInputBaseClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 115 "./diwrap.h"
}


function __ZN12diMouseClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN12diMouseClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 179 "./diwrap.h"
 case 2: 
 var $6=$4; //@line 179 "./diwrap.h"
 __ZdlPv($6); //@line 179 "./diwrap.h"
 STACKTOP=sp;return; //@line 179 "./diwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 179 "./diwrap.h"
 var $10=$8$1;
 $3=$10; //@line 179 "./diwrap.h"
 var $11=$4; //@line 179 "./diwrap.h"
 __ZdlPv($11); //@line 179 "./diwrap.h"
 label=4;break; //@line 179 "./diwrap.h"
 case 4: 
 var $13=$2; //@line 179 "./diwrap.h"
 var $14=$3; //@line 179 "./diwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 179 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12diMouseClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 181 "./diwrap.h"
 var $4=HEAP8[($3)]; //@line 181 "./diwrap.h"
 var $5=(($4)&1); //@line 181 "./diwrap.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 181 "./diwrap.h"
 case 2: 
 var $7=(($2+5)|0); //@line 181 "./diwrap.h"
 var $8=HEAP8[($7)]; //@line 181 "./diwrap.h"
 var $9=(($8)&1); //@line 181 "./diwrap.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 181 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12diMouseClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 178 "./diwrap.h"
 __ZN20directInputBaseClassC2Ev($3); //@line 178 "./diwrap.h"
 var $4=$2; //@line 178 "./diwrap.h"
 HEAP32[(($4)>>2)]=17568; //@line 178 "./diwrap.h"
 var $5=(($2+4)|0); //@line 178 "./diwrap.h"
 HEAP8[($5)]=0; //@line 178 "./diwrap.h"
 var $6=(($2+5)|0); //@line 178 "./diwrap.h"
 HEAP8[($6)]=0; //@line 178 "./diwrap.h"
 var $7=(($2+8)|0); //@line 178 "./diwrap.h"
 var $8=(($2+28)|0); //@line 178 "./diwrap.h"
 STACKTOP=sp;return; //@line 178 "./diwrap.h"
}


function __ZN20directInputBaseClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 114 "./diwrap.h"
 HEAP32[(($3)>>2)]=16744; //@line 114 "./diwrap.h"
 STACKTOP=sp;return; //@line 114 "./diwrap.h"
}


function __ZN20directInputBaseClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN20directInputBaseClassD2Ev($2); //@line 115 "./diwrap.h"
 STACKTOP=sp;return; //@line 115 "./diwrap.h"
}


function __ZN20directInputBaseClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN20directInputBaseClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 115 "./diwrap.h"
 case 2: 
 var $6=$4; //@line 115 "./diwrap.h"
 __ZdlPv($6); //@line 115 "./diwrap.h"
 STACKTOP=sp;return; //@line 115 "./diwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 115 "./diwrap.h"
 var $10=$8$1;
 $3=$10; //@line 115 "./diwrap.h"
 var $11=$4; //@line 115 "./diwrap.h"
 __ZdlPv($11); //@line 115 "./diwrap.h"
 label=4;break; //@line 115 "./diwrap.h"
 case 4: 
 var $13=$2; //@line 115 "./diwrap.h"
 var $14=$3; //@line 115 "./diwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 115 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 142 "./diwrap.h"
 HEAP32[(($5)>>2)]=17080; //@line 142 "./diwrap.h"
 var $6=(function() { try { __THREW__ = 0; return __ZN15diKeyboardClass3endEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 142 "./diwrap.h"
 case 2: 
 var $8=$4; //@line 142 "./diwrap.h"
 __ZN20directInputBaseClassD2Ev($8); //@line 142 "./diwrap.h"
 STACKTOP=sp;return; //@line 142 "./diwrap.h"
 case 3: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 var $11=$10$0;
 $2=$11; //@line 142 "./diwrap.h"
 var $12=$10$1;
 $3=$12; //@line 142 "./diwrap.h"
 var $13=$4; //@line 142 "./diwrap.h"
 (function() { try { __THREW__ = 0; return __ZN20directInputBaseClassD2Ev($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 142 "./diwrap.h"
 case 4: 
 label=5;break; //@line 142 "./diwrap.h"
 case 5: 
 var $16=$2; //@line 142 "./diwrap.h"
 var $17=$3; //@line 142 "./diwrap.h"
 var $18$0=$16;
 var $18$1=0;
 var $19$0=$18$0;
 var $19$1=$17;
 ___resumeException($19$0) //@line 142 "./diwrap.h"
 case 6: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1,0); var $21$1 = tempRet0;
 __ZSt9terminatev(); //@line 142 "./diwrap.h"
 throw "Reached an unreachable!"; //@line 142 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN15diKeyboardClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 142 "./diwrap.h"
 case 2: 
 var $6=$4; //@line 142 "./diwrap.h"
 __ZdlPv($6); //@line 142 "./diwrap.h"
 STACKTOP=sp;return; //@line 142 "./diwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 142 "./diwrap.h"
 var $10=$8$1;
 $3=$10; //@line 142 "./diwrap.h"
 var $11=$4; //@line 142 "./diwrap.h"
 __ZdlPv($11); //@line 142 "./diwrap.h"
 label=4;break; //@line 142 "./diwrap.h"
 case 4: 
 var $13=$2; //@line 142 "./diwrap.h"
 var $14=$3; //@line 142 "./diwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 142 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 144 "./diwrap.h"
 var $4=HEAP8[($3)]; //@line 144 "./diwrap.h"
 var $5=(($4)&1); //@line 144 "./diwrap.h"
 if($5){label=2;break;}else{var $11=0;label=3;break;} //@line 144 "./diwrap.h"
 case 2: 
 var $7=(($2+5)|0); //@line 144 "./diwrap.h"
 var $8=HEAP8[($7)]; //@line 144 "./diwrap.h"
 var $9=(($8)&1); //@line 144 "./diwrap.h"
 var $11=$9;label=3;break;
 case 3: 
 var $11;
 STACKTOP=sp;return $11; //@line 144 "./diwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15diKeyboardClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 141 "./diwrap.h"
 __ZN20directInputBaseClassC2Ev($3); //@line 141 "./diwrap.h"
 var $4=$2; //@line 141 "./diwrap.h"
 HEAP32[(($4)>>2)]=17080; //@line 141 "./diwrap.h"
 var $5=(($2+4)|0); //@line 141 "./diwrap.h"
 HEAP8[($5)]=0; //@line 141 "./diwrap.h"
 var $6=(($2+5)|0); //@line 141 "./diwrap.h"
 HEAP8[($6)]=0; //@line 141 "./diwrap.h"
 STACKTOP=sp;return; //@line 141 "./diwrap.h"
}


function __ZN15directDrawClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 220 "./ddwrap.h"
 __ZN14ddSurfaceClassC2Ev($3); //@line 220 "./ddwrap.h"
 var $4=$2; //@line 220 "./ddwrap.h"
 HEAP32[(($4)>>2)]=16952; //@line 220 "./ddwrap.h"
 var $5=(($2+36)|0); //@line 220 "./ddwrap.h"
 HEAP8[($5)]=0; //@line 220 "./ddwrap.h"
 var $6=(($2+37)|0); //@line 220 "./ddwrap.h"
 HEAP8[($6)]=0; //@line 220 "./ddwrap.h"
 var $7=$2; //@line 221 "./ddwrap.h"
 var $8=(($7+20)|0); //@line 221 "./ddwrap.h"
 HEAP8[($8)]=1; //@line 221 "./ddwrap.h"
 STACKTOP=sp;return; //@line 222 "./ddwrap.h"
}


function __ZN14ddSurfaceClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 126 "./ddwrap.h"
 HEAP32[(($3)>>2)]=17184; //@line 126 "./ddwrap.h"
 var $4=(($2+21)|0); //@line 126 "./ddwrap.h"
 HEAP8[($4)]=0; //@line 126 "./ddwrap.h"
 var $5=(($2+28)|0); //@line 126 "./ddwrap.h"
 HEAP8[($5)]=0; //@line 126 "./ddwrap.h"
 STACKTOP=sp;return; //@line 126 "./ddwrap.h"
}


function __GLOBAL__I_a207(){
 var label=0;


 ___cxx_global_var_init198(); //@line 126 "globals.cpp"
 ___cxx_global_var_init1199(); //@line 126 "globals.cpp"
 ___cxx_global_var_init2200(); //@line 126 "globals.cpp"
 ___cxx_global_var_init3201(); //@line 126 "globals.cpp"
 ___cxx_global_var_init4202(); //@line 126 "globals.cpp"
 ___cxx_global_var_init5203(); //@line 126 "globals.cpp"
 ___cxx_global_var_init6204(); //@line 126 "globals.cpp"
 return; //@line 126 "globals.cpp"
}


function __Z27headLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$unit;
 var $2=$1; //@line 38 "humanheadai.cpp"
 var $3=(($2)|0); //@line 38 "humanheadai.cpp"
 var $4=(($3+224)|0); //@line 38 "humanheadai.cpp"
 var $5=$4; //@line 38 "humanheadai.cpp"
 var $6=(($5)|0); //@line 38 "humanheadai.cpp"
 var $7=HEAP8[($6)]; //@line 38 "humanheadai.cpp"
 var $8=(($7)&1); //@line 38 "humanheadai.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 38 "humanheadai.cpp"
 case 2: 
 var $10=$1; //@line 40 "humanheadai.cpp"
 var $11=(($10)|0); //@line 40 "humanheadai.cpp"
 var $12=(($11+224)|0); //@line 40 "humanheadai.cpp"
 var $13=$12; //@line 40 "humanheadai.cpp"
 var $14=(($13)|0); //@line 40 "humanheadai.cpp"
 HEAP8[($14)]=0; //@line 40 "humanheadai.cpp"
 var $15=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(12400,0); //@line 44 "humanheadai.cpp"
 var $16=$1; //@line 44 "humanheadai.cpp"
 var $17=(($16)|0); //@line 44 "humanheadai.cpp"
 var $18=$17; //@line 44 "humanheadai.cpp"
 var $19=(($18+88)|0); //@line 44 "humanheadai.cpp"
 HEAP32[(($19)>>2)]=$15; //@line 44 "humanheadai.cpp"
 label=3;break; //@line 45 "humanheadai.cpp"
 case 3: 
 STACKTOP=sp;return 1; //@line 48 "humanheadai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13IntroLoopCode9drawFrameEv(){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $buffer;
 var $color=sp;
 var $srf;
 var $x=(sp)+(8);
 var $y=(sp)+(16);
 var $w=(sp)+(24);
 var $h=(sp)+(32);
 var $1=__Z24getSurfaceByResourceNamePc(12208); //@line 73 "introcode.cpp"
 $buffer=$1; //@line 73 "introcode.cpp"
 var $2=HEAP32[((20616)>>2)]; //@line 94 "introcode.cpp"
 switch(($2|0)){case 2:case 1:case 0:{ label=2;break;}case 5:case 4:case 3:{ label=3;break;}default:{label=4;break;}}break;
 case 2: 
 var $4=__Z24getSurfaceByResourceNamePc(15192); //@line 98 "introcode.cpp"
 var $5=$4; //@line 98 "introcode.cpp"
 $srf=$5; //@line 98 "introcode.cpp"
 var $6=$buffer; //@line 101 "introcode.cpp"
 var $7=$6; //@line 101 "introcode.cpp"
 var $8=$7; //@line 101 "introcode.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 101 "introcode.cpp"
 var $10=(($9+52)|0); //@line 101 "introcode.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 101 "introcode.cpp"
 var $12=FUNCTION_TABLE[$11]($7,255,255,255,$color); //@line 101 "introcode.cpp"
 var $13=$buffer; //@line 102 "introcode.cpp"
 var $14=$13; //@line 102 "introcode.cpp"
 var $15=$14; //@line 102 "introcode.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 102 "introcode.cpp"
 var $17=(($16+44)|0); //@line 102 "introcode.cpp"
 var $18=HEAP32[(($17)>>2)]; //@line 102 "introcode.cpp"
 var $19=HEAP32[(($color)>>2)]; //@line 102 "introcode.cpp"
 var $20=FUNCTION_TABLE[$18]($14,$19); //@line 102 "introcode.cpp"
 var $21=$buffer; //@line 105 "introcode.cpp"
 var $22=$21; //@line 105 "introcode.cpp"
 var $23=$22; //@line 105 "introcode.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 105 "introcode.cpp"
 var $25=(($24+8)|0); //@line 105 "introcode.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 105 "introcode.cpp"
 var $27=$srf; //@line 105 "introcode.cpp"
 var $28=$buffer; //@line 106 "introcode.cpp"
 var $29=$28; //@line 106 "introcode.cpp"
 var $30=$29; //@line 106 "introcode.cpp"
 var $31=HEAP32[(($30)>>2)]; //@line 106 "introcode.cpp"
 var $32=(($31+80)|0); //@line 106 "introcode.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 106 "introcode.cpp"
 var $34=FUNCTION_TABLE[$33]($29); //@line 106 "introcode.cpp"
 var $35=$srf; //@line 106 "introcode.cpp"
 var $36=$35; //@line 106 "introcode.cpp"
 var $37=HEAP32[(($36)>>2)]; //@line 106 "introcode.cpp"
 var $38=(($37+80)|0); //@line 106 "introcode.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 106 "introcode.cpp"
 var $40=FUNCTION_TABLE[$39]($35); //@line 106 "introcode.cpp"
 var $41=((($34)-($40))|0); //@line 106 "introcode.cpp"
 var $42=(((($41|0))/(2))&-1); //@line 106 "introcode.cpp"
 var $43=$buffer; //@line 107 "introcode.cpp"
 var $44=$43; //@line 107 "introcode.cpp"
 var $45=$44; //@line 107 "introcode.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 107 "introcode.cpp"
 var $47=(($46+84)|0); //@line 107 "introcode.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 107 "introcode.cpp"
 var $49=FUNCTION_TABLE[$48]($44); //@line 107 "introcode.cpp"
 var $50=$srf; //@line 107 "introcode.cpp"
 var $51=$50; //@line 107 "introcode.cpp"
 var $52=HEAP32[(($51)>>2)]; //@line 107 "introcode.cpp"
 var $53=(($52+84)|0); //@line 107 "introcode.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 107 "introcode.cpp"
 var $55=FUNCTION_TABLE[$54]($50); //@line 107 "introcode.cpp"
 var $56=((($49)-($55))|0); //@line 107 "introcode.cpp"
 var $57=(((($56|0))/(2))&-1); //@line 107 "introcode.cpp"
 var $58=FUNCTION_TABLE[$26]($22,$27,$42,$57,1,0); //@line 107 "introcode.cpp"
 label=4;break; //@line 108 "introcode.cpp"
 case 3: 
 var $60=__Z24getSurfaceByResourceNamePc(11800); //@line 112 "introcode.cpp"
 var $61=$60; //@line 112 "introcode.cpp"
 $srf=$61; //@line 112 "introcode.cpp"
 var $62=$buffer; //@line 115 "introcode.cpp"
 var $63=$62; //@line 115 "introcode.cpp"
 var $64=$63; //@line 115 "introcode.cpp"
 var $65=HEAP32[(($64)>>2)]; //@line 115 "introcode.cpp"
 var $66=(($65+8)|0); //@line 115 "introcode.cpp"
 var $67=HEAP32[(($66)>>2)]; //@line 115 "introcode.cpp"
 var $68=$srf; //@line 115 "introcode.cpp"
 var $69=FUNCTION_TABLE[$67]($63,$68,0,0,1,0); //@line 115 "introcode.cpp"
 label=4;break; //@line 116 "introcode.cpp"
 case 4: 
 var $71=HEAP32[((20656)>>2)]; //@line 121 "introcode.cpp"
 var $72=(($71+24)|0); //@line 121 "introcode.cpp"
 var $73=HEAP32[(($72)>>2)]; //@line 121 "introcode.cpp"
 var $74=$buffer; //@line 121 "introcode.cpp"
 var $75=$74; //@line 121 "introcode.cpp"
 var $76=HEAPF64[((18488)>>3)]; //@line 121 "introcode.cpp"
 var $77=($76>=0 ? Math_floor($76) : Math_ceil($76)); //@line 121 "introcode.cpp"
 var $78=($77&255); //@line 121 "introcode.cpp"
 var $79=FUNCTION_TABLE[$73](20656,$75,0,0,$78,0); //@line 121 "introcode.cpp"
 var $80=HEAP32[((19680)>>2)]; //@line 129 "introcode.cpp"
 var $81=(($80+44)|0); //@line 129 "introcode.cpp"
 var $82=HEAP32[(($81)>>2)]; //@line 129 "introcode.cpp"
 var $83=HEAP32[((19848)>>2)]; //@line 129 "introcode.cpp"
 var $84=($83|0)==0; //@line 129 "introcode.cpp"
 if($84){label=5;break;}else{label=6;break;} //@line 129 "introcode.cpp"
 case 5: 
 var $86=HEAP32[((18512)>>2)]; //@line 129 "introcode.cpp"
 var $90=$86;label=7;break; //@line 129 "introcode.cpp"
 case 6: 
 var $88=HEAP32[((18520)>>2)]; //@line 129 "introcode.cpp"
 var $90=$88;label=7;break; //@line 129 "introcode.cpp"
 case 7: 
 var $90; //@line 129 "introcode.cpp"
 var $91=HEAP32[((19848)>>2)]; //@line 132 "introcode.cpp"
 var $92=($91|0)==0; //@line 132 "introcode.cpp"
 if($92){label=8;break;}else{label=9;break;} //@line 132 "introcode.cpp"
 case 8: 
 var $94=HEAP32[((18512)>>2)]; //@line 132 "introcode.cpp"
 var $98=$94;label=10;break; //@line 132 "introcode.cpp"
 case 9: 
 var $96=HEAP32[((18520)>>2)]; //@line 132 "introcode.cpp"
 var $98=$96;label=10;break; //@line 132 "introcode.cpp"
 case 10: 
 var $98; //@line 132 "introcode.cpp"
 var $99=_strlen($98); //@line 132 "introcode.cpp"
 var $100=HEAP32[((20656)>>2)]; //@line 135 "introcode.cpp"
 var $101=(($100+80)|0); //@line 135 "introcode.cpp"
 var $102=HEAP32[(($101)>>2)]; //@line 135 "introcode.cpp"
 var $103=FUNCTION_TABLE[$102](20656); //@line 135 "introcode.cpp"
 var $104=HEAP32[((20656)>>2)]; //@line 135 "introcode.cpp"
 var $105=(($104+84)|0); //@line 135 "introcode.cpp"
 var $106=HEAP32[(($105)>>2)]; //@line 135 "introcode.cpp"
 var $107=FUNCTION_TABLE[$106](20656); //@line 135 "introcode.cpp"
 var $108=((($107)-(40))|0); //@line 135 "introcode.cpp"
 var $109=FUNCTION_TABLE[$82](19680,20656,$90,$99,0,0,$103,$108,1,2,$x,$y,$w,$h); //@line 135 "introcode.cpp"
 var $110=HEAP32[((20656)>>2)]; //@line 139 "introcode.cpp"
 var $111=(($110+40)|0); //@line 139 "introcode.cpp"
 var $112=HEAP32[(($111)>>2)]; //@line 139 "introcode.cpp"
 var $113=HEAP32[(($x)>>2)]; //@line 139 "introcode.cpp"
 var $114=((($113)-(2))|0); //@line 139 "introcode.cpp"
 var $115=HEAP32[(($y)>>2)]; //@line 139 "introcode.cpp"
 var $116=((($115)-(2))|0); //@line 139 "introcode.cpp"
 var $117=HEAP32[(($w)>>2)]; //@line 139 "introcode.cpp"
 var $118=((($117)+(4))|0); //@line 139 "introcode.cpp"
 var $119=HEAP32[(($h)>>2)]; //@line 139 "introcode.cpp"
 var $120=((($119)+(4))|0); //@line 139 "introcode.cpp"
 var $121=FUNCTION_TABLE[$112](20656,0,0,0,$114,$116,$118,$120); //@line 139 "introcode.cpp"
 var $122=HEAP32[((19680)>>2)]; //@line 143 "introcode.cpp"
 var $123=(($122+48)|0); //@line 143 "introcode.cpp"
 var $124=HEAP32[(($123)>>2)]; //@line 143 "introcode.cpp"
 var $125=HEAP32[((19848)>>2)]; //@line 143 "introcode.cpp"
 var $126=($125|0)==0; //@line 143 "introcode.cpp"
 if($126){label=11;break;}else{label=12;break;} //@line 143 "introcode.cpp"
 case 11: 
 var $128=HEAP32[((18512)>>2)]; //@line 143 "introcode.cpp"
 var $132=$128;label=13;break; //@line 143 "introcode.cpp"
 case 12: 
 var $130=HEAP32[((18520)>>2)]; //@line 143 "introcode.cpp"
 var $132=$130;label=13;break; //@line 143 "introcode.cpp"
 case 13: 
 var $132; //@line 143 "introcode.cpp"
 var $133=HEAP32[((19848)>>2)]; //@line 146 "introcode.cpp"
 var $134=($133|0)==0; //@line 146 "introcode.cpp"
 if($134){label=14;break;}else{label=15;break;} //@line 146 "introcode.cpp"
 case 14: 
 var $136=HEAP32[((18512)>>2)]; //@line 146 "introcode.cpp"
 var $140=$136;label=16;break; //@line 146 "introcode.cpp"
 case 15: 
 var $138=HEAP32[((18520)>>2)]; //@line 146 "introcode.cpp"
 var $140=$138;label=16;break; //@line 146 "introcode.cpp"
 case 16: 
 var $140; //@line 146 "introcode.cpp"
 var $141=_strlen($140); //@line 146 "introcode.cpp"
 var $142=HEAP32[((20656)>>2)]; //@line 149 "introcode.cpp"
 var $143=(($142+80)|0); //@line 149 "introcode.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 149 "introcode.cpp"
 var $145=FUNCTION_TABLE[$144](20656); //@line 149 "introcode.cpp"
 var $146=HEAP32[((20656)>>2)]; //@line 149 "introcode.cpp"
 var $147=(($146+84)|0); //@line 149 "introcode.cpp"
 var $148=HEAP32[(($147)>>2)]; //@line 149 "introcode.cpp"
 var $149=FUNCTION_TABLE[$148](20656); //@line 149 "introcode.cpp"
 var $150=((($149)-(40))|0); //@line 149 "introcode.cpp"
 var $151=FUNCTION_TABLE[$124](19680,20656,$132,$141,0,0,$145,$150,1,1,2); //@line 149 "introcode.cpp"
 STACKTOP=sp;return 1; //@line 153 "introcode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13IntroLoopCode12executeFrameEm($frameNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$frameNumber;
 var $3=HEAP32[((20616)>>2)]; //@line 163 "introcode.cpp"
 switch(($3|0)){case 5:{ label=14;break;}case 4:{ label=17;break;}case 2:{ label=2;break;}case 3:{ label=20;break;}case 1:{ label=5;break;}case 0:{ label=8;break;}default:{label=25;break;}}break;
 case 2: 
 var $5=HEAPF64[((18448)>>3)]; //@line 166 "introcode.cpp"
 var $6=HEAPF64[((18488)>>3)]; //@line 166 "introcode.cpp"
 var $7=($6)+($5); //@line 166 "introcode.cpp"
 HEAPF64[((18488)>>3)]=$7; //@line 166 "introcode.cpp"
 var $8=HEAPF64[((18488)>>3)]; //@line 169 "introcode.cpp"
 var $9=$8>=255; //@line 169 "introcode.cpp"
 if($9){label=3;break;}else{label=4;break;} //@line 169 "introcode.cpp"
 case 3: 
 HEAPF64[((18488)>>3)]=255; //@line 170 "introcode.cpp"
 HEAP32[((20616)>>2)]=1; //@line 173 "introcode.cpp"
 var $11=HEAP32[((20600)>>2)]; //@line 174 "introcode.cpp"
 HEAP32[((20576)>>2)]=$11; //@line 174 "introcode.cpp"
 label=4;break; //@line 175 "introcode.cpp"
 case 4: 
 label=25;break; //@line 176 "introcode.cpp"
 case 5: 
 var $14=HEAP32[((20576)>>2)]; //@line 179 "introcode.cpp"
 var $15=((($14)-(1))|0); //@line 179 "introcode.cpp"
 HEAP32[((20576)>>2)]=$15; //@line 179 "introcode.cpp"
 var $16=HEAP32[((20576)>>2)]; //@line 180 "introcode.cpp"
 var $17=($16|0)==0; //@line 180 "introcode.cpp"
 if($17){label=6;break;}else{label=7;break;} //@line 180 "introcode.cpp"
 case 6: 
 HEAP32[((20616)>>2)]=0; //@line 180 "introcode.cpp"
 label=7;break; //@line 180 "introcode.cpp"
 case 7: 
 label=25;break; //@line 181 "introcode.cpp"
 case 8: 
 var $21=HEAPF64[((18432)>>3)]; //@line 184 "introcode.cpp"
 var $22=HEAPF64[((18488)>>3)]; //@line 184 "introcode.cpp"
 var $23=($22)-($21); //@line 184 "introcode.cpp"
 HEAPF64[((18488)>>3)]=$23; //@line 184 "introcode.cpp"
 var $24=HEAPF64[((18488)>>3)]; //@line 187 "introcode.cpp"
 var $25=$24<=0; //@line 187 "introcode.cpp"
 if($25){label=9;break;}else{label=13;break;} //@line 187 "introcode.cpp"
 case 9: 
 HEAPF64[((18488)>>3)]=0; //@line 188 "introcode.cpp"
 var $27=HEAP32[((19848)>>2)]; //@line 189 "introcode.cpp"
 var $28=($27|0)==0; //@line 189 "introcode.cpp"
 if($28){label=10;break;}else{label=11;break;} //@line 189 "introcode.cpp"
 case 10: 
 var $30=HEAP32[((18496)>>2)]; //@line 189 "introcode.cpp"
 var $34=$30;label=12;break; //@line 189 "introcode.cpp"
 case 11: 
 var $32=HEAP32[((18504)>>2)]; //@line 189 "introcode.cpp"
 var $34=$32;label=12;break; //@line 189 "introcode.cpp"
 case 12: 
 var $34; //@line 189 "introcode.cpp"
 HEAP32[((20648)>>2)]=$34; //@line 189 "introcode.cpp"
 HEAP32[((20616)>>2)]=5; //@line 192 "introcode.cpp"
 label=13;break; //@line 193 "introcode.cpp"
 case 13: 
 label=25;break; //@line 194 "introcode.cpp"
 case 14: 
 var $37=HEAPF64[((18440)>>3)]; //@line 197 "introcode.cpp"
 var $38=HEAPF64[((18488)>>3)]; //@line 197 "introcode.cpp"
 var $39=($38)+($37); //@line 197 "introcode.cpp"
 HEAPF64[((18488)>>3)]=$39; //@line 197 "introcode.cpp"
 var $40=HEAPF64[((18488)>>3)]; //@line 200 "introcode.cpp"
 var $41=$40>=255; //@line 200 "introcode.cpp"
 if($41){label=15;break;}else{label=16;break;} //@line 200 "introcode.cpp"
 case 15: 
 HEAPF64[((18488)>>3)]=255; //@line 201 "introcode.cpp"
 HEAP32[((20616)>>2)]=4; //@line 204 "introcode.cpp"
 var $43=HEAP32[((20584)>>2)]; //@line 205 "introcode.cpp"
 HEAP32[((20576)>>2)]=$43; //@line 205 "introcode.cpp"
 label=16;break; //@line 206 "introcode.cpp"
 case 16: 
 label=25;break; //@line 207 "introcode.cpp"
 case 17: 
 var $46=HEAP32[((20576)>>2)]; //@line 210 "introcode.cpp"
 var $47=((($46)-(1))|0); //@line 210 "introcode.cpp"
 HEAP32[((20576)>>2)]=$47; //@line 210 "introcode.cpp"
 var $48=HEAP32[((20576)>>2)]; //@line 211 "introcode.cpp"
 var $49=($48|0)==0; //@line 211 "introcode.cpp"
 if($49){label=18;break;}else{label=19;break;} //@line 211 "introcode.cpp"
 case 18: 
 HEAP32[((20616)>>2)]=3; //@line 211 "introcode.cpp"
 label=19;break; //@line 211 "introcode.cpp"
 case 19: 
 label=25;break; //@line 212 "introcode.cpp"
 case 20: 
 var $53=HEAPF64[((18424)>>3)]; //@line 215 "introcode.cpp"
 var $54=HEAPF64[((18488)>>3)]; //@line 215 "introcode.cpp"
 var $55=($54)-($53); //@line 215 "introcode.cpp"
 HEAPF64[((18488)>>3)]=$55; //@line 215 "introcode.cpp"
 var $56=HEAPF64[((18488)>>3)]; //@line 218 "introcode.cpp"
 var $57=$56<=0; //@line 218 "introcode.cpp"
 if($57){label=21;break;}else{label=24;break;} //@line 218 "introcode.cpp"
 case 21: 
 HEAPF64[((18488)>>3)]=0; //@line 219 "introcode.cpp"
 var $59=__Z19switchToProgramZone16programZonesEnummmb(3,0,0,1); //@line 221 "introcode.cpp"
 if($59){label=23;break;}else{label=22;break;} //@line 221 "introcode.cpp"
 case 22: 
 $1=0; //@line 222 "introcode.cpp"
 label=34;break; //@line 222 "introcode.cpp"
 case 23: 
 label=24;break; //@line 223 "introcode.cpp"
 case 24: 
 label=25;break; //@line 224 "introcode.cpp"
 case 25: 
 var $64=HEAP8[(18592)]; //@line 229 "introcode.cpp"
 var $65=(($64)&1); //@line 229 "introcode.cpp"
 if($65){label=28;break;}else{label=26;break;} //@line 229 "introcode.cpp"
 case 26: 
 var $67=HEAP32[((19456)>>2)]; //@line 229 "introcode.cpp"
 var $68=(($67+32)|0); //@line 229 "introcode.cpp"
 var $69=HEAP8[($68)]; //@line 229 "introcode.cpp"
 var $70=(($69<<24)>>24)!=0; //@line 229 "introcode.cpp"
 if($70){label=27;break;}else{label=28;break;} //@line 229 "introcode.cpp"
 case 27: 
 var $72=HEAP32[((19452)>>2)]; //@line 229 "introcode.cpp"
 var $73=(($72+32)|0); //@line 229 "introcode.cpp"
 var $74=HEAP8[($73)]; //@line 229 "introcode.cpp"
 var $75=(($74<<24)>>24)!=0; //@line 229 "introcode.cpp"
 if($75){label=28;break;}else{label=30;break;} //@line 229 "introcode.cpp"
 case 28: 
 var $77=HEAP32[((19456)>>2)]; //@line 229 "introcode.cpp"
 var $78=(($77+27)|0); //@line 229 "introcode.cpp"
 var $79=HEAP8[($78)]; //@line 229 "introcode.cpp"
 var $80=(($79<<24)>>24)!=0; //@line 229 "introcode.cpp"
 if($80){label=29;break;}else{label=33;break;} //@line 229 "introcode.cpp"
 case 29: 
 var $82=HEAP32[((19452)>>2)]; //@line 229 "introcode.cpp"
 var $83=(($82+27)|0); //@line 229 "introcode.cpp"
 var $84=HEAP8[($83)]; //@line 229 "introcode.cpp"
 var $85=(($84<<24)>>24)!=0; //@line 229 "introcode.cpp"
 if($85){label=33;break;}else{label=30;break;} //@line 229 "introcode.cpp"
 case 30: 
 var $87=__Z19switchToProgramZone16programZonesEnummmb(3,0,0,1); //@line 234 "introcode.cpp"
 if($87){label=32;break;}else{label=31;break;} //@line 234 "introcode.cpp"
 case 31: 
 $1=0; //@line 235 "introcode.cpp"
 label=34;break; //@line 235 "introcode.cpp"
 case 32: 
 label=33;break; //@line 236 "introcode.cpp"
 case 33: 
 $1=1; //@line 238 "introcode.cpp"
 label=34;break; //@line 238 "introcode.cpp"
 case 34: 
 var $92=$1; //@line 239 "introcode.cpp"
 STACKTOP=sp;return $92; //@line 239 "introcode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13IntroLoopCode10beforeLoopEv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $secLightPres;
 var $waitPres;
 var $secObsPres;
 var $secLightFinal;
 var $waitFinal;
 var $secObsFinal;
 $secLightPres=0.8; //@line 246 "introcode.cpp"
 var $1=$secLightPres; //@line 247 "introcode.cpp"
 var $2=((2.46))-($1); //@line 247 "introcode.cpp"
 $waitPres=$2; //@line 247 "introcode.cpp"
 var $3=$secLightPres; //@line 248 "introcode.cpp"
 var $4=$waitPres; //@line 248 "introcode.cpp"
 var $5=($3)+($4); //@line 248 "introcode.cpp"
 var $6=((3.2))-($5); //@line 248 "introcode.cpp"
 $secObsPres=$6; //@line 248 "introcode.cpp"
 var $7=$secLightPres; //@line 249 "introcode.cpp"
 var $8=$waitPres; //@line 249 "introcode.cpp"
 var $9=($7)+($8); //@line 249 "introcode.cpp"
 var $10=$secObsPres; //@line 249 "introcode.cpp"
 var $11=($9)+($10); //@line 249 "introcode.cpp"
 var $12=(4)-($11); //@line 249 "introcode.cpp"
 $secLightFinal=$12; //@line 249 "introcode.cpp"
 var $13=$secLightPres; //@line 250 "introcode.cpp"
 var $14=$waitPres; //@line 250 "introcode.cpp"
 var $15=($13)+($14); //@line 250 "introcode.cpp"
 var $16=$secObsPres; //@line 250 "introcode.cpp"
 var $17=($15)+($16); //@line 250 "introcode.cpp"
 var $18=$secLightFinal; //@line 250 "introcode.cpp"
 var $19=($17)+($18); //@line 250 "introcode.cpp"
 var $20=(6)-($19); //@line 250 "introcode.cpp"
 $waitFinal=$20; //@line 250 "introcode.cpp"
 var $21=$secLightPres; //@line 251 "introcode.cpp"
 var $22=$waitPres; //@line 251 "introcode.cpp"
 var $23=($21)+($22); //@line 251 "introcode.cpp"
 var $24=$secObsPres; //@line 251 "introcode.cpp"
 var $25=($23)+($24); //@line 251 "introcode.cpp"
 var $26=$secLightFinal; //@line 251 "introcode.cpp"
 var $27=($25)+($26); //@line 251 "introcode.cpp"
 var $28=$waitFinal; //@line 251 "introcode.cpp"
 var $29=($27)+($28); //@line 251 "introcode.cpp"
 var $30=(9)-($29); //@line 251 "introcode.cpp"
 $secObsFinal=$30; //@line 251 "introcode.cpp"
 var $31=HEAP32[((2136)>>2)]; //@line 259 "introcode.cpp"
 var $32=($31|0); //@line 259 "introcode.cpp"
 var $33=(255)/($32); //@line 259 "introcode.cpp"
 var $34=$secObsPres; //@line 259 "introcode.cpp"
 var $35=($33)/($34); //@line 259 "introcode.cpp"
 HEAPF64[((18432)>>3)]=$35; //@line 259 "introcode.cpp"
 var $36=$waitPres; //@line 261 "introcode.cpp"
 var $37=HEAP32[((2136)>>2)]; //@line 261 "introcode.cpp"
 var $38=($37|0); //@line 261 "introcode.cpp"
 var $39=($36)*($38); //@line 261 "introcode.cpp"
 var $40=(($39)&-1); //@line 261 "introcode.cpp"
 HEAP32[((20600)>>2)]=$40; //@line 261 "introcode.cpp"
 var $41=HEAP32[((2136)>>2)]; //@line 263 "introcode.cpp"
 var $42=($41|0); //@line 263 "introcode.cpp"
 var $43=(255)/($42); //@line 263 "introcode.cpp"
 var $44=$secLightPres; //@line 263 "introcode.cpp"
 var $45=($43)/($44); //@line 263 "introcode.cpp"
 HEAPF64[((18448)>>3)]=$45; //@line 263 "introcode.cpp"
 var $46=HEAP32[((2136)>>2)]; //@line 267 "introcode.cpp"
 var $47=($46|0); //@line 267 "introcode.cpp"
 var $48=(255)/($47); //@line 267 "introcode.cpp"
 var $49=$secObsFinal; //@line 267 "introcode.cpp"
 var $50=($48)/($49); //@line 267 "introcode.cpp"
 HEAPF64[((18424)>>3)]=$50; //@line 267 "introcode.cpp"
 var $51=$waitFinal; //@line 269 "introcode.cpp"
 var $52=HEAP32[((2136)>>2)]; //@line 269 "introcode.cpp"
 var $53=($52|0); //@line 269 "introcode.cpp"
 var $54=($51)*($53); //@line 269 "introcode.cpp"
 var $55=(($54)&-1); //@line 269 "introcode.cpp"
 HEAP32[((20584)>>2)]=$55; //@line 269 "introcode.cpp"
 var $56=HEAP32[((2136)>>2)]; //@line 271 "introcode.cpp"
 var $57=($56|0); //@line 271 "introcode.cpp"
 var $58=(255)/($57); //@line 271 "introcode.cpp"
 var $59=$secLightFinal; //@line 271 "introcode.cpp"
 var $60=($58)/($59); //@line 271 "introcode.cpp"
 HEAPF64[((18440)>>3)]=$60; //@line 271 "introcode.cpp"
 HEAPF64[((18488)>>3)]=0; //@line 274 "introcode.cpp"
 var $61=HEAP32[((19848)>>2)]; //@line 275 "introcode.cpp"
 var $62=($61|0)==0; //@line 275 "introcode.cpp"
 if($62){label=2;break;}else{label=3;break;} //@line 275 "introcode.cpp"
 case 2: 
 var $64=HEAP32[((18528)>>2)]; //@line 275 "introcode.cpp"
 var $68=$64;label=4;break; //@line 275 "introcode.cpp"
 case 3: 
 var $66=HEAP32[((18536)>>2)]; //@line 275 "introcode.cpp"
 var $68=$66;label=4;break; //@line 275 "introcode.cpp"
 case 4: 
 var $68; //@line 275 "introcode.cpp"
 HEAP32[((20648)>>2)]=$68; //@line 275 "introcode.cpp"
 HEAP32[((20616)>>2)]=2; //@line 276 "introcode.cpp"
 STACKTOP=sp;return 1; //@line 281 "introcode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13IntroLoopCode9afterLoopEv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $textToShow;
 var $1=HEAP32[((19848)>>2)]; //@line 291 "introcode.cpp"
 var $2=($1|0)==0; //@line 291 "introcode.cpp"
 if($2){label=2;break;}else{label=3;break;} //@line 291 "introcode.cpp"
 case 2: 
 var $4=HEAP32[((18472)>>2)]; //@line 291 "introcode.cpp"
 var $8=$4;label=4;break; //@line 291 "introcode.cpp"
 case 3: 
 var $6=HEAP32[((18480)>>2)]; //@line 291 "introcode.cpp"
 var $8=$6;label=4;break; //@line 291 "introcode.cpp"
 case 4: 
 var $8; //@line 291 "introcode.cpp"
 $textToShow=$8; //@line 291 "introcode.cpp"
 var $9=HEAP32[((20656)>>2)]; //@line 295 "introcode.cpp"
 var $10=(($9+44)|0); //@line 295 "introcode.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 295 "introcode.cpp"
 var $12=FUNCTION_TABLE[$11](20656,0); //@line 295 "introcode.cpp"
 var $13=HEAP32[((19728)>>2)]; //@line 298 "introcode.cpp"
 var $14=(($13+48)|0); //@line 298 "introcode.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 298 "introcode.cpp"
 var $16=$textToShow; //@line 298 "introcode.cpp"
 var $17=$textToShow; //@line 301 "introcode.cpp"
 var $18=_strlen($17); //@line 301 "introcode.cpp"
 var $19=HEAP32[((20656)>>2)]; //@line 304 "introcode.cpp"
 var $20=(($19+80)|0); //@line 304 "introcode.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 304 "introcode.cpp"
 var $22=FUNCTION_TABLE[$21](20656); //@line 304 "introcode.cpp"
 var $23=HEAP32[((20656)>>2)]; //@line 304 "introcode.cpp"
 var $24=(($23+84)|0); //@line 304 "introcode.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 304 "introcode.cpp"
 var $26=FUNCTION_TABLE[$25](20656); //@line 304 "introcode.cpp"
 var $27=FUNCTION_TABLE[$15](19728,20656,$16,$18,0,0,$22,$26,1,1,1); //@line 304 "introcode.cpp"
 var $28=__ZN15directDrawClass4flipEv(20656); //@line 309 "introcode.cpp"
 STACKTOP=sp;return 1; //@line 311 "introcode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16loopWrapperClass15executeMainLoopEiim($this,$framesToExecutePerSecond,$maxExecutedFramesWithoutDrawing,$msecToCalculateFPS){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $i;
 var $ended;
 var $timeInit;
 var $timeEnd;
 var $frames;
 var $lastFrameNumber;
 var $frameNumber;
 var $lastFrameTime;
 var $frameTime;
 var $skippedFrames;
 var $framesExecuted;
 $2=$this;
 $3=$framesToExecutePerSecond;
 $4=$maxExecutedFramesWithoutDrawing;
 $5=$msecToCalculateFPS;
 var $6=$2;
 $ended=0; //@line 59 "loopwrap.cpp"
 var $7=$3; //@line 70 "loopwrap.cpp"
 var $8=(($6+32)|0); //@line 70 "loopwrap.cpp"
 HEAP32[(($8)>>2)]=$7; //@line 70 "loopwrap.cpp"
 var $9=(($6+36)|0); //@line 71 "loopwrap.cpp"
 HEAP8[($9)]=0; //@line 71 "loopwrap.cpp"
 var $10=(($6+37)|0); //@line 72 "loopwrap.cpp"
 HEAP8[($10)]=1; //@line 72 "loopwrap.cpp"
 var $11=(($6+8)|0); //@line 73 "loopwrap.cpp"
 var $12=__ZN16timeWrapperClass7isReadyEv($11); //@line 73 "loopwrap.cpp"
 if($12){label=3;break;}else{label=2;break;} //@line 73 "loopwrap.cpp"
 case 2: 
 var $14=(($6+8)|0); //@line 73 "loopwrap.cpp"
 var $15=__ZN16timeWrapperClass4initEv($14); //@line 73 "loopwrap.cpp"
 label=3;break; //@line 73 "loopwrap.cpp"
 case 3: 
 var $17=(($6+8)|0); //@line 76 "loopwrap.cpp"
 var $18=__ZN16timeWrapperClass7getTimeEPb($17,0); //@line 76 "loopwrap.cpp"
 $timeInit=$18; //@line 76 "loopwrap.cpp"
 $frames=0; //@line 79 "loopwrap.cpp"
 $framesExecuted=0; //@line 83 "loopwrap.cpp"
 var $19=$timeInit; //@line 86 "loopwrap.cpp"
 $lastFrameTime=$19; //@line 86 "loopwrap.cpp"
 var $20=$3; //@line 88 "loopwrap.cpp"
 var $21=$lastFrameTime; //@line 88 "loopwrap.cpp"
 var $22=(Math_imul($20,$21)|0); //@line 88 "loopwrap.cpp"
 var $23=(((($22>>>0))/(1000))&-1); //@line 88 "loopwrap.cpp"
 $lastFrameNumber=$23; //@line 88 "loopwrap.cpp"
 var $24=$6; //@line 91 "loopwrap.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 91 "loopwrap.cpp"
 var $26=(($25+44)|0); //@line 91 "loopwrap.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 91 "loopwrap.cpp"
 var $28=FUNCTION_TABLE[$27]($6); //@line 91 "loopwrap.cpp"
 if($28){label=5;break;}else{label=4;break;} //@line 91 "loopwrap.cpp"
 case 4: 
 $1=0; //@line 91 "loopwrap.cpp"
 label=29;break; //@line 91 "loopwrap.cpp"
 case 5: 
 label=6;break; //@line 94 "loopwrap.cpp"
 case 6: 
 var $32=$ended; //@line 94 "loopwrap.cpp"
 var $33=(($32)&1); //@line 94 "loopwrap.cpp"
 var $34=$33^1; //@line 94 "loopwrap.cpp"
 if($34){label=7;break;}else{label=26;break;} //@line 94 "loopwrap.cpp"
 case 7: 
 var $36=$6; //@line 96 "loopwrap.cpp"
 var $37=HEAP32[(($36)>>2)]; //@line 96 "loopwrap.cpp"
 var $38=(($37+40)|0); //@line 96 "loopwrap.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 96 "loopwrap.cpp"
 var $40=FUNCTION_TABLE[$39]($6); //@line 96 "loopwrap.cpp"
 if($40){label=9;break;}else{label=8;break;} //@line 96 "loopwrap.cpp"
 case 8: 
 $1=0; //@line 96 "loopwrap.cpp"
 label=29;break; //@line 96 "loopwrap.cpp"
 case 9: 
 var $43=(($6+8)|0); //@line 99 "loopwrap.cpp"
 var $44=__ZN16timeWrapperClass4playEv($43); //@line 99 "loopwrap.cpp"
 var $45=(($6+8)|0); //@line 103 "loopwrap.cpp"
 var $46=__ZN16timeWrapperClass7getTimeEPb($45,0); //@line 103 "loopwrap.cpp"
 $frameTime=$46; //@line 103 "loopwrap.cpp"
 var $47=$3; //@line 104 "loopwrap.cpp"
 var $48=$frameTime; //@line 104 "loopwrap.cpp"
 var $49=(Math_imul($47,$48)|0); //@line 104 "loopwrap.cpp"
 var $50=(((($49>>>0))/(1000))&-1); //@line 104 "loopwrap.cpp"
 $frameNumber=$50; //@line 104 "loopwrap.cpp"
 var $51=$frameNumber; //@line 105 "loopwrap.cpp"
 var $52=$lastFrameNumber; //@line 105 "loopwrap.cpp"
 var $53=((($51)-($52))|0); //@line 105 "loopwrap.cpp"
 $skippedFrames=$53; //@line 105 "loopwrap.cpp"
 var $54=$skippedFrames; //@line 107 "loopwrap.cpp"
 var $55=$4; //@line 107 "loopwrap.cpp"
 var $56=($54|0)>($55|0); //@line 107 "loopwrap.cpp"
 if($56){label=10;break;}else{label=11;break;} //@line 107 "loopwrap.cpp"
 case 10: 
 var $58=$4; //@line 108 "loopwrap.cpp"
 $skippedFrames=$58; //@line 108 "loopwrap.cpp"
 label=11;break; //@line 108 "loopwrap.cpp"
 case 11: 
 $i=0; //@line 111 "loopwrap.cpp"
 label=12;break; //@line 111 "loopwrap.cpp"
 case 12: 
 var $61=$i; //@line 111 "loopwrap.cpp"
 var $62=$skippedFrames; //@line 111 "loopwrap.cpp"
 var $63=($61|0)<($62|0); //@line 111 "loopwrap.cpp"
 if($63){label=13;break;}else{label=17;break;} //@line 111 "loopwrap.cpp"
 case 13: 
 var $65=$6; //@line 113 "loopwrap.cpp"
 var $66=HEAP32[(($65)>>2)]; //@line 113 "loopwrap.cpp"
 var $67=(($66+36)|0); //@line 113 "loopwrap.cpp"
 var $68=HEAP32[(($67)>>2)]; //@line 113 "loopwrap.cpp"
 var $69=$framesExecuted; //@line 113 "loopwrap.cpp"
 var $70=FUNCTION_TABLE[$68]($6,$69); //@line 113 "loopwrap.cpp"
 if($70){label=15;break;}else{label=14;break;} //@line 113 "loopwrap.cpp"
 case 14: 
 $1=0; //@line 113 "loopwrap.cpp"
 label=29;break; //@line 113 "loopwrap.cpp"
 case 15: 
 var $73=$framesExecuted; //@line 114 "loopwrap.cpp"
 var $74=((($73)+(1))|0); //@line 114 "loopwrap.cpp"
 $framesExecuted=$74; //@line 114 "loopwrap.cpp"
 label=16;break; //@line 115 "loopwrap.cpp"
 case 16: 
 var $76=$i; //@line 111 "loopwrap.cpp"
 var $77=((($76)+(1))|0); //@line 111 "loopwrap.cpp"
 $i=$77; //@line 111 "loopwrap.cpp"
 label=12;break; //@line 111 "loopwrap.cpp"
 case 17: 
 var $79=$frameNumber; //@line 116 "loopwrap.cpp"
 $lastFrameNumber=$79; //@line 116 "loopwrap.cpp"
 var $80=$frameTime; //@line 117 "loopwrap.cpp"
 $lastFrameTime=$80; //@line 117 "loopwrap.cpp"
 var $81=$frames; //@line 120 "loopwrap.cpp"
 var $82=((($81)+(1))|0); //@line 120 "loopwrap.cpp"
 $frames=$82; //@line 120 "loopwrap.cpp"
 var $83=$frameTime; //@line 121 "loopwrap.cpp"
 $timeEnd=$83; //@line 121 "loopwrap.cpp"
 var $84=$timeEnd; //@line 122 "loopwrap.cpp"
 var $85=$timeInit; //@line 122 "loopwrap.cpp"
 var $86=((($84)-($85))|0); //@line 122 "loopwrap.cpp"
 var $87=$5; //@line 122 "loopwrap.cpp"
 var $88=($86>>>0)>($87>>>0); //@line 122 "loopwrap.cpp"
 if($88){label=18;break;}else{label=21;break;} //@line 122 "loopwrap.cpp"
 case 18: 
 var $90=$6; //@line 124 "loopwrap.cpp"
 var $91=HEAP32[(($90)>>2)]; //@line 124 "loopwrap.cpp"
 var $92=(($91+52)|0); //@line 124 "loopwrap.cpp"
 var $93=HEAP32[(($92)>>2)]; //@line 124 "loopwrap.cpp"
 var $94=$frames; //@line 124 "loopwrap.cpp"
 var $95=($94>>>0); //@line 124 "loopwrap.cpp"
 var $96=$timeEnd; //@line 124 "loopwrap.cpp"
 var $97=$timeInit; //@line 124 "loopwrap.cpp"
 var $98=((($96)-($97))|0); //@line 124 "loopwrap.cpp"
 var $99=($98>>>0); //@line 124 "loopwrap.cpp"
 var $100=($99)/(1000); //@line 124 "loopwrap.cpp"
 var $101=($95)/($100); //@line 124 "loopwrap.cpp"
 var $102=FUNCTION_TABLE[$93]($6,$101); //@line 124 "loopwrap.cpp"
 if($102){label=20;break;}else{label=19;break;} //@line 124 "loopwrap.cpp"
 case 19: 
 $1=0; //@line 126 "loopwrap.cpp"
 label=29;break; //@line 126 "loopwrap.cpp"
 case 20: 
 var $105=(($6+8)|0); //@line 129 "loopwrap.cpp"
 var $106=__ZN16timeWrapperClass7getTimeEPb($105,0); //@line 129 "loopwrap.cpp"
 $timeInit=$106; //@line 129 "loopwrap.cpp"
 $frames=0; //@line 130 "loopwrap.cpp"
 label=21;break; //@line 131 "loopwrap.cpp"
 case 21: 
 var $108=(($6+37)|0); //@line 143 "loopwrap.cpp"
 var $109=HEAP8[($108)]; //@line 143 "loopwrap.cpp"
 var $110=(($109)&1); //@line 143 "loopwrap.cpp"
 if($110){label=23;break;}else{label=22;break;} //@line 143 "loopwrap.cpp"
 case 22: 
 var $112=(($6+8)|0); //@line 143 "loopwrap.cpp"
 var $113=__ZN16timeWrapperClass5pauseEv($112); //@line 143 "loopwrap.cpp"
 label=23;break; //@line 143 "loopwrap.cpp"
 case 23: 
 var $115=(($6+36)|0); //@line 158 "loopwrap.cpp"
 var $116=HEAP8[($115)]; //@line 158 "loopwrap.cpp"
 var $117=(($116)&1); //@line 158 "loopwrap.cpp"
 if($117){label=24;break;}else{label=25;break;} //@line 158 "loopwrap.cpp"
 case 24: 
 $ended=1; //@line 158 "loopwrap.cpp"
 label=25;break; //@line 158 "loopwrap.cpp"
 case 25: 
 label=6;break; //@line 159 "loopwrap.cpp"
 case 26: 
 var $121=$6; //@line 162 "loopwrap.cpp"
 var $122=HEAP32[(($121)>>2)]; //@line 162 "loopwrap.cpp"
 var $123=(($122+48)|0); //@line 162 "loopwrap.cpp"
 var $124=HEAP32[(($123)>>2)]; //@line 162 "loopwrap.cpp"
 var $125=FUNCTION_TABLE[$124]($6); //@line 162 "loopwrap.cpp"
 if($125){label=28;break;}else{label=27;break;} //@line 162 "loopwrap.cpp"
 case 27: 
 $1=0; //@line 162 "loopwrap.cpp"
 label=29;break; //@line 162 "loopwrap.cpp"
 case 28: 
 $1=1; //@line 165 "loopwrap.cpp"
 label=29;break; //@line 165 "loopwrap.cpp"
 case 29: 
 var $129=$1; //@line 166 "loopwrap.cpp"
 STACKTOP=sp;return $129; //@line 166 "loopwrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16loopWrapperClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN16loopWrapperClassD2Ev($2); //@line 60 "./loopwrap.h"
 STACKTOP=sp;return; //@line 60 "./loopwrap.h"
}


function __ZN16loopWrapperClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN16loopWrapperClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 60 "./loopwrap.h"
 case 2: 
 var $6=$4; //@line 60 "./loopwrap.h"
 __ZdlPv($6); //@line 60 "./loopwrap.h"
 STACKTOP=sp;return; //@line 60 "./loopwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 60 "./loopwrap.h"
 var $10=$8$1;
 $3=$10; //@line 60 "./loopwrap.h"
 var $11=$4; //@line 60 "./loopwrap.h"
 __ZdlPv($11); //@line 60 "./loopwrap.h"
 label=4;break; //@line 60 "./loopwrap.h"
 case 4: 
 var $13=$2; //@line 60 "./loopwrap.h"
 var $14=$3; //@line 60 "./loopwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 60 "./loopwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16loopWrapperClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 64 "./loopwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 64 "./loopwrap.h"
 var $5=(($4+16)|0); //@line 64 "./loopwrap.h"
 var $6=HEAP32[(($5)>>2)]; //@line 64 "./loopwrap.h"
 FUNCTION_TABLE[$6]($2); //@line 64 "./loopwrap.h"
 STACKTOP=sp;return 1; //@line 64 "./loopwrap.h"
}


function __ZN16loopWrapperClass8exitLoopEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+36)|0); //@line 67 "./loopwrap.h"
 HEAP8[($3)]=1; //@line 67 "./loopwrap.h"
 STACKTOP=sp;return; //@line 67 "./loopwrap.h"
}


function __ZN16loopWrapperClass12isLoopActiveEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+37)|0); //@line 68 "./loopwrap.h"
 var $4=HEAP8[($3)]; //@line 68 "./loopwrap.h"
 var $5=(($4)&1); //@line 68 "./loopwrap.h"
 STACKTOP=sp;return $5; //@line 68 "./loopwrap.h"
}


function __ZN16loopWrapperClass14setActiveStateEb($this,$active){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 var $3=($active&1);
 $2=$3;
 var $4=$1;
 var $5=$2; //@line 69 "./loopwrap.h"
 var $6=(($5)&1); //@line 69 "./loopwrap.h"
 var $7=(($4+37)|0); //@line 69 "./loopwrap.h"
 var $8=($6&1); //@line 69 "./loopwrap.h"
 HEAP8[($7)]=$8; //@line 69 "./loopwrap.h"
 STACKTOP=sp;return; //@line 69 "./loopwrap.h"
}


function __ZN16loopWrapperClass14getTimerObjectEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 70 "./loopwrap.h"
 STACKTOP=sp;return $3; //@line 70 "./loopwrap.h"
}


function __ZN16loopWrapperClass27getFramesToExecutePerSecondEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+32)|0); //@line 71 "./loopwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 71 "./loopwrap.h"
 STACKTOP=sp;return $4; //@line 71 "./loopwrap.h"
}


function _main($argc,$argv){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=0;
 $2=$argc;
 $3=$argv;
 var $4=$2; //@line 548 "main.cpp"
 var $5=($4|0)>1; //@line 548 "main.cpp"
 if($5){label=2;break;}else{label=6;break;} //@line 548 "main.cpp"
 case 2: 
 var $7=$3; //@line 548 "main.cpp"
 var $8=(($7+4)|0); //@line 548 "main.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 548 "main.cpp"
 var $10=_strcmp($9,11744); //@line 548 "main.cpp"
 var $11=($10|0)==0; //@line 548 "main.cpp"
 if($11){label=3;break;}else{label=6;break;} //@line 548 "main.cpp"
 case 3: 
 var $13=__ZN14conLoggerClass4initEPcP12consoleClassii(19416,15120,0,100,200); //@line 550 "main.cpp"
 var $14=__ZN14conLoggerClass7logLineEPcbbbz(19416,19968,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 551 "main.cpp"
 var $15=__ZN14conLoggerClass7logLineEPcbbbz(19416,8832,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 552 "main.cpp"
 var $16=__Z14logDateAndTimePc(6944); //@line 553 "main.cpp"
 var $17=__Z23executePostInstallTasksb(0); //@line 555 "main.cpp"
 if($17){label=5;break;}else{label=4;break;} //@line 555 "main.cpp"
 case 4: 
 var $19=__ZN14conLoggerClass7logLineEPcbbbz(19416,5600,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 556 "main.cpp"
 label=5;break; //@line 556 "main.cpp"
 case 5: 
 var $21=__ZN14conLoggerClass7logLineEPcbbbz(19416,4816,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 558 "main.cpp"
 var $22=__ZN14conLoggerClass3endEv(19416); //@line 559 "main.cpp"
 $1=0; //@line 560 "main.cpp"
 label=16;break; //@line 560 "main.cpp"
 case 6: 
 var $24=$2; //@line 568 "main.cpp"
 var $25=($24|0)>1; //@line 568 "main.cpp"
 if($25){label=7;break;}else{label=9;break;} //@line 568 "main.cpp"
 case 7: 
 var $27=$3; //@line 568 "main.cpp"
 var $28=(($27+4)|0); //@line 568 "main.cpp"
 var $29=HEAP32[(($28)>>2)]; //@line 568 "main.cpp"
 var $30=_strcmp($29,4112); //@line 568 "main.cpp"
 var $31=($30|0)==0; //@line 568 "main.cpp"
 if($31){label=8;break;}else{label=9;break;} //@line 568 "main.cpp"
 case 8: 
 HEAP8[(400)]=0; //@line 570 "main.cpp"
 label=9;break; //@line 571 "main.cpp"
 case 9: 
 var $34=__Z15initializeFirstv(); //@line 574 "main.cpp"
 if($34){label=11;break;}else{label=10;break;} //@line 574 "main.cpp"
 case 10: 
 $1=0; //@line 575 "main.cpp"
 label=16;break; //@line 575 "main.cpp"
 case 11: 
 var $37=__ZN14conLoggerClass7logLineEPcbbbz(19416,3328,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 579 "main.cpp"
 var $38=__Z19switchToProgramZone16programZonesEnummmb(2,0,0,1); //@line 583 "main.cpp"
 if($38){label=13;break;}else{label=12;break;} //@line 583 "main.cpp"
 case 12: 
 var $40=__Z8closeAllPc(2680); //@line 585 "main.cpp"
 $1=0; //@line 586 "main.cpp"
 label=16;break; //@line 586 "main.cpp"
 case 13: 
 var $42=__ZN14conLoggerClass7logLineEPcbbbz(19416,16240,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 590 "main.cpp"
 var $43=HEAP32[((19376)>>2)]; //@line 594 "main.cpp"
 var $44=(($43+8)|0); //@line 594 "main.cpp"
 var $45=HEAP32[(($44)>>2)]; //@line 594 "main.cpp"
 var $46=HEAP32[((2136)>>2)]; //@line 594 "main.cpp"
 var $47=HEAP32[((568)>>2)]; //@line 594 "main.cpp"
 var $48=FUNCTION_TABLE[$45](19376,$46,$47,5000); //@line 594 "main.cpp"
 if($48){label=15;break;}else{label=14;break;} //@line 594 "main.cpp"
 case 14: 
 var $50=__ZN14conLoggerClass7logLineEPcbbbz(19416,15608,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 596 "main.cpp"
 label=15;break; //@line 596 "main.cpp"
 case 15: 
 var $52=__Z8closeAllPc(15136); //@line 599 "main.cpp"
 $1=0; //@line 601 "main.cpp"
 label=16;break; //@line 601 "main.cpp"
 case 16: 
 var $54=$1; //@line 602 "main.cpp"
 STACKTOP=sp;return $54; //@line 602 "main.cpp"
  default: assert(0, "bad label: " + label);
 }

}
Module["_main"] = _main;

function __ZN13mainLoopClass21informFramesPerSecondEd($this,$fps){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$fps;
 var $3=$1;
 var $4=$2; //@line 44 "mainloop.cpp"
 var $5=__ZN14conLoggerClass7logLineEPcbbbz(19416,11176,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$4,tempVarArgs)); STACKTOP=tempVarArgs; //@line 44 "mainloop.cpp"
 STACKTOP=sp;return 1; //@line 46 "mainloop.cpp"
}


function __ZN13mainLoopClass10beforeLoopEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 52 "mainloop.cpp"
}


function __ZN13mainLoopClass9afterLoopEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__Z23switchToNullProgramZonev(); //@line 59 "mainloop.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 59 "mainloop.cpp"
 case 2: 
 $1=0; //@line 60 "mainloop.cpp"
 label=4;break; //@line 60 "mainloop.cpp"
 case 3: 
 $1=1; //@line 62 "mainloop.cpp"
 label=4;break; //@line 62 "mainloop.cpp"
 case 4: 
 var $8=$1; //@line 63 "mainloop.cpp"
 STACKTOP=sp;return $8; //@line 63 "mainloop.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13mainLoopClass9drawFrameEv($this){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $retval;
 $2=$this;
 var $3=$2;
 $retval=0; //@line 76 "mainloop.cpp"
 var $4=__Z18checkLostResourcesv(); //@line 81 "mainloop.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 81 "mainloop.cpp"
 case 2: 
 var $6=__ZN14conLoggerClass7logLineEPcbbbz(19416,15024,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 82 "mainloop.cpp"
 $1=0; //@line 83 "mainloop.cpp"
 label=8;break; //@line 83 "mainloop.cpp"
 case 3: 
 var $8=HEAP32[((19824)>>2)]; //@line 88 "mainloop.cpp"
 if(($8|0)==1){ label=4;break;}else if(($8|0)==2){ label=5;break;}else if(($8|0)==3){ label=6;break;}else{label=7;break;}
 case 4: 
 var $10=__ZN12GameLoopCode9drawFrameEv(); //@line 90 "mainloop.cpp"
 var $11=($10&1); //@line 90 "mainloop.cpp"
 $retval=$11; //@line 90 "mainloop.cpp"
 label=7;break; //@line 91 "mainloop.cpp"
 case 5: 
 var $13=__ZN13IntroLoopCode9drawFrameEv(); //@line 93 "mainloop.cpp"
 var $14=($13&1); //@line 93 "mainloop.cpp"
 $retval=$14; //@line 93 "mainloop.cpp"
 label=7;break; //@line 94 "mainloop.cpp"
 case 6: 
 var $16=__ZN12MenuLoopCode9drawFrameEv(); //@line 96 "mainloop.cpp"
 var $17=($16&1); //@line 96 "mainloop.cpp"
 $retval=$17; //@line 96 "mainloop.cpp"
 label=7;break; //@line 97 "mainloop.cpp"
 case 7: 
 var $19=__ZN15directDrawClass4flipEv(20656); //@line 133 "mainloop.cpp"
 var $20=$retval; //@line 135 "mainloop.cpp"
 var $21=(($20)&1); //@line 135 "mainloop.cpp"
 $1=$21; //@line 135 "mainloop.cpp"
 label=8;break; //@line 135 "mainloop.cpp"
 case 8: 
 var $23=$1; //@line 136 "mainloop.cpp"
 STACKTOP=sp;return $23; //@line 136 "mainloop.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13mainLoopClass12executeFrameEm($this,$frameNumber){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $retval;
 var $isLost=sp;
 var $event=(sp)+(8);
 $2=$this;
 $3=$frameNumber;
 var $4=$2;
 $retval=0; //@line 144 "mainloop.cpp"
 var $5=__ZN12diMouseClass8getStateEPb(19328,$isLost); //@line 149 "mainloop.cpp"
 if($5){label=6;break;}else{label=2;break;} //@line 149 "mainloop.cpp"
 case 2: 
 var $7=HEAP8[($isLost)]; //@line 150 "mainloop.cpp"
 var $8=(($7)&1); //@line 150 "mainloop.cpp"
 if($8){label=3;break;}else{label=4;break;} //@line 150 "mainloop.cpp"
 case 3: 
 var $10=__ZN14conLoggerClass7logLineEPcbbbz(19416,11720,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 153 "mainloop.cpp"
 var $11=__ZN12diMouseClass7acquireEv(19328); //@line 154 "mainloop.cpp"
 var $12=__ZN12diMouseClass8getStateEPb(19328,0); //@line 155 "mainloop.cpp"
 label=5;break; //@line 156 "mainloop.cpp"
 case 4: 
 var $14=__ZN14conLoggerClass7logLineEPcbbbz(19416,8800,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 158 "mainloop.cpp"
 $1=0; //@line 159 "mainloop.cpp"
 label=22;break; //@line 159 "mainloop.cpp"
 case 5: 
 label=6;break; //@line 161 "mainloop.cpp"
 case 6: 
 var $17=__ZN15diKeyboardClass7getKeysEPb(19440,$isLost); //@line 163 "mainloop.cpp"
 if($17){label=11;break;}else{label=7;break;} //@line 163 "mainloop.cpp"
 case 7: 
 var $19=HEAP8[($isLost)]; //@line 164 "mainloop.cpp"
 var $20=(($19)&1); //@line 164 "mainloop.cpp"
 if($20){label=8;break;}else{label=9;break;} //@line 164 "mainloop.cpp"
 case 8: 
 var $22=__ZN14conLoggerClass7logLineEPcbbbz(19416,6928,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 167 "mainloop.cpp"
 var $23=__ZN15diKeyboardClass7acquireEv(19440); //@line 168 "mainloop.cpp"
 var $24=__ZN15diKeyboardClass7getKeysEPb(19440,0); //@line 169 "mainloop.cpp"
 label=10;break; //@line 170 "mainloop.cpp"
 case 9: 
 var $26=__ZN14conLoggerClass7logLineEPcbbbz(19416,5584,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 172 "mainloop.cpp"
 $1=0; //@line 173 "mainloop.cpp"
 label=22;break; //@line 173 "mainloop.cpp"
 case 10: 
 label=11;break; //@line 175 "mainloop.cpp"
 case 11: 
 var $29=HEAP32[((19824)>>2)]; //@line 190 "mainloop.cpp"
 if(($29|0)==1){ label=12;break;}else if(($29|0)==2){ label=13;break;}else if(($29|0)==3){ label=14;break;}else{label=15;break;}
 case 12: 
 var $31=$3; //@line 192 "mainloop.cpp"
 var $32=__ZN12GameLoopCode12executeFrameEm($31); //@line 192 "mainloop.cpp"
 var $33=($32&1); //@line 192 "mainloop.cpp"
 $retval=$33; //@line 192 "mainloop.cpp"
 label=15;break; //@line 193 "mainloop.cpp"
 case 13: 
 var $35=$3; //@line 195 "mainloop.cpp"
 var $36=__ZN13IntroLoopCode12executeFrameEm($35); //@line 195 "mainloop.cpp"
 var $37=($36&1); //@line 195 "mainloop.cpp"
 $retval=$37; //@line 195 "mainloop.cpp"
 label=15;break; //@line 196 "mainloop.cpp"
 case 14: 
 var $39=$3; //@line 198 "mainloop.cpp"
 var $40=__ZN12MenuLoopCode12executeFrameEm($39); //@line 198 "mainloop.cpp"
 var $41=($40&1); //@line 198 "mainloop.cpp"
 $retval=$41; //@line 198 "mainloop.cpp"
 label=15;break; //@line 199 "mainloop.cpp"
 case 15: 
 label=16;break; //@line 204 "mainloop.cpp"
 case 16: 
 var $44=_SDL_PollEvent($event); //@line 204 "mainloop.cpp"
 var $45=($44|0)!=0; //@line 204 "mainloop.cpp"
 if($45){label=17;break;}else{label=21;break;} //@line 204 "mainloop.cpp"
 case 17: 
 var $47=$event; //@line 205 "mainloop.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 205 "mainloop.cpp"
 if(($48|0)==256){ label=18;break;}else{label=19;break;}
 case 18: 
 var $50=$4; //@line 207 "mainloop.cpp"
 var $51=$50; //@line 207 "mainloop.cpp"
 var $52=HEAP32[(($51)>>2)]; //@line 207 "mainloop.cpp"
 var $53=(($52+16)|0); //@line 207 "mainloop.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 207 "mainloop.cpp"
 FUNCTION_TABLE[$54]($50); //@line 207 "mainloop.cpp"
 label=20;break; //@line 208 "mainloop.cpp"
 case 19: 
 label=20;break; //@line 210 "mainloop.cpp"
 case 20: 
 label=16;break; //@line 212 "mainloop.cpp"
 case 21: 
 var $58=$retval; //@line 214 "mainloop.cpp"
 var $59=(($58)&1); //@line 214 "mainloop.cpp"
 $1=$59; //@line 214 "mainloop.cpp"
 label=22;break; //@line 214 "mainloop.cpp"
 case 22: 
 var $61=$1; //@line 215 "mainloop.cpp"
 STACKTOP=sp;return $61; //@line 215 "mainloop.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13mainLoopClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN13mainLoopClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 52 "./mainloop.h"
 case 2: 
 var $6=$4; //@line 52 "./mainloop.h"
 __ZdlPv($6); //@line 52 "./mainloop.h"
 STACKTOP=sp;return; //@line 52 "./mainloop.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 52 "./mainloop.h"
 var $10=$8$1;
 $3=$10; //@line 52 "./mainloop.h"
 var $11=$4; //@line 52 "./mainloop.h"
 __ZdlPv($11); //@line 52 "./mainloop.h"
 label=4;break; //@line 52 "./mainloop.h"
 case 4: 
 var $13=$2; //@line 52 "./mainloop.h"
 var $14=$3; //@line 52 "./mainloop.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 52 "./mainloop.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass26genericRemoveMemAllocationEPvb($this,$memory,$deallocate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $node;
 $2=$this;
 $3=$memory;
 var $5=($deallocate&1);
 $4=$5;
 var $6=$2;
 var $7=(($6+8)|0); //@line 41 "massDeallocator.cpp"
 var $8=HEAP8[($7)]; //@line 41 "massDeallocator.cpp"
 var $9=(($8)&1); //@line 41 "massDeallocator.cpp"
 if($9){label=3;break;}else{label=2;break;} //@line 41 "massDeallocator.cpp"
 case 2: 
 $1=0; //@line 41 "massDeallocator.cpp"
 label=28;break; //@line 41 "massDeallocator.cpp"
 case 3: 
 var $12=(($6+4)|0); //@line 44 "massDeallocator.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 44 "massDeallocator.cpp"
 $node=$13; //@line 44 "massDeallocator.cpp"
 label=4;break; //@line 44 "massDeallocator.cpp"
 case 4: 
 var $15=$node; //@line 44 "massDeallocator.cpp"
 var $16=($15|0)!=0; //@line 44 "massDeallocator.cpp"
 if($16){label=5;break;}else{var $24=0;label=6;break;} //@line 44 "massDeallocator.cpp"
 case 5: 
 var $18=$node; //@line 44 "massDeallocator.cpp"
 var $19=(($18)|0); //@line 44 "massDeallocator.cpp"
 var $20=HEAP32[(($19)>>2)]; //@line 44 "massDeallocator.cpp"
 var $21=$3; //@line 44 "massDeallocator.cpp"
 var $22=($20|0)!=($21|0); //@line 44 "massDeallocator.cpp"
 var $24=$22;label=6;break;
 case 6: 
 var $24;
 if($24){label=7;break;}else{label=9;break;}
 case 7: 
 label=8;break;
 case 8: 
 var $27=$node; //@line 46 "massDeallocator.cpp"
 var $28=(($27+16)|0); //@line 46 "massDeallocator.cpp"
 $node=$28; //@line 46 "massDeallocator.cpp"
 label=4;break; //@line 46 "massDeallocator.cpp"
 case 9: 
 var $30=$node; //@line 49 "massDeallocator.cpp"
 var $31=($30|0)==0; //@line 49 "massDeallocator.cpp"
 if($31){label=10;break;}else{label=11;break;} //@line 49 "massDeallocator.cpp"
 case 10: 
 $1=0; //@line 49 "massDeallocator.cpp"
 label=28;break; //@line 49 "massDeallocator.cpp"
 case 11: 
 var $34=$node; //@line 53 "massDeallocator.cpp"
 var $35=(($34+12)|0); //@line 53 "massDeallocator.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 53 "massDeallocator.cpp"
 var $37=($36|0)==0; //@line 53 "massDeallocator.cpp"
 if($37){label=12;break;}else{label=13;break;} //@line 53 "massDeallocator.cpp"
 case 12: 
 var $39=$node; //@line 54 "massDeallocator.cpp"
 var $40=(($39+8)|0); //@line 54 "massDeallocator.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 54 "massDeallocator.cpp"
 var $42=(($6+4)|0); //@line 54 "massDeallocator.cpp"
 HEAP32[(($42)>>2)]=$41; //@line 54 "massDeallocator.cpp"
 label=14;break; //@line 55 "massDeallocator.cpp"
 case 13: 
 var $44=$node; //@line 56 "massDeallocator.cpp"
 var $45=(($44+8)|0); //@line 56 "massDeallocator.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 56 "massDeallocator.cpp"
 var $47=$node; //@line 56 "massDeallocator.cpp"
 var $48=(($47+12)|0); //@line 56 "massDeallocator.cpp"
 var $49=HEAP32[(($48)>>2)]; //@line 56 "massDeallocator.cpp"
 var $50=(($49+8)|0); //@line 56 "massDeallocator.cpp"
 HEAP32[(($50)>>2)]=$46; //@line 56 "massDeallocator.cpp"
 label=14;break;
 case 14: 
 var $52=$node; //@line 59 "massDeallocator.cpp"
 var $53=(($52+8)|0); //@line 59 "massDeallocator.cpp"
 var $54=HEAP32[(($53)>>2)]; //@line 59 "massDeallocator.cpp"
 var $55=($54|0)!=0; //@line 59 "massDeallocator.cpp"
 if($55){label=15;break;}else{label=16;break;} //@line 59 "massDeallocator.cpp"
 case 15: 
 var $57=$node; //@line 60 "massDeallocator.cpp"
 var $58=(($57+12)|0); //@line 60 "massDeallocator.cpp"
 var $59=HEAP32[(($58)>>2)]; //@line 60 "massDeallocator.cpp"
 var $60=$node; //@line 60 "massDeallocator.cpp"
 var $61=(($60+8)|0); //@line 60 "massDeallocator.cpp"
 var $62=HEAP32[(($61)>>2)]; //@line 60 "massDeallocator.cpp"
 var $63=(($62+12)|0); //@line 60 "massDeallocator.cpp"
 HEAP32[(($63)>>2)]=$59; //@line 60 "massDeallocator.cpp"
 label=16;break; //@line 61 "massDeallocator.cpp"
 case 16: 
 var $65=$4; //@line 64 "massDeallocator.cpp"
 var $66=(($65)&1); //@line 64 "massDeallocator.cpp"
 if($66){label=17;break;}else{label=25;break;} //@line 64 "massDeallocator.cpp"
 case 17: 
 var $68=$node; //@line 65 "massDeallocator.cpp"
 var $69=(($68+4)|0); //@line 65 "massDeallocator.cpp"
 var $70=HEAP8[($69)]; //@line 65 "massDeallocator.cpp"
 var $71=(($70)&1); //@line 65 "massDeallocator.cpp"
 if($71){label=18;break;}else{label=21;break;} //@line 65 "massDeallocator.cpp"
 case 18: 
 var $73=$node; //@line 67 "massDeallocator.cpp"
 var $74=(($73)|0); //@line 67 "massDeallocator.cpp"
 var $75=HEAP32[(($74)>>2)]; //@line 67 "massDeallocator.cpp"
 var $76=($75|0)==0; //@line 67 "massDeallocator.cpp"
 if($76){label=20;break;}else{label=19;break;} //@line 67 "massDeallocator.cpp"
 case 19: 
 __ZdlPv($75); //@line 67 "massDeallocator.cpp"
 label=20;break; //@line 67 "massDeallocator.cpp"
 case 20: 
 label=24;break; //@line 68 "massDeallocator.cpp"
 case 21: 
 var $80=$node; //@line 70 "massDeallocator.cpp"
 var $81=(($80)|0); //@line 70 "massDeallocator.cpp"
 var $82=HEAP32[(($81)>>2)]; //@line 70 "massDeallocator.cpp"
 var $83=($82|0)==0; //@line 70 "massDeallocator.cpp"
 if($83){label=23;break;}else{label=22;break;} //@line 70 "massDeallocator.cpp"
 case 22: 
 __ZdaPv($82); //@line 70 "massDeallocator.cpp"
 label=23;break; //@line 70 "massDeallocator.cpp"
 case 23: 
 label=24;break;
 case 24: 
 label=25;break; //@line 72 "massDeallocator.cpp"
 case 25: 
 var $88=$node; //@line 75 "massDeallocator.cpp"
 var $89=($88|0)==0; //@line 75 "massDeallocator.cpp"
 if($89){label=27;break;}else{label=26;break;} //@line 75 "massDeallocator.cpp"
 case 26: 
 var $91=$88; //@line 75 "massDeallocator.cpp"
 __ZdlPv($91); //@line 75 "massDeallocator.cpp"
 label=27;break; //@line 75 "massDeallocator.cpp"
 case 27: 
 $1=1; //@line 77 "massDeallocator.cpp"
 label=28;break; //@line 77 "massDeallocator.cpp"
 case 28: 
 var $94=$1; //@line 78 "massDeallocator.cpp"
 STACKTOP=sp;return $94; //@line 78 "massDeallocator.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+8)|0); //@line 88 "massDeallocator.cpp"
 var $5=HEAP8[($4)]; //@line 88 "massDeallocator.cpp"
 var $6=(($5)&1); //@line 88 "massDeallocator.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 88 "massDeallocator.cpp"
 case 2: 
 $1=0; //@line 88 "massDeallocator.cpp"
 label=4;break; //@line 88 "massDeallocator.cpp"
 case 3: 
 var $9=(($3+8)|0); //@line 90 "massDeallocator.cpp"
 HEAP8[($9)]=1; //@line 90 "massDeallocator.cpp"
 var $10=(($3+4)|0); //@line 91 "massDeallocator.cpp"
 HEAP32[(($10)>>2)]=0; //@line 91 "massDeallocator.cpp"
 $1=1; //@line 93 "massDeallocator.cpp"
 label=4;break; //@line 93 "massDeallocator.cpp"
 case 4: 
 var $12=$1; //@line 94 "massDeallocator.cpp"
 STACKTOP=sp;return $12; //@line 94 "massDeallocator.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass5closeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ok;
 $2=$this;
 var $3=$2;
 var $4=(($3+8)|0); //@line 102 "massDeallocator.cpp"
 var $5=HEAP8[($4)]; //@line 102 "massDeallocator.cpp"
 var $6=(($5)&1); //@line 102 "massDeallocator.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 102 "massDeallocator.cpp"
 case 2: 
 $1=0; //@line 102 "massDeallocator.cpp"
 label=4;break; //@line 102 "massDeallocator.cpp"
 case 3: 
 var $9=$3; //@line 105 "massDeallocator.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 105 "massDeallocator.cpp"
 var $11=(($10+24)|0); //@line 105 "massDeallocator.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 105 "massDeallocator.cpp"
 var $13=FUNCTION_TABLE[$12]($3); //@line 105 "massDeallocator.cpp"
 var $14=($13&1); //@line 105 "massDeallocator.cpp"
 $ok=$14; //@line 105 "massDeallocator.cpp"
 var $15=(($3+8)|0); //@line 108 "massDeallocator.cpp"
 HEAP8[($15)]=0; //@line 108 "massDeallocator.cpp"
 var $16=$ok; //@line 109 "massDeallocator.cpp"
 var $17=(($16)&1); //@line 109 "massDeallocator.cpp"
 $1=$17; //@line 109 "massDeallocator.cpp"
 label=4;break; //@line 109 "massDeallocator.cpp"
 case 4: 
 var $19=$1; //@line 110 "massDeallocator.cpp"
 STACKTOP=sp;return $19; //@line 110 "massDeallocator.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass16addMemAllocationEPvb($this,$memory,$oneOrMany){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $node;
 $2=$this;
 $3=$memory;
 var $5=($oneOrMany&1);
 $4=$5;
 var $6=$2;
 var $7=(($6+8)|0); //@line 124 "massDeallocator.cpp"
 var $8=HEAP8[($7)]; //@line 124 "massDeallocator.cpp"
 var $9=(($8)&1); //@line 124 "massDeallocator.cpp"
 if($9){label=3;break;}else{label=2;break;} //@line 124 "massDeallocator.cpp"
 case 2: 
 $1=0; //@line 124 "massDeallocator.cpp"
 label=6;break; //@line 124 "massDeallocator.cpp"
 case 3: 
 var $12=__Znwj(16); //@line 127 "massDeallocator.cpp"
 var $13=$12; //@line 127 "massDeallocator.cpp"
 $node=$13; //@line 127 "massDeallocator.cpp"
 var $14=$3; //@line 128 "massDeallocator.cpp"
 var $15=$node; //@line 128 "massDeallocator.cpp"
 var $16=(($15)|0); //@line 128 "massDeallocator.cpp"
 HEAP32[(($16)>>2)]=$14; //@line 128 "massDeallocator.cpp"
 var $17=$4; //@line 129 "massDeallocator.cpp"
 var $18=(($17)&1); //@line 129 "massDeallocator.cpp"
 var $19=$node; //@line 129 "massDeallocator.cpp"
 var $20=(($19+4)|0); //@line 129 "massDeallocator.cpp"
 var $21=($18&1); //@line 129 "massDeallocator.cpp"
 HEAP8[($20)]=$21; //@line 129 "massDeallocator.cpp"
 var $22=$node; //@line 130 "massDeallocator.cpp"
 var $23=(($22+12)|0); //@line 130 "massDeallocator.cpp"
 HEAP32[(($23)>>2)]=0; //@line 130 "massDeallocator.cpp"
 var $24=(($6+4)|0); //@line 133 "massDeallocator.cpp"
 var $25=HEAP32[(($24)>>2)]; //@line 133 "massDeallocator.cpp"
 var $26=$node; //@line 133 "massDeallocator.cpp"
 var $27=(($26+8)|0); //@line 133 "massDeallocator.cpp"
 HEAP32[(($27)>>2)]=$25; //@line 133 "massDeallocator.cpp"
 var $28=$node; //@line 134 "massDeallocator.cpp"
 var $29=(($28+8)|0); //@line 134 "massDeallocator.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 134 "massDeallocator.cpp"
 var $31=($30|0)!=0; //@line 134 "massDeallocator.cpp"
 if($31){label=4;break;}else{label=5;break;} //@line 134 "massDeallocator.cpp"
 case 4: 
 var $33=$node; //@line 134 "massDeallocator.cpp"
 var $34=$node; //@line 134 "massDeallocator.cpp"
 var $35=(($34+8)|0); //@line 134 "massDeallocator.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 134 "massDeallocator.cpp"
 var $37=(($36+12)|0); //@line 134 "massDeallocator.cpp"
 HEAP32[(($37)>>2)]=$33; //@line 134 "massDeallocator.cpp"
 label=5;break; //@line 134 "massDeallocator.cpp"
 case 5: 
 var $39=$node; //@line 135 "massDeallocator.cpp"
 var $40=(($6+4)|0); //@line 135 "massDeallocator.cpp"
 HEAP32[(($40)>>2)]=$39; //@line 135 "massDeallocator.cpp"
 $1=1; //@line 138 "massDeallocator.cpp"
 label=6;break; //@line 138 "massDeallocator.cpp"
 case 6: 
 var $42=$1; //@line 139 "massDeallocator.cpp"
 STACKTOP=sp;return $42; //@line 139 "massDeallocator.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass19removeMemAllocationEPv($this,$memory){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$memory;
 var $3=$1;
 var $4=$2; //@line 149 "massDeallocator.cpp"
 var $5=__ZN20massDeallocatorClass26genericRemoveMemAllocationEPvb($3,$4,0); //@line 149 "massDeallocator.cpp"
 STACKTOP=sp;return $5; //@line 149 "massDeallocator.cpp"
}


function __ZN20massDeallocatorClass14massDeallocateEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $node;
 var $nextNode;
 $2=$this;
 var $3=$2;
 var $4=(($3+8)|0); //@line 163 "massDeallocator.cpp"
 var $5=HEAP8[($4)]; //@line 163 "massDeallocator.cpp"
 var $6=(($5)&1); //@line 163 "massDeallocator.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 163 "massDeallocator.cpp"
 case 2: 
 $1=0; //@line 163 "massDeallocator.cpp"
 label=17;break; //@line 163 "massDeallocator.cpp"
 case 3: 
 var $9=(($3+4)|0); //@line 166 "massDeallocator.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 166 "massDeallocator.cpp"
 $node=$10; //@line 166 "massDeallocator.cpp"
 label=4;break; //@line 166 "massDeallocator.cpp"
 case 4: 
 var $12=$node; //@line 166 "massDeallocator.cpp"
 var $13=($12|0)!=0; //@line 166 "massDeallocator.cpp"
 if($13){label=5;break;}else{label=16;break;} //@line 166 "massDeallocator.cpp"
 case 5: 
 var $15=$node; //@line 171 "massDeallocator.cpp"
 var $16=(($15+4)|0); //@line 171 "massDeallocator.cpp"
 var $17=HEAP8[($16)]; //@line 171 "massDeallocator.cpp"
 var $18=(($17)&1); //@line 171 "massDeallocator.cpp"
 if($18){label=6;break;}else{label=9;break;} //@line 171 "massDeallocator.cpp"
 case 6: 
 var $20=$node; //@line 173 "massDeallocator.cpp"
 var $21=(($20)|0); //@line 173 "massDeallocator.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 173 "massDeallocator.cpp"
 var $23=($22|0)==0; //@line 173 "massDeallocator.cpp"
 if($23){label=8;break;}else{label=7;break;} //@line 173 "massDeallocator.cpp"
 case 7: 
 __ZdlPv($22); //@line 173 "massDeallocator.cpp"
 label=8;break; //@line 173 "massDeallocator.cpp"
 case 8: 
 label=12;break; //@line 174 "massDeallocator.cpp"
 case 9: 
 var $27=$node; //@line 176 "massDeallocator.cpp"
 var $28=(($27)|0); //@line 176 "massDeallocator.cpp"
 var $29=HEAP32[(($28)>>2)]; //@line 176 "massDeallocator.cpp"
 var $30=($29|0)==0; //@line 176 "massDeallocator.cpp"
 if($30){label=11;break;}else{label=10;break;} //@line 176 "massDeallocator.cpp"
 case 10: 
 __ZdaPv($29); //@line 176 "massDeallocator.cpp"
 label=11;break; //@line 176 "massDeallocator.cpp"
 case 11: 
 label=12;break;
 case 12: 
 var $34=$node; //@line 181 "massDeallocator.cpp"
 var $35=(($34+8)|0); //@line 181 "massDeallocator.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 181 "massDeallocator.cpp"
 $nextNode=$36; //@line 181 "massDeallocator.cpp"
 var $37=$node; //@line 182 "massDeallocator.cpp"
 var $38=($37|0)==0; //@line 182 "massDeallocator.cpp"
 if($38){label=14;break;}else{label=13;break;} //@line 182 "massDeallocator.cpp"
 case 13: 
 var $40=$37; //@line 182 "massDeallocator.cpp"
 __ZdlPv($40); //@line 182 "massDeallocator.cpp"
 label=14;break; //@line 182 "massDeallocator.cpp"
 case 14: 
 label=15;break; //@line 183 "massDeallocator.cpp"
 case 15: 
 var $43=$nextNode; //@line 168 "massDeallocator.cpp"
 $node=$43; //@line 168 "massDeallocator.cpp"
 label=4;break; //@line 168 "massDeallocator.cpp"
 case 16: 
 var $45=(($3+4)|0); //@line 187 "massDeallocator.cpp"
 HEAP32[(($45)>>2)]=0; //@line 187 "massDeallocator.cpp"
 $1=1; //@line 190 "massDeallocator.cpp"
 label=17;break; //@line 190 "massDeallocator.cpp"
 case 17: 
 var $47=$1; //@line 191 "massDeallocator.cpp"
 STACKTOP=sp;return $47; //@line 191 "massDeallocator.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass13deallocateOneEPv($this,$memory){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$this;
 $2=$memory;
 var $3=$1;
 var $4=$2; //@line 199 "massDeallocator.cpp"
 var $5=__ZN20massDeallocatorClass26genericRemoveMemAllocationEPvb($3,$4,1); //@line 199 "massDeallocator.cpp"
 STACKTOP=sp;return $5; //@line 199 "massDeallocator.cpp"
}


function __ZN20massDeallocatorClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN20massDeallocatorClassD2Ev($2); //@line 68 "./massDeallocator.h"
 STACKTOP=sp;return; //@line 68 "./massDeallocator.h"
}


function __ZN20massDeallocatorClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN20massDeallocatorClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 68 "./massDeallocator.h"
 case 2: 
 var $6=$4; //@line 68 "./massDeallocator.h"
 __ZdlPv($6); //@line 68 "./massDeallocator.h"
 STACKTOP=sp;return; //@line 68 "./massDeallocator.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 68 "./massDeallocator.h"
 var $10=$8$1;
 $3=$10; //@line 68 "./massDeallocator.h"
 var $11=$4; //@line 68 "./massDeallocator.h"
 __ZdlPv($11); //@line 68 "./massDeallocator.h"
 label=4;break; //@line 68 "./massDeallocator.h"
 case 4: 
 var $13=$2; //@line 68 "./massDeallocator.h"
 var $14=$3; //@line 68 "./massDeallocator.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 68 "./massDeallocator.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 83 "./massDeallocator.h"
 var $4=HEAP8[($3)]; //@line 83 "./massDeallocator.h"
 var $5=(($4)&1); //@line 83 "./massDeallocator.h"
 STACKTOP=sp;return $5; //@line 83 "./massDeallocator.h"
}


function __ZN20massDeallocatorClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 68 "./massDeallocator.h"
 HEAP32[(($3)>>2)]=16632; //@line 68 "./massDeallocator.h"
 var $4=$2; //@line 68 "./massDeallocator.h"
 var $5=HEAP32[(($4)>>2)]; //@line 68 "./massDeallocator.h"
 var $6=(($5+32)|0); //@line 68 "./massDeallocator.h"
 var $7=HEAP32[(($6)>>2)]; //@line 68 "./massDeallocator.h"
 var $8=FUNCTION_TABLE[$7]($2); //@line 68 "./massDeallocator.h"
 if($8){label=2;break;}else{label=3;break;} //@line 68 "./massDeallocator.h"
 case 2: 
 var $10=$2; //@line 68 "./massDeallocator.h"
 var $11=HEAP32[(($10)>>2)]; //@line 68 "./massDeallocator.h"
 var $12=(($11+12)|0); //@line 68 "./massDeallocator.h"
 var $13=HEAP32[(($12)>>2)]; //@line 68 "./massDeallocator.h"
 var $14=FUNCTION_TABLE[$13]($2); //@line 68 "./massDeallocator.h"
 label=3;break; //@line 68 "./massDeallocator.h"
 case 3: 
 STACKTOP=sp;return; //@line 68 "./massDeallocator.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18luaResetHighScoresP9lua_State($lstate){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $paramNum;
 $2=$lstate;
 var $3=$2; //@line 64 "menucode.cpp"
 var $4=_lua_gettop($3); //@line 64 "menucode.cpp"
 $paramNum=$4; //@line 64 "menucode.cpp"
 var $5=HEAP32[((19276)>>2)]; //@line 67 "menucode.cpp"
 var $6=__ZN22highScoresManagerClass9resetListEv($5); //@line 67 "menucode.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 67 "menucode.cpp"
 case 2: 
 $1=0; //@line 68 "menucode.cpp"
 label=4;break; //@line 68 "menucode.cpp"
 case 3: 
 var $9=__ZN16optionsFileClass4saveEv(19264); //@line 69 "menucode.cpp"
 var $10=__ZN14conLoggerClass7logLineEPcbbbz(19416,10792,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 72 "menucode.cpp"
 $1=0; //@line 74 "menucode.cpp"
 label=4;break; //@line 74 "menucode.cpp"
 case 4: 
 var $12=$1; //@line 75 "menucode.cpp"
 STACKTOP=sp;return $12; //@line 75 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18luaSetSoundEnabledP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$lstate;
 STACKTOP=sp;return 0; //@line 106 "menucode.cpp"
}


function __Z27luaStopAndPlaySoundResourceP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$lstate;
 STACKTOP=sp;return 0; //@line 122 "menucode.cpp"
}


function __Z20luaPlaySoundResourceP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$lstate;
 STACKTOP=sp;return 0; //@line 140 "menucode.cpp"
}


function __Z20luaStopSoundResourceP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$lstate;
 STACKTOP=sp;return 0; //@line 156 "menucode.cpp"
}


function __Z23luaUpdateHighScoresListP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $hScore;
 var $paramNum;
 var $i;
 $1=$lstate;
 var $2=$1; //@line 165 "menucode.cpp"
 var $3=_lua_gettop($2); //@line 165 "menucode.cpp"
 $paramNum=$3; //@line 165 "menucode.cpp"
 var $4=$1; //@line 169 "menucode.cpp"
 _lua_createtable($4,0,0); //@line 169 "menucode.cpp"
 $i=1; //@line 172 "menucode.cpp"
 label=2;break; //@line 172 "menucode.cpp"
 case 2: 
 var $6=$i; //@line 172 "menucode.cpp"
 var $7=($6|0)<10; //@line 172 "menucode.cpp"
 if($7){label=3;break;}else{label=5;break;} //@line 172 "menucode.cpp"
 case 3: 
 var $9=$1; //@line 175 "menucode.cpp"
 var $10=$i; //@line 175 "menucode.cpp"
 var $11=($10|0); //@line 175 "menucode.cpp"
 _lua_pushnumber($9,$11); //@line 175 "menucode.cpp"
 var $12=$1; //@line 177 "menucode.cpp"
 _lua_createtable($12,0,0); //@line 177 "menucode.cpp"
 var $13=$1; //@line 178 "menucode.cpp"
 var $14=_lua_pushstring($13,14968); //@line 178 "menucode.cpp"
 var $15=$1; //@line 179 "menucode.cpp"
 var $16=_lua_pushstring($15,11672); //@line 179 "menucode.cpp"
 var $17=$1; //@line 180 "menucode.cpp"
 _lua_rawset($17,-3); //@line 180 "menucode.cpp"
 var $18=$1; //@line 181 "menucode.cpp"
 var $19=_lua_pushstring($18,8792); //@line 181 "menucode.cpp"
 var $20=$1; //@line 182 "menucode.cpp"
 var $21=$i; //@line 182 "menucode.cpp"
 var $22=(((10)-($21))|0); //@line 182 "menucode.cpp"
 var $23=((($22)*(3))&-1); //@line 182 "menucode.cpp"
 var $24=($23|0); //@line 182 "menucode.cpp"
 _lua_pushnumber($20,$24); //@line 182 "menucode.cpp"
 var $25=$1; //@line 183 "menucode.cpp"
 _lua_rawset($25,-3); //@line 183 "menucode.cpp"
 var $26=$1; //@line 185 "menucode.cpp"
 _lua_rawset($26,-3); //@line 185 "menucode.cpp"
 label=4;break; //@line 186 "menucode.cpp"
 case 4: 
 var $28=$i; //@line 172 "menucode.cpp"
 var $29=((($28)+(1))|0); //@line 172 "menucode.cpp"
 $i=$29; //@line 172 "menucode.cpp"
 label=2;break; //@line 172 "menucode.cpp"
 case 5: 
 var $31=$1; //@line 208 "menucode.cpp"
 _lua_setglobal($31,6912); //@line 208 "menucode.cpp"
 STACKTOP=sp;return 0; //@line 210 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z21luaSetCurrentLanguageP9lua_State($lstate){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $langName;
 var $paramNum;
 $1=$lstate;
 var $2=$1; //@line 219 "menucode.cpp"
 var $3=_lua_gettop($2); //@line 219 "menucode.cpp"
 $paramNum=$3; //@line 219 "menucode.cpp"
 var $4=$1; //@line 222 "menucode.cpp"
 var $5=_lua_tolstring($4,1,0); //@line 222 "menucode.cpp"
 $langName=$5; //@line 222 "menucode.cpp"
 var $6=$langName; //@line 224 "menucode.cpp"
 var $7=_strcmp($6,5576); //@line 224 "menucode.cpp"
 var $8=($7|0)==0; //@line 224 "menucode.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 224 "menucode.cpp"
 case 2: 
 HEAP32[((19848)>>2)]=0; //@line 225 "menucode.cpp"
 label=7;break; //@line 226 "menucode.cpp"
 case 3: 
 var $11=$langName; //@line 226 "menucode.cpp"
 var $12=_strcmp($11,4808); //@line 226 "menucode.cpp"
 var $13=($12|0)==0; //@line 226 "menucode.cpp"
 if($13){label=4;break;}else{label=5;break;} //@line 226 "menucode.cpp"
 case 4: 
 HEAP32[((19848)>>2)]=1; //@line 227 "menucode.cpp"
 label=6;break; //@line 228 "menucode.cpp"
 case 5: 
 label=6;break;
 case 6: 
 label=7;break;
 case 7: 
 var $18=HEAP32[((19848)>>2)]; //@line 233 "menucode.cpp"
 var $19=__ZN18scriptManagerClass23setCurrentLanguageInLuaE12languageEnum(18600,$18); //@line 233 "menucode.cpp"
 var $20=HEAP32[((19848)>>2)]; //@line 236 "menucode.cpp"
 var $21=__ZN16optionsFileClass17getOptionsPointerEv(19264); //@line 236 "menucode.cpp"
 var $22=(($21+8)|0); //@line 236 "menucode.cpp"
 HEAP32[(($22)>>2)]=$20; //@line 236 "menucode.cpp"
 var $23=__ZN16optionsFileClass4saveEv(19264); //@line 238 "menucode.cpp"
 var $24=$langName; //@line 241 "menucode.cpp"
 var $25=__ZN14conLoggerClass7logLineEPcbbbz(19416,4080,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$24,tempVarArgs)); STACKTOP=tempVarArgs; //@line 241 "menucode.cpp"
 STACKTOP=sp;return 0; //@line 244 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z17luaMenuSetMouseXYP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $paramNum;
 $1=$lstate;
 var $2=$1; //@line 251 "menucode.cpp"
 var $3=_lua_gettop($2); //@line 251 "menucode.cpp"
 $paramNum=$3; //@line 251 "menucode.cpp"
 var $4=$1; //@line 254 "menucode.cpp"
 var $5=_lua_tonumberx($4,1,0); //@line 254 "menucode.cpp"
 var $6=(($5)&-1); //@line 254 "menucode.cpp"
 HEAP32[((20560)>>2)]=$6; //@line 254 "menucode.cpp"
 var $7=$1; //@line 255 "menucode.cpp"
 var $8=_lua_tonumberx($7,2,0); //@line 255 "menucode.cpp"
 var $9=(($8)&-1); //@line 255 "menucode.cpp"
 HEAP32[((20552)>>2)]=$9; //@line 255 "menucode.cpp"
 STACKTOP=sp;return 0; //@line 257 "menucode.cpp"
}


function __Z15luaSwitchToMenuP9lua_State($lstate){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $menuName;
 var $errCode;
 var $paramNum;
 $2=$lstate;
 var $3=$2; //@line 267 "menucode.cpp"
 var $4=_lua_gettop($3); //@line 267 "menucode.cpp"
 $paramNum=$4; //@line 267 "menucode.cpp"
 var $5=$2; //@line 270 "menucode.cpp"
 var $6=_lua_tolstring($5,1,0); //@line 270 "menucode.cpp"
 $menuName=$6; //@line 270 "menucode.cpp"
 var $7=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 273 "menucode.cpp"
 $2=$7; //@line 273 "menucode.cpp"
 var $8=$2; //@line 274 "menucode.cpp"
 _lua_getglobal($8,3312); //@line 274 "menucode.cpp"
 var $9=$2; //@line 275 "menucode.cpp"
 _lua_getglobal($9,2656); //@line 275 "menucode.cpp"
 var $10=$2; //@line 276 "menucode.cpp"
 var $11=$menuName; //@line 276 "menucode.cpp"
 var $12=_lua_pushstring($10,$11); //@line 276 "menucode.cpp"
 var $13=$2; //@line 277 "menucode.cpp"
 var $14=_lua_pcallk($13,1,0,-3,0,0); //@line 277 "menucode.cpp"
 $errCode=$14; //@line 277 "menucode.cpp"
 var $15=$2; //@line 278 "menucode.cpp"
 _lua_settop($15,-2); //@line 278 "menucode.cpp"
 var $16=$errCode; //@line 279 "menucode.cpp"
 var $17=($16|0)!=0; //@line 279 "menucode.cpp"
 if($17){label=2;break;}else{label=3;break;} //@line 279 "menucode.cpp"
 case 2: 
 var $19=$2; //@line 280 "menucode.cpp"
 _lua_settop($19,-2); //@line 280 "menucode.cpp"
 var $20=__ZN14conLoggerClass7logLineEPcbbbz(19416,16192,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 281 "menucode.cpp"
 $1=0; //@line 282 "menucode.cpp"
 label=11;break; //@line 282 "menucode.cpp"
 case 3: 
 var $22=$menuName; //@line 286 "menucode.cpp"
 var $23=_strcmp($22,15576); //@line 286 "menucode.cpp"
 var $24=($23|0)==0; //@line 286 "menucode.cpp"
 if($24){label=4;break;}else{label=7;break;} //@line 286 "menucode.cpp"
 case 4: 
 HEAP32[((19496)>>2)]=1; //@line 288 "menucode.cpp"
 var $26=__Z19switchToProgramZone16programZonesEnummmb(1,1,0,1); //@line 290 "menucode.cpp"
 if($26){label=6;break;}else{label=5;break;} //@line 290 "menucode.cpp"
 case 5: 
 $1=0; //@line 291 "menucode.cpp"
 label=11;break; //@line 291 "menucode.cpp"
 case 6: 
 label=10;break; //@line 292 "menucode.cpp"
 case 7: 
 var $30=$menuName; //@line 292 "menucode.cpp"
 var $31=_strcmp($30,15080); //@line 292 "menucode.cpp"
 var $32=($31|0)==0; //@line 292 "menucode.cpp"
 if($32){label=8;break;}else{label=9;break;} //@line 292 "menucode.cpp"
 case 8: 
 HEAP8[(19280)]=1; //@line 294 "menucode.cpp"
 label=9;break; //@line 295 "menucode.cpp"
 case 9: 
 label=10;break;
 case 10: 
 $1=0; //@line 297 "menucode.cpp"
 label=11;break; //@line 297 "menucode.cpp"
 case 11: 
 var $37=$1; //@line 298 "menucode.cpp"
 STACKTOP=sp;return $37; //@line 298 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN18scriptManagerClass12getLuaObjectEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 66 "./scriptman.h"
 var $4=HEAP32[(($3)>>2)]; //@line 66 "./scriptman.h"
 STACKTOP=sp;return $4; //@line 66 "./scriptman.h"
}


function __Z15luaMenuBltImageP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $surface;
 var $paramNum;
 var $xD;
 var $yD;
 var $xS;
 var $yS;
 var $wS;
 var $hS;
 var $transparent;
 var $srfName;
 $1=$lstate;
 var $2=$1; //@line 306 "menucode.cpp"
 var $3=_lua_gettop($2); //@line 306 "menucode.cpp"
 $paramNum=$3; //@line 306 "menucode.cpp"
 var $4=$paramNum; //@line 313 "menucode.cpp"
 if(($4|0)==4){ label=2;break;}else if(($4|0)==8){ label=3;break;}else{label=4;break;}
 case 2: 
 var $6=$1; //@line 318 "menucode.cpp"
 var $7=_lua_tolstring($6,1,0); //@line 318 "menucode.cpp"
 $srfName=$7; //@line 318 "menucode.cpp"
 var $8=$1; //@line 319 "menucode.cpp"
 var $9=_lua_tonumberx($8,2,0); //@line 319 "menucode.cpp"
 var $10=(($9)&-1); //@line 319 "menucode.cpp"
 $xD=$10; //@line 319 "menucode.cpp"
 var $11=$1; //@line 320 "menucode.cpp"
 var $12=_lua_tonumberx($11,3,0); //@line 320 "menucode.cpp"
 var $13=(($12)&-1); //@line 320 "menucode.cpp"
 $yD=$13; //@line 320 "menucode.cpp"
 var $14=$1; //@line 321 "menucode.cpp"
 var $15=_lua_toboolean($14,4); //@line 321 "menucode.cpp"
 var $16=($15|0)==1; //@line 321 "menucode.cpp"
 var $17=($16?1:0); //@line 321 "menucode.cpp"
 var $18=($17&1); //@line 321 "menucode.cpp"
 $transparent=$18; //@line 321 "menucode.cpp"
 var $19=$srfName; //@line 324 "menucode.cpp"
 var $20=__Z24getSurfaceByResourceNamePc($19); //@line 324 "menucode.cpp"
 var $21=$20; //@line 324 "menucode.cpp"
 $surface=$21; //@line 324 "menucode.cpp"
 var $22=HEAP32[((20632)>>2)]; //@line 327 "menucode.cpp"
 var $23=$22; //@line 327 "menucode.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 327 "menucode.cpp"
 var $25=(($24+8)|0); //@line 327 "menucode.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 327 "menucode.cpp"
 var $27=$surface; //@line 327 "menucode.cpp"
 var $28=$xD; //@line 327 "menucode.cpp"
 var $29=$yD; //@line 327 "menucode.cpp"
 var $30=$transparent; //@line 327 "menucode.cpp"
 var $31=(($30)&1); //@line 327 "menucode.cpp"
 var $32=FUNCTION_TABLE[$26]($22,$27,$28,$29,1,$31); //@line 327 "menucode.cpp"
 label=4;break; //@line 330 "menucode.cpp"
 case 3: 
 var $34=$1; //@line 335 "menucode.cpp"
 var $35=_lua_tolstring($34,1,0); //@line 335 "menucode.cpp"
 $srfName=$35; //@line 335 "menucode.cpp"
 var $36=$1; //@line 336 "menucode.cpp"
 var $37=_lua_tonumberx($36,2,0); //@line 336 "menucode.cpp"
 var $38=(($37)&-1); //@line 336 "menucode.cpp"
 $xD=$38; //@line 336 "menucode.cpp"
 var $39=$1; //@line 337 "menucode.cpp"
 var $40=_lua_tonumberx($39,3,0); //@line 337 "menucode.cpp"
 var $41=(($40)&-1); //@line 337 "menucode.cpp"
 $yD=$41; //@line 337 "menucode.cpp"
 var $42=$1; //@line 338 "menucode.cpp"
 var $43=_lua_tonumberx($42,4,0); //@line 338 "menucode.cpp"
 var $44=(($43)&-1); //@line 338 "menucode.cpp"
 $xS=$44; //@line 338 "menucode.cpp"
 var $45=$1; //@line 339 "menucode.cpp"
 var $46=_lua_tonumberx($45,5,0); //@line 339 "menucode.cpp"
 var $47=(($46)&-1); //@line 339 "menucode.cpp"
 $yS=$47; //@line 339 "menucode.cpp"
 var $48=$1; //@line 340 "menucode.cpp"
 var $49=_lua_tonumberx($48,6,0); //@line 340 "menucode.cpp"
 var $50=(($49)&-1); //@line 340 "menucode.cpp"
 $wS=$50; //@line 340 "menucode.cpp"
 var $51=$1; //@line 341 "menucode.cpp"
 var $52=_lua_tonumberx($51,7,0); //@line 341 "menucode.cpp"
 var $53=(($52)&-1); //@line 341 "menucode.cpp"
 $hS=$53; //@line 341 "menucode.cpp"
 var $54=$1; //@line 342 "menucode.cpp"
 var $55=_lua_toboolean($54,8); //@line 342 "menucode.cpp"
 var $56=($55|0)==1; //@line 342 "menucode.cpp"
 var $57=($56?1:0); //@line 342 "menucode.cpp"
 var $58=($57&1); //@line 342 "menucode.cpp"
 $transparent=$58; //@line 342 "menucode.cpp"
 var $59=$srfName; //@line 345 "menucode.cpp"
 var $60=__Z24getSurfaceByResourceNamePc($59); //@line 345 "menucode.cpp"
 var $61=$60; //@line 345 "menucode.cpp"
 $surface=$61; //@line 345 "menucode.cpp"
 var $62=HEAP32[((20632)>>2)]; //@line 348 "menucode.cpp"
 var $63=$62; //@line 348 "menucode.cpp"
 var $64=HEAP32[(($63)>>2)]; //@line 348 "menucode.cpp"
 var $65=(($64+12)|0); //@line 348 "menucode.cpp"
 var $66=HEAP32[(($65)>>2)]; //@line 348 "menucode.cpp"
 var $67=$surface; //@line 348 "menucode.cpp"
 var $68=$xD; //@line 348 "menucode.cpp"
 var $69=$yD; //@line 348 "menucode.cpp"
 var $70=$xS; //@line 348 "menucode.cpp"
 var $71=$yS; //@line 348 "menucode.cpp"
 var $72=$wS; //@line 348 "menucode.cpp"
 var $73=$hS; //@line 348 "menucode.cpp"
 var $74=$transparent; //@line 348 "menucode.cpp"
 var $75=(($74)&1); //@line 348 "menucode.cpp"
 var $76=FUNCTION_TABLE[$66]($62,$67,$68,$69,$70,$71,$72,$73,1,$75); //@line 348 "menucode.cpp"
 label=4;break; //@line 351 "menucode.cpp"
 case 4: 
 STACKTOP=sp;return 0; //@line 354 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z15luaMenuDrawTextP9lua_State($lstate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $fontName;
 var $text;
 var $font;
 var $x;
 var $y;
 var $boxWidth;
 var $boxHeight;
 var $h_align;
 var $v_align;
 var $alignvTmp;
 var $alignhTmp;
 $1=$lstate;
 var $2=$1; //@line 373 "menucode.cpp"
 var $3=_lua_tolstring($2,1,0); //@line 373 "menucode.cpp"
 $fontName=$3; //@line 373 "menucode.cpp"
 var $4=$1; //@line 374 "menucode.cpp"
 var $5=_lua_tolstring($4,2,0); //@line 374 "menucode.cpp"
 $text=$5; //@line 374 "menucode.cpp"
 var $6=$1; //@line 375 "menucode.cpp"
 var $7=_lua_tonumberx($6,3,0); //@line 375 "menucode.cpp"
 var $8=(($7)&-1); //@line 375 "menucode.cpp"
 $x=$8; //@line 375 "menucode.cpp"
 var $9=$1; //@line 376 "menucode.cpp"
 var $10=_lua_tonumberx($9,4,0); //@line 376 "menucode.cpp"
 var $11=(($10)&-1); //@line 376 "menucode.cpp"
 $y=$11; //@line 376 "menucode.cpp"
 var $12=$1; //@line 377 "menucode.cpp"
 var $13=_lua_tonumberx($12,5,0); //@line 377 "menucode.cpp"
 var $14=(($13)&-1); //@line 377 "menucode.cpp"
 $boxWidth=$14; //@line 377 "menucode.cpp"
 var $15=$1; //@line 378 "menucode.cpp"
 var $16=_lua_tonumberx($15,6,0); //@line 378 "menucode.cpp"
 var $17=(($16)&-1); //@line 378 "menucode.cpp"
 $boxHeight=$17; //@line 378 "menucode.cpp"
 var $18=$1; //@line 379 "menucode.cpp"
 var $19=_lua_tolstring($18,7,0); //@line 379 "menucode.cpp"
 $alignhTmp=$19; //@line 379 "menucode.cpp"
 var $20=$1; //@line 380 "menucode.cpp"
 var $21=_lua_tolstring($20,8,0); //@line 380 "menucode.cpp"
 $alignvTmp=$21; //@line 380 "menucode.cpp"
 var $22=$fontName; //@line 383 "menucode.cpp"
 var $23=_strcmp($22,14600); //@line 383 "menucode.cpp"
 var $24=($23|0)==0; //@line 383 "menucode.cpp"
 if($24){label=2;break;}else{label=3;break;} //@line 383 "menucode.cpp"
 case 2: 
 $font=19680; //@line 384 "menucode.cpp"
 label=10;break; //@line 385 "menucode.cpp"
 case 3: 
 var $27=$fontName; //@line 385 "menucode.cpp"
 var $28=_strcmp($27,14208); //@line 385 "menucode.cpp"
 var $29=($28|0)==0; //@line 385 "menucode.cpp"
 if($29){label=4;break;}else{label=5;break;} //@line 385 "menucode.cpp"
 case 4: 
 $font=19704; //@line 386 "menucode.cpp"
 label=9;break; //@line 387 "menucode.cpp"
 case 5: 
 var $32=$fontName; //@line 387 "menucode.cpp"
 var $33=_strcmp($32,13904); //@line 387 "menucode.cpp"
 var $34=($33|0)==0; //@line 387 "menucode.cpp"
 if($34){label=6;break;}else{label=7;break;} //@line 387 "menucode.cpp"
 case 6: 
 $font=19728; //@line 388 "menucode.cpp"
 label=8;break; //@line 389 "menucode.cpp"
 case 7: 
 $font=19728; //@line 391 "menucode.cpp"
 label=8;break;
 case 8: 
 label=9;break;
 case 9: 
 label=10;break;
 case 10: 
 var $40=$alignhTmp; //@line 395 "menucode.cpp"
 var $41=_strcmp($40,13624); //@line 395 "menucode.cpp"
 var $42=($41|0)==0; //@line 395 "menucode.cpp"
 if($42){label=11;break;}else{label=12;break;} //@line 395 "menucode.cpp"
 case 11: 
 $h_align=0; //@line 396 "menucode.cpp"
 label=19;break; //@line 397 "menucode.cpp"
 case 12: 
 var $45=$alignhTmp; //@line 397 "menucode.cpp"
 var $46=_strcmp($45,13304); //@line 397 "menucode.cpp"
 var $47=($46|0)==0; //@line 397 "menucode.cpp"
 if($47){label=13;break;}else{label=14;break;} //@line 397 "menucode.cpp"
 case 13: 
 $h_align=2; //@line 398 "menucode.cpp"
 label=18;break; //@line 399 "menucode.cpp"
 case 14: 
 var $50=$alignhTmp; //@line 399 "menucode.cpp"
 var $51=_strcmp($50,13080); //@line 399 "menucode.cpp"
 var $52=($51|0)==0; //@line 399 "menucode.cpp"
 if($52){label=15;break;}else{label=16;break;} //@line 399 "menucode.cpp"
 case 15: 
 $h_align=1; //@line 400 "menucode.cpp"
 label=17;break; //@line 401 "menucode.cpp"
 case 16: 
 $h_align=0; //@line 403 "menucode.cpp"
 label=17;break;
 case 17: 
 label=18;break;
 case 18: 
 label=19;break;
 case 19: 
 var $58=$alignvTmp; //@line 407 "menucode.cpp"
 var $59=_strcmp($58,12784); //@line 407 "menucode.cpp"
 var $60=($59|0)==0; //@line 407 "menucode.cpp"
 if($60){label=20;break;}else{label=21;break;} //@line 407 "menucode.cpp"
 case 20: 
 $v_align=0; //@line 408 "menucode.cpp"
 label=28;break; //@line 409 "menucode.cpp"
 case 21: 
 var $63=$alignvTmp; //@line 409 "menucode.cpp"
 var $64=_strcmp($63,12504); //@line 409 "menucode.cpp"
 var $65=($64|0)==0; //@line 409 "menucode.cpp"
 if($65){label=22;break;}else{label=23;break;} //@line 409 "menucode.cpp"
 case 22: 
 $v_align=2; //@line 410 "menucode.cpp"
 label=27;break; //@line 411 "menucode.cpp"
 case 23: 
 var $68=$alignvTmp; //@line 411 "menucode.cpp"
 var $69=_strcmp($68,13080); //@line 411 "menucode.cpp"
 var $70=($69|0)==0; //@line 411 "menucode.cpp"
 if($70){label=24;break;}else{label=25;break;} //@line 411 "menucode.cpp"
 case 24: 
 $v_align=1; //@line 412 "menucode.cpp"
 label=26;break; //@line 413 "menucode.cpp"
 case 25: 
 $v_align=0; //@line 415 "menucode.cpp"
 label=26;break;
 case 26: 
 label=27;break;
 case 27: 
 label=28;break;
 case 28: 
 var $76=$font; //@line 419 "menucode.cpp"
 var $77=$76; //@line 419 "menucode.cpp"
 var $78=HEAP32[(($77)>>2)]; //@line 419 "menucode.cpp"
 var $79=(($78+48)|0); //@line 419 "menucode.cpp"
 var $80=HEAP32[(($79)>>2)]; //@line 419 "menucode.cpp"
 var $81=HEAP32[((20632)>>2)]; //@line 419 "menucode.cpp"
 var $82=$text; //@line 419 "menucode.cpp"
 var $83=$text; //@line 420 "menucode.cpp"
 var $84=_strlen($83); //@line 420 "menucode.cpp"
 var $85=$x; //@line 420 "menucode.cpp"
 var $86=$y; //@line 420 "menucode.cpp"
 var $87=$boxWidth; //@line 420 "menucode.cpp"
 var $88=$boxHeight; //@line 420 "menucode.cpp"
 var $89=$h_align; //@line 420 "menucode.cpp"
 var $90=$v_align; //@line 420 "menucode.cpp"
 var $91=FUNCTION_TABLE[$80]($76,$81,$82,$84,$85,$86,$87,$88,1,$89,$90); //@line 420 "menucode.cpp"
 STACKTOP=sp;return 0; //@line 423 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12MenuLoopCode9drawFrameEv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $lstate;
 var $errCode;
 var $2=HEAPF64[((18456)>>3)]; //@line 445 "menucode.cpp"
 var $3=$2==255; //@line 445 "menucode.cpp"
 if($3){label=2;break;}else{label=3;break;} //@line 445 "menucode.cpp"
 case 2: 
 HEAP32[((20632)>>2)]=20656; //@line 447 "menucode.cpp"
 label=4;break; //@line 448 "menucode.cpp"
 case 3: 
 var $6=__Z24getSurfaceByResourceNamePc(12104); //@line 450 "menucode.cpp"
 var $7=$6; //@line 450 "menucode.cpp"
 HEAP32[((20632)>>2)]=$7; //@line 450 "menucode.cpp"
 label=4;break;
 case 4: 
 var $9=HEAP32[((20632)>>2)]; //@line 455 "menucode.cpp"
 var $10=$9; //@line 455 "menucode.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 455 "menucode.cpp"
 var $12=(($11+44)|0); //@line 455 "menucode.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 455 "menucode.cpp"
 var $14=FUNCTION_TABLE[$13]($9,0); //@line 455 "menucode.cpp"
 var $15=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 460 "menucode.cpp"
 $lstate=$15; //@line 460 "menucode.cpp"
 var $16=$lstate; //@line 461 "menucode.cpp"
 _lua_getglobal($16,3312); //@line 461 "menucode.cpp"
 var $17=$lstate; //@line 462 "menucode.cpp"
 _lua_getglobal($17,11760); //@line 462 "menucode.cpp"
 var $18=$lstate; //@line 463 "menucode.cpp"
 var $19=_lua_pcallk($18,0,0,-2,0,0); //@line 463 "menucode.cpp"
 $errCode=$19; //@line 463 "menucode.cpp"
 var $20=$lstate; //@line 464 "menucode.cpp"
 _lua_settop($20,-2); //@line 464 "menucode.cpp"
 var $21=$errCode; //@line 465 "menucode.cpp"
 var $22=($21|0)!=0; //@line 465 "menucode.cpp"
 if($22){label=5;break;}else{label=6;break;} //@line 465 "menucode.cpp"
 case 5: 
 var $24=$lstate; //@line 466 "menucode.cpp"
 _lua_settop($24,-2); //@line 466 "menucode.cpp"
 var $25=__ZN14conLoggerClass7logLineEPcbbbz(19416,11368,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 467 "menucode.cpp"
 $1=0; //@line 468 "menucode.cpp"
 label=9;break; //@line 468 "menucode.cpp"
 case 6: 
 var $27=HEAPF64[((18456)>>3)]; //@line 473 "menucode.cpp"
 var $28=$27!=255; //@line 473 "menucode.cpp"
 if($28){label=7;break;}else{label=8;break;} //@line 473 "menucode.cpp"
 case 7: 
 var $30=HEAP32[((20656)>>2)]; //@line 475 "menucode.cpp"
 var $31=(($30+24)|0); //@line 475 "menucode.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 475 "menucode.cpp"
 var $33=HEAP32[((20632)>>2)]; //@line 475 "menucode.cpp"
 var $34=HEAPF64[((18456)>>3)]; //@line 475 "menucode.cpp"
 var $35=($34>=0 ? Math_floor($34) : Math_ceil($34)); //@line 475 "menucode.cpp"
 var $36=($35&255); //@line 475 "menucode.cpp"
 var $37=FUNCTION_TABLE[$32](20656,$33,0,0,$36,0); //@line 475 "menucode.cpp"
 label=8;break; //@line 479 "menucode.cpp"
 case 8: 
 $1=1; //@line 481 "menucode.cpp"
 label=9;break; //@line 481 "menucode.cpp"
 case 9: 
 var $40=$1; //@line 482 "menucode.cpp"
 STACKTOP=sp;return $40; //@line 482 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12MenuLoopCode12executeFrameEm($frameNumber){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $lstate;
 var $errCode;
 var $keyPreviousPressed;
 var $keyNextPressed;
 var $keyClickPressed;
 var $mouseClickPressed;
 var $i;
 $2=$frameNumber;
 $keyPreviousPressed=0; //@line 493 "menucode.cpp"
 $keyNextPressed=0; //@line 494 "menucode.cpp"
 $keyClickPressed=0; //@line 495 "menucode.cpp"
 $mouseClickPressed=0; //@line 496 "menucode.cpp"
 var $3=HEAP8[(19352)]; //@line 522 "menucode.cpp"
 var $4=($3&255); //@line 522 "menucode.cpp"
 var $5=$4&1; //@line 522 "menucode.cpp"
 var $6=($5|0)!=0; //@line 522 "menucode.cpp"
 if($6){label=2;break;}else{label=4;break;} //@line 522 "menucode.cpp"
 case 2: 
 var $8=HEAP8[(19464)]; //@line 522 "menucode.cpp"
 var $9=(($8)&1); //@line 522 "menucode.cpp"
 if($9){label=4;break;}else{label=3;break;} //@line 522 "menucode.cpp"
 case 3: 
 $mouseClickPressed=1; //@line 526 "menucode.cpp"
 label=4;break; //@line 527 "menucode.cpp"
 case 4: 
 var $12=HEAP32[((19336)>>2)]; //@line 530 "menucode.cpp"
 var $13=($12|0)!=0; //@line 530 "menucode.cpp"
 if($13){label=6;break;}else{label=5;break;} //@line 530 "menucode.cpp"
 case 5: 
 var $15=HEAP32[((19340)>>2)]; //@line 530 "menucode.cpp"
 var $16=($15|0)!=0; //@line 530 "menucode.cpp"
 if($16){label=6;break;}else{label=15;break;} //@line 530 "menucode.cpp"
 case 6: 
 var $18=HEAP32[((19336)>>2)]; //@line 532 "menucode.cpp"
 var $19=HEAP32[((20560)>>2)]; //@line 532 "menucode.cpp"
 var $20=((($19)+($18))|0); //@line 532 "menucode.cpp"
 HEAP32[((20560)>>2)]=$20; //@line 532 "menucode.cpp"
 var $21=HEAP32[((20560)>>2)]; //@line 533 "menucode.cpp"
 var $22=($21|0)<0; //@line 533 "menucode.cpp"
 if($22){label=7;break;}else{label=8;break;} //@line 533 "menucode.cpp"
 case 7: 
 HEAP32[((20560)>>2)]=0; //@line 533 "menucode.cpp"
 label=8;break; //@line 533 "menucode.cpp"
 case 8: 
 var $25=HEAP32[((20560)>>2)]; //@line 534 "menucode.cpp"
 var $26=HEAP32[((20656)>>2)]; //@line 534 "menucode.cpp"
 var $27=(($26+80)|0); //@line 534 "menucode.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 534 "menucode.cpp"
 var $29=FUNCTION_TABLE[$28](20656); //@line 534 "menucode.cpp"
 var $30=((($29)-(1))|0); //@line 534 "menucode.cpp"
 var $31=($25|0)>=($30|0); //@line 534 "menucode.cpp"
 if($31){label=9;break;}else{label=10;break;} //@line 534 "menucode.cpp"
 case 9: 
 var $33=HEAP32[((20656)>>2)]; //@line 534 "menucode.cpp"
 var $34=(($33+80)|0); //@line 534 "menucode.cpp"
 var $35=HEAP32[(($34)>>2)]; //@line 534 "menucode.cpp"
 var $36=FUNCTION_TABLE[$35](20656); //@line 534 "menucode.cpp"
 var $37=((($36)-(1))|0); //@line 534 "menucode.cpp"
 HEAP32[((20560)>>2)]=$37; //@line 534 "menucode.cpp"
 label=10;break; //@line 534 "menucode.cpp"
 case 10: 
 var $39=HEAP32[((19340)>>2)]; //@line 535 "menucode.cpp"
 var $40=HEAP32[((20552)>>2)]; //@line 535 "menucode.cpp"
 var $41=((($40)+($39))|0); //@line 535 "menucode.cpp"
 HEAP32[((20552)>>2)]=$41; //@line 535 "menucode.cpp"
 var $42=HEAP32[((20552)>>2)]; //@line 536 "menucode.cpp"
 var $43=($42|0)<0; //@line 536 "menucode.cpp"
 if($43){label=11;break;}else{label=12;break;} //@line 536 "menucode.cpp"
 case 11: 
 HEAP32[((20552)>>2)]=0; //@line 536 "menucode.cpp"
 label=12;break; //@line 536 "menucode.cpp"
 case 12: 
 var $46=HEAP32[((20552)>>2)]; //@line 537 "menucode.cpp"
 var $47=HEAP32[((20656)>>2)]; //@line 537 "menucode.cpp"
 var $48=(($47+84)|0); //@line 537 "menucode.cpp"
 var $49=HEAP32[(($48)>>2)]; //@line 537 "menucode.cpp"
 var $50=FUNCTION_TABLE[$49](20656); //@line 537 "menucode.cpp"
 var $51=((($50)-(1))|0); //@line 537 "menucode.cpp"
 var $52=($46|0)>=($51|0); //@line 537 "menucode.cpp"
 if($52){label=13;break;}else{label=14;break;} //@line 537 "menucode.cpp"
 case 13: 
 var $54=HEAP32[((20656)>>2)]; //@line 537 "menucode.cpp"
 var $55=(($54+84)|0); //@line 537 "menucode.cpp"
 var $56=HEAP32[(($55)>>2)]; //@line 537 "menucode.cpp"
 var $57=FUNCTION_TABLE[$56](20656); //@line 537 "menucode.cpp"
 var $58=((($57)-(1))|0); //@line 537 "menucode.cpp"
 HEAP32[((20552)>>2)]=$58; //@line 537 "menucode.cpp"
 label=14;break; //@line 537 "menucode.cpp"
 case 14: 
 label=15;break; //@line 538 "menucode.cpp"
 case 15: 
 var $61=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 542 "menucode.cpp"
 $lstate=$61; //@line 542 "menucode.cpp"
 var $62=$lstate; //@line 543 "menucode.cpp"
 _lua_getglobal($62,3312); //@line 543 "menucode.cpp"
 var $63=$lstate; //@line 544 "menucode.cpp"
 _lua_getglobal($63,10872); //@line 544 "menucode.cpp"
 var $64=$lstate; //@line 545 "menucode.cpp"
 var $65=$2; //@line 545 "menucode.cpp"
 var $66=($65>>>0); //@line 545 "menucode.cpp"
 _lua_pushnumber($64,$66); //@line 545 "menucode.cpp"
 var $67=$lstate; //@line 546 "menucode.cpp"
 var $68=HEAP32[((20560)>>2)]; //@line 546 "menucode.cpp"
 var $69=($68|0); //@line 546 "menucode.cpp"
 _lua_pushnumber($67,$69); //@line 546 "menucode.cpp"
 var $70=$lstate; //@line 547 "menucode.cpp"
 var $71=HEAP32[((20552)>>2)]; //@line 547 "menucode.cpp"
 var $72=($71|0); //@line 547 "menucode.cpp"
 _lua_pushnumber($70,$72); //@line 547 "menucode.cpp"
 var $73=$lstate; //@line 548 "menucode.cpp"
 var $74=$mouseClickPressed; //@line 548 "menucode.cpp"
 var $75=(($74)&1); //@line 548 "menucode.cpp"
 var $76=($75&1); //@line 548 "menucode.cpp"
 _lua_pushboolean($73,$76); //@line 548 "menucode.cpp"
 var $77=$lstate; //@line 549 "menucode.cpp"
 var $78=$keyPreviousPressed; //@line 549 "menucode.cpp"
 var $79=(($78)&1); //@line 549 "menucode.cpp"
 var $80=($79&1); //@line 549 "menucode.cpp"
 _lua_pushboolean($77,$80); //@line 549 "menucode.cpp"
 var $81=$lstate; //@line 550 "menucode.cpp"
 var $82=$keyNextPressed; //@line 550 "menucode.cpp"
 var $83=(($82)&1); //@line 550 "menucode.cpp"
 var $84=($83&1); //@line 550 "menucode.cpp"
 _lua_pushboolean($81,$84); //@line 550 "menucode.cpp"
 var $85=$lstate; //@line 551 "menucode.cpp"
 var $86=$keyClickPressed; //@line 551 "menucode.cpp"
 var $87=(($86)&1); //@line 551 "menucode.cpp"
 var $88=($87&1); //@line 551 "menucode.cpp"
 _lua_pushboolean($85,$88); //@line 551 "menucode.cpp"
 var $89=$lstate; //@line 552 "menucode.cpp"
 var $90=_lua_pcallk($89,7,0,-9,0,0); //@line 552 "menucode.cpp"
 $errCode=$90; //@line 552 "menucode.cpp"
 var $91=$lstate; //@line 553 "menucode.cpp"
 _lua_settop($91,-2); //@line 553 "menucode.cpp"
 var $92=$errCode; //@line 554 "menucode.cpp"
 var $93=($92|0)!=0; //@line 554 "menucode.cpp"
 if($93){label=16;break;}else{label=17;break;} //@line 554 "menucode.cpp"
 case 16: 
 var $95=$lstate; //@line 555 "menucode.cpp"
 _lua_settop($95,-2); //@line 555 "menucode.cpp"
 var $96=__ZN14conLoggerClass7logLineEPcbbbz(19416,10496,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 556 "menucode.cpp"
 $1=0; //@line 557 "menucode.cpp"
 label=34;break; //@line 557 "menucode.cpp"
 case 17: 
 var $98=HEAP8[(19280)]; //@line 561 "menucode.cpp"
 var $99=(($98)&1); //@line 561 "menucode.cpp"
 if($99){label=18;break;}else{label=30;break;} //@line 561 "menucode.cpp"
 case 18: 
 var $101=HEAPF64[((18464)>>3)]; //@line 563 "menucode.cpp"
 var $102=HEAPF64[((18456)>>3)]; //@line 563 "menucode.cpp"
 var $103=($102)-($101); //@line 563 "menucode.cpp"
 HEAPF64[((18456)>>3)]=$103; //@line 563 "menucode.cpp"
 var $104=HEAPF64[((18456)>>3)]; //@line 564 "menucode.cpp"
 var $105=$104<=0; //@line 564 "menucode.cpp"
 if($105){label=19;break;}else{label=29;break;} //@line 564 "menucode.cpp"
 case 19: 
 HEAPF64[((18456)>>3)]=0; //@line 567 "menucode.cpp"
 var $107=__ZN15directDrawClass7isReadyEv(20656); //@line 569 "menucode.cpp"
 if($107){label=20;break;}else{label=26;break;} //@line 569 "menucode.cpp"
 case 20: 
 var $109=__ZN15directDrawClass16isVideoModeReadyEv(20656); //@line 569 "menucode.cpp"
 if($109){label=21;break;}else{label=26;break;} //@line 569 "menucode.cpp"
 case 21: 
 $i=0; //@line 572 "menucode.cpp"
 label=22;break; //@line 572 "menucode.cpp"
 case 22: 
 var $112=$i; //@line 572 "menucode.cpp"
 var $113=__ZN15directDrawClass19getBackBuffersCountEv(20656); //@line 572 "menucode.cpp"
 var $114=($112|0)<($113|0); //@line 572 "menucode.cpp"
 if($114){label=23;break;}else{label=25;break;} //@line 572 "menucode.cpp"
 case 23: 
 var $116=HEAP32[((20656)>>2)]; //@line 573 "menucode.cpp"
 var $117=(($116+44)|0); //@line 573 "menucode.cpp"
 var $118=HEAP32[(($117)>>2)]; //@line 573 "menucode.cpp"
 var $119=FUNCTION_TABLE[$118](20656,0); //@line 573 "menucode.cpp"
 var $120=__ZN15directDrawClass4flipEv(20656); //@line 573 "menucode.cpp"
 label=24;break; //@line 574 "menucode.cpp"
 case 24: 
 var $122=$i; //@line 572 "menucode.cpp"
 var $123=((($122)+(1))|0); //@line 572 "menucode.cpp"
 $i=$123; //@line 572 "menucode.cpp"
 label=22;break; //@line 572 "menucode.cpp"
 case 25: 
 label=26;break; //@line 575 "menucode.cpp"
 case 26: 
 var $126=__Z10globalExitv(); //@line 577 "menucode.cpp"
 if($126){label=28;break;}else{label=27;break;} //@line 577 "menucode.cpp"
 case 27: 
 $1=0; //@line 578 "menucode.cpp"
 label=34;break; //@line 578 "menucode.cpp"
 case 28: 
 label=29;break; //@line 579 "menucode.cpp"
 case 29: 
 label=33;break; //@line 580 "menucode.cpp"
 case 30: 
 var $131=HEAPF64[((18464)>>3)]; //@line 582 "menucode.cpp"
 var $132=HEAPF64[((18456)>>3)]; //@line 582 "menucode.cpp"
 var $133=($132)+($131); //@line 582 "menucode.cpp"
 HEAPF64[((18456)>>3)]=$133; //@line 582 "menucode.cpp"
 var $134=HEAPF64[((18456)>>3)]; //@line 583 "menucode.cpp"
 var $135=$134>=255; //@line 583 "menucode.cpp"
 if($135){label=31;break;}else{label=32;break;} //@line 583 "menucode.cpp"
 case 31: 
 HEAPF64[((18456)>>3)]=255; //@line 583 "menucode.cpp"
 label=32;break; //@line 583 "menucode.cpp"
 case 32: 
 label=33;break;
 case 33: 
 $1=1; //@line 586 "menucode.cpp"
 label=34;break; //@line 586 "menucode.cpp"
 case 34: 
 var $140=$1; //@line 587 "menucode.cpp"
 STACKTOP=sp;return $140; //@line 587 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15directDrawClass16isVideoModeReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+37)|0); //@line 210 "./ddwrap.h"
 var $4=HEAP8[($3)]; //@line 210 "./ddwrap.h"
 var $5=(($4)&1); //@line 210 "./ddwrap.h"
 STACKTOP=sp;return $5; //@line 210 "./ddwrap.h"
}


function __ZN15directDrawClass19getBackBuffersCountEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+40)|0); //@line 212 "./ddwrap.h"
 var $4=HEAP32[(($3)>>2)]; //@line 212 "./ddwrap.h"
 STACKTOP=sp;return $4; //@line 212 "./ddwrap.h"
}


function __ZN12MenuLoopCode10beforeLoopEv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $lstate;
 var $errCode;
 var $menuToSwitch;
 var $2=HEAP32[((2136)>>2)]; //@line 604 "menucode.cpp"
 var $3=($2|0); //@line 604 "menucode.cpp"
 var $4=(255)/($3); //@line 604 "menucode.cpp"
 var $5=($4)/(1); //@line 604 "menucode.cpp"
 HEAPF64[((18464)>>3)]=$5; //@line 604 "menucode.cpp"
 var $6=HEAP32[((440)>>2)]; //@line 606 "menucode.cpp"
 var $7=($6|0)==2; //@line 606 "menucode.cpp"
 if($7){label=2;break;}else{label=3;break;} //@line 606 "menucode.cpp"
 case 2: 
 HEAPF64[((18456)>>3)]=0; //@line 608 "menucode.cpp"
 label=4;break; //@line 609 "menucode.cpp"
 case 3: 
 HEAPF64[((18456)>>3)]=255; //@line 611 "menucode.cpp"
 label=4;break;
 case 4: 
 HEAP32[((20560)>>2)]=0; //@line 615 "menucode.cpp"
 HEAP32[((20552)>>2)]=0; //@line 616 "menucode.cpp"
 var $11=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 620 "menucode.cpp"
 $lstate=$11; //@line 620 "menucode.cpp"
 var $12=$lstate; //@line 621 "menucode.cpp"
 _lua_getglobal($12,3312); //@line 621 "menucode.cpp"
 var $13=$lstate; //@line 622 "menucode.cpp"
 _lua_getglobal($13,10248); //@line 622 "menucode.cpp"
 var $14=$lstate; //@line 623 "menucode.cpp"
 var $15=_lua_pcallk($14,0,0,-2,0,0); //@line 623 "menucode.cpp"
 $errCode=$15; //@line 623 "menucode.cpp"
 var $16=$lstate; //@line 624 "menucode.cpp"
 _lua_settop($16,-2); //@line 624 "menucode.cpp"
 var $17=$errCode; //@line 625 "menucode.cpp"
 var $18=($17|0)!=0; //@line 625 "menucode.cpp"
 if($18){label=5;break;}else{label=6;break;} //@line 625 "menucode.cpp"
 case 5: 
 var $20=$lstate; //@line 626 "menucode.cpp"
 _lua_settop($20,-2); //@line 626 "menucode.cpp"
 var $21=__ZN14conLoggerClass7logLineEPcbbbz(19416,10016,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 627 "menucode.cpp"
 $1=0; //@line 628 "menucode.cpp"
 label=12;break; //@line 628 "menucode.cpp"
 case 6: 
 var $23=HEAP8[(19464)]; //@line 633 "menucode.cpp"
 var $24=(($23)&1); //@line 633 "menucode.cpp"
 if($24){label=7;break;}else{label=8;break;} //@line 633 "menucode.cpp"
 case 7: 
 $menuToSwitch=9832; //@line 636 "menucode.cpp"
 label=9;break; //@line 637 "menucode.cpp"
 case 8: 
 $menuToSwitch=9608; //@line 643 "menucode.cpp"
 label=9;break;
 case 9: 
 var $28=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 648 "menucode.cpp"
 $lstate=$28; //@line 648 "menucode.cpp"
 var $29=$lstate; //@line 649 "menucode.cpp"
 _lua_getglobal($29,3312); //@line 649 "menucode.cpp"
 var $30=$lstate; //@line 650 "menucode.cpp"
 _lua_getglobal($30,9376); //@line 650 "menucode.cpp"
 var $31=$lstate; //@line 651 "menucode.cpp"
 var $32=$menuToSwitch; //@line 651 "menucode.cpp"
 var $33=_lua_pushstring($31,$32); //@line 651 "menucode.cpp"
 var $34=$lstate; //@line 652 "menucode.cpp"
 var $35=_lua_pcallk($34,1,0,-3,0,0); //@line 652 "menucode.cpp"
 $errCode=$35; //@line 652 "menucode.cpp"
 var $36=$lstate; //@line 653 "menucode.cpp"
 _lua_settop($36,-2); //@line 653 "menucode.cpp"
 var $37=$errCode; //@line 654 "menucode.cpp"
 var $38=($37|0)!=0; //@line 654 "menucode.cpp"
 if($38){label=10;break;}else{label=11;break;} //@line 654 "menucode.cpp"
 case 10: 
 var $40=$lstate; //@line 655 "menucode.cpp"
 _lua_settop($40,-2); //@line 655 "menucode.cpp"
 var $41=__ZN14conLoggerClass7logLineEPcbbbz(19416,9104,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 656 "menucode.cpp"
 $1=0; //@line 657 "menucode.cpp"
 label=12;break; //@line 657 "menucode.cpp"
 case 11: 
 $1=1; //@line 661 "menucode.cpp"
 label=12;break; //@line 661 "menucode.cpp"
 case 12: 
 var $44=$1; //@line 662 "menucode.cpp"
 STACKTOP=sp;return $44; //@line 662 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN12MenuLoopCode9afterLoopEv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $lstate;
 var $errCode;
 HEAP8[(19464)]=0; //@line 675 "menucode.cpp"
 HEAP32[((19472)>>2)]=0; //@line 676 "menucode.cpp"
 var $2=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 680 "menucode.cpp"
 $lstate=$2; //@line 680 "menucode.cpp"
 var $3=$lstate; //@line 681 "menucode.cpp"
 _lua_getglobal($3,3312); //@line 681 "menucode.cpp"
 var $4=$lstate; //@line 682 "menucode.cpp"
 _lua_getglobal($4,8816); //@line 682 "menucode.cpp"
 var $5=$lstate; //@line 683 "menucode.cpp"
 var $6=_lua_pcallk($5,0,0,-2,0,0); //@line 683 "menucode.cpp"
 $errCode=$6; //@line 683 "menucode.cpp"
 var $7=$lstate; //@line 684 "menucode.cpp"
 _lua_settop($7,-2); //@line 684 "menucode.cpp"
 var $8=$errCode; //@line 685 "menucode.cpp"
 var $9=($8|0)!=0; //@line 685 "menucode.cpp"
 if($9){label=2;break;}else{label=3;break;} //@line 685 "menucode.cpp"
 case 2: 
 var $11=$lstate; //@line 686 "menucode.cpp"
 _lua_settop($11,-2); //@line 686 "menucode.cpp"
 var $12=__ZN14conLoggerClass7logLineEPcbbbz(19416,8544,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 687 "menucode.cpp"
 $1=0; //@line 688 "menucode.cpp"
 label=4;break; //@line 688 "menucode.cpp"
 case 3: 
 $1=1; //@line 691 "menucode.cpp"
 label=4;break; //@line 691 "menucode.cpp"
 case 4: 
 var $15=$1; //@line 692 "menucode.cpp"
 STACKTOP=sp;return $15; //@line 692 "menucode.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN22highScoresManagerClass4initEP15highScoreStructi($this,$hScoresList,$listSize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$this;
 $3=$hScoresList;
 $4=$listSize;
 var $5=$2;
 var $6=(($5+4)|0); //@line 43 "optionsfile.cpp"
 var $7=HEAP8[($6)]; //@line 43 "optionsfile.cpp"
 var $8=(($7)&1); //@line 43 "optionsfile.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 43 "optionsfile.cpp"
 case 2: 
 $1=0; //@line 43 "optionsfile.cpp"
 label=4;break; //@line 43 "optionsfile.cpp"
 case 3: 
 var $11=$3; //@line 46 "optionsfile.cpp"
 var $12=(($5+8)|0); //@line 46 "optionsfile.cpp"
 HEAP32[(($12)>>2)]=$11; //@line 46 "optionsfile.cpp"
 var $13=$4; //@line 47 "optionsfile.cpp"
 var $14=(($5+12)|0); //@line 47 "optionsfile.cpp"
 HEAP32[(($14)>>2)]=$13; //@line 47 "optionsfile.cpp"
 var $15=(($5+4)|0); //@line 50 "optionsfile.cpp"
 HEAP8[($15)]=1; //@line 50 "optionsfile.cpp"
 $1=1; //@line 51 "optionsfile.cpp"
 label=4;break; //@line 51 "optionsfile.cpp"
 case 4: 
 var $17=$1; //@line 52 "optionsfile.cpp"
 STACKTOP=sp;return $17; //@line 52 "optionsfile.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN22highScoresManagerClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 58 "optionsfile.cpp"
 var $5=HEAP8[($4)]; //@line 58 "optionsfile.cpp"
 var $6=(($5)&1); //@line 58 "optionsfile.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 58 "optionsfile.cpp"
 case 2: 
 $1=0; //@line 58 "optionsfile.cpp"
 label=4;break; //@line 58 "optionsfile.cpp"
 case 3: 
 var $9=(($3+4)|0); //@line 64 "optionsfile.cpp"
 HEAP8[($9)]=0; //@line 64 "optionsfile.cpp"
 $1=1; //@line 65 "optionsfile.cpp"
 label=4;break; //@line 65 "optionsfile.cpp"
 case 4: 
 var $11=$1; //@line 66 "optionsfile.cpp"
 STACKTOP=sp;return $11; //@line 66 "optionsfile.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN22highScoresManagerClass9resetListEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 $2=$this;
 var $3=$2;
 var $4=(($3+4)|0); //@line 75 "optionsfile.cpp"
 var $5=HEAP8[($4)]; //@line 75 "optionsfile.cpp"
 var $6=(($5)&1); //@line 75 "optionsfile.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 75 "optionsfile.cpp"
 case 2: 
 $1=0; //@line 75 "optionsfile.cpp"
 label=11;break; //@line 75 "optionsfile.cpp"
 case 3: 
 $i=0; //@line 78 "optionsfile.cpp"
 label=4;break; //@line 78 "optionsfile.cpp"
 case 4: 
 var $10=$i; //@line 78 "optionsfile.cpp"
 var $11=(($3+12)|0); //@line 78 "optionsfile.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 78 "optionsfile.cpp"
 var $13=($10|0)<($12|0); //@line 78 "optionsfile.cpp"
 if($13){label=5;break;}else{label=10;break;} //@line 78 "optionsfile.cpp"
 case 5: 
 var $15=$i; //@line 80 "optionsfile.cpp"
 var $16=((($15)+(1))|0); //@line 80 "optionsfile.cpp"
 var $17=((($16)*(1500))&-1); //@line 80 "optionsfile.cpp"
 var $18=$i; //@line 80 "optionsfile.cpp"
 var $19=((($18)-(4))|0); //@line 80 "optionsfile.cpp"
 var $20=($19|0)>0; //@line 80 "optionsfile.cpp"
 if($20){label=6;break;}else{label=7;break;} //@line 80 "optionsfile.cpp"
 case 6: 
 var $22=$i; //@line 80 "optionsfile.cpp"
 var $23=((($22)-(4))|0); //@line 80 "optionsfile.cpp"
 var $26=$23;label=8;break; //@line 80 "optionsfile.cpp"
 case 7: 
 var $26=0;label=8;break; //@line 80 "optionsfile.cpp"
 case 8: 
 var $26; //@line 80 "optionsfile.cpp"
 var $27=((($26)*(3000))&-1); //@line 80 "optionsfile.cpp"
 var $28=((($17)+($27))|0); //@line 80 "optionsfile.cpp"
 var $29=$i; //@line 80 "optionsfile.cpp"
 var $30=(($3+8)|0); //@line 80 "optionsfile.cpp"
 var $31=HEAP32[(($30)>>2)]; //@line 80 "optionsfile.cpp"
 var $32=(($31+((($29)*(24))&-1))|0); //@line 80 "optionsfile.cpp"
 var $33=(($32+20)|0); //@line 80 "optionsfile.cpp"
 HEAP32[(($33)>>2)]=$28; //@line 80 "optionsfile.cpp"
 var $34=$i; //@line 81 "optionsfile.cpp"
 var $35=(($3+8)|0); //@line 81 "optionsfile.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 81 "optionsfile.cpp"
 var $37=(($36+((($34)*(24))&-1))|0); //@line 81 "optionsfile.cpp"
 var $38=(($37)|0); //@line 81 "optionsfile.cpp"
 var $39=(($38)|0); //@line 81 "optionsfile.cpp"
 var $40=_strcpy($39,9792); //@line 81 "optionsfile.cpp"
 label=9;break; //@line 82 "optionsfile.cpp"
 case 9: 
 var $42=$i; //@line 78 "optionsfile.cpp"
 var $43=((($42)+(1))|0); //@line 78 "optionsfile.cpp"
 $i=$43; //@line 78 "optionsfile.cpp"
 label=4;break; //@line 78 "optionsfile.cpp"
 case 10: 
 $1=1; //@line 84 "optionsfile.cpp"
 label=11;break; //@line 84 "optionsfile.cpp"
 case 11: 
 var $46=$1; //@line 85 "optionsfile.cpp"
 STACKTOP=sp;return $46; //@line 85 "optionsfile.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16optionsFileClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$this;
 var $5=$2;
 var $6=(($5+4)|0); //@line 238 "optionsfile.cpp"
 var $7=HEAP8[($6)]; //@line 238 "optionsfile.cpp"
 var $8=(($7)&1); //@line 238 "optionsfile.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 238 "optionsfile.cpp"
 case 2: 
 $1=0; //@line 238 "optionsfile.cpp"
 label=19;break; //@line 238 "optionsfile.cpp"
 case 3: 
 var $11=__Znwj(260); //@line 241 "optionsfile.cpp"
 var $12=$11; //@line 241 "optionsfile.cpp"
 var $13=(($5+8)|0); //@line 241 "optionsfile.cpp"
 HEAP32[(($13)>>2)]=$12; //@line 241 "optionsfile.cpp"
 var $14=__Znwj(16); //@line 244 "optionsfile.cpp"
 var $15=$14; //@line 244 "optionsfile.cpp"
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassC1Ev($15) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=13;break; } //@line 244 "optionsfile.cpp"
 case 4: 
 var $17=(($5+12)|0); //@line 244 "optionsfile.cpp"
 HEAP32[(($17)>>2)]=$15; //@line 244 "optionsfile.cpp"
 var $18=(($5+12)|0); //@line 245 "optionsfile.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 245 "optionsfile.cpp"
 var $20=(($5+8)|0); //@line 245 "optionsfile.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 245 "optionsfile.cpp"
 var $22=(($21+20)|0); //@line 245 "optionsfile.cpp"
 var $23=(($22)|0); //@line 245 "optionsfile.cpp"
 var $24=__ZN22highScoresManagerClass4initEP15highScoreStructi($19,$23,10); //@line 245 "optionsfile.cpp"
 if($24){label=18;break;}else{label=5;break;} //@line 245 "optionsfile.cpp"
 case 5: 
 var $26=(($5+8)|0); //@line 250 "optionsfile.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 250 "optionsfile.cpp"
 var $28=($27|0)==0; //@line 250 "optionsfile.cpp"
 if($28){label=7;break;}else{label=6;break;} //@line 250 "optionsfile.cpp"
 case 6: 
 var $30=$27; //@line 250 "optionsfile.cpp"
 __ZdaPv($30); //@line 250 "optionsfile.cpp"
 label=7;break; //@line 250 "optionsfile.cpp"
 case 7: 
 var $32=(($5+12)|0); //@line 251 "optionsfile.cpp"
 var $33=HEAP32[(($32)>>2)]; //@line 251 "optionsfile.cpp"
 var $34=($33|0)==0; //@line 251 "optionsfile.cpp"
 if($34){label=12;break;}else{label=8;break;} //@line 251 "optionsfile.cpp"
 case 8: 
 var $36=$33; //@line 251 "optionsfile.cpp"
 var $37=((($36)-(4))|0); //@line 251 "optionsfile.cpp"
 var $38=$37; //@line 251 "optionsfile.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 251 "optionsfile.cpp"
 var $40=(($33+($39<<4))|0); //@line 251 "optionsfile.cpp"
 var $41=($33|0)==($40|0); //@line 251 "optionsfile.cpp"
 if($41){label=11;break;}else{var $43=$40;label=9;break;} //@line 251 "optionsfile.cpp"
 case 9: 
 var $43; //@line 251 "optionsfile.cpp"
 var $44=((($43)-(16))|0); //@line 251 "optionsfile.cpp"
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassD1Ev($44) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=14;break; } //@line 251 "optionsfile.cpp"
 case 10: 
 var $46=($44|0)==($33|0); //@line 251 "optionsfile.cpp"
 if($46){label=11;break;}else{var $43=$44;label=9;break;} //@line 251 "optionsfile.cpp"
 case 11: 
 __ZdaPv($37); //@line 251 "optionsfile.cpp"
 label=12;break; //@line 251 "optionsfile.cpp"
 case 12: 
 $1=0; //@line 252 "optionsfile.cpp"
 label=19;break; //@line 252 "optionsfile.cpp"
 case 13: 
 var $50$0 = ___cxa_find_matching_catch(-1, -1); var $50$1 = tempRet0;
 var $51=$50$0;
 $3=$51; //@line 244 "optionsfile.cpp"
 var $52=$50$1;
 $4=$52; //@line 244 "optionsfile.cpp"
 __ZdlPv($14); //@line 244 "optionsfile.cpp"
 label=20;break; //@line 244 "optionsfile.cpp"
 case 14: 
 var $54$0 = ___cxa_find_matching_catch(-1, -1); var $54$1 = tempRet0;
 var $55=$54$0;
 $3=$55; //@line 251 "optionsfile.cpp"
 var $56=$54$1;
 $4=$56; //@line 251 "optionsfile.cpp"
 var $57=($33|0)==($44|0); //@line 251 "optionsfile.cpp"
 if($57){label=17;break;}else{var $59=$44;label=15;break;} //@line 251 "optionsfile.cpp"
 case 15: 
 var $59; //@line 251 "optionsfile.cpp"
 var $60=((($59)-(16))|0); //@line 251 "optionsfile.cpp"
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassD1Ev($60) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=21;break; } //@line 251 "optionsfile.cpp"
 case 16: 
 var $62=($60|0)==($33|0); //@line 251 "optionsfile.cpp"
 if($62){label=17;break;}else{var $59=$60;label=15;break;} //@line 251 "optionsfile.cpp"
 case 17: 
 __ZdaPv($37); //@line 251 "optionsfile.cpp"
 label=20;break; //@line 251 "optionsfile.cpp"
 case 18: 
 var $65=(($5+4)|0); //@line 256 "optionsfile.cpp"
 HEAP8[($65)]=1; //@line 256 "optionsfile.cpp"
 $1=1; //@line 257 "optionsfile.cpp"
 label=19;break; //@line 257 "optionsfile.cpp"
 case 19: 
 var $67=$1; //@line 258 "optionsfile.cpp"
 STACKTOP=sp;return $67; //@line 258 "optionsfile.cpp"
 case 20: 
 var $69=$3; //@line 244 "optionsfile.cpp"
 var $70=$4; //@line 244 "optionsfile.cpp"
 var $71$0=$69;
 var $71$1=0;
 var $72$0=$71$0;
 var $72$1=$70;
 ___resumeException($72$0) //@line 244 "optionsfile.cpp"
 case 21: 
 var $74$0 = ___cxa_find_matching_catch(-1, -1,0); var $74$1 = tempRet0;
 __ZSt9terminatev(); //@line 251 "optionsfile.cpp"
 throw "Reached an unreachable!"; //@line 251 "optionsfile.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN22highScoresManagerClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN22highScoresManagerClassC2Ev($2); //@line 89 "./optionsfile.h"
 STACKTOP=sp;return; //@line 89 "./optionsfile.h"
}


function __ZN22highScoresManagerClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN22highScoresManagerClassD2Ev($2); //@line 90 "./optionsfile.h"
 STACKTOP=sp;return; //@line 90 "./optionsfile.h"
}


function __ZN16optionsFileClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$this;
 var $5=$2;
 var $6=(($5+4)|0); //@line 264 "optionsfile.cpp"
 var $7=HEAP8[($6)]; //@line 264 "optionsfile.cpp"
 var $8=(($7)&1); //@line 264 "optionsfile.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 264 "optionsfile.cpp"
 case 2: 
 $1=0; //@line 264 "optionsfile.cpp"
 label=15;break; //@line 264 "optionsfile.cpp"
 case 3: 
 var $11=(($5+12)|0); //@line 267 "optionsfile.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 267 "optionsfile.cpp"
 var $13=__ZN22highScoresManagerClass3endEv($12); //@line 267 "optionsfile.cpp"
 var $14=(($5+12)|0); //@line 268 "optionsfile.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 268 "optionsfile.cpp"
 var $16=($15|0)==0; //@line 268 "optionsfile.cpp"
 if($16){label=8;break;}else{label=4;break;} //@line 268 "optionsfile.cpp"
 case 4: 
 var $18=$15; //@line 268 "optionsfile.cpp"
 var $19=((($18)-(4))|0); //@line 268 "optionsfile.cpp"
 var $20=$19; //@line 268 "optionsfile.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 268 "optionsfile.cpp"
 var $22=(($15+($21<<4))|0); //@line 268 "optionsfile.cpp"
 var $23=($15|0)==($22|0); //@line 268 "optionsfile.cpp"
 if($23){label=7;break;}else{var $25=$22;label=5;break;} //@line 268 "optionsfile.cpp"
 case 5: 
 var $25; //@line 268 "optionsfile.cpp"
 var $26=((($25)-(16))|0); //@line 268 "optionsfile.cpp"
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassD1Ev($26) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=11;break; } //@line 268 "optionsfile.cpp"
 case 6: 
 var $28=($26|0)==($15|0); //@line 268 "optionsfile.cpp"
 if($28){label=7;break;}else{var $25=$26;label=5;break;} //@line 268 "optionsfile.cpp"
 case 7: 
 __ZdaPv($19); //@line 268 "optionsfile.cpp"
 label=8;break; //@line 268 "optionsfile.cpp"
 case 8: 
 var $31=(($5+8)|0); //@line 269 "optionsfile.cpp"
 var $32=HEAP32[(($31)>>2)]; //@line 269 "optionsfile.cpp"
 var $33=($32|0)==0; //@line 269 "optionsfile.cpp"
 if($33){label=10;break;}else{label=9;break;} //@line 269 "optionsfile.cpp"
 case 9: 
 var $35=$32; //@line 269 "optionsfile.cpp"
 __ZdaPv($35); //@line 269 "optionsfile.cpp"
 label=10;break; //@line 269 "optionsfile.cpp"
 case 10: 
 var $37=(($5+4)|0); //@line 272 "optionsfile.cpp"
 HEAP8[($37)]=0; //@line 272 "optionsfile.cpp"
 $1=1; //@line 273 "optionsfile.cpp"
 label=15;break; //@line 273 "optionsfile.cpp"
 case 11: 
 var $39$0 = ___cxa_find_matching_catch(-1, -1); var $39$1 = tempRet0;
 var $40=$39$0;
 $3=$40; //@line 268 "optionsfile.cpp"
 var $41=$39$1;
 $4=$41; //@line 268 "optionsfile.cpp"
 var $42=($15|0)==($26|0); //@line 268 "optionsfile.cpp"
 if($42){label=14;break;}else{var $44=$26;label=12;break;} //@line 268 "optionsfile.cpp"
 case 12: 
 var $44; //@line 268 "optionsfile.cpp"
 var $45=((($44)-(16))|0); //@line 268 "optionsfile.cpp"
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassD1Ev($45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=17;break; } //@line 268 "optionsfile.cpp"
 case 13: 
 var $47=($45|0)==($15|0); //@line 268 "optionsfile.cpp"
 if($47){label=14;break;}else{var $44=$45;label=12;break;} //@line 268 "optionsfile.cpp"
 case 14: 
 __ZdaPv($19); //@line 268 "optionsfile.cpp"
 label=16;break; //@line 268 "optionsfile.cpp"
 case 15: 
 var $50=$1; //@line 274 "optionsfile.cpp"
 STACKTOP=sp;return $50; //@line 274 "optionsfile.cpp"
 case 16: 
 var $52=$3; //@line 268 "optionsfile.cpp"
 var $53=$4; //@line 268 "optionsfile.cpp"
 var $54$0=$52;
 var $54$1=0;
 var $55$0=$54$0;
 var $55$1=$53;
 ___resumeException($55$0) //@line 268 "optionsfile.cpp"
 case 17: 
 var $57$0 = ___cxa_find_matching_catch(-1, -1,0); var $57$1 = tempRet0;
 __ZSt9terminatev(); //@line 268 "optionsfile.cpp"
 throw "Reached an unreachable!"; //@line 268 "optionsfile.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16optionsFileClass4loadEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 331 "optionsfile.cpp"
}


function __ZN16optionsFileClass4saveEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 383 "optionsfile.cpp"
}


function __ZN16optionsFileClass18createFileIfNeededEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 408 "optionsfile.cpp"
}


function __ZN22highScoresManagerClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 90 "./optionsfile.h"
}


function __ZN22highScoresManagerClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 89 "./optionsfile.h"
 HEAP32[(($3)>>2)]=16608; //@line 89 "./optionsfile.h"
 var $4=(($2+4)|0); //@line 89 "./optionsfile.h"
 HEAP8[($4)]=0; //@line 89 "./optionsfile.h"
 STACKTOP=sp;return; //@line 89 "./optionsfile.h"
}


function __ZN22highScoresManagerClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN22highScoresManagerClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 90 "./optionsfile.h"
 case 2: 
 var $6=$4; //@line 90 "./optionsfile.h"
 __ZdlPv($6); //@line 90 "./optionsfile.h"
 STACKTOP=sp;return; //@line 90 "./optionsfile.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 90 "./optionsfile.h"
 var $10=$8$1;
 $3=$10; //@line 90 "./optionsfile.h"
 var $11=$4; //@line 90 "./optionsfile.h"
 __ZdlPv($11); //@line 90 "./optionsfile.h"
 label=4;break; //@line 90 "./optionsfile.h"
 case 4: 
 var $13=$2; //@line 90 "./optionsfile.h"
 var $14=$3; //@line 90 "./optionsfile.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 90 "./optionsfile.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z19createPlayerObjectsv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+416)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $playerData=sp;
 var $2=(sp)+(256);
 var $3=(sp)+(336);
 var $4=__ZN15vectorListClassI16playerUnitStructE9resetListEv(19240); //@line 45 "players.cpp"
 var $5=__Z15setupPlayerUnitR16playerUnitStructi($playerData,4); //@line 48 "players.cpp"
 var $6=$playerData; //@line 50 "players.cpp"
 var $7=(($6+96)|0); //@line 50 "players.cpp"
 HEAP8[($7)]=1; //@line 50 "players.cpp"
 var $8=$playerData; //@line 52 "players.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($2,$8); //@line 52 "players.cpp"
 var $9=(($2+16)|0); //@line 52 "players.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 52 "players.cpp"
 var $11=$playerData; //@line 53 "players.cpp"
 __Z23constructContainerFrameP17genericUnitStruct($3,$11); //@line 53 "players.cpp"
 var $12=(($3+40)|0); //@line 53 "players.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 53 "players.cpp"
 var $14=((($10)-($13))|0); //@line 53 "players.cpp"
 var $15=(((-$14))|0); //@line 53 "players.cpp"
 var $16=($15|0); //@line 53 "players.cpp"
 var $17=$playerData; //@line 53 "players.cpp"
 var $18=(($17+104)|0); //@line 53 "players.cpp"
 HEAPF64[(($18)>>3)]=$16; //@line 53 "players.cpp"
 var $19=$playerData; //@line 54 "players.cpp"
 var $20=(($19+112)|0); //@line 54 "players.cpp"
 HEAPF64[(($20)>>3)]=-50; //@line 54 "players.cpp"
 var $21=$playerData; //@line 56 "players.cpp"
 var $22=(($21+104)|0); //@line 56 "players.cpp"
 var $23=HEAPF64[(($22)>>3)]; //@line 56 "players.cpp"
 var $24=$playerData; //@line 56 "players.cpp"
 var $25=(($24+8)|0); //@line 56 "players.cpp"
 HEAPF64[(($25)>>3)]=$23; //@line 56 "players.cpp"
 var $26=$playerData; //@line 57 "players.cpp"
 var $27=(($26+112)|0); //@line 57 "players.cpp"
 var $28=HEAPF64[(($27)>>3)]; //@line 57 "players.cpp"
 var $29=$playerData; //@line 57 "players.cpp"
 var $30=(($29+16)|0); //@line 57 "players.cpp"
 HEAPF64[(($30)>>3)]=$28; //@line 57 "players.cpp"
 var $31=$playerData; //@line 59 "players.cpp"
 var $32=(($31+156)|0); //@line 59 "players.cpp"
 HEAP8[($32)]=1; //@line 59 "players.cpp"
 var $33=$playerData; //@line 60 "players.cpp"
 var $34=(($33+160)|0); //@line 60 "players.cpp"
 HEAPF64[(($34)>>3)]=200; //@line 60 "players.cpp"
 var $35=HEAP32[((19580)>>2)]; //@line 61 "players.cpp"
 var $36=((($35)-(150))|0); //@line 61 "players.cpp"
 var $37=(((($36>>>0))/(2))&-1); //@line 61 "players.cpp"
 var $38=($37>>>0); //@line 61 "players.cpp"
 var $39=$playerData; //@line 61 "players.cpp"
 var $40=(($39+168)|0); //@line 61 "players.cpp"
 HEAPF64[(($40)>>3)]=$38; //@line 61 "players.cpp"
 var $41=$playerData; //@line 62 "players.cpp"
 var $42=$playerData; //@line 62 "players.cpp"
 var $43=(($42+160)|0); //@line 62 "players.cpp"
 var $44=HEAPF64[(($43)>>3)]; //@line 62 "players.cpp"
 var $45=$playerData; //@line 62 "players.cpp"
 var $46=(($45+168)|0); //@line 62 "players.cpp"
 var $47=HEAPF64[(($46)>>3)]; //@line 62 "players.cpp"
 var $48=HEAP32[((2136)>>2)]; //@line 62 "players.cpp"
 var $49=($48|0); //@line 62 "players.cpp"
 var $50=(280)/($49); //@line 62 "players.cpp"
 var $51=__Z21setSpeedForLinealMoveP17genericUnitStructeed($41,$44,$47,$50); //@line 62 "players.cpp"
 var $52=HEAP32[((2136)>>2)]; //@line 67 "players.cpp"
 var $53=($52|0); //@line 67 "players.cpp"
 var $54=((0.2))*($53); //@line 67 "players.cpp"
 var $55=(($54)&-1); //@line 67 "players.cpp"
 var $56=(($playerData+232)|0); //@line 67 "players.cpp"
 HEAP32[(($56)>>2)]=$55; //@line 67 "players.cpp"
 var $57=HEAP32[((2136)>>2)]; //@line 70 "players.cpp"
 var $58=($57|0); //@line 70 "players.cpp"
 var $59=(200)/($58); //@line 70 "players.cpp"
 var $60=$playerData; //@line 70 "players.cpp"
 var $61=(($60+80)|0); //@line 70 "players.cpp"
 HEAPF64[(($61)>>3)]=$59; //@line 70 "players.cpp"
 var $62=(($playerData+176)|0); //@line 72 "players.cpp"
 HEAP8[($62)]=1; //@line 72 "players.cpp"
 var $63=(($playerData+180)|0); //@line 73 "players.cpp"
 HEAP32[(($63)>>2)]=1106; //@line 73 "players.cpp"
 var $64=(($playerData+184)|0); //@line 74 "players.cpp"
 HEAP32[(($64)>>2)]=1105; //@line 74 "players.cpp"
 var $65=(($playerData+188)|0); //@line 75 "players.cpp"
 HEAP32[(($65)>>2)]=1104; //@line 75 "players.cpp"
 var $66=(($playerData+192)|0); //@line 76 "players.cpp"
 HEAP32[(($66)>>2)]=1103; //@line 76 "players.cpp"
 var $67=(($playerData+196)|0); //@line 77 "players.cpp"
 HEAP32[(($67)>>2)]=128; //@line 77 "players.cpp"
 var $68=HEAP32[((19496)>>2)]; //@line 78 "players.cpp"
 var $69=($68|0)<=1; //@line 78 "players.cpp"
 if($69){label=2;break;}else{label=3;break;} //@line 78 "players.cpp"
 case 2: 
 var $71=(($playerData+200)|0); //@line 80 "players.cpp"
 HEAP8[($71)]=1; //@line 80 "players.cpp"
 label=4;break; //@line 81 "players.cpp"
 case 3: 
 var $73=(($playerData+200)|0); //@line 82 "players.cpp"
 HEAP8[($73)]=0; //@line 82 "players.cpp"
 label=4;break;
 case 4: 
 var $75=__ZN15vectorListClassI16playerUnitStructE7addNodeERS0_(19240,$playerData); //@line 85 "players.cpp"
 var $76=__ZN15vectorListClassI16playerUnitStructE12isValidIndexEm(19240,$75); //@line 85 "players.cpp"
 if($76){label=6;break;}else{label=5;break;} //@line 85 "players.cpp"
 case 5: 
 var $78=__ZN14conLoggerClass7logLineEPcbbbz(19416,9480,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 86 "players.cpp"
 $1=0; //@line 87 "players.cpp"
 label=7;break; //@line 87 "players.cpp"
 case 6: 
 $1=1; //@line 90 "players.cpp"
 label=7;break; //@line 90 "players.cpp"
 case 7: 
 var $81=$1; //@line 91 "players.cpp"
 STACKTOP=sp;return $81; //@line 91 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE7addNodeERS0_($this,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $index;
 $2=$this;
 $3=$data;
 var $4=$2;
 var $5=(($4+12)|0); //@line 369 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 369 "./vectorlist.h"
 $index=$6; //@line 369 "./vectorlist.h"
 var $7=(($4+12)|0); //@line 372 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 372 "./vectorlist.h"
 var $9=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 372 "./vectorlist.h"
 var $11=($8>>>0)>=($10>>>0); //@line 372 "./vectorlist.h"
 if($11){label=2;break;}else{label=3;break;} //@line 372 "./vectorlist.h"
 case 2: 
 var $13=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 372 "./vectorlist.h"
 $1=$14; //@line 372 "./vectorlist.h"
 label=6;break; //@line 372 "./vectorlist.h"
 case 3: 
 var $16=(($4+12)|0); //@line 375 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 375 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 375 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 375 "./vectorlist.h"
 var $20=(($19+((($17)*(264))&-1))|0); //@line 375 "./vectorlist.h"
 var $21=(($20)|0); //@line 375 "./vectorlist.h"
 var $22=$3; //@line 375 "./vectorlist.h"
 var $23=$21; //@line 375 "./vectorlist.h"
 var $24=$22; //@line 375 "./vectorlist.h"
 assert(256 % 1 === 0);(_memcpy($23, $24, 256)|0); //@line 375 "./vectorlist.h"
 var $25=(($4+12)|0); //@line 376 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 376 "./vectorlist.h"
 var $27=__ZN15vectorListClassI16playerUnitStructE12activateNodeEm($4,$26); //@line 376 "./vectorlist.h"
 if($27){label=5;break;}else{label=4;break;} //@line 376 "./vectorlist.h"
 case 4: 
 var $29=(($4+4)|0); //@line 376 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 376 "./vectorlist.h"
 $1=$30; //@line 376 "./vectorlist.h"
 label=6;break; //@line 376 "./vectorlist.h"
 case 5: 
 var $32=$index; //@line 379 "./vectorlist.h"
 $1=$32; //@line 379 "./vectorlist.h"
 label=6;break; //@line 379 "./vectorlist.h"
 case 6: 
 var $34=$1; //@line 380 "./vectorlist.h"
 STACKTOP=sp;return $34; //@line 380 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z20destroyPlayerObjectsv(){
 var label=0;


 return 1; //@line 98 "players.cpp"
}


function __Z26playerIncrementScoreForHitR23gameObjectPointerStructd($unitP,$extraScore){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $player;
 $2=$unitP;
 $3=$extraScore;
 var $4=$2; //@line 109 "players.cpp"
 var $5=(($4+4)|0); //@line 109 "players.cpp"
 var $6=HEAP8[($5)]; //@line 109 "players.cpp"
 var $7=($6&255); //@line 109 "players.cpp"
 var $8=($7|0)!=2; //@line 109 "players.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 109 "players.cpp"
 case 2: 
 $1=0; //@line 110 "players.cpp"
 label=8;break; //@line 110 "players.cpp"
 case 3: 
 var $11=$2; //@line 112 "players.cpp"
 var $12=(($11+8)|0); //@line 112 "players.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 112 "players.cpp"
 var $14=__ZN15vectorListClassI16playerUnitStructE7getNodeEm(19240,$13); //@line 112 "players.cpp"
 $player=$14; //@line 112 "players.cpp"
 var $15=$player; //@line 116 "players.cpp"
 var $16=(($15)|0); //@line 116 "players.cpp"
 var $17=$16; //@line 116 "players.cpp"
 var $18=(($17)|0); //@line 116 "players.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 116 "players.cpp"
 var $20=$2; //@line 116 "players.cpp"
 var $21=(($20)|0); //@line 116 "players.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 116 "players.cpp"
 var $23=($19|0)!=($22|0); //@line 116 "players.cpp"
 if($23){label=6;break;}else{label=4;break;} //@line 116 "players.cpp"
 case 4: 
 var $25=$player; //@line 116 "players.cpp"
 var $26=(($25)|0); //@line 116 "players.cpp"
 var $27=(($26+240)|0); //@line 116 "players.cpp"
 var $28=HEAPF64[(($27)>>3)]; //@line 116 "players.cpp"
 var $29=$28<=0; //@line 116 "players.cpp"
 if($29){label=6;break;}else{label=5;break;} //@line 116 "players.cpp"
 case 5: 
 var $31=$player; //@line 116 "players.cpp"
 var $32=(($31)|0); //@line 116 "players.cpp"
 var $33=$32; //@line 116 "players.cpp"
 var $34=(($33+130)|0); //@line 116 "players.cpp"
 var $35=HEAP8[($34)]; //@line 116 "players.cpp"
 var $36=(($35)&1); //@line 116 "players.cpp"
 if($36){label=7;break;}else{label=6;break;} //@line 116 "players.cpp"
 case 6: 
 $1=1; //@line 121 "players.cpp"
 label=8;break; //@line 121 "players.cpp"
 case 7: 
 var $39=$3; //@line 125 "players.cpp"
 var $40=$player; //@line 125 "players.cpp"
 var $41=(($40)|0); //@line 125 "players.cpp"
 var $42=(($41+248)|0); //@line 125 "players.cpp"
 var $43=HEAPF64[(($42)>>3)]; //@line 125 "players.cpp"
 var $44=($43)+($39); //@line 125 "players.cpp"
 HEAPF64[(($42)>>3)]=$44; //@line 125 "players.cpp"
 var $45=$3; //@line 127 "players.cpp"
 var $46=(($45)&-1); //@line 127 "players.cpp"
 var $47=HEAP32[((19628)>>2)]; //@line 127 "players.cpp"
 var $48=((($47)+($46))|0); //@line 127 "players.cpp"
 HEAP32[((19628)>>2)]=$48; //@line 127 "players.cpp"
 $1=1; //@line 129 "players.cpp"
 label=8;break; //@line 129 "players.cpp"
 case 8: 
 var $50=$1; //@line 130 "players.cpp"
 STACKTOP=sp;return $50; //@line 130 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z24allPlayersIncrementScored($extraScore){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $player;
 $1=$extraScore;
 var $2=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 138 "players.cpp"
 $player=$2; //@line 138 "players.cpp"
 label=2;break; //@line 138 "players.cpp"
 case 2: 
 var $4=$player; //@line 138 "players.cpp"
 var $5=($4|0)!=0; //@line 138 "players.cpp"
 if($5){label=3;break;}else{label=7;break;} //@line 138 "players.cpp"
 case 3: 
 var $7=$player; //@line 142 "players.cpp"
 var $8=(($7)|0); //@line 142 "players.cpp"
 var $9=$8; //@line 142 "players.cpp"
 var $10=(($9+130)|0); //@line 142 "players.cpp"
 var $11=HEAP8[($10)]; //@line 142 "players.cpp"
 var $12=(($11)&1); //@line 142 "players.cpp"
 if($12){label=5;break;}else{label=4;break;} //@line 142 "players.cpp"
 case 4: 
 label=6;break; //@line 142 "players.cpp"
 case 5: 
 var $15=$1; //@line 145 "players.cpp"
 var $16=$player; //@line 145 "players.cpp"
 var $17=(($16)|0); //@line 145 "players.cpp"
 var $18=(($17+248)|0); //@line 145 "players.cpp"
 var $19=HEAPF64[(($18)>>3)]; //@line 145 "players.cpp"
 var $20=($19)+($15); //@line 145 "players.cpp"
 HEAPF64[(($18)>>3)]=$20; //@line 145 "players.cpp"
 label=6;break; //@line 146 "players.cpp"
 case 6: 
 var $22=$player; //@line 139 "players.cpp"
 var $23=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$22); //@line 139 "players.cpp"
 $player=$23; //@line 139 "players.cpp"
 label=2;break; //@line 139 "players.cpp"
 case 7: 
 STACKTOP=sp;return 1; //@line 149 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z16playerDropBulletR20vectorListNodeStructI16playerUnitStructE($unitP){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+208)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $myPlayerType;
 var $myBulletType;
 var $myPlayerFrame;
 var $myBulletFrame;
 var $unitB=sp;
 var $x;
 var $y;
 $2=$unitP;
 var $3=__Z15setupBulletUnitR16bulletUnitStructi($unitB,3); //@line 167 "players.cpp"
 if($3){label=3;break;}else{label=2;break;} //@line 167 "players.cpp"
 case 2: 
 $1=0; //@line 168 "players.cpp"
 label=14;break; //@line 168 "players.cpp"
 case 3: 
 var $6=$2; //@line 171 "players.cpp"
 var $7=(($6)|0); //@line 171 "players.cpp"
 var $8=$7; //@line 171 "players.cpp"
 var $9=(($8+24)|0); //@line 171 "players.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 171 "players.cpp"
 var $11=((448+((($10)*(24))&-1))|0); //@line 171 "players.cpp"
 $myPlayerType=$11; //@line 171 "players.cpp"
 var $12=$2; //@line 172 "players.cpp"
 var $13=(($12)|0); //@line 172 "players.cpp"
 var $14=$13; //@line 172 "players.cpp"
 var $15=(($14+88)|0); //@line 172 "players.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 172 "players.cpp"
 var $17=$myPlayerType; //@line 172 "players.cpp"
 var $18=(($17+16)|0); //@line 172 "players.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 172 "players.cpp"
 var $20=(($19+((($16)*(80))&-1))|0); //@line 172 "players.cpp"
 $myPlayerFrame=$20; //@line 172 "players.cpp"
 var $21=$unitB; //@line 173 "players.cpp"
 var $22=(($21+24)|0); //@line 173 "players.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 173 "players.cpp"
 var $24=((2192+((($23)*(24))&-1))|0); //@line 173 "players.cpp"
 $myBulletType=$24; //@line 173 "players.cpp"
 var $25=$unitB; //@line 174 "players.cpp"
 var $26=(($25+88)|0); //@line 174 "players.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 174 "players.cpp"
 var $28=$myBulletType; //@line 174 "players.cpp"
 var $29=(($28+16)|0); //@line 174 "players.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 174 "players.cpp"
 var $31=(($30+((($27)*(80))&-1))|0); //@line 174 "players.cpp"
 $myBulletFrame=$31; //@line 174 "players.cpp"
 var $32=$2; //@line 177 "players.cpp"
 var $33=(($32)|0); //@line 177 "players.cpp"
 var $34=$33; //@line 177 "players.cpp"
 var $35=(($34+8)|0); //@line 177 "players.cpp"
 var $36=HEAPF64[(($35)>>3)]; //@line 177 "players.cpp"
 var $37=$myPlayerFrame; //@line 177 "players.cpp"
 var $38=(($37+48)|0); //@line 177 "players.cpp"
 var $39=HEAP32[(($38)>>2)]; //@line 177 "players.cpp"
 var $40=($39|0); //@line 177 "players.cpp"
 var $41=($36)+($40); //@line 177 "players.cpp"
 $x=$41; //@line 177 "players.cpp"
 var $42=$2; //@line 179 "players.cpp"
 var $43=(($42)|0); //@line 179 "players.cpp"
 var $44=$43; //@line 179 "players.cpp"
 var $45=(($44+16)|0); //@line 179 "players.cpp"
 var $46=HEAPF64[(($45)>>3)]; //@line 179 "players.cpp"
 var $47=$myPlayerFrame; //@line 179 "players.cpp"
 var $48=(($47+52)|0); //@line 179 "players.cpp"
 var $49=HEAP32[(($48)>>2)]; //@line 179 "players.cpp"
 var $50=($49|0); //@line 179 "players.cpp"
 var $51=($46)+($50); //@line 179 "players.cpp"
 $y=$51; //@line 179 "players.cpp"
 var $52=$x; //@line 185 "players.cpp"
 var $53=$unitB; //@line 185 "players.cpp"
 var $54=(($53+8)|0); //@line 185 "players.cpp"
 HEAPF64[(($54)>>3)]=$52; //@line 185 "players.cpp"
 var $55=$y; //@line 186 "players.cpp"
 var $56=$myBulletFrame; //@line 186 "players.cpp"
 var $57=(($56+44)|0); //@line 186 "players.cpp"
 var $58=HEAP32[(($57)>>2)]; //@line 186 "players.cpp"
 var $59=($58|0); //@line 186 "players.cpp"
 var $60=($55)+($59); //@line 186 "players.cpp"
 var $61=$myBulletFrame; //@line 186 "players.cpp"
 var $62=(($61+20)|0); //@line 186 "players.cpp"
 var $63=HEAP32[(($62)>>2)]; //@line 186 "players.cpp"
 var $64=(((($63|0))/(2))&-1); //@line 186 "players.cpp"
 var $65=($64|0); //@line 186 "players.cpp"
 var $66=($60)-($65); //@line 186 "players.cpp"
 var $67=$unitB; //@line 186 "players.cpp"
 var $68=(($67+16)|0); //@line 186 "players.cpp"
 HEAPF64[(($68)>>3)]=$66; //@line 186 "players.cpp"
 var $69=(($unitB+177)|0); //@line 189 "players.cpp"
 HEAP8[($69)]=1; //@line 189 "players.cpp"
 var $70=(($unitB+176)|0); //@line 190 "players.cpp"
 HEAP8[($70)]=1; //@line 190 "players.cpp"
 var $71=$2; //@line 193 "players.cpp"
 var $72=(($71)|0); //@line 193 "players.cpp"
 var $73=$72; //@line 193 "players.cpp"
 var $74=(($73)|0); //@line 193 "players.cpp"
 var $75=HEAP32[(($74)>>2)]; //@line 193 "players.cpp"
 var $76=(($unitB+184)|0); //@line 193 "players.cpp"
 var $77=(($76)|0); //@line 193 "players.cpp"
 HEAP32[(($77)>>2)]=$75; //@line 193 "players.cpp"
 var $78=$2; //@line 194 "players.cpp"
 var $79=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$78); //@line 194 "players.cpp"
 var $80=(($unitB+184)|0); //@line 194 "players.cpp"
 var $81=(($80+8)|0); //@line 194 "players.cpp"
 HEAP32[(($81)>>2)]=$79; //@line 194 "players.cpp"
 var $82=(($unitB+184)|0); //@line 195 "players.cpp"
 var $83=(($82+4)|0); //@line 195 "players.cpp"
 HEAP8[($83)]=2; //@line 195 "players.cpp"
 var $84=HEAPF64[((19584)>>3)]; //@line 198 "players.cpp"
 var $85=HEAP32[((2136)>>2)]; //@line 198 "players.cpp"
 var $86=($85|0); //@line 198 "players.cpp"
 var $87=(700)/($86); //@line 198 "players.cpp"
 var $88=($84)+($87); //@line 198 "players.cpp"
 var $89=$unitB; //@line 198 "players.cpp"
 var $90=(($89+80)|0); //@line 198 "players.cpp"
 HEAPF64[(($90)>>3)]=$88; //@line 198 "players.cpp"
 var $91=$unitB; //@line 202 "players.cpp"
 var $92=(($91+156)|0); //@line 202 "players.cpp"
 HEAP8[($92)]=1; //@line 202 "players.cpp"
 var $93=$unitB; //@line 204 "players.cpp"
 var $94=(($93+16)|0); //@line 204 "players.cpp"
 var $95=HEAPF64[(($94)>>3)]; //@line 204 "players.cpp"
 var $96=(($95)&-1); //@line 204 "players.cpp"
 var $97=__Z12getRightWalli($96); //@line 204 "players.cpp"
 var $98=($97|0); //@line 204 "players.cpp"
 var $99=$unitB; //@line 204 "players.cpp"
 var $100=(($99+160)|0); //@line 204 "players.cpp"
 HEAPF64[(($100)>>3)]=$98; //@line 204 "players.cpp"
 var $101=$unitB; //@line 206 "players.cpp"
 var $102=(($101+160)|0); //@line 206 "players.cpp"
 var $103=HEAPF64[(($102)>>3)]; //@line 206 "players.cpp"
 var $104=$unitB; //@line 206 "players.cpp"
 var $105=(($104+16)|0); //@line 206 "players.cpp"
 var $106=HEAPF64[(($105)>>3)]; //@line 206 "players.cpp"
 var $107=$myBulletFrame; //@line 206 "players.cpp"
 var $108=(($107+44)|0); //@line 206 "players.cpp"
 var $109=HEAP32[(($108)>>2)]; //@line 206 "players.cpp"
 var $110=($109|0); //@line 206 "players.cpp"
 var $111=($106)-($110); //@line 206 "players.cpp"
 var $112=(($111)&-1); //@line 206 "players.cpp"
 var $113=__Z12getRightWalli($112); //@line 206 "players.cpp"
 var $114=($113|0); //@line 206 "players.cpp"
 var $115=$103<$114; //@line 206 "players.cpp"
 if($115){label=4;break;}else{label=5;break;} //@line 206 "players.cpp"
 case 4: 
 var $117=$unitB; //@line 206 "players.cpp"
 var $118=(($117+160)|0); //@line 206 "players.cpp"
 var $119=HEAPF64[(($118)>>3)]; //@line 206 "players.cpp"
 var $133=$119;label=6;break; //@line 206 "players.cpp"
 case 5: 
 var $121=$unitB; //@line 206 "players.cpp"
 var $122=(($121+16)|0); //@line 206 "players.cpp"
 var $123=HEAPF64[(($122)>>3)]; //@line 206 "players.cpp"
 var $124=$myBulletFrame; //@line 206 "players.cpp"
 var $125=(($124+44)|0); //@line 206 "players.cpp"
 var $126=HEAP32[(($125)>>2)]; //@line 206 "players.cpp"
 var $127=($126|0); //@line 206 "players.cpp"
 var $128=($123)-($127); //@line 206 "players.cpp"
 var $129=(($128)&-1); //@line 206 "players.cpp"
 var $130=__Z12getRightWalli($129); //@line 206 "players.cpp"
 var $131=($130|0); //@line 206 "players.cpp"
 var $133=$131;label=6;break; //@line 206 "players.cpp"
 case 6: 
 var $133; //@line 206 "players.cpp"
 var $134=$unitB; //@line 206 "players.cpp"
 var $135=(($134+160)|0); //@line 206 "players.cpp"
 HEAPF64[(($135)>>3)]=$133; //@line 206 "players.cpp"
 var $136=$unitB; //@line 209 "players.cpp"
 var $137=(($136+160)|0); //@line 209 "players.cpp"
 var $138=HEAPF64[(($137)>>3)]; //@line 209 "players.cpp"
 var $139=$unitB; //@line 209 "players.cpp"
 var $140=(($139+16)|0); //@line 209 "players.cpp"
 var $141=HEAPF64[(($140)>>3)]; //@line 209 "players.cpp"
 var $142=$myBulletFrame; //@line 209 "players.cpp"
 var $143=(($142+20)|0); //@line 209 "players.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 209 "players.cpp"
 var $145=($144|0); //@line 209 "players.cpp"
 var $146=($141)+($145); //@line 209 "players.cpp"
 var $147=$myBulletFrame; //@line 209 "players.cpp"
 var $148=(($147+44)|0); //@line 209 "players.cpp"
 var $149=HEAP32[(($148)>>2)]; //@line 209 "players.cpp"
 var $150=($149|0); //@line 209 "players.cpp"
 var $151=($146)-($150); //@line 209 "players.cpp"
 var $152=(($151)&-1); //@line 209 "players.cpp"
 var $153=__Z12getRightWalli($152); //@line 209 "players.cpp"
 var $154=($153|0); //@line 209 "players.cpp"
 var $155=$138<$154; //@line 209 "players.cpp"
 if($155){label=7;break;}else{label=8;break;} //@line 209 "players.cpp"
 case 7: 
 var $157=$unitB; //@line 209 "players.cpp"
 var $158=(($157+160)|0); //@line 209 "players.cpp"
 var $159=HEAPF64[(($158)>>3)]; //@line 209 "players.cpp"
 var $178=$159;label=9;break; //@line 209 "players.cpp"
 case 8: 
 var $161=$unitB; //@line 209 "players.cpp"
 var $162=(($161+16)|0); //@line 209 "players.cpp"
 var $163=HEAPF64[(($162)>>3)]; //@line 209 "players.cpp"
 var $164=$myBulletFrame; //@line 209 "players.cpp"
 var $165=(($164+20)|0); //@line 209 "players.cpp"
 var $166=HEAP32[(($165)>>2)]; //@line 209 "players.cpp"
 var $167=($166|0); //@line 209 "players.cpp"
 var $168=($163)+($167); //@line 209 "players.cpp"
 var $169=$myBulletFrame; //@line 209 "players.cpp"
 var $170=(($169+44)|0); //@line 209 "players.cpp"
 var $171=HEAP32[(($170)>>2)]; //@line 209 "players.cpp"
 var $172=($171|0); //@line 209 "players.cpp"
 var $173=($168)-($172); //@line 209 "players.cpp"
 var $174=(($173)&-1); //@line 209 "players.cpp"
 var $175=__Z12getRightWalli($174); //@line 209 "players.cpp"
 var $176=($175|0); //@line 209 "players.cpp"
 var $178=$176;label=9;break; //@line 209 "players.cpp"
 case 9: 
 var $178; //@line 209 "players.cpp"
 var $179=$unitB; //@line 209 "players.cpp"
 var $180=(($179+160)|0); //@line 209 "players.cpp"
 HEAPF64[(($180)>>3)]=$178; //@line 209 "players.cpp"
 var $181=$unitB; //@line 212 "players.cpp"
 var $182=(($181+16)|0); //@line 212 "players.cpp"
 var $183=HEAPF64[(($182)>>3)]; //@line 212 "players.cpp"
 var $184=$unitB; //@line 212 "players.cpp"
 var $185=(($184+168)|0); //@line 212 "players.cpp"
 HEAPF64[(($185)>>3)]=$183; //@line 212 "players.cpp"
 var $186=$unitB; //@line 218 "players.cpp"
 var $187=(($186+160)|0); //@line 218 "players.cpp"
 var $188=HEAPF64[(($187)>>3)]; //@line 218 "players.cpp"
 var $189=$unitB; //@line 218 "players.cpp"
 var $190=(($189+8)|0); //@line 218 "players.cpp"
 var $191=HEAPF64[(($190)>>3)]; //@line 218 "players.cpp"
 var $192=$188<$191; //@line 218 "players.cpp"
 if($192){label=10;break;}else{label=11;break;} //@line 218 "players.cpp"
 case 10: 
 var $194=$unitB; //@line 218 "players.cpp"
 var $195=(($194+160)|0); //@line 218 "players.cpp"
 var $196=HEAPF64[(($195)>>3)]; //@line 218 "players.cpp"
 var $197=$unitB; //@line 218 "players.cpp"
 var $198=(($197+8)|0); //@line 218 "players.cpp"
 HEAPF64[(($198)>>3)]=$196; //@line 218 "players.cpp"
 label=11;break; //@line 218 "players.cpp"
 case 11: 
 var $200=$unitB; //@line 220 "players.cpp"
 var $201=$unitB; //@line 220 "players.cpp"
 var $202=(($201+160)|0); //@line 220 "players.cpp"
 var $203=HEAPF64[(($202)>>3)]; //@line 220 "players.cpp"
 var $204=$unitB; //@line 220 "players.cpp"
 var $205=(($204+168)|0); //@line 220 "players.cpp"
 var $206=HEAPF64[(($205)>>3)]; //@line 220 "players.cpp"
 var $207=$unitB; //@line 220 "players.cpp"
 var $208=(($207+80)|0); //@line 220 "players.cpp"
 var $209=HEAPF64[(($208)>>3)]; //@line 220 "players.cpp"
 var $210=__Z21setSpeedForLinealMoveP17genericUnitStructeed($200,$203,$206,$209); //@line 220 "players.cpp"
 var $211=__ZN15vectorListClassI16bulletUnitStructE7addNodeERS0_(19920,$unitB); //@line 226 "players.cpp"
 var $212=__ZN15vectorListClassI16bulletUnitStructE12isValidIndexEm(19920,$211); //@line 226 "players.cpp"
 if($212){label=13;break;}else{label=12;break;} //@line 226 "players.cpp"
 case 12: 
 var $214=__ZN14conLoggerClass7logLineEPcbbbz(19416,14736,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 227 "players.cpp"
 $1=0; //@line 228 "players.cpp"
 label=14;break; //@line 228 "players.cpp"
 case 13: 
 $1=1; //@line 234 "players.cpp"
 label=14;break; //@line 234 "players.cpp"
 case 14: 
 var $217=$1; //@line 235 "players.cpp"
 STACKTOP=sp;return $217; //@line 235 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE7addNodeERS0_($this,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $index;
 $2=$this;
 $3=$data;
 var $4=$2;
 var $5=(($4+12)|0); //@line 369 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 369 "./vectorlist.h"
 $index=$6; //@line 369 "./vectorlist.h"
 var $7=(($4+12)|0); //@line 372 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 372 "./vectorlist.h"
 var $9=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 372 "./vectorlist.h"
 var $11=($8>>>0)>=($10>>>0); //@line 372 "./vectorlist.h"
 if($11){label=2;break;}else{label=3;break;} //@line 372 "./vectorlist.h"
 case 2: 
 var $13=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 372 "./vectorlist.h"
 $1=$14; //@line 372 "./vectorlist.h"
 label=6;break; //@line 372 "./vectorlist.h"
 case 3: 
 var $16=(($4+12)|0); //@line 375 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 375 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 375 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 375 "./vectorlist.h"
 var $20=(($19+((($17)*(216))&-1))|0); //@line 375 "./vectorlist.h"
 var $21=(($20)|0); //@line 375 "./vectorlist.h"
 var $22=$3; //@line 375 "./vectorlist.h"
 var $23=$21; //@line 375 "./vectorlist.h"
 var $24=$22; //@line 375 "./vectorlist.h"
 assert(201 % 1 === 0);(_memcpy($23, $24, 201)|0); //@line 375 "./vectorlist.h"
 var $25=(($4+12)|0); //@line 376 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 376 "./vectorlist.h"
 var $27=__ZN15vectorListClassI16bulletUnitStructE12activateNodeEm($4,$26); //@line 376 "./vectorlist.h"
 if($27){label=5;break;}else{label=4;break;} //@line 376 "./vectorlist.h"
 case 4: 
 var $29=(($4+4)|0); //@line 376 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 376 "./vectorlist.h"
 $1=$30; //@line 376 "./vectorlist.h"
 label=6;break; //@line 376 "./vectorlist.h"
 case 5: 
 var $32=$index; //@line 379 "./vectorlist.h"
 $1=$32; //@line 379 "./vectorlist.h"
 label=6;break; //@line 379 "./vectorlist.h"
 case 6: 
 var $34=$1; //@line 380 "./vectorlist.h"
 STACKTOP=sp;return $34; //@line 380 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18isPlayerKeyPressedPhib($keys,$keyCode,$playerUseAllKeyboard){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$keys;
 $3=$keyCode;
 var $5=($playerUseAllKeyboard&1);
 $4=$5;
 var $6=$4; //@line 240 "players.cpp"
 var $7=(($6)&1); //@line 240 "players.cpp"
 if($7){label=2;break;}else{label=8;break;} //@line 240 "players.cpp"
 case 2: 
 var $9=$3; //@line 241 "players.cpp"
 if(($9|0)==64|($9|0)==128|($9|0)==32){ label=3;break;}else{label=7;break;}
 case 3: 
 var $11=$2; //@line 245 "players.cpp"
 var $12=(($11+32)|0); //@line 245 "players.cpp"
 var $13=HEAP8[($12)]; //@line 245 "players.cpp"
 var $14=(($13<<24)>>24)!=0; //@line 245 "players.cpp"
 if($14){var $26=1;label=6;break;}else{label=4;break;} //@line 245 "players.cpp"
 case 4: 
 var $16=$2; //@line 245 "players.cpp"
 var $17=(($16+64)|0); //@line 245 "players.cpp"
 var $18=HEAP8[($17)]; //@line 245 "players.cpp"
 var $19=(($18<<24)>>24)!=0; //@line 245 "players.cpp"
 if($19){var $26=1;label=6;break;}else{label=5;break;} //@line 245 "players.cpp"
 case 5: 
 var $21=$2; //@line 245 "players.cpp"
 var $22=(($21+128)|0); //@line 245 "players.cpp"
 var $23=HEAP8[($22)]; //@line 245 "players.cpp"
 var $24=(($23<<24)>>24)!=0; //@line 245 "players.cpp"
 var $26=$24;label=6;break; //@line 245 "players.cpp"
 case 6: 
 var $26;
 $1=$26; //@line 245 "players.cpp"
 label=9;break; //@line 245 "players.cpp"
 case 7: 
 var $28=$3; //@line 250 "players.cpp"
 var $29=$2; //@line 250 "players.cpp"
 var $30=(($29+$28)|0); //@line 250 "players.cpp"
 var $31=HEAP8[($30)]; //@line 250 "players.cpp"
 var $32=(($31<<24)>>24)!=0; //@line 250 "players.cpp"
 $1=$32; //@line 250 "players.cpp"
 label=9;break; //@line 250 "players.cpp"
 case 8: 
 var $34=$3; //@line 253 "players.cpp"
 var $35=$2; //@line 253 "players.cpp"
 var $36=(($35+$34)|0); //@line 253 "players.cpp"
 var $37=HEAP8[($36)]; //@line 253 "players.cpp"
 var $38=(($37<<24)>>24)!=0; //@line 253 "players.cpp"
 $1=$38; //@line 253 "players.cpp"
 label=9;break; //@line 253 "players.cpp"
 case 9: 
 var $40=$1; //@line 255 "players.cpp"
 STACKTOP=sp;return $40; //@line 255 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z14movePlayerUnitR20vectorListNodeStructI16playerUnitStructEPh($unit,$keys){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $myPlayerType;
 var $myUnitFrame;
 var $wasGoingToPoint;
 var $counter;
 var $extraPlayer;
 $2=$unit;
 $3=$keys;
 var $4=$2; //@line 266 "players.cpp"
 var $5=(($4)|0); //@line 266 "players.cpp"
 var $6=$5; //@line 266 "players.cpp"
 var $7=(($6+156)|0); //@line 266 "players.cpp"
 var $8=HEAP8[($7)]; //@line 266 "players.cpp"
 var $9=(($8)&1); //@line 266 "players.cpp"
 var $10=($9&1); //@line 266 "players.cpp"
 $wasGoingToPoint=$10; //@line 266 "players.cpp"
 var $11=$2; //@line 269 "players.cpp"
 var $12=(($11)|0); //@line 269 "players.cpp"
 var $13=$12; //@line 269 "players.cpp"
 var $14=(($13+24)|0); //@line 269 "players.cpp"
 var $15=HEAP32[(($14)>>2)]; //@line 269 "players.cpp"
 var $16=((448+((($15)*(24))&-1))|0); //@line 269 "players.cpp"
 $myPlayerType=$16; //@line 269 "players.cpp"
 var $17=$2; //@line 270 "players.cpp"
 var $18=(($17)|0); //@line 270 "players.cpp"
 var $19=$18; //@line 270 "players.cpp"
 var $20=(($19+88)|0); //@line 270 "players.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 270 "players.cpp"
 var $22=$myPlayerType; //@line 270 "players.cpp"
 var $23=(($22+16)|0); //@line 270 "players.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 270 "players.cpp"
 var $25=(($24+((($21)*(80))&-1))|0); //@line 270 "players.cpp"
 $myUnitFrame=$25; //@line 270 "players.cpp"
 var $26=$2; //@line 278 "players.cpp"
 var $27=(($26)|0); //@line 278 "players.cpp"
 var $28=$27; //@line 278 "players.cpp"
 var $29=__Z13autoFrameUnitP17genericUnitStruct($28); //@line 278 "players.cpp"
 if($29){label=3;break;}else{label=2;break;} //@line 278 "players.cpp"
 case 2: 
 $1=0; //@line 278 "players.cpp"
 label=106;break; //@line 278 "players.cpp"
 case 3: 
 var $32=$2; //@line 282 "players.cpp"
 var $33=(($32)|0); //@line 282 "players.cpp"
 var $34=$33; //@line 282 "players.cpp"
 var $35=(($34+88)|0); //@line 282 "players.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 282 "players.cpp"
 if(($36|0)==-1){ label=4;break;}else{label=9;break;}
 case 4: 
 var $38=$2; //@line 287 "players.cpp"
 var $39=(($38)|0); //@line 287 "players.cpp"
 var $40=$39; //@line 287 "players.cpp"
 var $41=__Z12freeSlavesOfP17genericUnitStruct($40); //@line 287 "players.cpp"
 if($41){label=6;break;}else{label=5;break;} //@line 287 "players.cpp"
 case 5: 
 $1=0; //@line 287 "players.cpp"
 label=106;break; //@line 287 "players.cpp"
 case 6: 
 var $44=$2; //@line 289 "players.cpp"
 var $45=__ZN15vectorListClassI16playerUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19240,$44); //@line 289 "players.cpp"
 var $46=__ZN15vectorListClassI16playerUnitStructE10removeNodeEm(19240,$45); //@line 289 "players.cpp"
 if($46){label=8;break;}else{label=7;break;} //@line 289 "players.cpp"
 case 7: 
 $1=0; //@line 290 "players.cpp"
 label=106;break; //@line 290 "players.cpp"
 case 8: 
 $1=1; //@line 292 "players.cpp"
 label=106;break; //@line 292 "players.cpp"
 case 9: 
 label=10;break; //@line 296 "players.cpp"
 case 10: 
 var $51=$2; //@line 301 "players.cpp"
 var $52=(($51)|0); //@line 301 "players.cpp"
 var $53=$52; //@line 301 "players.cpp"
 var $54=__Z12getUnitFrameP17genericUnitStruct($53); //@line 301 "players.cpp"
 $myUnitFrame=$54; //@line 301 "players.cpp"
 var $55=$2; //@line 305 "players.cpp"
 var $56=(($55)|0); //@line 305 "players.cpp"
 var $57=$56; //@line 305 "players.cpp"
 var $58=(($57+132)|0); //@line 305 "players.cpp"
 var $59=(($58+4)|0); //@line 305 "players.cpp"
 var $60=HEAP8[($59)]; //@line 305 "players.cpp"
 var $61=($60&255); //@line 305 "players.cpp"
 var $62=($61|0)!=0; //@line 305 "players.cpp"
 if($62){label=11;break;}else{label=12;break;} //@line 305 "players.cpp"
 case 11: 
 $1=1; //@line 306 "players.cpp"
 label=106;break; //@line 306 "players.cpp"
 case 12: 
 var $65=$2; //@line 309 "players.cpp"
 var $66=(($65)|0); //@line 309 "players.cpp"
 var $67=$66; //@line 309 "players.cpp"
 var $68=(($67+96)|0); //@line 309 "players.cpp"
 var $69=HEAP8[($68)]; //@line 309 "players.cpp"
 var $70=(($69)&1); //@line 309 "players.cpp"
 if($70){label=13;break;}else{label=14;break;} //@line 309 "players.cpp"
 case 13: 
 var $72=HEAPF64[((19560)>>3)]; //@line 310 "players.cpp"
 var $73=$2; //@line 310 "players.cpp"
 var $74=(($73)|0); //@line 310 "players.cpp"
 var $75=$74; //@line 310 "players.cpp"
 var $76=(($75+104)|0); //@line 310 "players.cpp"
 var $77=HEAPF64[(($76)>>3)]; //@line 310 "players.cpp"
 var $78=($72)+($77); //@line 310 "players.cpp"
 var $79=$2; //@line 310 "players.cpp"
 var $80=(($79)|0); //@line 310 "players.cpp"
 var $81=$80; //@line 310 "players.cpp"
 var $82=(($81+8)|0); //@line 310 "players.cpp"
 HEAPF64[(($82)>>3)]=$78; //@line 310 "players.cpp"
 var $83=HEAPF64[((19568)>>3)]; //@line 311 "players.cpp"
 var $84=$2; //@line 311 "players.cpp"
 var $85=(($84)|0); //@line 311 "players.cpp"
 var $86=$85; //@line 311 "players.cpp"
 var $87=(($86+112)|0); //@line 311 "players.cpp"
 var $88=HEAPF64[(($87)>>3)]; //@line 311 "players.cpp"
 var $89=($83)+($88); //@line 311 "players.cpp"
 var $90=$2; //@line 311 "players.cpp"
 var $91=(($90)|0); //@line 311 "players.cpp"
 var $92=$91; //@line 311 "players.cpp"
 var $93=(($92+16)|0); //@line 311 "players.cpp"
 HEAPF64[(($93)>>3)]=$89; //@line 311 "players.cpp"
 label=14;break; //@line 312 "players.cpp"
 case 14: 
 var $95=$2; //@line 316 "players.cpp"
 var $96=(($95)|0); //@line 316 "players.cpp"
 var $97=(($96+228)|0); //@line 316 "players.cpp"
 var $98=HEAP32[(($97)>>2)]; //@line 316 "players.cpp"
 var $99=($98|0)>0; //@line 316 "players.cpp"
 if($99){label=15;break;}else{label=21;break;} //@line 316 "players.cpp"
 case 15: 
 var $101=$2; //@line 317 "players.cpp"
 var $102=(($101)|0); //@line 317 "players.cpp"
 var $103=(($102+228)|0); //@line 317 "players.cpp"
 var $104=HEAP32[(($103)>>2)]; //@line 317 "players.cpp"
 var $105=((($104)-(1))|0); //@line 317 "players.cpp"
 HEAP32[(($103)>>2)]=$105; //@line 317 "players.cpp"
 var $106=$2; //@line 319 "players.cpp"
 var $107=(($106)|0); //@line 319 "players.cpp"
 var $108=(($107+228)|0); //@line 319 "players.cpp"
 var $109=HEAP32[(($108)>>2)]; //@line 319 "players.cpp"
 var $110=($109|0)==0; //@line 319 "players.cpp"
 if($110){label=16;break;}else{label=20;break;} //@line 319 "players.cpp"
 case 16: 
 var $112=$2; //@line 319 "players.cpp"
 var $113=(($112)|0); //@line 319 "players.cpp"
 var $114=(($113+240)|0); //@line 319 "players.cpp"
 var $115=HEAPF64[(($114)>>3)]; //@line 319 "players.cpp"
 var $116=$115>0; //@line 319 "players.cpp"
 if($116){label=17;break;}else{label=20;break;} //@line 319 "players.cpp"
 case 17: 
 var $118=$2; //@line 321 "players.cpp"
 var $119=(($118)|0); //@line 321 "players.cpp"
 var $120=$119; //@line 321 "players.cpp"
 var $121=(($120+24)|0); //@line 321 "players.cpp"
 var $122=HEAP32[(($121)>>2)]; //@line 321 "players.cpp"
 if(($122|0)==4){ label=18;break;}else{label=19;break;}
 case 18: 
 var $124=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(11504,0); //@line 324 "players.cpp"
 var $125=$2; //@line 324 "players.cpp"
 var $126=(($125)|0); //@line 324 "players.cpp"
 var $127=$126; //@line 324 "players.cpp"
 var $128=(($127+88)|0); //@line 324 "players.cpp"
 HEAP32[(($128)>>2)]=$124; //@line 324 "players.cpp"
 var $129=$2; //@line 325 "players.cpp"
 var $130=(($129)|0); //@line 325 "players.cpp"
 var $131=$130; //@line 325 "players.cpp"
 var $132=(($131+131)|0); //@line 325 "players.cpp"
 HEAP8[($132)]=0; //@line 325 "players.cpp"
 var $133=$2; //@line 327 "players.cpp"
 var $134=(($133)|0); //@line 327 "players.cpp"
 var $135=$134; //@line 327 "players.cpp"
 var $136=(($135+92)|0); //@line 327 "players.cpp"
 HEAP32[(($136)>>2)]=0; //@line 327 "players.cpp"
 var $137=$2; //@line 329 "players.cpp"
 var $138=(($137)|0); //@line 329 "players.cpp"
 var $139=$138; //@line 329 "players.cpp"
 var $140=__Z12getUnitFrameP17genericUnitStruct($139); //@line 329 "players.cpp"
 $myUnitFrame=$140; //@line 329 "players.cpp"
 label=19;break; //@line 330 "players.cpp"
 case 19: 
 label=20;break; //@line 332 "players.cpp"
 case 20: 
 label=21;break; //@line 333 "players.cpp"
 case 21: 
 var $144=$2; //@line 335 "players.cpp"
 var $145=(($144)|0); //@line 335 "players.cpp"
 var $146=(($145+232)|0); //@line 335 "players.cpp"
 var $147=HEAP32[(($146)>>2)]; //@line 335 "players.cpp"
 var $148=($147|0)>0; //@line 335 "players.cpp"
 if($148){label=22;break;}else{label=23;break;} //@line 335 "players.cpp"
 case 22: 
 var $150=$2; //@line 336 "players.cpp"
 var $151=(($150)|0); //@line 336 "players.cpp"
 var $152=(($151+232)|0); //@line 336 "players.cpp"
 var $153=HEAP32[(($152)>>2)]; //@line 336 "players.cpp"
 var $154=((($153)-(1))|0); //@line 336 "players.cpp"
 HEAP32[(($152)>>2)]=$154; //@line 336 "players.cpp"
 label=23;break; //@line 336 "players.cpp"
 case 23: 
 var $156=$2; //@line 345 "players.cpp"
 var $157=(($156)|0); //@line 345 "players.cpp"
 var $158=$157; //@line 345 "players.cpp"
 var $159=(($158+92)|0); //@line 345 "players.cpp"
 var $160=HEAP32[(($159)>>2)]; //@line 345 "players.cpp"
 var $161=$myUnitFrame; //@line 345 "players.cpp"
 var $162=(($161+68)|0); //@line 345 "players.cpp"
 var $163=HEAP32[(($162)>>2)]; //@line 345 "players.cpp"
 var $164=((($163)-(1))|0); //@line 345 "players.cpp"
 var $165=($160|0)==($164|0); //@line 345 "players.cpp"
 if($165){label=24;break;}else{label=27;break;} //@line 345 "players.cpp"
 case 24: 
 var $167=$myUnitFrame; //@line 345 "players.cpp"
 var $168=(($167+72)|0); //@line 345 "players.cpp"
 var $169=HEAP32[(($168)>>2)]; //@line 345 "players.cpp"
 var $170=($169|0)!=0; //@line 345 "players.cpp"
 if($170){label=25;break;}else{label=27;break;} //@line 345 "players.cpp"
 case 25: 
 var $172=$myUnitFrame; //@line 348 "players.cpp"
 var $173=(($172+72)|0); //@line 348 "players.cpp"
 var $174=HEAP32[(($173)>>2)]; //@line 348 "players.cpp"
 var $175=_strcmp(8608,$174); //@line 348 "players.cpp"
 var $176=($175|0)==0; //@line 348 "players.cpp"
 if($176){label=26;break;}else{label=27;break;} //@line 348 "players.cpp"
 case 26: 
 var $178=$2; //@line 352 "players.cpp"
 var $179=(($178)|0); //@line 352 "players.cpp"
 var $180=(($179+232)|0); //@line 352 "players.cpp"
 HEAP32[(($180)>>2)]=0; //@line 352 "players.cpp"
 label=27;break; //@line 353 "players.cpp"
 case 27: 
 var $182=$2; //@line 357 "players.cpp"
 var $183=(($182)|0); //@line 357 "players.cpp"
 var $184=$183; //@line 357 "players.cpp"
 var $185=(($184+92)|0); //@line 357 "players.cpp"
 var $186=HEAP32[(($185)>>2)]; //@line 357 "players.cpp"
 var $187=$myUnitFrame; //@line 357 "players.cpp"
 var $188=(($187+68)|0); //@line 357 "players.cpp"
 var $189=HEAP32[(($188)>>2)]; //@line 357 "players.cpp"
 var $190=((($189)-(1))|0); //@line 357 "players.cpp"
 var $191=($186|0)==($190|0); //@line 357 "players.cpp"
 if($191){label=28;break;}else{label=33;break;} //@line 357 "players.cpp"
 case 28: 
 var $193=$myUnitFrame; //@line 357 "players.cpp"
 var $194=(($193+72)|0); //@line 357 "players.cpp"
 var $195=HEAP32[(($194)>>2)]; //@line 357 "players.cpp"
 var $196=($195|0)!=0; //@line 357 "players.cpp"
 if($196){label=29;break;}else{label=33;break;} //@line 357 "players.cpp"
 case 29: 
 var $198=$myUnitFrame; //@line 360 "players.cpp"
 var $199=(($198+72)|0); //@line 360 "players.cpp"
 var $200=HEAP32[(($199)>>2)]; //@line 360 "players.cpp"
 var $201=_strcmp(6712,$200); //@line 360 "players.cpp"
 var $202=($201|0)==0; //@line 360 "players.cpp"
 if($202){label=30;break;}else{label=33;break;} //@line 360 "players.cpp"
 case 30: 
 var $204=$2; //@line 364 "players.cpp"
 var $205=__Z16playerDropBulletR20vectorListNodeStructI16playerUnitStructE($204); //@line 364 "players.cpp"
 if($205){label=32;break;}else{label=31;break;} //@line 364 "players.cpp"
 case 31: 
 $1=0; //@line 364 "players.cpp"
 label=106;break; //@line 364 "players.cpp"
 case 32: 
 label=33;break; //@line 365 "players.cpp"
 case 33: 
 var $209=$2; //@line 369 "players.cpp"
 var $210=(($209)|0); //@line 369 "players.cpp"
 var $211=$210; //@line 369 "players.cpp"
 var $212=(($211+156)|0); //@line 369 "players.cpp"
 var $213=HEAP8[($212)]; //@line 369 "players.cpp"
 var $214=(($213)&1); //@line 369 "players.cpp"
 if($214){label=34;break;}else{label=40;break;} //@line 369 "players.cpp"
 case 34: 
 var $216=$2; //@line 370 "players.cpp"
 var $217=(($216)|0); //@line 370 "players.cpp"
 var $218=$217; //@line 370 "players.cpp"
 var $219=__Z23unintelligentLinealMoveP17genericUnitStruct($218); //@line 370 "players.cpp"
 if($219){label=36;break;}else{label=35;break;} //@line 370 "players.cpp"
 case 35: 
 $1=0; //@line 371 "players.cpp"
 label=106;break; //@line 371 "players.cpp"
 case 36: 
 var $222=$2; //@line 374 "players.cpp"
 var $223=(($222)|0); //@line 374 "players.cpp"
 var $224=$223; //@line 374 "players.cpp"
 var $225=(($224+156)|0); //@line 374 "players.cpp"
 var $226=HEAP8[($225)]; //@line 374 "players.cpp"
 var $227=(($226)&1); //@line 374 "players.cpp"
 if($227){label=39;break;}else{label=37;break;} //@line 374 "players.cpp"
 case 37: 
 var $229=$2; //@line 374 "players.cpp"
 var $230=(($229)|0); //@line 374 "players.cpp"
 var $231=(($230+225)|0); //@line 374 "players.cpp"
 var $232=HEAP8[($231)]; //@line 374 "players.cpp"
 var $233=(($232)&1); //@line 374 "players.cpp"
 if($233){label=38;break;}else{label=39;break;} //@line 374 "players.cpp"
 case 38: 
 var $235=$2; //@line 376 "players.cpp"
 var $236=(($235)|0); //@line 376 "players.cpp"
 var $237=(($236+225)|0); //@line 376 "players.cpp"
 HEAP8[($237)]=0; //@line 376 "players.cpp"
 label=39;break; //@line 380 "players.cpp"
 case 39: 
 label=77;break; //@line 381 "players.cpp"
 case 40: 
 var $240=$3; //@line 386 "players.cpp"
 var $241=$2; //@line 386 "players.cpp"
 var $242=(($241)|0); //@line 386 "players.cpp"
 var $243=(($242+180)|0); //@line 386 "players.cpp"
 var $244=HEAP32[(($243)>>2)]; //@line 386 "players.cpp"
 var $245=$2; //@line 386 "players.cpp"
 var $246=(($245)|0); //@line 386 "players.cpp"
 var $247=(($246+200)|0); //@line 386 "players.cpp"
 var $248=HEAP8[($247)]; //@line 386 "players.cpp"
 var $249=(($248)&1); //@line 386 "players.cpp"
 var $250=__Z18isPlayerKeyPressedPhib($240,$244,$249); //@line 386 "players.cpp"
 if($250){label=41;break;}else{label=45;break;} //@line 386 "players.cpp"
 case 41: 
 var $252=$2; //@line 390 "players.cpp"
 var $253=(($252)|0); //@line 390 "players.cpp"
 var $254=$253; //@line 390 "players.cpp"
 var $255=(($254+80)|0); //@line 390 "players.cpp"
 var $256=HEAPF64[(($255)>>3)]; //@line 390 "players.cpp"
 var $257=$2; //@line 390 "players.cpp"
 var $258=(($257)|0); //@line 390 "players.cpp"
 var $259=$258; //@line 390 "players.cpp"
 var $260=(($259+16)|0); //@line 390 "players.cpp"
 var $261=HEAPF64[(($260)>>3)]; //@line 390 "players.cpp"
 var $262=($261)-($256); //@line 390 "players.cpp"
 HEAPF64[(($260)>>3)]=$262; //@line 390 "players.cpp"
 var $263=$myUnitFrame; //@line 394 "players.cpp"
 var $264=(($263+76)|0); //@line 394 "players.cpp"
 var $265=HEAP32[(($264)>>2)]; //@line 394 "players.cpp"
 var $266=($265|0)!=0; //@line 394 "players.cpp"
 if($266){label=42;break;}else{label=44;break;} //@line 394 "players.cpp"
 case 42: 
 var $268=$myUnitFrame; //@line 395 "players.cpp"
 var $269=(($268+76)|0); //@line 395 "players.cpp"
 var $270=HEAP32[(($269)>>2)]; //@line 395 "players.cpp"
 var $271=_strcmp(5520,$270); //@line 395 "players.cpp"
 var $272=($271|0)==0; //@line 395 "players.cpp"
 if($272){label=43;break;}else{label=44;break;} //@line 395 "players.cpp"
 case 43: 
 var $274=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(4768,0); //@line 399 "players.cpp"
 var $275=$2; //@line 399 "players.cpp"
 var $276=(($275)|0); //@line 399 "players.cpp"
 var $277=$276; //@line 399 "players.cpp"
 var $278=(($277+88)|0); //@line 399 "players.cpp"
 HEAP32[(($278)>>2)]=$274; //@line 399 "players.cpp"
 var $279=$2; //@line 401 "players.cpp"
 var $280=(($279)|0); //@line 401 "players.cpp"
 var $281=$280; //@line 401 "players.cpp"
 var $282=(($281+92)|0); //@line 401 "players.cpp"
 HEAP32[(($282)>>2)]=0; //@line 401 "players.cpp"
 var $283=$2; //@line 403 "players.cpp"
 var $284=(($283)|0); //@line 403 "players.cpp"
 var $285=$284; //@line 403 "players.cpp"
 var $286=__Z12getUnitFrameP17genericUnitStruct($285); //@line 403 "players.cpp"
 $myUnitFrame=$286; //@line 403 "players.cpp"
 label=44;break; //@line 404 "players.cpp"
 case 44: 
 label=45;break; //@line 405 "players.cpp"
 case 45: 
 var $289=$3; //@line 407 "players.cpp"
 var $290=$2; //@line 407 "players.cpp"
 var $291=(($290)|0); //@line 407 "players.cpp"
 var $292=(($291+184)|0); //@line 407 "players.cpp"
 var $293=HEAP32[(($292)>>2)]; //@line 407 "players.cpp"
 var $294=$2; //@line 407 "players.cpp"
 var $295=(($294)|0); //@line 407 "players.cpp"
 var $296=(($295+200)|0); //@line 407 "players.cpp"
 var $297=HEAP8[($296)]; //@line 407 "players.cpp"
 var $298=(($297)&1); //@line 407 "players.cpp"
 var $299=__Z18isPlayerKeyPressedPhib($289,$293,$298); //@line 407 "players.cpp"
 if($299){label=46;break;}else{label=50;break;} //@line 407 "players.cpp"
 case 46: 
 var $301=$2; //@line 411 "players.cpp"
 var $302=(($301)|0); //@line 411 "players.cpp"
 var $303=$302; //@line 411 "players.cpp"
 var $304=(($303+80)|0); //@line 411 "players.cpp"
 var $305=HEAPF64[(($304)>>3)]; //@line 411 "players.cpp"
 var $306=$2; //@line 411 "players.cpp"
 var $307=(($306)|0); //@line 411 "players.cpp"
 var $308=$307; //@line 411 "players.cpp"
 var $309=(($308+16)|0); //@line 411 "players.cpp"
 var $310=HEAPF64[(($309)>>3)]; //@line 411 "players.cpp"
 var $311=($310)+($305); //@line 411 "players.cpp"
 HEAPF64[(($309)>>3)]=$311; //@line 411 "players.cpp"
 var $312=$myUnitFrame; //@line 415 "players.cpp"
 var $313=(($312+76)|0); //@line 415 "players.cpp"
 var $314=HEAP32[(($313)>>2)]; //@line 415 "players.cpp"
 var $315=($314|0)!=0; //@line 415 "players.cpp"
 if($315){label=47;break;}else{label=49;break;} //@line 415 "players.cpp"
 case 47: 
 var $317=$myUnitFrame; //@line 416 "players.cpp"
 var $318=(($317+76)|0); //@line 416 "players.cpp"
 var $319=HEAP32[(($318)>>2)]; //@line 416 "players.cpp"
 var $320=_strcmp(5520,$319); //@line 416 "players.cpp"
 var $321=($320|0)==0; //@line 416 "players.cpp"
 if($321){label=48;break;}else{label=49;break;} //@line 416 "players.cpp"
 case 48: 
 var $323=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(4032,0); //@line 420 "players.cpp"
 var $324=$2; //@line 420 "players.cpp"
 var $325=(($324)|0); //@line 420 "players.cpp"
 var $326=$325; //@line 420 "players.cpp"
 var $327=(($326+88)|0); //@line 420 "players.cpp"
 HEAP32[(($327)>>2)]=$323; //@line 420 "players.cpp"
 var $328=$2; //@line 422 "players.cpp"
 var $329=(($328)|0); //@line 422 "players.cpp"
 var $330=$329; //@line 422 "players.cpp"
 var $331=(($330+92)|0); //@line 422 "players.cpp"
 HEAP32[(($331)>>2)]=0; //@line 422 "players.cpp"
 var $332=$2; //@line 424 "players.cpp"
 var $333=(($332)|0); //@line 424 "players.cpp"
 var $334=$333; //@line 424 "players.cpp"
 var $335=__Z12getUnitFrameP17genericUnitStruct($334); //@line 424 "players.cpp"
 $myUnitFrame=$335; //@line 424 "players.cpp"
 label=49;break; //@line 425 "players.cpp"
 case 49: 
 label=50;break; //@line 426 "players.cpp"
 case 50: 
 var $338=$3; //@line 428 "players.cpp"
 var $339=$2; //@line 428 "players.cpp"
 var $340=(($339)|0); //@line 428 "players.cpp"
 var $341=(($340+188)|0); //@line 428 "players.cpp"
 var $342=HEAP32[(($341)>>2)]; //@line 428 "players.cpp"
 var $343=$2; //@line 428 "players.cpp"
 var $344=(($343)|0); //@line 428 "players.cpp"
 var $345=(($344+200)|0); //@line 428 "players.cpp"
 var $346=HEAP8[($345)]; //@line 428 "players.cpp"
 var $347=(($346)&1); //@line 428 "players.cpp"
 var $348=__Z18isPlayerKeyPressedPhib($338,$342,$347); //@line 428 "players.cpp"
 if($348){label=51;break;}else{label=52;break;} //@line 428 "players.cpp"
 case 51: 
 var $350=$2; //@line 430 "players.cpp"
 var $351=(($350)|0); //@line 430 "players.cpp"
 var $352=$351; //@line 430 "players.cpp"
 var $353=(($352+80)|0); //@line 430 "players.cpp"
 var $354=HEAPF64[(($353)>>3)]; //@line 430 "players.cpp"
 var $355=$2; //@line 430 "players.cpp"
 var $356=(($355)|0); //@line 430 "players.cpp"
 var $357=$356; //@line 430 "players.cpp"
 var $358=(($357+8)|0); //@line 430 "players.cpp"
 var $359=HEAPF64[(($358)>>3)]; //@line 430 "players.cpp"
 var $360=($359)-($354); //@line 430 "players.cpp"
 HEAPF64[(($358)>>3)]=$360; //@line 430 "players.cpp"
 label=52;break; //@line 430 "players.cpp"
 case 52: 
 var $362=$3; //@line 432 "players.cpp"
 var $363=$2; //@line 432 "players.cpp"
 var $364=(($363)|0); //@line 432 "players.cpp"
 var $365=(($364+192)|0); //@line 432 "players.cpp"
 var $366=HEAP32[(($365)>>2)]; //@line 432 "players.cpp"
 var $367=$2; //@line 432 "players.cpp"
 var $368=(($367)|0); //@line 432 "players.cpp"
 var $369=(($368+200)|0); //@line 432 "players.cpp"
 var $370=HEAP8[($369)]; //@line 432 "players.cpp"
 var $371=(($370)&1); //@line 432 "players.cpp"
 var $372=__Z18isPlayerKeyPressedPhib($362,$366,$371); //@line 432 "players.cpp"
 if($372){label=53;break;}else{label=54;break;} //@line 432 "players.cpp"
 case 53: 
 var $374=$2; //@line 434 "players.cpp"
 var $375=(($374)|0); //@line 434 "players.cpp"
 var $376=$375; //@line 434 "players.cpp"
 var $377=(($376+80)|0); //@line 434 "players.cpp"
 var $378=HEAPF64[(($377)>>3)]; //@line 434 "players.cpp"
 var $379=$2; //@line 434 "players.cpp"
 var $380=(($379)|0); //@line 434 "players.cpp"
 var $381=$380; //@line 434 "players.cpp"
 var $382=(($381+8)|0); //@line 434 "players.cpp"
 var $383=HEAPF64[(($382)>>3)]; //@line 434 "players.cpp"
 var $384=($383)+($378); //@line 434 "players.cpp"
 HEAPF64[(($382)>>3)]=$384; //@line 434 "players.cpp"
 label=54;break; //@line 434 "players.cpp"
 case 54: 
 var $386=$2; //@line 439 "players.cpp"
 var $387=(($386)|0); //@line 439 "players.cpp"
 var $388=$387; //@line 439 "players.cpp"
 var $389=(($388+16)|0); //@line 439 "players.cpp"
 var $390=HEAPF64[(($389)>>3)]; //@line 439 "players.cpp"
 var $391=$myUnitFrame; //@line 439 "players.cpp"
 var $392=(($391+44)|0); //@line 439 "players.cpp"
 var $393=HEAP32[(($392)>>2)]; //@line 439 "players.cpp"
 var $394=($393|0); //@line 439 "players.cpp"
 var $395=($390)-($394); //@line 439 "players.cpp"
 var $396=$myUnitFrame; //@line 439 "players.cpp"
 var $397=(($396+28)|0); //@line 439 "players.cpp"
 var $398=HEAP32[(($397)>>2)]; //@line 439 "players.cpp"
 var $399=($398|0); //@line 439 "players.cpp"
 var $400=($395)+($399); //@line 439 "players.cpp"
 var $401=HEAPF64[((19568)>>3)]; //@line 439 "players.cpp"
 var $402=$400<$401; //@line 439 "players.cpp"
 if($402){label=55;break;}else{label=56;break;} //@line 439 "players.cpp"
 case 55: 
 var $404=$myUnitFrame; //@line 442 "players.cpp"
 var $405=(($404+44)|0); //@line 442 "players.cpp"
 var $406=HEAP32[(($405)>>2)]; //@line 442 "players.cpp"
 var $407=$myUnitFrame; //@line 442 "players.cpp"
 var $408=(($407+28)|0); //@line 442 "players.cpp"
 var $409=HEAP32[(($408)>>2)]; //@line 442 "players.cpp"
 var $410=((($406)-($409))|0); //@line 442 "players.cpp"
 var $411=($410|0); //@line 442 "players.cpp"
 var $412=HEAPF64[((19568)>>3)]; //@line 442 "players.cpp"
 var $413=($411)+($412); //@line 442 "players.cpp"
 var $414=$2; //@line 442 "players.cpp"
 var $415=(($414)|0); //@line 442 "players.cpp"
 var $416=$415; //@line 442 "players.cpp"
 var $417=(($416+16)|0); //@line 442 "players.cpp"
 HEAPF64[(($417)>>3)]=$413; //@line 442 "players.cpp"
 label=56;break; //@line 444 "players.cpp"
 case 56: 
 var $419=$2; //@line 446 "players.cpp"
 var $420=(($419)|0); //@line 446 "players.cpp"
 var $421=$420; //@line 446 "players.cpp"
 var $422=(($421+8)|0); //@line 446 "players.cpp"
 var $423=HEAPF64[(($422)>>3)]; //@line 446 "players.cpp"
 var $424=$myUnitFrame; //@line 446 "players.cpp"
 var $425=(($424+40)|0); //@line 446 "players.cpp"
 var $426=HEAP32[(($425)>>2)]; //@line 446 "players.cpp"
 var $427=($426|0); //@line 446 "players.cpp"
 var $428=($423)-($427); //@line 446 "players.cpp"
 var $429=$myUnitFrame; //@line 446 "players.cpp"
 var $430=(($429+24)|0); //@line 446 "players.cpp"
 var $431=HEAP32[(($430)>>2)]; //@line 446 "players.cpp"
 var $432=($431|0); //@line 446 "players.cpp"
 var $433=($428)+($432); //@line 446 "players.cpp"
 var $434=HEAPF64[((19560)>>3)]; //@line 446 "players.cpp"
 var $435=$433<$434; //@line 446 "players.cpp"
 if($435){label=57;break;}else{label=58;break;} //@line 446 "players.cpp"
 case 57: 
 var $437=$myUnitFrame; //@line 449 "players.cpp"
 var $438=(($437+40)|0); //@line 449 "players.cpp"
 var $439=HEAP32[(($438)>>2)]; //@line 449 "players.cpp"
 var $440=$myUnitFrame; //@line 449 "players.cpp"
 var $441=(($440+24)|0); //@line 449 "players.cpp"
 var $442=HEAP32[(($441)>>2)]; //@line 449 "players.cpp"
 var $443=((($439)-($442))|0); //@line 449 "players.cpp"
 var $444=($443|0); //@line 449 "players.cpp"
 var $445=HEAPF64[((19560)>>3)]; //@line 449 "players.cpp"
 var $446=($444)+($445); //@line 449 "players.cpp"
 var $447=$2; //@line 449 "players.cpp"
 var $448=(($447)|0); //@line 449 "players.cpp"
 var $449=$448; //@line 449 "players.cpp"
 var $450=(($449+8)|0); //@line 449 "players.cpp"
 HEAPF64[(($450)>>3)]=$446; //@line 449 "players.cpp"
 label=58;break; //@line 451 "players.cpp"
 case 58: 
 var $452=$2; //@line 453 "players.cpp"
 var $453=(($452)|0); //@line 453 "players.cpp"
 var $454=$453; //@line 453 "players.cpp"
 var $455=(($454+16)|0); //@line 453 "players.cpp"
 var $456=HEAPF64[(($455)>>3)]; //@line 453 "players.cpp"
 var $457=$myUnitFrame; //@line 453 "players.cpp"
 var $458=(($457+36)|0); //@line 453 "players.cpp"
 var $459=HEAP32[(($458)>>2)]; //@line 453 "players.cpp"
 var $460=($459|0); //@line 453 "players.cpp"
 var $461=($456)+($460); //@line 453 "players.cpp"
 var $462=$myUnitFrame; //@line 453 "players.cpp"
 var $463=(($462+28)|0); //@line 453 "players.cpp"
 var $464=HEAP32[(($463)>>2)]; //@line 453 "players.cpp"
 var $465=($464|0); //@line 453 "players.cpp"
 var $466=($461)+($465); //@line 453 "players.cpp"
 var $467=$myUnitFrame; //@line 453 "players.cpp"
 var $468=(($467+44)|0); //@line 453 "players.cpp"
 var $469=HEAP32[(($468)>>2)]; //@line 453 "players.cpp"
 var $470=($469|0); //@line 453 "players.cpp"
 var $471=($466)-($470); //@line 453 "players.cpp"
 var $472=HEAPF64[((19568)>>3)]; //@line 453 "players.cpp"
 var $473=HEAP32[((19580)>>2)]; //@line 453 "players.cpp"
 var $474=($473>>>0); //@line 453 "players.cpp"
 var $475=($472)+($474); //@line 453 "players.cpp"
 var $476=$471>=$475; //@line 453 "players.cpp"
 if($476){label=59;break;}else{label=60;break;} //@line 453 "players.cpp"
 case 59: 
 var $478=HEAPF64[((19568)>>3)]; //@line 457 "players.cpp"
 var $479=HEAP32[((19580)>>2)]; //@line 457 "players.cpp"
 var $480=($479>>>0); //@line 457 "players.cpp"
 var $481=($478)+($480); //@line 457 "players.cpp"
 var $482=$myUnitFrame; //@line 457 "players.cpp"
 var $483=(($482+36)|0); //@line 457 "players.cpp"
 var $484=HEAP32[(($483)>>2)]; //@line 457 "players.cpp"
 var $485=($484|0); //@line 457 "players.cpp"
 var $486=($481)-($485); //@line 457 "players.cpp"
 var $487=$myUnitFrame; //@line 457 "players.cpp"
 var $488=(($487+28)|0); //@line 457 "players.cpp"
 var $489=HEAP32[(($488)>>2)]; //@line 457 "players.cpp"
 var $490=($489|0); //@line 457 "players.cpp"
 var $491=($486)-($490); //@line 457 "players.cpp"
 var $492=$myUnitFrame; //@line 457 "players.cpp"
 var $493=(($492+44)|0); //@line 457 "players.cpp"
 var $494=HEAP32[(($493)>>2)]; //@line 457 "players.cpp"
 var $495=($494|0); //@line 457 "players.cpp"
 var $496=($491)+($495); //@line 457 "players.cpp"
 var $497=$2; //@line 457 "players.cpp"
 var $498=(($497)|0); //@line 457 "players.cpp"
 var $499=$498; //@line 457 "players.cpp"
 var $500=(($499+16)|0); //@line 457 "players.cpp"
 HEAPF64[(($500)>>3)]=$496; //@line 457 "players.cpp"
 label=60;break; //@line 459 "players.cpp"
 case 60: 
 var $502=$2; //@line 461 "players.cpp"
 var $503=(($502)|0); //@line 461 "players.cpp"
 var $504=$503; //@line 461 "players.cpp"
 var $505=(($504+8)|0); //@line 461 "players.cpp"
 var $506=HEAPF64[(($505)>>3)]; //@line 461 "players.cpp"
 var $507=$myUnitFrame; //@line 461 "players.cpp"
 var $508=(($507+32)|0); //@line 461 "players.cpp"
 var $509=HEAP32[(($508)>>2)]; //@line 461 "players.cpp"
 var $510=($509|0); //@line 461 "players.cpp"
 var $511=($506)+($510); //@line 461 "players.cpp"
 var $512=$myUnitFrame; //@line 461 "players.cpp"
 var $513=(($512+24)|0); //@line 461 "players.cpp"
 var $514=HEAP32[(($513)>>2)]; //@line 461 "players.cpp"
 var $515=($514|0); //@line 461 "players.cpp"
 var $516=($511)+($515); //@line 461 "players.cpp"
 var $517=$myUnitFrame; //@line 461 "players.cpp"
 var $518=(($517+40)|0); //@line 461 "players.cpp"
 var $519=HEAP32[(($518)>>2)]; //@line 461 "players.cpp"
 var $520=($519|0); //@line 461 "players.cpp"
 var $521=($516)-($520); //@line 461 "players.cpp"
 var $522=HEAPF64[((19560)>>3)]; //@line 461 "players.cpp"
 var $523=HEAP32[((19576)>>2)]; //@line 461 "players.cpp"
 var $524=($523>>>0); //@line 461 "players.cpp"
 var $525=($522)+($524); //@line 461 "players.cpp"
 var $526=$521>=$525; //@line 461 "players.cpp"
 if($526){label=61;break;}else{label=62;break;} //@line 461 "players.cpp"
 case 61: 
 var $528=HEAPF64[((19560)>>3)]; //@line 465 "players.cpp"
 var $529=HEAP32[((19576)>>2)]; //@line 465 "players.cpp"
 var $530=($529>>>0); //@line 465 "players.cpp"
 var $531=($528)+($530); //@line 465 "players.cpp"
 var $532=$myUnitFrame; //@line 465 "players.cpp"
 var $533=(($532+32)|0); //@line 465 "players.cpp"
 var $534=HEAP32[(($533)>>2)]; //@line 465 "players.cpp"
 var $535=($534|0); //@line 465 "players.cpp"
 var $536=($531)-($535); //@line 465 "players.cpp"
 var $537=$myUnitFrame; //@line 465 "players.cpp"
 var $538=(($537+24)|0); //@line 465 "players.cpp"
 var $539=HEAP32[(($538)>>2)]; //@line 465 "players.cpp"
 var $540=($539|0); //@line 465 "players.cpp"
 var $541=($536)-($540); //@line 465 "players.cpp"
 var $542=$myUnitFrame; //@line 465 "players.cpp"
 var $543=(($542+40)|0); //@line 465 "players.cpp"
 var $544=HEAP32[(($543)>>2)]; //@line 465 "players.cpp"
 var $545=($544|0); //@line 465 "players.cpp"
 var $546=($541)+($545); //@line 465 "players.cpp"
 var $547=$2; //@line 465 "players.cpp"
 var $548=(($547)|0); //@line 465 "players.cpp"
 var $549=$548; //@line 465 "players.cpp"
 var $550=(($549+8)|0); //@line 465 "players.cpp"
 HEAPF64[(($550)>>3)]=$546; //@line 465 "players.cpp"
 label=62;break; //@line 467 "players.cpp"
 case 62: 
 var $552=$2; //@line 471 "players.cpp"
 var $553=(($552)|0); //@line 471 "players.cpp"
 var $554=$553; //@line 471 "players.cpp"
 var $555=(($554+16)|0); //@line 471 "players.cpp"
 var $556=HEAPF64[(($555)>>3)]; //@line 471 "players.cpp"
 var $557=$myUnitFrame; //@line 471 "players.cpp"
 var $558=(($557+36)|0); //@line 471 "players.cpp"
 var $559=HEAP32[(($558)>>2)]; //@line 471 "players.cpp"
 var $560=($559|0); //@line 471 "players.cpp"
 var $561=($556)+($560); //@line 471 "players.cpp"
 var $562=$myUnitFrame; //@line 471 "players.cpp"
 var $563=(($562+28)|0); //@line 471 "players.cpp"
 var $564=HEAP32[(($563)>>2)]; //@line 471 "players.cpp"
 var $565=($564|0); //@line 471 "players.cpp"
 var $566=($561)+($565); //@line 471 "players.cpp"
 var $567=$myUnitFrame; //@line 471 "players.cpp"
 var $568=(($567+44)|0); //@line 471 "players.cpp"
 var $569=HEAP32[(($568)>>2)]; //@line 471 "players.cpp"
 var $570=($569|0); //@line 471 "players.cpp"
 var $571=($566)-($570); //@line 471 "players.cpp"
 var $572=HEAPF64[((19568)>>3)]; //@line 471 "players.cpp"
 var $573=HEAP32[((19648)>>2)]; //@line 471 "players.cpp"
 var $574=($573|0); //@line 471 "players.cpp"
 var $575=($572)+($574); //@line 471 "players.cpp"
 var $576=$571>=$575; //@line 471 "players.cpp"
 if($576){label=63;break;}else{label=64;break;} //@line 471 "players.cpp"
 case 63: 
 var $578=HEAPF64[((19568)>>3)]; //@line 475 "players.cpp"
 var $579=HEAP32[((19648)>>2)]; //@line 475 "players.cpp"
 var $580=($579|0); //@line 475 "players.cpp"
 var $581=($578)+($580); //@line 475 "players.cpp"
 var $582=$myUnitFrame; //@line 475 "players.cpp"
 var $583=(($582+36)|0); //@line 475 "players.cpp"
 var $584=HEAP32[(($583)>>2)]; //@line 475 "players.cpp"
 var $585=($584|0); //@line 475 "players.cpp"
 var $586=($581)-($585); //@line 475 "players.cpp"
 var $587=$myUnitFrame; //@line 475 "players.cpp"
 var $588=(($587+28)|0); //@line 475 "players.cpp"
 var $589=HEAP32[(($588)>>2)]; //@line 475 "players.cpp"
 var $590=($589|0); //@line 475 "players.cpp"
 var $591=($586)-($590); //@line 475 "players.cpp"
 var $592=$myUnitFrame; //@line 475 "players.cpp"
 var $593=(($592+44)|0); //@line 475 "players.cpp"
 var $594=HEAP32[(($593)>>2)]; //@line 475 "players.cpp"
 var $595=($594|0); //@line 475 "players.cpp"
 var $596=($591)+($595); //@line 475 "players.cpp"
 var $597=$2; //@line 475 "players.cpp"
 var $598=(($597)|0); //@line 475 "players.cpp"
 var $599=$598; //@line 475 "players.cpp"
 var $600=(($599+16)|0); //@line 475 "players.cpp"
 HEAPF64[(($600)>>3)]=$596; //@line 475 "players.cpp"
 label=64;break; //@line 477 "players.cpp"
 case 64: 
 var $602=$2; //@line 479 "players.cpp"
 var $603=(($602)|0); //@line 479 "players.cpp"
 var $604=$603; //@line 479 "players.cpp"
 var $605=(($604+8)|0); //@line 479 "players.cpp"
 var $606=HEAPF64[(($605)>>3)]; //@line 479 "players.cpp"
 var $607=$myUnitFrame; //@line 479 "players.cpp"
 var $608=(($607+40)|0); //@line 479 "players.cpp"
 var $609=HEAP32[(($608)>>2)]; //@line 479 "players.cpp"
 var $610=($609|0); //@line 479 "players.cpp"
 var $611=($606)-($610); //@line 479 "players.cpp"
 var $612=$myUnitFrame; //@line 479 "players.cpp"
 var $613=(($612+24)|0); //@line 479 "players.cpp"
 var $614=HEAP32[(($613)>>2)]; //@line 479 "players.cpp"
 var $615=($614|0); //@line 479 "players.cpp"
 var $616=($611)+($615); //@line 479 "players.cpp"
 var $617=$2; //@line 480 "players.cpp"
 var $618=(($617)|0); //@line 480 "players.cpp"
 var $619=$618; //@line 480 "players.cpp"
 var $620=(($619+16)|0); //@line 480 "players.cpp"
 var $621=HEAPF64[(($620)>>3)]; //@line 480 "players.cpp"
 var $622=(($621)&-1); //@line 480 "players.cpp"
 var $623=__Z11getLeftWalli($622); //@line 480 "players.cpp"
 var $624=($623|0); //@line 480 "players.cpp"
 var $625=$616<$624; //@line 480 "players.cpp"
 if($625){label=65;break;}else{label=66;break;} //@line 480 "players.cpp"
 case 65: 
 var $627=$myUnitFrame; //@line 482 "players.cpp"
 var $628=(($627+40)|0); //@line 482 "players.cpp"
 var $629=HEAP32[(($628)>>2)]; //@line 482 "players.cpp"
 var $630=$myUnitFrame; //@line 482 "players.cpp"
 var $631=(($630+24)|0); //@line 482 "players.cpp"
 var $632=HEAP32[(($631)>>2)]; //@line 482 "players.cpp"
 var $633=((($629)-($632))|0); //@line 482 "players.cpp"
 var $634=$2; //@line 483 "players.cpp"
 var $635=(($634)|0); //@line 483 "players.cpp"
 var $636=$635; //@line 483 "players.cpp"
 var $637=(($636+16)|0); //@line 483 "players.cpp"
 var $638=HEAPF64[(($637)>>3)]; //@line 483 "players.cpp"
 var $639=(($638)&-1); //@line 483 "players.cpp"
 var $640=__Z11getLeftWalli($639); //@line 483 "players.cpp"
 var $641=((($633)+($640))|0); //@line 483 "players.cpp"
 var $642=($641|0); //@line 483 "players.cpp"
 var $643=$2; //@line 483 "players.cpp"
 var $644=(($643)|0); //@line 483 "players.cpp"
 var $645=$644; //@line 483 "players.cpp"
 var $646=(($645+8)|0); //@line 483 "players.cpp"
 HEAPF64[(($646)>>3)]=$642; //@line 483 "players.cpp"
 label=66;break; //@line 484 "players.cpp"
 case 66: 
 var $648=$2; //@line 486 "players.cpp"
 var $649=(($648)|0); //@line 486 "players.cpp"
 var $650=$649; //@line 486 "players.cpp"
 var $651=(($650+8)|0); //@line 486 "players.cpp"
 var $652=HEAPF64[(($651)>>3)]; //@line 486 "players.cpp"
 var $653=$myUnitFrame; //@line 486 "players.cpp"
 var $654=(($653+32)|0); //@line 486 "players.cpp"
 var $655=HEAP32[(($654)>>2)]; //@line 486 "players.cpp"
 var $656=($655|0); //@line 486 "players.cpp"
 var $657=($652)+($656); //@line 486 "players.cpp"
 var $658=$myUnitFrame; //@line 486 "players.cpp"
 var $659=(($658+24)|0); //@line 486 "players.cpp"
 var $660=HEAP32[(($659)>>2)]; //@line 486 "players.cpp"
 var $661=($660|0); //@line 486 "players.cpp"
 var $662=($657)+($661); //@line 486 "players.cpp"
 var $663=$myUnitFrame; //@line 486 "players.cpp"
 var $664=(($663+40)|0); //@line 486 "players.cpp"
 var $665=HEAP32[(($664)>>2)]; //@line 486 "players.cpp"
 var $666=($665|0); //@line 486 "players.cpp"
 var $667=($662)-($666); //@line 486 "players.cpp"
 var $668=$2; //@line 487 "players.cpp"
 var $669=(($668)|0); //@line 487 "players.cpp"
 var $670=$669; //@line 487 "players.cpp"
 var $671=(($670+16)|0); //@line 487 "players.cpp"
 var $672=HEAPF64[(($671)>>3)]; //@line 487 "players.cpp"
 var $673=(($672)&-1); //@line 487 "players.cpp"
 var $674=__Z12getRightWalli($673); //@line 487 "players.cpp"
 var $675=($674|0); //@line 487 "players.cpp"
 var $676=$667>=$675; //@line 487 "players.cpp"
 if($676){label=67;break;}else{label=68;break;} //@line 487 "players.cpp"
 case 67: 
 var $678=$2; //@line 489 "players.cpp"
 var $679=(($678)|0); //@line 489 "players.cpp"
 var $680=$679; //@line 489 "players.cpp"
 var $681=(($680+16)|0); //@line 489 "players.cpp"
 var $682=HEAPF64[(($681)>>3)]; //@line 489 "players.cpp"
 var $683=(($682)&-1); //@line 489 "players.cpp"
 var $684=__Z12getRightWalli($683); //@line 489 "players.cpp"
 var $685=$myUnitFrame; //@line 489 "players.cpp"
 var $686=(($685+32)|0); //@line 489 "players.cpp"
 var $687=HEAP32[(($686)>>2)]; //@line 489 "players.cpp"
 var $688=((($684)-($687))|0); //@line 489 "players.cpp"
 var $689=$myUnitFrame; //@line 489 "players.cpp"
 var $690=(($689+24)|0); //@line 489 "players.cpp"
 var $691=HEAP32[(($690)>>2)]; //@line 489 "players.cpp"
 var $692=((($688)-($691))|0); //@line 489 "players.cpp"
 var $693=$myUnitFrame; //@line 489 "players.cpp"
 var $694=(($693+40)|0); //@line 489 "players.cpp"
 var $695=HEAP32[(($694)>>2)]; //@line 489 "players.cpp"
 var $696=((($692)+($695))|0); //@line 489 "players.cpp"
 var $697=($696|0); //@line 489 "players.cpp"
 var $698=$2; //@line 489 "players.cpp"
 var $699=(($698)|0); //@line 489 "players.cpp"
 var $700=$699; //@line 489 "players.cpp"
 var $701=(($700+8)|0); //@line 489 "players.cpp"
 HEAPF64[(($701)>>3)]=$697; //@line 489 "players.cpp"
 label=68;break; //@line 491 "players.cpp"
 case 68: 
 var $703=$2; //@line 496 "players.cpp"
 var $704=(($703)|0); //@line 496 "players.cpp"
 var $705=$704; //@line 496 "players.cpp"
 var $706=(($705+8)|0); //@line 496 "players.cpp"
 var $707=HEAPF64[(($706)>>3)]; //@line 496 "players.cpp"
 var $708=$myUnitFrame; //@line 496 "players.cpp"
 var $709=(($708+40)|0); //@line 496 "players.cpp"
 var $710=HEAP32[(($709)>>2)]; //@line 496 "players.cpp"
 var $711=($710|0); //@line 496 "players.cpp"
 var $712=($707)-($711); //@line 496 "players.cpp"
 var $713=$myUnitFrame; //@line 496 "players.cpp"
 var $714=(($713+24)|0); //@line 496 "players.cpp"
 var $715=HEAP32[(($714)>>2)]; //@line 496 "players.cpp"
 var $716=($715|0); //@line 496 "players.cpp"
 var $717=($712)+($716); //@line 496 "players.cpp"
 var $718=$2; //@line 497 "players.cpp"
 var $719=(($718)|0); //@line 497 "players.cpp"
 var $720=$719; //@line 497 "players.cpp"
 var $721=(($720+16)|0); //@line 497 "players.cpp"
 var $722=HEAPF64[(($721)>>3)]; //@line 497 "players.cpp"
 var $723=(($722)&-1); //@line 497 "players.cpp"
 var $724=$myUnitFrame; //@line 497 "players.cpp"
 var $725=(($724+44)|0); //@line 497 "players.cpp"
 var $726=HEAP32[(($725)>>2)]; //@line 497 "players.cpp"
 var $727=((($723)-($726))|0); //@line 497 "players.cpp"
 var $728=$myUnitFrame; //@line 497 "players.cpp"
 var $729=(($728+28)|0); //@line 497 "players.cpp"
 var $730=HEAP32[(($729)>>2)]; //@line 497 "players.cpp"
 var $731=((($727)+($730))|0); //@line 497 "players.cpp"
 var $732=__Z11getLeftWalli($731); //@line 497 "players.cpp"
 var $733=($732|0); //@line 497 "players.cpp"
 var $734=$717<$733; //@line 497 "players.cpp"
 if($734){label=69;break;}else{label=70;break;} //@line 497 "players.cpp"
 case 69: 
 var $736=$myUnitFrame; //@line 500 "players.cpp"
 var $737=(($736+40)|0); //@line 500 "players.cpp"
 var $738=HEAP32[(($737)>>2)]; //@line 500 "players.cpp"
 var $739=$myUnitFrame; //@line 500 "players.cpp"
 var $740=(($739+24)|0); //@line 500 "players.cpp"
 var $741=HEAP32[(($740)>>2)]; //@line 500 "players.cpp"
 var $742=((($738)-($741))|0); //@line 500 "players.cpp"
 var $743=$2; //@line 501 "players.cpp"
 var $744=(($743)|0); //@line 501 "players.cpp"
 var $745=$744; //@line 501 "players.cpp"
 var $746=(($745+16)|0); //@line 501 "players.cpp"
 var $747=HEAPF64[(($746)>>3)]; //@line 501 "players.cpp"
 var $748=(($747)&-1); //@line 501 "players.cpp"
 var $749=$myUnitFrame; //@line 501 "players.cpp"
 var $750=(($749+44)|0); //@line 501 "players.cpp"
 var $751=HEAP32[(($750)>>2)]; //@line 501 "players.cpp"
 var $752=((($748)-($751))|0); //@line 501 "players.cpp"
 var $753=$myUnitFrame; //@line 501 "players.cpp"
 var $754=(($753+28)|0); //@line 501 "players.cpp"
 var $755=HEAP32[(($754)>>2)]; //@line 501 "players.cpp"
 var $756=((($752)+($755))|0); //@line 501 "players.cpp"
 var $757=__Z11getLeftWalli($756); //@line 501 "players.cpp"
 var $758=((($742)+($757))|0); //@line 501 "players.cpp"
 var $759=($758|0); //@line 501 "players.cpp"
 var $760=$2; //@line 501 "players.cpp"
 var $761=(($760)|0); //@line 501 "players.cpp"
 var $762=$761; //@line 501 "players.cpp"
 var $763=(($762+8)|0); //@line 501 "players.cpp"
 HEAPF64[(($763)>>3)]=$759; //@line 501 "players.cpp"
 label=70;break; //@line 503 "players.cpp"
 case 70: 
 var $765=$2; //@line 505 "players.cpp"
 var $766=(($765)|0); //@line 505 "players.cpp"
 var $767=$766; //@line 505 "players.cpp"
 var $768=(($767+8)|0); //@line 505 "players.cpp"
 var $769=HEAPF64[(($768)>>3)]; //@line 505 "players.cpp"
 var $770=$myUnitFrame; //@line 505 "players.cpp"
 var $771=(($770+32)|0); //@line 505 "players.cpp"
 var $772=HEAP32[(($771)>>2)]; //@line 505 "players.cpp"
 var $773=($772|0); //@line 505 "players.cpp"
 var $774=($769)+($773); //@line 505 "players.cpp"
 var $775=$myUnitFrame; //@line 505 "players.cpp"
 var $776=(($775+24)|0); //@line 505 "players.cpp"
 var $777=HEAP32[(($776)>>2)]; //@line 505 "players.cpp"
 var $778=($777|0); //@line 505 "players.cpp"
 var $779=($774)+($778); //@line 505 "players.cpp"
 var $780=$myUnitFrame; //@line 505 "players.cpp"
 var $781=(($780+40)|0); //@line 505 "players.cpp"
 var $782=HEAP32[(($781)>>2)]; //@line 505 "players.cpp"
 var $783=($782|0); //@line 505 "players.cpp"
 var $784=($779)-($783); //@line 505 "players.cpp"
 var $785=$2; //@line 507 "players.cpp"
 var $786=(($785)|0); //@line 507 "players.cpp"
 var $787=$786; //@line 507 "players.cpp"
 var $788=(($787+16)|0); //@line 507 "players.cpp"
 var $789=HEAPF64[(($788)>>3)]; //@line 507 "players.cpp"
 var $790=(($789)&-1); //@line 507 "players.cpp"
 var $791=$myUnitFrame; //@line 507 "players.cpp"
 var $792=(($791+44)|0); //@line 507 "players.cpp"
 var $793=HEAP32[(($792)>>2)]; //@line 507 "players.cpp"
 var $794=((($790)-($793))|0); //@line 507 "players.cpp"
 var $795=$myUnitFrame; //@line 507 "players.cpp"
 var $796=(($795+28)|0); //@line 507 "players.cpp"
 var $797=HEAP32[(($796)>>2)]; //@line 507 "players.cpp"
 var $798=((($794)+($797))|0); //@line 507 "players.cpp"
 var $799=__Z12getRightWalli($798); //@line 507 "players.cpp"
 var $800=($799|0); //@line 507 "players.cpp"
 var $801=$784>=$800; //@line 507 "players.cpp"
 if($801){label=71;break;}else{label=72;break;} //@line 507 "players.cpp"
 case 71: 
 var $803=$2; //@line 510 "players.cpp"
 var $804=(($803)|0); //@line 510 "players.cpp"
 var $805=$804; //@line 510 "players.cpp"
 var $806=(($805+16)|0); //@line 510 "players.cpp"
 var $807=HEAPF64[(($806)>>3)]; //@line 510 "players.cpp"
 var $808=(($807)&-1); //@line 510 "players.cpp"
 var $809=$myUnitFrame; //@line 510 "players.cpp"
 var $810=(($809+44)|0); //@line 510 "players.cpp"
 var $811=HEAP32[(($810)>>2)]; //@line 510 "players.cpp"
 var $812=((($808)-($811))|0); //@line 510 "players.cpp"
 var $813=$myUnitFrame; //@line 510 "players.cpp"
 var $814=(($813+28)|0); //@line 510 "players.cpp"
 var $815=HEAP32[(($814)>>2)]; //@line 510 "players.cpp"
 var $816=((($812)+($815))|0); //@line 510 "players.cpp"
 var $817=__Z12getRightWalli($816); //@line 510 "players.cpp"
 var $818=$myUnitFrame; //@line 510 "players.cpp"
 var $819=(($818+32)|0); //@line 510 "players.cpp"
 var $820=HEAP32[(($819)>>2)]; //@line 510 "players.cpp"
 var $821=((($817)-($820))|0); //@line 510 "players.cpp"
 var $822=$myUnitFrame; //@line 510 "players.cpp"
 var $823=(($822+24)|0); //@line 510 "players.cpp"
 var $824=HEAP32[(($823)>>2)]; //@line 510 "players.cpp"
 var $825=((($821)-($824))|0); //@line 510 "players.cpp"
 var $826=$myUnitFrame; //@line 510 "players.cpp"
 var $827=(($826+40)|0); //@line 510 "players.cpp"
 var $828=HEAP32[(($827)>>2)]; //@line 510 "players.cpp"
 var $829=((($825)+($828))|0); //@line 510 "players.cpp"
 var $830=($829|0); //@line 510 "players.cpp"
 var $831=$2; //@line 510 "players.cpp"
 var $832=(($831)|0); //@line 510 "players.cpp"
 var $833=$832; //@line 510 "players.cpp"
 var $834=(($833+8)|0); //@line 510 "players.cpp"
 HEAPF64[(($834)>>3)]=$830; //@line 510 "players.cpp"
 label=72;break; //@line 513 "players.cpp"
 case 72: 
 var $836=$2; //@line 515 "players.cpp"
 var $837=(($836)|0); //@line 515 "players.cpp"
 var $838=$837; //@line 515 "players.cpp"
 var $839=(($838+8)|0); //@line 515 "players.cpp"
 var $840=HEAPF64[(($839)>>3)]; //@line 515 "players.cpp"
 var $841=$myUnitFrame; //@line 515 "players.cpp"
 var $842=(($841+40)|0); //@line 515 "players.cpp"
 var $843=HEAP32[(($842)>>2)]; //@line 515 "players.cpp"
 var $844=($843|0); //@line 515 "players.cpp"
 var $845=($840)-($844); //@line 515 "players.cpp"
 var $846=$myUnitFrame; //@line 515 "players.cpp"
 var $847=(($846+24)|0); //@line 515 "players.cpp"
 var $848=HEAP32[(($847)>>2)]; //@line 515 "players.cpp"
 var $849=($848|0); //@line 515 "players.cpp"
 var $850=($845)+($849); //@line 515 "players.cpp"
 var $851=$2; //@line 516 "players.cpp"
 var $852=(($851)|0); //@line 516 "players.cpp"
 var $853=$852; //@line 516 "players.cpp"
 var $854=(($853+16)|0); //@line 516 "players.cpp"
 var $855=HEAPF64[(($854)>>3)]; //@line 516 "players.cpp"
 var $856=(($855)&-1); //@line 516 "players.cpp"
 var $857=$myUnitFrame; //@line 516 "players.cpp"
 var $858=(($857+44)|0); //@line 516 "players.cpp"
 var $859=HEAP32[(($858)>>2)]; //@line 516 "players.cpp"
 var $860=((($856)-($859))|0); //@line 516 "players.cpp"
 var $861=$myUnitFrame; //@line 516 "players.cpp"
 var $862=(($861+28)|0); //@line 516 "players.cpp"
 var $863=HEAP32[(($862)>>2)]; //@line 516 "players.cpp"
 var $864=((($860)+($863))|0); //@line 516 "players.cpp"
 var $865=$myUnitFrame; //@line 516 "players.cpp"
 var $866=(($865+36)|0); //@line 516 "players.cpp"
 var $867=HEAP32[(($866)>>2)]; //@line 516 "players.cpp"
 var $868=((($864)+($867))|0); //@line 516 "players.cpp"
 var $869=__Z11getLeftWalli($868); //@line 516 "players.cpp"
 var $870=($869|0); //@line 516 "players.cpp"
 var $871=$850<$870; //@line 516 "players.cpp"
 if($871){label=73;break;}else{label=74;break;} //@line 516 "players.cpp"
 case 73: 
 var $873=$myUnitFrame; //@line 521 "players.cpp"
 var $874=(($873+40)|0); //@line 521 "players.cpp"
 var $875=HEAP32[(($874)>>2)]; //@line 521 "players.cpp"
 var $876=$myUnitFrame; //@line 521 "players.cpp"
 var $877=(($876+24)|0); //@line 521 "players.cpp"
 var $878=HEAP32[(($877)>>2)]; //@line 521 "players.cpp"
 var $879=((($875)-($878))|0); //@line 521 "players.cpp"
 var $880=$2; //@line 522 "players.cpp"
 var $881=(($880)|0); //@line 522 "players.cpp"
 var $882=$881; //@line 522 "players.cpp"
 var $883=(($882+16)|0); //@line 522 "players.cpp"
 var $884=HEAPF64[(($883)>>3)]; //@line 522 "players.cpp"
 var $885=(($884)&-1); //@line 522 "players.cpp"
 var $886=$myUnitFrame; //@line 522 "players.cpp"
 var $887=(($886+44)|0); //@line 522 "players.cpp"
 var $888=HEAP32[(($887)>>2)]; //@line 522 "players.cpp"
 var $889=((($885)-($888))|0); //@line 522 "players.cpp"
 var $890=$myUnitFrame; //@line 522 "players.cpp"
 var $891=(($890+28)|0); //@line 522 "players.cpp"
 var $892=HEAP32[(($891)>>2)]; //@line 522 "players.cpp"
 var $893=((($889)+($892))|0); //@line 522 "players.cpp"
 var $894=$myUnitFrame; //@line 522 "players.cpp"
 var $895=(($894+36)|0); //@line 522 "players.cpp"
 var $896=HEAP32[(($895)>>2)]; //@line 522 "players.cpp"
 var $897=((($893)+($896))|0); //@line 522 "players.cpp"
 var $898=__Z11getLeftWalli($897); //@line 522 "players.cpp"
 var $899=((($879)+($898))|0); //@line 522 "players.cpp"
 var $900=($899|0); //@line 522 "players.cpp"
 var $901=$2; //@line 522 "players.cpp"
 var $902=(($901)|0); //@line 522 "players.cpp"
 var $903=$902; //@line 522 "players.cpp"
 var $904=(($903+8)|0); //@line 522 "players.cpp"
 HEAPF64[(($904)>>3)]=$900; //@line 522 "players.cpp"
 label=74;break; //@line 525 "players.cpp"
 case 74: 
 var $906=$2; //@line 527 "players.cpp"
 var $907=(($906)|0); //@line 527 "players.cpp"
 var $908=$907; //@line 527 "players.cpp"
 var $909=(($908+8)|0); //@line 527 "players.cpp"
 var $910=HEAPF64[(($909)>>3)]; //@line 527 "players.cpp"
 var $911=$myUnitFrame; //@line 527 "players.cpp"
 var $912=(($911+32)|0); //@line 527 "players.cpp"
 var $913=HEAP32[(($912)>>2)]; //@line 527 "players.cpp"
 var $914=($913|0); //@line 527 "players.cpp"
 var $915=($910)+($914); //@line 527 "players.cpp"
 var $916=$myUnitFrame; //@line 527 "players.cpp"
 var $917=(($916+24)|0); //@line 527 "players.cpp"
 var $918=HEAP32[(($917)>>2)]; //@line 527 "players.cpp"
 var $919=($918|0); //@line 527 "players.cpp"
 var $920=($915)+($919); //@line 527 "players.cpp"
 var $921=$myUnitFrame; //@line 527 "players.cpp"
 var $922=(($921+40)|0); //@line 527 "players.cpp"
 var $923=HEAP32[(($922)>>2)]; //@line 527 "players.cpp"
 var $924=($923|0); //@line 527 "players.cpp"
 var $925=($920)-($924); //@line 527 "players.cpp"
 var $926=$2; //@line 529 "players.cpp"
 var $927=(($926)|0); //@line 529 "players.cpp"
 var $928=$927; //@line 529 "players.cpp"
 var $929=(($928+16)|0); //@line 529 "players.cpp"
 var $930=HEAPF64[(($929)>>3)]; //@line 529 "players.cpp"
 var $931=(($930)&-1); //@line 529 "players.cpp"
 var $932=$myUnitFrame; //@line 529 "players.cpp"
 var $933=(($932+44)|0); //@line 529 "players.cpp"
 var $934=HEAP32[(($933)>>2)]; //@line 529 "players.cpp"
 var $935=((($931)-($934))|0); //@line 529 "players.cpp"
 var $936=$myUnitFrame; //@line 529 "players.cpp"
 var $937=(($936+28)|0); //@line 529 "players.cpp"
 var $938=HEAP32[(($937)>>2)]; //@line 529 "players.cpp"
 var $939=((($935)+($938))|0); //@line 529 "players.cpp"
 var $940=$myUnitFrame; //@line 529 "players.cpp"
 var $941=(($940+36)|0); //@line 529 "players.cpp"
 var $942=HEAP32[(($941)>>2)]; //@line 529 "players.cpp"
 var $943=((($939)+($942))|0); //@line 529 "players.cpp"
 var $944=__Z12getRightWalli($943); //@line 529 "players.cpp"
 var $945=($944|0); //@line 529 "players.cpp"
 var $946=$925>=$945; //@line 529 "players.cpp"
 if($946){label=75;break;}else{label=76;break;} //@line 529 "players.cpp"
 case 75: 
 var $948=$2; //@line 533 "players.cpp"
 var $949=(($948)|0); //@line 533 "players.cpp"
 var $950=$949; //@line 533 "players.cpp"
 var $951=(($950+16)|0); //@line 533 "players.cpp"
 var $952=HEAPF64[(($951)>>3)]; //@line 533 "players.cpp"
 var $953=(($952)&-1); //@line 533 "players.cpp"
 var $954=$myUnitFrame; //@line 533 "players.cpp"
 var $955=(($954+44)|0); //@line 533 "players.cpp"
 var $956=HEAP32[(($955)>>2)]; //@line 533 "players.cpp"
 var $957=((($953)-($956))|0); //@line 533 "players.cpp"
 var $958=$myUnitFrame; //@line 533 "players.cpp"
 var $959=(($958+28)|0); //@line 533 "players.cpp"
 var $960=HEAP32[(($959)>>2)]; //@line 533 "players.cpp"
 var $961=((($957)+($960))|0); //@line 533 "players.cpp"
 var $962=$myUnitFrame; //@line 533 "players.cpp"
 var $963=(($962+36)|0); //@line 533 "players.cpp"
 var $964=HEAP32[(($963)>>2)]; //@line 533 "players.cpp"
 var $965=((($961)+($964))|0); //@line 533 "players.cpp"
 var $966=__Z12getRightWalli($965); //@line 533 "players.cpp"
 var $967=$myUnitFrame; //@line 533 "players.cpp"
 var $968=(($967+32)|0); //@line 533 "players.cpp"
 var $969=HEAP32[(($968)>>2)]; //@line 533 "players.cpp"
 var $970=((($966)-($969))|0); //@line 533 "players.cpp"
 var $971=$myUnitFrame; //@line 533 "players.cpp"
 var $972=(($971+24)|0); //@line 533 "players.cpp"
 var $973=HEAP32[(($972)>>2)]; //@line 533 "players.cpp"
 var $974=((($970)-($973))|0); //@line 533 "players.cpp"
 var $975=$myUnitFrame; //@line 533 "players.cpp"
 var $976=(($975+40)|0); //@line 533 "players.cpp"
 var $977=HEAP32[(($976)>>2)]; //@line 533 "players.cpp"
 var $978=((($974)+($977))|0); //@line 533 "players.cpp"
 var $979=($978|0); //@line 533 "players.cpp"
 var $980=$2; //@line 533 "players.cpp"
 var $981=(($980)|0); //@line 533 "players.cpp"
 var $982=$981; //@line 533 "players.cpp"
 var $983=(($982+8)|0); //@line 533 "players.cpp"
 HEAPF64[(($983)>>3)]=$979; //@line 533 "players.cpp"
 label=76;break; //@line 537 "players.cpp"
 case 76: 
 label=77;break;
 case 77: 
 var $986=$2; //@line 542 "players.cpp"
 var $987=(($986)|0); //@line 542 "players.cpp"
 var $988=(($987+240)|0); //@line 542 "players.cpp"
 var $989=HEAPF64[(($988)>>3)]; //@line 542 "players.cpp"
 var $990=$989>0; //@line 542 "players.cpp"
 if($990){label=78;break;}else{label=86;break;} //@line 542 "players.cpp"
 case 78: 
 var $992=$3; //@line 543 "players.cpp"
 var $993=$2; //@line 543 "players.cpp"
 var $994=(($993)|0); //@line 543 "players.cpp"
 var $995=(($994+196)|0); //@line 543 "players.cpp"
 var $996=HEAP32[(($995)>>2)]; //@line 543 "players.cpp"
 var $997=$2; //@line 543 "players.cpp"
 var $998=(($997)|0); //@line 543 "players.cpp"
 var $999=(($998+200)|0); //@line 543 "players.cpp"
 var $1000=HEAP8[($999)]; //@line 543 "players.cpp"
 var $1001=(($1000)&1); //@line 543 "players.cpp"
 var $1002=__Z18isPlayerKeyPressedPhib($992,$996,$1001); //@line 543 "players.cpp"
 if($1002){label=79;break;}else{label=86;break;} //@line 543 "players.cpp"
 case 79: 
 var $1004=$2; //@line 543 "players.cpp"
 var $1005=(($1004)|0); //@line 543 "players.cpp"
 var $1006=(($1005+232)|0); //@line 543 "players.cpp"
 var $1007=HEAP32[(($1006)>>2)]; //@line 543 "players.cpp"
 var $1008=($1007|0)<=0; //@line 543 "players.cpp"
 if($1008){label=80;break;}else{label=86;break;} //@line 543 "players.cpp"
 case 80: 
 var $1010=$2; //@line 543 "players.cpp"
 var $1011=(($1010)|0); //@line 543 "players.cpp"
 var $1012=(($1011+228)|0); //@line 543 "players.cpp"
 var $1013=HEAP32[(($1012)>>2)]; //@line 543 "players.cpp"
 var $1014=($1013|0)<=0; //@line 543 "players.cpp"
 if($1014){label=81;break;}else{label=86;break;} //@line 543 "players.cpp"
 case 81: 
 var $1016=$2; //@line 549 "players.cpp"
 var $1017=(($1016)|0); //@line 549 "players.cpp"
 var $1018=$1017; //@line 549 "players.cpp"
 var $1019=(($1018+24)|0); //@line 549 "players.cpp"
 var $1020=HEAP32[(($1019)>>2)]; //@line 549 "players.cpp"
 var $1021=($1020|0)==4; //@line 549 "players.cpp"
 if($1021){label=82;break;}else{label=85;break;} //@line 549 "players.cpp"
 case 82: 
 var $1023=$2; //@line 552 "players.cpp"
 var $1024=(($1023)|0); //@line 552 "players.cpp"
 var $1025=$1024; //@line 552 "players.cpp"
 var $1026=(($1025+24)|0); //@line 552 "players.cpp"
 var $1027=HEAP32[(($1026)>>2)]; //@line 552 "players.cpp"
 var $1028=($1027|0)==4; //@line 552 "players.cpp"
 if($1028){label=83;break;}else{label=84;break;} //@line 552 "players.cpp"
 case 83: 
 var $1030=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(3280,0); //@line 554 "players.cpp"
 var $1031=$2; //@line 554 "players.cpp"
 var $1032=(($1031)|0); //@line 554 "players.cpp"
 var $1033=$1032; //@line 554 "players.cpp"
 var $1034=(($1033+88)|0); //@line 554 "players.cpp"
 HEAP32[(($1034)>>2)]=$1030; //@line 554 "players.cpp"
 label=84;break; //@line 554 "players.cpp"
 case 84: 
 var $1036=$2; //@line 557 "players.cpp"
 var $1037=(($1036)|0); //@line 557 "players.cpp"
 var $1038=$1037; //@line 557 "players.cpp"
 var $1039=(($1038+92)|0); //@line 557 "players.cpp"
 HEAP32[(($1039)>>2)]=0; //@line 557 "players.cpp"
 var $1040=$2; //@line 560 "players.cpp"
 var $1041=(($1040)|0); //@line 560 "players.cpp"
 var $1042=$1041; //@line 560 "players.cpp"
 var $1043=__Z12getUnitFrameP17genericUnitStruct($1042); //@line 560 "players.cpp"
 $myUnitFrame=$1043; //@line 560 "players.cpp"
 label=85;break; //@line 561 "players.cpp"
 case 85: 
 var $1045=$2; //@line 564 "players.cpp"
 var $1046=(($1045)|0); //@line 564 "players.cpp"
 var $1047=(($1046+208)|0); //@line 564 "players.cpp"
 var $1048=HEAP32[(($1047)>>2)]; //@line 564 "players.cpp"
 var $1049=$2; //@line 564 "players.cpp"
 var $1050=(($1049)|0); //@line 564 "players.cpp"
 var $1051=(($1050+232)|0); //@line 564 "players.cpp"
 HEAP32[(($1051)>>2)]=$1048; //@line 564 "players.cpp"
 label=86;break; //@line 565 "players.cpp"
 case 86: 
 var $1053=$2; //@line 570 "players.cpp"
 var $1054=(($1053)|0); //@line 570 "players.cpp"
 var $1055=(($1054+240)|0); //@line 570 "players.cpp"
 var $1056=HEAPF64[(($1055)>>3)]; //@line 570 "players.cpp"
 var $1057=$1056<=0; //@line 570 "players.cpp"
 if($1057){label=87;break;}else{label=101;break;} //@line 570 "players.cpp"
 case 87: 
 var $1059=$2; //@line 570 "players.cpp"
 var $1060=(($1059)|0); //@line 570 "players.cpp"
 var $1061=$1060; //@line 570 "players.cpp"
 var $1062=(($1061+8)|0); //@line 570 "players.cpp"
 var $1063=HEAPF64[(($1062)>>3)]; //@line 570 "players.cpp"
 var $1064=$myUnitFrame; //@line 570 "players.cpp"
 var $1065=(($1064+40)|0); //@line 570 "players.cpp"
 var $1066=HEAP32[(($1065)>>2)]; //@line 570 "players.cpp"
 var $1067=($1066|0); //@line 570 "players.cpp"
 var $1068=($1063)-($1067); //@line 570 "players.cpp"
 var $1069=HEAPF64[((19560)>>3)]; //@line 570 "players.cpp"
 var $1070=HEAP32[((19576)>>2)]; //@line 570 "players.cpp"
 var $1071=($1070>>>0); //@line 570 "players.cpp"
 var $1072=($1069)+($1071); //@line 570 "players.cpp"
 var $1073=$1068>=$1072; //@line 570 "players.cpp"
 if($1073){label=91;break;}else{label=88;break;} //@line 570 "players.cpp"
 case 88: 
 var $1075=$2; //@line 570 "players.cpp"
 var $1076=(($1075)|0); //@line 570 "players.cpp"
 var $1077=$1076; //@line 570 "players.cpp"
 var $1078=(($1077+16)|0); //@line 570 "players.cpp"
 var $1079=HEAPF64[(($1078)>>3)]; //@line 570 "players.cpp"
 var $1080=$myUnitFrame; //@line 570 "players.cpp"
 var $1081=(($1080+44)|0); //@line 570 "players.cpp"
 var $1082=HEAP32[(($1081)>>2)]; //@line 570 "players.cpp"
 var $1083=($1082|0); //@line 570 "players.cpp"
 var $1084=($1079)-($1083); //@line 570 "players.cpp"
 var $1085=HEAPF64[((19568)>>3)]; //@line 570 "players.cpp"
 var $1086=HEAP32[((19580)>>2)]; //@line 570 "players.cpp"
 var $1087=($1086>>>0); //@line 570 "players.cpp"
 var $1088=($1085)+($1087); //@line 570 "players.cpp"
 var $1089=$1084>=$1088; //@line 570 "players.cpp"
 if($1089){label=91;break;}else{label=89;break;} //@line 570 "players.cpp"
 case 89: 
 var $1091=$2; //@line 570 "players.cpp"
 var $1092=(($1091)|0); //@line 570 "players.cpp"
 var $1093=$1092; //@line 570 "players.cpp"
 var $1094=(($1093+8)|0); //@line 570 "players.cpp"
 var $1095=HEAPF64[(($1094)>>3)]; //@line 570 "players.cpp"
 var $1096=$myUnitFrame; //@line 570 "players.cpp"
 var $1097=(($1096+16)|0); //@line 570 "players.cpp"
 var $1098=HEAP32[(($1097)>>2)]; //@line 570 "players.cpp"
 var $1099=($1098|0); //@line 570 "players.cpp"
 var $1100=($1095)+($1099); //@line 570 "players.cpp"
 var $1101=$myUnitFrame; //@line 570 "players.cpp"
 var $1102=(($1101+40)|0); //@line 570 "players.cpp"
 var $1103=HEAP32[(($1102)>>2)]; //@line 570 "players.cpp"
 var $1104=($1103|0); //@line 570 "players.cpp"
 var $1105=($1100)-($1104); //@line 570 "players.cpp"
 var $1106=$1105<0; //@line 570 "players.cpp"
 if($1106){label=91;break;}else{label=90;break;} //@line 570 "players.cpp"
 case 90: 
 var $1108=$2; //@line 570 "players.cpp"
 var $1109=(($1108)|0); //@line 570 "players.cpp"
 var $1110=$1109; //@line 570 "players.cpp"
 var $1111=(($1110+16)|0); //@line 570 "players.cpp"
 var $1112=HEAPF64[(($1111)>>3)]; //@line 570 "players.cpp"
 var $1113=$myUnitFrame; //@line 570 "players.cpp"
 var $1114=(($1113+20)|0); //@line 570 "players.cpp"
 var $1115=HEAP32[(($1114)>>2)]; //@line 570 "players.cpp"
 var $1116=($1115|0); //@line 570 "players.cpp"
 var $1117=($1112)+($1116); //@line 570 "players.cpp"
 var $1118=$myUnitFrame; //@line 570 "players.cpp"
 var $1119=(($1118+44)|0); //@line 570 "players.cpp"
 var $1120=HEAP32[(($1119)>>2)]; //@line 570 "players.cpp"
 var $1121=($1120|0); //@line 570 "players.cpp"
 var $1122=($1117)-($1121); //@line 570 "players.cpp"
 var $1123=$1122<0; //@line 570 "players.cpp"
 if($1123){label=91;break;}else{label=101;break;} //@line 570 "players.cpp"
 case 91: 
 var $1125=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 583 "players.cpp"
 $extraPlayer=$1125; //@line 583 "players.cpp"
 $counter=0; //@line 583 "players.cpp"
 label=92;break; //@line 583 "players.cpp"
 case 92: 
 var $1127=$extraPlayer; //@line 583 "players.cpp"
 var $1128=($1127|0)!=0; //@line 583 "players.cpp"
 if($1128){label=93;break;}else{label=98;break;} //@line 583 "players.cpp"
 case 93: 
 var $1130=$extraPlayer; //@line 590 "players.cpp"
 var $1131=(($1130)|0); //@line 590 "players.cpp"
 var $1132=$1131; //@line 590 "players.cpp"
 var $1133=(($1132+130)|0); //@line 590 "players.cpp"
 var $1134=HEAP8[($1133)]; //@line 590 "players.cpp"
 var $1135=(($1134)&1); //@line 590 "players.cpp"
 if($1135){label=94;break;}else{label=95;break;} //@line 590 "players.cpp"
 case 94: 
 var $1137=$extraPlayer; //@line 590 "players.cpp"
 var $1138=(($1137)|0); //@line 590 "players.cpp"
 var $1139=$1138; //@line 590 "players.cpp"
 var $1140=(($1139)|0); //@line 590 "players.cpp"
 var $1141=HEAP32[(($1140)>>2)]; //@line 590 "players.cpp"
 var $1142=$2; //@line 590 "players.cpp"
 var $1143=(($1142)|0); //@line 590 "players.cpp"
 var $1144=$1143; //@line 590 "players.cpp"
 var $1145=(($1144)|0); //@line 590 "players.cpp"
 var $1146=HEAP32[(($1145)>>2)]; //@line 590 "players.cpp"
 var $1147=($1141|0)==($1146|0); //@line 590 "players.cpp"
 if($1147){label=95;break;}else{label=96;break;} //@line 590 "players.cpp"
 case 95: 
 label=97;break; //@line 592 "players.cpp"
 case 96: 
 var $1150=$counter; //@line 593 "players.cpp"
 var $1151=((($1150)+(1))|0); //@line 593 "players.cpp"
 $counter=$1151; //@line 593 "players.cpp"
 label=97;break; //@line 594 "players.cpp"
 case 97: 
 var $1153=$extraPlayer; //@line 585 "players.cpp"
 var $1154=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$1153); //@line 585 "players.cpp"
 $extraPlayer=$1154; //@line 585 "players.cpp"
 label=92;break; //@line 585 "players.cpp"
 case 98: 
 var $1156=$counter; //@line 595 "players.cpp"
 var $1157=($1156|0)<=0; //@line 595 "players.cpp"
 if($1157){label=99;break;}else{label=100;break;} //@line 595 "players.cpp"
 case 99: 
 label=100;break; //@line 598 "players.cpp"
 case 100: 
 var $1160=$2; //@line 602 "players.cpp"
 var $1161=(($1160)|0); //@line 602 "players.cpp"
 var $1162=$1161; //@line 602 "players.cpp"
 var $1163=(($1162+130)|0); //@line 602 "players.cpp"
 HEAP8[($1163)]=0; //@line 602 "players.cpp"
 label=101;break; //@line 603 "players.cpp"
 case 101: 
 var $1165=$2; //@line 606 "players.cpp"
 var $1166=(($1165)|0); //@line 606 "players.cpp"
 var $1167=$1166; //@line 606 "players.cpp"
 var $1168=(($1167+96)|0); //@line 606 "players.cpp"
 var $1169=HEAP8[($1168)]; //@line 606 "players.cpp"
 var $1170=(($1169)&1); //@line 606 "players.cpp"
 if($1170){label=102;break;}else{label=103;break;} //@line 606 "players.cpp"
 case 102: 
 var $1172=$2; //@line 607 "players.cpp"
 var $1173=(($1172)|0); //@line 607 "players.cpp"
 var $1174=$1173; //@line 607 "players.cpp"
 var $1175=(($1174+8)|0); //@line 607 "players.cpp"
 var $1176=HEAPF64[(($1175)>>3)]; //@line 607 "players.cpp"
 var $1177=HEAPF64[((19560)>>3)]; //@line 607 "players.cpp"
 var $1178=($1176)-($1177); //@line 607 "players.cpp"
 var $1179=$2; //@line 607 "players.cpp"
 var $1180=(($1179)|0); //@line 607 "players.cpp"
 var $1181=$1180; //@line 607 "players.cpp"
 var $1182=(($1181+104)|0); //@line 607 "players.cpp"
 HEAPF64[(($1182)>>3)]=$1178; //@line 607 "players.cpp"
 var $1183=$2; //@line 608 "players.cpp"
 var $1184=(($1183)|0); //@line 608 "players.cpp"
 var $1185=$1184; //@line 608 "players.cpp"
 var $1186=(($1185+16)|0); //@line 608 "players.cpp"
 var $1187=HEAPF64[(($1186)>>3)]; //@line 608 "players.cpp"
 var $1188=HEAPF64[((19568)>>3)]; //@line 608 "players.cpp"
 var $1189=($1187)-($1188); //@line 608 "players.cpp"
 var $1190=$2; //@line 608 "players.cpp"
 var $1191=(($1190)|0); //@line 608 "players.cpp"
 var $1192=$1191; //@line 608 "players.cpp"
 var $1193=(($1192+112)|0); //@line 608 "players.cpp"
 HEAPF64[(($1193)>>3)]=$1189; //@line 608 "players.cpp"
 label=103;break; //@line 609 "players.cpp"
 case 103: 
 var $1195=$2; //@line 612 "players.cpp"
 var $1196=(($1195)|0); //@line 612 "players.cpp"
 var $1197=$1196; //@line 612 "players.cpp"
 var $1198=__Z13moveWithOwnerP17genericUnitStruct($1197); //@line 612 "players.cpp"
 if($1198){label=105;break;}else{label=104;break;} //@line 612 "players.cpp"
 case 104: 
 $1=0; //@line 612 "players.cpp"
 label=106;break; //@line 612 "players.cpp"
 case 105: 
 $1=1; //@line 615 "players.cpp"
 label=106;break; //@line 615 "players.cpp"
 case 106: 
 var $1202=$1; //@line 616 "players.cpp"
 STACKTOP=sp;return $1202; //@line 616 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE10removeNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 262 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 262 "./vectorlist.h"
 var $7=(($6)&1); //@line 262 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 262 "./vectorlist.h"
 case 2: 
 $1=0; //@line 262 "./vectorlist.h"
 label=17;break; //@line 262 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 265 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 265 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 265 "./vectorlist.h"
 var $13=(($12+((($10)*(264))&-1))|0); //@line 265 "./vectorlist.h"
 var $14=(($13+256)|0); //@line 265 "./vectorlist.h"
 HEAP8[($14)]=1; //@line 265 "./vectorlist.h"
 var $15=$3; //@line 269 "./vectorlist.h"
 var $16=(($4+12)|0); //@line 269 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 269 "./vectorlist.h"
 var $18=($15>>>0)<($17>>>0); //@line 269 "./vectorlist.h"
 if($18){label=4;break;}else{label=5;break;} //@line 269 "./vectorlist.h"
 case 4: 
 var $20=$3; //@line 271 "./vectorlist.h"
 var $21=(($4+12)|0); //@line 271 "./vectorlist.h"
 HEAP32[(($21)>>2)]=$20; //@line 271 "./vectorlist.h"
 label=5;break; //@line 272 "./vectorlist.h"
 case 5: 
 var $23=$3; //@line 275 "./vectorlist.h"
 var $24=(($4+8)|0); //@line 275 "./vectorlist.h"
 var $25=HEAP32[(($24)>>2)]; //@line 275 "./vectorlist.h"
 var $26=($23|0)==($25|0); //@line 275 "./vectorlist.h"
 if($26){label=6;break;}else{label=16;break;} //@line 275 "./vectorlist.h"
 case 6: 
 var $28=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $29=HEAP32[(($28)>>2)]; //@line 282 "./vectorlist.h"
 var $30=(($4+8)|0); //@line 282 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 282 "./vectorlist.h"
 var $32=(($29+((($31)*(264))&-1))|0); //@line 282 "./vectorlist.h"
 var $33=((($32)-(264))|0); //@line 282 "./vectorlist.h"
 $node=$33; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 7: 
 var $35=$node; //@line 282 "./vectorlist.h"
 var $36=(($4+20)|0); //@line 282 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 282 "./vectorlist.h"
 var $38=($35>>>0)>=($37>>>0); //@line 282 "./vectorlist.h"
 if($38){label=8;break;}else{label=12;break;} //@line 282 "./vectorlist.h"
 case 8: 
 var $40=$node; //@line 285 "./vectorlist.h"
 var $41=(($40+256)|0); //@line 285 "./vectorlist.h"
 var $42=HEAP8[($41)]; //@line 285 "./vectorlist.h"
 var $43=(($42)&1); //@line 285 "./vectorlist.h"
 if($43){label=10;break;}else{label=9;break;} //@line 285 "./vectorlist.h"
 case 9: 
 label=12;break; //@line 285 "./vectorlist.h"
 case 10: 
 label=11;break; //@line 286 "./vectorlist.h"
 case 11: 
 var $47=$node; //@line 282 "./vectorlist.h"
 var $48=((($47)-(264))|0); //@line 282 "./vectorlist.h"
 $node=$48; //@line 282 "./vectorlist.h"
 label=7;break; //@line 282 "./vectorlist.h"
 case 12: 
 var $50=$node; //@line 289 "./vectorlist.h"
 var $51=(($4+20)|0); //@line 289 "./vectorlist.h"
 var $52=HEAP32[(($51)>>2)]; //@line 289 "./vectorlist.h"
 var $53=($50>>>0)<($52>>>0); //@line 289 "./vectorlist.h"
 if($53){label=13;break;}else{label=14;break;} //@line 289 "./vectorlist.h"
 case 13: 
 var $55=(($4+4)|0); //@line 291 "./vectorlist.h"
 var $56=HEAP32[(($55)>>2)]; //@line 291 "./vectorlist.h"
 var $57=(($4+8)|0); //@line 291 "./vectorlist.h"
 HEAP32[(($57)>>2)]=$56; //@line 291 "./vectorlist.h"
 label=15;break; //@line 292 "./vectorlist.h"
 case 14: 
 var $59=$node; //@line 294 "./vectorlist.h"
 var $60=(($4+20)|0); //@line 294 "./vectorlist.h"
 var $61=HEAP32[(($60)>>2)]; //@line 294 "./vectorlist.h"
 var $62=$59; //@line 294 "./vectorlist.h"
 var $63=$61; //@line 294 "./vectorlist.h"
 var $64=((($62)-($63))|0); //@line 294 "./vectorlist.h"
 var $65=(((($64|0))/(264))&-1); //@line 294 "./vectorlist.h"
 var $66=(($4+8)|0); //@line 294 "./vectorlist.h"
 HEAP32[(($66)>>2)]=$65; //@line 294 "./vectorlist.h"
 label=15;break;
 case 15: 
 label=16;break; //@line 297 "./vectorlist.h"
 case 16: 
 $1=1; //@line 299 "./vectorlist.h"
 label=17;break; //@line 299 "./vectorlist.h"
 case 17: 
 var $70=$1; //@line 300 "./vectorlist.h"
 STACKTOP=sp;return $70; //@line 300 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z11movePlayersPh($keys){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $unit;
 var $i;
 $2=$keys;
 $i=0; //@line 623 "players.cpp"
 var $3=__ZN15vectorListClassI16playerUnitStructE12getFirstNodeEv(19240); //@line 626 "players.cpp"
 $unit=$3; //@line 626 "players.cpp"
 label=2;break; //@line 626 "players.cpp"
 case 2: 
 var $5=$unit; //@line 626 "players.cpp"
 var $6=($5|0)!=0; //@line 626 "players.cpp"
 if($6){label=3;break;}else{label=9;break;} //@line 626 "players.cpp"
 case 3: 
 var $8=$unit; //@line 628 "players.cpp"
 var $9=(($8)|0); //@line 628 "players.cpp"
 var $10=$9; //@line 628 "players.cpp"
 var $11=(($10+130)|0); //@line 628 "players.cpp"
 var $12=HEAP8[($11)]; //@line 628 "players.cpp"
 var $13=(($12)&1); //@line 628 "players.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 628 "players.cpp"
 case 4: 
 label=8;break; //@line 628 "players.cpp"
 case 5: 
 var $16=$unit; //@line 631 "players.cpp"
 var $17=$2; //@line 631 "players.cpp"
 var $18=__Z14movePlayerUnitR20vectorListNodeStructI16playerUnitStructEPh($16,$17); //@line 631 "players.cpp"
 if($18){label=7;break;}else{label=6;break;} //@line 631 "players.cpp"
 case 6: 
 $1=0; //@line 631 "players.cpp"
 label=10;break; //@line 631 "players.cpp"
 case 7: 
 label=8;break; //@line 632 "players.cpp"
 case 8: 
 var $22=$unit; //@line 626 "players.cpp"
 var $23=__ZN15vectorListClassI16playerUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19240,$22); //@line 626 "players.cpp"
 $unit=$23; //@line 626 "players.cpp"
 label=2;break; //@line 626 "players.cpp"
 case 9: 
 $1=1; //@line 634 "players.cpp"
 label=10;break; //@line 634 "players.cpp"
 case 10: 
 var $26=$1; //@line 635 "players.cpp"
 STACKTOP=sp;return $26; //@line 635 "players.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16bulletUnitStructE12activateNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 199 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 199 "./vectorlist.h"
 var $7=(($6)&1); //@line 199 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 199 "./vectorlist.h"
 case 2: 
 $1=0; //@line 199 "./vectorlist.h"
 label=18;break; //@line 199 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 202 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 202 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 202 "./vectorlist.h"
 var $13=(($12+((($10)*(216))&-1))|0); //@line 202 "./vectorlist.h"
 var $14=(($13+208)|0); //@line 202 "./vectorlist.h"
 HEAP8[($14)]=0; //@line 202 "./vectorlist.h"
 var $15=$3; //@line 207 "./vectorlist.h"
 var $16=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 207 "./vectorlist.h"
 var $18=($15>>>0)>($17>>>0); //@line 207 "./vectorlist.h"
 if($18){label=5;break;}else{label=4;break;} //@line 207 "./vectorlist.h"
 case 4: 
 var $20=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $21=HEAP32[(($20)>>2)]; //@line 207 "./vectorlist.h"
 var $22=(($4+4)|0); //@line 207 "./vectorlist.h"
 var $23=HEAP32[(($22)>>2)]; //@line 207 "./vectorlist.h"
 var $24=($21|0)==($23|0); //@line 207 "./vectorlist.h"
 if($24){label=5;break;}else{label=6;break;} //@line 207 "./vectorlist.h"
 case 5: 
 var $26=$3; //@line 209 "./vectorlist.h"
 var $27=(($4+8)|0); //@line 209 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 209 "./vectorlist.h"
 label=6;break; //@line 210 "./vectorlist.h"
 case 6: 
 var $29=$3; //@line 213 "./vectorlist.h"
 var $30=(($4+12)|0); //@line 213 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 213 "./vectorlist.h"
 var $32=($29|0)==($31|0); //@line 213 "./vectorlist.h"
 if($32){label=7;break;}else{label=14;break;} //@line 213 "./vectorlist.h"
 case 7: 
 var $34=(($4+20)|0); //@line 218 "./vectorlist.h"
 var $35=HEAP32[(($34)>>2)]; //@line 218 "./vectorlist.h"
 var $36=(($4+12)|0); //@line 218 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 218 "./vectorlist.h"
 var $38=(($35+((($37)*(216))&-1))|0); //@line 218 "./vectorlist.h"
 var $39=(($38+216)|0); //@line 218 "./vectorlist.h"
 $node=$39; //@line 218 "./vectorlist.h"
 var $40=(($4+12)|0); //@line 221 "./vectorlist.h"
 var $41=HEAP32[(($40)>>2)]; //@line 221 "./vectorlist.h"
 var $42=((($41)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$42; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 8: 
 var $44=$i; //@line 221 "./vectorlist.h"
 var $45=(($4+4)|0); //@line 221 "./vectorlist.h"
 var $46=HEAP32[(($45)>>2)]; //@line 221 "./vectorlist.h"
 var $47=($44>>>0)<($46>>>0); //@line 221 "./vectorlist.h"
 if($47){label=9;break;}else{label=13;break;} //@line 221 "./vectorlist.h"
 case 9: 
 var $49=$node; //@line 223 "./vectorlist.h"
 var $50=(($49+208)|0); //@line 223 "./vectorlist.h"
 var $51=HEAP8[($50)]; //@line 223 "./vectorlist.h"
 var $52=(($51)&1); //@line 223 "./vectorlist.h"
 if($52){label=10;break;}else{label=11;break;} //@line 223 "./vectorlist.h"
 case 10: 
 label=13;break; //@line 223 "./vectorlist.h"
 case 11: 
 var $55=$node; //@line 226 "./vectorlist.h"
 var $56=(($55+216)|0); //@line 226 "./vectorlist.h"
 $node=$56; //@line 226 "./vectorlist.h"
 label=12;break; //@line 227 "./vectorlist.h"
 case 12: 
 var $58=$i; //@line 221 "./vectorlist.h"
 var $59=((($58)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$59; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 13: 
 var $61=$i; //@line 233 "./vectorlist.h"
 var $62=(($4+12)|0); //@line 233 "./vectorlist.h"
 HEAP32[(($62)>>2)]=$61; //@line 233 "./vectorlist.h"
 label=14;break; //@line 235 "./vectorlist.h"
 case 14: 
 var $64=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $65=HEAP32[(($64)>>2)]; //@line 246 "./vectorlist.h"
 var $66=(($4+4)|0); //@line 246 "./vectorlist.h"
 var $67=HEAP32[(($66)>>2)]; //@line 246 "./vectorlist.h"
 var $68=($65|0)!=($67|0); //@line 246 "./vectorlist.h"
 if($68){label=15;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 15: 
 var $70=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $71=HEAP32[(($70)>>2)]; //@line 246 "./vectorlist.h"
 var $72=((($71)+(1))|0); //@line 246 "./vectorlist.h"
 var $73=(($4+16)|0); //@line 246 "./vectorlist.h"
 var $74=HEAP32[(($73)>>2)]; //@line 246 "./vectorlist.h"
 var $75=($72>>>0)>($74>>>0); //@line 246 "./vectorlist.h"
 if($75){label=16;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 16: 
 var $77=(($4+8)|0); //@line 247 "./vectorlist.h"
 var $78=HEAP32[(($77)>>2)]; //@line 247 "./vectorlist.h"
 var $79=((($78)+(1))|0); //@line 247 "./vectorlist.h"
 var $80=(($4+16)|0); //@line 247 "./vectorlist.h"
 HEAP32[(($80)>>2)]=$79; //@line 247 "./vectorlist.h"
 label=17;break; //@line 247 "./vectorlist.h"
 case 17: 
 $1=1; //@line 249 "./vectorlist.h"
 label=18;break; //@line 249 "./vectorlist.h"
 case 18: 
 var $83=$1; //@line 250 "./vectorlist.h"
 STACKTOP=sp;return $83; //@line 250 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI16playerUnitStructE12activateNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 199 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 199 "./vectorlist.h"
 var $7=(($6)&1); //@line 199 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 199 "./vectorlist.h"
 case 2: 
 $1=0; //@line 199 "./vectorlist.h"
 label=18;break; //@line 199 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 202 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 202 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 202 "./vectorlist.h"
 var $13=(($12+((($10)*(264))&-1))|0); //@line 202 "./vectorlist.h"
 var $14=(($13+256)|0); //@line 202 "./vectorlist.h"
 HEAP8[($14)]=0; //@line 202 "./vectorlist.h"
 var $15=$3; //@line 207 "./vectorlist.h"
 var $16=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 207 "./vectorlist.h"
 var $18=($15>>>0)>($17>>>0); //@line 207 "./vectorlist.h"
 if($18){label=5;break;}else{label=4;break;} //@line 207 "./vectorlist.h"
 case 4: 
 var $20=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $21=HEAP32[(($20)>>2)]; //@line 207 "./vectorlist.h"
 var $22=(($4+4)|0); //@line 207 "./vectorlist.h"
 var $23=HEAP32[(($22)>>2)]; //@line 207 "./vectorlist.h"
 var $24=($21|0)==($23|0); //@line 207 "./vectorlist.h"
 if($24){label=5;break;}else{label=6;break;} //@line 207 "./vectorlist.h"
 case 5: 
 var $26=$3; //@line 209 "./vectorlist.h"
 var $27=(($4+8)|0); //@line 209 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 209 "./vectorlist.h"
 label=6;break; //@line 210 "./vectorlist.h"
 case 6: 
 var $29=$3; //@line 213 "./vectorlist.h"
 var $30=(($4+12)|0); //@line 213 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 213 "./vectorlist.h"
 var $32=($29|0)==($31|0); //@line 213 "./vectorlist.h"
 if($32){label=7;break;}else{label=14;break;} //@line 213 "./vectorlist.h"
 case 7: 
 var $34=(($4+20)|0); //@line 218 "./vectorlist.h"
 var $35=HEAP32[(($34)>>2)]; //@line 218 "./vectorlist.h"
 var $36=(($4+12)|0); //@line 218 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 218 "./vectorlist.h"
 var $38=(($35+((($37)*(264))&-1))|0); //@line 218 "./vectorlist.h"
 var $39=(($38+264)|0); //@line 218 "./vectorlist.h"
 $node=$39; //@line 218 "./vectorlist.h"
 var $40=(($4+12)|0); //@line 221 "./vectorlist.h"
 var $41=HEAP32[(($40)>>2)]; //@line 221 "./vectorlist.h"
 var $42=((($41)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$42; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 8: 
 var $44=$i; //@line 221 "./vectorlist.h"
 var $45=(($4+4)|0); //@line 221 "./vectorlist.h"
 var $46=HEAP32[(($45)>>2)]; //@line 221 "./vectorlist.h"
 var $47=($44>>>0)<($46>>>0); //@line 221 "./vectorlist.h"
 if($47){label=9;break;}else{label=13;break;} //@line 221 "./vectorlist.h"
 case 9: 
 var $49=$node; //@line 223 "./vectorlist.h"
 var $50=(($49+256)|0); //@line 223 "./vectorlist.h"
 var $51=HEAP8[($50)]; //@line 223 "./vectorlist.h"
 var $52=(($51)&1); //@line 223 "./vectorlist.h"
 if($52){label=10;break;}else{label=11;break;} //@line 223 "./vectorlist.h"
 case 10: 
 label=13;break; //@line 223 "./vectorlist.h"
 case 11: 
 var $55=$node; //@line 226 "./vectorlist.h"
 var $56=(($55+264)|0); //@line 226 "./vectorlist.h"
 $node=$56; //@line 226 "./vectorlist.h"
 label=12;break; //@line 227 "./vectorlist.h"
 case 12: 
 var $58=$i; //@line 221 "./vectorlist.h"
 var $59=((($58)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$59; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 13: 
 var $61=$i; //@line 233 "./vectorlist.h"
 var $62=(($4+12)|0); //@line 233 "./vectorlist.h"
 HEAP32[(($62)>>2)]=$61; //@line 233 "./vectorlist.h"
 label=14;break; //@line 235 "./vectorlist.h"
 case 14: 
 var $64=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $65=HEAP32[(($64)>>2)]; //@line 246 "./vectorlist.h"
 var $66=(($4+4)|0); //@line 246 "./vectorlist.h"
 var $67=HEAP32[(($66)>>2)]; //@line 246 "./vectorlist.h"
 var $68=($65|0)!=($67|0); //@line 246 "./vectorlist.h"
 if($68){label=15;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 15: 
 var $70=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $71=HEAP32[(($70)>>2)]; //@line 246 "./vectorlist.h"
 var $72=((($71)+(1))|0); //@line 246 "./vectorlist.h"
 var $73=(($4+16)|0); //@line 246 "./vectorlist.h"
 var $74=HEAP32[(($73)>>2)]; //@line 246 "./vectorlist.h"
 var $75=($72>>>0)>($74>>>0); //@line 246 "./vectorlist.h"
 if($75){label=16;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 16: 
 var $77=(($4+8)|0); //@line 247 "./vectorlist.h"
 var $78=HEAP32[(($77)>>2)]; //@line 247 "./vectorlist.h"
 var $79=((($78)+(1))|0); //@line 247 "./vectorlist.h"
 var $80=(($4+16)|0); //@line 247 "./vectorlist.h"
 HEAP32[(($80)>>2)]=$79; //@line 247 "./vectorlist.h"
 label=17;break; //@line 247 "./vectorlist.h"
 case 17: 
 $1=1; //@line 249 "./vectorlist.h"
 label=18;break; //@line 249 "./vectorlist.h"
 case 18: 
 var $83=$1; //@line 250 "./vectorlist.h"
 STACKTOP=sp;return $83; //@line 250 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23executePostInstallTasksb($showMessages){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2=($showMessages&1);
 $1=$2;
 STACKTOP=sp;return 1; //@line 88 "postinstall.cpp"
}


function __Z19switchToProgramZone16programZonesEnummmb($programZone,$programSubZone,$programSubSubZone,$reInitializeAllResources){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$programZone;
 $3=$programSubZone;
 $4=$programSubSubZone;
 var $6=($reInitializeAllResources&1);
 $5=$6;
 var $7=$2; //@line 42 "programzones.cpp"
 var $8=__ZN14conLoggerClass7logLineEPcbbbz(19416,8888,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$7,tempVarArgs)); STACKTOP=tempVarArgs; //@line 42 "programzones.cpp"
 var $9=HEAP32[((19376)>>2)]; //@line 47 "programzones.cpp"
 var $10=(($9+28)|0); //@line 47 "programzones.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 47 "programzones.cpp"
 var $12=FUNCTION_TABLE[$11](19376); //@line 47 "programzones.cpp"
 var $13=__ZN16timeWrapperClass7isReadyEv($12); //@line 47 "programzones.cpp"
 if($13){label=2;break;}else{label=4;break;} //@line 47 "programzones.cpp"
 case 2: 
 var $15=HEAP32[((19376)>>2)]; //@line 48 "programzones.cpp"
 var $16=(($15+28)|0); //@line 48 "programzones.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 48 "programzones.cpp"
 var $18=FUNCTION_TABLE[$17](19376); //@line 48 "programzones.cpp"
 var $19=__ZN16timeWrapperClass5pauseEv($18); //@line 48 "programzones.cpp"
 if($19){label=4;break;}else{label=3;break;} //@line 48 "programzones.cpp"
 case 3: 
 $1=0; //@line 48 "programzones.cpp"
 label=30;break; //@line 48 "programzones.cpp"
 case 4: 
 var $22=HEAP32[((19824)>>2)]; //@line 52 "programzones.cpp"
 if(($22|0)==3){ label=11;break;}else if(($22|0)==1){ label=5;break;}else if(($22|0)==2){ label=8;break;}else{label=14;break;}
 case 5: 
 var $24=__ZN12GameLoopCode9afterLoopEv(); //@line 54 "programzones.cpp"
 if($24){label=7;break;}else{label=6;break;} //@line 54 "programzones.cpp"
 case 6: 
 $1=0; //@line 54 "programzones.cpp"
 label=30;break; //@line 54 "programzones.cpp"
 case 7: 
 label=14;break; //@line 55 "programzones.cpp"
 case 8: 
 var $28=__ZN13IntroLoopCode9afterLoopEv(); //@line 57 "programzones.cpp"
 if($28){label=10;break;}else{label=9;break;} //@line 57 "programzones.cpp"
 case 9: 
 $1=0; //@line 57 "programzones.cpp"
 label=30;break; //@line 57 "programzones.cpp"
 case 10: 
 label=14;break; //@line 58 "programzones.cpp"
 case 11: 
 var $32=__ZN12MenuLoopCode9afterLoopEv(); //@line 60 "programzones.cpp"
 if($32){label=13;break;}else{label=12;break;} //@line 60 "programzones.cpp"
 case 12: 
 $1=0; //@line 60 "programzones.cpp"
 label=30;break; //@line 60 "programzones.cpp"
 case 13: 
 label=14;break; //@line 61 "programzones.cpp"
 case 14: 
 var $36=__ZN14conLoggerClass7logLineEPcbbbz(19416,14616,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 65 "programzones.cpp"
 var $37=$2; //@line 69 "programzones.cpp"
 var $38=__Z14setUpResources16programZonesEnum($37); //@line 69 "programzones.cpp"
 if($38){label=16;break;}else{label=15;break;} //@line 69 "programzones.cpp"
 case 15: 
 $1=0; //@line 69 "programzones.cpp"
 label=30;break; //@line 69 "programzones.cpp"
 case 16: 
 var $41=__ZN14conLoggerClass7logLineEPcbbbz(19416,11408,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 72 "programzones.cpp"
 var $42=HEAP32[((19824)>>2)]; //@line 76 "programzones.cpp"
 HEAP32[((440)>>2)]=$42; //@line 76 "programzones.cpp"
 var $43=HEAP32[((19832)>>2)]; //@line 77 "programzones.cpp"
 HEAP32[((19224)>>2)]=$43; //@line 77 "programzones.cpp"
 var $44=HEAP32[((19840)>>2)]; //@line 78 "programzones.cpp"
 HEAP32[((19232)>>2)]=$44; //@line 78 "programzones.cpp"
 var $45=$2; //@line 80 "programzones.cpp"
 HEAP32[((19824)>>2)]=$45; //@line 80 "programzones.cpp"
 var $46=$3; //@line 81 "programzones.cpp"
 HEAP32[((19832)>>2)]=$46; //@line 81 "programzones.cpp"
 var $47=$4; //@line 82 "programzones.cpp"
 HEAP32[((19840)>>2)]=$47; //@line 82 "programzones.cpp"
 var $48=$2; //@line 86 "programzones.cpp"
 if(($48|0)==1){ label=17;break;}else if(($48|0)==2){ label=20;break;}else if(($48|0)==3){ label=23;break;}else{label=26;break;}
 case 17: 
 var $50=__ZN12GameLoopCode10beforeLoopEv(); //@line 88 "programzones.cpp"
 if($50){label=19;break;}else{label=18;break;} //@line 88 "programzones.cpp"
 case 18: 
 $1=0; //@line 88 "programzones.cpp"
 label=30;break; //@line 88 "programzones.cpp"
 case 19: 
 label=26;break; //@line 89 "programzones.cpp"
 case 20: 
 var $54=__ZN13IntroLoopCode10beforeLoopEv(); //@line 91 "programzones.cpp"
 if($54){label=22;break;}else{label=21;break;} //@line 91 "programzones.cpp"
 case 21: 
 $1=0; //@line 91 "programzones.cpp"
 label=30;break; //@line 91 "programzones.cpp"
 case 22: 
 label=26;break; //@line 92 "programzones.cpp"
 case 23: 
 var $58=__ZN12MenuLoopCode10beforeLoopEv(); //@line 94 "programzones.cpp"
 if($58){label=25;break;}else{label=24;break;} //@line 94 "programzones.cpp"
 case 24: 
 $1=0; //@line 94 "programzones.cpp"
 label=30;break; //@line 94 "programzones.cpp"
 case 25: 
 label=26;break; //@line 95 "programzones.cpp"
 case 26: 
 var $62=HEAP32[((19376)>>2)]; //@line 99 "programzones.cpp"
 var $63=(($62+28)|0); //@line 99 "programzones.cpp"
 var $64=HEAP32[(($63)>>2)]; //@line 99 "programzones.cpp"
 var $65=FUNCTION_TABLE[$64](19376); //@line 99 "programzones.cpp"
 var $66=__ZN16timeWrapperClass7isReadyEv($65); //@line 99 "programzones.cpp"
 if($66){label=27;break;}else{label=29;break;} //@line 99 "programzones.cpp"
 case 27: 
 var $68=HEAP32[((19376)>>2)]; //@line 100 "programzones.cpp"
 var $69=(($68+28)|0); //@line 100 "programzones.cpp"
 var $70=HEAP32[(($69)>>2)]; //@line 100 "programzones.cpp"
 var $71=FUNCTION_TABLE[$70](19376); //@line 100 "programzones.cpp"
 var $72=__ZN16timeWrapperClass4playEv($71); //@line 100 "programzones.cpp"
 if($72){label=29;break;}else{label=28;break;} //@line 100 "programzones.cpp"
 case 28: 
 $1=0; //@line 100 "programzones.cpp"
 label=30;break; //@line 100 "programzones.cpp"
 case 29: 
 var $75=__ZN14conLoggerClass7logLineEPcbbbz(19416,8584,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 103 "programzones.cpp"
 $1=1; //@line 106 "programzones.cpp"
 label=30;break; //@line 106 "programzones.cpp"
 case 30: 
 var $77=$1; //@line 107 "programzones.cpp"
 STACKTOP=sp;return $77; //@line 107 "programzones.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23switchToNullProgramZonev(){
 var label=0;


 var $1=__Z19switchToProgramZone16programZonesEnummmb(0,0,0,1); //@line 115 "programzones.cpp"
 return $1; //@line 115 "programzones.cpp"
}


function __Z17setUpProgramFontsb($shouldDeinitialize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3=($shouldDeinitialize&1);
 $2=$3;
 var $4=$2; //@line 39 "resfonts.cpp"
 var $5=(($4)&1); //@line 39 "resfonts.cpp"
 if($5){label=12;break;}else{label=2;break;} //@line 39 "resfonts.cpp"
 case 2: 
 var $7=HEAP32[((19728)>>2)]; //@line 41 "resfonts.cpp"
 var $8=(($7+28)|0); //@line 41 "resfonts.cpp"
 var $9=HEAP32[(($8)>>2)]; //@line 41 "resfonts.cpp"
 var $10=FUNCTION_TABLE[$9](19728); //@line 41 "resfonts.cpp"
 if($10){label=11;break;}else{label=3;break;} //@line 41 "resfonts.cpp"
 case 3: 
 var $12=__Z24getSurfaceByResourceNamePc(8704); //@line 45 "resfonts.cpp"
 var $13=__ZN23bitmappedFixedFontClass4initEP13ddSpriteClassii(19728,$12,8,15); //@line 45 "resfonts.cpp"
 if($13){label=4;break;}else{label=9;break;} //@line 45 "resfonts.cpp"
 case 4: 
 var $15=__Z24getSurfaceByResourceNamePc(14584); //@line 47 "resfonts.cpp"
 var $16=__ZN23bitmappedFixedFontClass4initEP13ddSpriteClassii(19680,$15,6,6); //@line 47 "resfonts.cpp"
 if($16){label=5;break;}else{label=9;break;} //@line 47 "resfonts.cpp"
 case 5: 
 var $18=__Z24getSurfaceByResourceNamePc(14584); //@line 49 "resfonts.cpp"
 var $19=__ZN23bitmappedFixedFontClass4initEP13ddSpriteClassii(19704,$18,13,11); //@line 49 "resfonts.cpp"
 if($19){label=6;break;}else{label=9;break;} //@line 49 "resfonts.cpp"
 case 6: 
 var $21=__ZN23bitmappedFixedFontClass23setUpCharactersInMatrixEPciiiii(19728,11248,1,1,27,1,1); //@line 51 "resfonts.cpp"
 if($21){label=7;break;}else{label=9;break;} //@line 51 "resfonts.cpp"
 case 7: 
 var $23=__ZN23bitmappedFixedFontClass23setUpCharactersInMatrixEPciiiii(19680,8496,1,1,28,1,1); //@line 56 "resfonts.cpp"
 if($23){label=8;break;}else{label=9;break;} //@line 56 "resfonts.cpp"
 case 8: 
 var $25=__ZN23bitmappedFixedFontClass23setUpCharactersInMatrixEPciiiii(19704,6664,1,31,28,1,1); //@line 61 "resfonts.cpp"
 if($25){label=10;break;}else{label=9;break;} //@line 61 "resfonts.cpp"
 case 9: 
 var $27=__ZN23bitmappedFixedFontClass3endEv(19728); //@line 67 "resfonts.cpp"
 var $28=__ZN23bitmappedFixedFontClass3endEv(19680); //@line 68 "resfonts.cpp"
 var $29=__ZN23bitmappedFixedFontClass3endEv(19704); //@line 69 "resfonts.cpp"
 $1=0; //@line 70 "resfonts.cpp"
 label=14;break; //@line 70 "resfonts.cpp"
 case 10: 
 label=11;break; //@line 72 "resfonts.cpp"
 case 11: 
 label=13;break; //@line 73 "resfonts.cpp"
 case 12: 
 var $33=__ZN23bitmappedFixedFontClass3endEv(19728); //@line 75 "resfonts.cpp"
 var $34=__ZN23bitmappedFixedFontClass3endEv(19680); //@line 76 "resfonts.cpp"
 var $35=__ZN23bitmappedFixedFontClass3endEv(19704); //@line 77 "resfonts.cpp"
 label=13;break;
 case 13: 
 $1=1; //@line 81 "resfonts.cpp"
 label=14;break; //@line 81 "resfonts.cpp"
 case 14: 
 var $38=$1; //@line 82 "resfonts.cpp"
 STACKTOP=sp;return $38; //@line 82 "resfonts.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function ___cxx_global_var_init362(){
 var label=0;


 __ZN20massDeallocatorClassC1Ev(20512); //@line 40 "resinfoman.cpp"
 var $1=_atexit((226),20512,___dso_handle); //@line 40 "resinfoman.cpp"
 return; //@line 40 "resinfoman.cpp"
}


function __ZN20massDeallocatorClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN20massDeallocatorClassC2Ev($2); //@line 67 "./massDeallocator.h"
 STACKTOP=sp;return; //@line 67 "./massDeallocator.h"
}


function __Z17initializeResInfov(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+200)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $lstate;
 var $curr;
 var $frData;
 var $size;
 var $i;
 var $framename;
 var $resname;
 var $eventname;
 var $groupname;
 var $x=sp;
 var $y=(sp)+(8);
 var $w=(sp)+(16);
 var $h=(sp)+(24);
 var $cx=(sp)+(32);
 var $cy=(sp)+(40);
 var $cw=(sp)+(48);
 var $ch=(sp)+(56);
 var $hx=(sp)+(64);
 var $hy=(sp)+(72);
 var $sx=(sp)+(80);
 var $sy=(sp)+(88);
 var $ax=(sp)+(96);
 var $ay=(sp)+(104);
 var $aNF=(sp)+(112);
 var $aSVT;
 var $value;
 var $str;
 var $str1;
 var $str2;
 var $str3;
 var $frTemp=(sp)+(120);
 var $listNode;
 var $2=__ZN14conLoggerClass7logLineEPcbbbz(19416,8440,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 52 "resinfoman.cpp"
 var $3=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 55 "resinfoman.cpp"
 $lstate=$3; //@line 55 "resinfoman.cpp"
 var $4=__ZN20massDeallocatorClass4initEv(20512); //@line 58 "resinfoman.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 58 "resinfoman.cpp"
 case 2: 
 var $6=__ZN14conLoggerClass7logLineEPcbbbz(19416,14536,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 59 "resinfoman.cpp"
 $1=0; //@line 60 "resinfoman.cpp"
 label=25;break; //@line 60 "resinfoman.cpp"
 case 3: 
 var $8=$lstate; //@line 65 "resinfoman.cpp"
 _lua_getglobal($8,11224); //@line 65 "resinfoman.cpp"
 var $9=$lstate; //@line 66 "resinfoman.cpp"
 _lua_pushnil($9); //@line 66 "resinfoman.cpp"
 label=4;break; //@line 67 "resinfoman.cpp"
 case 4: 
 var $11=$lstate; //@line 67 "resinfoman.cpp"
 var $12=_lua_next($11,-2); //@line 67 "resinfoman.cpp"
 var $13=($12|0)!=0; //@line 67 "resinfoman.cpp"
 if($13){label=5;break;}else{label=24;break;} //@line 67 "resinfoman.cpp"
 case 5: 
 var $15=$lstate; //@line 70 "resinfoman.cpp"
 var $16=_lua_tolstring($15,-1,0); //@line 70 "resinfoman.cpp"
 $curr=$16; //@line 70 "resinfoman.cpp"
 var $17=$curr; //@line 75 "resinfoman.cpp"
 var $18=__ZN14conLoggerClass7logLineEPcbbbz(19416,8472,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$17,tempVarArgs)); STACKTOP=tempVarArgs; //@line 75 "resinfoman.cpp"
 var $19=$lstate; //@line 79 "resinfoman.cpp"
 var $20=$curr; //@line 79 "resinfoman.cpp"
 _lua_getglobal($19,$20); //@line 79 "resinfoman.cpp"
 var $21=$lstate; //@line 81 "resinfoman.cpp"
 var $22=_lua_rawlen($21,-1); //@line 81 "resinfoman.cpp"
 $size=$22; //@line 81 "resinfoman.cpp"
 var $23=$size; //@line 82 "resinfoman.cpp"
 var $24=((($23)+(1))|0); //@line 82 "resinfoman.cpp"
 var $25$0=_llvm_umul_with_overflow_i32($24,80);
 var $25$1=tempRet0;
 var $26=$25$1;
 var $27=$25$0;
 var $28=($26?-1:$27); //@line 82 "resinfoman.cpp"
 var $29=__Znaj($28); //@line 82 "resinfoman.cpp"
 var $30=$29; //@line 82 "resinfoman.cpp"
 $frData=$30; //@line 82 "resinfoman.cpp"
 var $31=$frData; //@line 83 "resinfoman.cpp"
 var $32=$31; //@line 83 "resinfoman.cpp"
 var $33=__ZN20massDeallocatorClass16addMemAllocationEPvb(20512,$32,0); //@line 83 "resinfoman.cpp"
 var $34=$size; //@line 86 "resinfoman.cpp"
 var $35=$frData; //@line 86 "resinfoman.cpp"
 var $36=(($35+((($34)*(80))&-1))|0); //@line 86 "resinfoman.cpp"
 var $37=$36; //@line 86 "resinfoman.cpp"
 _memset($37, 0, 80)|0; //@line 86 "resinfoman.cpp"
 var $38=$lstate; //@line 88 "resinfoman.cpp"
 _lua_pushnil($38); //@line 88 "resinfoman.cpp"
 $i=0; //@line 89 "resinfoman.cpp"
 label=6;break; //@line 90 "resinfoman.cpp"
 case 6: 
 var $40=$lstate; //@line 90 "resinfoman.cpp"
 var $41=_lua_next($40,-2); //@line 90 "resinfoman.cpp"
 var $42=($41|0)!=0; //@line 90 "resinfoman.cpp"
 if($42){label=7;break;}else{label=20;break;} //@line 90 "resinfoman.cpp"
 case 7: 
 var $44=$lstate; //@line 106 "resinfoman.cpp"
 var $45=_lua_pushstring($44,6648); //@line 106 "resinfoman.cpp"
 var $46=$lstate; //@line 107 "resinfoman.cpp"
 _lua_gettable($46,-2); //@line 107 "resinfoman.cpp"
 var $47=$lstate; //@line 108 "resinfoman.cpp"
 var $48=_lua_type($47,-1); //@line 108 "resinfoman.cpp"
 var $49=($48|0)==0; //@line 108 "resinfoman.cpp"
 if($49){label=8;break;}else{label=9;break;} //@line 108 "resinfoman.cpp"
 case 8: 
 $framename=0; //@line 109 "resinfoman.cpp"
 label=10;break; //@line 110 "resinfoman.cpp"
 case 9: 
 var $52=$lstate; //@line 111 "resinfoman.cpp"
 var $53=_lua_tolstring($52,-1,0); //@line 111 "resinfoman.cpp"
 $str=$53; //@line 111 "resinfoman.cpp"
 var $54=$str; //@line 112 "resinfoman.cpp"
 var $55=_strlen($54); //@line 112 "resinfoman.cpp"
 var $56=((($55)+(1))|0); //@line 112 "resinfoman.cpp"
 var $57=__Znaj($56); //@line 112 "resinfoman.cpp"
 $framename=$57; //@line 112 "resinfoman.cpp"
 var $58=$framename; //@line 113 "resinfoman.cpp"
 var $59=$str; //@line 113 "resinfoman.cpp"
 var $60=_strcpy($58,$59); //@line 113 "resinfoman.cpp"
 var $61=$framename; //@line 114 "resinfoman.cpp"
 var $62=__ZN20massDeallocatorClass16addMemAllocationEPvb(20512,$61,0); //@line 114 "resinfoman.cpp"
 label=10;break;
 case 10: 
 var $64=$lstate; //@line 116 "resinfoman.cpp"
 _lua_settop($64,-2); //@line 116 "resinfoman.cpp"
 var $65=$lstate; //@line 118 "resinfoman.cpp"
 var $66=_lua_pushstring($65,5488); //@line 118 "resinfoman.cpp"
 var $67=$lstate; //@line 119 "resinfoman.cpp"
 _lua_gettable($67,-2); //@line 119 "resinfoman.cpp"
 var $68=$lstate; //@line 120 "resinfoman.cpp"
 var $69=_lua_type($68,-1); //@line 120 "resinfoman.cpp"
 var $70=($69|0)==0; //@line 120 "resinfoman.cpp"
 if($70){label=11;break;}else{label=12;break;} //@line 120 "resinfoman.cpp"
 case 11: 
 $resname=0; //@line 121 "resinfoman.cpp"
 label=13;break; //@line 122 "resinfoman.cpp"
 case 12: 
 var $73=$lstate; //@line 123 "resinfoman.cpp"
 var $74=_lua_tolstring($73,-1,0); //@line 123 "resinfoman.cpp"
 $str1=$74; //@line 123 "resinfoman.cpp"
 var $75=$str1; //@line 124 "resinfoman.cpp"
 var $76=_strlen($75); //@line 124 "resinfoman.cpp"
 var $77=((($76)+(1))|0); //@line 124 "resinfoman.cpp"
 var $78=__Znaj($77); //@line 124 "resinfoman.cpp"
 $resname=$78; //@line 124 "resinfoman.cpp"
 var $79=$resname; //@line 125 "resinfoman.cpp"
 var $80=$str1; //@line 125 "resinfoman.cpp"
 var $81=_strcpy($79,$80); //@line 125 "resinfoman.cpp"
 var $82=$resname; //@line 126 "resinfoman.cpp"
 var $83=__ZN20massDeallocatorClass16addMemAllocationEPvb(20512,$82,0); //@line 126 "resinfoman.cpp"
 label=13;break;
 case 13: 
 var $85=$lstate; //@line 128 "resinfoman.cpp"
 _lua_settop($85,-2); //@line 128 "resinfoman.cpp"
 var $86=$lstate; //@line 130 "resinfoman.cpp"
 var $87=_lua_pushstring($86,4728); //@line 130 "resinfoman.cpp"
 var $88=$lstate; //@line 131 "resinfoman.cpp"
 _lua_gettable($88,-2); //@line 131 "resinfoman.cpp"
 var $89=$lstate; //@line 132 "resinfoman.cpp"
 var $90=_lua_type($89,-1); //@line 132 "resinfoman.cpp"
 var $91=($90|0)==0; //@line 132 "resinfoman.cpp"
 if($91){label=14;break;}else{label=15;break;} //@line 132 "resinfoman.cpp"
 case 14: 
 $eventname=0; //@line 133 "resinfoman.cpp"
 label=16;break; //@line 134 "resinfoman.cpp"
 case 15: 
 var $94=$lstate; //@line 135 "resinfoman.cpp"
 var $95=_lua_tolstring($94,-1,0); //@line 135 "resinfoman.cpp"
 $str2=$95; //@line 135 "resinfoman.cpp"
 var $96=$str2; //@line 136 "resinfoman.cpp"
 var $97=_strlen($96); //@line 136 "resinfoman.cpp"
 var $98=((($97)+(1))|0); //@line 136 "resinfoman.cpp"
 var $99=__Znaj($98); //@line 136 "resinfoman.cpp"
 $eventname=$99; //@line 136 "resinfoman.cpp"
 var $100=$eventname; //@line 137 "resinfoman.cpp"
 var $101=$str2; //@line 137 "resinfoman.cpp"
 var $102=_strcpy($100,$101); //@line 137 "resinfoman.cpp"
 var $103=$eventname; //@line 138 "resinfoman.cpp"
 var $104=__ZN20massDeallocatorClass16addMemAllocationEPvb(20512,$103,0); //@line 138 "resinfoman.cpp"
 label=16;break;
 case 16: 
 var $106=$lstate; //@line 140 "resinfoman.cpp"
 _lua_settop($106,-2); //@line 140 "resinfoman.cpp"
 var $107=$lstate; //@line 142 "resinfoman.cpp"
 var $108=_lua_pushstring($107,3992); //@line 142 "resinfoman.cpp"
 var $109=$lstate; //@line 143 "resinfoman.cpp"
 _lua_gettable($109,-2); //@line 143 "resinfoman.cpp"
 var $110=$lstate; //@line 144 "resinfoman.cpp"
 var $111=_lua_type($110,-1); //@line 144 "resinfoman.cpp"
 var $112=($111|0)==0; //@line 144 "resinfoman.cpp"
 if($112){label=17;break;}else{label=18;break;} //@line 144 "resinfoman.cpp"
 case 17: 
 $groupname=0; //@line 145 "resinfoman.cpp"
 label=19;break; //@line 146 "resinfoman.cpp"
 case 18: 
 var $115=$lstate; //@line 147 "resinfoman.cpp"
 var $116=_lua_tolstring($115,-1,0); //@line 147 "resinfoman.cpp"
 $str3=$116; //@line 147 "resinfoman.cpp"
 var $117=$str3; //@line 148 "resinfoman.cpp"
 var $118=_strlen($117); //@line 148 "resinfoman.cpp"
 var $119=((($118)+(1))|0); //@line 148 "resinfoman.cpp"
 var $120=__Znaj($119); //@line 148 "resinfoman.cpp"
 $groupname=$120; //@line 148 "resinfoman.cpp"
 var $121=$groupname; //@line 149 "resinfoman.cpp"
 var $122=$str3; //@line 149 "resinfoman.cpp"
 var $123=_strcpy($121,$122); //@line 149 "resinfoman.cpp"
 var $124=$groupname; //@line 150 "resinfoman.cpp"
 var $125=__ZN20massDeallocatorClass16addMemAllocationEPvb(20512,$124,0); //@line 150 "resinfoman.cpp"
 label=19;break;
 case 19: 
 var $127=$lstate; //@line 152 "resinfoman.cpp"
 _lua_settop($127,-2); //@line 152 "resinfoman.cpp"
 $value=$x; //@line 154 "resinfoman.cpp"
 var $128=$lstate; //@line 155 "resinfoman.cpp"
 var $129=_lua_pushstring($128,3248); //@line 155 "resinfoman.cpp"
 var $130=$lstate; //@line 156 "resinfoman.cpp"
 _lua_gettable($130,-2); //@line 156 "resinfoman.cpp"
 var $131=$lstate; //@line 157 "resinfoman.cpp"
 var $132=_lua_tonumberx($131,-1,0); //@line 157 "resinfoman.cpp"
 var $133=(($132)&-1); //@line 157 "resinfoman.cpp"
 var $134=$value; //@line 157 "resinfoman.cpp"
 HEAP32[(($134)>>2)]=$133; //@line 157 "resinfoman.cpp"
 var $135=$lstate; //@line 158 "resinfoman.cpp"
 _lua_settop($135,-2); //@line 158 "resinfoman.cpp"
 $value=$y; //@line 160 "resinfoman.cpp"
 var $136=$lstate; //@line 161 "resinfoman.cpp"
 var $137=_lua_pushstring($136,2648); //@line 161 "resinfoman.cpp"
 var $138=$lstate; //@line 162 "resinfoman.cpp"
 _lua_gettable($138,-2); //@line 162 "resinfoman.cpp"
 var $139=$lstate; //@line 163 "resinfoman.cpp"
 var $140=_lua_tonumberx($139,-1,0); //@line 163 "resinfoman.cpp"
 var $141=(($140)&-1); //@line 163 "resinfoman.cpp"
 var $142=$value; //@line 163 "resinfoman.cpp"
 HEAP32[(($142)>>2)]=$141; //@line 163 "resinfoman.cpp"
 var $143=$lstate; //@line 164 "resinfoman.cpp"
 _lua_settop($143,-2); //@line 164 "resinfoman.cpp"
 $value=$w; //@line 166 "resinfoman.cpp"
 var $144=$lstate; //@line 167 "resinfoman.cpp"
 var $145=_lua_pushstring($144,16144); //@line 167 "resinfoman.cpp"
 var $146=$lstate; //@line 168 "resinfoman.cpp"
 _lua_gettable($146,-2); //@line 168 "resinfoman.cpp"
 var $147=$lstate; //@line 169 "resinfoman.cpp"
 var $148=_lua_tonumberx($147,-1,0); //@line 169 "resinfoman.cpp"
 var $149=(($148)&-1); //@line 169 "resinfoman.cpp"
 var $150=$value; //@line 169 "resinfoman.cpp"
 HEAP32[(($150)>>2)]=$149; //@line 169 "resinfoman.cpp"
 var $151=$lstate; //@line 170 "resinfoman.cpp"
 _lua_settop($151,-2); //@line 170 "resinfoman.cpp"
 $value=$h; //@line 172 "resinfoman.cpp"
 var $152=$lstate; //@line 173 "resinfoman.cpp"
 var $153=_lua_pushstring($152,15544); //@line 173 "resinfoman.cpp"
 var $154=$lstate; //@line 174 "resinfoman.cpp"
 _lua_gettable($154,-2); //@line 174 "resinfoman.cpp"
 var $155=$lstate; //@line 175 "resinfoman.cpp"
 var $156=_lua_tonumberx($155,-1,0); //@line 175 "resinfoman.cpp"
 var $157=(($156)&-1); //@line 175 "resinfoman.cpp"
 var $158=$value; //@line 175 "resinfoman.cpp"
 HEAP32[(($158)>>2)]=$157; //@line 175 "resinfoman.cpp"
 var $159=$lstate; //@line 176 "resinfoman.cpp"
 _lua_settop($159,-2); //@line 176 "resinfoman.cpp"
 $value=$cx; //@line 178 "resinfoman.cpp"
 var $160=$lstate; //@line 179 "resinfoman.cpp"
 var $161=_lua_pushstring($160,15072); //@line 179 "resinfoman.cpp"
 var $162=$lstate; //@line 180 "resinfoman.cpp"
 _lua_gettable($162,-2); //@line 180 "resinfoman.cpp"
 var $163=$lstate; //@line 181 "resinfoman.cpp"
 var $164=_lua_tonumberx($163,-1,0); //@line 181 "resinfoman.cpp"
 var $165=(($164)&-1); //@line 181 "resinfoman.cpp"
 var $166=$value; //@line 181 "resinfoman.cpp"
 HEAP32[(($166)>>2)]=$165; //@line 181 "resinfoman.cpp"
 var $167=$lstate; //@line 182 "resinfoman.cpp"
 _lua_settop($167,-2); //@line 182 "resinfoman.cpp"
 $value=$cy; //@line 184 "resinfoman.cpp"
 var $168=$lstate; //@line 185 "resinfoman.cpp"
 var $169=_lua_pushstring($168,14576); //@line 185 "resinfoman.cpp"
 var $170=$lstate; //@line 186 "resinfoman.cpp"
 _lua_gettable($170,-2); //@line 186 "resinfoman.cpp"
 var $171=$lstate; //@line 187 "resinfoman.cpp"
 var $172=_lua_tonumberx($171,-1,0); //@line 187 "resinfoman.cpp"
 var $173=(($172)&-1); //@line 187 "resinfoman.cpp"
 var $174=$value; //@line 187 "resinfoman.cpp"
 HEAP32[(($174)>>2)]=$173; //@line 187 "resinfoman.cpp"
 var $175=$lstate; //@line 188 "resinfoman.cpp"
 _lua_settop($175,-2); //@line 188 "resinfoman.cpp"
 $value=$cw; //@line 190 "resinfoman.cpp"
 var $176=$lstate; //@line 191 "resinfoman.cpp"
 var $177=_lua_pushstring($176,14176); //@line 191 "resinfoman.cpp"
 var $178=$lstate; //@line 192 "resinfoman.cpp"
 _lua_gettable($178,-2); //@line 192 "resinfoman.cpp"
 var $179=$lstate; //@line 193 "resinfoman.cpp"
 var $180=_lua_tonumberx($179,-1,0); //@line 193 "resinfoman.cpp"
 var $181=(($180)&-1); //@line 193 "resinfoman.cpp"
 var $182=$value; //@line 193 "resinfoman.cpp"
 HEAP32[(($182)>>2)]=$181; //@line 193 "resinfoman.cpp"
 var $183=$lstate; //@line 194 "resinfoman.cpp"
 _lua_settop($183,-2); //@line 194 "resinfoman.cpp"
 $value=$ch; //@line 196 "resinfoman.cpp"
 var $184=$lstate; //@line 197 "resinfoman.cpp"
 var $185=_lua_pushstring($184,13896); //@line 197 "resinfoman.cpp"
 var $186=$lstate; //@line 198 "resinfoman.cpp"
 _lua_gettable($186,-2); //@line 198 "resinfoman.cpp"
 var $187=$lstate; //@line 199 "resinfoman.cpp"
 var $188=_lua_tonumberx($187,-1,0); //@line 199 "resinfoman.cpp"
 var $189=(($188)&-1); //@line 199 "resinfoman.cpp"
 var $190=$value; //@line 199 "resinfoman.cpp"
 HEAP32[(($190)>>2)]=$189; //@line 199 "resinfoman.cpp"
 var $191=$lstate; //@line 200 "resinfoman.cpp"
 _lua_settop($191,-2); //@line 200 "resinfoman.cpp"
 $value=$hx; //@line 202 "resinfoman.cpp"
 var $192=$lstate; //@line 203 "resinfoman.cpp"
 var $193=_lua_pushstring($192,13616); //@line 203 "resinfoman.cpp"
 var $194=$lstate; //@line 204 "resinfoman.cpp"
 _lua_gettable($194,-2); //@line 204 "resinfoman.cpp"
 var $195=$lstate; //@line 205 "resinfoman.cpp"
 var $196=_lua_tonumberx($195,-1,0); //@line 205 "resinfoman.cpp"
 var $197=(($196)&-1); //@line 205 "resinfoman.cpp"
 var $198=$value; //@line 205 "resinfoman.cpp"
 HEAP32[(($198)>>2)]=$197; //@line 205 "resinfoman.cpp"
 var $199=$lstate; //@line 206 "resinfoman.cpp"
 _lua_settop($199,-2); //@line 206 "resinfoman.cpp"
 $value=$hy; //@line 208 "resinfoman.cpp"
 var $200=$lstate; //@line 209 "resinfoman.cpp"
 var $201=_lua_pushstring($200,13296); //@line 209 "resinfoman.cpp"
 var $202=$lstate; //@line 210 "resinfoman.cpp"
 _lua_gettable($202,-2); //@line 210 "resinfoman.cpp"
 var $203=$lstate; //@line 211 "resinfoman.cpp"
 var $204=_lua_tonumberx($203,-1,0); //@line 211 "resinfoman.cpp"
 var $205=(($204)&-1); //@line 211 "resinfoman.cpp"
 var $206=$value; //@line 211 "resinfoman.cpp"
 HEAP32[(($206)>>2)]=$205; //@line 211 "resinfoman.cpp"
 var $207=$lstate; //@line 212 "resinfoman.cpp"
 _lua_settop($207,-2); //@line 212 "resinfoman.cpp"
 $value=$sx; //@line 214 "resinfoman.cpp"
 var $208=$lstate; //@line 215 "resinfoman.cpp"
 var $209=_lua_pushstring($208,13072); //@line 215 "resinfoman.cpp"
 var $210=$lstate; //@line 216 "resinfoman.cpp"
 _lua_gettable($210,-2); //@line 216 "resinfoman.cpp"
 var $211=$lstate; //@line 217 "resinfoman.cpp"
 var $212=_lua_tonumberx($211,-1,0); //@line 217 "resinfoman.cpp"
 var $213=(($212)&-1); //@line 217 "resinfoman.cpp"
 var $214=$value; //@line 217 "resinfoman.cpp"
 HEAP32[(($214)>>2)]=$213; //@line 217 "resinfoman.cpp"
 var $215=$lstate; //@line 218 "resinfoman.cpp"
 _lua_settop($215,-2); //@line 218 "resinfoman.cpp"
 $value=$sy; //@line 220 "resinfoman.cpp"
 var $216=$lstate; //@line 221 "resinfoman.cpp"
 var $217=_lua_pushstring($216,12776); //@line 221 "resinfoman.cpp"
 var $218=$lstate; //@line 222 "resinfoman.cpp"
 _lua_gettable($218,-2); //@line 222 "resinfoman.cpp"
 var $219=$lstate; //@line 223 "resinfoman.cpp"
 var $220=_lua_tonumberx($219,-1,0); //@line 223 "resinfoman.cpp"
 var $221=(($220)&-1); //@line 223 "resinfoman.cpp"
 var $222=$value; //@line 223 "resinfoman.cpp"
 HEAP32[(($222)>>2)]=$221; //@line 223 "resinfoman.cpp"
 var $223=$lstate; //@line 224 "resinfoman.cpp"
 _lua_settop($223,-2); //@line 224 "resinfoman.cpp"
 $value=$ax; //@line 226 "resinfoman.cpp"
 var $224=$lstate; //@line 227 "resinfoman.cpp"
 var $225=_lua_pushstring($224,12496); //@line 227 "resinfoman.cpp"
 var $226=$lstate; //@line 228 "resinfoman.cpp"
 _lua_gettable($226,-2); //@line 228 "resinfoman.cpp"
 var $227=$lstate; //@line 229 "resinfoman.cpp"
 var $228=_lua_tonumberx($227,-1,0); //@line 229 "resinfoman.cpp"
 var $229=(($228)&-1); //@line 229 "resinfoman.cpp"
 var $230=$value; //@line 229 "resinfoman.cpp"
 HEAP32[(($230)>>2)]=$229; //@line 229 "resinfoman.cpp"
 var $231=$lstate; //@line 230 "resinfoman.cpp"
 _lua_settop($231,-2); //@line 230 "resinfoman.cpp"
 $value=$ay; //@line 232 "resinfoman.cpp"
 var $232=$lstate; //@line 233 "resinfoman.cpp"
 var $233=_lua_pushstring($232,12080); //@line 233 "resinfoman.cpp"
 var $234=$lstate; //@line 234 "resinfoman.cpp"
 _lua_gettable($234,-2); //@line 234 "resinfoman.cpp"
 var $235=$lstate; //@line 235 "resinfoman.cpp"
 var $236=_lua_tonumberx($235,-1,0); //@line 235 "resinfoman.cpp"
 var $237=(($236)&-1); //@line 235 "resinfoman.cpp"
 var $238=$value; //@line 235 "resinfoman.cpp"
 HEAP32[(($238)>>2)]=$237; //@line 235 "resinfoman.cpp"
 var $239=$lstate; //@line 236 "resinfoman.cpp"
 _lua_settop($239,-2); //@line 236 "resinfoman.cpp"
 $value=$aNF; //@line 238 "resinfoman.cpp"
 var $240=$lstate; //@line 239 "resinfoman.cpp"
 var $241=_lua_pushstring($240,11736); //@line 239 "resinfoman.cpp"
 var $242=$lstate; //@line 240 "resinfoman.cpp"
 _lua_gettable($242,-2); //@line 240 "resinfoman.cpp"
 var $243=$lstate; //@line 241 "resinfoman.cpp"
 var $244=_lua_tonumberx($243,-1,0); //@line 241 "resinfoman.cpp"
 var $245=(($244)&-1); //@line 241 "resinfoman.cpp"
 var $246=$value; //@line 241 "resinfoman.cpp"
 HEAP32[(($246)>>2)]=$245; //@line 241 "resinfoman.cpp"
 var $247=$lstate; //@line 242 "resinfoman.cpp"
 _lua_settop($247,-2); //@line 242 "resinfoman.cpp"
 var $248=$lstate; //@line 244 "resinfoman.cpp"
 var $249=_lua_pushstring($248,11240); //@line 244 "resinfoman.cpp"
 var $250=$lstate; //@line 245 "resinfoman.cpp"
 _lua_gettable($250,-2); //@line 245 "resinfoman.cpp"
 var $251=$lstate; //@line 246 "resinfoman.cpp"
 var $252=_lua_tonumberx($251,-1,0); //@line 246 "resinfoman.cpp"
 $aSVT=$252; //@line 246 "resinfoman.cpp"
 var $253=$lstate; //@line 247 "resinfoman.cpp"
 _lua_settop($253,-2); //@line 247 "resinfoman.cpp"
 var $254=(($frTemp)|0); //@line 261 "resinfoman.cpp"
 var $255=$framename; //@line 261 "resinfoman.cpp"
 HEAP32[(($254)>>2)]=$255; //@line 261 "resinfoman.cpp"
 var $256=(($frTemp+4)|0); //@line 261 "resinfoman.cpp"
 var $257=$resname; //@line 250 "resinfoman.cpp"
 var $258=__Z24getSurfaceByResourceNamePc($257); //@line 250 "resinfoman.cpp"
 var $259=$258; //@line 250 "resinfoman.cpp"
 HEAP32[(($256)>>2)]=$259; //@line 250 "resinfoman.cpp"
 var $260=(($frTemp+8)|0); //@line 250 "resinfoman.cpp"
 var $261=HEAP32[(($x)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($260)>>2)]=$261; //@line 250 "resinfoman.cpp"
 var $262=(($frTemp+12)|0); //@line 250 "resinfoman.cpp"
 var $263=HEAP32[(($y)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($262)>>2)]=$263; //@line 250 "resinfoman.cpp"
 var $264=(($frTemp+16)|0); //@line 250 "resinfoman.cpp"
 var $265=HEAP32[(($w)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($264)>>2)]=$265; //@line 250 "resinfoman.cpp"
 var $266=(($frTemp+20)|0); //@line 250 "resinfoman.cpp"
 var $267=HEAP32[(($h)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($266)>>2)]=$267; //@line 250 "resinfoman.cpp"
 var $268=(($frTemp+24)|0); //@line 250 "resinfoman.cpp"
 var $269=HEAP32[(($cx)>>2)]; //@line 250 "resinfoman.cpp"
 var $270=HEAP32[(($x)>>2)]; //@line 250 "resinfoman.cpp"
 var $271=((($269)-($270))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($268)>>2)]=$271; //@line 250 "resinfoman.cpp"
 var $272=(($frTemp+28)|0); //@line 250 "resinfoman.cpp"
 var $273=HEAP32[(($cy)>>2)]; //@line 250 "resinfoman.cpp"
 var $274=HEAP32[(($y)>>2)]; //@line 250 "resinfoman.cpp"
 var $275=((($273)-($274))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($272)>>2)]=$275; //@line 250 "resinfoman.cpp"
 var $276=(($frTemp+32)|0); //@line 250 "resinfoman.cpp"
 var $277=HEAP32[(($cw)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($276)>>2)]=$277; //@line 250 "resinfoman.cpp"
 var $278=(($frTemp+36)|0); //@line 250 "resinfoman.cpp"
 var $279=HEAP32[(($ch)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($278)>>2)]=$279; //@line 250 "resinfoman.cpp"
 var $280=(($frTemp+40)|0); //@line 250 "resinfoman.cpp"
 var $281=HEAP32[(($hx)>>2)]; //@line 250 "resinfoman.cpp"
 var $282=HEAP32[(($x)>>2)]; //@line 250 "resinfoman.cpp"
 var $283=((($281)-($282))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($280)>>2)]=$283; //@line 250 "resinfoman.cpp"
 var $284=(($frTemp+44)|0); //@line 250 "resinfoman.cpp"
 var $285=HEAP32[(($hy)>>2)]; //@line 250 "resinfoman.cpp"
 var $286=HEAP32[(($y)>>2)]; //@line 250 "resinfoman.cpp"
 var $287=((($285)-($286))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($284)>>2)]=$287; //@line 250 "resinfoman.cpp"
 var $288=(($frTemp+48)|0); //@line 250 "resinfoman.cpp"
 var $289=HEAP32[(($sx)>>2)]; //@line 250 "resinfoman.cpp"
 var $290=HEAP32[(($hx)>>2)]; //@line 250 "resinfoman.cpp"
 var $291=((($289)-($290))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($288)>>2)]=$291; //@line 250 "resinfoman.cpp"
 var $292=(($frTemp+52)|0); //@line 250 "resinfoman.cpp"
 var $293=HEAP32[(($sy)>>2)]; //@line 250 "resinfoman.cpp"
 var $294=HEAP32[(($hy)>>2)]; //@line 250 "resinfoman.cpp"
 var $295=((($293)-($294))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($292)>>2)]=$295; //@line 250 "resinfoman.cpp"
 var $296=(($frTemp+56)|0); //@line 250 "resinfoman.cpp"
 var $297=HEAP32[(($ax)>>2)]; //@line 250 "resinfoman.cpp"
 var $298=HEAP32[(($hx)>>2)]; //@line 250 "resinfoman.cpp"
 var $299=((($297)-($298))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($296)>>2)]=$299; //@line 250 "resinfoman.cpp"
 var $300=(($frTemp+60)|0); //@line 250 "resinfoman.cpp"
 var $301=HEAP32[(($ay)>>2)]; //@line 250 "resinfoman.cpp"
 var $302=HEAP32[(($hy)>>2)]; //@line 250 "resinfoman.cpp"
 var $303=((($301)-($302))|0); //@line 250 "resinfoman.cpp"
 HEAP32[(($300)>>2)]=$303; //@line 250 "resinfoman.cpp"
 var $304=(($frTemp+64)|0); //@line 250 "resinfoman.cpp"
 var $305=HEAP32[(($aNF)>>2)]; //@line 250 "resinfoman.cpp"
 HEAP32[(($304)>>2)]=$305; //@line 250 "resinfoman.cpp"
 var $306=(($frTemp+68)|0); //@line 250 "resinfoman.cpp"
 var $307=$aSVT; //@line 250 "resinfoman.cpp"
 var $308=HEAP32[((2136)>>2)]; //@line 250 "resinfoman.cpp"
 var $309=($308|0); //@line 250 "resinfoman.cpp"
 var $310=($307)*($309); //@line 250 "resinfoman.cpp"
 var $311=(($310)&-1); //@line 250 "resinfoman.cpp"
 HEAP32[(($306)>>2)]=$311; //@line 250 "resinfoman.cpp"
 var $312=(($frTemp+72)|0); //@line 250 "resinfoman.cpp"
 var $313=$eventname; //@line 250 "resinfoman.cpp"
 HEAP32[(($312)>>2)]=$313; //@line 250 "resinfoman.cpp"
 var $314=(($frTemp+76)|0); //@line 250 "resinfoman.cpp"
 var $315=$groupname; //@line 250 "resinfoman.cpp"
 HEAP32[(($314)>>2)]=$315; //@line 250 "resinfoman.cpp"
 var $316=$i; //@line 262 "resinfoman.cpp"
 var $317=$frData; //@line 262 "resinfoman.cpp"
 var $318=(($317+((($316)*(80))&-1))|0); //@line 262 "resinfoman.cpp"
 var $319=$318; //@line 262 "resinfoman.cpp"
 var $320=$frTemp; //@line 262 "resinfoman.cpp"
 assert(80 % 1 === 0);(_memcpy($319, $320, 80)|0); //@line 262 "resinfoman.cpp"
 var $321=$lstate; //@line 265 "resinfoman.cpp"
 _lua_settop($321,-2); //@line 265 "resinfoman.cpp"
 var $322=$i; //@line 266 "resinfoman.cpp"
 var $323=((($322)+(1))|0); //@line 266 "resinfoman.cpp"
 $i=$323; //@line 266 "resinfoman.cpp"
 label=6;break; //@line 267 "resinfoman.cpp"
 case 20: 
 var $325=$lstate; //@line 270 "resinfoman.cpp"
 _lua_settop($325,-2); //@line 270 "resinfoman.cpp"
 var $326=$curr; //@line 272 "resinfoman.cpp"
 var $327=__Z22getFrameListNodeByNamePc($326); //@line 272 "resinfoman.cpp"
 $listNode=$327; //@line 272 "resinfoman.cpp"
 var $328=$listNode; //@line 273 "resinfoman.cpp"
 var $329=($328|0)==0; //@line 273 "resinfoman.cpp"
 if($329){label=21;break;}else{label=22;break;} //@line 273 "resinfoman.cpp"
 case 21: 
 var $331=$curr; //@line 275 "resinfoman.cpp"
 var $332=__ZN14conLoggerClass7logLineEPcbbbz(19416,10824,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$331,tempVarArgs)); STACKTOP=tempVarArgs; //@line 275 "resinfoman.cpp"
 $1=0; //@line 277 "resinfoman.cpp"
 label=25;break; //@line 277 "resinfoman.cpp"
 case 22: 
 var $334=$frData; //@line 280 "resinfoman.cpp"
 var $335=$listNode; //@line 280 "resinfoman.cpp"
 var $336=(($335)|0); //@line 280 "resinfoman.cpp"
 HEAP32[(($336)>>2)]=$334; //@line 280 "resinfoman.cpp"
 var $337=$size; //@line 281 "resinfoman.cpp"
 var $338=$listNode; //@line 281 "resinfoman.cpp"
 var $339=(($338+8)|0); //@line 281 "resinfoman.cpp"
 HEAP32[(($339)>>2)]=$337; //@line 281 "resinfoman.cpp"
 label=23;break;
 case 23: 
 var $341=$lstate; //@line 285 "resinfoman.cpp"
 _lua_settop($341,-2); //@line 285 "resinfoman.cpp"
 label=4;break; //@line 286 "resinfoman.cpp"
 case 24: 
 var $343=$lstate; //@line 289 "resinfoman.cpp"
 _lua_settop($343,-2); //@line 289 "resinfoman.cpp"
 $1=1; //@line 291 "resinfoman.cpp"
 label=25;break; //@line 291 "resinfoman.cpp"
 case 25: 
 var $345=$1; //@line 292 "resinfoman.cpp"
 STACKTOP=sp;return $345; //@line 292 "resinfoman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18closeResourcesInfov(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=__ZN20massDeallocatorClass7isReadyEv(20512); //@line 301 "resinfoman.cpp"
 if($2){label=2;break;}else{label=5;break;} //@line 301 "resinfoman.cpp"
 case 2: 
 var $4=__ZN20massDeallocatorClass14massDeallocateEv(20512); //@line 303 "resinfoman.cpp"
 if($4){label=4;break;}else{label=3;break;} //@line 303 "resinfoman.cpp"
 case 3: 
 var $6=__ZN14conLoggerClass7logLineEPcbbbz(19416,10456,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 304 "resinfoman.cpp"
 $1=0; //@line 305 "resinfoman.cpp"
 label=6;break; //@line 305 "resinfoman.cpp"
 case 4: 
 var $8=__ZN20massDeallocatorClass5closeEv(20512); //@line 309 "resinfoman.cpp"
 label=5;break; //@line 310 "resinfoman.cpp"
 case 5: 
 $1=1; //@line 312 "resinfoman.cpp"
 label=6;break; //@line 312 "resinfoman.cpp"
 case 6: 
 var $11=$1; //@line 313 "resinfoman.cpp"
 STACKTOP=sp;return $11; //@line 313 "resinfoman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20massDeallocatorClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 67 "./massDeallocator.h"
 HEAP32[(($3)>>2)]=16632; //@line 67 "./massDeallocator.h"
 var $4=(($2+8)|0); //@line 67 "./massDeallocator.h"
 HEAP8[($4)]=0; //@line 67 "./massDeallocator.h"
 STACKTOP=sp;return; //@line 67 "./massDeallocator.h"
}


function __GLOBAL__I_a367(){
 var label=0;


 ___cxx_global_var_init362(); //@line 67 "resinfoman.cpp"
 return; //@line 67 "resinfoman.cpp"
}


function __Z14setUpResources16programZonesEnum($programZone){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ptrObj;
 var $resource;
 var $thisResourceExcepted;
 $2=$programZone;
 $ptrObj=18608; //@line 56 "resmanager.cpp"
 label=2;break; //@line 56 "resmanager.cpp"
 case 2: 
 var $4=$ptrObj; //@line 56 "resmanager.cpp"
 var $5=HEAP32[((344)>>2)]; //@line 56 "resmanager.cpp"
 var $6=((18608+((($5)*(28))&-1))|0); //@line 56 "resmanager.cpp"
 var $7=($4>>>0)<($6>>>0); //@line 56 "resmanager.cpp"
 if($7){label=3;break;}else{label=18;break;} //@line 56 "resmanager.cpp"
 case 3: 
 var $9=$ptrObj; //@line 59 "resmanager.cpp"
 var $10=(($9)|0); //@line 59 "resmanager.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 59 "resmanager.cpp"
 $resource=$11; //@line 59 "resmanager.cpp"
 var $12=$resource; //@line 61 "resmanager.cpp"
 var $13=$12; //@line 61 "resmanager.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 61 "resmanager.cpp"
 var $15=(($14+12)|0); //@line 61 "resmanager.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 61 "resmanager.cpp"
 var $17=FUNCTION_TABLE[$16]($12); //@line 61 "resmanager.cpp"
 if($17){label=4;break;}else{label=16;break;} //@line 61 "resmanager.cpp"
 case 4: 
 var $19=$2; //@line 61 "resmanager.cpp"
 var $20=($19|0)==0; //@line 61 "resmanager.cpp"
 if($20){label=6;break;}else{label=5;break;} //@line 61 "resmanager.cpp"
 case 5: 
 var $22=$ptrObj; //@line 61 "resmanager.cpp"
 var $23=(($22+25)|0); //@line 61 "resmanager.cpp"
 var $24=HEAP8[($23)]; //@line 61 "resmanager.cpp"
 var $25=(($24)&1); //@line 61 "resmanager.cpp"
 if($25){label=16;break;}else{label=6;break;} //@line 61 "resmanager.cpp"
 case 6: 
 var $27=$ptrObj; //@line 65 "resmanager.cpp"
 var $28=(($27+26)|0); //@line 65 "resmanager.cpp"
 var $29=HEAP8[($28)]; //@line 65 "resmanager.cpp"
 var $30=(($29)&1); //@line 65 "resmanager.cpp"
 if($30){label=7;break;}else{label=10;break;} //@line 65 "resmanager.cpp"
 case 7: 
 var $32=$resource; //@line 67 "resmanager.cpp"
 var $33=$32; //@line 67 "resmanager.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 67 "resmanager.cpp"
 var $35=(($34+32)|0); //@line 67 "resmanager.cpp"
 var $36=HEAP32[(($35)>>2)]; //@line 67 "resmanager.cpp"
 var $37=FUNCTION_TABLE[$36]($32); //@line 67 "resmanager.cpp"
 if($37){label=9;break;}else{label=8;break;} //@line 67 "resmanager.cpp"
 case 8: 
 var $39=$resource; //@line 72 "resmanager.cpp"
 var $40=$39; //@line 72 "resmanager.cpp"
 var $41=HEAP32[(($40)>>2)]; //@line 72 "resmanager.cpp"
 var $42=(($41+20)|0); //@line 72 "resmanager.cpp"
 var $43=HEAP32[(($42)>>2)]; //@line 72 "resmanager.cpp"
 var $44=FUNCTION_TABLE[$43]($39); //@line 72 "resmanager.cpp"
 var $45=$2; //@line 72 "resmanager.cpp"
 var $46=__ZN14conLoggerClass7logLineEPcbbbz(19416,7944,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$44,HEAP32[(((tempVarArgs)+(8))>>2)]=$45,tempVarArgs)); STACKTOP=tempVarArgs; //@line 72 "resmanager.cpp"
 $1=0; //@line 73 "resmanager.cpp"
 label=37;break; //@line 73 "resmanager.cpp"
 case 9: 
 label=15;break; //@line 75 "resmanager.cpp"
 case 10: 
 var $49=$ptrObj; //@line 78 "resmanager.cpp"
 var $50=$2; //@line 78 "resmanager.cpp"
 var $51=__Z24isResObjectInProgramZoneP19resObjectDataStruct16programZonesEnum($49,$50); //@line 78 "resmanager.cpp"
 if($51){label=14;break;}else{label=11;break;} //@line 78 "resmanager.cpp"
 case 11: 
 var $53=$resource; //@line 79 "resmanager.cpp"
 var $54=$53; //@line 79 "resmanager.cpp"
 var $55=HEAP32[(($54)>>2)]; //@line 79 "resmanager.cpp"
 var $56=(($55+32)|0); //@line 79 "resmanager.cpp"
 var $57=HEAP32[(($56)>>2)]; //@line 79 "resmanager.cpp"
 var $58=FUNCTION_TABLE[$57]($53); //@line 79 "resmanager.cpp"
 if($58){label=13;break;}else{label=12;break;} //@line 79 "resmanager.cpp"
 case 12: 
 var $60=$resource; //@line 84 "resmanager.cpp"
 var $61=$60; //@line 84 "resmanager.cpp"
 var $62=HEAP32[(($61)>>2)]; //@line 84 "resmanager.cpp"
 var $63=(($62+20)|0); //@line 84 "resmanager.cpp"
 var $64=HEAP32[(($63)>>2)]; //@line 84 "resmanager.cpp"
 var $65=FUNCTION_TABLE[$64]($60); //@line 84 "resmanager.cpp"
 var $66=$2; //@line 84 "resmanager.cpp"
 var $67=__ZN14conLoggerClass7logLineEPcbbbz(19416,7944,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$65,HEAP32[(((tempVarArgs)+(8))>>2)]=$66,tempVarArgs)); STACKTOP=tempVarArgs; //@line 84 "resmanager.cpp"
 $1=0; //@line 85 "resmanager.cpp"
 label=37;break; //@line 85 "resmanager.cpp"
 case 13: 
 label=14;break; //@line 87 "resmanager.cpp"
 case 14: 
 label=15;break;
 case 15: 
 label=16;break; //@line 89 "resmanager.cpp"
 case 16: 
 label=17;break; //@line 90 "resmanager.cpp"
 case 17: 
 var $73=$ptrObj; //@line 57 "resmanager.cpp"
 var $74=(($73+28)|0); //@line 57 "resmanager.cpp"
 $ptrObj=$74; //@line 57 "resmanager.cpp"
 label=2;break; //@line 57 "resmanager.cpp"
 case 18: 
 $ptrObj=18608; //@line 96 "resmanager.cpp"
 label=19;break; //@line 96 "resmanager.cpp"
 case 19: 
 var $77=$ptrObj; //@line 96 "resmanager.cpp"
 var $78=HEAP32[((344)>>2)]; //@line 96 "resmanager.cpp"
 var $79=((18608+((($78)*(28))&-1))|0); //@line 96 "resmanager.cpp"
 var $80=($77>>>0)<($79>>>0); //@line 96 "resmanager.cpp"
 if($80){label=20;break;}else{label=36;break;} //@line 96 "resmanager.cpp"
 case 20: 
 var $82=$ptrObj; //@line 99 "resmanager.cpp"
 var $83=(($82)|0); //@line 99 "resmanager.cpp"
 var $84=HEAP32[(($83)>>2)]; //@line 99 "resmanager.cpp"
 $resource=$84; //@line 99 "resmanager.cpp"
 var $85=$resource; //@line 100 "resmanager.cpp"
 var $86=$85; //@line 100 "resmanager.cpp"
 var $87=HEAP32[(($86)>>2)]; //@line 100 "resmanager.cpp"
 var $88=(($87+12)|0); //@line 100 "resmanager.cpp"
 var $89=HEAP32[(($88)>>2)]; //@line 100 "resmanager.cpp"
 var $90=FUNCTION_TABLE[$89]($85); //@line 100 "resmanager.cpp"
 if($90){label=34;break;}else{label=21;break;} //@line 100 "resmanager.cpp"
 case 21: 
 $thisResourceExcepted=0; //@line 103 "resmanager.cpp"
 var $92=$resource; //@line 107 "resmanager.cpp"
 var $93=$92; //@line 107 "resmanager.cpp"
 var $94=HEAP32[(($93)>>2)]; //@line 107 "resmanager.cpp"
 var $95=(($94+16)|0); //@line 107 "resmanager.cpp"
 var $96=HEAP32[(($95)>>2)]; //@line 107 "resmanager.cpp"
 var $97=FUNCTION_TABLE[$96]($92); //@line 107 "resmanager.cpp"
 var $98=($97|0)==2; //@line 107 "resmanager.cpp"
 if($98){label=23;break;}else{label=22;break;} //@line 107 "resmanager.cpp"
 case 22: 
 var $100=$resource; //@line 108 "resmanager.cpp"
 var $101=$100; //@line 108 "resmanager.cpp"
 var $102=HEAP32[(($101)>>2)]; //@line 108 "resmanager.cpp"
 var $103=(($102+16)|0); //@line 108 "resmanager.cpp"
 var $104=HEAP32[(($103)>>2)]; //@line 108 "resmanager.cpp"
 var $105=FUNCTION_TABLE[$104]($100); //@line 108 "resmanager.cpp"
 var $106=($105|0)==1; //@line 108 "resmanager.cpp"
 if($106){label=23;break;}else{label=25;break;} //@line 108 "resmanager.cpp"
 case 23: 
 var $108=HEAP8[(400)]; //@line 108 "resmanager.cpp"
 var $109=(($108)&1); //@line 108 "resmanager.cpp"
 if($109){label=25;break;}else{label=24;break;} //@line 108 "resmanager.cpp"
 case 24: 
 $thisResourceExcepted=1; //@line 111 "resmanager.cpp"
 label=25;break; //@line 112 "resmanager.cpp"
 case 25: 
 var $112=$ptrObj; //@line 117 "resmanager.cpp"
 var $113=$2; //@line 117 "resmanager.cpp"
 var $114=__Z24isResObjectInProgramZoneP19resObjectDataStruct16programZonesEnum($112,$113); //@line 117 "resmanager.cpp"
 if($114){label=26;break;}else{label=33;break;} //@line 117 "resmanager.cpp"
 case 26: 
 var $116=$thisResourceExcepted; //@line 117 "resmanager.cpp"
 var $117=(($116)&1); //@line 117 "resmanager.cpp"
 if($117){label=33;break;}else{label=27;break;} //@line 117 "resmanager.cpp"
 case 27: 
 var $119=$resource; //@line 120 "resmanager.cpp"
 var $120=$119; //@line 120 "resmanager.cpp"
 var $121=HEAP32[(($120)>>2)]; //@line 120 "resmanager.cpp"
 var $122=(($121+24)|0); //@line 120 "resmanager.cpp"
 var $123=HEAP32[(($122)>>2)]; //@line 120 "resmanager.cpp"
 var $124=FUNCTION_TABLE[$123]($119); //@line 120 "resmanager.cpp"
 if($124){label=32;break;}else{label=28;break;} //@line 120 "resmanager.cpp"
 case 28: 
 var $126=$ptrObj; //@line 123 "resmanager.cpp"
 var $127=(($126+24)|0); //@line 123 "resmanager.cpp"
 var $128=HEAP8[($127)]; //@line 123 "resmanager.cpp"
 var $129=(($128)&1); //@line 123 "resmanager.cpp"
 if($129){label=29;break;}else{label=30;break;} //@line 123 "resmanager.cpp"
 case 29: 
 var $131=$resource; //@line 128 "resmanager.cpp"
 var $132=$131; //@line 128 "resmanager.cpp"
 var $133=HEAP32[(($132)>>2)]; //@line 128 "resmanager.cpp"
 var $134=(($133+20)|0); //@line 128 "resmanager.cpp"
 var $135=HEAP32[(($134)>>2)]; //@line 128 "resmanager.cpp"
 var $136=FUNCTION_TABLE[$135]($131); //@line 128 "resmanager.cpp"
 var $137=$2; //@line 128 "resmanager.cpp"
 var $138=__ZN14conLoggerClass7logLineEPcbbbz(19416,14400,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$136,HEAP32[(((tempVarArgs)+(8))>>2)]=$137,tempVarArgs)); STACKTOP=tempVarArgs; //@line 128 "resmanager.cpp"
 $1=0; //@line 129 "resmanager.cpp"
 label=37;break; //@line 129 "resmanager.cpp"
 case 30: 
 var $140=$resource; //@line 135 "resmanager.cpp"
 var $141=$140; //@line 135 "resmanager.cpp"
 var $142=HEAP32[(($141)>>2)]; //@line 135 "resmanager.cpp"
 var $143=(($142+20)|0); //@line 135 "resmanager.cpp"
 var $144=HEAP32[(($143)>>2)]; //@line 135 "resmanager.cpp"
 var $145=FUNCTION_TABLE[$144]($140); //@line 135 "resmanager.cpp"
 var $146=$2; //@line 135 "resmanager.cpp"
 var $147=__ZN14conLoggerClass7logLineEPcbbbz(19416,11040,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$145,HEAP32[(((tempVarArgs)+(8))>>2)]=$146,tempVarArgs)); STACKTOP=tempVarArgs; //@line 135 "resmanager.cpp"
 label=31;break;
 case 31: 
 label=32;break; //@line 137 "resmanager.cpp"
 case 32: 
 label=33;break; //@line 138 "resmanager.cpp"
 case 33: 
 label=34;break; //@line 139 "resmanager.cpp"
 case 34: 
 label=35;break; //@line 140 "resmanager.cpp"
 case 35: 
 var $153=$ptrObj; //@line 97 "resmanager.cpp"
 var $154=(($153+28)|0); //@line 97 "resmanager.cpp"
 $ptrObj=$154; //@line 97 "resmanager.cpp"
 label=19;break; //@line 97 "resmanager.cpp"
 case 36: 
 $1=1; //@line 142 "resmanager.cpp"
 label=37;break; //@line 142 "resmanager.cpp"
 case 37: 
 var $157=$1; //@line 143 "resmanager.cpp"
 STACKTOP=sp;return $157; //@line 143 "resmanager.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClassC2EPcS0_bbbS0_bbbiiiiiii($this,$resName,$fileName,$allocateInTheFastestMemory,$useVideoMemory,$isFileOrResource,$resourceType,$isBMPorPCX,$isTransparent,$usesTransparentRGB,$transparentR,$transparentG,$transparentB,$xTransparent,$yTransparent,$desiredWidth,$desiredHeight){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $7;
 var $8;
 var $9;
 var $10;
 var $11;
 var $12;
 var $13;
 var $14;
 var $15;
 var $16;
 var $17;
 var $18;
 var $19;
 $1=$this;
 $2=$resName;
 $3=$fileName;
 var $20=($allocateInTheFastestMemory&1);
 $4=$20;
 var $21=($useVideoMemory&1);
 $5=$21;
 var $22=($isFileOrResource&1);
 $6=$22;
 $7=$resourceType;
 var $23=($isBMPorPCX&1);
 $8=$23;
 var $24=($isTransparent&1);
 $9=$24;
 var $25=($usesTransparentRGB&1);
 $10=$25;
 $11=$transparentR;
 $12=$transparentG;
 $13=$transparentB;
 $14=$xTransparent;
 $15=$yTransparent;
 $16=$desiredWidth;
 $17=$desiredHeight;
 var $26=$1;
 var $27=$26; //@line 48 "resobjects.cpp"
 __ZN13resourceClassC2Ev($27); //@line 48 "resobjects.cpp"
 var $28=$26; //@line 48 "resobjects.cpp"
 HEAP32[(($28)>>2)]=16688; //@line 48 "resobjects.cpp"
 var $29=(($26+8)|0); //@line 48 "resobjects.cpp"
 (function() { try { __THREW__ = 0; return __ZN13ddSpriteClassC1Ev($29) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 48 "resobjects.cpp"
 case 2: 
 var $31=$2; //@line 50 "resobjects.cpp"
 var $32=$26; //@line 50 "resobjects.cpp"
 var $33=(($32+4)|0); //@line 50 "resobjects.cpp"
 HEAP32[(($33)>>2)]=$31; //@line 50 "resobjects.cpp"
 var $34=$3; //@line 51 "resobjects.cpp"
 var $35=(($26+48)|0); //@line 51 "resobjects.cpp"
 HEAP32[(($35)>>2)]=$34; //@line 51 "resobjects.cpp"
 var $36=$4; //@line 52 "resobjects.cpp"
 var $37=(($36)&1); //@line 52 "resobjects.cpp"
 var $38=(($26+57)|0); //@line 52 "resobjects.cpp"
 var $39=($37&1); //@line 52 "resobjects.cpp"
 HEAP8[($38)]=$39; //@line 52 "resobjects.cpp"
 var $40=$5; //@line 53 "resobjects.cpp"
 var $41=(($40)&1); //@line 53 "resobjects.cpp"
 var $42=(($26+58)|0); //@line 53 "resobjects.cpp"
 var $43=($41&1); //@line 53 "resobjects.cpp"
 HEAP8[($42)]=$43; //@line 53 "resobjects.cpp"
 var $44=$6; //@line 54 "resobjects.cpp"
 var $45=(($44)&1); //@line 54 "resobjects.cpp"
 var $46=(($26+56)|0); //@line 54 "resobjects.cpp"
 var $47=($45&1); //@line 54 "resobjects.cpp"
 HEAP8[($46)]=$47; //@line 54 "resobjects.cpp"
 var $48=$7; //@line 55 "resobjects.cpp"
 var $49=(($26+52)|0); //@line 55 "resobjects.cpp"
 HEAP32[(($49)>>2)]=$48; //@line 55 "resobjects.cpp"
 var $50=$8; //@line 56 "resobjects.cpp"
 var $51=(($50)&1); //@line 56 "resobjects.cpp"
 var $52=(($26+59)|0); //@line 56 "resobjects.cpp"
 var $53=($51&1); //@line 56 "resobjects.cpp"
 HEAP8[($52)]=$53; //@line 56 "resobjects.cpp"
 var $54=$9; //@line 57 "resobjects.cpp"
 var $55=(($54)&1); //@line 57 "resobjects.cpp"
 var $56=(($26+60)|0); //@line 57 "resobjects.cpp"
 var $57=($55&1); //@line 57 "resobjects.cpp"
 HEAP8[($56)]=$57; //@line 57 "resobjects.cpp"
 var $58=$10; //@line 58 "resobjects.cpp"
 var $59=(($58)&1); //@line 58 "resobjects.cpp"
 var $60=(($26+61)|0); //@line 58 "resobjects.cpp"
 var $61=($59&1); //@line 58 "resobjects.cpp"
 HEAP8[($60)]=$61; //@line 58 "resobjects.cpp"
 var $62=$11; //@line 59 "resobjects.cpp"
 var $63=(($26+72)|0); //@line 59 "resobjects.cpp"
 HEAP32[(($63)>>2)]=$62; //@line 59 "resobjects.cpp"
 var $64=$12; //@line 60 "resobjects.cpp"
 var $65=(($26+76)|0); //@line 60 "resobjects.cpp"
 HEAP32[(($65)>>2)]=$64; //@line 60 "resobjects.cpp"
 var $66=$13; //@line 61 "resobjects.cpp"
 var $67=(($26+80)|0); //@line 61 "resobjects.cpp"
 HEAP32[(($67)>>2)]=$66; //@line 61 "resobjects.cpp"
 var $68=$14; //@line 62 "resobjects.cpp"
 var $69=(($26+64)|0); //@line 62 "resobjects.cpp"
 HEAP32[(($69)>>2)]=$68; //@line 62 "resobjects.cpp"
 var $70=$15; //@line 63 "resobjects.cpp"
 var $71=(($26+68)|0); //@line 63 "resobjects.cpp"
 HEAP32[(($71)>>2)]=$70; //@line 63 "resobjects.cpp"
 var $72=$16; //@line 64 "resobjects.cpp"
 var $73=(($26+84)|0); //@line 64 "resobjects.cpp"
 HEAP32[(($73)>>2)]=$72; //@line 64 "resobjects.cpp"
 var $74=$17; //@line 65 "resobjects.cpp"
 var $75=(($26+88)|0); //@line 65 "resobjects.cpp"
 HEAP32[(($75)>>2)]=$74; //@line 65 "resobjects.cpp"
 STACKTOP=sp;return; //@line 66 "resobjects.cpp"
 case 3: 
 var $77$0 = ___cxa_find_matching_catch(-1, -1); var $77$1 = tempRet0;
 var $78=$77$0;
 $18=$78; //@line 48 "resobjects.cpp"
 var $79=$77$1;
 $19=$79; //@line 48 "resobjects.cpp"
 var $80=$26; //@line 66 "resobjects.cpp"
 (function() { try { __THREW__ = 0; return __ZN13resourceClassD2Ev($80) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 66 "resobjects.cpp"
 case 4: 
 label=5;break; //@line 66 "resobjects.cpp"
 case 5: 
 var $83=$18; //@line 66 "resobjects.cpp"
 var $84=$19; //@line 66 "resobjects.cpp"
 var $85$0=$83;
 var $85$1=0;
 var $86$0=$85$0;
 var $86$1=$84;
 ___resumeException($86$0) //@line 66 "resobjects.cpp"
 case 6: 
 var $88$0 = ___cxa_find_matching_catch(-1, -1,0); var $88$1 = tempRet0;
 __ZSt9terminatev(); //@line 66 "resobjects.cpp"
 throw "Reached an unreachable!"; //@line 66 "resobjects.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13resourceClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 62 "./resobjects.h"
 HEAP32[(($3)>>2)]=17312; //@line 62 "./resobjects.h"
 var $4=(($2+4)|0); //@line 62 "./resobjects.h"
 HEAP32[(($4)>>2)]=0; //@line 62 "./resobjects.h"
 STACKTOP=sp;return; //@line 62 "./resobjects.h"
}


function __ZN13ddSpriteClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN13ddSpriteClassC2Ev($2); //@line 280 "./ddwrap.h"
 STACKTOP=sp;return; //@line 280 "./ddwrap.h"
}


function __ZN13resourceClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return; //@line 63 "./resobjects.h"
}


function __ZN20graphicResourceClass7rawLoadEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3+48)|0); //@line 73 "resobjects.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 73 "resobjects.cpp"
 var $6=($5|0)==0; //@line 73 "resobjects.cpp"
 if($6){label=2;break;}else{label=3;break;} //@line 73 "resobjects.cpp"
 case 2: 
 $1=1; //@line 75 "resobjects.cpp"
 label=6;break; //@line 75 "resobjects.cpp"
 case 3: 
 var $9=(($3+8)|0); //@line 77 "resobjects.cpp"
 var $10=(($3+48)|0); //@line 77 "resobjects.cpp"
 var $11=HEAP32[(($10)>>2)]; //@line 77 "resobjects.cpp"
 var $12=(($3+58)|0); //@line 77 "resobjects.cpp"
 var $13=HEAP8[($12)]; //@line 77 "resobjects.cpp"
 var $14=(($13)&1); //@line 77 "resobjects.cpp"
 var $15=__ZN13ddSpriteClass22createFromGeneralImageEPhb($9,$11,$14); //@line 77 "resobjects.cpp"
 if($15){label=5;break;}else{label=4;break;} //@line 77 "resobjects.cpp"
 case 4: 
 $1=0; //@line 78 "resobjects.cpp"
 label=6;break; //@line 78 "resobjects.cpp"
 case 5: 
 $1=1; //@line 107 "resobjects.cpp"
 label=6;break; //@line 107 "resobjects.cpp"
 case 6: 
 var $19=$1; //@line 108 "resobjects.cpp"
 STACKTOP=sp;return $19; //@line 108 "resobjects.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClass4loadEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 115 "resobjects.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 115 "resobjects.cpp"
 var $6=(($5+12)|0); //@line 115 "resobjects.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 115 "resobjects.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 115 "resobjects.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 115 "resobjects.cpp"
 case 2: 
 $1=1; //@line 115 "resobjects.cpp"
 label=10;break; //@line 115 "resobjects.cpp"
 case 3: 
 var $11=(($3+48)|0); //@line 133 "resobjects.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 133 "resobjects.cpp"
 var $13=($12|0)==0; //@line 133 "resobjects.cpp"
 if($13){label=4;break;}else{label=7;break;} //@line 133 "resobjects.cpp"
 case 4: 
 var $15=(($3+8)|0); //@line 135 "resobjects.cpp"
 var $16=(($3+84)|0); //@line 135 "resobjects.cpp"
 var $17=HEAP32[(($16)>>2)]; //@line 135 "resobjects.cpp"
 var $18=(($3+88)|0); //@line 135 "resobjects.cpp"
 var $19=HEAP32[(($18)>>2)]; //@line 135 "resobjects.cpp"
 var $20=(($3+58)|0); //@line 135 "resobjects.cpp"
 var $21=HEAP8[($20)]; //@line 135 "resobjects.cpp"
 var $22=(($21)&1); //@line 135 "resobjects.cpp"
 var $23=__ZN13ddSpriteClass6createEiib($15,$17,$19,$22); //@line 135 "resobjects.cpp"
 if($23){label=6;break;}else{label=5;break;} //@line 135 "resobjects.cpp"
 case 5: 
 $1=0; //@line 136 "resobjects.cpp"
 label=10;break; //@line 136 "resobjects.cpp"
 case 6: 
 label=7;break; //@line 137 "resobjects.cpp"
 case 7: 
 var $27=$3; //@line 140 "resobjects.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 140 "resobjects.cpp"
 var $29=(($28+36)|0); //@line 140 "resobjects.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 140 "resobjects.cpp"
 var $31=FUNCTION_TABLE[$30]($3); //@line 140 "resobjects.cpp"
 if($31){label=9;break;}else{label=8;break;} //@line 140 "resobjects.cpp"
 case 8: 
 $1=0; //@line 140 "resobjects.cpp"
 label=10;break; //@line 140 "resobjects.cpp"
 case 9: 
 $1=1; //@line 159 "resobjects.cpp"
 label=10;break; //@line 159 "resobjects.cpp"
 case 10: 
 var $35=$1; //@line 160 "resobjects.cpp"
 STACKTOP=sp;return $35; //@line 160 "resobjects.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClass6reloadEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 167 "resobjects.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 167 "resobjects.cpp"
 var $6=(($5+12)|0); //@line 167 "resobjects.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 167 "resobjects.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 167 "resobjects.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 167 "resobjects.cpp"
 case 2: 
 $1=0; //@line 167 "resobjects.cpp"
 label=10;break; //@line 167 "resobjects.cpp"
 case 3: 
 var $11=$3; //@line 171 "resobjects.cpp"
 var $12=HEAP32[(($11)>>2)]; //@line 171 "resobjects.cpp"
 var $13=(($12+8)|0); //@line 171 "resobjects.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 171 "resobjects.cpp"
 var $15=FUNCTION_TABLE[$14]($3); //@line 171 "resobjects.cpp"
 if($15){label=5;break;}else{label=4;break;} //@line 171 "resobjects.cpp"
 case 4: 
 $1=1; //@line 171 "resobjects.cpp"
 label=10;break; //@line 171 "resobjects.cpp"
 case 5: 
 var $18=(($3+8)|0); //@line 177 "resobjects.cpp"
 var $19=$18; //@line 177 "resobjects.cpp"
 var $20=$19; //@line 177 "resobjects.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 177 "resobjects.cpp"
 var $22=(($21+100)|0); //@line 177 "resobjects.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 177 "resobjects.cpp"
 var $24=FUNCTION_TABLE[$23]($19); //@line 177 "resobjects.cpp"
 if($24){label=7;break;}else{label=6;break;} //@line 177 "resobjects.cpp"
 case 6: 
 $1=1; //@line 177 "resobjects.cpp"
 label=10;break; //@line 177 "resobjects.cpp"
 case 7: 
 var $27=$3; //@line 180 "resobjects.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 180 "resobjects.cpp"
 var $29=(($28+36)|0); //@line 180 "resobjects.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 180 "resobjects.cpp"
 var $31=FUNCTION_TABLE[$30]($3); //@line 180 "resobjects.cpp"
 if($31){label=9;break;}else{label=8;break;} //@line 180 "resobjects.cpp"
 case 8: 
 $1=0; //@line 180 "resobjects.cpp"
 label=10;break; //@line 180 "resobjects.cpp"
 case 9: 
 $1=1; //@line 182 "resobjects.cpp"
 label=10;break; //@line 182 "resobjects.cpp"
 case 10: 
 var $35=$1; //@line 183 "resobjects.cpp"
 STACKTOP=sp;return $35; //@line 183 "resobjects.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClass6unloadEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=$3; //@line 189 "resobjects.cpp"
 var $5=HEAP32[(($4)>>2)]; //@line 189 "resobjects.cpp"
 var $6=(($5+12)|0); //@line 189 "resobjects.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 189 "resobjects.cpp"
 var $8=FUNCTION_TABLE[$7]($3); //@line 189 "resobjects.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 189 "resobjects.cpp"
 case 2: 
 $1=1; //@line 189 "resobjects.cpp"
 label=4;break; //@line 189 "resobjects.cpp"
 case 3: 
 var $11=(($3+8)|0); //@line 191 "resobjects.cpp"
 var $12=__ZN13ddSpriteClass4freeEv($11); //@line 191 "resobjects.cpp"
 $1=$12; //@line 191 "resobjects.cpp"
 label=4;break; //@line 191 "resobjects.cpp"
 case 4: 
 var $14=$1; //@line 192 "resobjects.cpp"
 STACKTOP=sp;return $14; //@line 192 "resobjects.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN20graphicResourceClassD2Ev($2); //@line 103 "./resobjects.h"
 STACKTOP=sp;return; //@line 103 "./resobjects.h"
}


function __ZN20graphicResourceClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN20graphicResourceClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 103 "./resobjects.h"
 case 2: 
 var $6=$4; //@line 103 "./resobjects.h"
 __ZdlPv($6); //@line 103 "./resobjects.h"
 STACKTOP=sp;return; //@line 103 "./resobjects.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 103 "./resobjects.h"
 var $10=$8$1;
 $3=$10; //@line 103 "./resobjects.h"
 var $11=$4; //@line 103 "./resobjects.h"
 __ZdlPv($11); //@line 103 "./resobjects.h"
 label=4;break; //@line 103 "./resobjects.h"
 case 4: 
 var $13=$2; //@line 103 "./resobjects.h"
 var $14=$3; //@line 103 "./resobjects.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 103 "./resobjects.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN20graphicResourceClass17needsToBeReloadedEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 106 "./resobjects.h"
 var $4=$3; //@line 106 "./resobjects.h"
 var $5=$4; //@line 106 "./resobjects.h"
 var $6=HEAP32[(($5)>>2)]; //@line 106 "./resobjects.h"
 var $7=(($6+96)|0); //@line 106 "./resobjects.h"
 var $8=HEAP32[(($7)>>2)]; //@line 106 "./resobjects.h"
 var $9=FUNCTION_TABLE[$8]($4,0); //@line 106 "./resobjects.h"
 STACKTOP=sp;return $9; //@line 106 "./resobjects.h"
}


function __ZN20graphicResourceClass8isLoadedEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+8)|0); //@line 107 "./resobjects.h"
 var $4=__ZN13ddSpriteClass7isReadyEv($3); //@line 107 "./resobjects.h"
 STACKTOP=sp;return $4; //@line 107 "./resobjects.h"
}


function __ZN20graphicResourceClass7getTypeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 0; //@line 108 "./resobjects.h"
}


function __ZN13resourceClass15getResourceNameEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+4)|0); //@line 69 "./resobjects.h"
 var $4=HEAP32[(($3)>>2)]; //@line 69 "./resobjects.h"
 STACKTOP=sp;return $4; //@line 69 "./resobjects.h"
}


function __ZN13ddSpriteClass7isReadyEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=(($2+36)|0); //@line 305 "./ddwrap.h"
 var $4=HEAP8[($3)]; //@line 305 "./ddwrap.h"
 var $5=(($4)&1); //@line 305 "./ddwrap.h"
 STACKTOP=sp;return $5; //@line 305 "./ddwrap.h"
}


function __ZN20graphicResourceClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 103 "./resobjects.h"
 HEAP32[(($5)>>2)]=16688; //@line 103 "./resobjects.h"
 var $6=$4; //@line 103 "./resobjects.h"
 var $7=HEAP32[(($6)>>2)]; //@line 103 "./resobjects.h"
 var $8=(($7+32)|0); //@line 103 "./resobjects.h"
 var $9=HEAP32[(($8)>>2)]; //@line 103 "./resobjects.h"
 var $10=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=4;break; } //@line 103 "./resobjects.h"
 case 2: 
 var $12=(($4+8)|0); //@line 103 "./resobjects.h"
 (function() { try { __THREW__ = 0; return __ZN13ddSpriteClassD1Ev($12) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=5;break; } //@line 103 "./resobjects.h"
 case 3: 
 var $14=$4; //@line 103 "./resobjects.h"
 __ZN13resourceClassD2Ev($14); //@line 103 "./resobjects.h"
 STACKTOP=sp;return; //@line 103 "./resobjects.h"
 case 4: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1); var $16$1 = tempRet0;
 var $17=$16$0;
 $2=$17; //@line 103 "./resobjects.h"
 var $18=$16$1;
 $3=$18; //@line 103 "./resobjects.h"
 var $19=(($4+8)|0); //@line 103 "./resobjects.h"
 (function() { try { __THREW__ = 0; return __ZN13ddSpriteClassD1Ev($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=10;break; } //@line 103 "./resobjects.h"
 case 5: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1); var $21$1 = tempRet0;
 var $22=$21$0;
 $2=$22; //@line 103 "./resobjects.h"
 var $23=$21$1;
 $3=$23; //@line 103 "./resobjects.h"
 label=7;break; //@line 103 "./resobjects.h"
 case 6: 
 label=7;break; //@line 103 "./resobjects.h"
 case 7: 
 var $26=$4; //@line 103 "./resobjects.h"
 (function() { try { __THREW__ = 0; return __ZN13resourceClassD2Ev($26) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=10;break; } //@line 103 "./resobjects.h"
 case 8: 
 label=9;break; //@line 103 "./resobjects.h"
 case 9: 
 var $29=$2; //@line 103 "./resobjects.h"
 var $30=$3; //@line 103 "./resobjects.h"
 var $31$0=$29;
 var $31$1=0;
 var $32$0=$31$0;
 var $32$1=$30;
 ___resumeException($32$0) //@line 103 "./resobjects.h"
 case 10: 
 var $34$0 = ___cxa_find_matching_catch(-1, -1,0); var $34$1 = tempRet0;
 __ZSt9terminatev(); //@line 103 "./resobjects.h"
 throw "Reached an unreachable!"; //@line 103 "./resobjects.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13ddSpriteClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN13ddSpriteClassD2Ev($2); //@line 281 "./ddwrap.h"
 STACKTOP=sp;return; //@line 281 "./ddwrap.h"
}


function __ZN13ddSpriteClassD2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 var $5=$4; //@line 281 "./ddwrap.h"
 HEAP32[(($5)>>2)]=17440; //@line 281 "./ddwrap.h"
 var $6=(function() { try { __THREW__ = 0; return __ZN13ddSpriteClass4freeEv($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 281 "./ddwrap.h"
 case 2: 
 var $8=$4; //@line 281 "./ddwrap.h"
 __ZN14ddSurfaceClassD2Ev($8); //@line 281 "./ddwrap.h"
 STACKTOP=sp;return; //@line 281 "./ddwrap.h"
 case 3: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 var $11=$10$0;
 $2=$11; //@line 281 "./ddwrap.h"
 var $12=$10$1;
 $3=$12; //@line 281 "./ddwrap.h"
 var $13=$4; //@line 281 "./ddwrap.h"
 (function() { try { __THREW__ = 0; return __ZN14ddSurfaceClassD2Ev($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; } //@line 281 "./ddwrap.h"
 case 4: 
 label=5;break; //@line 281 "./ddwrap.h"
 case 5: 
 var $16=$2; //@line 281 "./ddwrap.h"
 var $17=$3; //@line 281 "./ddwrap.h"
 var $18$0=$16;
 var $18$1=0;
 var $19$0=$18$0;
 var $19$1=$17;
 ___resumeException($19$0) //@line 281 "./ddwrap.h"
 case 6: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1,0); var $21$1 = tempRet0;
 __ZSt9terminatev(); //@line 281 "./ddwrap.h"
 throw "Reached an unreachable!"; //@line 281 "./ddwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13ddSpriteClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN13ddSpriteClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 281 "./ddwrap.h"
 case 2: 
 var $6=$4; //@line 281 "./ddwrap.h"
 __ZdlPv($6); //@line 281 "./ddwrap.h"
 STACKTOP=sp;return; //@line 281 "./ddwrap.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 281 "./ddwrap.h"
 var $10=$8$1;
 $3=$10; //@line 281 "./ddwrap.h"
 var $11=$4; //@line 281 "./ddwrap.h"
 __ZdlPv($11); //@line 281 "./ddwrap.h"
 label=4;break; //@line 281 "./ddwrap.h"
 case 4: 
 var $13=$2; //@line 281 "./ddwrap.h"
 var $14=$3; //@line 281 "./ddwrap.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 281 "./ddwrap.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN13ddSpriteClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 280 "./ddwrap.h"
 __ZN14ddSurfaceClassC2Ev($3); //@line 280 "./ddwrap.h"
 var $4=$2; //@line 280 "./ddwrap.h"
 HEAP32[(($4)>>2)]=17440; //@line 280 "./ddwrap.h"
 var $5=(($2+36)|0); //@line 280 "./ddwrap.h"
 HEAP8[($5)]=0; //@line 280 "./ddwrap.h"
 STACKTOP=sp;return; //@line 280 "./ddwrap.h"
}


function __ZN13resourceClassD1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN13resourceClassD2Ev($2); //@line 63 "./resobjects.h"
 STACKTOP=sp;return; //@line 63 "./resobjects.h"
}


function __ZN13resourceClassD0Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$this;
 var $4=$1;
 (function() { try { __THREW__ = 0; return __ZN13resourceClassD1Ev($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; } //@line 63 "./resobjects.h"
 case 2: 
 var $6=$4; //@line 63 "./resobjects.h"
 __ZdlPv($6); //@line 63 "./resobjects.h"
 STACKTOP=sp;return; //@line 63 "./resobjects.h"
 case 3: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 var $9=$8$0;
 $2=$9; //@line 63 "./resobjects.h"
 var $10=$8$1;
 $3=$10; //@line 63 "./resobjects.h"
 var $11=$4; //@line 63 "./resobjects.h"
 __ZdlPv($11); //@line 63 "./resobjects.h"
 label=4;break; //@line 63 "./resobjects.h"
 case 4: 
 var $13=$2; //@line 63 "./resobjects.h"
 var $14=$3; //@line 63 "./resobjects.h"
 var $15$0=$13;
 var $15$1=0;
 var $16$0=$15$0;
 var $16$1=$14;
 ___resumeException($16$0) //@line 63 "./resobjects.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN18scriptManagerClass4initEv($this){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $luadata=sp;
 var $scriptName;
 var $timer=(sp)+(24);
 var $3;
 var $4;
 var $5;
 $2=$this;
 var $6=$2;
 __ZN15fileStringClassC1Ev($luadata); //@line 71 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return __ZN16timeWrapperClassC1Ev($timer) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=4;break; } //@line 73 "scriptman.cpp"
 case 2: 
 var $8=(($6)|0); //@line 76 "scriptman.cpp"
 var $9=HEAP8[($8)]; //@line 76 "scriptman.cpp"
 var $10=(($9)&1); //@line 76 "scriptman.cpp"
 if($10){label=3;break;}else{label=5;break;} //@line 76 "scriptman.cpp"
 case 3: 
 $1=0; //@line 76 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 76 "scriptman.cpp"
 case 4: 
 var $13$0 = ___cxa_find_matching_catch(-1, -1); var $13$1 = tempRet0;
 var $14=$13$0;
 $3=$14; //@line 73 "scriptman.cpp"
 var $15=$13$1;
 $4=$15; //@line 73 "scriptman.cpp"
 label=98;break; //@line 73 "scriptman.cpp"
 case 5: 
 var $17=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,7864,1,0,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=6;break; } else { label=10;break; } //@line 79 "scriptman.cpp"
 case 6: 
 var $19=(function() { try { __THREW__ = 0; return _luaL_newstate() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=10;break; } //@line 82 "scriptman.cpp"
 case 7: 
 var $21=(($6+4)|0); //@line 82 "scriptman.cpp"
 HEAP32[(($21)>>2)]=$19; //@line 82 "scriptman.cpp"
 var $22=(($6+4)|0); //@line 83 "scriptman.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 83 "scriptman.cpp"
 var $24=($23|0)==0; //@line 83 "scriptman.cpp"
 if($24){label=8;break;}else{label=11;break;} //@line 83 "scriptman.cpp"
 case 8: 
 var $26=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,14344,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=9;break; } else { label=10;break; } //@line 84 "scriptman.cpp"
 case 9: 
 $1=0; //@line 85 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 85 "scriptman.cpp"
 case 10: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1); var $29$1 = tempRet0;
 var $30=$29$0;
 $3=$30; //@line 79 "scriptman.cpp"
 var $31=$29$1;
 $4=$31; //@line 79 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return __ZN16timeWrapperClassD1Ev($timer) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=97;break; } else { label=101;break; } //@line 207 "scriptman.cpp"
 case 11: 
 var $33=(($6+4)|0); //@line 88 "scriptman.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 88 "scriptman.cpp"
 var $35=(function() { try { __THREW__ = 0; return _luaopen_base($34) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=10;break; } //@line 88 "scriptman.cpp"
 case 12: 
 var $37=(($6+4)|0); //@line 89 "scriptman.cpp"
 var $38=HEAP32[(($37)>>2)]; //@line 89 "scriptman.cpp"
 var $39=(function() { try { __THREW__ = 0; return _luaopen_string($38) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=10;break; } //@line 89 "scriptman.cpp"
 case 13: 
 var $41=(($6+4)|0); //@line 90 "scriptman.cpp"
 var $42=HEAP32[(($41)>>2)]; //@line 90 "scriptman.cpp"
 var $43=(function() { try { __THREW__ = 0; return _luaopen_table($42) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=10;break; } //@line 90 "scriptman.cpp"
 case 14: 
 var $45=(($6+4)|0); //@line 91 "scriptman.cpp"
 var $46=HEAP32[(($45)>>2)]; //@line 91 "scriptman.cpp"
 var $47=(function() { try { __THREW__ = 0; return _luaopen_math($46) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=10;break; } //@line 91 "scriptman.cpp"
 case 15: 
 var $49=(($6+4)|0); //@line 94 "scriptman.cpp"
 var $50=HEAP32[(($49)>>2)]; //@line 94 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($50,456,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=10;break; } //@line 94 "scriptman.cpp"
 case 16: 
 var $52=(($6+4)|0); //@line 94 "scriptman.cpp"
 var $53=HEAP32[(($52)>>2)]; //@line 94 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($53,11000) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=10;break; } //@line 94 "scriptman.cpp"
 case 17: 
 var $55=(($6+4)|0); //@line 96 "scriptman.cpp"
 var $56=HEAP32[(($55)>>2)]; //@line 96 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($56,414,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=10;break; } //@line 96 "scriptman.cpp"
 case 18: 
 var $58=(($6+4)|0); //@line 96 "scriptman.cpp"
 var $59=HEAP32[(($58)>>2)]; //@line 96 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($59,8392) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=10;break; } //@line 96 "scriptman.cpp"
 case 19: 
 var $61=(($6+4)|0); //@line 98 "scriptman.cpp"
 var $62=HEAP32[(($61)>>2)]; //@line 98 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($62,282,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=10;break; } //@line 98 "scriptman.cpp"
 case 20: 
 var $64=(($6+4)|0); //@line 98 "scriptman.cpp"
 var $65=HEAP32[(($64)>>2)]; //@line 98 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($65,6544) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=10;break; } //@line 98 "scriptman.cpp"
 case 21: 
 var $67=(($6+4)|0); //@line 100 "scriptman.cpp"
 var $68=HEAP32[(($67)>>2)]; //@line 100 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($68,146,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=10;break; } //@line 100 "scriptman.cpp"
 case 22: 
 var $70=(($6+4)|0); //@line 100 "scriptman.cpp"
 var $71=HEAP32[(($70)>>2)]; //@line 100 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($71,5456) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=10;break; } //@line 100 "scriptman.cpp"
 case 23: 
 var $73=(($6+4)|0); //@line 102 "scriptman.cpp"
 var $74=HEAP32[(($73)>>2)]; //@line 102 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($74,60,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=10;break; } //@line 102 "scriptman.cpp"
 case 24: 
 var $76=(($6+4)|0); //@line 102 "scriptman.cpp"
 var $77=HEAP32[(($76)>>2)]; //@line 102 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($77,4712) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=10;break; } //@line 102 "scriptman.cpp"
 case 25: 
 var $79=(($6+4)|0); //@line 104 "scriptman.cpp"
 var $80=HEAP32[(($79)>>2)]; //@line 104 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($80,348,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=10;break; } //@line 104 "scriptman.cpp"
 case 26: 
 var $82=(($6+4)|0); //@line 104 "scriptman.cpp"
 var $83=HEAP32[(($82)>>2)]; //@line 104 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($83,3968) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=10;break; } //@line 104 "scriptman.cpp"
 case 27: 
 var $85=(($6+4)|0); //@line 106 "scriptman.cpp"
 var $86=HEAP32[(($85)>>2)]; //@line 106 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($86,52,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=10;break; } //@line 106 "scriptman.cpp"
 case 28: 
 var $88=(($6+4)|0); //@line 106 "scriptman.cpp"
 var $89=HEAP32[(($88)>>2)]; //@line 106 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($89,3224) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=10;break; } //@line 106 "scriptman.cpp"
 case 29: 
 var $91=(($6+4)|0); //@line 109 "scriptman.cpp"
 var $92=HEAP32[(($91)>>2)]; //@line 109 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($92,112,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=10;break; } //@line 109 "scriptman.cpp"
 case 30: 
 var $94=(($6+4)|0); //@line 109 "scriptman.cpp"
 var $95=HEAP32[(($94)>>2)]; //@line 109 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($95,2608) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=10;break; } //@line 109 "scriptman.cpp"
 case 31: 
 var $97=(($6+4)|0); //@line 111 "scriptman.cpp"
 var $98=HEAP32[(($97)>>2)]; //@line 111 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($98,362,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=10;break; } //@line 111 "scriptman.cpp"
 case 32: 
 var $100=(($6+4)|0); //@line 111 "scriptman.cpp"
 var $101=HEAP32[(($100)>>2)]; //@line 111 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($101,16104) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=10;break; } //@line 111 "scriptman.cpp"
 case 33: 
 var $103=(($6+4)|0); //@line 113 "scriptman.cpp"
 var $104=HEAP32[(($103)>>2)]; //@line 113 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($104,440,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=34;break; } else { label=10;break; } //@line 113 "scriptman.cpp"
 case 34: 
 var $106=(($6+4)|0); //@line 113 "scriptman.cpp"
 var $107=HEAP32[(($106)>>2)]; //@line 113 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($107,15480) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=10;break; } //@line 113 "scriptman.cpp"
 case 35: 
 var $109=(($6+4)|0); //@line 115 "scriptman.cpp"
 var $110=HEAP32[(($109)>>2)]; //@line 115 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($110,256,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=36;break; } else { label=10;break; } //@line 115 "scriptman.cpp"
 case 36: 
 var $112=(($6+4)|0); //@line 115 "scriptman.cpp"
 var $113=HEAP32[(($112)>>2)]; //@line 115 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($113,14976) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=37;break; } else { label=10;break; } //@line 115 "scriptman.cpp"
 case 37: 
 var $115=(($6+4)|0); //@line 118 "scriptman.cpp"
 var $116=HEAP32[(($115)>>2)]; //@line 118 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushcclosure($116,50,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=10;break; } //@line 118 "scriptman.cpp"
 case 38: 
 var $118=(($6+4)|0); //@line 118 "scriptman.cpp"
 var $119=HEAP32[(($118)>>2)]; //@line 118 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($119,14520) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=10;break; } //@line 118 "scriptman.cpp"
 case 39: 
 var $121=(($6+4)|0); //@line 122 "scriptman.cpp"
 var $122=HEAP32[(($121)>>2)]; //@line 122 "scriptman.cpp"
 var $123=HEAP32[((2136)>>2)]; //@line 122 "scriptman.cpp"
 var $124=($123|0); //@line 122 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushnumber($122,$124) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=40;break; } else { label=10;break; } //@line 122 "scriptman.cpp"
 case 40: 
 var $126=(($6+4)|0); //@line 123 "scriptman.cpp"
 var $127=HEAP32[(($126)>>2)]; //@line 123 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_setglobal($127,14152) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=10;break; } //@line 123 "scriptman.cpp"
 case 41: 
 var $129=HEAP32[((19848)>>2)]; //@line 126 "scriptman.cpp"
 var $130=(function() { try { __THREW__ = 0; return __ZN18scriptManagerClass23setCurrentLanguageInLuaE12languageEnum($6,$129) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=42;break; } else { label=10;break; } //@line 126 "scriptman.cpp"
 case 42: 
 var $132=(function() { try { __THREW__ = 0; return __ZN15fileStringClass12openFromFileEPc($luadata,13864) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=43;break; } else { label=10;break; } //@line 130 "scriptman.cpp"
 case 43: 
 if($132){label=50;break;}else{label=44;break;} //@line 130 "scriptman.cpp"
 case 44: 
 var $135=(function() { try { __THREW__ = 0; return __ZN15fileStringClass5closeEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=45;break; } else { label=10;break; } //@line 132 "scriptman.cpp"
 case 45: 
 var $137=(function() { try { __THREW__ = 0; return __ZN15fileStringClass12openFromFileEPc($luadata,13576) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=46;break; } else { label=10;break; } //@line 133 "scriptman.cpp"
 case 46: 
 if($137){label=49;break;}else{label=47;break;} //@line 133 "scriptman.cpp"
 case 47: 
 var $140=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,13264,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=48;break; } else { label=10;break; } //@line 136 "scriptman.cpp"
 case 48: 
 $1=0; //@line 137 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 137 "scriptman.cpp"
 case 49: 
 label=50;break; //@line 139 "scriptman.cpp"
 case 50: 
 var $144=(($6+4)|0); //@line 141 "scriptman.cpp"
 var $145=HEAP32[(($144)>>2)]; //@line 141 "scriptman.cpp"
 var $146=(function() { try { __THREW__ = 0; return __ZN15fileStringClass14getDataPointerEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=51;break; } else { label=10;break; } //@line 141 "scriptman.cpp"
 case 51: 
 var $148=(function() { try { __THREW__ = 0; return __ZN15fileStringClass11getDataSizeEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=10;break; } //@line 141 "scriptman.cpp"
 case 52: 
 var $150=(function() { try { __THREW__ = 0; return _luaL_loadbufferx($145,$146,$148,13048,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { label=10;break; } //@line 141 "scriptman.cpp"
 case 53: 
 var $152=($150|0)!=0; //@line 141 "scriptman.cpp"
 if($152){var $160=1;label=56;break;}else{label=54;break;} //@line 141 "scriptman.cpp"
 case 54: 
 var $154=(($6+4)|0); //@line 141 "scriptman.cpp"
 var $155=HEAP32[(($154)>>2)]; //@line 141 "scriptman.cpp"
 var $156=(function() { try { __THREW__ = 0; return _lua_pcallk($155,0,-1,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=10;break; } //@line 141 "scriptman.cpp"
 case 55: 
 var $158=($156|0)!=0; //@line 141 "scriptman.cpp"
 var $160=$158;label=56;break; //@line 141 "scriptman.cpp"
 case 56: 
 var $160;
 var $161=($160&1); //@line 141 "scriptman.cpp"
 var $162=($161|0)!=0; //@line 141 "scriptman.cpp"
 if($162){label=57;break;}else{label=59;break;} //@line 141 "scriptman.cpp"
 case 57: 
 var $164=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,12736,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=58;break; } else { label=10;break; } //@line 147 "scriptman.cpp"
 case 58: 
 $1=0; //@line 148 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 148 "scriptman.cpp"
 case 59: 
 var $167=(function() { try { __THREW__ = 0; return __ZN15fileStringClass5closeEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=10;break; } //@line 151 "scriptman.cpp"
 case 60: 
 var $169=(($6+4)|0); //@line 155 "scriptman.cpp"
 var $170=HEAP32[(($169)>>2)]; //@line 155 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_getglobal($170,12480) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=10;break; } //@line 155 "scriptman.cpp"
 case 61: 
 var $172=(($6+4)|0); //@line 156 "scriptman.cpp"
 var $173=HEAP32[(($172)>>2)]; //@line 156 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_pushnil($173) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { label=10;break; } //@line 156 "scriptman.cpp"
 case 62: 
 label=63;break; //@line 157 "scriptman.cpp"
 case 63: 
 var $176=(($6+4)|0); //@line 157 "scriptman.cpp"
 var $177=HEAP32[(($176)>>2)]; //@line 157 "scriptman.cpp"
 var $178=(function() { try { __THREW__ = 0; return _lua_next($177,-2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=64;break; } else { label=10;break; } //@line 157 "scriptman.cpp"
 case 64: 
 var $180=($178|0)!=0; //@line 157 "scriptman.cpp"
 if($180){label=65;break;}else{label=82;break;} //@line 157 "scriptman.cpp"
 case 65: 
 var $182=(($6+4)|0); //@line 159 "scriptman.cpp"
 var $183=HEAP32[(($182)>>2)]; //@line 159 "scriptman.cpp"
 var $184=(function() { try { __THREW__ = 0; return _lua_tolstring($183,-1,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=66;break; } else { label=10;break; } //@line 159 "scriptman.cpp"
 case 66: 
 $scriptName=$184; //@line 159 "scriptman.cpp"
 var $186=$scriptName; //@line 160 "scriptman.cpp"
 var $187=(function() { try { __THREW__ = 0; return __ZN15fileStringClass12openFromFileEPc($luadata,$186) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=67;break; } else { label=10;break; } //@line 160 "scriptman.cpp"
 case 67: 
 if($187){label=70;break;}else{label=68;break;} //@line 160 "scriptman.cpp"
 case 68: 
 var $190=$scriptName; //@line 161 "scriptman.cpp"
 var $191=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,12048,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$190,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=69;break; } else { label=10;break; } //@line 161 "scriptman.cpp"
 case 69: 
 $1=0; //@line 163 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 163 "scriptman.cpp"
 case 70: 
 var $194=(($6+4)|0); //@line 166 "scriptman.cpp"
 var $195=HEAP32[(($194)>>2)]; //@line 166 "scriptman.cpp"
 var $196=(function() { try { __THREW__ = 0; return __ZN15fileStringClass14getDataPointerEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=71;break; } else { label=10;break; } //@line 166 "scriptman.cpp"
 case 71: 
 var $198=(function() { try { __THREW__ = 0; return __ZN15fileStringClass11getDataSizeEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=72;break; } else { label=10;break; } //@line 166 "scriptman.cpp"
 case 72: 
 var $200=$scriptName; //@line 166 "scriptman.cpp"
 var $201=(function() { try { __THREW__ = 0; return _luaL_loadbufferx($195,$196,$198,$200,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=73;break; } else { label=10;break; } //@line 166 "scriptman.cpp"
 case 73: 
 var $203=($201|0)!=0; //@line 166 "scriptman.cpp"
 if($203){var $211=1;label=76;break;}else{label=74;break;} //@line 166 "scriptman.cpp"
 case 74: 
 var $205=(($6+4)|0); //@line 166 "scriptman.cpp"
 var $206=HEAP32[(($205)>>2)]; //@line 166 "scriptman.cpp"
 var $207=(function() { try { __THREW__ = 0; return _lua_pcallk($206,0,-1,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=75;break; } else { label=10;break; } //@line 166 "scriptman.cpp"
 case 75: 
 var $209=($207|0)!=0; //@line 166 "scriptman.cpp"
 var $211=$209;label=76;break; //@line 166 "scriptman.cpp"
 case 76: 
 var $211;
 var $212=($211&1); //@line 166 "scriptman.cpp"
 var $213=($212|0)!=0; //@line 166 "scriptman.cpp"
 if($213){label=77;break;}else{label=79;break;} //@line 166 "scriptman.cpp"
 case 77: 
 var $215=$scriptName; //@line 172 "scriptman.cpp"
 var $216=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,11680,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$215,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=78;break; } else { label=10;break; } //@line 172 "scriptman.cpp"
 case 78: 
 $1=0; //@line 174 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 174 "scriptman.cpp"
 case 79: 
 var $219=(function() { try { __THREW__ = 0; return __ZN15fileStringClass5closeEv($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=80;break; } else { label=10;break; } //@line 177 "scriptman.cpp"
 case 80: 
 var $221=(($6+4)|0); //@line 180 "scriptman.cpp"
 var $222=HEAP32[(($221)>>2)]; //@line 180 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_settop($222,-2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=81;break; } else { label=10;break; } //@line 180 "scriptman.cpp"
 case 81: 
 label=63;break; //@line 181 "scriptman.cpp"
 case 82: 
 var $225=(($6+4)|0); //@line 183 "scriptman.cpp"
 var $226=HEAP32[(($225)>>2)]; //@line 183 "scriptman.cpp"
 (function() { try { __THREW__ = 0; return _lua_settop($226,-3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=83;break; } else { label=10;break; } //@line 183 "scriptman.cpp"
 case 83: 
 var $228=(function() { try { __THREW__ = 0; return __ZN16timeWrapperClass4initEv($timer) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=84;break; } else { label=10;break; } //@line 187 "scriptman.cpp"
 case 84: 
 if($228){label=86;break;}else{label=85;break;} //@line 187 "scriptman.cpp"
 case 85: 
 $1=0; //@line 187 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 187 "scriptman.cpp"
 case 86: 
 var $232=(($6+4)|0); //@line 190 "scriptman.cpp"
 var $233=HEAP32[(($232)>>2)]; //@line 190 "scriptman.cpp"
 var $234=(function() { try { __THREW__ = 0; return _luaL_loadstring($233,11208) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=87;break; } else { label=10;break; } //@line 190 "scriptman.cpp"
 case 87: 
 var $236=($234|0)!=0; //@line 190 "scriptman.cpp"
 if($236){var $244=1;label=90;break;}else{label=88;break;} //@line 190 "scriptman.cpp"
 case 88: 
 var $238=(($6+4)|0); //@line 190 "scriptman.cpp"
 var $239=HEAP32[(($238)>>2)]; //@line 190 "scriptman.cpp"
 var $240=(function() { try { __THREW__ = 0; return _lua_pcallk($239,0,-1,0,0,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=89;break; } else { label=10;break; } //@line 190 "scriptman.cpp"
 case 89: 
 var $242=($240|0)!=0; //@line 190 "scriptman.cpp"
 var $244=$242;label=90;break; //@line 190 "scriptman.cpp"
 case 90: 
 var $244;
 var $245=($244&1); //@line 190 "scriptman.cpp"
 var $246=($245|0)!=0; //@line 190 "scriptman.cpp"
 if($246){label=91;break;}else{label=93;break;} //@line 190 "scriptman.cpp"
 case 91: 
 var $248=(function() { try { __THREW__ = 0; return __ZN14conLoggerClass7logLineEPcbbbz(19416,10752,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=92;break; } else { label=10;break; } //@line 191 "scriptman.cpp"
 case 92: 
 $1=0; //@line 192 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 192 "scriptman.cpp"
 case 93: 
 var $251=(function() { try { __THREW__ = 0; return __ZN16timeWrapperClass3endEv($timer) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=94;break; } else { label=10;break; } //@line 200 "scriptman.cpp"
 case 94: 
 var $253=(($6)|0); //@line 203 "scriptman.cpp"
 HEAP8[($253)]=1; //@line 203 "scriptman.cpp"
 $1=1; //@line 206 "scriptman.cpp"
 $5=1;
 label=95;break; //@line 206 "scriptman.cpp"
 case 95: 
 (function() { try { __THREW__ = 0; return __ZN16timeWrapperClassD1Ev($timer) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=96;break; } else { label=4;break; } //@line 207 "scriptman.cpp"
 case 96: 
 __ZN15fileStringClassD1Ev($luadata); //@line 207 "scriptman.cpp"
 var $256=$1; //@line 207 "scriptman.cpp"
 STACKTOP=sp;return $256; //@line 207 "scriptman.cpp"
 case 97: 
 label=98;break; //@line 207 "scriptman.cpp"
 case 98: 
 (function() { try { __THREW__ = 0; return __ZN15fileStringClassD1Ev($luadata) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=99;break; } else { label=101;break; } //@line 207 "scriptman.cpp"
 case 99: 
 label=100;break; //@line 207 "scriptman.cpp"
 case 100: 
 var $261=$3; //@line 207 "scriptman.cpp"
 var $262=$4; //@line 207 "scriptman.cpp"
 var $263$0=$261;
 var $263$1=0;
 var $264$0=$263$0;
 var $264$1=$262;
 ___resumeException($264$0) //@line 207 "scriptman.cpp"
 case 101: 
 var $266$0 = ___cxa_find_matching_catch(-1, -1,0); var $266$1 = tempRet0;
 __ZSt9terminatev(); //@line 207 "scriptman.cpp"
 throw "Reached an unreachable!"; //@line 207 "scriptman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClassC1Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 __ZN15fileStringClassC2Ev($2); //@line 54 "./fileString.h"
 STACKTOP=sp;return; //@line 54 "./fileString.h"
}


function __ZL12luaLogToFileP9lua_State($lstate){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $i;
 var $n;
 $1=$lstate;
 var $2=$1; //@line 52 "scriptman.cpp"
 var $3=_lua_gettop($2); //@line 52 "scriptman.cpp"
 $n=$3; //@line 52 "scriptman.cpp"
 $i=1; //@line 54 "scriptman.cpp"
 label=2;break; //@line 54 "scriptman.cpp"
 case 2: 
 var $5=$i; //@line 54 "scriptman.cpp"
 var $6=$n; //@line 54 "scriptman.cpp"
 var $7=($5|0)<=($6|0); //@line 54 "scriptman.cpp"
 if($7){label=3;break;}else{label=5;break;} //@line 54 "scriptman.cpp"
 case 3: 
 var $9=$1; //@line 56 "scriptman.cpp"
 var $10=$i; //@line 56 "scriptman.cpp"
 var $11=_lua_tolstring($9,$10,0); //@line 56 "scriptman.cpp"
 var $12=__ZN14conLoggerClass7logLineEPcbbbz(19416,9360,1,1,0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs)); STACKTOP=tempVarArgs; //@line 56 "scriptman.cpp"
 label=4;break; //@line 57 "scriptman.cpp"
 case 4: 
 var $14=$i; //@line 54 "scriptman.cpp"
 var $15=((($14)+(1))|0); //@line 54 "scriptman.cpp"
 $i=$15; //@line 54 "scriptman.cpp"
 label=2;break; //@line 54 "scriptman.cpp"
 case 5: 
 STACKTOP=sp;return 0; //@line 59 "scriptman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN18scriptManagerClass23setCurrentLanguageInLuaE12languageEnum($this,$lang){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$this;
 $3=$lang;
 var $4=$2;
 var $5=(($4)|0); //@line 334 "scriptman.cpp"
 var $6=HEAP8[($5)]; //@line 334 "scriptman.cpp"
 var $7=(($6)&1); //@line 334 "scriptman.cpp"
 if($7){label=3;break;}else{label=2;break;} //@line 334 "scriptman.cpp"
 case 2: 
 $1=0; //@line 334 "scriptman.cpp"
 label=7;break; //@line 334 "scriptman.cpp"
 case 3: 
 var $10=$3; //@line 337 "scriptman.cpp"
 var $11=($10|0)==0; //@line 337 "scriptman.cpp"
 if($11){label=4;break;}else{label=5;break;} //@line 337 "scriptman.cpp"
 case 4: 
 var $13=(($4+4)|0); //@line 338 "scriptman.cpp"
 var $14=HEAP32[(($13)>>2)]; //@line 338 "scriptman.cpp"
 var $15=_lua_pushstring($14,10448); //@line 338 "scriptman.cpp"
 label=6;break; //@line 339 "scriptman.cpp"
 case 5: 
 var $17=(($4+4)|0); //@line 340 "scriptman.cpp"
 var $18=HEAP32[(($17)>>2)]; //@line 340 "scriptman.cpp"
 var $19=_lua_pushstring($18,10240); //@line 340 "scriptman.cpp"
 label=6;break;
 case 6: 
 var $21=(($4+4)|0); //@line 342 "scriptman.cpp"
 var $22=HEAP32[(($21)>>2)]; //@line 342 "scriptman.cpp"
 _lua_setglobal($22,10000); //@line 342 "scriptman.cpp"
 $1=1; //@line 344 "scriptman.cpp"
 label=7;break; //@line 344 "scriptman.cpp"
 case 7: 
 var $24=$1; //@line 345 "scriptman.cpp"
 STACKTOP=sp;return $24; //@line 345 "scriptman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN18scriptManagerClass5closeEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=(($3)|0); //@line 214 "scriptman.cpp"
 var $5=HEAP8[($4)]; //@line 214 "scriptman.cpp"
 var $6=(($5)&1); //@line 214 "scriptman.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 214 "scriptman.cpp"
 case 2: 
 $1=0; //@line 214 "scriptman.cpp"
 label=4;break; //@line 214 "scriptman.cpp"
 case 3: 
 var $9=(($3+4)|0); //@line 217 "scriptman.cpp"
 var $10=HEAP32[(($9)>>2)]; //@line 217 "scriptman.cpp"
 _lua_close($10); //@line 217 "scriptman.cpp"
 var $11=(($3)|0); //@line 220 "scriptman.cpp"
 HEAP8[($11)]=0; //@line 220 "scriptman.cpp"
 $1=1; //@line 222 "scriptman.cpp"
 label=4;break; //@line 222 "scriptman.cpp"
 case 4: 
 var $13=$1; //@line 223 "scriptman.cpp"
 STACKTOP=sp;return $13; //@line 223 "scriptman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN18scriptManagerClass14getIntVariableEPcPb($this,$varName,$errCode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $success;
 var $value;
 $2=$this;
 $3=$varName;
 $4=$errCode;
 var $5=$2;
 $success=1; //@line 234 "scriptman.cpp"
 var $6=(($5)|0); //@line 238 "scriptman.cpp"
 var $7=HEAP8[($6)]; //@line 238 "scriptman.cpp"
 var $8=(($7)&1); //@line 238 "scriptman.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 238 "scriptman.cpp"
 case 2: 
 var $10=$3; //@line 238 "scriptman.cpp"
 var $11=($10|0)==0; //@line 238 "scriptman.cpp"
 if($11){label=3;break;}else{label=6;break;} //@line 238 "scriptman.cpp"
 case 3: 
 $success=0; //@line 240 "scriptman.cpp"
 var $13=$4; //@line 241 "scriptman.cpp"
 var $14=($13|0)!=0; //@line 241 "scriptman.cpp"
 if($14){label=4;break;}else{label=5;break;} //@line 241 "scriptman.cpp"
 case 4: 
 var $16=$success; //@line 241 "scriptman.cpp"
 var $17=(($16)&1); //@line 241 "scriptman.cpp"
 var $18=$4; //@line 241 "scriptman.cpp"
 var $19=($17&1); //@line 241 "scriptman.cpp"
 HEAP8[($18)]=$19; //@line 241 "scriptman.cpp"
 label=5;break; //@line 241 "scriptman.cpp"
 case 5: 
 $1=0; //@line 242 "scriptman.cpp"
 label=9;break; //@line 242 "scriptman.cpp"
 case 6: 
 var $22=(($5+4)|0); //@line 246 "scriptman.cpp"
 var $23=HEAP32[(($22)>>2)]; //@line 246 "scriptman.cpp"
 var $24=$3; //@line 246 "scriptman.cpp"
 _lua_getglobal($23,$24); //@line 246 "scriptman.cpp"
 var $25=(($5+4)|0); //@line 247 "scriptman.cpp"
 var $26=HEAP32[(($25)>>2)]; //@line 247 "scriptman.cpp"
 var $27=_lua_tonumberx($26,-1,0); //@line 247 "scriptman.cpp"
 var $28=(($27)&-1); //@line 247 "scriptman.cpp"
 $value=$28; //@line 247 "scriptman.cpp"
 var $29=(($5+4)|0); //@line 248 "scriptman.cpp"
 var $30=HEAP32[(($29)>>2)]; //@line 248 "scriptman.cpp"
 _lua_settop($30,-2); //@line 248 "scriptman.cpp"
 var $31=$4; //@line 251 "scriptman.cpp"
 var $32=($31|0)!=0; //@line 251 "scriptman.cpp"
 if($32){label=7;break;}else{label=8;break;} //@line 251 "scriptman.cpp"
 case 7: 
 var $34=$success; //@line 251 "scriptman.cpp"
 var $35=(($34)&1); //@line 251 "scriptman.cpp"
 var $36=$4; //@line 251 "scriptman.cpp"
 var $37=($35&1); //@line 251 "scriptman.cpp"
 HEAP8[($36)]=$37; //@line 251 "scriptman.cpp"
 label=8;break; //@line 251 "scriptman.cpp"
 case 8: 
 var $39=$value; //@line 252 "scriptman.cpp"
 $1=$39; //@line 252 "scriptman.cpp"
 label=9;break; //@line 252 "scriptman.cpp"
 case 9: 
 var $41=$1; //@line 253 "scriptman.cpp"
 STACKTOP=sp;return $41; //@line 253 "scriptman.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15fileStringClassC2Ev($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 var $3=$2; //@line 54 "./fileString.h"
 HEAP32[(($3)>>2)]=16896; //@line 54 "./fileString.h"
 var $4=(($2+16)|0); //@line 54 "./fileString.h"
 HEAP8[($4)]=0; //@line 54 "./fileString.h"
 STACKTOP=sp;return; //@line 54 "./fileString.h"
}


function __ZN15scrollTextClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$this;
 var $2=$1;
 STACKTOP=sp;return 1; //@line 80 "scrolltext.cpp"
}


function __Z28sheepLinearMovementDoneEventR20vectorListNodeStructI15enemyUnitStructE($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $minX;
 var $maxX;
 var $headFrame;
 var $headX;
 var $head;
 var $gettingHeadsFrame;
 var $myUnitFrame;
 $2=$unit;
 var $3=$2; //@line 48 "sheepai.cpp"
 var $4=(($3)|0); //@line 48 "sheepai.cpp"
 var $5=$4; //@line 48 "sheepai.cpp"
 var $6=(($5+24)|0); //@line 48 "sheepai.cpp"
 var $7=HEAP32[(($6)>>2)]; //@line 48 "sheepai.cpp"
 var $8=($7|0)==3; //@line 48 "sheepai.cpp"
 if($8){label=2;break;}else{label=3;break;} //@line 48 "sheepai.cpp"
 case 2: 
 var $10=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(6888,0); //@line 52 "sheepai.cpp"
 var $11=$2; //@line 51 "sheepai.cpp"
 var $12=(($11)|0); //@line 51 "sheepai.cpp"
 var $13=$12; //@line 51 "sheepai.cpp"
 var $14=__Z17getUnitFramesListP17genericUnitStruct($13); //@line 51 "sheepai.cpp"
 var $15=(($14+((($10)*(80))&-1))|0); //@line 51 "sheepai.cpp"
 $gettingHeadsFrame=$15; //@line 51 "sheepai.cpp"
 label=4;break; //@line 54 "sheepai.cpp"
 case 3: 
 var $17=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(14184,0); //@line 57 "sheepai.cpp"
 var $18=$2; //@line 56 "sheepai.cpp"
 var $19=(($18)|0); //@line 56 "sheepai.cpp"
 var $20=$19; //@line 56 "sheepai.cpp"
 var $21=__Z17getUnitFramesListP17genericUnitStruct($20); //@line 56 "sheepai.cpp"
 var $22=(($21+((($17)*(80))&-1))|0); //@line 56 "sheepai.cpp"
 $gettingHeadsFrame=$22; //@line 56 "sheepai.cpp"
 label=4;break;
 case 4: 
 var $24=$2; //@line 62 "sheepai.cpp"
 var $25=(($24)|0); //@line 62 "sheepai.cpp"
 var $26=$25; //@line 62 "sheepai.cpp"
 var $27=__Z12getUnitFrameP17genericUnitStruct($26); //@line 62 "sheepai.cpp"
 $myUnitFrame=$27; //@line 62 "sheepai.cpp"
 var $28=$2; //@line 65 "sheepai.cpp"
 var $29=(($28)|0); //@line 65 "sheepai.cpp"
 var $30=(($29+224)|0); //@line 65 "sheepai.cpp"
 var $31=$30; //@line 65 "sheepai.cpp"
 var $32=(($31)|0); //@line 65 "sheepai.cpp"
 var $33=HEAP8[($32)]; //@line 65 "sheepai.cpp"
 var $34=(($33)&1); //@line 65 "sheepai.cpp"
 if($34){label=5;break;}else{label=9;break;} //@line 65 "sheepai.cpp"
 case 5: 
 var $36=$2; //@line 67 "sheepai.cpp"
 var $37=(($36)|0); //@line 67 "sheepai.cpp"
 var $38=(($37+224)|0); //@line 67 "sheepai.cpp"
 var $39=$38; //@line 67 "sheepai.cpp"
 var $40=(($39)|0); //@line 67 "sheepai.cpp"
 HEAP8[($40)]=0; //@line 67 "sheepai.cpp"
 var $41=$2; //@line 68 "sheepai.cpp"
 var $42=(($41)|0); //@line 68 "sheepai.cpp"
 var $43=(($42+224)|0); //@line 68 "sheepai.cpp"
 var $44=$43; //@line 68 "sheepai.cpp"
 var $45=(($44+1)|0); //@line 68 "sheepai.cpp"
 HEAP8[($45)]=0; //@line 68 "sheepai.cpp"
 var $46=$2; //@line 72 "sheepai.cpp"
 var $47=(($46)|0); //@line 72 "sheepai.cpp"
 var $48=$47; //@line 72 "sheepai.cpp"
 var $49=(($48+24)|0); //@line 72 "sheepai.cpp"
 var $50=HEAP32[(($49)>>2)]; //@line 72 "sheepai.cpp"
 var $51=($50|0)==3; //@line 72 "sheepai.cpp"
 if($51){label=6;break;}else{label=7;break;} //@line 72 "sheepai.cpp"
 case 6: 
 var $53=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(10848,0); //@line 75 "sheepai.cpp"
 var $54=$2; //@line 75 "sheepai.cpp"
 var $55=(($54)|0); //@line 75 "sheepai.cpp"
 var $56=$55; //@line 75 "sheepai.cpp"
 var $57=(($56+88)|0); //@line 75 "sheepai.cpp"
 HEAP32[(($57)>>2)]=$53; //@line 75 "sheepai.cpp"
 label=8;break; //@line 76 "sheepai.cpp"
 case 7: 
 var $59=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(8304,0); //@line 78 "sheepai.cpp"
 var $60=$2; //@line 78 "sheepai.cpp"
 var $61=(($60)|0); //@line 78 "sheepai.cpp"
 var $62=$61; //@line 78 "sheepai.cpp"
 var $63=(($62+88)|0); //@line 78 "sheepai.cpp"
 HEAP32[(($63)>>2)]=$59; //@line 78 "sheepai.cpp"
 label=8;break;
 case 8: 
 var $65=$2; //@line 81 "sheepai.cpp"
 var $66=(($65)|0); //@line 81 "sheepai.cpp"
 var $67=$66; //@line 81 "sheepai.cpp"
 var $68=(($67+92)|0); //@line 81 "sheepai.cpp"
 HEAP32[(($68)>>2)]=0; //@line 81 "sheepai.cpp"
 label=12;break; //@line 83 "sheepai.cpp"
 case 9: 
 var $70=$2; //@line 85 "sheepai.cpp"
 var $71=__Z13makeSheepWalkR20vectorListNodeStructI15enemyUnitStructE($70); //@line 85 "sheepai.cpp"
 if($71){label=11;break;}else{label=10;break;} //@line 85 "sheepai.cpp"
 case 10: 
 $1=0; //@line 85 "sheepai.cpp"
 label=37;break; //@line 85 "sheepai.cpp"
 case 11: 
 label=12;break;
 case 12: 
 var $75=$2; //@line 90 "sheepai.cpp"
 var $76=(($75)|0); //@line 90 "sheepai.cpp"
 var $77=$76; //@line 90 "sheepai.cpp"
 var $78=(($77+144)|0); //@line 90 "sheepai.cpp"
 var $79=(($78+4)|0); //@line 90 "sheepai.cpp"
 var $80=HEAP8[($79)]; //@line 90 "sheepai.cpp"
 var $81=($80&255); //@line 90 "sheepai.cpp"
 var $82=($81|0)==0; //@line 90 "sheepai.cpp"
 if($82){label=13;break;}else{label=36;break;} //@line 90 "sheepai.cpp"
 case 13: 
 var $84=$2; //@line 95 "sheepai.cpp"
 var $85=(($84)|0); //@line 95 "sheepai.cpp"
 var $86=$85; //@line 95 "sheepai.cpp"
 var $87=(($86+8)|0); //@line 95 "sheepai.cpp"
 var $88=HEAPF64[(($87)>>3)]; //@line 95 "sheepai.cpp"
 var $89=(($88)&-1); //@line 95 "sheepai.cpp"
 var $90=$gettingHeadsFrame; //@line 95 "sheepai.cpp"
 var $91=(($90+56)|0); //@line 95 "sheepai.cpp"
 var $92=HEAP32[(($91)>>2)]; //@line 95 "sheepai.cpp"
 var $93=((($89)+($92))|0); //@line 95 "sheepai.cpp"
 var $94=((($93)-(3))|0); //@line 95 "sheepai.cpp"
 $minX=$94; //@line 95 "sheepai.cpp"
 var $95=$2; //@line 96 "sheepai.cpp"
 var $96=(($95)|0); //@line 96 "sheepai.cpp"
 var $97=$96; //@line 96 "sheepai.cpp"
 var $98=(($97+8)|0); //@line 96 "sheepai.cpp"
 var $99=HEAPF64[(($98)>>3)]; //@line 96 "sheepai.cpp"
 var $100=(($99)&-1); //@line 96 "sheepai.cpp"
 var $101=$gettingHeadsFrame; //@line 96 "sheepai.cpp"
 var $102=(($101+56)|0); //@line 96 "sheepai.cpp"
 var $103=HEAP32[(($102)>>2)]; //@line 96 "sheepai.cpp"
 var $104=((($100)+($103))|0); //@line 96 "sheepai.cpp"
 var $105=((($104)+(3))|0); //@line 96 "sheepai.cpp"
 $maxX=$105; //@line 96 "sheepai.cpp"
 var $106=__ZN15vectorListClassI15enemyUnitStructE12getFirstNodeEv(19752); //@line 99 "sheepai.cpp"
 $head=$106; //@line 99 "sheepai.cpp"
 label=14;break; //@line 99 "sheepai.cpp"
 case 14: 
 var $108=$head; //@line 99 "sheepai.cpp"
 var $109=($108|0)!=0; //@line 99 "sheepai.cpp"
 if($109){label=15;break;}else{var $120=0;label=16;break;} //@line 99 "sheepai.cpp"
 case 15: 
 var $111=$2; //@line 99 "sheepai.cpp"
 var $112=(($111)|0); //@line 99 "sheepai.cpp"
 var $113=$112; //@line 99 "sheepai.cpp"
 var $114=(($113+144)|0); //@line 99 "sheepai.cpp"
 var $115=(($114+4)|0); //@line 99 "sheepai.cpp"
 var $116=HEAP8[($115)]; //@line 99 "sheepai.cpp"
 var $117=($116&255); //@line 99 "sheepai.cpp"
 var $118=($117|0)==0; //@line 99 "sheepai.cpp"
 var $120=$118;label=16;break;
 case 16: 
 var $120;
 if($120){label=17;break;}else{label=35;break;}
 case 17: 
 var $122=$head; //@line 106 "sheepai.cpp"
 var $123=(($122)|0); //@line 106 "sheepai.cpp"
 var $124=$123; //@line 106 "sheepai.cpp"
 var $125=(($124+24)|0); //@line 106 "sheepai.cpp"
 var $126=HEAP32[(($125)>>2)]; //@line 106 "sheepai.cpp"
 var $127=($126|0)==5; //@line 106 "sheepai.cpp"
 if($127){label=18;break;}else{label=20;break;} //@line 106 "sheepai.cpp"
 case 18: 
 var $129=$head; //@line 106 "sheepai.cpp"
 var $130=(($129)|0); //@line 106 "sheepai.cpp"
 var $131=$130; //@line 106 "sheepai.cpp"
 var $132=(($131+130)|0); //@line 106 "sheepai.cpp"
 var $133=HEAP8[($132)]; //@line 106 "sheepai.cpp"
 var $134=(($133)&1); //@line 106 "sheepai.cpp"
 if($134){label=19;break;}else{label=20;break;} //@line 106 "sheepai.cpp"
 case 19: 
 var $136=$head; //@line 110 "sheepai.cpp"
 var $137=(($136)|0); //@line 110 "sheepai.cpp"
 var $138=$137; //@line 110 "sheepai.cpp"
 var $139=__Z12getUnitFrameP17genericUnitStruct($138); //@line 110 "sheepai.cpp"
 $headFrame=$139; //@line 110 "sheepai.cpp"
 var $140=$head; //@line 111 "sheepai.cpp"
 var $141=(($140)|0); //@line 111 "sheepai.cpp"
 var $142=$141; //@line 111 "sheepai.cpp"
 var $143=(($142+8)|0); //@line 111 "sheepai.cpp"
 var $144=HEAPF64[(($143)>>3)]; //@line 111 "sheepai.cpp"
 var $145=(($144)&-1); //@line 111 "sheepai.cpp"
 var $146=$headFrame; //@line 111 "sheepai.cpp"
 var $147=(($146+56)|0); //@line 111 "sheepai.cpp"
 var $148=HEAP32[(($147)>>2)]; //@line 111 "sheepai.cpp"
 var $149=((($145)+($148))|0); //@line 111 "sheepai.cpp"
 $headX=$149; //@line 111 "sheepai.cpp"
 label=20;break; //@line 112 "sheepai.cpp"
 case 20: 
 var $151=$head; //@line 115 "sheepai.cpp"
 var $152=(($151)|0); //@line 115 "sheepai.cpp"
 var $153=$152; //@line 115 "sheepai.cpp"
 var $154=(($153+130)|0); //@line 115 "sheepai.cpp"
 var $155=HEAP8[($154)]; //@line 115 "sheepai.cpp"
 var $156=(($155)&1); //@line 115 "sheepai.cpp"
 if($156){label=21;break;}else{label=33;break;} //@line 115 "sheepai.cpp"
 case 21: 
 var $158=$head; //@line 115 "sheepai.cpp"
 var $159=(($158)|0); //@line 115 "sheepai.cpp"
 var $160=$159; //@line 115 "sheepai.cpp"
 var $161=(($160+24)|0); //@line 115 "sheepai.cpp"
 var $162=HEAP32[(($161)>>2)]; //@line 115 "sheepai.cpp"
 var $163=($162|0)==5; //@line 115 "sheepai.cpp"
 if($163){label=22;break;}else{label=33;break;} //@line 115 "sheepai.cpp"
 case 22: 
 var $165=$head; //@line 115 "sheepai.cpp"
 var $166=(($165)|0); //@line 115 "sheepai.cpp"
 var $167=$166; //@line 115 "sheepai.cpp"
 var $168=(($167+132)|0); //@line 115 "sheepai.cpp"
 var $169=(($168+4)|0); //@line 115 "sheepai.cpp"
 var $170=HEAP8[($169)]; //@line 115 "sheepai.cpp"
 var $171=($170&255); //@line 115 "sheepai.cpp"
 var $172=($171|0)==0; //@line 115 "sheepai.cpp"
 if($172){label=23;break;}else{label=33;break;} //@line 115 "sheepai.cpp"
 case 23: 
 var $174=$head; //@line 115 "sheepai.cpp"
 var $175=(($174)|0); //@line 115 "sheepai.cpp"
 var $176=(($175+224)|0); //@line 115 "sheepai.cpp"
 var $177=$176; //@line 115 "sheepai.cpp"
 var $178=(($177)|0); //@line 115 "sheepai.cpp"
 var $179=HEAP8[($178)]; //@line 115 "sheepai.cpp"
 var $180=(($179)&1); //@line 115 "sheepai.cpp"
 if($180){label=33;break;}else{label=24;break;} //@line 115 "sheepai.cpp"
 case 24: 
 var $182=$headX; //@line 115 "sheepai.cpp"
 var $183=$minX; //@line 115 "sheepai.cpp"
 var $184=($182|0)>=($183|0); //@line 115 "sheepai.cpp"
 if($184){label=25;break;}else{label=33;break;} //@line 115 "sheepai.cpp"
 case 25: 
 var $186=$headX; //@line 115 "sheepai.cpp"
 var $187=$maxX; //@line 115 "sheepai.cpp"
 var $188=($186|0)<=($187|0); //@line 115 "sheepai.cpp"
 if($188){label=26;break;}else{label=33;break;} //@line 115 "sheepai.cpp"
 case 26: 
 var $190=$head; //@line 126 "sheepai.cpp"
 var $191=(($190)|0); //@line 126 "sheepai.cpp"
 var $192=$191; //@line 126 "sheepai.cpp"
 var $193=(($192)|0); //@line 126 "sheepai.cpp"
 var $194=HEAP32[(($193)>>2)]; //@line 126 "sheepai.cpp"
 var $195=$2; //@line 126 "sheepai.cpp"
 var $196=(($195)|0); //@line 126 "sheepai.cpp"
 var $197=$196; //@line 126 "sheepai.cpp"
 var $198=(($197+144)|0); //@line 126 "sheepai.cpp"
 var $199=(($198)|0); //@line 126 "sheepai.cpp"
 HEAP32[(($199)>>2)]=$194; //@line 126 "sheepai.cpp"
 var $200=$head; //@line 128 "sheepai.cpp"
 var $201=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$200); //@line 128 "sheepai.cpp"
 var $202=$2; //@line 128 "sheepai.cpp"
 var $203=(($202)|0); //@line 128 "sheepai.cpp"
 var $204=$203; //@line 128 "sheepai.cpp"
 var $205=(($204+144)|0); //@line 128 "sheepai.cpp"
 var $206=(($205+8)|0); //@line 128 "sheepai.cpp"
 HEAP32[(($206)>>2)]=$201; //@line 128 "sheepai.cpp"
 var $207=$head; //@line 129 "sheepai.cpp"
 var $208=(($207)|0); //@line 129 "sheepai.cpp"
 var $209=$208; //@line 129 "sheepai.cpp"
 var $210=(($209+28)|0); //@line 129 "sheepai.cpp"
 var $211=HEAP8[($210)]; //@line 129 "sheepai.cpp"
 var $212=$2; //@line 129 "sheepai.cpp"
 var $213=(($212)|0); //@line 129 "sheepai.cpp"
 var $214=$213; //@line 129 "sheepai.cpp"
 var $215=(($214+144)|0); //@line 129 "sheepai.cpp"
 var $216=(($215+4)|0); //@line 129 "sheepai.cpp"
 HEAP8[($216)]=$211; //@line 129 "sheepai.cpp"
 var $217=$2; //@line 133 "sheepai.cpp"
 var $218=(($217)|0); //@line 133 "sheepai.cpp"
 var $219=$218; //@line 133 "sheepai.cpp"
 var $220=(($219)|0); //@line 133 "sheepai.cpp"
 var $221=HEAP32[(($220)>>2)]; //@line 133 "sheepai.cpp"
 var $222=$head; //@line 133 "sheepai.cpp"
 var $223=(($222)|0); //@line 133 "sheepai.cpp"
 var $224=$223; //@line 133 "sheepai.cpp"
 var $225=(($224+132)|0); //@line 133 "sheepai.cpp"
 var $226=(($225)|0); //@line 133 "sheepai.cpp"
 HEAP32[(($226)>>2)]=$221; //@line 133 "sheepai.cpp"
 var $227=$2; //@line 135 "sheepai.cpp"
 var $228=__ZN15vectorListClassI15enemyUnitStructE8getIndexEP20vectorListNodeStructIS0_E(19752,$227); //@line 135 "sheepai.cpp"
 var $229=$head; //@line 135 "sheepai.cpp"
 var $230=(($229)|0); //@line 135 "sheepai.cpp"
 var $231=$230; //@line 135 "sheepai.cpp"
 var $232=(($231+132)|0); //@line 135 "sheepai.cpp"
 var $233=(($232+8)|0); //@line 135 "sheepai.cpp"
 HEAP32[(($233)>>2)]=$228; //@line 135 "sheepai.cpp"
 var $234=$2; //@line 136 "sheepai.cpp"
 var $235=(($234)|0); //@line 136 "sheepai.cpp"
 var $236=$235; //@line 136 "sheepai.cpp"
 var $237=(($236+28)|0); //@line 136 "sheepai.cpp"
 var $238=HEAP8[($237)]; //@line 136 "sheepai.cpp"
 var $239=$head; //@line 136 "sheepai.cpp"
 var $240=(($239)|0); //@line 136 "sheepai.cpp"
 var $241=$240; //@line 136 "sheepai.cpp"
 var $242=(($241+132)|0); //@line 136 "sheepai.cpp"
 var $243=(($242+4)|0); //@line 136 "sheepai.cpp"
 HEAP8[($243)]=$238; //@line 136 "sheepai.cpp"
 var $244=$2; //@line 140 "sheepai.cpp"
 var $245=(($244)|0); //@line 140 "sheepai.cpp"
 var $246=$245; //@line 140 "sheepai.cpp"
 var $247=(($246+24)|0); //@line 140 "sheepai.cpp"
 var $248=HEAP32[(($247)>>2)]; //@line 140 "sheepai.cpp"
 var $249=($248|0)==3; //@line 140 "sheepai.cpp"
 if($249){label=27;break;}else{label=28;break;} //@line 140 "sheepai.cpp"
 case 27: 
 var $251=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(6480,0); //@line 144 "sheepai.cpp"
 var $252=$head; //@line 144 "sheepai.cpp"
 var $253=(($252)|0); //@line 144 "sheepai.cpp"
 var $254=$253; //@line 144 "sheepai.cpp"
 var $255=(($254+88)|0); //@line 144 "sheepai.cpp"
 HEAP32[(($255)>>2)]=$251; //@line 144 "sheepai.cpp"
 var $256=$head; //@line 146 "sheepai.cpp"
 var $257=(($256)|0); //@line 146 "sheepai.cpp"
 var $258=$257; //@line 146 "sheepai.cpp"
 var $259=(($258+92)|0); //@line 146 "sheepai.cpp"
 HEAP32[(($259)>>2)]=0; //@line 146 "sheepai.cpp"
 label=29;break; //@line 147 "sheepai.cpp"
 case 28: 
 var $261=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(5392,0); //@line 149 "sheepai.cpp"
 var $262=$head; //@line 149 "sheepai.cpp"
 var $263=(($262)|0); //@line 149 "sheepai.cpp"
 var $264=$263; //@line 149 "sheepai.cpp"
 var $265=(($264+88)|0); //@line 149 "sheepai.cpp"
 HEAP32[(($265)>>2)]=$261; //@line 149 "sheepai.cpp"
 var $266=$head; //@line 151 "sheepai.cpp"
 var $267=(($266)|0); //@line 151 "sheepai.cpp"
 var $268=$267; //@line 151 "sheepai.cpp"
 var $269=(($268+92)|0); //@line 151 "sheepai.cpp"
 HEAP32[(($269)>>2)]=0; //@line 151 "sheepai.cpp"
 label=29;break;
 case 29: 
 var $271=$2; //@line 155 "sheepai.cpp"
 var $272=(($271)|0); //@line 155 "sheepai.cpp"
 var $273=$272; //@line 155 "sheepai.cpp"
 var $274=(($273+24)|0); //@line 155 "sheepai.cpp"
 var $275=HEAP32[(($274)>>2)]; //@line 155 "sheepai.cpp"
 var $276=($275|0)==3; //@line 155 "sheepai.cpp"
 if($276){label=30;break;}else{label=31;break;} //@line 155 "sheepai.cpp"
 case 30: 
 var $278=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(6888,0); //@line 159 "sheepai.cpp"
 var $279=$2; //@line 159 "sheepai.cpp"
 var $280=(($279)|0); //@line 159 "sheepai.cpp"
 var $281=$280; //@line 159 "sheepai.cpp"
 var $282=(($281+88)|0); //@line 159 "sheepai.cpp"
 HEAP32[(($282)>>2)]=$278; //@line 159 "sheepai.cpp"
 var $283=$2; //@line 161 "sheepai.cpp"
 var $284=(($283)|0); //@line 161 "sheepai.cpp"
 var $285=$284; //@line 161 "sheepai.cpp"
 var $286=(($285+92)|0); //@line 161 "sheepai.cpp"
 HEAP32[(($286)>>2)]=0; //@line 161 "sheepai.cpp"
 label=32;break; //@line 162 "sheepai.cpp"
 case 31: 
 var $288=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(14184,0); //@line 164 "sheepai.cpp"
 var $289=$2; //@line 164 "sheepai.cpp"
 var $290=(($289)|0); //@line 164 "sheepai.cpp"
 var $291=$290; //@line 164 "sheepai.cpp"
 var $292=(($291+88)|0); //@line 164 "sheepai.cpp"
 HEAP32[(($292)>>2)]=$288; //@line 164 "sheepai.cpp"
 var $293=$2; //@line 166 "sheepai.cpp"
 var $294=(($293)|0); //@line 166 "sheepai.cpp"
 var $295=$294; //@line 166 "sheepai.cpp"
 var $296=(($295+92)|0); //@line 166 "sheepai.cpp"
 HEAP32[(($296)>>2)]=0; //@line 166 "sheepai.cpp"
 label=32;break;
 case 32: 
 var $298=$2; //@line 170 "sheepai.cpp"
 var $299=(($298)|0); //@line 170 "sheepai.cpp"
 var $300=$299; //@line 170 "sheepai.cpp"
 var $301=(($300+156)|0); //@line 170 "sheepai.cpp"
 HEAP8[($301)]=0; //@line 170 "sheepai.cpp"
 var $302=$head; //@line 173 "sheepai.cpp"
 var $303=(($302)|0); //@line 173 "sheepai.cpp"
 var $304=$303; //@line 173 "sheepai.cpp"
 var $305=(($304+129)|0); //@line 173 "sheepai.cpp"
 HEAP8[($305)]=0; //@line 173 "sheepai.cpp"
 label=33;break; //@line 174 "sheepai.cpp"
 case 33: 
 label=34;break; //@line 175 "sheepai.cpp"
 case 34: 
 var $308=$head; //@line 103 "sheepai.cpp"
 var $309=__ZN15vectorListClassI15enemyUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(19752,$308); //@line 103 "sheepai.cpp"
 $head=$309; //@line 103 "sheepai.cpp"
 label=14;break; //@line 103 "sheepai.cpp"
 case 35: 
 label=36;break; //@line 176 "sheepai.cpp"
 case 36: 
 $1=1; //@line 343 "sheepai.cpp"
 label=37;break; //@line 343 "sheepai.cpp"
 case 37: 
 var $313=$1; //@line 344 "sheepai.cpp"
 STACKTOP=sp;return $313; //@line 344 "sheepai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13makeSheepWalkR20vectorListNodeStructI15enemyUnitStructE($unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $walkingFrameNum;
 var $speed;
 $1=$unit;
 var $2=$1; //@line 359 "sheepai.cpp"
 var $3=(($2)|0); //@line 359 "sheepai.cpp"
 var $4=$3; //@line 359 "sheepai.cpp"
 var $5=(($4+24)|0); //@line 359 "sheepai.cpp"
 var $6=HEAP32[(($5)>>2)]; //@line 359 "sheepai.cpp"
 var $7=($6|0)==3; //@line 359 "sheepai.cpp"
 if($7){label=2;break;}else{label=3;break;} //@line 359 "sheepai.cpp"
 case 2: 
 var $9=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(4656,0); //@line 361 "sheepai.cpp"
 $walkingFrameNum=$9; //@line 361 "sheepai.cpp"
 var $10=$1; //@line 364 "sheepai.cpp"
 var $11=(($10)|0); //@line 364 "sheepai.cpp"
 var $12=$11; //@line 364 "sheepai.cpp"
 var $13=(($12+80)|0); //@line 364 "sheepai.cpp"
 var $14=HEAPF64[(($13)>>3)]; //@line 364 "sheepai.cpp"
 $speed=$14; //@line 364 "sheepai.cpp"
 label=4;break; //@line 365 "sheepai.cpp"
 case 3: 
 var $16=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(3896,0); //@line 366 "sheepai.cpp"
 $walkingFrameNum=$16; //@line 366 "sheepai.cpp"
 var $17=$1; //@line 369 "sheepai.cpp"
 var $18=(($17)|0); //@line 369 "sheepai.cpp"
 var $19=$18; //@line 369 "sheepai.cpp"
 var $20=(($19+80)|0); //@line 369 "sheepai.cpp"
 var $21=HEAPF64[(($20)>>3)]; //@line 369 "sheepai.cpp"
 $speed=$21; //@line 369 "sheepai.cpp"
 label=4;break;
 case 4: 
 var $23=$1; //@line 374 "sheepai.cpp"
 var $24=(($23)|0); //@line 374 "sheepai.cpp"
 var $25=$24; //@line 374 "sheepai.cpp"
 var $26=(($25+156)|0); //@line 374 "sheepai.cpp"
 HEAP8[($26)]=1; //@line 374 "sheepai.cpp"
 var $27=$1; //@line 375 "sheepai.cpp"
 var $28=(($27)|0); //@line 375 "sheepai.cpp"
 var $29=$28; //@line 375 "sheepai.cpp"
 var $30=(($29+8)|0); //@line 375 "sheepai.cpp"
 var $31=HEAPF64[(($30)>>3)]; //@line 375 "sheepai.cpp"
 var $32=($31)-(5); //@line 375 "sheepai.cpp"
 var $33=$1; //@line 375 "sheepai.cpp"
 var $34=(($33)|0); //@line 375 "sheepai.cpp"
 var $35=$34; //@line 375 "sheepai.cpp"
 var $36=(($35+160)|0); //@line 375 "sheepai.cpp"
 HEAPF64[(($36)>>3)]=$32; //@line 375 "sheepai.cpp"
 var $37=$1; //@line 377 "sheepai.cpp"
 var $38=(($37)|0); //@line 377 "sheepai.cpp"
 var $39=$38; //@line 377 "sheepai.cpp"
 var $40=(($39+160)|0); //@line 377 "sheepai.cpp"
 var $41=HEAPF64[(($40)>>3)]; //@line 377 "sheepai.cpp"
 var $42=(($41)&-1); //@line 377 "sheepai.cpp"
 var $43=__Z13getGroundWalli($42); //@line 377 "sheepai.cpp"
 var $44=$walkingFrameNum; //@line 377 "sheepai.cpp"
 var $45=$1; //@line 378 "sheepai.cpp"
 var $46=(($45)|0); //@line 378 "sheepai.cpp"
 var $47=$46; //@line 378 "sheepai.cpp"
 var $48=__Z17getUnitFramesListP17genericUnitStruct($47); //@line 378 "sheepai.cpp"
 var $49=(($48+((($44)*(80))&-1))|0); //@line 378 "sheepai.cpp"
 var $50=(($49+36)|0); //@line 378 "sheepai.cpp"
 var $51=HEAP32[(($50)>>2)]; //@line 378 "sheepai.cpp"
 var $52=((($43)-($51))|0); //@line 378 "sheepai.cpp"
 var $53=$walkingFrameNum; //@line 378 "sheepai.cpp"
 var $54=$1; //@line 379 "sheepai.cpp"
 var $55=(($54)|0); //@line 379 "sheepai.cpp"
 var $56=$55; //@line 379 "sheepai.cpp"
 var $57=__Z17getUnitFramesListP17genericUnitStruct($56); //@line 379 "sheepai.cpp"
 var $58=(($57+((($53)*(80))&-1))|0); //@line 379 "sheepai.cpp"
 var $59=(($58+44)|0); //@line 379 "sheepai.cpp"
 var $60=HEAP32[(($59)>>2)]; //@line 379 "sheepai.cpp"
 var $61=((($52)+($60))|0); //@line 379 "sheepai.cpp"
 var $62=($61|0); //@line 379 "sheepai.cpp"
 var $63=$1; //@line 379 "sheepai.cpp"
 var $64=(($63)|0); //@line 379 "sheepai.cpp"
 var $65=$64; //@line 379 "sheepai.cpp"
 var $66=(($65+168)|0); //@line 379 "sheepai.cpp"
 HEAPF64[(($66)>>3)]=$62; //@line 379 "sheepai.cpp"
 var $67=$1; //@line 382 "sheepai.cpp"
 var $68=(($67)|0); //@line 382 "sheepai.cpp"
 var $69=$68; //@line 382 "sheepai.cpp"
 var $70=(($69+96)|0); //@line 382 "sheepai.cpp"
 var $71=HEAP8[($70)]; //@line 382 "sheepai.cpp"
 var $72=(($71)&1); //@line 382 "sheepai.cpp"
 if($72){label=5;break;}else{label=6;break;} //@line 382 "sheepai.cpp"
 case 5: 
 var $74=HEAPF64[((19560)>>3)]; //@line 384 "sheepai.cpp"
 var $75=$1; //@line 384 "sheepai.cpp"
 var $76=(($75)|0); //@line 384 "sheepai.cpp"
 var $77=$76; //@line 384 "sheepai.cpp"
 var $78=(($77+160)|0); //@line 384 "sheepai.cpp"
 var $79=HEAPF64[(($78)>>3)]; //@line 384 "sheepai.cpp"
 var $80=($79)-($74); //@line 384 "sheepai.cpp"
 HEAPF64[(($78)>>3)]=$80; //@line 384 "sheepai.cpp"
 var $81=HEAPF64[((19568)>>3)]; //@line 385 "sheepai.cpp"
 var $82=$1; //@line 385 "sheepai.cpp"
 var $83=(($82)|0); //@line 385 "sheepai.cpp"
 var $84=$83; //@line 385 "sheepai.cpp"
 var $85=(($84+168)|0); //@line 385 "sheepai.cpp"
 var $86=HEAPF64[(($85)>>3)]; //@line 385 "sheepai.cpp"
 var $87=($86)-($81); //@line 385 "sheepai.cpp"
 HEAPF64[(($85)>>3)]=$87; //@line 385 "sheepai.cpp"
 label=6;break; //@line 386 "sheepai.cpp"
 case 6: 
 var $89=$1; //@line 388 "sheepai.cpp"
 var $90=(($89)|0); //@line 388 "sheepai.cpp"
 var $91=$90; //@line 388 "sheepai.cpp"
 var $92=$1; //@line 388 "sheepai.cpp"
 var $93=(($92)|0); //@line 388 "sheepai.cpp"
 var $94=$93; //@line 388 "sheepai.cpp"
 var $95=(($94+160)|0); //@line 388 "sheepai.cpp"
 var $96=HEAPF64[(($95)>>3)]; //@line 388 "sheepai.cpp"
 var $97=$1; //@line 388 "sheepai.cpp"
 var $98=(($97)|0); //@line 388 "sheepai.cpp"
 var $99=$98; //@line 388 "sheepai.cpp"
 var $100=(($99+168)|0); //@line 388 "sheepai.cpp"
 var $101=HEAPF64[(($100)>>3)]; //@line 388 "sheepai.cpp"
 var $102=$speed; //@line 388 "sheepai.cpp"
 var $103=__Z21setSpeedForLinealMoveP17genericUnitStructeed($91,$96,$101,$102); //@line 388 "sheepai.cpp"
 STACKTOP=sp;return 1; //@line 393 "sheepai.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12getNextLeveli14gameStagesEnum($fromLevel,$fromStage){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $level;
 $1=$fromLevel;
 $2=$fromStage;
 var $3=$1; //@line 38 "staging.cpp"
 $level=$3; //@line 38 "staging.cpp"
 var $4=$2; //@line 41 "staging.cpp"
 if(($4|0)==0){ label=2;break;}else if(($4|0)==2){ label=3;break;}else{label=4;break;}
 case 2: 
 $level=1; //@line 44 "staging.cpp"
 label=5;break; //@line 45 "staging.cpp"
 case 3: 
 var $7=$level; //@line 47 "staging.cpp"
 var $8=((($7)+(1))|0); //@line 47 "staging.cpp"
 $level=$8; //@line 47 "staging.cpp"
 label=5;break; //@line 48 "staging.cpp"
 case 4: 
 label=5;break; //@line 51 "staging.cpp"
 case 5: 
 var $11=$level; //@line 55 "staging.cpp"
 STACKTOP=sp;return $11; //@line 55 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12getNextStagei14gameStagesEnum($fromLevel,$fromStage){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $stage;
 $1=$fromLevel;
 $2=$fromStage;
 var $3=$2; //@line 63 "staging.cpp"
 $stage=$3; //@line 63 "staging.cpp"
 var $4=$stage; //@line 66 "staging.cpp"
 if(($4|0)==0){ label=2;break;}else if(($4|0)==1){ label=3;break;}else if(($4|0)==2){ label=4;break;}else{label=5;break;}
 case 2: 
 $stage=1; //@line 69 "staging.cpp"
 label=6;break; //@line 70 "staging.cpp"
 case 3: 
 $stage=2; //@line 73 "staging.cpp"
 label=6;break; //@line 74 "staging.cpp"
 case 4: 
 $stage=1; //@line 77 "staging.cpp"
 label=6;break; //@line 78 "staging.cpp"
 case 5: 
 label=6;break; //@line 81 "staging.cpp"
 case 6: 
 var $10=$stage; //@line 85 "staging.cpp"
 STACKTOP=sp;return $10; //@line 85 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z25activateCurrentStageLevelv(){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $logToConsole;
 var $wgUnit;
 var $properties=sp;
 var $2=(sp)+(8);
 var $3=HEAP32[((19488)>>2)]; //@line 99 "staging.cpp"
 var $4=HEAP32[((19484)>>2)]; //@line 99 "staging.cpp"
 __Z23getStageLevelPropertiesi14gameStagesEnum($2,$3,$4); //@line 99 "staging.cpp"
 var $5=$properties; //@line 99 "staging.cpp"
 var $6=$2; //@line 99 "staging.cpp"
 assert(4 % 1 === 0);HEAP32[(($5)>>2)]=HEAP32[(($6)>>2)]; //@line 99 "staging.cpp"
 var $7=(($properties)|0); //@line 103 "staging.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 103 "staging.cpp"
 HEAP32[((19492)>>2)]=$8; //@line 103 "staging.cpp"
 var $9=HEAP32[((19484)>>2)]; //@line 106 "staging.cpp"
 if(($9|0)==1|($9|0)==2){ label=2;break;}else{label=19;break;}
 case 2: 
 var $11=__ZN15vectorListClassI17waveGenUnitStructE12getFirstNodeEv(18544); //@line 113 "staging.cpp"
 $wgUnit=$11; //@line 113 "staging.cpp"
 label=3;break; //@line 113 "staging.cpp"
 case 3: 
 var $13=$wgUnit; //@line 113 "staging.cpp"
 var $14=($13|0)!=0; //@line 113 "staging.cpp"
 if($14){label=4;break;}else{label=18;break;} //@line 113 "staging.cpp"
 case 4: 
 var $16=$wgUnit; //@line 117 "staging.cpp"
 var $17=(($16)|0); //@line 117 "staging.cpp"
 var $18=$17; //@line 117 "staging.cpp"
 var $19=(($18+130)|0); //@line 117 "staging.cpp"
 var $20=HEAP8[($19)]; //@line 117 "staging.cpp"
 var $21=(($20)&1); //@line 117 "staging.cpp"
 if($21){label=6;break;}else{label=5;break;} //@line 117 "staging.cpp"
 case 5: 
 label=17;break; //@line 117 "staging.cpp"
 case 6: 
 var $24=$wgUnit; //@line 120 "staging.cpp"
 var $25=(($24)|0); //@line 120 "staging.cpp"
 var $26=$25; //@line 120 "staging.cpp"
 var $27=(($26+24)|0); //@line 120 "staging.cpp"
 var $28=HEAP32[(($27)>>2)]; //@line 120 "staging.cpp"
 if(($28|0)==3){ label=11;break;}else if(($28|0)==1|($28|0)==2){ label=7;break;}else{label=15;break;}
 case 7: 
 var $30=HEAP32[((19484)>>2)]; //@line 125 "staging.cpp"
 var $31=($30|0)==1; //@line 125 "staging.cpp"
 var $32=$wgUnit; //@line 125 "staging.cpp"
 var $33=(($32)|0); //@line 125 "staging.cpp"
 var $34=(($33+176)|0); //@line 125 "staging.cpp"
 var $35=($31&1); //@line 125 "staging.cpp"
 HEAP8[($34)]=$35; //@line 125 "staging.cpp"
 var $36=HEAP32[((19488)>>2)]; //@line 129 "staging.cpp"
 var $37=((($36)-(1))|0); //@line 129 "staging.cpp"
 var $38=($37|0); //@line 129 "staging.cpp"
 var $39=($38)*((0.2)); //@line 129 "staging.cpp"
 var $40=(1)-($39); //@line 129 "staging.cpp"
 var $41=(0.15)>$40; //@line 129 "staging.cpp"
 if($41){label=8;break;}else{label=9;break;} //@line 129 "staging.cpp"
 case 8: 
 var $50=0.15;label=10;break; //@line 129 "staging.cpp"
 case 9: 
 var $44=HEAP32[((19488)>>2)]; //@line 129 "staging.cpp"
 var $45=((($44)-(1))|0); //@line 129 "staging.cpp"
 var $46=($45|0); //@line 129 "staging.cpp"
 var $47=($46)*((0.2)); //@line 129 "staging.cpp"
 var $48=(1)-($47); //@line 129 "staging.cpp"
 var $50=$48;label=10;break; //@line 129 "staging.cpp"
 case 10: 
 var $50; //@line 129 "staging.cpp"
 var $51=$wgUnit; //@line 129 "staging.cpp"
 var $52=(($51)|0); //@line 129 "staging.cpp"
 var $53=(($52+184)|0); //@line 129 "staging.cpp"
 HEAPF64[(($53)>>3)]=$50; //@line 129 "staging.cpp"
 label=16;break; //@line 132 "staging.cpp"
 case 11: 
 var $55=HEAP32[((19484)>>2)]; //@line 136 "staging.cpp"
 var $56=($55|0)==2; //@line 136 "staging.cpp"
 var $57=$wgUnit; //@line 136 "staging.cpp"
 var $58=(($57)|0); //@line 136 "staging.cpp"
 var $59=(($58+176)|0); //@line 136 "staging.cpp"
 var $60=($56&1); //@line 136 "staging.cpp"
 HEAP8[($59)]=$60; //@line 136 "staging.cpp"
 var $61=HEAP32[((19488)>>2)]; //@line 140 "staging.cpp"
 var $62=((($61)-(1))|0); //@line 140 "staging.cpp"
 var $63=($62|0); //@line 140 "staging.cpp"
 var $64=($63)*((0.1)); //@line 140 "staging.cpp"
 var $65=((0.5))-($64); //@line 140 "staging.cpp"
 var $66=(0.15)>$65; //@line 140 "staging.cpp"
 if($66){label=12;break;}else{label=13;break;} //@line 140 "staging.cpp"
 case 12: 
 var $75=0.15;label=14;break; //@line 140 "staging.cpp"
 case 13: 
 var $69=HEAP32[((19488)>>2)]; //@line 140 "staging.cpp"
 var $70=((($69)-(1))|0); //@line 140 "staging.cpp"
 var $71=($70|0); //@line 140 "staging.cpp"
 var $72=($71)*((0.1)); //@line 140 "staging.cpp"
 var $73=((0.5))-($72); //@line 140 "staging.cpp"
 var $75=$73;label=14;break; //@line 140 "staging.cpp"
 case 14: 
 var $75; //@line 140 "staging.cpp"
 var $76=$wgUnit; //@line 140 "staging.cpp"
 var $77=(($76)|0); //@line 140 "staging.cpp"
 var $78=(($77+184)|0); //@line 140 "staging.cpp"
 HEAPF64[(($78)>>3)]=$75; //@line 140 "staging.cpp"
 label=16;break; //@line 143 "staging.cpp"
 case 15: 
 label=16;break; //@line 146 "staging.cpp"
 case 16: 
 label=17;break; //@line 148 "staging.cpp"
 case 17: 
 var $82=$wgUnit; //@line 114 "staging.cpp"
 var $83=__ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(18544,$82); //@line 114 "staging.cpp"
 $wgUnit=$83; //@line 114 "staging.cpp"
 label=3;break; //@line 114 "staging.cpp"
 case 18: 
 label=20;break; //@line 150 "staging.cpp"
 case 19: 
 $1=0; //@line 155 "staging.cpp"
 label=21;break; //@line 155 "staging.cpp"
 case 20: 
 $logToConsole=1; //@line 162 "staging.cpp"
 var $87=$logToConsole; //@line 166 "staging.cpp"
 var $88=(($87)&1); //@line 166 "staging.cpp"
 var $89=__Z24logCurrentStageLevelInfob($88); //@line 166 "staging.cpp"
 $1=1; //@line 168 "staging.cpp"
 label=21;break; //@line 168 "staging.cpp"
 case 21: 
 var $91=$1; //@line 169 "staging.cpp"
 STACKTOP=sp;return $91; //@line 169 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z23getStageLevelPropertiesi14gameStagesEnum($agg_result,$level,$stage){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $stIndex;
 var $timeInSec;
 $1=$level;
 $2=$stage;
 var $3=$1; //@line 320 "staging.cpp"
 var $4=$2; //@line 320 "staging.cpp"
 var $5=__Z18getStageLevelIndexi14gameStagesEnum($3,$4); //@line 320 "staging.cpp"
 $stIndex=$5; //@line 320 "staging.cpp"
 var $6=$2; //@line 327 "staging.cpp"
 var $7=($6|0)==2; //@line 327 "staging.cpp"
 if($7){label=2;break;}else{label=6;break;} //@line 327 "staging.cpp"
 case 2: 
 var $9=$1; //@line 329 "staging.cpp"
 var $10=((($9)-(1))|0); //@line 329 "staging.cpp"
 var $11=($10|0); //@line 329 "staging.cpp"
 var $12=($11)*((1.2)); //@line 329 "staging.cpp"
 var $13=($12)+(2); //@line 329 "staging.cpp"
 $timeInSec=$13; //@line 329 "staging.cpp"
 var $14=$timeInSec; //@line 330 "staging.cpp"
 var $15=$14<6; //@line 330 "staging.cpp"
 if($15){label=3;break;}else{label=4;break;} //@line 330 "staging.cpp"
 case 3: 
 var $17=$timeInSec; //@line 330 "staging.cpp"
 var $20=$17;label=5;break; //@line 330 "staging.cpp"
 case 4: 
 var $20=6;label=5;break; //@line 330 "staging.cpp"
 case 5: 
 var $20; //@line 330 "staging.cpp"
 $timeInSec=$20; //@line 330 "staging.cpp"
 label=7;break; //@line 331 "staging.cpp"
 case 6: 
 $timeInSec=20; //@line 333 "staging.cpp"
 label=7;break;
 case 7: 
 var $23=$timeInSec; //@line 335 "staging.cpp"
 var $24=HEAP32[((2136)>>2)]; //@line 335 "staging.cpp"
 var $25=($24|0); //@line 335 "staging.cpp"
 var $26=($23)*($25); //@line 335 "staging.cpp"
 var $27=(($26)&-1); //@line 335 "staging.cpp"
 var $28=(($agg_result)|0); //@line 335 "staging.cpp"
 HEAP32[(($28)>>2)]=$27; //@line 335 "staging.cpp"
 STACKTOP=sp;return; //@line 338 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z24logCurrentStageLevelInfob($toConsole){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $strStage;
 var $3=($toConsole&1);
 $2=$3;
 var $4=HEAP32[((19484)>>2)]; //@line 194 "staging.cpp"
 if(($4|0)==0){ label=2;break;}else if(($4|0)==1){ label=3;break;}else if(($4|0)==2){ label=4;break;}else{label=5;break;}
 case 2: 
 $strStage=6456; //@line 197 "staging.cpp"
 label=6;break; //@line 201 "staging.cpp"
 case 3: 
 $strStage=14120; //@line 204 "staging.cpp"
 label=6;break; //@line 208 "staging.cpp"
 case 4: 
 $strStage=10736; //@line 211 "staging.cpp"
 label=6;break; //@line 215 "staging.cpp"
 case 5: 
 $strStage=8288; //@line 217 "staging.cpp"
 label=6;break; //@line 218 "staging.cpp"
 case 6: 
 var $10=$2; //@line 222 "staging.cpp"
 var $11=(($10)&1); //@line 222 "staging.cpp"
 var $12=$strStage; //@line 222 "staging.cpp"
 var $13=HEAP32[((19488)>>2)]; //@line 222 "staging.cpp"
 var $14=HEAP32[((19488)>>2)]; //@line 226 "staging.cpp"
 var $15=HEAP32[((19484)>>2)]; //@line 226 "staging.cpp"
 var $16=__Z18getStageLevelIndexi14gameStagesEnum($14,$15); //@line 226 "staging.cpp"
 var $17=__ZN14conLoggerClass7logLineEPcbbbz(19416,6416,1,$11,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$12,HEAP32[(((tempVarArgs)+(8))>>2)]=$13,HEAP32[(((tempVarArgs)+(16))>>2)]=$16,tempVarArgs)); STACKTOP=tempVarArgs; //@line 226 "staging.cpp"
 if($17){label=8;break;}else{label=7;break;} //@line 226 "staging.cpp"
 case 7: 
 $1=0; //@line 230 "staging.cpp"
 label=9;break; //@line 230 "staging.cpp"
 case 8: 
 $1=1; //@line 233 "staging.cpp"
 label=9;break; //@line 233 "staging.cpp"
 case 9: 
 var $21=$1; //@line 234 "staging.cpp"
 STACKTOP=sp;return $21; //@line 234 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13setStageLeveli14gameStagesEnum($level,$stage){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$level;
 $3=$stage;
 var $4=$2; //@line 177 "staging.cpp"
 HEAP32[((19488)>>2)]=$4; //@line 177 "staging.cpp"
 var $5=$3; //@line 178 "staging.cpp"
 HEAP32[((19484)>>2)]=$5; //@line 178 "staging.cpp"
 var $6=__Z25activateCurrentStageLevelv(); //@line 181 "staging.cpp"
 if($6){label=3;break;}else{label=2;break;} //@line 181 "staging.cpp"
 case 2: 
 $1=0; //@line 181 "staging.cpp"
 label=4;break; //@line 181 "staging.cpp"
 case 3: 
 $1=1; //@line 183 "staging.cpp"
 label=4;break; //@line 183 "staging.cpp"
 case 4: 
 var $10=$1; //@line 184 "staging.cpp"
 STACKTOP=sp;return $10; //@line 184 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z18getStageLevelIndexi14gameStagesEnum($level,$stage){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $stageNum;
 $1=$level;
 $2=$stage;
 var $3=$2; //@line 291 "staging.cpp"
 if(($3|0)==1){ label=2;break;}else if(($3|0)==2){ label=3;break;}else{label=4;break;}
 case 2: 
 $stageNum=0; //@line 293 "staging.cpp"
 label=5;break; //@line 294 "staging.cpp"
 case 3: 
 $stageNum=1; //@line 296 "staging.cpp"
 label=5;break; //@line 297 "staging.cpp"
 case 4: 
 $stageNum=0; //@line 300 "staging.cpp"
 label=5;break; //@line 301 "staging.cpp"
 case 5: 
 var $8=$stageNum; //@line 305 "staging.cpp"
 var $9=$1; //@line 305 "staging.cpp"
 var $10=((($9)-(1))|0); //@line 305 "staging.cpp"
 var $11=($10<<1); //@line 305 "staging.cpp"
 var $12=((($8)+($11))|0); //@line 305 "staging.cpp"
 STACKTOP=sp;return $12; //@line 305 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12advanceStagev(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $level;
 var $stage;
 var $idx;
 var $2=HEAP32[((19488)>>2)]; //@line 245 "staging.cpp"
 var $3=HEAP32[((19484)>>2)]; //@line 245 "staging.cpp"
 var $4=__Z12getNextLeveli14gameStagesEnum($2,$3); //@line 245 "staging.cpp"
 $level=$4; //@line 245 "staging.cpp"
 var $5=HEAP32[((19488)>>2)]; //@line 246 "staging.cpp"
 var $6=HEAP32[((19484)>>2)]; //@line 246 "staging.cpp"
 var $7=__Z12getNextStagei14gameStagesEnum($5,$6); //@line 246 "staging.cpp"
 $stage=$7; //@line 246 "staging.cpp"
 var $8=$level; //@line 249 "staging.cpp"
 var $9=$stage; //@line 249 "staging.cpp"
 var $10=__Z18getStageLevelIndexi14gameStagesEnum($8,$9); //@line 249 "staging.cpp"
 $idx=$10; //@line 249 "staging.cpp"
 var $11=$level; //@line 269 "staging.cpp"
 var $12=$stage; //@line 269 "staging.cpp"
 var $13=__Z13setStageLeveli14gameStagesEnum($11,$12); //@line 269 "staging.cpp"
 if($13){label=3;break;}else{label=2;break;} //@line 269 "staging.cpp"
 case 2: 
 $1=0; //@line 269 "staging.cpp"
 label=4;break; //@line 269 "staging.cpp"
 case 3: 
 $1=1; //@line 271 "staging.cpp"
 label=4;break; //@line 271 "staging.cpp"
 case 4: 
 var $17=$1; //@line 272 "staging.cpp"
 STACKTOP=sp;return $17; //@line 272 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z22manageAutomaticStagingmPb($frameNumber,$didItSwitch){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $tempDidItSwitch;
 var $errorCode;
 $1=$frameNumber;
 $2=$didItSwitch;
 $tempDidItSwitch=0; //@line 360 "staging.cpp"
 $errorCode=1; //@line 362 "staging.cpp"
 var $3=HEAP32[((19492)>>2)]; //@line 365 "staging.cpp"
 var $4=($3|0)!=0; //@line 365 "staging.cpp"
 if($4){label=2;break;}else{label=7;break;} //@line 365 "staging.cpp"
 case 2: 
 var $6=HEAP32[((19492)>>2)]; //@line 367 "staging.cpp"
 var $7=((($6)-(1))|0); //@line 367 "staging.cpp"
 HEAP32[((19492)>>2)]=$7; //@line 367 "staging.cpp"
 var $8=HEAP32[((19492)>>2)]; //@line 370 "staging.cpp"
 var $9=($8|0)<=0; //@line 370 "staging.cpp"
 if($9){label=3;break;}else{label=6;break;} //@line 370 "staging.cpp"
 case 3: 
 var $11=__Z12advanceStagev(); //@line 372 "staging.cpp"
 if($11){label=5;break;}else{label=4;break;} //@line 372 "staging.cpp"
 case 4: 
 $errorCode=0; //@line 373 "staging.cpp"
 label=5;break; //@line 373 "staging.cpp"
 case 5: 
 $tempDidItSwitch=1; //@line 376 "staging.cpp"
 label=6;break; //@line 377 "staging.cpp"
 case 6: 
 label=7;break; //@line 378 "staging.cpp"
 case 7: 
 var $16=$2; //@line 381 "staging.cpp"
 var $17=($16|0)!=0; //@line 381 "staging.cpp"
 if($17){label=8;break;}else{label=9;break;} //@line 381 "staging.cpp"
 case 8: 
 var $19=$tempDidItSwitch; //@line 381 "staging.cpp"
 var $20=(($19)&1); //@line 381 "staging.cpp"
 var $21=$2; //@line 381 "staging.cpp"
 var $22=($20&1); //@line 381 "staging.cpp"
 HEAP8[($21)]=$22; //@line 381 "staging.cpp"
 label=9;break; //@line 381 "staging.cpp"
 case 9: 
 var $24=$errorCode; //@line 384 "staging.cpp"
 var $25=(($24)&1); //@line 384 "staging.cpp"
 STACKTOP=sp;return $25; //@line 384 "staging.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass4initEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__ZN16timeWrapperClass7isReadyEv($3); //@line 35 "timewrap.cpp"
 if($4){label=2;break;}else{label=3;break;} //@line 35 "timewrap.cpp"
 case 2: 
 $1=0; //@line 35 "timewrap.cpp"
 label=6;break; //@line 35 "timewrap.cpp"
 case 3: 
 var $7=(($3+4)|0); //@line 38 "timewrap.cpp"
 HEAP8[($7)]=1; //@line 38 "timewrap.cpp"
 var $8=(($3+5)|0); //@line 39 "timewrap.cpp"
 HEAP8[($8)]=0; //@line 39 "timewrap.cpp"
 var $9=(($3+16)|0); //@line 40 "timewrap.cpp"
 HEAPF64[(($9)>>3)]=1; //@line 40 "timewrap.cpp"
 var $10=__ZN16timeWrapperClass5resetEv($3); //@line 43 "timewrap.cpp"
 if($10){label=5;break;}else{label=4;break;} //@line 43 "timewrap.cpp"
 case 4: 
 var $12=(($3+4)|0); //@line 45 "timewrap.cpp"
 HEAP8[($12)]=0; //@line 45 "timewrap.cpp"
 $1=0; //@line 46 "timewrap.cpp"
 label=6;break; //@line 46 "timewrap.cpp"
 case 5: 
 $1=1; //@line 49 "timewrap.cpp"
 label=6;break; //@line 49 "timewrap.cpp"
 case 6: 
 var $15=$1; //@line 50 "timewrap.cpp"
 STACKTOP=sp;return $15; //@line 50 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass5resetEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__ZN16timeWrapperClass7isReadyEv($3); //@line 69 "timewrap.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 69 "timewrap.cpp"
 case 2: 
 $1=0; //@line 69 "timewrap.cpp"
 label=4;break; //@line 69 "timewrap.cpp"
 case 3: 
 var $7=_SDL_GetTicks(); //@line 72 "timewrap.cpp"
 var $8=(($3+8)|0); //@line 72 "timewrap.cpp"
 HEAP32[(($8)>>2)]=$7; //@line 72 "timewrap.cpp"
 var $9=(($3+12)|0); //@line 73 "timewrap.cpp"
 HEAP32[(($9)>>2)]=0; //@line 73 "timewrap.cpp"
 var $10=(($3+16)|0); //@line 74 "timewrap.cpp"
 HEAPF64[(($10)>>3)]=1; //@line 74 "timewrap.cpp"
 $1=1; //@line 76 "timewrap.cpp"
 label=4;break; //@line 76 "timewrap.cpp"
 case 4: 
 var $12=$1; //@line 77 "timewrap.cpp"
 STACKTOP=sp;return $12; //@line 77 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass3endEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__ZN16timeWrapperClass7isReadyEv($3); //@line 56 "timewrap.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 56 "timewrap.cpp"
 case 2: 
 $1=0; //@line 56 "timewrap.cpp"
 label=4;break; //@line 56 "timewrap.cpp"
 case 3: 
 var $7=(($3+4)|0); //@line 59 "timewrap.cpp"
 HEAP8[($7)]=0; //@line 59 "timewrap.cpp"
 $1=1; //@line 61 "timewrap.cpp"
 label=4;break; //@line 61 "timewrap.cpp"
 case 4: 
 var $9=$1; //@line 62 "timewrap.cpp"
 STACKTOP=sp;return $9; //@line 62 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass5pauseEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__ZN16timeWrapperClass7isReadyEv($3); //@line 83 "timewrap.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 83 "timewrap.cpp"
 case 2: 
 $1=0; //@line 83 "timewrap.cpp"
 label=6;break; //@line 83 "timewrap.cpp"
 case 3: 
 var $7=(($3+5)|0); //@line 84 "timewrap.cpp"
 var $8=HEAP8[($7)]; //@line 84 "timewrap.cpp"
 var $9=(($8)&1); //@line 84 "timewrap.cpp"
 if($9){label=4;break;}else{label=5;break;} //@line 84 "timewrap.cpp"
 case 4: 
 $1=1; //@line 84 "timewrap.cpp"
 label=6;break; //@line 84 "timewrap.cpp"
 case 5: 
 var $12=__ZN16timeWrapperClass7getTimeEPb($3,0); //@line 88 "timewrap.cpp"
 var $13=(($3+12)|0); //@line 88 "timewrap.cpp"
 HEAP32[(($13)>>2)]=$12; //@line 88 "timewrap.cpp"
 var $14=(($3+5)|0); //@line 91 "timewrap.cpp"
 HEAP8[($14)]=1; //@line 91 "timewrap.cpp"
 $1=1; //@line 93 "timewrap.cpp"
 label=6;break; //@line 93 "timewrap.cpp"
 case 6: 
 var $16=$1; //@line 94 "timewrap.cpp"
 STACKTOP=sp;return $16; //@line 94 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass7getTimeEPb($this,$errorCode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $tickCount;
 var $tempTime;
 $2=$this;
 $3=$errorCode;
 var $4=$2;
 var $5=__ZN16timeWrapperClass7isReadyEv($4); //@line 139 "timewrap.cpp"
 if($5){label=5;break;}else{label=2;break;} //@line 139 "timewrap.cpp"
 case 2: 
 var $7=$3; //@line 141 "timewrap.cpp"
 var $8=($7|0)!=0; //@line 141 "timewrap.cpp"
 if($8){label=3;break;}else{label=4;break;} //@line 141 "timewrap.cpp"
 case 3: 
 var $10=$3; //@line 141 "timewrap.cpp"
 HEAP8[($10)]=0; //@line 141 "timewrap.cpp"
 label=4;break; //@line 141 "timewrap.cpp"
 case 4: 
 $1=0; //@line 142 "timewrap.cpp"
 label=13;break; //@line 142 "timewrap.cpp"
 case 5: 
 var $13=_SDL_GetTicks(); //@line 146 "timewrap.cpp"
 $tickCount=$13; //@line 146 "timewrap.cpp"
 var $14=$tickCount; //@line 147 "timewrap.cpp"
 var $15=(($4+8)|0); //@line 147 "timewrap.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 147 "timewrap.cpp"
 var $17=($14>>>0)<($16>>>0); //@line 147 "timewrap.cpp"
 if($17){label=6;break;}else{label=7;break;} //@line 147 "timewrap.cpp"
 case 6: 
 var $19=(($4+8)|0); //@line 152 "timewrap.cpp"
 var $20=HEAP32[(($19)>>2)]; //@line 152 "timewrap.cpp"
 var $21$0=$20;
 var $21$1=0;
 var $$etemp$0$0=-1;
 var $$etemp$0$1=0;
 var $22$0=_i64Subtract($$etemp$0$0,$$etemp$0$1,$21$0,$21$1);var $22$1=tempRet0; //@line 152 "timewrap.cpp"
 var $23=(($4+12)|0); //@line 152 "timewrap.cpp"
 var $24=HEAP32[(($23)>>2)]; //@line 152 "timewrap.cpp"
 var $25$0=$24;
 var $25$1=0;
 var $26$0=_i64Subtract($22$0,$22$1,$25$0,$25$1);var $26$1=tempRet0; //@line 152 "timewrap.cpp"
 var $$etemp$1$0=1;
 var $$etemp$1$1=0;
 var $27$0=_i64Add($26$0,$26$1,$$etemp$1$0,$$etemp$1$1);var $27$1=tempRet0; //@line 152 "timewrap.cpp"
 var $28=(($27$0>>>0)+(($27$1|0)*4294967296)); //@line 152 "timewrap.cpp"
 var $29=(($4+16)|0); //@line 152 "timewrap.cpp"
 var $30=HEAPF64[(($29)>>3)]; //@line 152 "timewrap.cpp"
 var $31=($28)*($30); //@line 152 "timewrap.cpp"
 var $32=($31>=0 ? Math_floor($31) : Math_ceil($31)); //@line 152 "timewrap.cpp"
 var $33=(($4+12)|0); //@line 152 "timewrap.cpp"
 var $34=HEAP32[(($33)>>2)]; //@line 152 "timewrap.cpp"
 var $35=((($32)+($34))|0); //@line 152 "timewrap.cpp"
 var $36=(($4+12)|0); //@line 152 "timewrap.cpp"
 HEAP32[(($36)>>2)]=$35; //@line 152 "timewrap.cpp"
 var $37=(($4+8)|0); //@line 154 "timewrap.cpp"
 HEAP32[(($37)>>2)]=0; //@line 154 "timewrap.cpp"
 label=7;break; //@line 155 "timewrap.cpp"
 case 7: 
 var $39=(($4+5)|0); //@line 157 "timewrap.cpp"
 var $40=HEAP8[($39)]; //@line 157 "timewrap.cpp"
 var $41=(($40)&1); //@line 157 "timewrap.cpp"
 if($41){label=8;break;}else{label=9;break;} //@line 157 "timewrap.cpp"
 case 8: 
 var $43=(($4+12)|0); //@line 159 "timewrap.cpp"
 var $44=HEAP32[(($43)>>2)]; //@line 159 "timewrap.cpp"
 $tempTime=$44; //@line 159 "timewrap.cpp"
 label=10;break; //@line 160 "timewrap.cpp"
 case 9: 
 var $46=$tickCount; //@line 168 "timewrap.cpp"
 var $47=(($4+8)|0); //@line 168 "timewrap.cpp"
 var $48=HEAP32[(($47)>>2)]; //@line 168 "timewrap.cpp"
 var $49=((($46)-($48))|0); //@line 168 "timewrap.cpp"
 var $50=($49>>>0); //@line 168 "timewrap.cpp"
 var $51=(($4+16)|0); //@line 168 "timewrap.cpp"
 var $52=HEAPF64[(($51)>>3)]; //@line 168 "timewrap.cpp"
 var $53=($50)*($52); //@line 168 "timewrap.cpp"
 var $54=($53>=0 ? Math_floor($53) : Math_ceil($53)); //@line 168 "timewrap.cpp"
 var $55=(($4+12)|0); //@line 168 "timewrap.cpp"
 var $56=HEAP32[(($55)>>2)]; //@line 168 "timewrap.cpp"
 var $57=((($54)+($56))|0); //@line 168 "timewrap.cpp"
 $tempTime=$57; //@line 168 "timewrap.cpp"
 label=10;break;
 case 10: 
 var $59=$3; //@line 172 "timewrap.cpp"
 var $60=($59|0)!=0; //@line 172 "timewrap.cpp"
 if($60){label=11;break;}else{label=12;break;} //@line 172 "timewrap.cpp"
 case 11: 
 var $62=$3; //@line 172 "timewrap.cpp"
 HEAP8[($62)]=1; //@line 172 "timewrap.cpp"
 label=12;break; //@line 172 "timewrap.cpp"
 case 12: 
 var $64=$tempTime; //@line 174 "timewrap.cpp"
 $1=$64; //@line 174 "timewrap.cpp"
 label=13;break; //@line 174 "timewrap.cpp"
 case 13: 
 var $66=$1; //@line 175 "timewrap.cpp"
 STACKTOP=sp;return $66; //@line 175 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN16timeWrapperClass4playEv($this){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$this;
 var $3=$2;
 var $4=__ZN16timeWrapperClass7isReadyEv($3); //@line 100 "timewrap.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 100 "timewrap.cpp"
 case 2: 
 $1=0; //@line 100 "timewrap.cpp"
 label=6;break; //@line 100 "timewrap.cpp"
 case 3: 
 var $7=(($3+5)|0); //@line 101 "timewrap.cpp"
 var $8=HEAP8[($7)]; //@line 101 "timewrap.cpp"
 var $9=(($8)&1); //@line 101 "timewrap.cpp"
 if($9){label=5;break;}else{label=4;break;} //@line 101 "timewrap.cpp"
 case 4: 
 $1=1; //@line 101 "timewrap.cpp"
 label=6;break; //@line 101 "timewrap.cpp"
 case 5: 
 var $12=_SDL_GetTicks(); //@line 106 "timewrap.cpp"
 var $13=(($3+8)|0); //@line 106 "timewrap.cpp"
 HEAP32[(($13)>>2)]=$12; //@line 106 "timewrap.cpp"
 var $14=(($3+5)|0); //@line 109 "timewrap.cpp"
 HEAP8[($14)]=0; //@line 109 "timewrap.cpp"
 $1=1; //@line 111 "timewrap.cpp"
 label=6;break; //@line 111 "timewrap.cpp"
 case 6: 
 var $16=$1; //@line 112 "timewrap.cpp"
 STACKTOP=sp;return $16; //@line 112 "timewrap.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z22initializeVirtualWallsv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $i;
 var $lstate;
 var $value;
 var $2=HEAP8[(20640)]; //@line 50 "virtualwalls.cpp"
 var $3=(($2)&1); //@line 50 "virtualwalls.cpp"
 if($3){label=2;break;}else{label=3;break;} //@line 50 "virtualwalls.cpp"
 case 2: 
 $1=0; //@line 50 "virtualwalls.cpp"
 label=16;break; //@line 50 "virtualwalls.cpp"
 case 3: 
 HEAP8[(20640)]=1; //@line 51 "virtualwalls.cpp"
 var $6=__ZN18scriptManagerClass12getLuaObjectEv(18600); //@line 54 "virtualwalls.cpp"
 $lstate=$6; //@line 54 "virtualwalls.cpp"
 var $7=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,6208,0); //@line 57 "virtualwalls.cpp"
 HEAP32[((20536)>>2)]=$7; //@line 57 "virtualwalls.cpp"
 var $8=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,14072,0); //@line 58 "virtualwalls.cpp"
 HEAP32[((20528)>>2)]=$8; //@line 58 "virtualwalls.cpp"
 var $9=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,10712,0); //@line 59 "virtualwalls.cpp"
 HEAP32[((20544)>>2)]=$9; //@line 59 "virtualwalls.cpp"
 var $10=HEAP32[((20536)>>2)]; //@line 62 "virtualwalls.cpp"
 var $11$0=_llvm_umul_with_overflow_i32($10,4);
 var $11$1=tempRet0;
 var $12=$11$1;
 var $13=$11$0;
 var $14=($12?-1:$13); //@line 62 "virtualwalls.cpp"
 var $15=__Znaj($14); //@line 62 "virtualwalls.cpp"
 var $16=$15; //@line 62 "virtualwalls.cpp"
 HEAP32[((20608)>>2)]=$16; //@line 62 "virtualwalls.cpp"
 var $17=HEAP32[((20528)>>2)]; //@line 63 "virtualwalls.cpp"
 var $18$0=_llvm_umul_with_overflow_i32($17,4);
 var $18$1=tempRet0;
 var $19=$18$1;
 var $20=$18$0;
 var $21=($19?-1:$20); //@line 63 "virtualwalls.cpp"
 var $22=__Znaj($21); //@line 63 "virtualwalls.cpp"
 var $23=$22; //@line 63 "virtualwalls.cpp"
 HEAP32[((20592)>>2)]=$23; //@line 63 "virtualwalls.cpp"
 var $24=HEAP32[((20544)>>2)]; //@line 64 "virtualwalls.cpp"
 var $25$0=_llvm_umul_with_overflow_i32($24,4);
 var $25$1=tempRet0;
 var $26=$25$1;
 var $27=$25$0;
 var $28=($26?-1:$27); //@line 64 "virtualwalls.cpp"
 var $29=__Znaj($28); //@line 64 "virtualwalls.cpp"
 var $30=$29; //@line 64 "virtualwalls.cpp"
 HEAP32[((20568)>>2)]=$30; //@line 64 "virtualwalls.cpp"
 $i=0; //@line 67 "virtualwalls.cpp"
 label=4;break; //@line 67 "virtualwalls.cpp"
 case 4: 
 var $32=$i; //@line 67 "virtualwalls.cpp"
 var $33=HEAP32[((20536)>>2)]; //@line 67 "virtualwalls.cpp"
 var $34=($32|0)<($33|0); //@line 67 "virtualwalls.cpp"
 if($34){label=5;break;}else{label=7;break;} //@line 67 "virtualwalls.cpp"
 case 5: 
 var $36=$lstate; //@line 69 "virtualwalls.cpp"
 _lua_getglobal($36,8264); //@line 69 "virtualwalls.cpp"
 var $37=$lstate; //@line 70 "virtualwalls.cpp"
 var $38=$i; //@line 70 "virtualwalls.cpp"
 var $39=($38|0); //@line 70 "virtualwalls.cpp"
 _lua_pushnumber($37,$39); //@line 70 "virtualwalls.cpp"
 var $40=$lstate; //@line 71 "virtualwalls.cpp"
 _lua_gettable($40,-2); //@line 71 "virtualwalls.cpp"
 var $41=$lstate; //@line 72 "virtualwalls.cpp"
 var $42=_lua_tonumberx($41,-1,0); //@line 72 "virtualwalls.cpp"
 var $43=(($42)&-1); //@line 72 "virtualwalls.cpp"
 $value=$43; //@line 72 "virtualwalls.cpp"
 var $44=$lstate; //@line 73 "virtualwalls.cpp"
 _lua_settop($44,-3); //@line 73 "virtualwalls.cpp"
 var $45=$value; //@line 76 "virtualwalls.cpp"
 var $46=$i; //@line 76 "virtualwalls.cpp"
 var $47=HEAP32[((20608)>>2)]; //@line 76 "virtualwalls.cpp"
 var $48=(($47+($46<<2))|0); //@line 76 "virtualwalls.cpp"
 HEAP32[(($48)>>2)]=$45; //@line 76 "virtualwalls.cpp"
 label=6;break; //@line 77 "virtualwalls.cpp"
 case 6: 
 var $50=$i; //@line 67 "virtualwalls.cpp"
 var $51=((($50)+(1))|0); //@line 67 "virtualwalls.cpp"
 $i=$51; //@line 67 "virtualwalls.cpp"
 label=4;break; //@line 67 "virtualwalls.cpp"
 case 7: 
 $i=0; //@line 80 "virtualwalls.cpp"
 label=8;break; //@line 80 "virtualwalls.cpp"
 case 8: 
 var $54=$i; //@line 80 "virtualwalls.cpp"
 var $55=HEAP32[((20528)>>2)]; //@line 80 "virtualwalls.cpp"
 var $56=($54|0)<($55|0); //@line 80 "virtualwalls.cpp"
 if($56){label=9;break;}else{label=11;break;} //@line 80 "virtualwalls.cpp"
 case 9: 
 var $58=$lstate; //@line 82 "virtualwalls.cpp"
 _lua_getglobal($58,6384); //@line 82 "virtualwalls.cpp"
 var $59=$lstate; //@line 83 "virtualwalls.cpp"
 var $60=$i; //@line 83 "virtualwalls.cpp"
 var $61=($60|0); //@line 83 "virtualwalls.cpp"
 _lua_pushnumber($59,$61); //@line 83 "virtualwalls.cpp"
 var $62=$lstate; //@line 84 "virtualwalls.cpp"
 _lua_gettable($62,-2); //@line 84 "virtualwalls.cpp"
 var $63=$lstate; //@line 85 "virtualwalls.cpp"
 var $64=_lua_tonumberx($63,-1,0); //@line 85 "virtualwalls.cpp"
 var $65=(($64)&-1); //@line 85 "virtualwalls.cpp"
 $value=$65; //@line 85 "virtualwalls.cpp"
 var $66=$lstate; //@line 86 "virtualwalls.cpp"
 _lua_settop($66,-3); //@line 86 "virtualwalls.cpp"
 var $67=$value; //@line 89 "virtualwalls.cpp"
 var $68=$i; //@line 89 "virtualwalls.cpp"
 var $69=HEAP32[((20592)>>2)]; //@line 89 "virtualwalls.cpp"
 var $70=(($69+($68<<2))|0); //@line 89 "virtualwalls.cpp"
 HEAP32[(($70)>>2)]=$67; //@line 89 "virtualwalls.cpp"
 label=10;break; //@line 90 "virtualwalls.cpp"
 case 10: 
 var $72=$i; //@line 80 "virtualwalls.cpp"
 var $73=((($72)+(1))|0); //@line 80 "virtualwalls.cpp"
 $i=$73; //@line 80 "virtualwalls.cpp"
 label=8;break; //@line 80 "virtualwalls.cpp"
 case 11: 
 $i=0; //@line 93 "virtualwalls.cpp"
 label=12;break; //@line 93 "virtualwalls.cpp"
 case 12: 
 var $76=$i; //@line 93 "virtualwalls.cpp"
 var $77=HEAP32[((20544)>>2)]; //@line 93 "virtualwalls.cpp"
 var $78=($76|0)<($77|0); //@line 93 "virtualwalls.cpp"
 if($78){label=13;break;}else{label=15;break;} //@line 93 "virtualwalls.cpp"
 case 13: 
 var $80=$lstate; //@line 95 "virtualwalls.cpp"
 _lua_getglobal($80,5368); //@line 95 "virtualwalls.cpp"
 var $81=$lstate; //@line 96 "virtualwalls.cpp"
 var $82=$i; //@line 96 "virtualwalls.cpp"
 var $83=($82|0); //@line 96 "virtualwalls.cpp"
 _lua_pushnumber($81,$83); //@line 96 "virtualwalls.cpp"
 var $84=$lstate; //@line 97 "virtualwalls.cpp"
 _lua_gettable($84,-2); //@line 97 "virtualwalls.cpp"
 var $85=$lstate; //@line 98 "virtualwalls.cpp"
 var $86=_lua_tonumberx($85,-1,0); //@line 98 "virtualwalls.cpp"
 var $87=(($86)&-1); //@line 98 "virtualwalls.cpp"
 $value=$87; //@line 98 "virtualwalls.cpp"
 var $88=$lstate; //@line 99 "virtualwalls.cpp"
 _lua_settop($88,-3); //@line 99 "virtualwalls.cpp"
 var $89=$value; //@line 102 "virtualwalls.cpp"
 var $90=$i; //@line 102 "virtualwalls.cpp"
 var $91=HEAP32[((20568)>>2)]; //@line 102 "virtualwalls.cpp"
 var $92=(($91+($90<<2))|0); //@line 102 "virtualwalls.cpp"
 HEAP32[(($92)>>2)]=$89; //@line 102 "virtualwalls.cpp"
 label=14;break; //@line 103 "virtualwalls.cpp"
 case 14: 
 var $94=$i; //@line 93 "virtualwalls.cpp"
 var $95=((($94)+(1))|0); //@line 93 "virtualwalls.cpp"
 $i=$95; //@line 93 "virtualwalls.cpp"
 label=12;break; //@line 93 "virtualwalls.cpp"
 case 15: 
 $1=1; //@line 105 "virtualwalls.cpp"
 label=16;break; //@line 105 "virtualwalls.cpp"
 case 16: 
 var $98=$1; //@line 106 "virtualwalls.cpp"
 STACKTOP=sp;return $98; //@line 106 "virtualwalls.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z24deinitializeVirtualWallsv(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=HEAP8[(20640)]; //@line 113 "virtualwalls.cpp"
 var $3=(($2)&1); //@line 113 "virtualwalls.cpp"
 if($3){label=3;break;}else{label=2;break;} //@line 113 "virtualwalls.cpp"
 case 2: 
 $1=0; //@line 113 "virtualwalls.cpp"
 label=10;break; //@line 113 "virtualwalls.cpp"
 case 3: 
 HEAP8[(20640)]=0; //@line 114 "virtualwalls.cpp"
 var $6=HEAP32[((20608)>>2)]; //@line 116 "virtualwalls.cpp"
 var $7=($6|0)==0; //@line 116 "virtualwalls.cpp"
 if($7){label=5;break;}else{label=4;break;} //@line 116 "virtualwalls.cpp"
 case 4: 
 var $9=$6; //@line 116 "virtualwalls.cpp"
 __ZdaPv($9); //@line 116 "virtualwalls.cpp"
 label=5;break; //@line 116 "virtualwalls.cpp"
 case 5: 
 var $11=HEAP32[((20592)>>2)]; //@line 117 "virtualwalls.cpp"
 var $12=($11|0)==0; //@line 117 "virtualwalls.cpp"
 if($12){label=7;break;}else{label=6;break;} //@line 117 "virtualwalls.cpp"
 case 6: 
 var $14=$11; //@line 117 "virtualwalls.cpp"
 __ZdaPv($14); //@line 117 "virtualwalls.cpp"
 label=7;break; //@line 117 "virtualwalls.cpp"
 case 7: 
 var $16=HEAP32[((20568)>>2)]; //@line 118 "virtualwalls.cpp"
 var $17=($16|0)==0; //@line 118 "virtualwalls.cpp"
 if($17){label=9;break;}else{label=8;break;} //@line 118 "virtualwalls.cpp"
 case 8: 
 var $19=$16; //@line 118 "virtualwalls.cpp"
 __ZdaPv($19); //@line 118 "virtualwalls.cpp"
 label=9;break; //@line 118 "virtualwalls.cpp"
 case 9: 
 $1=1; //@line 120 "virtualwalls.cpp"
 label=10;break; //@line 120 "virtualwalls.cpp"
 case 10: 
 var $22=$1; //@line 121 "virtualwalls.cpp"
 STACKTOP=sp;return $22; //@line 121 "virtualwalls.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z11getLeftWalli($y){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$y;
 var $3=HEAP8[(20640)]; //@line 129 "virtualwalls.cpp"
 var $4=(($3)&1); //@line 129 "virtualwalls.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 129 "virtualwalls.cpp"
 case 2: 
 $1=-1; //@line 129 "virtualwalls.cpp"
 label=7;break; //@line 129 "virtualwalls.cpp"
 case 3: 
 var $7=$2; //@line 132 "virtualwalls.cpp"
 var $8=($7|0)<0; //@line 132 "virtualwalls.cpp"
 if($8){label=5;break;}else{label=4;break;} //@line 132 "virtualwalls.cpp"
 case 4: 
 var $10=$2; //@line 132 "virtualwalls.cpp"
 var $11=HEAP32[((20536)>>2)]; //@line 132 "virtualwalls.cpp"
 var $12=($10|0)>=($11|0); //@line 132 "virtualwalls.cpp"
 if($12){label=5;break;}else{label=6;break;} //@line 132 "virtualwalls.cpp"
 case 5: 
 var $14=HEAP32[((20608)>>2)]; //@line 132 "virtualwalls.cpp"
 var $15=(($14)|0); //@line 132 "virtualwalls.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 132 "virtualwalls.cpp"
 $1=$16; //@line 132 "virtualwalls.cpp"
 label=7;break; //@line 132 "virtualwalls.cpp"
 case 6: 
 var $18=$2; //@line 134 "virtualwalls.cpp"
 var $19=HEAP32[((20608)>>2)]; //@line 134 "virtualwalls.cpp"
 var $20=(($19+($18<<2))|0); //@line 134 "virtualwalls.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 134 "virtualwalls.cpp"
 $1=$21; //@line 134 "virtualwalls.cpp"
 label=7;break; //@line 134 "virtualwalls.cpp"
 case 7: 
 var $23=$1; //@line 135 "virtualwalls.cpp"
 STACKTOP=sp;return $23; //@line 135 "virtualwalls.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z12getRightWalli($y){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$y;
 var $3=HEAP8[(20640)]; //@line 143 "virtualwalls.cpp"
 var $4=(($3)&1); //@line 143 "virtualwalls.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 143 "virtualwalls.cpp"
 case 2: 
 $1=-1; //@line 143 "virtualwalls.cpp"
 label=7;break; //@line 143 "virtualwalls.cpp"
 case 3: 
 var $7=$2; //@line 146 "virtualwalls.cpp"
 var $8=($7|0)<0; //@line 146 "virtualwalls.cpp"
 if($8){label=5;break;}else{label=4;break;} //@line 146 "virtualwalls.cpp"
 case 4: 
 var $10=$2; //@line 146 "virtualwalls.cpp"
 var $11=HEAP32[((20528)>>2)]; //@line 146 "virtualwalls.cpp"
 var $12=($10|0)>=($11|0); //@line 146 "virtualwalls.cpp"
 if($12){label=5;break;}else{label=6;break;} //@line 146 "virtualwalls.cpp"
 case 5: 
 var $14=HEAP32[((20592)>>2)]; //@line 146 "virtualwalls.cpp"
 var $15=(($14)|0); //@line 146 "virtualwalls.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 146 "virtualwalls.cpp"
 $1=$16; //@line 146 "virtualwalls.cpp"
 label=7;break; //@line 146 "virtualwalls.cpp"
 case 6: 
 var $18=$2; //@line 148 "virtualwalls.cpp"
 var $19=HEAP32[((20592)>>2)]; //@line 148 "virtualwalls.cpp"
 var $20=(($19+($18<<2))|0); //@line 148 "virtualwalls.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 148 "virtualwalls.cpp"
 $1=$21; //@line 148 "virtualwalls.cpp"
 label=7;break; //@line 148 "virtualwalls.cpp"
 case 7: 
 var $23=$1; //@line 149 "virtualwalls.cpp"
 STACKTOP=sp;return $23; //@line 149 "virtualwalls.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z13getGroundWalli($x){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$x;
 var $3=HEAP8[(20640)]; //@line 157 "virtualwalls.cpp"
 var $4=(($3)&1); //@line 157 "virtualwalls.cpp"
 if($4){label=3;break;}else{label=2;break;} //@line 157 "virtualwalls.cpp"
 case 2: 
 $1=-1; //@line 157 "virtualwalls.cpp"
 label=7;break; //@line 157 "virtualwalls.cpp"
 case 3: 
 var $7=$2; //@line 160 "virtualwalls.cpp"
 var $8=($7|0)<0; //@line 160 "virtualwalls.cpp"
 if($8){label=5;break;}else{label=4;break;} //@line 160 "virtualwalls.cpp"
 case 4: 
 var $10=$2; //@line 160 "virtualwalls.cpp"
 var $11=HEAP32[((20544)>>2)]; //@line 160 "virtualwalls.cpp"
 var $12=($10|0)>=($11|0); //@line 160 "virtualwalls.cpp"
 if($12){label=5;break;}else{label=6;break;} //@line 160 "virtualwalls.cpp"
 case 5: 
 var $14=HEAP32[((20568)>>2)]; //@line 160 "virtualwalls.cpp"
 var $15=(($14)|0); //@line 160 "virtualwalls.cpp"
 var $16=HEAP32[(($15)>>2)]; //@line 160 "virtualwalls.cpp"
 $1=$16; //@line 160 "virtualwalls.cpp"
 label=7;break; //@line 160 "virtualwalls.cpp"
 case 6: 
 var $18=$2; //@line 162 "virtualwalls.cpp"
 var $19=HEAP32[((20568)>>2)]; //@line 162 "virtualwalls.cpp"
 var $20=(($19+($18<<2))|0); //@line 162 "virtualwalls.cpp"
 var $21=HEAP32[(($20)>>2)]; //@line 162 "virtualwalls.cpp"
 $1=$21; //@line 162 "virtualwalls.cpp"
 label=7;break; //@line 162 "virtualwalls.cpp"
 case 7: 
 var $23=$1; //@line 163 "virtualwalls.cpp"
 STACKTOP=sp;return $23; //@line 163 "virtualwalls.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z20createWaveGenObjectsv(){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+208)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $waveGenData=sp;
 var $2=__ZN15vectorListClassI17waveGenUnitStructE9resetListEv(18544); //@line 50 "wavegens.cpp"
 var $3=__Z16setupWaveGenUnitR17waveGenUnitStructi($waveGenData,1); //@line 54 "wavegens.cpp"
 var $4=(($waveGenData+176)|0); //@line 56 "wavegens.cpp"
 HEAP8[($4)]=1; //@line 56 "wavegens.cpp"
 var $5=$waveGenData; //@line 58 "wavegens.cpp"
 var $6=(($5+96)|0); //@line 58 "wavegens.cpp"
 HEAP8[($6)]=1; //@line 58 "wavegens.cpp"
 var $7=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,6128,0); //@line 60 "wavegens.cpp"
 var $8=($7|0); //@line 60 "wavegens.cpp"
 var $9=$waveGenData; //@line 60 "wavegens.cpp"
 var $10=(($9+104)|0); //@line 60 "wavegens.cpp"
 HEAPF64[(($10)>>3)]=$8; //@line 60 "wavegens.cpp"
 var $11=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,14040,0); //@line 62 "wavegens.cpp"
 var $12=($11|0); //@line 62 "wavegens.cpp"
 var $13=$waveGenData; //@line 62 "wavegens.cpp"
 var $14=(($13+112)|0); //@line 62 "wavegens.cpp"
 HEAPF64[(($14)>>3)]=$12; //@line 62 "wavegens.cpp"
 var $15=$waveGenData; //@line 64 "wavegens.cpp"
 var $16=(($15+104)|0); //@line 64 "wavegens.cpp"
 var $17=HEAPF64[(($16)>>3)]; //@line 64 "wavegens.cpp"
 var $18=$waveGenData; //@line 64 "wavegens.cpp"
 var $19=(($18+8)|0); //@line 64 "wavegens.cpp"
 HEAPF64[(($19)>>3)]=$17; //@line 64 "wavegens.cpp"
 var $20=$waveGenData; //@line 65 "wavegens.cpp"
 var $21=(($20+112)|0); //@line 65 "wavegens.cpp"
 var $22=HEAPF64[(($21)>>3)]; //@line 65 "wavegens.cpp"
 var $23=$waveGenData; //@line 65 "wavegens.cpp"
 var $24=(($23+16)|0); //@line 65 "wavegens.cpp"
 HEAPF64[(($24)>>3)]=$22; //@line 65 "wavegens.cpp"
 var $25=__ZN15vectorListClassI17waveGenUnitStructE7addNodeERS0_(18544,$waveGenData); //@line 67 "wavegens.cpp"
 var $26=__ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm(18544,$25); //@line 67 "wavegens.cpp"
 if($26){label=3;break;}else{label=2;break;} //@line 67 "wavegens.cpp"
 case 2: 
 var $28=__ZN14conLoggerClass7logLineEPcbbbz(19416,10632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 68 "wavegens.cpp"
 $1=0; //@line 69 "wavegens.cpp"
 label=10;break; //@line 69 "wavegens.cpp"
 case 3: 
 var $30=__Z16setupWaveGenUnitR17waveGenUnitStructi($waveGenData,2); //@line 74 "wavegens.cpp"
 var $31=(($waveGenData+176)|0); //@line 76 "wavegens.cpp"
 HEAP8[($31)]=1; //@line 76 "wavegens.cpp"
 var $32=$waveGenData; //@line 78 "wavegens.cpp"
 var $33=(($32+96)|0); //@line 78 "wavegens.cpp"
 HEAP8[($33)]=1; //@line 78 "wavegens.cpp"
 var $34=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,8192,0); //@line 80 "wavegens.cpp"
 var $35=($34|0); //@line 80 "wavegens.cpp"
 var $36=$waveGenData; //@line 80 "wavegens.cpp"
 var $37=(($36+104)|0); //@line 80 "wavegens.cpp"
 HEAPF64[(($37)>>3)]=$35; //@line 80 "wavegens.cpp"
 var $38=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,6360,0); //@line 82 "wavegens.cpp"
 var $39=($38|0); //@line 82 "wavegens.cpp"
 var $40=$waveGenData; //@line 82 "wavegens.cpp"
 var $41=(($40+112)|0); //@line 82 "wavegens.cpp"
 HEAPF64[(($41)>>3)]=$39; //@line 82 "wavegens.cpp"
 var $42=$waveGenData; //@line 84 "wavegens.cpp"
 var $43=(($42+104)|0); //@line 84 "wavegens.cpp"
 var $44=HEAPF64[(($43)>>3)]; //@line 84 "wavegens.cpp"
 var $45=$waveGenData; //@line 84 "wavegens.cpp"
 var $46=(($45+8)|0); //@line 84 "wavegens.cpp"
 HEAPF64[(($46)>>3)]=$44; //@line 84 "wavegens.cpp"
 var $47=$waveGenData; //@line 85 "wavegens.cpp"
 var $48=(($47+112)|0); //@line 85 "wavegens.cpp"
 var $49=HEAPF64[(($48)>>3)]; //@line 85 "wavegens.cpp"
 var $50=$waveGenData; //@line 85 "wavegens.cpp"
 var $51=(($50+16)|0); //@line 85 "wavegens.cpp"
 HEAPF64[(($51)>>3)]=$49; //@line 85 "wavegens.cpp"
 var $52=__ZN15vectorListClassI17waveGenUnitStructE7addNodeERS0_(18544,$waveGenData); //@line 87 "wavegens.cpp"
 var $53=__ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm(18544,$52); //@line 87 "wavegens.cpp"
 if($53){label=5;break;}else{label=4;break;} //@line 87 "wavegens.cpp"
 case 4: 
 var $55=__ZN14conLoggerClass7logLineEPcbbbz(19416,10632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 88 "wavegens.cpp"
 $1=0; //@line 89 "wavegens.cpp"
 label=10;break; //@line 89 "wavegens.cpp"
 case 5: 
 var $57=__Z16setupWaveGenUnitR17waveGenUnitStructi($waveGenData,3); //@line 94 "wavegens.cpp"
 var $58=(($waveGenData+176)|0); //@line 96 "wavegens.cpp"
 HEAP8[($58)]=1; //@line 96 "wavegens.cpp"
 var $59=$waveGenData; //@line 98 "wavegens.cpp"
 var $60=(($59+96)|0); //@line 98 "wavegens.cpp"
 HEAP8[($60)]=1; //@line 98 "wavegens.cpp"
 var $61=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,5352,0); //@line 100 "wavegens.cpp"
 var $62=($61|0); //@line 100 "wavegens.cpp"
 var $63=$waveGenData; //@line 100 "wavegens.cpp"
 var $64=(($63+104)|0); //@line 100 "wavegens.cpp"
 HEAPF64[(($64)>>3)]=$62; //@line 100 "wavegens.cpp"
 var $65=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,4640,0); //@line 102 "wavegens.cpp"
 var $66=($65|0); //@line 102 "wavegens.cpp"
 var $67=$waveGenData; //@line 102 "wavegens.cpp"
 var $68=(($67+112)|0); //@line 102 "wavegens.cpp"
 HEAPF64[(($68)>>3)]=$66; //@line 102 "wavegens.cpp"
 var $69=$waveGenData; //@line 104 "wavegens.cpp"
 var $70=(($69+104)|0); //@line 104 "wavegens.cpp"
 var $71=HEAPF64[(($70)>>3)]; //@line 104 "wavegens.cpp"
 var $72=$waveGenData; //@line 104 "wavegens.cpp"
 var $73=(($72+8)|0); //@line 104 "wavegens.cpp"
 HEAPF64[(($73)>>3)]=$71; //@line 104 "wavegens.cpp"
 var $74=$waveGenData; //@line 105 "wavegens.cpp"
 var $75=(($74+112)|0); //@line 105 "wavegens.cpp"
 var $76=HEAPF64[(($75)>>3)]; //@line 105 "wavegens.cpp"
 var $77=$waveGenData; //@line 105 "wavegens.cpp"
 var $78=(($77+16)|0); //@line 105 "wavegens.cpp"
 HEAPF64[(($78)>>3)]=$76; //@line 105 "wavegens.cpp"
 var $79=__ZN15vectorListClassI17waveGenUnitStructE7addNodeERS0_(18544,$waveGenData); //@line 107 "wavegens.cpp"
 var $80=__ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm(18544,$79); //@line 107 "wavegens.cpp"
 if($80){label=7;break;}else{label=6;break;} //@line 107 "wavegens.cpp"
 case 6: 
 var $82=__ZN14conLoggerClass7logLineEPcbbbz(19416,10632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 108 "wavegens.cpp"
 $1=0; //@line 109 "wavegens.cpp"
 label=10;break; //@line 109 "wavegens.cpp"
 case 7: 
 var $84=__Z16setupWaveGenUnitR17waveGenUnitStructi($waveGenData,4); //@line 114 "wavegens.cpp"
 var $85=(($waveGenData+176)|0); //@line 116 "wavegens.cpp"
 HEAP8[($85)]=0; //@line 116 "wavegens.cpp"
 var $86=$waveGenData; //@line 118 "wavegens.cpp"
 var $87=(($86+96)|0); //@line 118 "wavegens.cpp"
 HEAP8[($87)]=1; //@line 118 "wavegens.cpp"
 var $88=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3880,0); //@line 120 "wavegens.cpp"
 var $89=($88|0); //@line 120 "wavegens.cpp"
 var $90=$waveGenData; //@line 120 "wavegens.cpp"
 var $91=(($90+104)|0); //@line 120 "wavegens.cpp"
 HEAPF64[(($91)>>3)]=$89; //@line 120 "wavegens.cpp"
 var $92=__ZN18scriptManagerClass14getIntVariableEPcPb(18600,3184,0); //@line 122 "wavegens.cpp"
 var $93=($92|0); //@line 122 "wavegens.cpp"
 var $94=$waveGenData; //@line 122 "wavegens.cpp"
 var $95=(($94+112)|0); //@line 122 "wavegens.cpp"
 HEAPF64[(($95)>>3)]=$93; //@line 122 "wavegens.cpp"
 var $96=$waveGenData; //@line 124 "wavegens.cpp"
 var $97=(($96+104)|0); //@line 124 "wavegens.cpp"
 var $98=HEAPF64[(($97)>>3)]; //@line 124 "wavegens.cpp"
 var $99=$waveGenData; //@line 124 "wavegens.cpp"
 var $100=(($99+8)|0); //@line 124 "wavegens.cpp"
 HEAPF64[(($100)>>3)]=$98; //@line 124 "wavegens.cpp"
 var $101=$waveGenData; //@line 125 "wavegens.cpp"
 var $102=(($101+112)|0); //@line 125 "wavegens.cpp"
 var $103=HEAPF64[(($102)>>3)]; //@line 125 "wavegens.cpp"
 var $104=$waveGenData; //@line 125 "wavegens.cpp"
 var $105=(($104+16)|0); //@line 125 "wavegens.cpp"
 HEAPF64[(($105)>>3)]=$103; //@line 125 "wavegens.cpp"
 var $106=__ZN15vectorListClassI17waveGenUnitStructE7addNodeERS0_(18544,$waveGenData); //@line 127 "wavegens.cpp"
 var $107=__ZN15vectorListClassI17waveGenUnitStructE12isValidIndexEm(18544,$106); //@line 127 "wavegens.cpp"
 if($107){label=9;break;}else{label=8;break;} //@line 127 "wavegens.cpp"
 case 8: 
 var $109=__ZN14conLoggerClass7logLineEPcbbbz(19416,10632,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 128 "wavegens.cpp"
 $1=0; //@line 129 "wavegens.cpp"
 label=10;break; //@line 129 "wavegens.cpp"
 case 9: 
 $1=1; //@line 132 "wavegens.cpp"
 label=10;break; //@line 132 "wavegens.cpp"
 case 10: 
 var $112=$1; //@line 133 "wavegens.cpp"
 STACKTOP=sp;return $112; //@line 133 "wavegens.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE7addNodeERS0_($this,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $index;
 $2=$this;
 $3=$data;
 var $4=$2;
 var $5=(($4+12)|0); //@line 369 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 369 "./vectorlist.h"
 $index=$6; //@line 369 "./vectorlist.h"
 var $7=(($4+12)|0); //@line 372 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 372 "./vectorlist.h"
 var $9=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 372 "./vectorlist.h"
 var $11=($8>>>0)>=($10>>>0); //@line 372 "./vectorlist.h"
 if($11){label=2;break;}else{label=3;break;} //@line 372 "./vectorlist.h"
 case 2: 
 var $13=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 372 "./vectorlist.h"
 $1=$14; //@line 372 "./vectorlist.h"
 label=6;break; //@line 372 "./vectorlist.h"
 case 3: 
 var $16=(($4+12)|0); //@line 375 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 375 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 375 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 375 "./vectorlist.h"
 var $20=(($19+((($17)*(216))&-1))|0); //@line 375 "./vectorlist.h"
 var $21=(($20)|0); //@line 375 "./vectorlist.h"
 var $22=$3; //@line 375 "./vectorlist.h"
 var $23=$21; //@line 375 "./vectorlist.h"
 var $24=$22; //@line 375 "./vectorlist.h"
 assert(208 % 1 === 0);(_memcpy($23, $24, 208)|0); //@line 375 "./vectorlist.h"
 var $25=(($4+12)|0); //@line 376 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 376 "./vectorlist.h"
 var $27=__ZN15vectorListClassI17waveGenUnitStructE12activateNodeEm($4,$26); //@line 376 "./vectorlist.h"
 if($27){label=5;break;}else{label=4;break;} //@line 376 "./vectorlist.h"
 case 4: 
 var $29=(($4+4)|0); //@line 376 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 376 "./vectorlist.h"
 $1=$30; //@line 376 "./vectorlist.h"
 label=6;break; //@line 376 "./vectorlist.h"
 case 5: 
 var $32=$index; //@line 379 "./vectorlist.h"
 $1=$32; //@line 379 "./vectorlist.h"
 label=6;break; //@line 379 "./vectorlist.h"
 case 6: 
 var $34=$1; //@line 380 "./vectorlist.h"
 STACKTOP=sp;return $34; //@line 380 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z21destroyWaveGenObjectsv(){
 var label=0;


 return 1; //@line 141 "wavegens.cpp"
}


function __Z17addEnemiesWaveGenmR20vectorListNodeStructI17waveGenUnitStructE($frameNumber,$unit){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+592)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $enemyFrame;
 var $wgFrame;
 var $combinedFrame=sp;
 var $speedMultiplier;
 var $enemyData=(sp)+(80);
 var $carriedUnit=(sp)+(336);
 var $eUnitPtr;
 var $shouldISlavize;
 var $unitsToGenerate;
 var $enemyIdx;
 var $carriedIdx;
 $2=$frameNumber;
 $3=$unit;
 var $4=$3; //@line 176 "wavegens.cpp"
 var $5=(($4)|0); //@line 176 "wavegens.cpp"
 var $6=$5; //@line 176 "wavegens.cpp"
 var $7=(($6+88)|0); //@line 176 "wavegens.cpp"
 var $8=HEAP32[(($7)>>2)]; //@line 176 "wavegens.cpp"
 var $9=$3; //@line 176 "wavegens.cpp"
 var $10=(($9)|0); //@line 176 "wavegens.cpp"
 var $11=$10; //@line 176 "wavegens.cpp"
 var $12=(($11+24)|0); //@line 176 "wavegens.cpp"
 var $13=HEAP32[(($12)>>2)]; //@line 176 "wavegens.cpp"
 var $14=((8+((($13)*(24))&-1))|0); //@line 176 "wavegens.cpp"
 var $15=(($14+16)|0); //@line 176 "wavegens.cpp"
 var $16=((((HEAPU8[($15)])|(HEAPU8[((($15)+(1))|0)]<<8)|(HEAPU8[((($15)+(2))|0)]<<16)|(HEAPU8[((($15)+(3))|0)]<<24))|0)); //@line 176 "wavegens.cpp"
 var $17=(($16+((($8)*(80))&-1))|0); //@line 176 "wavegens.cpp"
 $wgFrame=$17; //@line 176 "wavegens.cpp"
 var $18=HEAP32[((19488)>>2)]; //@line 181 "wavegens.cpp"
 var $19=((($18)-(1))|0); //@line 181 "wavegens.cpp"
 var $20=($19|0); //@line 181 "wavegens.cpp"
 var $21=($20)*((0.2)); //@line 181 "wavegens.cpp"
 var $22=($21)+(1); //@line 181 "wavegens.cpp"
 $speedMultiplier=$22; //@line 181 "wavegens.cpp"
 var $23=$3; //@line 184 "wavegens.cpp"
 var $24=(($23)|0); //@line 184 "wavegens.cpp"
 var $25=$24; //@line 184 "wavegens.cpp"
 var $26=(($25+24)|0); //@line 184 "wavegens.cpp"
 var $27=HEAP32[(($26)>>2)]; //@line 184 "wavegens.cpp"
 if(($27|0)==1){ label=2;break;}else if(($27|0)==2){ label=3;break;}else if(($27|0)==3){ label=4;break;}else{label=5;break;}
 case 2: 
 $unitsToGenerate=1; //@line 186 "wavegens.cpp"
 label=6;break; //@line 187 "wavegens.cpp"
 case 3: 
 $unitsToGenerate=1; //@line 189 "wavegens.cpp"
 label=6;break; //@line 190 "wavegens.cpp"
 case 4: 
 var $31=_rand(); //@line 192 "wavegens.cpp"
 var $32=(((($31|0))%(4))&-1); //@line 192 "wavegens.cpp"
 var $33=((($32)+(1))|0); //@line 192 "wavegens.cpp"
 $unitsToGenerate=$33; //@line 192 "wavegens.cpp"
 label=6;break; //@line 193 "wavegens.cpp"
 case 5: 
 $unitsToGenerate=0; //@line 196 "wavegens.cpp"
 label=6;break; //@line 197 "wavegens.cpp"
 case 6: 
 $i=0; //@line 206 "wavegens.cpp"
 label=7;break; //@line 206 "wavegens.cpp"
 case 7: 
 var $37=$i; //@line 206 "wavegens.cpp"
 var $38=$unitsToGenerate; //@line 206 "wavegens.cpp"
 var $39=($37|0)<($38|0); //@line 206 "wavegens.cpp"
 if($39){label=8;break;}else{label=46;break;} //@line 206 "wavegens.cpp"
 case 8: 
 $shouldISlavize=0; //@line 209 "wavegens.cpp"
 var $41=$3; //@line 216 "wavegens.cpp"
 var $42=(($41)|0); //@line 216 "wavegens.cpp"
 var $43=$42; //@line 216 "wavegens.cpp"
 var $44=(($43+24)|0); //@line 216 "wavegens.cpp"
 var $45=HEAP32[(($44)>>2)]; //@line 216 "wavegens.cpp"
 if(($45|0)==2){ label=13;break;}else if(($45|0)==3){ label=17;break;}else if(($45|0)==4){ label=21;break;}else if(($45|0)==1){ label=9;break;}else{label=22;break;}
 case 9: 
 var $47=__Z14setupEnemyUnitR15enemyUnitStructi($enemyData,6); //@line 220 "wavegens.cpp"
 var $48=(($enemyData+220)|0); //@line 228 "wavegens.cpp"
 HEAP8[($48)]=1; //@line 228 "wavegens.cpp"
 var $49=(($enemyData+197)|0); //@line 229 "wavegens.cpp"
 HEAP8[($49)]=0; //@line 229 "wavegens.cpp"
 var $50=(($enemyData+196)|0); //@line 230 "wavegens.cpp"
 HEAP8[($50)]=0; //@line 230 "wavegens.cpp"
 var $51=_rand(); //@line 233 "wavegens.cpp"
 var $52=(((($51|0))%(4))&-1); //@line 233 "wavegens.cpp"
 var $53=($52|0)<=2; //@line 233 "wavegens.cpp"
 if($53){label=10;break;}else{label=11;break;} //@line 233 "wavegens.cpp"
 case 10: 
 var $55=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(2576,0); //@line 237 "wavegens.cpp"
 var $56=$enemyData; //@line 237 "wavegens.cpp"
 var $57=(($56+88)|0); //@line 237 "wavegens.cpp"
 HEAP32[(($57)>>2)]=$55; //@line 237 "wavegens.cpp"
 var $58=__Z14setupEnemyUnitR15enemyUnitStructi($carriedUnit,3); //@line 241 "wavegens.cpp"
 $shouldISlavize=1; //@line 243 "wavegens.cpp"
 var $59=HEAP32[((2136)>>2)]; //@line 245 "wavegens.cpp"
 var $60=($59|0); //@line 245 "wavegens.cpp"
 var $61=(66)/($60); //@line 245 "wavegens.cpp"
 var $62=$carriedUnit; //@line 245 "wavegens.cpp"
 var $63=(($62+80)|0); //@line 245 "wavegens.cpp"
 HEAPF64[(($63)>>3)]=$61; //@line 245 "wavegens.cpp"
 var $64=$carriedUnit; //@line 248 "wavegens.cpp"
 var $65=(($64+80)|0); //@line 248 "wavegens.cpp"
 var $66=HEAPF64[(($65)>>3)]; //@line 248 "wavegens.cpp"
 var $67=($66)*(2); //@line 248 "wavegens.cpp"
 var $68=(($carriedUnit+224)|0); //@line 248 "wavegens.cpp"
 var $69=$68; //@line 248 "wavegens.cpp"
 var $70=(($69+24)|0); //@line 248 "wavegens.cpp"
 HEAPF64[(($70)>>3)]=$67; //@line 248 "wavegens.cpp"
 var $71=$3; //@line 252 "wavegens.cpp"
 var $72=(($71)|0); //@line 252 "wavegens.cpp"
 var $73=$72; //@line 252 "wavegens.cpp"
 var $74=(($73+24)|0); //@line 252 "wavegens.cpp"
 var $75=HEAP32[(($74)>>2)]; //@line 252 "wavegens.cpp"
 var $76=($75|0)==3; //@line 252 "wavegens.cpp"
 var $77=__Z34getFrameIndexAndListByNameInSheepsbPcPP19frameListDataStruct($76,16088,0); //@line 252 "wavegens.cpp"
 var $78=$carriedUnit; //@line 252 "wavegens.cpp"
 var $79=(($78+88)|0); //@line 252 "wavegens.cpp"
 HEAP32[(($79)>>2)]=$77; //@line 252 "wavegens.cpp"
 label=12;break; //@line 256 "wavegens.cpp"
 case 11: 
 label=12;break;
 case 12: 
 var $82=$enemyData; //@line 263 "wavegens.cpp"
 var $83=(($82+88)|0); //@line 263 "wavegens.cpp"
 var $84=HEAP32[(($83)>>2)]; //@line 263 "wavegens.cpp"
 var $85=$enemyData; //@line 263 "wavegens.cpp"
 var $86=(($85+24)|0); //@line 263 "wavegens.cpp"
 var $87=HEAP32[(($86)>>2)]; //@line 263 "wavegens.cpp"
 var $88=((1904+((($87)*(24))&-1))|0); //@line 263 "wavegens.cpp"
 var $89=(($88+16)|0); //@line 263 "wavegens.cpp"
 var $90=((((HEAPU8[($89)])|(HEAPU8[((($89)+(1))|0)]<<8)|(HEAPU8[((($89)+(2))|0)]<<16)|(HEAPU8[((($89)+(3))|0)]<<24))|0)); //@line 263 "wavegens.cpp"
 var $91=(($90+((($84)*(80))&-1))|0); //@line 263 "wavegens.cpp"
 $enemyFrame=$91; //@line 263 "wavegens.cpp"
 var $92=HEAP32[((2136)>>2)]; //@line 268 "wavegens.cpp"
 var $93=($92|0); //@line 268 "wavegens.cpp"
 var $94=(120)/($93); //@line 268 "wavegens.cpp"
 var $95=$enemyData; //@line 268 "wavegens.cpp"
 var $96=(($95+80)|0); //@line 268 "wavegens.cpp"
 HEAPF64[(($96)>>3)]=$94; //@line 268 "wavegens.cpp"
 var $97=$speedMultiplier; //@line 270 "wavegens.cpp"
 var $98=$enemyData; //@line 270 "wavegens.cpp"
 var $99=(($98+80)|0); //@line 270 "wavegens.cpp"
 var $100=HEAPF64[(($99)>>3)]; //@line 270 "wavegens.cpp"
 var $101=($100)*($97); //@line 270 "wavegens.cpp"
 HEAPF64[(($99)>>3)]=$101; //@line 270 "wavegens.cpp"
 label=23;break; //@line 272 "wavegens.cpp"
 case 13: 
 var $103=__Z14setupEnemyUnitR15enemyUnitStructi($enemyData,6); //@line 275 "wavegens.cpp"
 var $104=(($enemyData+220)|0); //@line 283 "wavegens.cpp"
 HEAP8[($104)]=1; //@line 283 "wavegens.cpp"
 var $105=(($enemyData+197)|0); //@line 284 "wavegens.cpp"
 HEAP8[($105)]=0; //@line 284 "wavegens.cpp"
 var $106=(($enemyData+196)|0); //@line 285 "wavegens.cpp"
 HEAP8[($106)]=0; //@line 285 "wavegens.cpp"
 var $107=_rand(); //@line 288 "wavegens.cpp"
 var $108=(((($107|0))%(4))&-1); //@line 288 "wavegens.cpp"
 var $109=($108|0)<=2; //@line 288 "wavegens.cpp"
 if($109){label=14;break;}else{label=15;break;} //@line 288 "wavegens.cpp"
 case 14: 
 var $111=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(15440,0); //@line 292 "wavegens.cpp"
 var $112=$enemyData; //@line 292 "wavegens.cpp"
 var $113=(($112+88)|0); //@line 292 "wavegens.cpp"
 HEAP32[(($113)>>2)]=$111; //@line 292 "wavegens.cpp"
 var $114=__Z14setupEnemyUnitR15enemyUnitStructi($carriedUnit,4); //@line 296 "wavegens.cpp"
 $shouldISlavize=1; //@line 298 "wavegens.cpp"
 var $115=HEAP32[((2136)>>2)]; //@line 300 "wavegens.cpp"
 var $116=($115|0); //@line 300 "wavegens.cpp"
 var $117=(66)/($116); //@line 300 "wavegens.cpp"
 var $118=$carriedUnit; //@line 300 "wavegens.cpp"
 var $119=(($118+80)|0); //@line 300 "wavegens.cpp"
 HEAPF64[(($119)>>3)]=$117; //@line 300 "wavegens.cpp"
 var $120=$carriedUnit; //@line 303 "wavegens.cpp"
 var $121=(($120+80)|0); //@line 303 "wavegens.cpp"
 var $122=HEAPF64[(($121)>>3)]; //@line 303 "wavegens.cpp"
 var $123=($122)*(2); //@line 303 "wavegens.cpp"
 var $124=(($carriedUnit+224)|0); //@line 303 "wavegens.cpp"
 var $125=$124; //@line 303 "wavegens.cpp"
 var $126=(($125+24)|0); //@line 303 "wavegens.cpp"
 HEAPF64[(($126)>>3)]=$123; //@line 303 "wavegens.cpp"
 var $127=$3; //@line 307 "wavegens.cpp"
 var $128=(($127)|0); //@line 307 "wavegens.cpp"
 var $129=$128; //@line 307 "wavegens.cpp"
 var $130=(($129+24)|0); //@line 307 "wavegens.cpp"
 var $131=HEAP32[(($130)>>2)]; //@line 307 "wavegens.cpp"
 var $132=($131|0)==3; //@line 307 "wavegens.cpp"
 var $133=__Z34getFrameIndexAndListByNameInSheepsbPcPP19frameListDataStruct($132,16088,0); //@line 307 "wavegens.cpp"
 var $134=$carriedUnit; //@line 307 "wavegens.cpp"
 var $135=(($134+88)|0); //@line 307 "wavegens.cpp"
 HEAP32[(($135)>>2)]=$133; //@line 307 "wavegens.cpp"
 label=16;break; //@line 311 "wavegens.cpp"
 case 15: 
 label=16;break;
 case 16: 
 var $138=$enemyData; //@line 318 "wavegens.cpp"
 var $139=(($138+88)|0); //@line 318 "wavegens.cpp"
 var $140=HEAP32[(($139)>>2)]; //@line 318 "wavegens.cpp"
 var $141=$enemyData; //@line 318 "wavegens.cpp"
 var $142=(($141+24)|0); //@line 318 "wavegens.cpp"
 var $143=HEAP32[(($142)>>2)]; //@line 318 "wavegens.cpp"
 var $144=((1904+((($143)*(24))&-1))|0); //@line 318 "wavegens.cpp"
 var $145=(($144+16)|0); //@line 318 "wavegens.cpp"
 var $146=((((HEAPU8[($145)])|(HEAPU8[((($145)+(1))|0)]<<8)|(HEAPU8[((($145)+(2))|0)]<<16)|(HEAPU8[((($145)+(3))|0)]<<24))|0)); //@line 318 "wavegens.cpp"
 var $147=(($146+((($140)*(80))&-1))|0); //@line 318 "wavegens.cpp"
 $enemyFrame=$147; //@line 318 "wavegens.cpp"
 var $148=HEAP32[((2136)>>2)]; //@line 323 "wavegens.cpp"
 var $149=($148|0); //@line 323 "wavegens.cpp"
 var $150=(120)/($149); //@line 323 "wavegens.cpp"
 var $151=$enemyData; //@line 323 "wavegens.cpp"
 var $152=(($151+80)|0); //@line 323 "wavegens.cpp"
 HEAPF64[(($152)>>3)]=$150; //@line 323 "wavegens.cpp"
 var $153=$speedMultiplier; //@line 325 "wavegens.cpp"
 var $154=$enemyData; //@line 325 "wavegens.cpp"
 var $155=(($154+80)|0); //@line 325 "wavegens.cpp"
 var $156=HEAPF64[(($155)>>3)]; //@line 325 "wavegens.cpp"
 var $157=($156)*($153); //@line 325 "wavegens.cpp"
 HEAPF64[(($155)>>3)]=$157; //@line 325 "wavegens.cpp"
 label=23;break; //@line 327 "wavegens.cpp"
 case 17: 
 var $159=__Z14setupEnemyUnitR15enemyUnitStructi($enemyData,7); //@line 331 "wavegens.cpp"
 var $160=(($enemyData+220)|0); //@line 339 "wavegens.cpp"
 HEAP8[($160)]=1; //@line 339 "wavegens.cpp"
 var $161=(($enemyData+197)|0); //@line 340 "wavegens.cpp"
 HEAP8[($161)]=0; //@line 340 "wavegens.cpp"
 var $162=(($enemyData+196)|0); //@line 341 "wavegens.cpp"
 HEAP8[($162)]=0; //@line 341 "wavegens.cpp"
 var $163=_rand(); //@line 344 "wavegens.cpp"
 var $164=(((($163|0))%(4))&-1); //@line 344 "wavegens.cpp"
 var $165=($164|0)<=2; //@line 344 "wavegens.cpp"
 if($165){label=18;break;}else{label=19;break;} //@line 344 "wavegens.cpp"
 case 18: 
 var $167=__Z26getFrameIndexAndListByNamePcPP19frameListDataStruct(14944,0); //@line 348 "wavegens.cpp"
 var $168=$enemyData; //@line 348 "wavegens.cpp"
 var $169=(($168+88)|0); //@line 348 "wavegens.cpp"
 HEAP32[(($169)>>2)]=$167; //@line 348 "wavegens.cpp"
 var $170=__Z14setupEnemyUnitR15enemyUnitStructi($carriedUnit,5); //@line 351 "wavegens.cpp"
 $shouldISlavize=1; //@line 353 "wavegens.cpp"
 var $171=HEAP32[((2136)>>2)]; //@line 355 "wavegens.cpp"
 var $172=($171|0); //@line 355 "wavegens.cpp"
 var $173=(100)/($172); //@line 355 "wavegens.cpp"
 var $174=$carriedUnit; //@line 355 "wavegens.cpp"
 var $175=(($174+80)|0); //@line 355 "wavegens.cpp"
 HEAPF64[(($175)>>3)]=$173; //@line 355 "wavegens.cpp"
 var $176=$carriedUnit; //@line 358 "wavegens.cpp"
 var $177=(($176+80)|0); //@line 358 "wavegens.cpp"
 var $178=HEAPF64[(($177)>>3)]; //@line 358 "wavegens.cpp"
 var $179=($178)*(2); //@line 358 "wavegens.cpp"
 var $180=(($carriedUnit+224)|0); //@line 358 "wavegens.cpp"
 var $181=$180; //@line 358 "wavegens.cpp"
 var $182=(($181+8)|0); //@line 358 "wavegens.cpp"
 HEAPF64[(($182)>>3)]=$179; //@line 358 "wavegens.cpp"
 label=20;break; //@line 360 "wavegens.cpp"
 case 19: 
 label=20;break;
 case 20: 
 var $185=$enemyData; //@line 367 "wavegens.cpp"
 var $186=(($185+88)|0); //@line 367 "wavegens.cpp"
 var $187=HEAP32[(($186)>>2)]; //@line 367 "wavegens.cpp"
 var $188=$enemyData; //@line 367 "wavegens.cpp"
 var $189=(($188+24)|0); //@line 367 "wavegens.cpp"
 var $190=HEAP32[(($189)>>2)]; //@line 367 "wavegens.cpp"
 var $191=((1904+((($190)*(24))&-1))|0); //@line 367 "wavegens.cpp"
 var $192=(($191+16)|0); //@line 367 "wavegens.cpp"
 var $193=((((HEAPU8[($192)])|(HEAPU8[((($192)+(1))|0)]<<8)|(HEAPU8[((($192)+(2))|0)]<<16)|(HEAPU8[((($192)+(3))|0)]<<24))|0)); //@line 367 "wavegens.cpp"
 var $194=(($193+((($187)*(80))&-1))|0); //@line 367 "wavegens.cpp"
 $enemyFrame=$194; //@line 367 "wavegens.cpp"
 var $195=HEAP32[((2136)>>2)]; //@line 372 "wavegens.cpp"
 var $196=($195|0); //@line 372 "wavegens.cpp"
 var $197=(120)/($196); //@line 372 "wavegens.cpp"
 var $198=$enemyData; //@line 372 "wavegens.cpp"
 var $199=(($198+80)|0); //@line 372 "wavegens.cpp"
 HEAPF64[(($199)>>3)]=$197; //@line 372 "wavegens.cpp"
 var $200=$speedMultiplier; //@line 374 "wavegens.cpp"
 var $201=$enemyData; //@line 374 "wavegens.cpp"
 var $202=(($201+80)|0); //@line 374 "wavegens.cpp"
 var $203=HEAPF64[(($202)>>3)]; //@line 374 "wavegens.cpp"
 var $204=($203)*($200); //@line 374 "wavegens.cpp"
 HEAPF64[(($202)>>3)]=$204; //@line 374 "wavegens.cpp"
 label=23;break; //@line 376 "wavegens.cpp"
 case 21: 
 $1=0; //@line 379 "wavegens.cpp"
 label=47;break; //@line 379 "wavegens.cpp"
 case 22: 
 $1=0; //@line 382 "wavegens.cpp"
 label=47;break; //@line 382 "wavegens.cpp"
 case 23: 
 var $208=$shouldISlavize; //@line 391 "wavegens.cpp"
 var $209=(($208)&1); //@line 391 "wavegens.cpp"
 if($209){label=24;break;}else{label=27;break;} //@line 391 "wavegens.cpp"
 case 24: 
 var $211=$carriedUnit; //@line 393 "wavegens.cpp"
 var $212=(($211)|0); //@line 393 "wavegens.cpp"
 var $213=HEAP32[(($212)>>2)]; //@line 393 "wavegens.cpp"
 var $214=$enemyData; //@line 393 "wavegens.cpp"
 var $215=(($214+144)|0); //@line 393 "wavegens.cpp"
 var $216=(($215)|0); //@line 393 "wavegens.cpp"
 HEAP32[(($216)>>2)]=$213; //@line 393 "wavegens.cpp"
 var $217=$carriedUnit; //@line 394 "wavegens.cpp"
 var $218=(($217+28)|0); //@line 394 "wavegens.cpp"
 var $219=HEAP8[($218)]; //@line 394 "wavegens.cpp"
 var $220=$enemyData; //@line 394 "wavegens.cpp"
 var $221=(($220+144)|0); //@line 394 "wavegens.cpp"
 var $222=(($221+4)|0); //@line 394 "wavegens.cpp"
 HEAP8[($222)]=$219; //@line 394 "wavegens.cpp"
 var $223=$enemyData; //@line 396 "wavegens.cpp"
 var $224=(($223)|0); //@line 396 "wavegens.cpp"
 var $225=HEAP32[(($224)>>2)]; //@line 396 "wavegens.cpp"
 var $226=$carriedUnit; //@line 396 "wavegens.cpp"
 var $227=(($226+132)|0); //@line 396 "wavegens.cpp"
 var $228=(($227)|0); //@line 396 "wavegens.cpp"
 HEAP32[(($228)>>2)]=$225; //@line 396 "wavegens.cpp"
 var $229=$enemyData; //@line 397 "wavegens.cpp"
 var $230=(($229+28)|0); //@line 397 "wavegens.cpp"
 var $231=HEAP8[($230)]; //@line 397 "wavegens.cpp"
 var $232=$carriedUnit; //@line 397 "wavegens.cpp"
 var $233=(($232+132)|0); //@line 397 "wavegens.cpp"
 var $234=(($233+4)|0); //@line 397 "wavegens.cpp"
 HEAP8[($234)]=$231; //@line 397 "wavegens.cpp"
 var $235=$carriedUnit; //@line 398 "wavegens.cpp"
 var $236=(($235+129)|0); //@line 398 "wavegens.cpp"
 HEAP8[($236)]=0; //@line 398 "wavegens.cpp"
 var $237=__ZN15vectorListClassI15enemyUnitStructE7addNodeERS0_(19752,$carriedUnit); //@line 401 "wavegens.cpp"
 $carriedIdx=$237; //@line 401 "wavegens.cpp"
 var $238=$carriedIdx; //@line 402 "wavegens.cpp"
 var $239=__ZN15vectorListClassI15enemyUnitStructE12isValidIndexEm(19752,$238); //@line 402 "wavegens.cpp"
 if($239){label=26;break;}else{label=25;break;} //@line 402 "wavegens.cpp"
 case 25: 
 var $241=__ZN14conLoggerClass7logLineEPcbbbz(19416,14488,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 403 "wavegens.cpp"
 $1=0; //@line 404 "wavegens.cpp"
 label=47;break; //@line 404 "wavegens.cpp"
 case 26: 
 label=27;break; //@line 406 "wavegens.cpp"
 case 27: 
 var $244=__ZN15vectorListClassI15enemyUnitStructE7addNodeERS0_(19752,$enemyData); //@line 408 "wavegens.cpp"
 $enemyIdx=$244; //@line 408 "wavegens.cpp"
 var $245=$enemyIdx; //@line 409 "wavegens.cpp"
 var $246=__ZN15vectorListClassI15enemyUnitStructE12isValidIndexEm(19752,$245); //@line 409 "wavegens.cpp"
 if($246){label=29;break;}else{label=28;break;} //@line 409 "wavegens.cpp"
 case 28: 
 var $248=__ZN14conLoggerClass7logLineEPcbbbz(19416,14488,1,1,1,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 410 "wavegens.cpp"
 $1=0; //@line 411 "wavegens.cpp"
 label=47;break; //@line 411 "wavegens.cpp"
 case 29: 
 var $250=$enemyIdx; //@line 415 "wavegens.cpp"
 var $251=__ZN15vectorListClassI15enemyUnitStructE7getNodeEm(19752,$250); //@line 415 "wavegens.cpp"
 var $252=(($251)|0); //@line 415 "wavegens.cpp"
 var $253=$252; //@line 415 "wavegens.cpp"
 $eUnitPtr=$253; //@line 415 "wavegens.cpp"
 var $254=$shouldISlavize; //@line 418 "wavegens.cpp"
 var $255=(($254)&1); //@line 418 "wavegens.cpp"
 if($255){label=30;break;}else{label=31;break;} //@line 418 "wavegens.cpp"
 case 30: 
 var $257=$carriedIdx; //@line 420 "wavegens.cpp"
 var $258=$eUnitPtr; //@line 420 "wavegens.cpp"
 var $259=(($258+144)|0); //@line 420 "wavegens.cpp"
 var $260=(($259+8)|0); //@line 420 "wavegens.cpp"
 HEAP32[(($260)>>2)]=$257; //@line 420 "wavegens.cpp"
 var $261=$enemyIdx; //@line 423 "wavegens.cpp"
 var $262=$carriedIdx; //@line 423 "wavegens.cpp"
 var $263=__ZN15vectorListClassI15enemyUnitStructE7getNodeEm(19752,$262); //@line 423 "wavegens.cpp"
 var $264=(($263)|0); //@line 423 "wavegens.cpp"
 var $265=$264; //@line 423 "wavegens.cpp"
 var $266=(($265+132)|0); //@line 423 "wavegens.cpp"
 var $267=(($266+8)|0); //@line 423 "wavegens.cpp"
 HEAP32[(($267)>>2)]=$261; //@line 423 "wavegens.cpp"
 label=31;break; //@line 425 "wavegens.cpp"
 case 31: 
 var $269=$eUnitPtr; //@line 434 "wavegens.cpp"
 var $270=__Z12getUnitFrameP17genericUnitStruct($269); //@line 434 "wavegens.cpp"
 var $271=$combinedFrame; //@line 434 "wavegens.cpp"
 var $272=$270; //@line 434 "wavegens.cpp"
 assert(80 % 1 === 0);(_memcpy($271, $272, 80)|0); //@line 434 "wavegens.cpp"
 var $273=$wgFrame; //@line 442 "wavegens.cpp"
 var $274=(($273+24)|0); //@line 442 "wavegens.cpp"
 var $275=HEAP32[(($274)>>2)]; //@line 442 "wavegens.cpp"
 var $276=($275|0); //@line 442 "wavegens.cpp"
 var $277=$3; //@line 442 "wavegens.cpp"
 var $278=(($277)|0); //@line 442 "wavegens.cpp"
 var $279=$278; //@line 442 "wavegens.cpp"
 var $280=(($279+8)|0); //@line 442 "wavegens.cpp"
 var $281=HEAPF64[(($280)>>3)]; //@line 442 "wavegens.cpp"
 var $282=($276)+($281); //@line 442 "wavegens.cpp"
 var $283=$wgFrame; //@line 442 "wavegens.cpp"
 var $284=(($283+40)|0); //@line 442 "wavegens.cpp"
 var $285=HEAP32[(($284)>>2)]; //@line 442 "wavegens.cpp"
 var $286=($285|0); //@line 442 "wavegens.cpp"
 var $287=($282)-($286); //@line 442 "wavegens.cpp"
 var $288=(($combinedFrame+40)|0); //@line 442 "wavegens.cpp"
 var $289=HEAP32[(($288)>>2)]; //@line 442 "wavegens.cpp"
 var $290=($289|0); //@line 442 "wavegens.cpp"
 var $291=($287)+($290); //@line 442 "wavegens.cpp"
 var $292=$eUnitPtr; //@line 442 "wavegens.cpp"
 var $293=(($292+8)|0); //@line 442 "wavegens.cpp"
 HEAPF64[(($293)>>3)]=$291; //@line 442 "wavegens.cpp"
 var $294=$wgFrame; //@line 452 "wavegens.cpp"
 var $295=(($294+28)|0); //@line 452 "wavegens.cpp"
 var $296=HEAP32[(($295)>>2)]; //@line 452 "wavegens.cpp"
 var $297=($296|0); //@line 452 "wavegens.cpp"
 var $298=$3; //@line 452 "wavegens.cpp"
 var $299=(($298)|0); //@line 452 "wavegens.cpp"
 var $300=$299; //@line 452 "wavegens.cpp"
 var $301=(($300+16)|0); //@line 452 "wavegens.cpp"
 var $302=HEAPF64[(($301)>>3)]; //@line 452 "wavegens.cpp"
 var $303=($297)+($302); //@line 452 "wavegens.cpp"
 var $304=$wgFrame; //@line 452 "wavegens.cpp"
 var $305=(($304+44)|0); //@line 452 "wavegens.cpp"
 var $306=HEAP32[(($305)>>2)]; //@line 452 "wavegens.cpp"
 var $307=($306|0); //@line 452 "wavegens.cpp"
 var $308=($303)-($307); //@line 452 "wavegens.cpp"
 var $309=(($combinedFrame+44)|0); //@line 452 "wavegens.cpp"
 var $310=HEAP32[(($309)>>2)]; //@line 452 "wavegens.cpp"
 var $311=($310|0); //@line 452 "wavegens.cpp"
 var $312=($308)+($311); //@line 452 "wavegens.cpp"
 var $313=$wgFrame; //@line 452 "wavegens.cpp"
 var $314=(($313+36)|0); //@line 452 "wavegens.cpp"
 var $315=HEAP32[(($314)>>2)]; //@line 452 "wavegens.cpp"
 var $316=(($combinedFrame+20)|0); //@line 452 "wavegens.cpp"
 var $317=HEAP32[(($316)>>2)]; //@line 452 "wavegens.cpp"
 var $318=((($315)-($317))|0); //@line 452 "wavegens.cpp"
 var $319=($318|0)==0; //@line 452 "wavegens.cpp"
 if($319){label=32;break;}else{label=33;break;} //@line 452 "wavegens.cpp"
 case 32: 
 var $331=0;label=34;break; //@line 452 "wavegens.cpp"
 case 33: 
 var $322=_rand(); //@line 456 "wavegens.cpp"
 var $323=$wgFrame; //@line 456 "wavegens.cpp"
 var $324=(($323+36)|0); //@line 456 "wavegens.cpp"
 var $325=HEAP32[(($324)>>2)]; //@line 456 "wavegens.cpp"
 var $326=(($combinedFrame+20)|0); //@line 456 "wavegens.cpp"
 var $327=HEAP32[(($326)>>2)]; //@line 456 "wavegens.cpp"
 var $328=((($325)-($327))|0); //@line 456 "wavegens.cpp"
 var $329=(((($322|0))%(($328|0)))&-1); //@line 456 "wavegens.cpp"
 var $331=$329;label=34;break; //@line 456 "wavegens.cpp"
 case 34: 
 var $331; //@line 456 "wavegens.cpp"
 var $332=($331|0); //@line 456 "wavegens.cpp"
 var $333=($312)+($332); //@line 456 "wavegens.cpp"
 var $334=$eUnitPtr; //@line 456 "wavegens.cpp"
 var $335=(($334+16)|0); //@line 456 "wavegens.cpp"
 HEAPF64[(($335)>>3)]=$333; //@line 456 "wavegens.cpp"
 var $336=$3; //@line 520 "wavegens.cpp"
 var $337=(($336)|0); //@line 520 "wavegens.cpp"
 var $338=$337; //@line 520 "wavegens.cpp"
 var $339=(($338+24)|0); //@line 520 "wavegens.cpp"
 var $340=HEAP32[(($339)>>2)]; //@line 520 "wavegens.cpp"
 if(($340|0)==1){ label=35;break;}else if(($340|0)==2){ label=36;break;}else if(($340|0)==3){ label=37;break;}else if(($340|0)==4){ label=38;break;}else{label=39;break;}
 case 35: 
 var $342=$eUnitPtr; //@line 523 "wavegens.cpp"
 var $343=(($342+156)|0); //@line 523 "wavegens.cpp"
 HEAP8[($343)]=1; //@line 523 "wavegens.cpp"
 var $344=$eUnitPtr; //@line 524 "wavegens.cpp"
 var $345=(($344+8)|0); //@line 524 "wavegens.cpp"
 var $346=HEAPF64[(($345)>>3)]; //@line 524 "wavegens.cpp"
 var $347=($346)-(100); //@line 524 "wavegens.cpp"
 var $348=$eUnitPtr; //@line 524 "wavegens.cpp"
 var $349=(($348+160)|0); //@line 524 "wavegens.cpp"
 HEAPF64[(($349)>>3)]=$347; //@line 524 "wavegens.cpp"
 var $350=$eUnitPtr; //@line 525 "wavegens.cpp"
 var $351=(($350+16)|0); //@line 525 "wavegens.cpp"
 var $352=HEAPF64[(($351)>>3)]; //@line 525 "wavegens.cpp"
 var $353=$eUnitPtr; //@line 525 "wavegens.cpp"
 var $354=(($353+168)|0); //@line 525 "wavegens.cpp"
 HEAPF64[(($354)>>3)]=$352; //@line 525 "wavegens.cpp"
 label=40;break; //@line 526 "wavegens.cpp"
 case 36: 
 var $356=$eUnitPtr; //@line 529 "wavegens.cpp"
 var $357=(($356+156)|0); //@line 529 "wavegens.cpp"
 HEAP8[($357)]=1; //@line 529 "wavegens.cpp"
 var $358=$eUnitPtr; //@line 530 "wavegens.cpp"
 var $359=(($358+8)|0); //@line 530 "wavegens.cpp"
 var $360=HEAPF64[(($359)>>3)]; //@line 530 "wavegens.cpp"
 var $361=($360)-(100); //@line 530 "wavegens.cpp"
 var $362=$eUnitPtr; //@line 530 "wavegens.cpp"
 var $363=(($362+160)|0); //@line 530 "wavegens.cpp"
 HEAPF64[(($363)>>3)]=$361; //@line 530 "wavegens.cpp"
 var $364=$eUnitPtr; //@line 531 "wavegens.cpp"
 var $365=(($364+16)|0); //@line 531 "wavegens.cpp"
 var $366=HEAPF64[(($365)>>3)]; //@line 531 "wavegens.cpp"
 var $367=$eUnitPtr; //@line 531 "wavegens.cpp"
 var $368=(($367+168)|0); //@line 531 "wavegens.cpp"
 HEAPF64[(($368)>>3)]=$366; //@line 531 "wavegens.cpp"
 label=40;break; //@line 532 "wavegens.cpp"
 case 37: 
 var $370=$eUnitPtr; //@line 535 "wavegens.cpp"
 var $371=(($370+156)|0); //@line 535 "wavegens.cpp"
 HEAP8[($371)]=1; //@line 535 "wavegens.cpp"
 var $372=$eUnitPtr; //@line 536 "wavegens.cpp"
 var $373=(($372+8)|0); //@line 536 "wavegens.cpp"
 var $374=HEAPF64[(($373)>>3)]; //@line 536 "wavegens.cpp"
 var $375=($374)-(100); //@line 536 "wavegens.cpp"
 var $376=$eUnitPtr; //@line 536 "wavegens.cpp"
 var $377=(($376+160)|0); //@line 536 "wavegens.cpp"
 HEAPF64[(($377)>>3)]=$375; //@line 536 "wavegens.cpp"
 var $378=$eUnitPtr; //@line 537 "wavegens.cpp"
 var $379=(($378+16)|0); //@line 537 "wavegens.cpp"
 var $380=HEAPF64[(($379)>>3)]; //@line 537 "wavegens.cpp"
 var $381=$eUnitPtr; //@line 537 "wavegens.cpp"
 var $382=(($381+168)|0); //@line 537 "wavegens.cpp"
 HEAPF64[(($382)>>3)]=$380; //@line 537 "wavegens.cpp"
 label=40;break; //@line 538 "wavegens.cpp"
 case 38: 
 $1=0; //@line 541 "wavegens.cpp"
 label=47;break; //@line 541 "wavegens.cpp"
 case 39: 
 $1=0; //@line 544 "wavegens.cpp"
 label=47;break; //@line 544 "wavegens.cpp"
 case 40: 
 var $386=$eUnitPtr; //@line 553 "wavegens.cpp"
 var $387=(($386+96)|0); //@line 553 "wavegens.cpp"
 var $388=HEAP8[($387)]; //@line 553 "wavegens.cpp"
 var $389=(($388)&1); //@line 553 "wavegens.cpp"
 if($389){label=41;break;}else{label=42;break;} //@line 553 "wavegens.cpp"
 case 41: 
 var $391=HEAPF64[((19560)>>3)]; //@line 555 "wavegens.cpp"
 var $392=$eUnitPtr; //@line 555 "wavegens.cpp"
 var $393=(($392+160)|0); //@line 555 "wavegens.cpp"
 var $394=HEAPF64[(($393)>>3)]; //@line 555 "wavegens.cpp"
 var $395=($394)-($391); //@line 555 "wavegens.cpp"
 HEAPF64[(($393)>>3)]=$395; //@line 555 "wavegens.cpp"
 var $396=HEAPF64[((19568)>>3)]; //@line 556 "wavegens.cpp"
 var $397=$eUnitPtr; //@line 556 "wavegens.cpp"
 var $398=(($397+168)|0); //@line 556 "wavegens.cpp"
 var $399=HEAPF64[(($398)>>3)]; //@line 556 "wavegens.cpp"
 var $400=($399)-($396); //@line 556 "wavegens.cpp"
 HEAPF64[(($398)>>3)]=$400; //@line 556 "wavegens.cpp"
 label=42;break; //@line 557 "wavegens.cpp"
 case 42: 
 var $402=$eUnitPtr; //@line 561 "wavegens.cpp"
 var $403=(($402+156)|0); //@line 561 "wavegens.cpp"
 var $404=HEAP8[($403)]; //@line 561 "wavegens.cpp"
 var $405=(($404)&1); //@line 561 "wavegens.cpp"
 if($405){label=43;break;}else{label=44;break;} //@line 561 "wavegens.cpp"
 case 43: 
 var $407=$eUnitPtr; //@line 564 "wavegens.cpp"
 var $408=$eUnitPtr; //@line 564 "wavegens.cpp"
 var $409=(($408+160)|0); //@line 564 "wavegens.cpp"
 var $410=HEAPF64[(($409)>>3)]; //@line 564 "wavegens.cpp"
 var $411=$eUnitPtr; //@line 564 "wavegens.cpp"
 var $412=(($411+168)|0); //@line 564 "wavegens.cpp"
 var $413=HEAPF64[(($412)>>3)]; //@line 564 "wavegens.cpp"
 var $414=$eUnitPtr; //@line 564 "wavegens.cpp"
 var $415=(($414+80)|0); //@line 564 "wavegens.cpp"
 var $416=HEAPF64[(($415)>>3)]; //@line 564 "wavegens.cpp"
 var $417=__Z21setSpeedForLinealMoveP17genericUnitStructeed($407,$410,$413,$416); //@line 564 "wavegens.cpp"
 label=44;break; //@line 567 "wavegens.cpp"
 case 44: 
 label=45;break; //@line 569 "wavegens.cpp"
 case 45: 
 var $420=$i; //@line 206 "wavegens.cpp"
 var $421=((($420)+(1))|0); //@line 206 "wavegens.cpp"
 $i=$421; //@line 206 "wavegens.cpp"
 label=7;break; //@line 206 "wavegens.cpp"
 case 46: 
 $1=1; //@line 571 "wavegens.cpp"
 label=47;break; //@line 571 "wavegens.cpp"
 case 47: 
 var $424=$1; //@line 572 "wavegens.cpp"
 STACKTOP=sp;return $424; //@line 572 "wavegens.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE7addNodeERS0_($this,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $index;
 $2=$this;
 $3=$data;
 var $4=$2;
 var $5=(($4+12)|0); //@line 369 "./vectorlist.h"
 var $6=HEAP32[(($5)>>2)]; //@line 369 "./vectorlist.h"
 $index=$6; //@line 369 "./vectorlist.h"
 var $7=(($4+12)|0); //@line 372 "./vectorlist.h"
 var $8=HEAP32[(($7)>>2)]; //@line 372 "./vectorlist.h"
 var $9=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $10=HEAP32[(($9)>>2)]; //@line 372 "./vectorlist.h"
 var $11=($8>>>0)>=($10>>>0); //@line 372 "./vectorlist.h"
 if($11){label=2;break;}else{label=3;break;} //@line 372 "./vectorlist.h"
 case 2: 
 var $13=(($4+4)|0); //@line 372 "./vectorlist.h"
 var $14=HEAP32[(($13)>>2)]; //@line 372 "./vectorlist.h"
 $1=$14; //@line 372 "./vectorlist.h"
 label=6;break; //@line 372 "./vectorlist.h"
 case 3: 
 var $16=(($4+12)|0); //@line 375 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 375 "./vectorlist.h"
 var $18=(($4+20)|0); //@line 375 "./vectorlist.h"
 var $19=HEAP32[(($18)>>2)]; //@line 375 "./vectorlist.h"
 var $20=(($19+((($17)*(264))&-1))|0); //@line 375 "./vectorlist.h"
 var $21=(($20)|0); //@line 375 "./vectorlist.h"
 var $22=$3; //@line 375 "./vectorlist.h"
 var $23=$21; //@line 375 "./vectorlist.h"
 var $24=$22; //@line 375 "./vectorlist.h"
 assert(256 % 1 === 0);(_memcpy($23, $24, 256)|0); //@line 375 "./vectorlist.h"
 var $25=(($4+12)|0); //@line 376 "./vectorlist.h"
 var $26=HEAP32[(($25)>>2)]; //@line 376 "./vectorlist.h"
 var $27=__ZN15vectorListClassI15enemyUnitStructE12activateNodeEm($4,$26); //@line 376 "./vectorlist.h"
 if($27){label=5;break;}else{label=4;break;} //@line 376 "./vectorlist.h"
 case 4: 
 var $29=(($4+4)|0); //@line 376 "./vectorlist.h"
 var $30=HEAP32[(($29)>>2)]; //@line 376 "./vectorlist.h"
 $1=$30; //@line 376 "./vectorlist.h"
 label=6;break; //@line 376 "./vectorlist.h"
 case 5: 
 var $32=$index; //@line 379 "./vectorlist.h"
 $1=$32; //@line 379 "./vectorlist.h"
 label=6;break; //@line 379 "./vectorlist.h"
 case 6: 
 var $34=$1; //@line 380 "./vectorlist.h"
 STACKTOP=sp;return $34; //@line 380 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __Z16executeWaveGenAImR20vectorListNodeStructI17waveGenUnitStructE($frameNumber,$unit){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$frameNumber;
 $3=$unit;
 var $4=$3; //@line 580 "wavegens.cpp"
 var $5=(($4)|0); //@line 580 "wavegens.cpp"
 var $6=(($5+176)|0); //@line 580 "wavegens.cpp"
 var $7=HEAP8[($6)]; //@line 580 "wavegens.cpp"
 var $8=(($7)&1); //@line 580 "wavegens.cpp"
 if($8){label=3;break;}else{label=2;break;} //@line 580 "wavegens.cpp"
 case 2: 
 $1=1; //@line 580 "wavegens.cpp"
 label=8;break; //@line 580 "wavegens.cpp"
 case 3: 
 var $11=$3; //@line 589 "wavegens.cpp"
 var $12=(($11)|0); //@line 589 "wavegens.cpp"
 var $13=(($12+192)|0); //@line 589 "wavegens.cpp"
 var $14=HEAPF64[(($13)>>3)]; //@line 589 "wavegens.cpp"
 var $15=$3; //@line 589 "wavegens.cpp"
 var $16=(($15)|0); //@line 589 "wavegens.cpp"
 var $17=(($16+200)|0); //@line 589 "wavegens.cpp"
 var $18=HEAPF64[(($17)>>3)]; //@line 589 "wavegens.cpp"
 var $19=($18)-($14); //@line 589 "wavegens.cpp"
 HEAPF64[(($17)>>3)]=$19; //@line 589 "wavegens.cpp"
 var $20=$3; //@line 592 "wavegens.cpp"
 var $21=(($20)|0); //@line 592 "wavegens.cpp"
 var $22=(($21+200)|0); //@line 592 "wavegens.cpp"
 var $23=HEAPF64[(($22)>>3)]; //@line 592 "wavegens.cpp"
 var $24=HEAPF64[((19560)>>3)]; //@line 592 "wavegens.cpp"
 var $25=HEAP32[((19576)>>2)]; //@line 592 "wavegens.cpp"
 var $26=($25>>>0); //@line 592 "wavegens.cpp"
 var $27=($24)+($26); //@line 592 "wavegens.cpp"
 var $28=$23<=$27; //@line 592 "wavegens.cpp"
 if($28){label=4;break;}else{label=7;break;} //@line 592 "wavegens.cpp"
 case 4: 
 var $30=$2; //@line 594 "wavegens.cpp"
 var $31=$3; //@line 594 "wavegens.cpp"
 var $32=__Z17addEnemiesWaveGenmR20vectorListNodeStructI17waveGenUnitStructE($30,$31); //@line 594 "wavegens.cpp"
 if($32){label=6;break;}else{label=5;break;} //@line 594 "wavegens.cpp"
 case 5: 
 $1=0; //@line 594 "wavegens.cpp"
 label=8;break; //@line 594 "wavegens.cpp"
 case 6: 
 var $35=HEAPF64[((19560)>>3)]; //@line 597 "wavegens.cpp"
 var $36=HEAP32[((19576)>>2)]; //@line 597 "wavegens.cpp"
 var $37=($36>>>0); //@line 597 "wavegens.cpp"
 var $38=($35)+($37); //@line 597 "wavegens.cpp"
 var $39=$3; //@line 597 "wavegens.cpp"
 var $40=(($39)|0); //@line 597 "wavegens.cpp"
 var $41=(($40+184)|0); //@line 597 "wavegens.cpp"
 var $42=HEAPF64[(($41)>>3)]; //@line 597 "wavegens.cpp"
 var $43=($38)+($42); //@line 597 "wavegens.cpp"
 var $44=$3; //@line 597 "wavegens.cpp"
 var $45=(($44)|0); //@line 597 "wavegens.cpp"
 var $46=(($45+200)|0); //@line 597 "wavegens.cpp"
 HEAPF64[(($46)>>3)]=$43; //@line 597 "wavegens.cpp"
 label=7;break; //@line 599 "wavegens.cpp"
 case 7: 
 $1=1; //@line 601 "wavegens.cpp"
 label=8;break; //@line 601 "wavegens.cpp"
 case 8: 
 var $49=$1; //@line 602 "wavegens.cpp"
 STACKTOP=sp;return $49; //@line 602 "wavegens.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __Z17executeEnemyWavesm($frameNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $unit;
 $2=$frameNumber;
 var $3=__ZN15vectorListClassI17waveGenUnitStructE12getFirstNodeEv(18544); //@line 611 "wavegens.cpp"
 $unit=$3; //@line 611 "wavegens.cpp"
 label=2;break; //@line 611 "wavegens.cpp"
 case 2: 
 var $5=$unit; //@line 611 "wavegens.cpp"
 var $6=($5|0)!=0; //@line 611 "wavegens.cpp"
 if($6){label=3;break;}else{label=9;break;} //@line 611 "wavegens.cpp"
 case 3: 
 var $8=$unit; //@line 613 "wavegens.cpp"
 var $9=(($8)|0); //@line 613 "wavegens.cpp"
 var $10=$9; //@line 613 "wavegens.cpp"
 var $11=(($10+130)|0); //@line 613 "wavegens.cpp"
 var $12=HEAP8[($11)]; //@line 613 "wavegens.cpp"
 var $13=(($12)&1); //@line 613 "wavegens.cpp"
 if($13){label=5;break;}else{label=4;break;} //@line 613 "wavegens.cpp"
 case 4: 
 label=8;break; //@line 613 "wavegens.cpp"
 case 5: 
 var $16=$2; //@line 616 "wavegens.cpp"
 var $17=$unit; //@line 616 "wavegens.cpp"
 var $18=__Z16executeWaveGenAImR20vectorListNodeStructI17waveGenUnitStructE($16,$17); //@line 616 "wavegens.cpp"
 if($18){label=7;break;}else{label=6;break;} //@line 616 "wavegens.cpp"
 case 6: 
 $1=0; //@line 616 "wavegens.cpp"
 label=10;break; //@line 616 "wavegens.cpp"
 case 7: 
 label=8;break; //@line 617 "wavegens.cpp"
 case 8: 
 var $22=$unit; //@line 611 "wavegens.cpp"
 var $23=__ZN15vectorListClassI17waveGenUnitStructE11getNextNodeEP20vectorListNodeStructIS0_E(18544,$22); //@line 611 "wavegens.cpp"
 $unit=$23; //@line 611 "wavegens.cpp"
 label=2;break; //@line 611 "wavegens.cpp"
 case 9: 
 $1=1; //@line 619 "wavegens.cpp"
 label=10;break; //@line 619 "wavegens.cpp"
 case 10: 
 var $26=$1; //@line 620 "wavegens.cpp"
 STACKTOP=sp;return $26; //@line 620 "wavegens.cpp"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI15enemyUnitStructE12activateNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 199 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 199 "./vectorlist.h"
 var $7=(($6)&1); //@line 199 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 199 "./vectorlist.h"
 case 2: 
 $1=0; //@line 199 "./vectorlist.h"
 label=18;break; //@line 199 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 202 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 202 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 202 "./vectorlist.h"
 var $13=(($12+((($10)*(264))&-1))|0); //@line 202 "./vectorlist.h"
 var $14=(($13+256)|0); //@line 202 "./vectorlist.h"
 HEAP8[($14)]=0; //@line 202 "./vectorlist.h"
 var $15=$3; //@line 207 "./vectorlist.h"
 var $16=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 207 "./vectorlist.h"
 var $18=($15>>>0)>($17>>>0); //@line 207 "./vectorlist.h"
 if($18){label=5;break;}else{label=4;break;} //@line 207 "./vectorlist.h"
 case 4: 
 var $20=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $21=HEAP32[(($20)>>2)]; //@line 207 "./vectorlist.h"
 var $22=(($4+4)|0); //@line 207 "./vectorlist.h"
 var $23=HEAP32[(($22)>>2)]; //@line 207 "./vectorlist.h"
 var $24=($21|0)==($23|0); //@line 207 "./vectorlist.h"
 if($24){label=5;break;}else{label=6;break;} //@line 207 "./vectorlist.h"
 case 5: 
 var $26=$3; //@line 209 "./vectorlist.h"
 var $27=(($4+8)|0); //@line 209 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 209 "./vectorlist.h"
 label=6;break; //@line 210 "./vectorlist.h"
 case 6: 
 var $29=$3; //@line 213 "./vectorlist.h"
 var $30=(($4+12)|0); //@line 213 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 213 "./vectorlist.h"
 var $32=($29|0)==($31|0); //@line 213 "./vectorlist.h"
 if($32){label=7;break;}else{label=14;break;} //@line 213 "./vectorlist.h"
 case 7: 
 var $34=(($4+20)|0); //@line 218 "./vectorlist.h"
 var $35=HEAP32[(($34)>>2)]; //@line 218 "./vectorlist.h"
 var $36=(($4+12)|0); //@line 218 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 218 "./vectorlist.h"
 var $38=(($35+((($37)*(264))&-1))|0); //@line 218 "./vectorlist.h"
 var $39=(($38+264)|0); //@line 218 "./vectorlist.h"
 $node=$39; //@line 218 "./vectorlist.h"
 var $40=(($4+12)|0); //@line 221 "./vectorlist.h"
 var $41=HEAP32[(($40)>>2)]; //@line 221 "./vectorlist.h"
 var $42=((($41)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$42; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 8: 
 var $44=$i; //@line 221 "./vectorlist.h"
 var $45=(($4+4)|0); //@line 221 "./vectorlist.h"
 var $46=HEAP32[(($45)>>2)]; //@line 221 "./vectorlist.h"
 var $47=($44>>>0)<($46>>>0); //@line 221 "./vectorlist.h"
 if($47){label=9;break;}else{label=13;break;} //@line 221 "./vectorlist.h"
 case 9: 
 var $49=$node; //@line 223 "./vectorlist.h"
 var $50=(($49+256)|0); //@line 223 "./vectorlist.h"
 var $51=HEAP8[($50)]; //@line 223 "./vectorlist.h"
 var $52=(($51)&1); //@line 223 "./vectorlist.h"
 if($52){label=10;break;}else{label=11;break;} //@line 223 "./vectorlist.h"
 case 10: 
 label=13;break; //@line 223 "./vectorlist.h"
 case 11: 
 var $55=$node; //@line 226 "./vectorlist.h"
 var $56=(($55+264)|0); //@line 226 "./vectorlist.h"
 $node=$56; //@line 226 "./vectorlist.h"
 label=12;break; //@line 227 "./vectorlist.h"
 case 12: 
 var $58=$i; //@line 221 "./vectorlist.h"
 var $59=((($58)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$59; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 13: 
 var $61=$i; //@line 233 "./vectorlist.h"
 var $62=(($4+12)|0); //@line 233 "./vectorlist.h"
 HEAP32[(($62)>>2)]=$61; //@line 233 "./vectorlist.h"
 label=14;break; //@line 235 "./vectorlist.h"
 case 14: 
 var $64=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $65=HEAP32[(($64)>>2)]; //@line 246 "./vectorlist.h"
 var $66=(($4+4)|0); //@line 246 "./vectorlist.h"
 var $67=HEAP32[(($66)>>2)]; //@line 246 "./vectorlist.h"
 var $68=($65|0)!=($67|0); //@line 246 "./vectorlist.h"
 if($68){label=15;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 15: 
 var $70=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $71=HEAP32[(($70)>>2)]; //@line 246 "./vectorlist.h"
 var $72=((($71)+(1))|0); //@line 246 "./vectorlist.h"
 var $73=(($4+16)|0); //@line 246 "./vectorlist.h"
 var $74=HEAP32[(($73)>>2)]; //@line 246 "./vectorlist.h"
 var $75=($72>>>0)>($74>>>0); //@line 246 "./vectorlist.h"
 if($75){label=16;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 16: 
 var $77=(($4+8)|0); //@line 247 "./vectorlist.h"
 var $78=HEAP32[(($77)>>2)]; //@line 247 "./vectorlist.h"
 var $79=((($78)+(1))|0); //@line 247 "./vectorlist.h"
 var $80=(($4+16)|0); //@line 247 "./vectorlist.h"
 HEAP32[(($80)>>2)]=$79; //@line 247 "./vectorlist.h"
 label=17;break; //@line 247 "./vectorlist.h"
 case 17: 
 $1=1; //@line 249 "./vectorlist.h"
 label=18;break; //@line 249 "./vectorlist.h"
 case 18: 
 var $83=$1; //@line 250 "./vectorlist.h"
 STACKTOP=sp;return $83; //@line 250 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function __ZN15vectorListClassI17waveGenUnitStructE12activateNodeEm($this,$nodeNumber){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $node;
 $2=$this;
 $3=$nodeNumber;
 var $4=$2;
 var $5=(($4)|0); //@line 199 "./vectorlist.h"
 var $6=HEAP8[($5)]; //@line 199 "./vectorlist.h"
 var $7=(($6)&1); //@line 199 "./vectorlist.h"
 if($7){label=3;break;}else{label=2;break;} //@line 199 "./vectorlist.h"
 case 2: 
 $1=0; //@line 199 "./vectorlist.h"
 label=18;break; //@line 199 "./vectorlist.h"
 case 3: 
 var $10=$3; //@line 202 "./vectorlist.h"
 var $11=(($4+20)|0); //@line 202 "./vectorlist.h"
 var $12=HEAP32[(($11)>>2)]; //@line 202 "./vectorlist.h"
 var $13=(($12+((($10)*(216))&-1))|0); //@line 202 "./vectorlist.h"
 var $14=(($13+208)|0); //@line 202 "./vectorlist.h"
 HEAP8[($14)]=0; //@line 202 "./vectorlist.h"
 var $15=$3; //@line 207 "./vectorlist.h"
 var $16=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $17=HEAP32[(($16)>>2)]; //@line 207 "./vectorlist.h"
 var $18=($15>>>0)>($17>>>0); //@line 207 "./vectorlist.h"
 if($18){label=5;break;}else{label=4;break;} //@line 207 "./vectorlist.h"
 case 4: 
 var $20=(($4+8)|0); //@line 207 "./vectorlist.h"
 var $21=HEAP32[(($20)>>2)]; //@line 207 "./vectorlist.h"
 var $22=(($4+4)|0); //@line 207 "./vectorlist.h"
 var $23=HEAP32[(($22)>>2)]; //@line 207 "./vectorlist.h"
 var $24=($21|0)==($23|0); //@line 207 "./vectorlist.h"
 if($24){label=5;break;}else{label=6;break;} //@line 207 "./vectorlist.h"
 case 5: 
 var $26=$3; //@line 209 "./vectorlist.h"
 var $27=(($4+8)|0); //@line 209 "./vectorlist.h"
 HEAP32[(($27)>>2)]=$26; //@line 209 "./vectorlist.h"
 label=6;break; //@line 210 "./vectorlist.h"
 case 6: 
 var $29=$3; //@line 213 "./vectorlist.h"
 var $30=(($4+12)|0); //@line 213 "./vectorlist.h"
 var $31=HEAP32[(($30)>>2)]; //@line 213 "./vectorlist.h"
 var $32=($29|0)==($31|0); //@line 213 "./vectorlist.h"
 if($32){label=7;break;}else{label=14;break;} //@line 213 "./vectorlist.h"
 case 7: 
 var $34=(($4+20)|0); //@line 218 "./vectorlist.h"
 var $35=HEAP32[(($34)>>2)]; //@line 218 "./vectorlist.h"
 var $36=(($4+12)|0); //@line 218 "./vectorlist.h"
 var $37=HEAP32[(($36)>>2)]; //@line 218 "./vectorlist.h"
 var $38=(($35+((($37)*(216))&-1))|0); //@line 218 "./vectorlist.h"
 var $39=(($38+216)|0); //@line 218 "./vectorlist.h"
 $node=$39; //@line 218 "./vectorlist.h"
 var $40=(($4+12)|0); //@line 221 "./vectorlist.h"
 var $41=HEAP32[(($40)>>2)]; //@line 221 "./vectorlist.h"
 var $42=((($41)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$42; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 8: 
 var $44=$i; //@line 221 "./vectorlist.h"
 var $45=(($4+4)|0); //@line 221 "./vectorlist.h"
 var $46=HEAP32[(($45)>>2)]; //@line 221 "./vectorlist.h"
 var $47=($44>>>0)<($46>>>0); //@line 221 "./vectorlist.h"
 if($47){label=9;break;}else{label=13;break;} //@line 221 "./vectorlist.h"
 case 9: 
 var $49=$node; //@line 223 "./vectorlist.h"
 var $50=(($49+208)|0); //@line 223 "./vectorlist.h"
 var $51=HEAP8[($50)]; //@line 223 "./vectorlist.h"
 var $52=(($51)&1); //@line 223 "./vectorlist.h"
 if($52){label=10;break;}else{label=11;break;} //@line 223 "./vectorlist.h"
 case 10: 
 label=13;break; //@line 223 "./vectorlist.h"
 case 11: 
 var $55=$node; //@line 226 "./vectorlist.h"
 var $56=(($55+216)|0); //@line 226 "./vectorlist.h"
 $node=$56; //@line 226 "./vectorlist.h"
 label=12;break; //@line 227 "./vectorlist.h"
 case 12: 
 var $58=$i; //@line 221 "./vectorlist.h"
 var $59=((($58)+(1))|0); //@line 221 "./vectorlist.h"
 $i=$59; //@line 221 "./vectorlist.h"
 label=8;break; //@line 221 "./vectorlist.h"
 case 13: 
 var $61=$i; //@line 233 "./vectorlist.h"
 var $62=(($4+12)|0); //@line 233 "./vectorlist.h"
 HEAP32[(($62)>>2)]=$61; //@line 233 "./vectorlist.h"
 label=14;break; //@line 235 "./vectorlist.h"
 case 14: 
 var $64=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $65=HEAP32[(($64)>>2)]; //@line 246 "./vectorlist.h"
 var $66=(($4+4)|0); //@line 246 "./vectorlist.h"
 var $67=HEAP32[(($66)>>2)]; //@line 246 "./vectorlist.h"
 var $68=($65|0)!=($67|0); //@line 246 "./vectorlist.h"
 if($68){label=15;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 15: 
 var $70=(($4+8)|0); //@line 246 "./vectorlist.h"
 var $71=HEAP32[(($70)>>2)]; //@line 246 "./vectorlist.h"
 var $72=((($71)+(1))|0); //@line 246 "./vectorlist.h"
 var $73=(($4+16)|0); //@line 246 "./vectorlist.h"
 var $74=HEAP32[(($73)>>2)]; //@line 246 "./vectorlist.h"
 var $75=($72>>>0)>($74>>>0); //@line 246 "./vectorlist.h"
 if($75){label=16;break;}else{label=17;break;} //@line 246 "./vectorlist.h"
 case 16: 
 var $77=(($4+8)|0); //@line 247 "./vectorlist.h"
 var $78=HEAP32[(($77)>>2)]; //@line 247 "./vectorlist.h"
 var $79=((($78)+(1))|0); //@line 247 "./vectorlist.h"
 var $80=(($4+16)|0); //@line 247 "./vectorlist.h"
 HEAP32[(($80)>>2)]=$79; //@line 247 "./vectorlist.h"
 label=17;break; //@line 247 "./vectorlist.h"
 case 17: 
 $1=1; //@line 249 "./vectorlist.h"
 label=18;break; //@line 249 "./vectorlist.h"
 case 18: 
 var $83=$1; //@line 250 "./vectorlist.h"
 STACKTOP=sp;return $83; //@line 250 "./vectorlist.h"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_checkstack($L,$size){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=sp;
 var $res;
 var $ci;
 var $inuse;
 $1=$L;
 HEAP32[(($2)>>2)]=$size;
 var $3=$1; //@line 94 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+16)|0); //@line 94 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 94 "lib/lua-5.2.3/src/lapi.c"
 $ci=$5; //@line 94 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+24)|0); //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $9=$1; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+8)|0); //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $12=$8; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $13=$11; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $14=((($12)-($13))|0); //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $15=(((($14|0))/(16))&-1); //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $16=HEAP32[(($2)>>2)]; //@line 96 "lib/lua-5.2.3/src/lapi.c"
 var $17=($15|0)>($16|0); //@line 96 "lib/lua-5.2.3/src/lapi.c"
 if($17){label=2;break;}else{label=3;break;} //@line 96 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 $res=1; //@line 97 "lib/lua-5.2.3/src/lapi.c"
 label=7;break; //@line 97 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $20=$1; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20+8)|0); //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $23=$1; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+28)|0); //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $26=$22; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $27=$25; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $28=((($26)-($27))|0); //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $29=(((($28|0))/(16))&-1); //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $30=((($29)+(5))|0); //@line 99 "lib/lua-5.2.3/src/lapi.c"
 $inuse=$30; //@line 99 "lib/lua-5.2.3/src/lapi.c"
 var $31=$inuse; //@line 100 "lib/lua-5.2.3/src/lapi.c"
 var $32=HEAP32[(($2)>>2)]; //@line 100 "lib/lua-5.2.3/src/lapi.c"
 var $33=(((1000000)-($32))|0); //@line 100 "lib/lua-5.2.3/src/lapi.c"
 var $34=($31|0)>($33|0); //@line 100 "lib/lua-5.2.3/src/lapi.c"
 if($34){label=4;break;}else{label=5;break;} //@line 100 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 $res=0; //@line 101 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 101 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $37=$1; //@line 103 "lib/lua-5.2.3/src/lapi.c"
 var $38=$2; //@line 103 "lib/lua-5.2.3/src/lapi.c"
 var $39=_luaD_rawrunprotected($37,170,$38); //@line 103 "lib/lua-5.2.3/src/lapi.c"
 var $40=($39|0)==0; //@line 103 "lib/lua-5.2.3/src/lapi.c"
 var $41=($40&1); //@line 103 "lib/lua-5.2.3/src/lapi.c"
 $res=$41; //@line 103 "lib/lua-5.2.3/src/lapi.c"
 label=6;break;
 case 6: 
 label=7;break;
 case 7: 
 var $44=$res; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $45=($44|0)!=0; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 if($45){label=8;break;}else{label=10;break;} //@line 105 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $47=$ci; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $48=(($47+4)|0); //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $49=HEAP32[(($48)>>2)]; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $50=$1; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $51=(($50+8)|0); //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $52=HEAP32[(($51)>>2)]; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $53=HEAP32[(($2)>>2)]; //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $54=(($52+($53<<4))|0); //@line 105 "lib/lua-5.2.3/src/lapi.c"
 var $55=($49>>>0)<($54>>>0); //@line 105 "lib/lua-5.2.3/src/lapi.c"
 if($55){label=9;break;}else{label=10;break;} //@line 105 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $57=$1; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $58=(($57+8)|0); //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $59=HEAP32[(($58)>>2)]; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $60=HEAP32[(($2)>>2)]; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $61=(($59+($60<<4))|0); //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $62=$ci; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 var $63=(($62+4)|0); //@line 106 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($63)>>2)]=$61; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 label=10;break; //@line 106 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 var $65=$res; //@line 108 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $65; //@line 108 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _growstack($L,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $size;
 $1=$L;
 $2=$ud;
 var $3=$2; //@line 87 "lib/lua-5.2.3/src/lapi.c"
 var $4=$3; //@line 87 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 87 "lib/lua-5.2.3/src/lapi.c"
 $size=$5; //@line 87 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 88 "lib/lua-5.2.3/src/lapi.c"
 var $7=$size; //@line 88 "lib/lua-5.2.3/src/lapi.c"
 _luaD_growstack($6,$7); //@line 88 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 89 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_atpanic($L,$panicf){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $old;
 $1=$L;
 $2=$panicf;
 var $3=$1; //@line 130 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+12)|0); //@line 130 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 130 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+168)|0); //@line 130 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 130 "lib/lua-5.2.3/src/lapi.c"
 $old=$7; //@line 130 "lib/lua-5.2.3/src/lapi.c"
 var $8=$2; //@line 131 "lib/lua-5.2.3/src/lapi.c"
 var $9=$1; //@line 131 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+12)|0); //@line 131 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 131 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+168)|0); //@line 131 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($12)>>2)]=$8; //@line 131 "lib/lua-5.2.3/src/lapi.c"
 var $13=$old; //@line 133 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $13; //@line 133 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_version($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$L;
 var $3=$2; //@line 139 "lib/lua-5.2.3/src/lapi.c"
 var $4=($3|0)==0; //@line 139 "lib/lua-5.2.3/src/lapi.c"
 if($4){label=2;break;}else{label=3;break;} //@line 139 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 $1=1064; //@line 139 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 139 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $7=$2; //@line 140 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+12)|0); //@line 140 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 140 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+176)|0); //@line 140 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 140 "lib/lua-5.2.3/src/lapi.c"
 $1=$11; //@line 140 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 140 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $13=$1; //@line 141 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $13; //@line 141 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_absindex($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$idx;
 var $3=$2; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $4=($3|0)>0; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 if($4){label=3;break;}else{label=2;break;} //@line 154 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $6=$2; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0)<=-1001000; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 if($7){label=3;break;}else{label=4;break;} //@line 154 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $9=$2; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $26=$9;label=5;break; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $11=$1; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+8)|0); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $13=HEAP32[(($12)>>2)]; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $14=$1; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+16)|0); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $16=HEAP32[(($15)>>2)]; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16)|0); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $19=$13; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $20=$18; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $21=((($19)-($20))|0); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $22=(((($21|0))/(16))&-1); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $23=$2; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $24=((($22)+($23))|0); //@line 154 "lib/lua-5.2.3/src/lapi.c"
 var $26=$24;label=5;break; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $26; //@line 154 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $26; //@line 154 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_gettop($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $3=(($2+8)|0); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $4=HEAP32[(($3)>>2)]; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $5=$1; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+16)|0); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7)|0); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+16)|0); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $11=$4; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $12=$10; //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $13=((($11)-($12))|0); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 var $14=(((($13|0))/(16))&-1); //@line 161 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $14; //@line 161 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_settop($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $func;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 166 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+16)|0); //@line 166 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 166 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5)|0); //@line 166 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 166 "lib/lua-5.2.3/src/lapi.c"
 $func=$7; //@line 166 "lib/lua-5.2.3/src/lapi.c"
 var $8=$2; //@line 168 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8|0)>=0; //@line 168 "lib/lua-5.2.3/src/lapi.c"
 if($9){label=2;break;}else{label=6;break;} //@line 168 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 label=3;break; //@line 170 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $12=$1; //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12+8)|0); //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $15=$func; //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+16)|0); //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $17=$2; //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($16+($17<<4))|0); //@line 170 "lib/lua-5.2.3/src/lapi.c"
 var $19=($14>>>0)<($18>>>0); //@line 170 "lib/lua-5.2.3/src/lapi.c"
 if($19){label=4;break;}else{label=5;break;} //@line 170 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $21=$1; //@line 171 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+8)|0); //@line 171 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 171 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+16)|0); //@line 171 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($22)>>2)]=$24; //@line 171 "lib/lua-5.2.3/src/lapi.c"
 var $25=(($23+8)|0); //@line 171 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($25)>>2)]=0; //@line 171 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 171 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $27=$func; //@line 172 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+16)|0); //@line 172 "lib/lua-5.2.3/src/lapi.c"
 var $29=$2; //@line 172 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($28+($29<<4))|0); //@line 172 "lib/lua-5.2.3/src/lapi.c"
 var $31=$1; //@line 172 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+8)|0); //@line 172 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($32)>>2)]=$30; //@line 172 "lib/lua-5.2.3/src/lapi.c"
 label=7;break; //@line 173 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $34=$2; //@line 176 "lib/lua-5.2.3/src/lapi.c"
 var $35=((($34)+(1))|0); //@line 176 "lib/lua-5.2.3/src/lapi.c"
 var $36=$1; //@line 176 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+8)|0); //@line 176 "lib/lua-5.2.3/src/lapi.c"
 var $38=HEAP32[(($37)>>2)]; //@line 176 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38+($35<<4))|0); //@line 176 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($37)>>2)]=$39; //@line 176 "lib/lua-5.2.3/src/lapi.c"
 label=7;break;
 case 7: 
 STACKTOP=sp;return; //@line 179 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_remove($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $p;
 var $io2;
 var $io1;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 185 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 185 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 185 "lib/lua-5.2.3/src/lapi.c"
 $p=$5; //@line 185 "lib/lua-5.2.3/src/lapi.c"
 label=2;break; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $7=$p; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+16)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 $p=$8; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $9=$1; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+8)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $12=($8>>>0)<($11>>>0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 if($12){label=3;break;}else{label=4;break;} //@line 187 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $14=$p; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 $io2=$14; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $15=$p; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $16=((($15)-(16))|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 $io1=$16; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $17=$io1; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $19=$io2; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $21=$18; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $22=$20; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($21)>>2)]=HEAP32[(($22)>>2)];HEAP32[((($21)+(4))>>2)]=HEAP32[((($22)+(4))>>2)]; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io2; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $26=$io1; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+8)|0); //@line 187 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($27)>>2)]=$25; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 label=2;break; //@line 187 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $29=$1; //@line 188 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+8)|0); //@line 188 "lib/lua-5.2.3/src/lapi.c"
 var $31=HEAP32[(($30)>>2)]; //@line 188 "lib/lua-5.2.3/src/lapi.c"
 var $32=((($31)-(16))|0); //@line 188 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($30)>>2)]=$32; //@line 188 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 190 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _index2addr($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ci;
 var $o;
 var $func;
 $2=$L;
 $3=$idx;
 var $4=$2; //@line 56 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+16)|0); //@line 56 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 56 "lib/lua-5.2.3/src/lapi.c"
 $ci=$6; //@line 56 "lib/lua-5.2.3/src/lapi.c"
 var $7=$3; //@line 57 "lib/lua-5.2.3/src/lapi.c"
 var $8=($7|0)>0; //@line 57 "lib/lua-5.2.3/src/lapi.c"
 if($8){label=2;break;}else{label=5;break;} //@line 57 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $10=$ci; //@line 58 "lib/lua-5.2.3/src/lapi.c"
 var $11=(($10)|0); //@line 58 "lib/lua-5.2.3/src/lapi.c"
 var $12=HEAP32[(($11)>>2)]; //@line 58 "lib/lua-5.2.3/src/lapi.c"
 var $13=$3; //@line 58 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($12+($13<<4))|0); //@line 58 "lib/lua-5.2.3/src/lapi.c"
 $o=$14; //@line 58 "lib/lua-5.2.3/src/lapi.c"
 var $15=$o; //@line 60 "lib/lua-5.2.3/src/lapi.c"
 var $16=$2; //@line 60 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+8)|0); //@line 60 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 60 "lib/lua-5.2.3/src/lapi.c"
 var $19=($15>>>0)>=($18>>>0); //@line 60 "lib/lua-5.2.3/src/lapi.c"
 if($19){label=3;break;}else{label=4;break;} //@line 60 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 $1=1376; //@line 60 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 60 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $22=$o; //@line 61 "lib/lua-5.2.3/src/lapi.c"
 $1=$22; //@line 61 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 61 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $24=$3; //@line 63 "lib/lua-5.2.3/src/lapi.c"
 var $25=($24|0)<=-1001000; //@line 63 "lib/lua-5.2.3/src/lapi.c"
 if($25){label=7;break;}else{label=6;break;} //@line 63 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $27=$2; //@line 65 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+8)|0); //@line 65 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 65 "lib/lua-5.2.3/src/lapi.c"
 var $30=$3; //@line 65 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($29+($30<<4))|0); //@line 65 "lib/lua-5.2.3/src/lapi.c"
 $1=$31; //@line 65 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 65 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $33=$3; //@line 67 "lib/lua-5.2.3/src/lapi.c"
 var $34=($33|0)==-1001000; //@line 67 "lib/lua-5.2.3/src/lapi.c"
 if($34){label=8;break;}else{label=9;break;} //@line 67 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $36=$2; //@line 68 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+12)|0); //@line 68 "lib/lua-5.2.3/src/lapi.c"
 var $38=HEAP32[(($37)>>2)]; //@line 68 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38+40)|0); //@line 68 "lib/lua-5.2.3/src/lapi.c"
 $1=$39; //@line 68 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 68 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $41=$3; //@line 70 "lib/lua-5.2.3/src/lapi.c"
 var $42=(((-1001000)-($41))|0); //@line 70 "lib/lua-5.2.3/src/lapi.c"
 $3=$42; //@line 70 "lib/lua-5.2.3/src/lapi.c"
 var $43=$ci; //@line 72 "lib/lua-5.2.3/src/lapi.c"
 var $44=(($43)|0); //@line 72 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 72 "lib/lua-5.2.3/src/lapi.c"
 var $46=(($45+8)|0); //@line 72 "lib/lua-5.2.3/src/lapi.c"
 var $47=HEAP32[(($46)>>2)]; //@line 72 "lib/lua-5.2.3/src/lapi.c"
 var $48=($47|0)==22; //@line 72 "lib/lua-5.2.3/src/lapi.c"
 if($48){label=10;break;}else{label=11;break;} //@line 72 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 $1=1376; //@line 73 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 73 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $51=$ci; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $52=(($51)|0); //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $53=HEAP32[(($52)>>2)]; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $54=(($53)|0); //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $55=$54; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $56=HEAP32[(($55)>>2)]; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $57=$56; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $58=$57; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 $func=$58; //@line 75 "lib/lua-5.2.3/src/lapi.c"
 var $59=$3; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $60=$func; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $61=(($60+6)|0); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $62=HEAP8[($61)]; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $63=($62&255); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $64=($59|0)<=($63|0); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 if($64){label=12;break;}else{label=13;break;} //@line 76 "lib/lua-5.2.3/src/lapi.c"
 case 12: 
 var $66=$3; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $67=((($66)-(1))|0); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $68=$func; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $69=(($68+16)|0); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $70=(($69+($67<<4))|0); //@line 76 "lib/lua-5.2.3/src/lapi.c"
 var $73=$70;label=14;break; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 case 13: 
 var $73=1376;label=14;break; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 case 14: 
 var $73; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 $1=$73; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 76 "lib/lua-5.2.3/src/lapi.c"
 case 15: 
 var $75=$1; //@line 79 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $75; //@line 79 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_insert($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $p;
 var $q;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 197 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 197 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 197 "lib/lua-5.2.3/src/lapi.c"
 $p=$5; //@line 197 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 199 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 $q=$8; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 label=2;break; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $10=$q; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 var $11=$p; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 var $12=($10>>>0)>($11>>>0); //@line 199 "lib/lua-5.2.3/src/lapi.c"
 if($12){label=3;break;}else{label=5;break;} //@line 199 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $14=$q; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $15=((($14)-(16))|0); //@line 200 "lib/lua-5.2.3/src/lapi.c"
 $io2=$15; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $16=$q; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 $io1=$16; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $17=$io1; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17)|0); //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $19=$io2; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19)|0); //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $21=$18; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $22=$20; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($21)>>2)]=HEAP32[(($22)>>2)];HEAP32[((($21)+(4))>>2)]=HEAP32[((($22)+(4))>>2)]; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io2; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $26=$io1; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+8)|0); //@line 200 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($27)>>2)]=$25; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 200 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $29=$q; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 var $30=((($29)-(16))|0); //@line 199 "lib/lua-5.2.3/src/lapi.c"
 $q=$30; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 label=2;break; //@line 199 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $32=$1; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+8)|0); //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $34=HEAP32[(($33)>>2)]; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 $io21=$34; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $35=$p; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 $io12=$35; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $36=$io12; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36)|0); //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $38=$io21; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38)|0); //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $40=$37; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $41=$39; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($40)>>2)]=HEAP32[(($41)>>2)];HEAP32[((($40)+(4))>>2)]=HEAP32[((($41)+(4))>>2)]; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $42=$io21; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42+8)|0); //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $44=HEAP32[(($43)>>2)]; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $45=$io12; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 var $46=(($45+8)|0); //@line 201 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($46)>>2)]=$44; //@line 201 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 203 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_replace($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $4=$1; //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+8)|0); //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $7=((($6)-(16))|0); //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $8=$2; //@line 220 "lib/lua-5.2.3/src/lapi.c"
 _moveto($3,$7,$8); //@line 220 "lib/lua-5.2.3/src/lapi.c"
 var $9=$1; //@line 221 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+8)|0); //@line 221 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 221 "lib/lua-5.2.3/src/lapi.c"
 var $12=((($11)-(16))|0); //@line 221 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($10)>>2)]=$12; //@line 221 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 223 "lib/lua-5.2.3/src/lapi.c"
}


function _moveto($L,$fr,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $to;
 var $io2;
 var $io1;
 $1=$L;
 $2=$fr;
 $3=$idx;
 var $4=$1; //@line 207 "lib/lua-5.2.3/src/lapi.c"
 var $5=$3; //@line 207 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 207 "lib/lua-5.2.3/src/lapi.c"
 $to=$6; //@line 207 "lib/lua-5.2.3/src/lapi.c"
 var $7=$2; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 $io2=$7; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $8=$to; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 $io1=$8; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $9=$io1; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9)|0); //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $11=$io2; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $13=$10; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $14=$12; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($13)>>2)]=HEAP32[(($14)>>2)];HEAP32[((($13)+(4))>>2)]=HEAP32[((($14)+(4))>>2)]; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $15=$io2; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $18=$io1; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18+8)|0); //@line 209 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($19)>>2)]=$17; //@line 209 "lib/lua-5.2.3/src/lapi.c"
 var $20=$3; //@line 210 "lib/lua-5.2.3/src/lapi.c"
 var $21=($20|0)<-1001000; //@line 210 "lib/lua-5.2.3/src/lapi.c"
 if($21){label=2;break;}else{label=7;break;} //@line 210 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $23=$2; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $26=$25&64; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $27=($26|0)!=0; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 if($27){label=3;break;}else{label=6;break;} //@line 211 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $29=$2; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $32=HEAP32[(($31)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $33=$32; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $34=(($33+5)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $35=HEAP8[($34)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $36=($35&255); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $37=$36&3; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $38=($37|0)!=0; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 if($38){label=4;break;}else{label=6;break;} //@line 211 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $40=$1; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $41=(($40+16)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $42=HEAP32[(($41)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $44=HEAP32[(($43)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $45=(($44)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $46=$45; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $47=HEAP32[(($46)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $48=$47; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $49=$48; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $50=$49; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $51=$50; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $52=(($51+5)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $53=HEAP8[($52)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $54=($53&255); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $55=$54&4; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $56=($55|0)!=0; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 if($56){label=5;break;}else{label=6;break;} //@line 211 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $58=$1; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $59=$1; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $60=(($59+16)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $61=HEAP32[(($60)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $62=(($61)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $63=HEAP32[(($62)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $64=(($63)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $65=$64; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $66=HEAP32[(($65)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $67=$66; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $68=$67; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $69=$68; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $70=$2; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $71=(($70)|0); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $72=$71; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 var $73=HEAP32[(($72)>>2)]; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrier_($58,$69,$73); //@line 211 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 label=7;break; //@line 211 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 STACKTOP=sp;return; //@line 214 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_copy($L,$fromidx,$toidx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $fr;
 $1=$L;
 $2=$fromidx;
 $3=$toidx;
 var $4=$1; //@line 229 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 229 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 229 "lib/lua-5.2.3/src/lapi.c"
 $fr=$6; //@line 229 "lib/lua-5.2.3/src/lapi.c"
 var $7=$1; //@line 230 "lib/lua-5.2.3/src/lapi.c"
 var $8=$fr; //@line 230 "lib/lua-5.2.3/src/lapi.c"
 var $9=$3; //@line 230 "lib/lua-5.2.3/src/lapi.c"
 _moveto($7,$8,$9); //@line 230 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 232 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_pushvalue($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $io2;
 var $io1;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 $io2=$5; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 $io1=$8; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $9=$io1; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9)|0); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $11=$io2; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $13=$10; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $14=$12; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($13)>>2)]=HEAP32[(($14)>>2)];HEAP32[((($13)+(4))>>2)]=HEAP32[((($14)+(4))>>2)]; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $15=$io2; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $18=$io1; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18+8)|0); //@line 237 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($19)>>2)]=$17; //@line 237 "lib/lua-5.2.3/src/lapi.c"
 var $20=$1; //@line 238 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20+8)|0); //@line 238 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 238 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22+16)|0); //@line 238 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($21)>>2)]=$23; //@line 238 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 240 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_type($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $o;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 250 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 250 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 250 "lib/lua-5.2.3/src/lapi.c"
 $o=$5; //@line 250 "lib/lua-5.2.3/src/lapi.c"
 var $6=$o; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0)!=1376; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 if($7){label=2;break;}else{label=3;break;} //@line 251 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $9=$o; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+8)|0); //@line 251 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 var $12=$11&15; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 var $15=$12;label=4;break; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $15=-1;label=4;break; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $15; //@line 251 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $15; //@line 251 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_typename($L,$t){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$t;
 var $3=$1; //@line 256 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 257 "lib/lua-5.2.3/src/lapi.c"
 var $5=((($4)+(1))|0); //@line 257 "lib/lua-5.2.3/src/lapi.c"
 var $6=((1216+($5<<2))|0); //@line 257 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 257 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $7; //@line 257 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_isstring($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $t;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 275 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 275 "lib/lua-5.2.3/src/lapi.c"
 var $5=_lua_type($3,$4); //@line 275 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 275 "lib/lua-5.2.3/src/lapi.c"
 var $6=$t; //@line 276 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0)==4; //@line 276 "lib/lua-5.2.3/src/lapi.c"
 if($7){var $12=1;label=3;break;}else{label=2;break;} //@line 276 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $9=$t; //@line 276 "lib/lua-5.2.3/src/lapi.c"
 var $10=($9|0)==3; //@line 276 "lib/lua-5.2.3/src/lapi.c"
 var $12=$10;label=3;break; //@line 276 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $12;
 var $13=($12&1); //@line 276 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $13; //@line 276 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_rawequal($L,$index1,$index2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $o1;
 var $o2;
 $1=$L;
 $2=$index1;
 $3=$index2;
 var $4=$1; //@line 287 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 287 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 287 "lib/lua-5.2.3/src/lapi.c"
 $o1=$6; //@line 287 "lib/lua-5.2.3/src/lapi.c"
 var $7=$1; //@line 288 "lib/lua-5.2.3/src/lapi.c"
 var $8=$3; //@line 288 "lib/lua-5.2.3/src/lapi.c"
 var $9=_index2addr($7,$8); //@line 288 "lib/lua-5.2.3/src/lapi.c"
 $o2=$9; //@line 288 "lib/lua-5.2.3/src/lapi.c"
 var $10=$o1; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)!=1376; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=2;break;}else{label=6;break;} //@line 289 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$o2; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $14=($13|0)!=1376; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 if($14){label=3;break;}else{label=6;break;} //@line 289 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $16=$o1; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+8)|0); //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $19=$o2; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19+8)|0); //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $21=HEAP32[(($20)>>2)]; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $22=($18|0)==($21|0); //@line 289 "lib/lua-5.2.3/src/lapi.c"
 if($22){label=4;break;}else{var $29=0;label=5;break;} //@line 289 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $24=$o1; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $25=$o2; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $26=_luaV_equalobj_(0,$24,$25); //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $27=($26|0)!=0; //@line 289 "lib/lua-5.2.3/src/lapi.c"
 var $29=$27;label=5;break;
 case 5: 
 var $29;
 var $30=($29&1);
 var $33=$30;label=7;break;
 case 6: 
 var $33=0;label=7;break;
 case 7: 
 var $33;
 STACKTOP=sp;return $33; //@line 290 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_compare($L,$index1,$index2,$op){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $o1;
 var $o2;
 var $i;
 $1=$L;
 $2=$index1;
 $3=$index2;
 $4=$op;
 $i=0; //@line 318 "lib/lua-5.2.3/src/lapi.c"
 var $5=$1; //@line 320 "lib/lua-5.2.3/src/lapi.c"
 var $6=$2; //@line 320 "lib/lua-5.2.3/src/lapi.c"
 var $7=_index2addr($5,$6); //@line 320 "lib/lua-5.2.3/src/lapi.c"
 $o1=$7; //@line 320 "lib/lua-5.2.3/src/lapi.c"
 var $8=$1; //@line 321 "lib/lua-5.2.3/src/lapi.c"
 var $9=$3; //@line 321 "lib/lua-5.2.3/src/lapi.c"
 var $10=_index2addr($8,$9); //@line 321 "lib/lua-5.2.3/src/lapi.c"
 $o2=$10; //@line 321 "lib/lua-5.2.3/src/lapi.c"
 var $11=$o1; //@line 322 "lib/lua-5.2.3/src/lapi.c"
 var $12=($11|0)!=1376; //@line 322 "lib/lua-5.2.3/src/lapi.c"
 if($12){label=2;break;}else{label=11;break;} //@line 322 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $14=$o2; //@line 322 "lib/lua-5.2.3/src/lapi.c"
 var $15=($14|0)!=1376; //@line 322 "lib/lua-5.2.3/src/lapi.c"
 if($15){label=3;break;}else{label=11;break;} //@line 322 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $17=$4; //@line 323 "lib/lua-5.2.3/src/lapi.c"
 if(($17|0)==0){ label=4;break;}else if(($17|0)==1){ label=7;break;}else if(($17|0)==2){ label=8;break;}else{label=9;break;}
 case 4: 
 var $19=$o1; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19+8)|0); //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $21=HEAP32[(($20)>>2)]; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $22=$o2; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22+8)|0); //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $24=HEAP32[(($23)>>2)]; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $25=($21|0)==($24|0); //@line 324 "lib/lua-5.2.3/src/lapi.c"
 if($25){label=5;break;}else{var $33=0;label=6;break;} //@line 324 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $27=$1; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $28=$o1; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $29=$o2; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $30=_luaV_equalobj_($27,$28,$29); //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $31=($30|0)!=0; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 var $33=$31;label=6;break;
 case 6: 
 var $33;
 var $34=($33&1);
 $i=$34;
 label=10;break; //@line 324 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $36=$1; //@line 325 "lib/lua-5.2.3/src/lapi.c"
 var $37=$o1; //@line 325 "lib/lua-5.2.3/src/lapi.c"
 var $38=$o2; //@line 325 "lib/lua-5.2.3/src/lapi.c"
 var $39=_luaV_lessthan($36,$37,$38); //@line 325 "lib/lua-5.2.3/src/lapi.c"
 $i=$39; //@line 325 "lib/lua-5.2.3/src/lapi.c"
 label=10;break; //@line 325 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $41=$1; //@line 326 "lib/lua-5.2.3/src/lapi.c"
 var $42=$o1; //@line 326 "lib/lua-5.2.3/src/lapi.c"
 var $43=$o2; //@line 326 "lib/lua-5.2.3/src/lapi.c"
 var $44=_luaV_lessequal($41,$42,$43); //@line 326 "lib/lua-5.2.3/src/lapi.c"
 $i=$44; //@line 326 "lib/lua-5.2.3/src/lapi.c"
 label=10;break; //@line 326 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 label=10;break; //@line 328 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 label=11;break; //@line 329 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $48=$i; //@line 331 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $48; //@line 331 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_tonumberx($L,$idx,$isnum){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $n=sp;
 var $o;
 $2=$L;
 $3=$idx;
 $4=$isnum;
 var $5=$2; //@line 337 "lib/lua-5.2.3/src/lapi.c"
 var $6=$3; //@line 337 "lib/lua-5.2.3/src/lapi.c"
 var $7=_index2addr($5,$6); //@line 337 "lib/lua-5.2.3/src/lapi.c"
 $o=$7; //@line 337 "lib/lua-5.2.3/src/lapi.c"
 var $8=$o; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 338 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)==3; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=3;break;}else{label=2;break;} //@line 338 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$o; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 var $14=_luaV_tonumber($13,$n); //@line 338 "lib/lua-5.2.3/src/lapi.c"
 $o=$14; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 var $15=($14|0)!=0; //@line 338 "lib/lua-5.2.3/src/lapi.c"
 if($15){label=3;break;}else{label=6;break;} //@line 338 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $17=$4; //@line 339 "lib/lua-5.2.3/src/lapi.c"
 var $18=($17|0)!=0; //@line 339 "lib/lua-5.2.3/src/lapi.c"
 if($18){label=4;break;}else{label=5;break;} //@line 339 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $20=$4; //@line 339 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($20)>>2)]=1; //@line 339 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 339 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $22=$o; //@line 340 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22)|0); //@line 340 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23; //@line 340 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAPF64[(($24)>>3)]; //@line 340 "lib/lua-5.2.3/src/lapi.c"
 $1=$25; //@line 340 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 340 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $27=$4; //@line 343 "lib/lua-5.2.3/src/lapi.c"
 var $28=($27|0)!=0; //@line 343 "lib/lua-5.2.3/src/lapi.c"
 if($28){label=7;break;}else{label=8;break;} //@line 343 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $30=$4; //@line 343 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($30)>>2)]=0; //@line 343 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 343 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 $1=0; //@line 344 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 344 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $33=$1; //@line 346 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $33; //@line 346 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_tointegerx($L,$idx,$isnum){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $n=sp;
 var $o;
 var $res;
 var $num;
 $2=$L;
 $3=$idx;
 $4=$isnum;
 var $5=$2; //@line 351 "lib/lua-5.2.3/src/lapi.c"
 var $6=$3; //@line 351 "lib/lua-5.2.3/src/lapi.c"
 var $7=_index2addr($5,$6); //@line 351 "lib/lua-5.2.3/src/lapi.c"
 $o=$7; //@line 351 "lib/lua-5.2.3/src/lapi.c"
 var $8=$o; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 352 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)==3; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=3;break;}else{label=2;break;} //@line 352 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$o; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 var $14=_luaV_tonumber($13,$n); //@line 352 "lib/lua-5.2.3/src/lapi.c"
 $o=$14; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 var $15=($14|0)!=0; //@line 352 "lib/lua-5.2.3/src/lapi.c"
 if($15){label=3;break;}else{label=6;break;} //@line 352 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $17=$o; //@line 354 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17)|0); //@line 354 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 354 "lib/lua-5.2.3/src/lapi.c"
 var $20=HEAPF64[(($19)>>3)]; //@line 354 "lib/lua-5.2.3/src/lapi.c"
 $num=$20; //@line 354 "lib/lua-5.2.3/src/lapi.c"
 var $21=$num; //@line 355 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21)&-1); //@line 355 "lib/lua-5.2.3/src/lapi.c"
 $res=$22; //@line 355 "lib/lua-5.2.3/src/lapi.c"
 var $23=$4; //@line 356 "lib/lua-5.2.3/src/lapi.c"
 var $24=($23|0)!=0; //@line 356 "lib/lua-5.2.3/src/lapi.c"
 if($24){label=4;break;}else{label=5;break;} //@line 356 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $26=$4; //@line 356 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($26)>>2)]=1; //@line 356 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 356 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $28=$res; //@line 357 "lib/lua-5.2.3/src/lapi.c"
 $1=$28; //@line 357 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 357 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $30=$4; //@line 360 "lib/lua-5.2.3/src/lapi.c"
 var $31=($30|0)!=0; //@line 360 "lib/lua-5.2.3/src/lapi.c"
 if($31){label=7;break;}else{label=8;break;} //@line 360 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $33=$4; //@line 360 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($33)>>2)]=0; //@line 360 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 360 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 $1=0; //@line 361 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 361 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $36=$1; //@line 363 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $36; //@line 363 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_tounsignedx($L,$idx,$isnum){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $n=sp;
 var $o;
 var $res;
 var $num;
 var $u=(sp)+(16);
 $2=$L;
 $3=$idx;
 $4=$isnum;
 var $5=$2; //@line 368 "lib/lua-5.2.3/src/lapi.c"
 var $6=$3; //@line 368 "lib/lua-5.2.3/src/lapi.c"
 var $7=_index2addr($5,$6); //@line 368 "lib/lua-5.2.3/src/lapi.c"
 $o=$7; //@line 368 "lib/lua-5.2.3/src/lapi.c"
 var $8=$o; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 369 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)==3; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=3;break;}else{label=2;break;} //@line 369 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$o; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 var $14=_luaV_tonumber($13,$n); //@line 369 "lib/lua-5.2.3/src/lapi.c"
 $o=$14; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 var $15=($14|0)!=0; //@line 369 "lib/lua-5.2.3/src/lapi.c"
 if($15){label=3;break;}else{label=6;break;} //@line 369 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $17=$o; //@line 371 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17)|0); //@line 371 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 371 "lib/lua-5.2.3/src/lapi.c"
 var $20=HEAPF64[(($19)>>3)]; //@line 371 "lib/lua-5.2.3/src/lapi.c"
 $num=$20; //@line 371 "lib/lua-5.2.3/src/lapi.c"
 var $21=$num; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $22=($21)+(6755399441055744); //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $23=$u; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 HEAPF64[(($23)>>3)]=$22; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $24=HEAP32[((1076)>>2)]; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $25=($24|0)==33; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $26=($25&1); //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $27=$u; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+($26<<2))|0); //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 $res=$29; //@line 372 "lib/lua-5.2.3/src/lapi.c"
 var $30=$4; //@line 373 "lib/lua-5.2.3/src/lapi.c"
 var $31=($30|0)!=0; //@line 373 "lib/lua-5.2.3/src/lapi.c"
 if($31){label=4;break;}else{label=5;break;} //@line 373 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $33=$4; //@line 373 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($33)>>2)]=1; //@line 373 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 373 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $35=$res; //@line 374 "lib/lua-5.2.3/src/lapi.c"
 $1=$35; //@line 374 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 374 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $37=$4; //@line 377 "lib/lua-5.2.3/src/lapi.c"
 var $38=($37|0)!=0; //@line 377 "lib/lua-5.2.3/src/lapi.c"
 if($38){label=7;break;}else{label=8;break;} //@line 377 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $40=$4; //@line 377 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($40)>>2)]=0; //@line 377 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 377 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 $1=0; //@line 378 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 378 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $43=$1; //@line 380 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $43; //@line 380 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_toboolean($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $o;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 384 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 384 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 384 "lib/lua-5.2.3/src/lapi.c"
 $o=$5; //@line 384 "lib/lua-5.2.3/src/lapi.c"
 var $6=$o; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8|0)==0; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 if($9){var $24=1;label=5;break;}else{label=2;break;} //@line 385 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $11=$o; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+8)|0); //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $13=HEAP32[(($12)>>2)]; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $14=($13|0)==1; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 if($14){label=3;break;}else{var $22=0;label=4;break;} //@line 385 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $16=$o; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16)|0); //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $18=$17; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $19=HEAP32[(($18)>>2)]; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $20=($19|0)==0; //@line 385 "lib/lua-5.2.3/src/lapi.c"
 var $22=$20;label=4;break;
 case 4: 
 var $22;
 var $24=$22;label=5;break;
 case 5: 
 var $24;
 var $25=$24^1;
 var $26=($25&1);
 STACKTOP=sp;return $26; //@line 386 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_tolstring($L,$idx,$len){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $o;
 $2=$L;
 $3=$idx;
 $4=$len;
 var $5=$2; //@line 390 "lib/lua-5.2.3/src/lapi.c"
 var $6=$3; //@line 390 "lib/lua-5.2.3/src/lapi.c"
 var $7=_index2addr($5,$6); //@line 390 "lib/lua-5.2.3/src/lapi.c"
 $o=$7; //@line 390 "lib/lua-5.2.3/src/lapi.c"
 var $8=$o; //@line 391 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 391 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 391 "lib/lua-5.2.3/src/lapi.c"
 var $11=$10&15; //@line 391 "lib/lua-5.2.3/src/lapi.c"
 var $12=($11|0)==4; //@line 391 "lib/lua-5.2.3/src/lapi.c"
 if($12){label=9;break;}else{label=2;break;} //@line 391 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $14=$2; //@line 393 "lib/lua-5.2.3/src/lapi.c"
 var $15=$o; //@line 393 "lib/lua-5.2.3/src/lapi.c"
 var $16=_luaV_tostring($14,$15); //@line 393 "lib/lua-5.2.3/src/lapi.c"
 var $17=($16|0)!=0; //@line 393 "lib/lua-5.2.3/src/lapi.c"
 if($17){label=6;break;}else{label=3;break;} //@line 393 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $19=$4; //@line 394 "lib/lua-5.2.3/src/lapi.c"
 var $20=($19|0)!=0; //@line 394 "lib/lua-5.2.3/src/lapi.c"
 if($20){label=4;break;}else{label=5;break;} //@line 394 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $22=$4; //@line 394 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($22)>>2)]=0; //@line 394 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 394 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 $1=0; //@line 396 "lib/lua-5.2.3/src/lapi.c"
 label=12;break; //@line 396 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $25=$2; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+12)|0); //@line 398 "lib/lua-5.2.3/src/lapi.c"
 var $27=HEAP32[(($26)>>2)]; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+12)|0); //@line 398 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 var $30=($29|0)>0; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 if($30){label=7;break;}else{label=8;break;} //@line 398 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $32=$2; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($32); //@line 398 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 398 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $34=$2; //@line 399 "lib/lua-5.2.3/src/lapi.c"
 var $35=$3; //@line 399 "lib/lua-5.2.3/src/lapi.c"
 var $36=_index2addr($34,$35); //@line 399 "lib/lua-5.2.3/src/lapi.c"
 $o=$36; //@line 399 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 401 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $38=$4; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $39=($38|0)!=0; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 if($39){label=10;break;}else{label=11;break;} //@line 402 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 var $41=$o; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($41)|0); //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $43=$42; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $44=HEAP32[(($43)>>2)]; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $45=$44; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $46=$45; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $47=(($46+12)|0); //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $48=HEAP32[(($47)>>2)]; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 var $49=$4; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($49)>>2)]=$48; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 label=11;break; //@line 402 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $51=$o; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $52=(($51)|0); //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $53=$52; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $54=HEAP32[(($53)>>2)]; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $55=$54; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $56=(($55+16)|0); //@line 403 "lib/lua-5.2.3/src/lapi.c"
 var $57=$56; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 $1=$57; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 label=12;break; //@line 403 "lib/lua-5.2.3/src/lapi.c"
 case 12: 
 var $59=$1; //@line 404 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $59; //@line 404 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_rawlen($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $o;
 $2=$L;
 $3=$idx;
 var $4=$2; //@line 408 "lib/lua-5.2.3/src/lapi.c"
 var $5=$3; //@line 408 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 408 "lib/lua-5.2.3/src/lapi.c"
 $o=$6; //@line 408 "lib/lua-5.2.3/src/lapi.c"
 var $7=$o; //@line 409 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 409 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 409 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9&15; //@line 409 "lib/lua-5.2.3/src/lapi.c"
 if(($10|0)==4){ label=2;break;}else if(($10|0)==7){ label=3;break;}else if(($10|0)==5){ label=4;break;}else{label=5;break;}
 case 2: 
 var $12=$o; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12)|0); //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $14=$13; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $16=$15; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $17=$16; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17+12)|0); //@line 410 "lib/lua-5.2.3/src/lapi.c"
 var $19=HEAP32[(($18)>>2)]; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 $1=$19; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 410 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $21=$o; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21)|0); //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $23=$22; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $24=HEAP32[(($23)>>2)]; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $25=$24; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $26=$25; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+16)|0); //@line 411 "lib/lua-5.2.3/src/lapi.c"
 var $28=HEAP32[(($27)>>2)]; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 $1=$28; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 411 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $30=$o; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30)|0); //@line 412 "lib/lua-5.2.3/src/lapi.c"
 var $32=$31; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 var $33=HEAP32[(($32)>>2)]; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 var $35=_luaH_getn($34); //@line 412 "lib/lua-5.2.3/src/lapi.c"
 $1=$35; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 412 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 $1=0; //@line 413 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 413 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $38=$1; //@line 415 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $38; //@line 415 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_touserdata($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $o;
 $2=$L;
 $3=$idx;
 var $4=$2; //@line 428 "lib/lua-5.2.3/src/lapi.c"
 var $5=$3; //@line 428 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 428 "lib/lua-5.2.3/src/lapi.c"
 $o=$6; //@line 428 "lib/lua-5.2.3/src/lapi.c"
 var $7=$o; //@line 429 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 429 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 429 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9&15; //@line 429 "lib/lua-5.2.3/src/lapi.c"
 if(($10|0)==7){ label=2;break;}else if(($10|0)==2){ label=3;break;}else{label=4;break;}
 case 2: 
 var $12=$o; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12)|0); //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $14=$13; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $16=$15; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+24)|0); //@line 430 "lib/lua-5.2.3/src/lapi.c"
 var $18=$17; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 $1=$18; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 430 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $20=$o; //@line 431 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20)|0); //@line 431 "lib/lua-5.2.3/src/lapi.c"
 var $22=$21; //@line 431 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 431 "lib/lua-5.2.3/src/lapi.c"
 $1=$23; //@line 431 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 431 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 $1=0; //@line 432 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 432 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $26=$1; //@line 434 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $26; //@line 434 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_topointer($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $o;
 $2=$L;
 $3=$idx;
 var $4=$2; //@line 444 "lib/lua-5.2.3/src/lapi.c"
 var $5=$3; //@line 444 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 444 "lib/lua-5.2.3/src/lapi.c"
 $o=$6; //@line 444 "lib/lua-5.2.3/src/lapi.c"
 var $7=$o; //@line 445 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 445 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 445 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9&63; //@line 445 "lib/lua-5.2.3/src/lapi.c"
 switch(($10|0)){case 5:{ label=2;break;}case 6:{ label=3;break;}case 38:{ label=4;break;}case 22:{ label=5;break;}case 8:{ label=6;break;}case 7:case 2:{ label=7;break;}default:{label=8;break;}}break;
 case 2: 
 var $12=$o; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12)|0); //@line 446 "lib/lua-5.2.3/src/lapi.c"
 var $14=$13; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 var $16=$15; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 var $17=$16; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 $1=$17; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 446 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $19=$o; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19)|0); //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $21=$20; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $23=$22; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 var $25=$24; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 $1=$25; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 447 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $27=$o; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27)|0); //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $29=$28; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $30=HEAP32[(($29)>>2)]; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $32=$31; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 var $33=$32; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 $1=$33; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 448 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $35=$o; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35)|0); //@line 449 "lib/lua-5.2.3/src/lapi.c"
 var $37=$36; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 var $38=HEAP32[(($37)>>2)]; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 var $39=$38; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 var $40=$39; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 $1=$40; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 449 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $42=$o; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42)|0); //@line 450 "lib/lua-5.2.3/src/lapi.c"
 var $44=$43; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 var $46=$45; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 var $47=$46; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 $1=$47; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 450 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $49=$2; //@line 453 "lib/lua-5.2.3/src/lapi.c"
 var $50=$3; //@line 453 "lib/lua-5.2.3/src/lapi.c"
 var $51=_lua_touserdata($49,$50); //@line 453 "lib/lua-5.2.3/src/lapi.c"
 $1=$51; //@line 453 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 453 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 $1=0; //@line 454 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 454 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $54=$1; //@line 456 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $54; //@line 456 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushnil($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 467 "lib/lua-5.2.3/src/lapi.c"
 var $3=(($2+8)|0); //@line 467 "lib/lua-5.2.3/src/lapi.c"
 var $4=HEAP32[(($3)>>2)]; //@line 467 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+8)|0); //@line 467 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($5)>>2)]=0; //@line 467 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 468 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 468 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 468 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+16)|0); //@line 468 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($7)>>2)]=$9; //@line 468 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 470 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_pushnumber($L,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $io;
 $1=$L;
 $2=$n;
 var $3=$1; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+8)|0); //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 $io=$5; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $6=$2; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $7=$io; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7)|0); //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $9=$8; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 HEAPF64[(($9)>>3)]=$6; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $10=$io; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $11=(($10+8)|0); //@line 475 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($11)>>2)]=3; //@line 475 "lib/lua-5.2.3/src/lapi.c"
 var $12=$1; //@line 478 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12+8)|0); //@line 478 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 478 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+16)|0); //@line 478 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($13)>>2)]=$15; //@line 478 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 480 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_pushinteger($L,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $io;
 $1=$L;
 $2=$n;
 var $3=$1; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+8)|0); //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 $io=$5; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $6=$2; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0); //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $8=$io; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8)|0); //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 HEAPF64[(($10)>>3)]=$7; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $11=$io; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+8)|0); //@line 485 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($12)>>2)]=3; //@line 485 "lib/lua-5.2.3/src/lapi.c"
 var $13=$1; //@line 486 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+8)|0); //@line 486 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 486 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+16)|0); //@line 486 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($14)>>2)]=$16; //@line 486 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 488 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_pushlstring($L,$s,$len){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ts;
 var $io;
 var $x_;
 $1=$L;
 $2=$s;
 $3=$len;
 var $4=$1; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+12)|0); //@line 504 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+12)|0); //@line 504 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8|0)>0; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 if($9){label=2;break;}else{label=3;break;} //@line 504 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $11=$1; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($11); //@line 504 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 504 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $13=$1; //@line 505 "lib/lua-5.2.3/src/lapi.c"
 var $14=$2; //@line 505 "lib/lua-5.2.3/src/lapi.c"
 var $15=$3; //@line 505 "lib/lua-5.2.3/src/lapi.c"
 var $16=_luaS_newlstr($13,$14,$15); //@line 505 "lib/lua-5.2.3/src/lapi.c"
 $ts=$16; //@line 505 "lib/lua-5.2.3/src/lapi.c"
 var $17=$1; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17+8)|0); //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $19=HEAP32[(($18)>>2)]; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 $io=$19; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $20=$ts; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 $x_=$20; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $21=$x_; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $22=$21; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23)|0); //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $25=$24; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($25)>>2)]=$22; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $26=$x_; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $27=$26; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+4)|0); //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP8[($28)]; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $30=($29&255); //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30|64; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $32=$io; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+8)|0); //@line 506 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($33)>>2)]=$31; //@line 506 "lib/lua-5.2.3/src/lapi.c"
 var $34=$1; //@line 507 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+8)|0); //@line 507 "lib/lua-5.2.3/src/lapi.c"
 var $36=HEAP32[(($35)>>2)]; //@line 507 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+16)|0); //@line 507 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($35)>>2)]=$37; //@line 507 "lib/lua-5.2.3/src/lapi.c"
 var $38=$ts; //@line 509 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38+16)|0); //@line 509 "lib/lua-5.2.3/src/lapi.c"
 var $40=$39; //@line 509 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $40; //@line 509 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushstring($L,$s){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ts;
 var $io;
 var $x_;
 $2=$L;
 $3=$s;
 var $4=$3; //@line 514 "lib/lua-5.2.3/src/lapi.c"
 var $5=($4|0)==0; //@line 514 "lib/lua-5.2.3/src/lapi.c"
 if($5){label=2;break;}else{label=3;break;} //@line 514 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $7=$2; //@line 515 "lib/lua-5.2.3/src/lapi.c"
 _lua_pushnil($7); //@line 515 "lib/lua-5.2.3/src/lapi.c"
 $1=0; //@line 516 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 516 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $9=$2; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+12)|0); //@line 521 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+12)|0); //@line 521 "lib/lua-5.2.3/src/lapi.c"
 var $13=HEAP32[(($12)>>2)]; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 var $14=($13|0)>0; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 if($14){label=4;break;}else{label=5;break;} //@line 521 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $16=$2; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($16); //@line 521 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 521 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $18=$2; //@line 522 "lib/lua-5.2.3/src/lapi.c"
 var $19=$3; //@line 522 "lib/lua-5.2.3/src/lapi.c"
 var $20=_luaS_new($18,$19); //@line 522 "lib/lua-5.2.3/src/lapi.c"
 $ts=$20; //@line 522 "lib/lua-5.2.3/src/lapi.c"
 var $21=$2; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+8)|0); //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 $io=$23; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $24=$ts; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 $x_=$24; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $25=$x_; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $26=$25; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $27=$io; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27)|0); //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $29=$28; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($29)>>2)]=$26; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $30=$x_; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+4)|0); //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $33=HEAP8[($32)]; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $34=($33&255); //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $35=$34|64; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $36=$io; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+8)|0); //@line 523 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($37)>>2)]=$35; //@line 523 "lib/lua-5.2.3/src/lapi.c"
 var $38=$2; //@line 524 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38+8)|0); //@line 524 "lib/lua-5.2.3/src/lapi.c"
 var $40=HEAP32[(($39)>>2)]; //@line 524 "lib/lua-5.2.3/src/lapi.c"
 var $41=(($40+16)|0); //@line 524 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($39)>>2)]=$41; //@line 524 "lib/lua-5.2.3/src/lapi.c"
 var $42=$ts; //@line 526 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42+16)|0); //@line 526 "lib/lua-5.2.3/src/lapi.c"
 var $44=$43; //@line 526 "lib/lua-5.2.3/src/lapi.c"
 $1=$44; //@line 526 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 526 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $46=$1; //@line 528 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $46; //@line 528 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushvfstring($L,$fmt,$argp){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ret;
 $1=$L;
 $2=$fmt;
 $3=$argp;
 var $4=$1; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+12)|0); //@line 535 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+12)|0); //@line 535 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8|0)>0; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 if($9){label=2;break;}else{label=3;break;} //@line 535 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $11=$1; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($11); //@line 535 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 535 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $13=$1; //@line 536 "lib/lua-5.2.3/src/lapi.c"
 var $14=$2; //@line 536 "lib/lua-5.2.3/src/lapi.c"
 var $15=$3; //@line 536 "lib/lua-5.2.3/src/lapi.c"
 var $16=_luaO_pushvfstring($13,$14,$15); //@line 536 "lib/lua-5.2.3/src/lapi.c"
 $ret=$16; //@line 536 "lib/lua-5.2.3/src/lapi.c"
 var $17=$ret; //@line 538 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $17; //@line 538 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushfstring($L,$fmt,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ret;
 var $argp=sp;
 $1=$L;
 $2=$fmt;
 var $3=$1; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+12)|0); //@line 546 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+12)|0); //@line 546 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 var $8=($7|0)>0; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 if($8){label=2;break;}else{label=3;break;} //@line 546 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $10=$1; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($10); //@line 546 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 546 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $12=(($argp)|0); //@line 547 "lib/lua-5.2.3/src/lapi.c"
 var $13=$12; //@line 547 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($13)>>2)]=varrp;HEAP32[((($13)+(4))>>2)]=0; //@line 547 "lib/lua-5.2.3/src/lapi.c"
 var $14=$1; //@line 548 "lib/lua-5.2.3/src/lapi.c"
 var $15=$2; //@line 548 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($argp)|0); //@line 548 "lib/lua-5.2.3/src/lapi.c"
 var $17=_luaO_pushvfstring($14,$15,$16); //@line 548 "lib/lua-5.2.3/src/lapi.c"
 $ret=$17; //@line 548 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($argp)|0); //@line 549 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 549 "lib/lua-5.2.3/src/lapi.c"
 //@line 549 "lib/lua-5.2.3/src/lapi.c"
 var $20=$ret; //@line 551 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $20; //@line 551 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushcclosure($L,$fn,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $io;
 var $cl;
 var $io2;
 var $io1;
 var $io3;
 $1=$L;
 $2=$fn;
 $3=$n;
 var $4=$3; //@line 557 "lib/lua-5.2.3/src/lapi.c"
 var $5=($4|0)==0; //@line 557 "lib/lua-5.2.3/src/lapi.c"
 if($5){label=2;break;}else{label=3;break;} //@line 557 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $7=$1; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 $io=$9; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $10=$2; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $11=$io; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $13=$12; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($13)>>2)]=$10; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $14=$io; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+8)|0); //@line 558 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($15)>>2)]=22; //@line 558 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 559 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $17=$1; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17+12)|0); //@line 564 "lib/lua-5.2.3/src/lapi.c"
 var $19=HEAP32[(($18)>>2)]; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19+12)|0); //@line 564 "lib/lua-5.2.3/src/lapi.c"
 var $21=HEAP32[(($20)>>2)]; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 var $22=($21|0)>0; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 if($22){label=4;break;}else{label=5;break;} //@line 564 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $24=$1; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($24); //@line 564 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 564 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $26=$1; //@line 565 "lib/lua-5.2.3/src/lapi.c"
 var $27=$3; //@line 565 "lib/lua-5.2.3/src/lapi.c"
 var $28=_luaF_newCclosure($26,$27); //@line 565 "lib/lua-5.2.3/src/lapi.c"
 $cl=$28; //@line 565 "lib/lua-5.2.3/src/lapi.c"
 var $29=$2; //@line 566 "lib/lua-5.2.3/src/lapi.c"
 var $30=$cl; //@line 566 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30; //@line 566 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+12)|0); //@line 566 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($32)>>2)]=$29; //@line 566 "lib/lua-5.2.3/src/lapi.c"
 var $33=$3; //@line 567 "lib/lua-5.2.3/src/lapi.c"
 var $34=$1; //@line 567 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+8)|0); //@line 567 "lib/lua-5.2.3/src/lapi.c"
 var $36=HEAP32[(($35)>>2)]; //@line 567 "lib/lua-5.2.3/src/lapi.c"
 var $37=(((-$33))|0); //@line 567 "lib/lua-5.2.3/src/lapi.c"
 var $38=(($36+($37<<4))|0); //@line 567 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($35)>>2)]=$38; //@line 567 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 568 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $40=$3; //@line 568 "lib/lua-5.2.3/src/lapi.c"
 var $41=((($40)-(1))|0); //@line 568 "lib/lua-5.2.3/src/lapi.c"
 $3=$41; //@line 568 "lib/lua-5.2.3/src/lapi.c"
 var $42=($40|0)!=0; //@line 568 "lib/lua-5.2.3/src/lapi.c"
 if($42){label=7;break;}else{label=8;break;} //@line 568 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $44=$1; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $45=(($44+8)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $46=HEAP32[(($45)>>2)]; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $47=$3; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $48=(($46+($47<<4))|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 $io2=$48; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $49=$3; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $50=$cl; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $51=$50; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $52=(($51+16)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $53=(($52+($49<<4))|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 $io1=$53; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $54=$io1; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $55=(($54)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $56=$io2; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $57=(($56)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $58=$55; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $59=$57; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($58)>>2)]=HEAP32[(($59)>>2)];HEAP32[((($58)+(4))>>2)]=HEAP32[((($59)+(4))>>2)]; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $60=$io2; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $61=(($60+8)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $62=HEAP32[(($61)>>2)]; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $63=$io1; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 var $64=(($63+8)|0); //@line 569 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($64)>>2)]=$62; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 569 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $66=$1; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $67=(($66+8)|0); //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $68=HEAP32[(($67)>>2)]; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 $io3=$68; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $69=$cl; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $70=$69; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $71=$io3; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $72=(($71)|0); //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $73=$72; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($73)>>2)]=$70; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $74=$io3; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 var $75=(($74+8)|0); //@line 570 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($75)>>2)]=102; //@line 570 "lib/lua-5.2.3/src/lapi.c"
 label=9;break;
 case 9: 
 var $77=$1; //@line 572 "lib/lua-5.2.3/src/lapi.c"
 var $78=(($77+8)|0); //@line 572 "lib/lua-5.2.3/src/lapi.c"
 var $79=HEAP32[(($78)>>2)]; //@line 572 "lib/lua-5.2.3/src/lapi.c"
 var $80=(($79+16)|0); //@line 572 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($78)>>2)]=$80; //@line 572 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 574 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pushboolean($L,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $io;
 $1=$L;
 $2=$b;
 var $3=$1; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+8)|0); //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 $io=$5; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $6=$2; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0)!=0; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $8=($7&1); //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $9=$io; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9)|0); //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $11=$10; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($11)>>2)]=$8; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $12=$io; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12+8)|0); //@line 579 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($13)>>2)]=1; //@line 579 "lib/lua-5.2.3/src/lapi.c"
 var $14=$1; //@line 580 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+8)|0); //@line 580 "lib/lua-5.2.3/src/lapi.c"
 var $16=HEAP32[(($15)>>2)]; //@line 580 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+16)|0); //@line 580 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($15)>>2)]=$17; //@line 580 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 582 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_getglobal($L,$var){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $reg;
 var $gt;
 var $io;
 var $x_;
 $1=$L;
 $2=$var;
 var $3=$1; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+12)|0); //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+40)|0); //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6)|0); //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $8=$7; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 $reg=$10; //@line 609 "lib/lua-5.2.3/src/lapi.c"
 var $11=$reg; //@line 612 "lib/lua-5.2.3/src/lapi.c"
 var $12=_luaH_getint($11,2); //@line 612 "lib/lua-5.2.3/src/lapi.c"
 $gt=$12; //@line 612 "lib/lua-5.2.3/src/lapi.c"
 var $13=$1; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+8)|0); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+16)|0); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($14)>>2)]=$16; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 $io=$15; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $17=$1; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $18=$2; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $19=_luaS_new($17,$18); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 $x_=$19; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $20=$x_; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $21=$20; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $22=$io; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22)|0); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($24)>>2)]=$21; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $25=$x_; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $26=$25; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+4)|0); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $28=HEAP8[($27)]; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $29=($28&255); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $30=$29|64; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $31=$io; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+8)|0); //@line 613 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($32)>>2)]=$30; //@line 613 "lib/lua-5.2.3/src/lapi.c"
 var $33=$1; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $34=$gt; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $35=$1; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35+8)|0); //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $37=HEAP32[(($36)>>2)]; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $38=((($37)-(16))|0); //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $39=$1; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $40=(($39+8)|0); //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $41=HEAP32[(($40)>>2)]; //@line 614 "lib/lua-5.2.3/src/lapi.c"
 var $42=((($41)-(16))|0); //@line 614 "lib/lua-5.2.3/src/lapi.c"
 _luaV_gettable($33,$34,$38,$42); //@line 614 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 616 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_gettable($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $t;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 622 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 622 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 622 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 622 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $7=$t; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $8=$1; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $11=((($10)-(16))|0); //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $12=$1; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12+8)|0); //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 623 "lib/lua-5.2.3/src/lapi.c"
 var $15=((($14)-(16))|0); //@line 623 "lib/lua-5.2.3/src/lapi.c"
 _luaV_gettable($6,$7,$11,$15); //@line 623 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 625 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_rawget($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $t;
 var $io2;
 var $io1;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 642 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 642 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 642 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 642 "lib/lua-5.2.3/src/lapi.c"
 var $6=$t; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $8=$7; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $11=$1; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+8)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $13=HEAP32[(($12)>>2)]; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $14=((($13)-(16))|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $15=_luaH_get($10,$14); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 $io2=$15; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $16=$1; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+8)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $19=((($18)-(16))|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 $io1=$19; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $20=$io1; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $22=$io2; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $24=$21; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $25=$23; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($24)>>2)]=HEAP32[(($25)>>2)];HEAP32[((($24)+(4))>>2)]=HEAP32[((($25)+(4))>>2)]; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $26=$io2; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+8)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $28=HEAP32[(($27)>>2)]; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $29=$io1; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+8)|0); //@line 644 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($30)>>2)]=$28; //@line 644 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 646 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_rawgeti($L,$idx,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $t;
 var $io2;
 var $io1;
 $1=$L;
 $2=$idx;
 $3=$n;
 var $4=$1; //@line 652 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 652 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 652 "lib/lua-5.2.3/src/lapi.c"
 $t=$6; //@line 652 "lib/lua-5.2.3/src/lapi.c"
 var $7=$t; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $9=$8; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $11=$10; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $12=$3; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $13=_luaH_getint($11,$12); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 $io2=$13; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $14=$1; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+8)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $16=HEAP32[(($15)>>2)]; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 $io1=$16; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $17=$io1; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $19=$io2; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $21=$18; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $22=$20; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($21)>>2)]=HEAP32[(($22)>>2)];HEAP32[((($21)+(4))>>2)]=HEAP32[((($22)+(4))>>2)]; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io2; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $26=$io1; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+8)|0); //@line 654 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($27)>>2)]=$25; //@line 654 "lib/lua-5.2.3/src/lapi.c"
 var $28=$1; //@line 655 "lib/lua-5.2.3/src/lapi.c"
 var $29=(($28+8)|0); //@line 655 "lib/lua-5.2.3/src/lapi.c"
 var $30=HEAP32[(($29)>>2)]; //@line 655 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+16)|0); //@line 655 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($29)>>2)]=$31; //@line 655 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 657 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_createtable($L,$narray,$nrec){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $t;
 var $io;
 $1=$L;
 $2=$narray;
 $3=$nrec;
 var $4=$1; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+12)|0); //@line 676 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+12)|0); //@line 676 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8|0)>0; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 if($9){label=2;break;}else{label=3;break;} //@line 676 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $11=$1; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($11); //@line 676 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 676 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $13=$1; //@line 677 "lib/lua-5.2.3/src/lapi.c"
 var $14=_luaH_new($13); //@line 677 "lib/lua-5.2.3/src/lapi.c"
 $t=$14; //@line 677 "lib/lua-5.2.3/src/lapi.c"
 var $15=$1; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 $io=$17; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $18=$t; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $20=$io; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20)|0); //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $22=$21; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($22)>>2)]=$19; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 678 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($24)>>2)]=69; //@line 678 "lib/lua-5.2.3/src/lapi.c"
 var $25=$1; //@line 679 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+8)|0); //@line 679 "lib/lua-5.2.3/src/lapi.c"
 var $27=HEAP32[(($26)>>2)]; //@line 679 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+16)|0); //@line 679 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($26)>>2)]=$28; //@line 679 "lib/lua-5.2.3/src/lapi.c"
 var $29=$2; //@line 680 "lib/lua-5.2.3/src/lapi.c"
 var $30=($29|0)>0; //@line 680 "lib/lua-5.2.3/src/lapi.c"
 if($30){label=5;break;}else{label=4;break;} //@line 680 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $32=$3; //@line 680 "lib/lua-5.2.3/src/lapi.c"
 var $33=($32|0)>0; //@line 680 "lib/lua-5.2.3/src/lapi.c"
 if($33){label=5;break;}else{label=6;break;} //@line 680 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $35=$1; //@line 681 "lib/lua-5.2.3/src/lapi.c"
 var $36=$t; //@line 681 "lib/lua-5.2.3/src/lapi.c"
 var $37=$2; //@line 681 "lib/lua-5.2.3/src/lapi.c"
 var $38=$3; //@line 681 "lib/lua-5.2.3/src/lapi.c"
 _luaH_resize($35,$36,$37,$38); //@line 681 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 681 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 STACKTOP=sp;return; //@line 683 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_getmetatable($L,$objindex){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $obj;
 var $mt;
 var $res;
 var $io;
 $1=$L;
 $2=$objindex;
 $mt=0; //@line 688 "lib/lua-5.2.3/src/lapi.c"
 var $3=$1; //@line 691 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 691 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 691 "lib/lua-5.2.3/src/lapi.c"
 $obj=$5; //@line 691 "lib/lua-5.2.3/src/lapi.c"
 var $6=$obj; //@line 692 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 692 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 692 "lib/lua-5.2.3/src/lapi.c"
 var $9=$8&15; //@line 692 "lib/lua-5.2.3/src/lapi.c"
 if(($9|0)==5){ label=2;break;}else if(($9|0)==7){ label=3;break;}else{label=4;break;}
 case 2: 
 var $11=$obj; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $13=$12; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $15=$14; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 694 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 $mt=$17; //@line 694 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 695 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $19=$obj; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19)|0); //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $21=$20; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $23=$22; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $25=(($24+8)|0); //@line 697 "lib/lua-5.2.3/src/lapi.c"
 var $26=HEAP32[(($25)>>2)]; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 $mt=$26; //@line 697 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 698 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $28=$obj; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $29=(($28+8)|0); //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $30=HEAP32[(($29)>>2)]; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30&15; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $32=$1; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+12)|0); //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $34=HEAP32[(($33)>>2)]; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+252)|0); //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35+($31<<2))|0); //@line 700 "lib/lua-5.2.3/src/lapi.c"
 var $37=HEAP32[(($36)>>2)]; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 $mt=$37; //@line 700 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 701 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $39=$mt; //@line 703 "lib/lua-5.2.3/src/lapi.c"
 var $40=($39|0)==0; //@line 703 "lib/lua-5.2.3/src/lapi.c"
 if($40){label=6;break;}else{label=7;break;} //@line 703 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 $res=0; //@line 704 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 704 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $43=$1; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $44=(($43+8)|0); //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 $io=$45; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $46=$mt; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $47=$46; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $48=$io; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $49=(($48)|0); //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $50=$49; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($50)>>2)]=$47; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $51=$io; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $52=(($51+8)|0); //@line 706 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($52)>>2)]=69; //@line 706 "lib/lua-5.2.3/src/lapi.c"
 var $53=$1; //@line 707 "lib/lua-5.2.3/src/lapi.c"
 var $54=(($53+8)|0); //@line 707 "lib/lua-5.2.3/src/lapi.c"
 var $55=HEAP32[(($54)>>2)]; //@line 707 "lib/lua-5.2.3/src/lapi.c"
 var $56=(($55+16)|0); //@line 707 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($54)>>2)]=$56; //@line 707 "lib/lua-5.2.3/src/lapi.c"
 $res=1; //@line 708 "lib/lua-5.2.3/src/lapi.c"
 label=8;break;
 case 8: 
 var $58=$res; //@line 711 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $58; //@line 711 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_setglobal($L,$var){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $reg;
 var $gt;
 var $io;
 var $x_;
 $1=$L;
 $2=$var;
 var $3=$1; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+12)|0); //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+40)|0); //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6)|0); //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $8=$7; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 $reg=$10; //@line 735 "lib/lua-5.2.3/src/lapi.c"
 var $11=$reg; //@line 739 "lib/lua-5.2.3/src/lapi.c"
 var $12=_luaH_getint($11,2); //@line 739 "lib/lua-5.2.3/src/lapi.c"
 $gt=$12; //@line 739 "lib/lua-5.2.3/src/lapi.c"
 var $13=$1; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+8)|0); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+16)|0); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($14)>>2)]=$16; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 $io=$15; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $17=$1; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $18=$2; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $19=_luaS_new($17,$18); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 $x_=$19; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $20=$x_; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $21=$20; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $22=$io; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22)|0); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($24)>>2)]=$21; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $25=$x_; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $26=$25; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $27=(($26+4)|0); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $28=HEAP8[($27)]; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $29=($28&255); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $30=$29|64; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $31=$io; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+8)|0); //@line 740 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($32)>>2)]=$30; //@line 740 "lib/lua-5.2.3/src/lapi.c"
 var $33=$1; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $34=$gt; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $35=$1; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35+8)|0); //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $37=HEAP32[(($36)>>2)]; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $38=((($37)-(16))|0); //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $39=$1; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $40=(($39+8)|0); //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $41=HEAP32[(($40)>>2)]; //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $42=((($41)-(32))|0); //@line 741 "lib/lua-5.2.3/src/lapi.c"
 _luaV_settable($33,$34,$38,$42); //@line 741 "lib/lua-5.2.3/src/lapi.c"
 var $43=$1; //@line 742 "lib/lua-5.2.3/src/lapi.c"
 var $44=(($43+8)|0); //@line 742 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 742 "lib/lua-5.2.3/src/lapi.c"
 var $46=((($45)-(32))|0); //@line 742 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($44)>>2)]=$46; //@line 742 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 744 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_setfield($L,$idx,$k){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $t;
 var $io;
 var $x_;
 $1=$L;
 $2=$idx;
 $3=$k;
 var $4=$1; //@line 762 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 762 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 762 "lib/lua-5.2.3/src/lapi.c"
 $t=$6; //@line 762 "lib/lua-5.2.3/src/lapi.c"
 var $7=$1; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+16)|0); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($8)>>2)]=$10; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 $io=$9; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $11=$1; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $12=$3; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $13=_luaS_new($11,$12); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 $x_=$13; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $14=$x_; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $15=$14; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $16=$io; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16)|0); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $18=$17; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($18)>>2)]=$15; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $19=$x_; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $20=$19; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20+4)|0); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP8[($21)]; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $23=($22&255); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23|64; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $25=$io; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+8)|0); //@line 763 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($26)>>2)]=$24; //@line 763 "lib/lua-5.2.3/src/lapi.c"
 var $27=$1; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $28=$t; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $29=$1; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+8)|0); //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $31=HEAP32[(($30)>>2)]; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $32=((($31)-(16))|0); //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $33=$1; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $34=(($33+8)|0); //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $35=HEAP32[(($34)>>2)]; //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $36=((($35)-(32))|0); //@line 764 "lib/lua-5.2.3/src/lapi.c"
 _luaV_settable($27,$28,$32,$36); //@line 764 "lib/lua-5.2.3/src/lapi.c"
 var $37=$1; //@line 765 "lib/lua-5.2.3/src/lapi.c"
 var $38=(($37+8)|0); //@line 765 "lib/lua-5.2.3/src/lapi.c"
 var $39=HEAP32[(($38)>>2)]; //@line 765 "lib/lua-5.2.3/src/lapi.c"
 var $40=((($39)-(32))|0); //@line 765 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($38)>>2)]=$40; //@line 765 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 767 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_rawset($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $t;
 var $io2;
 var $io1;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 774 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 774 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 774 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 774 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $9=((($8)-(16))|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 $io2=$9; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $10=$1; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $11=$t; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $13=$12; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $15=$14; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $16=$1; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+8)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $19=((($18)-(32))|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $20=_luaH_set($10,$15,$19); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 $io1=$20; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $21=$io1; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io2; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $25=$22; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $26=$24; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($25)>>2)]=HEAP32[(($26)>>2)];HEAP32[((($25)+(4))>>2)]=HEAP32[((($26)+(4))>>2)]; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $27=$io2; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+8)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $30=$io1; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+8)|0); //@line 776 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($31)>>2)]=$29; //@line 776 "lib/lua-5.2.3/src/lapi.c"
 var $32=$t; //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32)|0); //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33; //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $35=HEAP32[(($34)>>2)]; //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $36=$35; //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+6)|0); //@line 777 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($37)]=0; //@line 777 "lib/lua-5.2.3/src/lapi.c"
 var $38=$1; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38+8)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $40=HEAP32[(($39)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $41=((($40)-(16))|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($41+8)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $43=HEAP32[(($42)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $44=$43&64; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $45=($44|0)!=0; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 if($45){label=2;break;}else{label=5;break;} //@line 778 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $47=$1; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $48=(($47+8)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $49=HEAP32[(($48)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $50=((($49)-(16))|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $51=(($50)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $52=$51; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $53=HEAP32[(($52)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $54=$53; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $55=(($54+5)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $56=HEAP8[($55)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $57=($56&255); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $58=$57&3; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $59=($58|0)!=0; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 if($59){label=3;break;}else{label=5;break;} //@line 778 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $61=$t; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $62=(($61)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $63=$62; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $64=HEAP32[(($63)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $65=$64; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $66=(($65+5)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $67=HEAP8[($66)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $68=($67&255); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $69=$68&4; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $70=($69|0)!=0; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 if($70){label=4;break;}else{label=5;break;} //@line 778 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $72=$1; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $73=$t; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $74=(($73)|0); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $75=$74; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 var $76=HEAP32[(($75)>>2)]; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrierback_($72,$76); //@line 778 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 778 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $78=$1; //@line 779 "lib/lua-5.2.3/src/lapi.c"
 var $79=(($78+8)|0); //@line 779 "lib/lua-5.2.3/src/lapi.c"
 var $80=HEAP32[(($79)>>2)]; //@line 779 "lib/lua-5.2.3/src/lapi.c"
 var $81=((($80)-(32))|0); //@line 779 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($79)>>2)]=$81; //@line 779 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 781 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_rawseti($L,$idx,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $t;
 $1=$L;
 $2=$idx;
 $3=$n;
 var $4=$1; //@line 788 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 788 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 788 "lib/lua-5.2.3/src/lapi.c"
 $t=$6; //@line 788 "lib/lua-5.2.3/src/lapi.c"
 var $7=$1; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $8=$t; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8)|0); //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $12=$11; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $13=$3; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $14=$1; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14+8)|0); //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $16=HEAP32[(($15)>>2)]; //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $17=((($16)-(16))|0); //@line 790 "lib/lua-5.2.3/src/lapi.c"
 _luaH_setint($7,$12,$13,$17); //@line 790 "lib/lua-5.2.3/src/lapi.c"
 var $18=$1; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18+8)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $20=HEAP32[(($19)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $21=((($20)-(16))|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+8)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $24=$23&64; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $25=($24|0)!=0; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 if($25){label=2;break;}else{label=5;break;} //@line 791 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $27=$1; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+8)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $30=((($29)-(16))|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $32=$31; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $33=HEAP32[(($32)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+5)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $36=HEAP8[($35)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $37=($36&255); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $38=$37&3; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $39=($38|0)!=0; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 if($39){label=3;break;}else{label=5;break;} //@line 791 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $41=$t; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($41)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $43=$42; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $44=HEAP32[(($43)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $45=$44; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $46=(($45+5)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $47=HEAP8[($46)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $48=($47&255); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $49=$48&4; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $50=($49|0)!=0; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 if($50){label=4;break;}else{label=5;break;} //@line 791 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $52=$1; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $53=$t; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $54=(($53)|0); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $55=$54; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 var $56=HEAP32[(($55)>>2)]; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrierback_($52,$56); //@line 791 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 791 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $58=$1; //@line 792 "lib/lua-5.2.3/src/lapi.c"
 var $59=(($58+8)|0); //@line 792 "lib/lua-5.2.3/src/lapi.c"
 var $60=HEAP32[(($59)>>2)]; //@line 792 "lib/lua-5.2.3/src/lapi.c"
 var $61=((($60)-(16))|0); //@line 792 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($59)>>2)]=$61; //@line 792 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 794 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_setmetatable($L,$objindex){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $obj;
 var $mt;
 $1=$L;
 $2=$objindex;
 var $3=$1; //@line 817 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 817 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 817 "lib/lua-5.2.3/src/lapi.c"
 $obj=$5; //@line 817 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $9=((($8)-(16))|0); //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+8)|0); //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 818 "lib/lua-5.2.3/src/lapi.c"
 var $12=($11|0)==0; //@line 818 "lib/lua-5.2.3/src/lapi.c"
 if($12){label=2;break;}else{label=3;break;} //@line 818 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 $mt=0; //@line 819 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 819 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $15=$1; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $18=((($17)-(16))|0); //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18)|0); //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $20=$19; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $21=HEAP32[(($20)>>2)]; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 var $22=$21; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 $mt=$22; //@line 822 "lib/lua-5.2.3/src/lapi.c"
 label=4;break;
 case 4: 
 var $24=$obj; //@line 824 "lib/lua-5.2.3/src/lapi.c"
 var $25=(($24+8)|0); //@line 824 "lib/lua-5.2.3/src/lapi.c"
 var $26=HEAP32[(($25)>>2)]; //@line 824 "lib/lua-5.2.3/src/lapi.c"
 var $27=$26&15; //@line 824 "lib/lua-5.2.3/src/lapi.c"
 if(($27|0)==7){ label=11;break;}else if(($27|0)==5){ label=5;break;}else{label=17;break;}
 case 5: 
 var $29=$mt; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $30=$obj; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30)|0); //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $32=$31; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $33=HEAP32[(($32)>>2)]; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+8)|0); //@line 826 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($35)>>2)]=$29; //@line 826 "lib/lua-5.2.3/src/lapi.c"
 var $36=$mt; //@line 827 "lib/lua-5.2.3/src/lapi.c"
 var $37=($36|0)!=0; //@line 827 "lib/lua-5.2.3/src/lapi.c"
 if($37){label=6;break;}else{label=10;break;} //@line 827 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $39=$mt; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $40=$39; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $41=$40; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($41+5)|0); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $43=HEAP8[($42)]; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $44=($43&255); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $45=$44&3; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $46=($45|0)!=0; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 if($46){label=7;break;}else{label=9;break;} //@line 828 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $48=$obj; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $49=(($48)|0); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $50=$49; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $51=HEAP32[(($50)>>2)]; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $52=$51; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $53=(($52+5)|0); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $54=HEAP8[($53)]; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $55=($54&255); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $56=$55&4; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $57=($56|0)!=0; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 if($57){label=8;break;}else{label=9;break;} //@line 828 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $59=$1; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $60=$obj; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $61=(($60)|0); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $62=$61; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 var $63=HEAP32[(($62)>>2)]; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrierback_($59,$63); //@line 828 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 828 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $65=$1; //@line 829 "lib/lua-5.2.3/src/lapi.c"
 var $66=$obj; //@line 829 "lib/lua-5.2.3/src/lapi.c"
 var $67=(($66)|0); //@line 829 "lib/lua-5.2.3/src/lapi.c"
 var $68=$67; //@line 829 "lib/lua-5.2.3/src/lapi.c"
 var $69=HEAP32[(($68)>>2)]; //@line 829 "lib/lua-5.2.3/src/lapi.c"
 var $70=$mt; //@line 829 "lib/lua-5.2.3/src/lapi.c"
 _luaC_checkfinalizer($65,$69,$70); //@line 829 "lib/lua-5.2.3/src/lapi.c"
 label=10;break; //@line 830 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 label=18;break; //@line 831 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $73=$mt; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $74=$obj; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $75=(($74)|0); //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $76=$75; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $77=HEAP32[(($76)>>2)]; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $78=$77; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $79=$78; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $80=(($79+8)|0); //@line 834 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($80)>>2)]=$73; //@line 834 "lib/lua-5.2.3/src/lapi.c"
 var $81=$mt; //@line 835 "lib/lua-5.2.3/src/lapi.c"
 var $82=($81|0)!=0; //@line 835 "lib/lua-5.2.3/src/lapi.c"
 if($82){label=12;break;}else{label=16;break;} //@line 835 "lib/lua-5.2.3/src/lapi.c"
 case 12: 
 var $84=$mt; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $85=$84; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $86=$85; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $87=(($86+5)|0); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $88=HEAP8[($87)]; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $89=($88&255); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $90=$89&3; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $91=($90|0)!=0; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 if($91){label=13;break;}else{label=15;break;} //@line 836 "lib/lua-5.2.3/src/lapi.c"
 case 13: 
 var $93=$obj; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $94=(($93)|0); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $95=$94; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $96=HEAP32[(($95)>>2)]; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $97=$96; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $98=$97; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $99=$98; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $100=(($99+5)|0); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $101=HEAP8[($100)]; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $102=($101&255); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $103=$102&4; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $104=($103|0)!=0; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 if($104){label=14;break;}else{label=15;break;} //@line 836 "lib/lua-5.2.3/src/lapi.c"
 case 14: 
 var $106=$1; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $107=$obj; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $108=(($107)|0); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $109=$108; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $110=HEAP32[(($109)>>2)]; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $111=$110; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $112=$111; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $113=$mt; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 var $114=$113; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrier_($106,$112,$114); //@line 836 "lib/lua-5.2.3/src/lapi.c"
 label=15;break; //@line 836 "lib/lua-5.2.3/src/lapi.c"
 case 15: 
 var $116=$1; //@line 837 "lib/lua-5.2.3/src/lapi.c"
 var $117=$obj; //@line 837 "lib/lua-5.2.3/src/lapi.c"
 var $118=(($117)|0); //@line 837 "lib/lua-5.2.3/src/lapi.c"
 var $119=$118; //@line 837 "lib/lua-5.2.3/src/lapi.c"
 var $120=HEAP32[(($119)>>2)]; //@line 837 "lib/lua-5.2.3/src/lapi.c"
 var $121=$mt; //@line 837 "lib/lua-5.2.3/src/lapi.c"
 _luaC_checkfinalizer($116,$120,$121); //@line 837 "lib/lua-5.2.3/src/lapi.c"
 label=16;break; //@line 838 "lib/lua-5.2.3/src/lapi.c"
 case 16: 
 label=18;break; //@line 839 "lib/lua-5.2.3/src/lapi.c"
 case 17: 
 var $124=$mt; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $125=$obj; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $126=(($125+8)|0); //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $127=HEAP32[(($126)>>2)]; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $128=$127&15; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $129=$1; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $130=(($129+12)|0); //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $131=HEAP32[(($130)>>2)]; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $132=(($131+252)|0); //@line 842 "lib/lua-5.2.3/src/lapi.c"
 var $133=(($132+($128<<2))|0); //@line 842 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($133)>>2)]=$124; //@line 842 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 843 "lib/lua-5.2.3/src/lapi.c"
 case 18: 
 var $135=$1; //@line 846 "lib/lua-5.2.3/src/lapi.c"
 var $136=(($135+8)|0); //@line 846 "lib/lua-5.2.3/src/lapi.c"
 var $137=HEAP32[(($136)>>2)]; //@line 846 "lib/lua-5.2.3/src/lapi.c"
 var $138=((($137)-(16))|0); //@line 846 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($136)>>2)]=$138; //@line 846 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return 1; //@line 848 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_getctx($L,$ctx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$L;
 $3=$ctx;
 var $4=$2; //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+16)|0); //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+18)|0); //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP8[($7)]; //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $9=($8&255); //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $10=$9&8; //@line 881 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)!=0; //@line 881 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=2;break;}else{label=5;break;} //@line 881 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$3; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $14=($13|0)!=0; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 if($14){label=3;break;}else{label=4;break;} //@line 882 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $16=$2; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+16)|0); //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18+24)|0); //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $20=$19; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20)|0); //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 var $23=$3; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($23)>>2)]=$22; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 882 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $25=$2; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+16)|0); //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $27=HEAP32[(($26)>>2)]; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+24)|0); //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $29=$28; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+13)|0); //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $31=HEAP8[($30)]; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 var $32=($31&255); //@line 883 "lib/lua-5.2.3/src/lapi.c"
 $1=$32; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 883 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 $1=0; //@line 885 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 885 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $35=$1; //@line 886 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $35; //@line 886 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_callk($L,$nargs,$nresults,$ctx,$k){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $func;
 $1=$L;
 $2=$nargs;
 $3=$nresults;
 $4=$ctx;
 $5=$k;
 var $6=$1; //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $9=$2; //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $10=((($9)+(1))|0); //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $11=(((-$10))|0); //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($8+($11<<4))|0); //@line 898 "lib/lua-5.2.3/src/lapi.c"
 $func=$12; //@line 898 "lib/lua-5.2.3/src/lapi.c"
 var $13=$5; //@line 899 "lib/lua-5.2.3/src/lapi.c"
 var $14=($13|0)!=0; //@line 899 "lib/lua-5.2.3/src/lapi.c"
 if($14){label=2;break;}else{label=4;break;} //@line 899 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $16=$1; //@line 899 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+36)|0); //@line 899 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP16[(($17)>>1)]; //@line 899 "lib/lua-5.2.3/src/lapi.c"
 var $19=($18&65535); //@line 899 "lib/lua-5.2.3/src/lapi.c"
 var $20=($19|0)==0; //@line 899 "lib/lua-5.2.3/src/lapi.c"
 if($20){label=3;break;}else{label=4;break;} //@line 899 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $22=$5; //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $23=$1; //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+16)|0); //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $25=HEAP32[(($24)>>2)]; //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+24)|0); //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $27=$26; //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+4)|0); //@line 900 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($28)>>2)]=$22; //@line 900 "lib/lua-5.2.3/src/lapi.c"
 var $29=$4; //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $30=$1; //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+16)|0); //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $32=HEAP32[(($31)>>2)]; //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+24)|0); //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33; //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34)|0); //@line 901 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($35)>>2)]=$29; //@line 901 "lib/lua-5.2.3/src/lapi.c"
 var $36=$1; //@line 902 "lib/lua-5.2.3/src/lapi.c"
 var $37=$func; //@line 902 "lib/lua-5.2.3/src/lapi.c"
 var $38=$3; //@line 902 "lib/lua-5.2.3/src/lapi.c"
 _luaD_call($36,$37,$38,1); //@line 902 "lib/lua-5.2.3/src/lapi.c"
 label=5;break; //@line 903 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $40=$1; //@line 905 "lib/lua-5.2.3/src/lapi.c"
 var $41=$func; //@line 905 "lib/lua-5.2.3/src/lapi.c"
 var $42=$3; //@line 905 "lib/lua-5.2.3/src/lapi.c"
 _luaD_call($40,$41,$42,0); //@line 905 "lib/lua-5.2.3/src/lapi.c"
 label=5;break;
 case 5: 
 var $44=$3; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $45=($44|0)==-1; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 if($45){label=6;break;}else{label=8;break;} //@line 906 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $47=$1; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $48=(($47+16)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $49=HEAP32[(($48)>>2)]; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $50=(($49+4)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $51=HEAP32[(($50)>>2)]; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $52=$1; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $53=(($52+8)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $54=HEAP32[(($53)>>2)]; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $55=($51>>>0)<($54>>>0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 if($55){label=7;break;}else{label=8;break;} //@line 906 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $57=$1; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $58=(($57+8)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $59=HEAP32[(($58)>>2)]; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $60=$1; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $61=(($60+16)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $62=HEAP32[(($61)>>2)]; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 var $63=(($62+4)|0); //@line 906 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($63)>>2)]=$59; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 906 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 STACKTOP=sp;return; //@line 908 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_pcallk($L,$nargs,$nresults,$errfunc,$ctx,$k){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $c=sp;
 var $status;
 var $func;
 var $o;
 var $ci;
 $1=$L;
 $2=$nargs;
 $3=$nresults;
 $4=$errfunc;
 $5=$ctx;
 $6=$k;
 var $7=$4; //@line 939 "lib/lua-5.2.3/src/lapi.c"
 var $8=($7|0)==0; //@line 939 "lib/lua-5.2.3/src/lapi.c"
 if($8){label=2;break;}else{label=3;break;} //@line 939 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 $func=0; //@line 940 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 940 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $11=$1; //@line 942 "lib/lua-5.2.3/src/lapi.c"
 var $12=$4; //@line 942 "lib/lua-5.2.3/src/lapi.c"
 var $13=_index2addr($11,$12); //@line 942 "lib/lua-5.2.3/src/lapi.c"
 $o=$13; //@line 942 "lib/lua-5.2.3/src/lapi.c"
 var $14=$o; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $15=$14; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $16=$1; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $17=(($16+28)|0); //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $18=HEAP32[(($17)>>2)]; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $20=$15; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $21=$19; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 var $22=((($20)-($21))|0); //@line 944 "lib/lua-5.2.3/src/lapi.c"
 $func=$22; //@line 944 "lib/lua-5.2.3/src/lapi.c"
 label=4;break;
 case 4: 
 var $24=$1; //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $25=(($24+8)|0); //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $26=HEAP32[(($25)>>2)]; //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $27=$2; //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $28=((($27)+(1))|0); //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $29=(((-$28))|0); //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($26+($29<<4))|0); //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($c)|0); //@line 946 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($31)>>2)]=$30; //@line 946 "lib/lua-5.2.3/src/lapi.c"
 var $32=$6; //@line 947 "lib/lua-5.2.3/src/lapi.c"
 var $33=($32|0)==0; //@line 947 "lib/lua-5.2.3/src/lapi.c"
 if($33){label=6;break;}else{label=5;break;} //@line 947 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $35=$1; //@line 947 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35+36)|0); //@line 947 "lib/lua-5.2.3/src/lapi.c"
 var $37=HEAP16[(($36)>>1)]; //@line 947 "lib/lua-5.2.3/src/lapi.c"
 var $38=($37&65535); //@line 947 "lib/lua-5.2.3/src/lapi.c"
 var $39=($38|0)>0; //@line 947 "lib/lua-5.2.3/src/lapi.c"
 if($39){label=6;break;}else{label=7;break;} //@line 947 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $41=$3; //@line 948 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($c+4)|0); //@line 948 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($42)>>2)]=$41; //@line 948 "lib/lua-5.2.3/src/lapi.c"
 var $43=$1; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $44=$c; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $45=(($c)|0); //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $46=HEAP32[(($45)>>2)]; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $47=$46; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $48=$1; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $49=(($48+28)|0); //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $50=HEAP32[(($49)>>2)]; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $51=$50; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $52=$47; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $53=$51; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $54=((($52)-($53))|0); //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $55=$func; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 var $56=_luaD_pcall($43,68,$44,$54,$55); //@line 949 "lib/lua-5.2.3/src/lapi.c"
 $status=$56; //@line 949 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 950 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $58=$1; //@line 952 "lib/lua-5.2.3/src/lapi.c"
 var $59=(($58+16)|0); //@line 952 "lib/lua-5.2.3/src/lapi.c"
 var $60=HEAP32[(($59)>>2)]; //@line 952 "lib/lua-5.2.3/src/lapi.c"
 $ci=$60; //@line 952 "lib/lua-5.2.3/src/lapi.c"
 var $61=$6; //@line 953 "lib/lua-5.2.3/src/lapi.c"
 var $62=$ci; //@line 953 "lib/lua-5.2.3/src/lapi.c"
 var $63=(($62+24)|0); //@line 953 "lib/lua-5.2.3/src/lapi.c"
 var $64=$63; //@line 953 "lib/lua-5.2.3/src/lapi.c"
 var $65=(($64+4)|0); //@line 953 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($65)>>2)]=$61; //@line 953 "lib/lua-5.2.3/src/lapi.c"
 var $66=$5; //@line 954 "lib/lua-5.2.3/src/lapi.c"
 var $67=$ci; //@line 954 "lib/lua-5.2.3/src/lapi.c"
 var $68=(($67+24)|0); //@line 954 "lib/lua-5.2.3/src/lapi.c"
 var $69=$68; //@line 954 "lib/lua-5.2.3/src/lapi.c"
 var $70=(($69)|0); //@line 954 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($70)>>2)]=$66; //@line 954 "lib/lua-5.2.3/src/lapi.c"
 var $71=(($c)|0); //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $72=HEAP32[(($71)>>2)]; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $73=$72; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $74=$1; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $75=(($74+28)|0); //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $76=HEAP32[(($75)>>2)]; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $77=$76; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $78=$73; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $79=$77; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $80=((($78)-($79))|0); //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $81=$ci; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $82=(($81+20)|0); //@line 956 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($82)>>2)]=$80; //@line 956 "lib/lua-5.2.3/src/lapi.c"
 var $83=$1; //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $84=(($83+41)|0); //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $85=HEAP8[($84)]; //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $86=$ci; //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $87=(($86+24)|0); //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $88=$87; //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $89=(($88+12)|0); //@line 957 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($89)]=$85; //@line 957 "lib/lua-5.2.3/src/lapi.c"
 var $90=$1; //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $91=(($90+68)|0); //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $92=HEAP32[(($91)>>2)]; //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $93=$ci; //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $94=(($93+24)|0); //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $95=$94; //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $96=(($95+8)|0); //@line 958 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($96)>>2)]=$92; //@line 958 "lib/lua-5.2.3/src/lapi.c"
 var $97=$func; //@line 959 "lib/lua-5.2.3/src/lapi.c"
 var $98=$1; //@line 959 "lib/lua-5.2.3/src/lapi.c"
 var $99=(($98+68)|0); //@line 959 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($99)>>2)]=$97; //@line 959 "lib/lua-5.2.3/src/lapi.c"
 var $100=$ci; //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $101=(($100+18)|0); //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $102=HEAP8[($101)]; //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $103=($102&255); //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $104=$103|16; //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $105=(($104)&255); //@line 961 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($101)]=$105; //@line 961 "lib/lua-5.2.3/src/lapi.c"
 var $106=$1; //@line 962 "lib/lua-5.2.3/src/lapi.c"
 var $107=(($c)|0); //@line 962 "lib/lua-5.2.3/src/lapi.c"
 var $108=HEAP32[(($107)>>2)]; //@line 962 "lib/lua-5.2.3/src/lapi.c"
 var $109=$3; //@line 962 "lib/lua-5.2.3/src/lapi.c"
 _luaD_call($106,$108,$109,1); //@line 962 "lib/lua-5.2.3/src/lapi.c"
 var $110=$ci; //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $111=(($110+18)|0); //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $112=HEAP8[($111)]; //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $113=($112&255); //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $114=$113&-17; //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $115=(($114)&255); //@line 963 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($111)]=$115; //@line 963 "lib/lua-5.2.3/src/lapi.c"
 var $116=$ci; //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $117=(($116+24)|0); //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $118=$117; //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $119=(($118+8)|0); //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $120=HEAP32[(($119)>>2)]; //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $121=$1; //@line 964 "lib/lua-5.2.3/src/lapi.c"
 var $122=(($121+68)|0); //@line 964 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($122)>>2)]=$120; //@line 964 "lib/lua-5.2.3/src/lapi.c"
 $status=0; //@line 965 "lib/lua-5.2.3/src/lapi.c"
 label=8;break;
 case 8: 
 var $124=$3; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $125=($124|0)==-1; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 if($125){label=9;break;}else{label=11;break;} //@line 967 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $127=$1; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $128=(($127+16)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $129=HEAP32[(($128)>>2)]; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $130=(($129+4)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $131=HEAP32[(($130)>>2)]; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $132=$1; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $133=(($132+8)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $134=HEAP32[(($133)>>2)]; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $135=($131>>>0)<($134>>>0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 if($135){label=10;break;}else{label=11;break;} //@line 967 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 var $137=$1; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $138=(($137+8)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $139=HEAP32[(($138)>>2)]; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $140=$1; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $141=(($140+16)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $142=HEAP32[(($141)>>2)]; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 var $143=(($142+4)|0); //@line 967 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($143)>>2)]=$139; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 label=11;break; //@line 967 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $145=$status; //@line 969 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $145; //@line 969 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _f_call($L,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $c;
 $1=$L;
 $2=$ud;
 var $3=$2; //@line 922 "lib/lua-5.2.3/src/lapi.c"
 var $4=$3; //@line 922 "lib/lua-5.2.3/src/lapi.c"
 $c=$4; //@line 922 "lib/lua-5.2.3/src/lapi.c"
 var $5=$1; //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $6=$c; //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6)|0); //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $9=$c; //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+4)|0); //@line 923 "lib/lua-5.2.3/src/lapi.c"
 var $11=HEAP32[(($10)>>2)]; //@line 923 "lib/lua-5.2.3/src/lapi.c"
 _luaD_call($5,$8,$11,0); //@line 923 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 924 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_load($L,$reader,$data,$chunkname,$mode){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $z=sp;
 var $status;
 var $f;
 var $reg;
 var $gt;
 var $io2;
 var $io1;
 $1=$L;
 $2=$reader;
 $3=$data;
 $4=$chunkname;
 $5=$mode;
 var $6=$4; //@line 978 "lib/lua-5.2.3/src/lapi.c"
 var $7=($6|0)!=0; //@line 978 "lib/lua-5.2.3/src/lapi.c"
 if($7){label=3;break;}else{label=2;break;} //@line 978 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 $4=6040; //@line 978 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 978 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $10=$1; //@line 979 "lib/lua-5.2.3/src/lapi.c"
 var $11=$2; //@line 979 "lib/lua-5.2.3/src/lapi.c"
 var $12=$3; //@line 979 "lib/lua-5.2.3/src/lapi.c"
 _luaZ_init($10,$z,$11,$12); //@line 979 "lib/lua-5.2.3/src/lapi.c"
 var $13=$1; //@line 980 "lib/lua-5.2.3/src/lapi.c"
 var $14=$4; //@line 980 "lib/lua-5.2.3/src/lapi.c"
 var $15=$5; //@line 980 "lib/lua-5.2.3/src/lapi.c"
 var $16=_luaD_protectedparser($13,$z,$14,$15); //@line 980 "lib/lua-5.2.3/src/lapi.c"
 $status=$16; //@line 980 "lib/lua-5.2.3/src/lapi.c"
 var $17=$status; //@line 981 "lib/lua-5.2.3/src/lapi.c"
 var $18=($17|0)==0; //@line 981 "lib/lua-5.2.3/src/lapi.c"
 if($18){label=4;break;}else{label=11;break;} //@line 981 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $20=$1; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20+8)|0); //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $23=((($22)-(16))|0); //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23)|0); //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $25=$24; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $26=HEAP32[(($25)>>2)]; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $27=$26; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $28=$27; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 $f=$28; //@line 982 "lib/lua-5.2.3/src/lapi.c"
 var $29=$f; //@line 983 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+6)|0); //@line 983 "lib/lua-5.2.3/src/lapi.c"
 var $31=HEAP8[($30)]; //@line 983 "lib/lua-5.2.3/src/lapi.c"
 var $32=($31&255); //@line 983 "lib/lua-5.2.3/src/lapi.c"
 var $33=($32|0)==1; //@line 983 "lib/lua-5.2.3/src/lapi.c"
 if($33){label=5;break;}else{label=10;break;} //@line 983 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $35=$1; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $36=(($35+12)|0); //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $37=HEAP32[(($36)>>2)]; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $38=(($37+40)|0); //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $39=(($38)|0); //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $40=$39; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $41=HEAP32[(($40)>>2)]; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $42=$41; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 $reg=$42; //@line 985 "lib/lua-5.2.3/src/lapi.c"
 var $43=$reg; //@line 986 "lib/lua-5.2.3/src/lapi.c"
 var $44=_luaH_getint($43,2); //@line 986 "lib/lua-5.2.3/src/lapi.c"
 $gt=$44; //@line 986 "lib/lua-5.2.3/src/lapi.c"
 var $45=$gt; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 $io2=$45; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $46=$f; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $47=(($46+16)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $48=(($47)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $49=HEAP32[(($48)>>2)]; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $50=(($49+8)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $51=HEAP32[(($50)>>2)]; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 $io1=$51; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $52=$io1; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $53=(($52)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $54=$io2; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $55=(($54)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $56=$53; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $57=$55; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($56)>>2)]=HEAP32[(($57)>>2)];HEAP32[((($56)+(4))>>2)]=HEAP32[((($57)+(4))>>2)]; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $58=$io2; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $59=(($58+8)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $60=HEAP32[(($59)>>2)]; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $61=$io1; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $62=(($61+8)|0); //@line 988 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($62)>>2)]=$60; //@line 988 "lib/lua-5.2.3/src/lapi.c"
 var $63=$gt; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $64=(($63+8)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $65=HEAP32[(($64)>>2)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $66=$65&64; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $67=($66|0)!=0; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 if($67){label=6;break;}else{label=9;break;} //@line 989 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $69=$gt; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $70=(($69)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $71=$70; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $72=HEAP32[(($71)>>2)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $73=$72; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $74=(($73+5)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $75=HEAP8[($74)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $76=($75&255); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $77=$76&3; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $78=($77|0)!=0; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 if($78){label=7;break;}else{label=9;break;} //@line 989 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $80=$f; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $81=(($80+16)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $82=(($81)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $83=HEAP32[(($82)>>2)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $84=$83; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $85=$84; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $86=(($85+5)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $87=HEAP8[($86)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $88=($87&255); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $89=$88&4; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $90=($89|0)!=0; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 if($90){label=8;break;}else{label=9;break;} //@line 989 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $92=$1; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $93=$f; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $94=(($93+16)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $95=(($94)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $96=HEAP32[(($95)>>2)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $97=$96; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $98=$gt; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $99=(($98)|0); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $100=$99; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 var $101=HEAP32[(($100)>>2)]; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrier_($92,$97,$101); //@line 989 "lib/lua-5.2.3/src/lapi.c"
 label=9;break; //@line 989 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 label=10;break; //@line 990 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 label=11;break; //@line 991 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $105=$status; //@line 993 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $105; //@line 993 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_dump($L,$writer,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $status;
 var $o;
 $1=$L;
 $2=$writer;
 $3=$data;
 var $4=$1; //@line 1002 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+8)|0); //@line 1002 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1002 "lib/lua-5.2.3/src/lapi.c"
 var $7=((($6)-(16))|0); //@line 1002 "lib/lua-5.2.3/src/lapi.c"
 $o=$7; //@line 1002 "lib/lua-5.2.3/src/lapi.c"
 var $8=$o; //@line 1003 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+8)|0); //@line 1003 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 1003 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)==70; //@line 1003 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=2;break;}else{label=3;break;} //@line 1003 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$1; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $14=$o; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $15=(($14)|0); //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $16=$15; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $18=$17; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $20=(($19+12)|0); //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $21=HEAP32[(($20)>>2)]; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $22=$2; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $23=$3; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 var $24=_luaU_dump($13,$21,$22,$23,0); //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 $status=$24; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 1004 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 $status=1; //@line 1006 "lib/lua-5.2.3/src/lapi.c"
 label=4;break;
 case 4: 
 var $27=$status; //@line 1008 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $27; //@line 1008 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_gc($L,$what,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $res;
 var $g;
 var $debt;
 $1=$L;
 $2=$what;
 $3=$data;
 $res=0; //@line 1022 "lib/lua-5.2.3/src/lapi.c"
 var $4=$1; //@line 1025 "lib/lua-5.2.3/src/lapi.c"
 var $5=(($4+12)|0); //@line 1025 "lib/lua-5.2.3/src/lapi.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1025 "lib/lua-5.2.3/src/lapi.c"
 $g=$6; //@line 1025 "lib/lua-5.2.3/src/lapi.c"
 var $7=$2; //@line 1026 "lib/lua-5.2.3/src/lapi.c"
 switch(($7|0)){case 6:{ label=15;break;}case 8:{ label=16;break;}case 7:{ label=17;break;}case 9:{ label=18;break;}case 10:{ label=19;break;}case 0:{ label=2;break;}case 11:{ label=20;break;}case 1:{ label=3;break;}case 2:{ label=4;break;}case 3:{ label=5;break;}case 4:{ label=6;break;}case 5:{ label=7;break;}default:{label=21;break;}}break;
 case 2: 
 var $9=$g; //@line 1028 "lib/lua-5.2.3/src/lapi.c"
 var $10=(($9+63)|0); //@line 1028 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($10)]=0; //@line 1028 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1029 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $12=$g; //@line 1032 "lib/lua-5.2.3/src/lapi.c"
 _luaE_setdebt($12,0); //@line 1032 "lib/lua-5.2.3/src/lapi.c"
 var $13=$g; //@line 1033 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+63)|0); //@line 1033 "lib/lua-5.2.3/src/lapi.c"
 HEAP8[($14)]=1; //@line 1033 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1034 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $16=$1; //@line 1037 "lib/lua-5.2.3/src/lapi.c"
 _luaC_fullgc($16,0); //@line 1037 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1038 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $18=$g; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $19=(($18+8)|0); //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $20=HEAP32[(($19)>>2)]; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $21=$g; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+12)|0); //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $24=((($20)+($23))|0); //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 var $25=$24>>>10; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 $res=$25; //@line 1042 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1043 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $27=$g; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+8)|0); //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $30=$g; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+12)|0); //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $32=HEAP32[(($31)>>2)]; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $33=((($29)+($32))|0); //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 var $34=$33&1023; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 $res=$34; //@line 1046 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1047 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $36=$g; //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 var $37=(($36+62)|0); //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 var $38=HEAP8[($37)]; //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 var $39=($38&255); //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 var $40=($39|0)==2; //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 if($40){label=8;break;}else{label=9;break;} //@line 1050 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $42=$g; //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42+20)|0); //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 var $44=HEAP32[(($43)>>2)]; //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 var $45=($44|0)==0; //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 var $46=($45&1); //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 $res=$46; //@line 1051 "lib/lua-5.2.3/src/lapi.c"
 var $47=$1; //@line 1052 "lib/lua-5.2.3/src/lapi.c"
 _luaC_forcestep($47); //@line 1052 "lib/lua-5.2.3/src/lapi.c"
 label=14;break; //@line 1053 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $49=$3; //@line 1055 "lib/lua-5.2.3/src/lapi.c"
 var $50=($49<<10); //@line 1055 "lib/lua-5.2.3/src/lapi.c"
 var $51=((($50)-(1600))|0); //@line 1055 "lib/lua-5.2.3/src/lapi.c"
 $debt=$51; //@line 1055 "lib/lua-5.2.3/src/lapi.c"
 var $52=$g; //@line 1056 "lib/lua-5.2.3/src/lapi.c"
 var $53=(($52+63)|0); //@line 1056 "lib/lua-5.2.3/src/lapi.c"
 var $54=HEAP8[($53)]; //@line 1056 "lib/lua-5.2.3/src/lapi.c"
 var $55=(($54<<24)>>24)!=0; //@line 1056 "lib/lua-5.2.3/src/lapi.c"
 if($55){label=10;break;}else{label=11;break;} //@line 1056 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 var $57=$g; //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 var $58=(($57+12)|0); //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 var $59=HEAP32[(($58)>>2)]; //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 var $60=$debt; //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 var $61=((($60)+($59))|0); //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 $debt=$61; //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 label=11;break; //@line 1057 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $63=$g; //@line 1058 "lib/lua-5.2.3/src/lapi.c"
 var $64=$debt; //@line 1058 "lib/lua-5.2.3/src/lapi.c"
 _luaE_setdebt($63,$64); //@line 1058 "lib/lua-5.2.3/src/lapi.c"
 var $65=$1; //@line 1059 "lib/lua-5.2.3/src/lapi.c"
 _luaC_forcestep($65); //@line 1059 "lib/lua-5.2.3/src/lapi.c"
 var $66=$g; //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 var $67=(($66+61)|0); //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 var $68=HEAP8[($67)]; //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 var $69=($68&255); //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 var $70=($69|0)==5; //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 if($70){label=12;break;}else{label=13;break;} //@line 1060 "lib/lua-5.2.3/src/lapi.c"
 case 12: 
 $res=1; //@line 1061 "lib/lua-5.2.3/src/lapi.c"
 label=13;break; //@line 1061 "lib/lua-5.2.3/src/lapi.c"
 case 13: 
 label=14;break;
 case 14: 
 label=22;break; //@line 1063 "lib/lua-5.2.3/src/lapi.c"
 case 15: 
 var $75=$g; //@line 1066 "lib/lua-5.2.3/src/lapi.c"
 var $76=(($75+156)|0); //@line 1066 "lib/lua-5.2.3/src/lapi.c"
 var $77=HEAP32[(($76)>>2)]; //@line 1066 "lib/lua-5.2.3/src/lapi.c"
 $res=$77; //@line 1066 "lib/lua-5.2.3/src/lapi.c"
 var $78=$3; //@line 1067 "lib/lua-5.2.3/src/lapi.c"
 var $79=$g; //@line 1067 "lib/lua-5.2.3/src/lapi.c"
 var $80=(($79+156)|0); //@line 1067 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($80)>>2)]=$78; //@line 1067 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1068 "lib/lua-5.2.3/src/lapi.c"
 case 16: 
 var $82=$g; //@line 1071 "lib/lua-5.2.3/src/lapi.c"
 var $83=(($82+160)|0); //@line 1071 "lib/lua-5.2.3/src/lapi.c"
 var $84=HEAP32[(($83)>>2)]; //@line 1071 "lib/lua-5.2.3/src/lapi.c"
 $res=$84; //@line 1071 "lib/lua-5.2.3/src/lapi.c"
 var $85=$3; //@line 1072 "lib/lua-5.2.3/src/lapi.c"
 var $86=$g; //@line 1072 "lib/lua-5.2.3/src/lapi.c"
 var $87=(($86+160)|0); //@line 1072 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($87)>>2)]=$85; //@line 1072 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1073 "lib/lua-5.2.3/src/lapi.c"
 case 17: 
 var $89=$g; //@line 1076 "lib/lua-5.2.3/src/lapi.c"
 var $90=(($89+164)|0); //@line 1076 "lib/lua-5.2.3/src/lapi.c"
 var $91=HEAP32[(($90)>>2)]; //@line 1076 "lib/lua-5.2.3/src/lapi.c"
 $res=$91; //@line 1076 "lib/lua-5.2.3/src/lapi.c"
 var $92=$3; //@line 1077 "lib/lua-5.2.3/src/lapi.c"
 var $93=$g; //@line 1077 "lib/lua-5.2.3/src/lapi.c"
 var $94=(($93+164)|0); //@line 1077 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($94)>>2)]=$92; //@line 1077 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1078 "lib/lua-5.2.3/src/lapi.c"
 case 18: 
 var $96=$g; //@line 1081 "lib/lua-5.2.3/src/lapi.c"
 var $97=(($96+63)|0); //@line 1081 "lib/lua-5.2.3/src/lapi.c"
 var $98=HEAP8[($97)]; //@line 1081 "lib/lua-5.2.3/src/lapi.c"
 var $99=($98&255); //@line 1081 "lib/lua-5.2.3/src/lapi.c"
 $res=$99; //@line 1081 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1082 "lib/lua-5.2.3/src/lapi.c"
 case 19: 
 var $101=$1; //@line 1085 "lib/lua-5.2.3/src/lapi.c"
 _luaC_changemode($101,2); //@line 1085 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1086 "lib/lua-5.2.3/src/lapi.c"
 case 20: 
 var $103=$1; //@line 1089 "lib/lua-5.2.3/src/lapi.c"
 _luaC_changemode($103,0); //@line 1089 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1090 "lib/lua-5.2.3/src/lapi.c"
 case 21: 
 $res=-1; //@line 1092 "lib/lua-5.2.3/src/lapi.c"
 label=22;break; //@line 1093 "lib/lua-5.2.3/src/lapi.c"
 case 22: 
 var $106=$res; //@line 1095 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $106; //@line 1095 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_error($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $2=$L;
 var $3=$2; //@line 1108 "lib/lua-5.2.3/src/lapi.c"
 _luaG_errormsg($3); //@line 1108 "lib/lua-5.2.3/src/lapi.c"
 throw "Reached an unreachable!"; //@line 1108 "lib/lua-5.2.3/src/lapi.c"
 var $5=$1; //@line 1111 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $5; //@line 1111 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_next($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $t;
 var $more;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 1118 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 1118 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 1118 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 1118 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $7=$t; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7)|0); //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $9=$8; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $11=$10; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $12=$1; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $13=(($12+8)|0); //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $15=((($14)-(16))|0); //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $16=_luaH_next($6,$11,$15); //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 $more=$16; //@line 1120 "lib/lua-5.2.3/src/lapi.c"
 var $17=$more; //@line 1121 "lib/lua-5.2.3/src/lapi.c"
 var $18=($17|0)!=0; //@line 1121 "lib/lua-5.2.3/src/lapi.c"
 if($18){label=2;break;}else{label=3;break;} //@line 1121 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $20=$1; //@line 1122 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20+8)|0); //@line 1122 "lib/lua-5.2.3/src/lapi.c"
 var $22=HEAP32[(($21)>>2)]; //@line 1122 "lib/lua-5.2.3/src/lapi.c"
 var $23=(($22+16)|0); //@line 1122 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($21)>>2)]=$23; //@line 1122 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 1123 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $25=$1; //@line 1125 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+8)|0); //@line 1125 "lib/lua-5.2.3/src/lapi.c"
 var $27=HEAP32[(($26)>>2)]; //@line 1125 "lib/lua-5.2.3/src/lapi.c"
 var $28=((($27)-(16))|0); //@line 1125 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($26)>>2)]=$28; //@line 1125 "lib/lua-5.2.3/src/lapi.c"
 label=4;break;
 case 4: 
 var $30=$more; //@line 1127 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $30; //@line 1127 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_concat($L,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $io;
 var $x_;
 $1=$L;
 $2=$n;
 var $3=$2; //@line 1134 "lib/lua-5.2.3/src/lapi.c"
 var $4=($3|0)>=2; //@line 1134 "lib/lua-5.2.3/src/lapi.c"
 if($4){label=2;break;}else{label=5;break;} //@line 1134 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $6=$1; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+12)|0); //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 var $9=(($8+12)|0); //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 var $10=HEAP32[(($9)>>2)]; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)>0; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=3;break;}else{label=4;break;} //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $13=$1; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($13); //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 label=4;break; //@line 1135 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $15=$1; //@line 1136 "lib/lua-5.2.3/src/lapi.c"
 var $16=$2; //@line 1136 "lib/lua-5.2.3/src/lapi.c"
 _luaV_concat($15,$16); //@line 1136 "lib/lua-5.2.3/src/lapi.c"
 label=8;break; //@line 1137 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $18=$2; //@line 1138 "lib/lua-5.2.3/src/lapi.c"
 var $19=($18|0)==0; //@line 1138 "lib/lua-5.2.3/src/lapi.c"
 if($19){label=6;break;}else{label=7;break;} //@line 1138 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $21=$1; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+8)|0); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 $io=$23; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $24=$1; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $25=_luaS_newlstr($24,19992,0); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 $x_=$25; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $26=$x_; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $27=$26; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $28=$io; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $29=(($28)|0); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $30=$29; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($30)>>2)]=$27; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $31=$x_; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $32=$31; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+4)|0); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $34=HEAP8[($33)]; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $35=($34&255); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $36=$35|64; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $37=$io; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $38=(($37+8)|0); //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($38)>>2)]=$36; //@line 1139 "lib/lua-5.2.3/src/lapi.c"
 var $39=$1; //@line 1140 "lib/lua-5.2.3/src/lapi.c"
 var $40=(($39+8)|0); //@line 1140 "lib/lua-5.2.3/src/lapi.c"
 var $41=HEAP32[(($40)>>2)]; //@line 1140 "lib/lua-5.2.3/src/lapi.c"
 var $42=(($41+16)|0); //@line 1140 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($40)>>2)]=$42; //@line 1140 "lib/lua-5.2.3/src/lapi.c"
 label=7;break; //@line 1141 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 label=8;break;
 case 8: 
 STACKTOP=sp;return; //@line 1144 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_len($L,$idx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $t;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 1150 "lib/lua-5.2.3/src/lapi.c"
 var $4=$2; //@line 1150 "lib/lua-5.2.3/src/lapi.c"
 var $5=_index2addr($3,$4); //@line 1150 "lib/lua-5.2.3/src/lapi.c"
 $t=$5; //@line 1150 "lib/lua-5.2.3/src/lapi.c"
 var $6=$1; //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 var $7=$1; //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 var $8=(($7+8)|0); //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 var $9=HEAP32[(($8)>>2)]; //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 var $10=$t; //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 _luaV_objlen($6,$9,$10); //@line 1151 "lib/lua-5.2.3/src/lapi.c"
 var $11=$1; //@line 1152 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11+8)|0); //@line 1152 "lib/lua-5.2.3/src/lapi.c"
 var $13=HEAP32[(($12)>>2)]; //@line 1152 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+16)|0); //@line 1152 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($12)>>2)]=$14; //@line 1152 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return; //@line 1154 "lib/lua-5.2.3/src/lapi.c"
}


function _lua_newuserdata($L,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $u;
 var $io;
 $1=$L;
 $2=$size;
 var $3=$1; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 var $4=(($3+12)|0); //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 var $6=(($5+12)|0); //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 var $8=($7|0)>0; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 if($8){label=2;break;}else{label=3;break;} //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $10=$1; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 _luaC_step($10); //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 label=3;break; //@line 1178 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $12=$1; //@line 1179 "lib/lua-5.2.3/src/lapi.c"
 var $13=$2; //@line 1179 "lib/lua-5.2.3/src/lapi.c"
 var $14=_luaS_newudata($12,$13,0); //@line 1179 "lib/lua-5.2.3/src/lapi.c"
 $u=$14; //@line 1179 "lib/lua-5.2.3/src/lapi.c"
 var $15=$1; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $16=(($15+8)|0); //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $17=HEAP32[(($16)>>2)]; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 $io=$17; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $18=$u; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $19=$18; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $20=$io; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $21=(($20)|0); //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $22=$21; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($22)>>2)]=$19; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23+8)|0); //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($24)>>2)]=71; //@line 1180 "lib/lua-5.2.3/src/lapi.c"
 var $25=$1; //@line 1181 "lib/lua-5.2.3/src/lapi.c"
 var $26=(($25+8)|0); //@line 1181 "lib/lua-5.2.3/src/lapi.c"
 var $27=HEAP32[(($26)>>2)]; //@line 1181 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+16)|0); //@line 1181 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($26)>>2)]=$28; //@line 1181 "lib/lua-5.2.3/src/lapi.c"
 var $29=$u; //@line 1183 "lib/lua-5.2.3/src/lapi.c"
 var $30=(($29+24)|0); //@line 1183 "lib/lua-5.2.3/src/lapi.c"
 var $31=$30; //@line 1183 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $31; //@line 1183 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _aux_upvalue($fi,$n,$val,$owner){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $f;
 var $f1;
 var $name;
 var $p;
 $2=$fi;
 $3=$n;
 $4=$val;
 $5=$owner;
 var $6=$2; //@line 1190 "lib/lua-5.2.3/src/lapi.c"
 var $7=(($6+8)|0); //@line 1190 "lib/lua-5.2.3/src/lapi.c"
 var $8=HEAP32[(($7)>>2)]; //@line 1190 "lib/lua-5.2.3/src/lapi.c"
 var $9=$8&63; //@line 1190 "lib/lua-5.2.3/src/lapi.c"
 if(($9|0)==38){ label=2;break;}else if(($9|0)==6){ label=8;break;}else{label=17;break;}
 case 2: 
 var $11=$2; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $12=(($11)|0); //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $13=$12; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $14=HEAP32[(($13)>>2)]; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $15=$14; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $16=$15; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 $f=$16; //@line 1192 "lib/lua-5.2.3/src/lapi.c"
 var $17=$3; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $18=1<=($17|0); //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 if($18){label=3;break;}else{label=4;break;} //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $20=$3; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $21=$f; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21+6)|0); //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $23=HEAP8[($22)]; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $24=($23&255); //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 var $25=($20|0)<=($24|0); //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 if($25){label=5;break;}else{label=4;break;} //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 $1=0; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 1193 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $28=$3; //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $29=((($28)-(1))|0); //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $30=$f; //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+16)|0); //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $32=(($31+($29<<4))|0); //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $33=$4; //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($33)>>2)]=$32; //@line 1194 "lib/lua-5.2.3/src/lapi.c"
 var $34=$5; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 var $35=($34|0)!=0; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 if($35){label=6;break;}else{label=7;break;} //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 var $37=$f; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 var $38=$37; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 var $39=$5; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($39)>>2)]=$38; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 label=7;break; //@line 1195 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 $1=19992; //@line 1196 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 1196 "lib/lua-5.2.3/src/lapi.c"
 case 8: 
 var $42=$2; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42)|0); //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $44=$43; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $46=$45; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $47=$46; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 $f1=$47; //@line 1199 "lib/lua-5.2.3/src/lapi.c"
 var $48=$f1; //@line 1201 "lib/lua-5.2.3/src/lapi.c"
 var $49=(($48+12)|0); //@line 1201 "lib/lua-5.2.3/src/lapi.c"
 var $50=HEAP32[(($49)>>2)]; //@line 1201 "lib/lua-5.2.3/src/lapi.c"
 $p=$50; //@line 1201 "lib/lua-5.2.3/src/lapi.c"
 var $51=$3; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 var $52=1<=($51|0); //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 if($52){label=9;break;}else{label=10;break;} //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 case 9: 
 var $54=$3; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 var $55=$p; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 var $56=(($55+40)|0); //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 var $57=HEAP32[(($56)>>2)]; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 var $58=($54|0)<=($57|0); //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 if($58){label=11;break;}else{label=10;break;} //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 case 10: 
 $1=0; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 1202 "lib/lua-5.2.3/src/lapi.c"
 case 11: 
 var $61=$3; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $62=((($61)-(1))|0); //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $63=$f1; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $64=(($63+16)|0); //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $65=(($64+($62<<2))|0); //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $66=HEAP32[(($65)>>2)]; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $67=(($66+8)|0); //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $68=HEAP32[(($67)>>2)]; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $69=$4; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($69)>>2)]=$68; //@line 1203 "lib/lua-5.2.3/src/lapi.c"
 var $70=$5; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $71=($70|0)!=0; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 if($71){label=12;break;}else{label=13;break;} //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 case 12: 
 var $73=$3; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $74=((($73)-(1))|0); //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $75=$f1; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $76=(($75+16)|0); //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $77=(($76+($74<<2))|0); //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $78=HEAP32[(($77)>>2)]; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $79=$78; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 var $80=$5; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($80)>>2)]=$79; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 label=13;break; //@line 1204 "lib/lua-5.2.3/src/lapi.c"
 case 13: 
 var $82=$3; //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $83=((($82)-(1))|0); //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $84=$p; //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $85=(($84+28)|0); //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $86=HEAP32[(($85)>>2)]; //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $87=(($86+($83<<3))|0); //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $88=(($87)|0); //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $89=HEAP32[(($88)>>2)]; //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 $name=$89; //@line 1205 "lib/lua-5.2.3/src/lapi.c"
 var $90=$name; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 var $91=($90|0)==0; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 if($91){label=14;break;}else{label=15;break;} //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 case 14: 
 var $98=19992;label=16;break; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 case 15: 
 var $94=$name; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 var $95=(($94+16)|0); //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 var $96=$95; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 var $98=$96;label=16;break; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 case 16: 
 var $98; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 $1=$98; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 1206 "lib/lua-5.2.3/src/lapi.c"
 case 17: 
 $1=0; //@line 1208 "lib/lua-5.2.3/src/lapi.c"
 label=18;break; //@line 1208 "lib/lua-5.2.3/src/lapi.c"
 case 18: 
 var $101=$1; //@line 1210 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $101; //@line 1210 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_setupvalue($L,$funcindex,$n){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $name;
 var $val=sp;
 var $owner=(sp)+(8);
 var $fi;
 var $io2;
 var $io1;
 $1=$L;
 $2=$funcindex;
 $3=$n;
 HEAP32[(($val)>>2)]=0; //@line 1229 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($owner)>>2)]=0; //@line 1230 "lib/lua-5.2.3/src/lapi.c"
 var $4=$1; //@line 1233 "lib/lua-5.2.3/src/lapi.c"
 var $5=$2; //@line 1233 "lib/lua-5.2.3/src/lapi.c"
 var $6=_index2addr($4,$5); //@line 1233 "lib/lua-5.2.3/src/lapi.c"
 $fi=$6; //@line 1233 "lib/lua-5.2.3/src/lapi.c"
 var $7=$fi; //@line 1235 "lib/lua-5.2.3/src/lapi.c"
 var $8=$3; //@line 1235 "lib/lua-5.2.3/src/lapi.c"
 var $9=_aux_upvalue($7,$8,$val,$owner); //@line 1235 "lib/lua-5.2.3/src/lapi.c"
 $name=$9; //@line 1235 "lib/lua-5.2.3/src/lapi.c"
 var $10=$name; //@line 1236 "lib/lua-5.2.3/src/lapi.c"
 var $11=($10|0)!=0; //@line 1236 "lib/lua-5.2.3/src/lapi.c"
 if($11){label=2;break;}else{label=7;break;} //@line 1236 "lib/lua-5.2.3/src/lapi.c"
 case 2: 
 var $13=$1; //@line 1237 "lib/lua-5.2.3/src/lapi.c"
 var $14=(($13+8)|0); //@line 1237 "lib/lua-5.2.3/src/lapi.c"
 var $15=HEAP32[(($14)>>2)]; //@line 1237 "lib/lua-5.2.3/src/lapi.c"
 var $16=((($15)-(16))|0); //@line 1237 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($14)>>2)]=$16; //@line 1237 "lib/lua-5.2.3/src/lapi.c"
 var $17=$1; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $18=(($17+8)|0); //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $19=HEAP32[(($18)>>2)]; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 $io2=$19; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $20=HEAP32[(($val)>>2)]; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 $io1=$20; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $21=$io1; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $22=(($21)|0); //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $23=$io2; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $24=(($23)|0); //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $25=$22; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $26=$24; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 assert(8 % 1 === 0);HEAP32[(($25)>>2)]=HEAP32[(($26)>>2)];HEAP32[((($25)+(4))>>2)]=HEAP32[((($26)+(4))>>2)]; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $27=$io2; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $28=(($27+8)|0); //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $29=HEAP32[(($28)>>2)]; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $30=$io1; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $31=(($30+8)|0); //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 HEAP32[(($31)>>2)]=$29; //@line 1238 "lib/lua-5.2.3/src/lapi.c"
 var $32=$1; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $33=(($32+8)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $34=HEAP32[(($33)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $35=(($34+8)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $36=HEAP32[(($35)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $37=$36&64; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $38=($37|0)!=0; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 if($38){label=3;break;}else{label=6;break;} //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 case 3: 
 var $40=$1; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $41=(($40+8)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $42=HEAP32[(($41)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $43=(($42)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $44=$43; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $45=HEAP32[(($44)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $46=$45; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $47=(($46+5)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $48=HEAP8[($47)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $49=($48&255); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $50=$49&3; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $51=($50|0)!=0; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 if($51){label=4;break;}else{label=6;break;} //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 case 4: 
 var $53=HEAP32[(($owner)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $54=$53; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $55=(($54+5)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $56=HEAP8[($55)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $57=($56&255); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $58=$57&4; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $59=($58|0)!=0; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 if($59){label=5;break;}else{label=6;break;} //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 case 5: 
 var $61=$1; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $62=HEAP32[(($owner)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $63=$1; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $64=(($63+8)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $65=HEAP32[(($64)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $66=(($65)|0); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $67=$66; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 var $68=HEAP32[(($67)>>2)]; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 _luaC_barrier_($61,$62,$68); //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 label=6;break; //@line 1239 "lib/lua-5.2.3/src/lapi.c"
 case 6: 
 label=7;break; //@line 1240 "lib/lua-5.2.3/src/lapi.c"
 case 7: 
 var $71=$name; //@line 1242 "lib/lua-5.2.3/src/lapi.c"
 STACKTOP=sp;return $71; //@line 1242 "lib/lua-5.2.3/src/lapi.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaU_dump($L,$f,$w,$data,$strip){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $D=sp;
 $1=$L;
 $2=$f;
 $3=$w;
 $4=$data;
 $5=$strip;
 var $6=$1; //@line 165 "lib/lua-5.2.3/src/ldump.c"
 var $7=(($D)|0); //@line 165 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($7)>>2)]=$6; //@line 165 "lib/lua-5.2.3/src/ldump.c"
 var $8=$3; //@line 166 "lib/lua-5.2.3/src/ldump.c"
 var $9=(($D+4)|0); //@line 166 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($9)>>2)]=$8; //@line 166 "lib/lua-5.2.3/src/ldump.c"
 var $10=$4; //@line 167 "lib/lua-5.2.3/src/ldump.c"
 var $11=(($D+8)|0); //@line 167 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($11)>>2)]=$10; //@line 167 "lib/lua-5.2.3/src/ldump.c"
 var $12=$5; //@line 168 "lib/lua-5.2.3/src/ldump.c"
 var $13=(($D+12)|0); //@line 168 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($13)>>2)]=$12; //@line 168 "lib/lua-5.2.3/src/ldump.c"
 var $14=(($D+16)|0); //@line 169 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($14)>>2)]=0; //@line 169 "lib/lua-5.2.3/src/ldump.c"
 _DumpHeader($D); //@line 170 "lib/lua-5.2.3/src/ldump.c"
 var $15=$2; //@line 171 "lib/lua-5.2.3/src/ldump.c"
 _DumpFunction($15,$D); //@line 171 "lib/lua-5.2.3/src/ldump.c"
 var $16=(($D+16)|0); //@line 172 "lib/lua-5.2.3/src/ldump.c"
 var $17=HEAP32[(($16)>>2)]; //@line 172 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return $17; //@line 172 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpHeader($D){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $h=sp;
 $1=$D;
 var $2=(($h)|0); //@line 155 "lib/lua-5.2.3/src/ldump.c"
 _luaU_header($2); //@line 155 "lib/lua-5.2.3/src/ldump.c"
 var $3=(($h)|0); //@line 156 "lib/lua-5.2.3/src/ldump.c"
 var $4=$1; //@line 156 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($3,18,$4); //@line 156 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 157 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpFunction($f,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$f;
 $2=$D;
 var $3=$1; //@line 141 "lib/lua-5.2.3/src/ldump.c"
 var $4=(($3+64)|0); //@line 141 "lib/lua-5.2.3/src/ldump.c"
 var $5=HEAP32[(($4)>>2)]; //@line 141 "lib/lua-5.2.3/src/ldump.c"
 var $6=$2; //@line 141 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($5,$6); //@line 141 "lib/lua-5.2.3/src/ldump.c"
 var $7=$1; //@line 142 "lib/lua-5.2.3/src/ldump.c"
 var $8=(($7+68)|0); //@line 142 "lib/lua-5.2.3/src/ldump.c"
 var $9=HEAP32[(($8)>>2)]; //@line 142 "lib/lua-5.2.3/src/ldump.c"
 var $10=$2; //@line 142 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($9,$10); //@line 142 "lib/lua-5.2.3/src/ldump.c"
 var $11=$1; //@line 143 "lib/lua-5.2.3/src/ldump.c"
 var $12=(($11+76)|0); //@line 143 "lib/lua-5.2.3/src/ldump.c"
 var $13=HEAP8[($12)]; //@line 143 "lib/lua-5.2.3/src/ldump.c"
 var $14=($13&255); //@line 143 "lib/lua-5.2.3/src/ldump.c"
 var $15=$2; //@line 143 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($14,$15); //@line 143 "lib/lua-5.2.3/src/ldump.c"
 var $16=$1; //@line 144 "lib/lua-5.2.3/src/ldump.c"
 var $17=(($16+77)|0); //@line 144 "lib/lua-5.2.3/src/ldump.c"
 var $18=HEAP8[($17)]; //@line 144 "lib/lua-5.2.3/src/ldump.c"
 var $19=($18&255); //@line 144 "lib/lua-5.2.3/src/ldump.c"
 var $20=$2; //@line 144 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($19,$20); //@line 144 "lib/lua-5.2.3/src/ldump.c"
 var $21=$1; //@line 145 "lib/lua-5.2.3/src/ldump.c"
 var $22=(($21+78)|0); //@line 145 "lib/lua-5.2.3/src/ldump.c"
 var $23=HEAP8[($22)]; //@line 145 "lib/lua-5.2.3/src/ldump.c"
 var $24=($23&255); //@line 145 "lib/lua-5.2.3/src/ldump.c"
 var $25=$2; //@line 145 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($24,$25); //@line 145 "lib/lua-5.2.3/src/ldump.c"
 var $26=$1; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $27=(($26+12)|0); //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $28=HEAP32[(($27)>>2)]; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $29=$28; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $30=$1; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $31=(($30+48)|0); //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $32=HEAP32[(($31)>>2)]; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $33=$2; //@line 146 "lib/lua-5.2.3/src/ldump.c"
 _DumpVector($29,$32,4,$33); //@line 146 "lib/lua-5.2.3/src/ldump.c"
 var $34=$1; //@line 147 "lib/lua-5.2.3/src/ldump.c"
 var $35=$2; //@line 147 "lib/lua-5.2.3/src/ldump.c"
 _DumpConstants($34,$35); //@line 147 "lib/lua-5.2.3/src/ldump.c"
 var $36=$1; //@line 148 "lib/lua-5.2.3/src/ldump.c"
 var $37=$2; //@line 148 "lib/lua-5.2.3/src/ldump.c"
 _DumpUpvalues($36,$37); //@line 148 "lib/lua-5.2.3/src/ldump.c"
 var $38=$1; //@line 149 "lib/lua-5.2.3/src/ldump.c"
 var $39=$2; //@line 149 "lib/lua-5.2.3/src/ldump.c"
 _DumpDebug($38,$39); //@line 149 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 150 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpInt($x,$D){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1=sp;
 var $2;
 HEAP32[(($1)>>2)]=$x;
 $2=$D;
 var $3=$1; //@line 47 "lib/lua-5.2.3/src/ldump.c"
 var $4=$2; //@line 47 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($3,4,$4); //@line 47 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 48 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpChar($y,$D){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $x=sp;
 $1=$y;
 $2=$D;
 var $3=$1; //@line 41 "lib/lua-5.2.3/src/ldump.c"
 var $4=(($3)&255); //@line 41 "lib/lua-5.2.3/src/ldump.c"
 HEAP8[($x)]=$4; //@line 41 "lib/lua-5.2.3/src/ldump.c"
 var $5=$2; //@line 42 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($x,1,$5); //@line 42 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 43 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpVector($b,$n,$size,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$b;
 $2=$n;
 $3=$size;
 $4=$D;
 var $5=$2; //@line 57 "lib/lua-5.2.3/src/ldump.c"
 var $6=$4; //@line 57 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($5,$6); //@line 57 "lib/lua-5.2.3/src/ldump.c"
 var $7=$1; //@line 58 "lib/lua-5.2.3/src/ldump.c"
 var $8=$2; //@line 58 "lib/lua-5.2.3/src/ldump.c"
 var $9=$3; //@line 58 "lib/lua-5.2.3/src/ldump.c"
 var $10=(Math_imul($8,$9)|0); //@line 58 "lib/lua-5.2.3/src/ldump.c"
 var $11=$4; //@line 58 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($7,$10,$11); //@line 58 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 59 "lib/lua-5.2.3/src/ldump.c"
}


function _DumpConstants($f,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 var $o;
 $1=$f;
 $2=$D;
 var $3=$1; //@line 82 "lib/lua-5.2.3/src/ldump.c"
 var $4=(($3+44)|0); //@line 82 "lib/lua-5.2.3/src/ldump.c"
 var $5=HEAP32[(($4)>>2)]; //@line 82 "lib/lua-5.2.3/src/ldump.c"
 $n=$5; //@line 82 "lib/lua-5.2.3/src/ldump.c"
 var $6=$n; //@line 83 "lib/lua-5.2.3/src/ldump.c"
 var $7=$2; //@line 83 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($6,$7); //@line 83 "lib/lua-5.2.3/src/ldump.c"
 $i=0; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 label=2;break; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 case 2: 
 var $9=$i; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 var $10=$n; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 var $11=($9|0)<($10|0); //@line 84 "lib/lua-5.2.3/src/ldump.c"
 if($11){label=3;break;}else{label=11;break;} //@line 84 "lib/lua-5.2.3/src/ldump.c"
 case 3: 
 var $13=$i; //@line 86 "lib/lua-5.2.3/src/ldump.c"
 var $14=$1; //@line 86 "lib/lua-5.2.3/src/ldump.c"
 var $15=(($14+8)|0); //@line 86 "lib/lua-5.2.3/src/ldump.c"
 var $16=HEAP32[(($15)>>2)]; //@line 86 "lib/lua-5.2.3/src/ldump.c"
 var $17=(($16+($13<<4))|0); //@line 86 "lib/lua-5.2.3/src/ldump.c"
 $o=$17; //@line 86 "lib/lua-5.2.3/src/ldump.c"
 var $18=$o; //@line 87 "lib/lua-5.2.3/src/ldump.c"
 var $19=(($18+8)|0); //@line 87 "lib/lua-5.2.3/src/ldump.c"
 var $20=HEAP32[(($19)>>2)]; //@line 87 "lib/lua-5.2.3/src/ldump.c"
 var $21=$20&15; //@line 87 "lib/lua-5.2.3/src/ldump.c"
 var $22=$2; //@line 87 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($21,$22); //@line 87 "lib/lua-5.2.3/src/ldump.c"
 var $23=$o; //@line 88 "lib/lua-5.2.3/src/ldump.c"
 var $24=(($23+8)|0); //@line 88 "lib/lua-5.2.3/src/ldump.c"
 var $25=HEAP32[(($24)>>2)]; //@line 88 "lib/lua-5.2.3/src/ldump.c"
 var $26=$25&15; //@line 88 "lib/lua-5.2.3/src/ldump.c"
 if(($26|0)==0){ label=4;break;}else if(($26|0)==1){ label=5;break;}else if(($26|0)==3){ label=6;break;}else if(($26|0)==4){ label=7;break;}else{label=8;break;}
 case 4: 
 label=9;break; //@line 91 "lib/lua-5.2.3/src/ldump.c"
 case 5: 
 var $29=$o; //@line 93 "lib/lua-5.2.3/src/ldump.c"
 var $30=(($29)|0); //@line 93 "lib/lua-5.2.3/src/ldump.c"
 var $31=$30; //@line 93 "lib/lua-5.2.3/src/ldump.c"
 var $32=HEAP32[(($31)>>2)]; //@line 93 "lib/lua-5.2.3/src/ldump.c"
 var $33=$2; //@line 93 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($32,$33); //@line 93 "lib/lua-5.2.3/src/ldump.c"
 label=9;break; //@line 94 "lib/lua-5.2.3/src/ldump.c"
 case 6: 
 var $35=$o; //@line 96 "lib/lua-5.2.3/src/ldump.c"
 var $36=(($35)|0); //@line 96 "lib/lua-5.2.3/src/ldump.c"
 var $37=$36; //@line 96 "lib/lua-5.2.3/src/ldump.c"
 var $38=HEAPF64[(($37)>>3)]; //@line 96 "lib/lua-5.2.3/src/ldump.c"
 var $39=$2; //@line 96 "lib/lua-5.2.3/src/ldump.c"
 _DumpNumber($38,$39); //@line 96 "lib/lua-5.2.3/src/ldump.c"
 label=9;break; //@line 97 "lib/lua-5.2.3/src/ldump.c"
 case 7: 
 var $41=$o; //@line 99 "lib/lua-5.2.3/src/ldump.c"
 var $42=(($41)|0); //@line 99 "lib/lua-5.2.3/src/ldump.c"
 var $43=$42; //@line 99 "lib/lua-5.2.3/src/ldump.c"
 var $44=HEAP32[(($43)>>2)]; //@line 99 "lib/lua-5.2.3/src/ldump.c"
 var $45=$44; //@line 99 "lib/lua-5.2.3/src/ldump.c"
 var $46=$2; //@line 99 "lib/lua-5.2.3/src/ldump.c"
 _DumpString($45,$46); //@line 99 "lib/lua-5.2.3/src/ldump.c"
 label=9;break; //@line 100 "lib/lua-5.2.3/src/ldump.c"
 case 8: 
 label=9;break; //@line 102 "lib/lua-5.2.3/src/ldump.c"
 case 9: 
 label=10;break; //@line 103 "lib/lua-5.2.3/src/ldump.c"
 case 10: 
 var $50=$i; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 var $51=((($50)+(1))|0); //@line 84 "lib/lua-5.2.3/src/ldump.c"
 $i=$51; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 label=2;break; //@line 84 "lib/lua-5.2.3/src/ldump.c"
 case 11: 
 var $53=$1; //@line 104 "lib/lua-5.2.3/src/ldump.c"
 var $54=(($53+56)|0); //@line 104 "lib/lua-5.2.3/src/ldump.c"
 var $55=HEAP32[(($54)>>2)]; //@line 104 "lib/lua-5.2.3/src/ldump.c"
 $n=$55; //@line 104 "lib/lua-5.2.3/src/ldump.c"
 var $56=$n; //@line 105 "lib/lua-5.2.3/src/ldump.c"
 var $57=$2; //@line 105 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($56,$57); //@line 105 "lib/lua-5.2.3/src/ldump.c"
 $i=0; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 label=12;break; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 case 12: 
 var $59=$i; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $60=$n; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $61=($59|0)<($60|0); //@line 106 "lib/lua-5.2.3/src/ldump.c"
 if($61){label=13;break;}else{label=15;break;} //@line 106 "lib/lua-5.2.3/src/ldump.c"
 case 13: 
 var $63=$i; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $64=$1; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $65=(($64+16)|0); //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $66=HEAP32[(($65)>>2)]; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $67=(($66+($63<<2))|0); //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $68=HEAP32[(($67)>>2)]; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $69=$2; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 _DumpFunction($68,$69); //@line 106 "lib/lua-5.2.3/src/ldump.c"
 label=14;break; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 case 14: 
 var $71=$i; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 var $72=((($71)+(1))|0); //@line 106 "lib/lua-5.2.3/src/ldump.c"
 $i=$72; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 label=12;break; //@line 106 "lib/lua-5.2.3/src/ldump.c"
 case 15: 
 STACKTOP=sp;return; //@line 107 "lib/lua-5.2.3/src/ldump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _DumpUpvalues($f,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 $1=$f;
 $2=$D;
 var $3=$1; //@line 111 "lib/lua-5.2.3/src/ldump.c"
 var $4=(($3+40)|0); //@line 111 "lib/lua-5.2.3/src/ldump.c"
 var $5=HEAP32[(($4)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldump.c"
 $n=$5; //@line 111 "lib/lua-5.2.3/src/ldump.c"
 var $6=$n; //@line 112 "lib/lua-5.2.3/src/ldump.c"
 var $7=$2; //@line 112 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($6,$7); //@line 112 "lib/lua-5.2.3/src/ldump.c"
 $i=0; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 label=2;break; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 case 2: 
 var $9=$i; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 var $10=$n; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 var $11=($9|0)<($10|0); //@line 113 "lib/lua-5.2.3/src/ldump.c"
 if($11){label=3;break;}else{label=5;break;} //@line 113 "lib/lua-5.2.3/src/ldump.c"
 case 3: 
 var $13=$i; //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $14=$1; //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $15=(($14+28)|0); //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $16=HEAP32[(($15)>>2)]; //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $17=(($16+($13<<3))|0); //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $18=(($17+4)|0); //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $19=HEAP8[($18)]; //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $20=($19&255); //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $21=$2; //@line 115 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($20,$21); //@line 115 "lib/lua-5.2.3/src/ldump.c"
 var $22=$i; //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $23=$1; //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $24=(($23+28)|0); //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $25=HEAP32[(($24)>>2)]; //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $26=(($25+($22<<3))|0); //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $27=(($26+5)|0); //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $28=HEAP8[($27)]; //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $29=($28&255); //@line 116 "lib/lua-5.2.3/src/ldump.c"
 var $30=$2; //@line 116 "lib/lua-5.2.3/src/ldump.c"
 _DumpChar($29,$30); //@line 116 "lib/lua-5.2.3/src/ldump.c"
 label=4;break; //@line 117 "lib/lua-5.2.3/src/ldump.c"
 case 4: 
 var $32=$i; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 var $33=((($32)+(1))|0); //@line 113 "lib/lua-5.2.3/src/ldump.c"
 $i=$33; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 label=2;break; //@line 113 "lib/lua-5.2.3/src/ldump.c"
 case 5: 
 STACKTOP=sp;return; //@line 118 "lib/lua-5.2.3/src/ldump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _DumpDebug($f,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 $1=$f;
 $2=$D;
 var $3=$2; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $4=(($3+12)|0); //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $5=HEAP32[(($4)>>2)]; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $6=($5|0)!=0; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 if($6){label=2;break;}else{label=3;break;} //@line 123 "lib/lua-5.2.3/src/ldump.c"
 case 2: 
 var $13=0;label=4;break; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 case 3: 
 var $9=$1; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $10=(($9+36)|0); //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $13=$11;label=4;break; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 case 4: 
 var $13; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $14=$2; //@line 123 "lib/lua-5.2.3/src/ldump.c"
 _DumpString($13,$14); //@line 123 "lib/lua-5.2.3/src/ldump.c"
 var $15=$2; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $16=(($15+12)|0); //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $17=HEAP32[(($16)>>2)]; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $18=($17|0)!=0; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 if($18){label=5;break;}else{label=6;break;} //@line 124 "lib/lua-5.2.3/src/ldump.c"
 case 5: 
 var $25=0;label=7;break; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 case 6: 
 var $21=$1; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $22=(($21+52)|0); //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $23=HEAP32[(($22)>>2)]; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $25=$23;label=7;break; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 case 7: 
 var $25; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 $n=$25; //@line 124 "lib/lua-5.2.3/src/ldump.c"
 var $26=$1; //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $27=(($26+20)|0); //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $28=HEAP32[(($27)>>2)]; //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $29=$28; //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $30=$n; //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $31=$2; //@line 125 "lib/lua-5.2.3/src/ldump.c"
 _DumpVector($29,$30,4,$31); //@line 125 "lib/lua-5.2.3/src/ldump.c"
 var $32=$2; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $33=(($32+12)|0); //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $34=HEAP32[(($33)>>2)]; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $35=($34|0)!=0; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 if($35){label=8;break;}else{label=9;break;} //@line 126 "lib/lua-5.2.3/src/ldump.c"
 case 8: 
 var $42=0;label=10;break; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 case 9: 
 var $38=$1; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $39=(($38+60)|0); //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $40=HEAP32[(($39)>>2)]; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $42=$40;label=10;break; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 case 10: 
 var $42; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 $n=$42; //@line 126 "lib/lua-5.2.3/src/ldump.c"
 var $43=$n; //@line 127 "lib/lua-5.2.3/src/ldump.c"
 var $44=$2; //@line 127 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($43,$44); //@line 127 "lib/lua-5.2.3/src/ldump.c"
 $i=0; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 label=11;break; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 case 11: 
 var $46=$i; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 var $47=$n; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 var $48=($46|0)<($47|0); //@line 128 "lib/lua-5.2.3/src/ldump.c"
 if($48){label=12;break;}else{label=14;break;} //@line 128 "lib/lua-5.2.3/src/ldump.c"
 case 12: 
 var $50=$i; //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $51=$1; //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $52=(($51+24)|0); //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $53=HEAP32[(($52)>>2)]; //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $54=(($53+((($50)*(12))&-1))|0); //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $55=(($54)|0); //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $56=HEAP32[(($55)>>2)]; //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $57=$2; //@line 130 "lib/lua-5.2.3/src/ldump.c"
 _DumpString($56,$57); //@line 130 "lib/lua-5.2.3/src/ldump.c"
 var $58=$i; //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $59=$1; //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $60=(($59+24)|0); //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $61=HEAP32[(($60)>>2)]; //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $62=(($61+((($58)*(12))&-1))|0); //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $63=(($62+4)|0); //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $64=HEAP32[(($63)>>2)]; //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $65=$2; //@line 131 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($64,$65); //@line 131 "lib/lua-5.2.3/src/ldump.c"
 var $66=$i; //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $67=$1; //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $68=(($67+24)|0); //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $69=HEAP32[(($68)>>2)]; //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $70=(($69+((($66)*(12))&-1))|0); //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $71=(($70+8)|0); //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $72=HEAP32[(($71)>>2)]; //@line 132 "lib/lua-5.2.3/src/ldump.c"
 var $73=$2; //@line 132 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($72,$73); //@line 132 "lib/lua-5.2.3/src/ldump.c"
 label=13;break; //@line 133 "lib/lua-5.2.3/src/ldump.c"
 case 13: 
 var $75=$i; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 var $76=((($75)+(1))|0); //@line 128 "lib/lua-5.2.3/src/ldump.c"
 $i=$76; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 label=11;break; //@line 128 "lib/lua-5.2.3/src/ldump.c"
 case 14: 
 var $78=$2; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $79=(($78+12)|0); //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $80=HEAP32[(($79)>>2)]; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $81=($80|0)!=0; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 if($81){label=15;break;}else{label=16;break;} //@line 134 "lib/lua-5.2.3/src/ldump.c"
 case 15: 
 var $88=0;label=17;break; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 case 16: 
 var $84=$1; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $85=(($84+40)|0); //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $86=HEAP32[(($85)>>2)]; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $88=$86;label=17;break; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 case 17: 
 var $88; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 $n=$88; //@line 134 "lib/lua-5.2.3/src/ldump.c"
 var $89=$n; //@line 135 "lib/lua-5.2.3/src/ldump.c"
 var $90=$2; //@line 135 "lib/lua-5.2.3/src/ldump.c"
 _DumpInt($89,$90); //@line 135 "lib/lua-5.2.3/src/ldump.c"
 $i=0; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 label=18;break; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 case 18: 
 var $92=$i; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $93=$n; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $94=($92|0)<($93|0); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 if($94){label=19;break;}else{label=21;break;} //@line 136 "lib/lua-5.2.3/src/ldump.c"
 case 19: 
 var $96=$i; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $97=$1; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $98=(($97+28)|0); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $99=HEAP32[(($98)>>2)]; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $100=(($99+($96<<3))|0); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $101=(($100)|0); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $102=HEAP32[(($101)>>2)]; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $103=$2; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 _DumpString($102,$103); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 label=20;break; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 case 20: 
 var $105=$i; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 var $106=((($105)+(1))|0); //@line 136 "lib/lua-5.2.3/src/ldump.c"
 $i=$106; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 label=18;break; //@line 136 "lib/lua-5.2.3/src/ldump.c"
 case 21: 
 STACKTOP=sp;return; //@line 137 "lib/lua-5.2.3/src/ldump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _DumpString($s,$D){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $size=sp;
 var $size1=(sp)+(8);
 $1=$s;
 $2=$D;
 var $3=$1; //@line 63 "lib/lua-5.2.3/src/ldump.c"
 var $4=($3|0)==0; //@line 63 "lib/lua-5.2.3/src/ldump.c"
 if($4){label=2;break;}else{label=3;break;} //@line 63 "lib/lua-5.2.3/src/ldump.c"
 case 2: 
 HEAP32[(($size)>>2)]=0; //@line 65 "lib/lua-5.2.3/src/ldump.c"
 var $6=$size; //@line 66 "lib/lua-5.2.3/src/ldump.c"
 var $7=$2; //@line 66 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($6,4,$7); //@line 66 "lib/lua-5.2.3/src/ldump.c"
 label=4;break; //@line 67 "lib/lua-5.2.3/src/ldump.c"
 case 3: 
 var $9=$1; //@line 70 "lib/lua-5.2.3/src/ldump.c"
 var $10=$9; //@line 70 "lib/lua-5.2.3/src/ldump.c"
 var $11=(($10+12)|0); //@line 70 "lib/lua-5.2.3/src/ldump.c"
 var $12=HEAP32[(($11)>>2)]; //@line 70 "lib/lua-5.2.3/src/ldump.c"
 var $13=((($12)+(1))|0); //@line 70 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($size1)>>2)]=$13; //@line 70 "lib/lua-5.2.3/src/ldump.c"
 var $14=$size1; //@line 71 "lib/lua-5.2.3/src/ldump.c"
 var $15=$2; //@line 71 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($14,4,$15); //@line 71 "lib/lua-5.2.3/src/ldump.c"
 var $16=$1; //@line 72 "lib/lua-5.2.3/src/ldump.c"
 var $17=(($16+16)|0); //@line 72 "lib/lua-5.2.3/src/ldump.c"
 var $18=$17; //@line 72 "lib/lua-5.2.3/src/ldump.c"
 var $19=HEAP32[(($size1)>>2)]; //@line 72 "lib/lua-5.2.3/src/ldump.c"
 var $20=$19; //@line 72 "lib/lua-5.2.3/src/ldump.c"
 var $21=$2; //@line 72 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($18,$20,$21); //@line 72 "lib/lua-5.2.3/src/ldump.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 74 "lib/lua-5.2.3/src/ldump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _DumpBlock($b,$size,$D){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$b;
 $2=$size;
 $3=$D;
 var $4=$3; //@line 31 "lib/lua-5.2.3/src/ldump.c"
 var $5=(($4+16)|0); //@line 31 "lib/lua-5.2.3/src/ldump.c"
 var $6=HEAP32[(($5)>>2)]; //@line 31 "lib/lua-5.2.3/src/ldump.c"
 var $7=($6|0)==0; //@line 31 "lib/lua-5.2.3/src/ldump.c"
 if($7){label=2;break;}else{label=3;break;} //@line 31 "lib/lua-5.2.3/src/ldump.c"
 case 2: 
 var $9=$3; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $10=(($9+4)|0); //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $12=$3; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $13=(($12)|0); //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $14=HEAP32[(($13)>>2)]; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $15=$1; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $16=$2; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $17=$3; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $18=(($17+8)|0); //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $19=HEAP32[(($18)>>2)]; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $20=FUNCTION_TABLE[$11]($14,$15,$16,$19); //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $21=$3; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 var $22=(($21+16)|0); //@line 34 "lib/lua-5.2.3/src/ldump.c"
 HEAP32[(($22)>>2)]=$20; //@line 34 "lib/lua-5.2.3/src/ldump.c"
 label=3;break; //@line 36 "lib/lua-5.2.3/src/ldump.c"
 case 3: 
 STACKTOP=sp;return; //@line 37 "lib/lua-5.2.3/src/ldump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _DumpNumber($x,$D){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1=sp;
 var $2;
 HEAPF64[(($1)>>3)]=$x;
 $2=$D;
 var $3=$1; //@line 52 "lib/lua-5.2.3/src/ldump.c"
 var $4=$2; //@line 52 "lib/lua-5.2.3/src/ldump.c"
 _DumpBlock($3,8,$4); //@line 52 "lib/lua-5.2.3/src/ldump.c"
 STACKTOP=sp;return; //@line 53 "lib/lua-5.2.3/src/ldump.c"
}


function _luaX_init($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $i;
 var $ts;
 $1=$L;
 $i=0; //@line 67 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 67 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $3=$i; //@line 67 "lib/lua-5.2.3/src/llex.c"
 var $4=($3|0)<22; //@line 67 "lib/lua-5.2.3/src/llex.c"
 if($4){label=3;break;}else{label=5;break;} //@line 67 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $6=$1; //@line 68 "lib/lua-5.2.3/src/llex.c"
 var $7=$i; //@line 68 "lib/lua-5.2.3/src/llex.c"
 var $8=((1080+($7<<2))|0); //@line 68 "lib/lua-5.2.3/src/llex.c"
 var $9=HEAP32[(($8)>>2)]; //@line 68 "lib/lua-5.2.3/src/llex.c"
 var $10=_luaS_new($6,$9); //@line 68 "lib/lua-5.2.3/src/llex.c"
 $ts=$10; //@line 68 "lib/lua-5.2.3/src/llex.c"
 var $11=$ts; //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $12=$11; //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $13=(($12+5)|0); //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $14=HEAP8[($13)]; //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $15=($14&255); //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $16=$15|32; //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $17=(($16)&255); //@line 69 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($13)]=$17; //@line 69 "lib/lua-5.2.3/src/llex.c"
 var $18=$i; //@line 70 "lib/lua-5.2.3/src/llex.c"
 var $19=((($18)+(1))|0); //@line 70 "lib/lua-5.2.3/src/llex.c"
 var $20=(($19)&255); //@line 70 "lib/lua-5.2.3/src/llex.c"
 var $21=$ts; //@line 70 "lib/lua-5.2.3/src/llex.c"
 var $22=$21; //@line 70 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+6)|0); //@line 70 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($23)]=$20; //@line 70 "lib/lua-5.2.3/src/llex.c"
 label=4;break; //@line 71 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $25=$i; //@line 67 "lib/lua-5.2.3/src/llex.c"
 var $26=((($25)+(1))|0); //@line 67 "lib/lua-5.2.3/src/llex.c"
 $i=$26; //@line 67 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 67 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 STACKTOP=sp;return; //@line 72 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaX_token2str($ls,$token){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $s;
 $2=$ls;
 $3=$token;
 var $4=$3; //@line 76 "lib/lua-5.2.3/src/llex.c"
 var $5=($4|0)<257; //@line 76 "lib/lua-5.2.3/src/llex.c"
 if($5){label=2;break;}else{label=6;break;} //@line 76 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $7=$3; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $8=((($7)+(1))|0); //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $9=((800+$8)|0); //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $10=HEAP8[($9)]; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $11=($10&255); //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $12=$11&4; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $13=($12|0)!=0; //@line 78 "lib/lua-5.2.3/src/llex.c"
 if($13){label=3;break;}else{label=4;break;} //@line 78 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $15=$2; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+52)|0); //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP32[(($16)>>2)]; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $18=$3; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $19=_luaO_pushfstring($17,5320,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$18,tempVarArgs)); STACKTOP=tempVarArgs; //@line 78 "lib/lua-5.2.3/src/llex.c"
 var $27=$19;label=5;break; //@line 78 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $21=$2; //@line 79 "lib/lua-5.2.3/src/llex.c"
 var $22=(($21+52)|0); //@line 79 "lib/lua-5.2.3/src/llex.c"
 var $23=HEAP32[(($22)>>2)]; //@line 79 "lib/lua-5.2.3/src/llex.c"
 var $24=$3; //@line 79 "lib/lua-5.2.3/src/llex.c"
 var $25=_luaO_pushfstring($23,13848,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$24,tempVarArgs)); STACKTOP=tempVarArgs; //@line 79 "lib/lua-5.2.3/src/llex.c"
 var $27=$25;label=5;break; //@line 79 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $27; //@line 79 "lib/lua-5.2.3/src/llex.c"
 $1=$27; //@line 79 "lib/lua-5.2.3/src/llex.c"
 label=9;break; //@line 79 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $29=$3; //@line 82 "lib/lua-5.2.3/src/llex.c"
 var $30=((($29)-(257))|0); //@line 82 "lib/lua-5.2.3/src/llex.c"
 var $31=((1080+($30<<2))|0); //@line 82 "lib/lua-5.2.3/src/llex.c"
 var $32=HEAP32[(($31)>>2)]; //@line 82 "lib/lua-5.2.3/src/llex.c"
 $s=$32; //@line 82 "lib/lua-5.2.3/src/llex.c"
 var $33=$3; //@line 83 "lib/lua-5.2.3/src/llex.c"
 var $34=($33|0)<286; //@line 83 "lib/lua-5.2.3/src/llex.c"
 if($34){label=7;break;}else{label=8;break;} //@line 83 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $36=$2; //@line 84 "lib/lua-5.2.3/src/llex.c"
 var $37=(($36+52)|0); //@line 84 "lib/lua-5.2.3/src/llex.c"
 var $38=HEAP32[(($37)>>2)]; //@line 84 "lib/lua-5.2.3/src/llex.c"
 var $39=$s; //@line 84 "lib/lua-5.2.3/src/llex.c"
 var $40=_luaO_pushfstring($38,10440,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$39,tempVarArgs)); STACKTOP=tempVarArgs; //@line 84 "lib/lua-5.2.3/src/llex.c"
 $1=$40; //@line 84 "lib/lua-5.2.3/src/llex.c"
 label=9;break; //@line 84 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $42=$s; //@line 86 "lib/lua-5.2.3/src/llex.c"
 $1=$42; //@line 86 "lib/lua-5.2.3/src/llex.c"
 label=9;break; //@line 86 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $44=$1; //@line 88 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $44; //@line 88 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaX_syntaxerror($ls,$msg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$msg;
 var $3=$1; //@line 115 "lib/lua-5.2.3/src/llex.c"
 var $4=$2; //@line 115 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 115 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5+16)|0); //@line 115 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6)|0); //@line 115 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 115 "lib/lua-5.2.3/src/llex.c"
 _lexerror($3,$4,$8); //@line 115 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 115 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 116 "lib/lua-5.2.3/src/llex.c"
}


function _lexerror($ls,$msg,$token){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $buff=sp;
 $1=$ls;
 $2=$msg;
 $3=$token;
 var $4=(($buff)|0); //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5+68)|0); //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $7=HEAP32[(($6)>>2)]; //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+16)|0); //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $9=$8; //@line 106 "lib/lua-5.2.3/src/llex.c"
 _luaO_chunkid($4,$9,60); //@line 106 "lib/lua-5.2.3/src/llex.c"
 var $10=$1; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10+52)|0); //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $13=(($buff)|0); //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $14=$1; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $15=(($14+4)|0); //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $16=HEAP32[(($15)>>2)]; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $17=$2; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $18=_luaO_pushfstring($12,12720,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$13,HEAP32[(((tempVarArgs)+(8))>>2)]=$16,HEAP32[(((tempVarArgs)+(16))>>2)]=$17,tempVarArgs)); STACKTOP=tempVarArgs; //@line 107 "lib/lua-5.2.3/src/llex.c"
 $2=$18; //@line 107 "lib/lua-5.2.3/src/llex.c"
 var $19=$3; //@line 108 "lib/lua-5.2.3/src/llex.c"
 var $20=($19|0)!=0; //@line 108 "lib/lua-5.2.3/src/llex.c"
 if($20){label=2;break;}else{label=3;break;} //@line 108 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $22=$1; //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+52)|0); //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $24=HEAP32[(($23)>>2)]; //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $25=$2; //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $26=$1; //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $27=$3; //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $28=_txtToken($26,$27); //@line 109 "lib/lua-5.2.3/src/llex.c"
 var $29=_luaO_pushfstring($24,12464,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$25,HEAP32[(((tempVarArgs)+(8))>>2)]=$28,tempVarArgs)); STACKTOP=tempVarArgs; //@line 109 "lib/lua-5.2.3/src/llex.c"
 label=3;break; //@line 109 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $31=$1; //@line 110 "lib/lua-5.2.3/src/llex.c"
 var $32=(($31+52)|0); //@line 110 "lib/lua-5.2.3/src/llex.c"
 var $33=HEAP32[(($32)>>2)]; //@line 110 "lib/lua-5.2.3/src/llex.c"
 _luaD_throw($33,3); //@line 110 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 110 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 111 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaX_newstring($ls,$str,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $L;
 var $o;
 var $ts;
 var $io;
 var $x_;
 var $io1;
 $1=$ls;
 $2=$str;
 $3=$l;
 var $4=$1; //@line 125 "lib/lua-5.2.3/src/llex.c"
 var $5=(($4+52)|0); //@line 125 "lib/lua-5.2.3/src/llex.c"
 var $6=HEAP32[(($5)>>2)]; //@line 125 "lib/lua-5.2.3/src/llex.c"
 $L=$6; //@line 125 "lib/lua-5.2.3/src/llex.c"
 var $7=$L; //@line 127 "lib/lua-5.2.3/src/llex.c"
 var $8=$2; //@line 127 "lib/lua-5.2.3/src/llex.c"
 var $9=$3; //@line 127 "lib/lua-5.2.3/src/llex.c"
 var $10=_luaS_newlstr($7,$8,$9); //@line 127 "lib/lua-5.2.3/src/llex.c"
 $ts=$10; //@line 127 "lib/lua-5.2.3/src/llex.c"
 var $11=$L; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $12=(($11+8)|0); //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $13=HEAP32[(($12)>>2)]; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $14=(($13+16)|0); //@line 128 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($12)>>2)]=$14; //@line 128 "lib/lua-5.2.3/src/llex.c"
 $io=$13; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $15=$ts; //@line 128 "lib/lua-5.2.3/src/llex.c"
 $x_=$15; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $16=$x_; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $17=$16; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $18=$io; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18)|0); //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $20=$19; //@line 128 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($20)>>2)]=$17; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $21=$x_; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $22=$21; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+4)|0); //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $24=HEAP8[($23)]; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $25=($24&255); //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $26=$25|64; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $27=$io; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $28=(($27+8)|0); //@line 128 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($28)>>2)]=$26; //@line 128 "lib/lua-5.2.3/src/llex.c"
 var $29=$L; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $30=$1; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30+48)|0); //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $32=HEAP32[(($31)>>2)]; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $33=(($32+4)|0); //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $34=HEAP32[(($33)>>2)]; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $35=$L; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $36=(($35+8)|0); //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $37=HEAP32[(($36)>>2)]; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $38=((($37)-(16))|0); //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $39=_luaH_set($29,$34,$38); //@line 129 "lib/lua-5.2.3/src/llex.c"
 $o=$39; //@line 129 "lib/lua-5.2.3/src/llex.c"
 var $40=$o; //@line 130 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40+8)|0); //@line 130 "lib/lua-5.2.3/src/llex.c"
 var $42=HEAP32[(($41)>>2)]; //@line 130 "lib/lua-5.2.3/src/llex.c"
 var $43=($42|0)==0; //@line 130 "lib/lua-5.2.3/src/llex.c"
 if($43){label=2;break;}else{label=5;break;} //@line 130 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $45=$o; //@line 133 "lib/lua-5.2.3/src/llex.c"
 $io1=$45; //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $46=$io1; //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $47=(($46)|0); //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $48=$47; //@line 133 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($48)>>2)]=1; //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $49=$io1; //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $50=(($49+8)|0); //@line 133 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($50)>>2)]=1; //@line 133 "lib/lua-5.2.3/src/llex.c"
 var $51=$L; //@line 134 "lib/lua-5.2.3/src/llex.c"
 var $52=(($51+12)|0); //@line 134 "lib/lua-5.2.3/src/llex.c"
 var $53=HEAP32[(($52)>>2)]; //@line 134 "lib/lua-5.2.3/src/llex.c"
 var $54=(($53+12)|0); //@line 134 "lib/lua-5.2.3/src/llex.c"
 var $55=HEAP32[(($54)>>2)]; //@line 134 "lib/lua-5.2.3/src/llex.c"
 var $56=($55|0)>0; //@line 134 "lib/lua-5.2.3/src/llex.c"
 if($56){label=3;break;}else{label=4;break;} //@line 134 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $58=$L; //@line 134 "lib/lua-5.2.3/src/llex.c"
 _luaC_step($58); //@line 134 "lib/lua-5.2.3/src/llex.c"
 label=4;break; //@line 134 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 label=6;break; //@line 135 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $61=$o; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $62=$61; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $63=(($62)|0); //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $64=$63; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $65=(($64+16)|0); //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $66=$65; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $67=(($66)|0); //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $68=$67; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $69=HEAP32[(($68)>>2)]; //@line 137 "lib/lua-5.2.3/src/llex.c"
 var $70=$69; //@line 137 "lib/lua-5.2.3/src/llex.c"
 $ts=$70; //@line 137 "lib/lua-5.2.3/src/llex.c"
 label=6;break;
 case 6: 
 var $72=$L; //@line 139 "lib/lua-5.2.3/src/llex.c"
 var $73=(($72+8)|0); //@line 139 "lib/lua-5.2.3/src/llex.c"
 var $74=HEAP32[(($73)>>2)]; //@line 139 "lib/lua-5.2.3/src/llex.c"
 var $75=((($74)-(16))|0); //@line 139 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($73)>>2)]=$75; //@line 139 "lib/lua-5.2.3/src/llex.c"
 var $76=$ts; //@line 140 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $76; //@line 140 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaX_setinput($L,$ls,$z,$source,$firstchar){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$L;
 $2=$ls;
 $3=$z;
 $4=$source;
 $5=$firstchar;
 var $6=$2; //@line 161 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6+76)|0); //@line 161 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($7)]=46; //@line 161 "lib/lua-5.2.3/src/llex.c"
 var $8=$1; //@line 162 "lib/lua-5.2.3/src/llex.c"
 var $9=$2; //@line 162 "lib/lua-5.2.3/src/llex.c"
 var $10=(($9+52)|0); //@line 162 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($10)>>2)]=$8; //@line 162 "lib/lua-5.2.3/src/llex.c"
 var $11=$5; //@line 163 "lib/lua-5.2.3/src/llex.c"
 var $12=$2; //@line 163 "lib/lua-5.2.3/src/llex.c"
 var $13=(($12)|0); //@line 163 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($13)>>2)]=$11; //@line 163 "lib/lua-5.2.3/src/llex.c"
 var $14=$2; //@line 164 "lib/lua-5.2.3/src/llex.c"
 var $15=(($14+32)|0); //@line 164 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15)|0); //@line 164 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($16)>>2)]=286; //@line 164 "lib/lua-5.2.3/src/llex.c"
 var $17=$3; //@line 165 "lib/lua-5.2.3/src/llex.c"
 var $18=$2; //@line 165 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18+56)|0); //@line 165 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($19)>>2)]=$17; //@line 165 "lib/lua-5.2.3/src/llex.c"
 var $20=$2; //@line 166 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20+48)|0); //@line 166 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($21)>>2)]=0; //@line 166 "lib/lua-5.2.3/src/llex.c"
 var $22=$2; //@line 167 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+4)|0); //@line 167 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($23)>>2)]=1; //@line 167 "lib/lua-5.2.3/src/llex.c"
 var $24=$2; //@line 168 "lib/lua-5.2.3/src/llex.c"
 var $25=(($24+8)|0); //@line 168 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($25)>>2)]=1; //@line 168 "lib/lua-5.2.3/src/llex.c"
 var $26=$4; //@line 169 "lib/lua-5.2.3/src/llex.c"
 var $27=$2; //@line 169 "lib/lua-5.2.3/src/llex.c"
 var $28=(($27+68)|0); //@line 169 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($28)>>2)]=$26; //@line 169 "lib/lua-5.2.3/src/llex.c"
 var $29=$1; //@line 170 "lib/lua-5.2.3/src/llex.c"
 var $30=_luaS_new($29,8112); //@line 170 "lib/lua-5.2.3/src/llex.c"
 var $31=$2; //@line 170 "lib/lua-5.2.3/src/llex.c"
 var $32=(($31+72)|0); //@line 170 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($32)>>2)]=$30; //@line 170 "lib/lua-5.2.3/src/llex.c"
 var $33=$2; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $34=(($33+72)|0); //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $35=HEAP32[(($34)>>2)]; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $36=$35; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $37=(($36+5)|0); //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $38=HEAP8[($37)]; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $39=($38&255); //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $40=$39|32; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40)&255); //@line 171 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($37)]=$41; //@line 171 "lib/lua-5.2.3/src/llex.c"
 var $42=$2; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $43=(($42+52)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $44=HEAP32[(($43)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $45=$2; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $46=(($45+60)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $47=HEAP32[(($46)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $48=(($47)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $49=HEAP32[(($48)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $50=$2; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $51=(($50+60)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $52=HEAP32[(($51)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $53=(($52+8)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $54=HEAP32[(($53)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $55=$54; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $56=_luaM_realloc_($44,$49,$55,32); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $57=$2; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $58=(($57+60)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $59=HEAP32[(($58)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $60=(($59)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($60)>>2)]=$56; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $61=$2; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $62=(($61+60)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $63=HEAP32[(($62)>>2)]; //@line 172 "lib/lua-5.2.3/src/llex.c"
 var $64=(($63+8)|0); //@line 172 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($64)>>2)]=32; //@line 172 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 173 "lib/lua-5.2.3/src/llex.c"
}


function _luaX_next($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$ls;
 var $2=$1; //@line 515 "lib/lua-5.2.3/src/llex.c"
 var $3=(($2+4)|0); //@line 515 "lib/lua-5.2.3/src/llex.c"
 var $4=HEAP32[(($3)>>2)]; //@line 515 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 515 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5+8)|0); //@line 515 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($6)>>2)]=$4; //@line 515 "lib/lua-5.2.3/src/llex.c"
 var $7=$1; //@line 516 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+32)|0); //@line 516 "lib/lua-5.2.3/src/llex.c"
 var $9=(($8)|0); //@line 516 "lib/lua-5.2.3/src/llex.c"
 var $10=HEAP32[(($9)>>2)]; //@line 516 "lib/lua-5.2.3/src/llex.c"
 var $11=($10|0)!=286; //@line 516 "lib/lua-5.2.3/src/llex.c"
 if($11){label=2;break;}else{label=3;break;} //@line 516 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $13=$1; //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $14=(($13+16)|0); //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $15=$1; //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+32)|0); //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $17=$14; //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $18=$16; //@line 517 "lib/lua-5.2.3/src/llex.c"
 assert(16 % 1 === 0);HEAP32[(($17)>>2)]=HEAP32[(($18)>>2)];HEAP32[((($17)+(4))>>2)]=HEAP32[((($18)+(4))>>2)];HEAP32[((($17)+(8))>>2)]=HEAP32[((($18)+(8))>>2)];HEAP32[((($17)+(12))>>2)]=HEAP32[((($18)+(12))>>2)]; //@line 517 "lib/lua-5.2.3/src/llex.c"
 var $19=$1; //@line 518 "lib/lua-5.2.3/src/llex.c"
 var $20=(($19+32)|0); //@line 518 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20)|0); //@line 518 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($21)>>2)]=286; //@line 518 "lib/lua-5.2.3/src/llex.c"
 label=4;break; //@line 519 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $23=$1; //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $24=$1; //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $25=(($24+16)|0); //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+8)|0); //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $27=_llex($23,$26); //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $28=$1; //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $29=(($28+16)|0); //@line 521 "lib/lua-5.2.3/src/llex.c"
 var $30=(($29)|0); //@line 521 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($30)>>2)]=$27; //@line 521 "lib/lua-5.2.3/src/llex.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 522 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _llex($ls,$seminfo){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $sep;
 var $sep1;
 var $ts;
 var $c;
 $2=$ls;
 $3=$seminfo;
 var $4=$2; //@line 402 "lib/lua-5.2.3/src/llex.c"
 var $5=(($4+60)|0); //@line 402 "lib/lua-5.2.3/src/llex.c"
 var $6=HEAP32[(($5)>>2)]; //@line 402 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6+4)|0); //@line 402 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($7)>>2)]=0; //@line 402 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 403 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $9=$2; //@line 404 "lib/lua-5.2.3/src/llex.c"
 var $10=(($9)|0); //@line 404 "lib/lua-5.2.3/src/llex.c"
 var $11=HEAP32[(($10)>>2)]; //@line 404 "lib/lua-5.2.3/src/llex.c"
 switch(($11|0)){case 10:case 13:{ label=3;break;}case 91:{ label=30;break;}case 61:{ label=35;break;}case 32:case 12:case 9:case 11:{ label=4;break;}case 60:{ label=44;break;}case 62:{ label=53;break;}case 126:{ label=62;break;}case 58:{ label=71;break;}case 45:{ label=8;break;}case 34:case 39:{ label=80;break;}case 46:{ label=81;break;}case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:{ label=92;break;}case -1:{ label=93;break;}default:{label=94;break;}}break;
 case 3: 
 var $13=$2; //@line 406 "lib/lua-5.2.3/src/llex.c"
 _inclinenumber($13); //@line 406 "lib/lua-5.2.3/src/llex.c"
 label=109;break; //@line 407 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $15=$2; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+56)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP32[(($16)>>2)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $18=(($17)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $19=HEAP32[(($18)>>2)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $20=((($19)-(1))|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($18)>>2)]=$20; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $21=($19>>>0)>0; //@line 410 "lib/lua-5.2.3/src/llex.c"
 if($21){label=5;break;}else{label=6;break;} //@line 410 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $23=$2; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $24=(($23+56)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $25=HEAP32[(($24)>>2)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+4)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $28=(($27+1)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($26)>>2)]=$28; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $29=HEAP8[($27)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $30=($29&255); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $37=$30;label=7;break; //@line 410 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $32=$2; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $33=(($32+56)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $34=HEAP32[(($33)>>2)]; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $35=_luaZ_fill($34); //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $37=$35;label=7;break; //@line 410 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $37; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $38=$2; //@line 410 "lib/lua-5.2.3/src/llex.c"
 var $39=(($38)|0); //@line 410 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($39)>>2)]=$37; //@line 410 "lib/lua-5.2.3/src/llex.c"
 label=109;break; //@line 411 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $41=$2; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $42=(($41+56)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $43=HEAP32[(($42)>>2)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $44=(($43)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $45=HEAP32[(($44)>>2)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $46=((($45)-(1))|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($44)>>2)]=$46; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $47=($45>>>0)>0; //@line 414 "lib/lua-5.2.3/src/llex.c"
 if($47){label=9;break;}else{label=10;break;} //@line 414 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $49=$2; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $50=(($49+56)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $51=HEAP32[(($50)>>2)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $52=(($51+4)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $53=HEAP32[(($52)>>2)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $54=(($53+1)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($52)>>2)]=$54; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $55=HEAP8[($53)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $56=($55&255); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $63=$56;label=11;break; //@line 414 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $58=$2; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $59=(($58+56)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $60=HEAP32[(($59)>>2)]; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $61=_luaZ_fill($60); //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $63=$61;label=11;break; //@line 414 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $63; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $64=$2; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $65=(($64)|0); //@line 414 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($65)>>2)]=$63; //@line 414 "lib/lua-5.2.3/src/llex.c"
 var $66=$2; //@line 415 "lib/lua-5.2.3/src/llex.c"
 var $67=(($66)|0); //@line 415 "lib/lua-5.2.3/src/llex.c"
 var $68=HEAP32[(($67)>>2)]; //@line 415 "lib/lua-5.2.3/src/llex.c"
 var $69=($68|0)!=45; //@line 415 "lib/lua-5.2.3/src/llex.c"
 if($69){label=12;break;}else{label=13;break;} //@line 415 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 $1=45; //@line 415 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 415 "lib/lua-5.2.3/src/llex.c"
 case 13: 
 var $72=$2; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $73=(($72+56)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $74=HEAP32[(($73)>>2)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $75=(($74)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $76=HEAP32[(($75)>>2)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $77=((($76)-(1))|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($75)>>2)]=$77; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $78=($76>>>0)>0; //@line 417 "lib/lua-5.2.3/src/llex.c"
 if($78){label=14;break;}else{label=15;break;} //@line 417 "lib/lua-5.2.3/src/llex.c"
 case 14: 
 var $80=$2; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $81=(($80+56)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $82=HEAP32[(($81)>>2)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $83=(($82+4)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $84=HEAP32[(($83)>>2)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $85=(($84+1)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($83)>>2)]=$85; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $86=HEAP8[($84)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $87=($86&255); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $94=$87;label=16;break; //@line 417 "lib/lua-5.2.3/src/llex.c"
 case 15: 
 var $89=$2; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $90=(($89+56)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $91=HEAP32[(($90)>>2)]; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $92=_luaZ_fill($91); //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $94=$92;label=16;break; //@line 417 "lib/lua-5.2.3/src/llex.c"
 case 16: 
 var $94; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $95=$2; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $96=(($95)|0); //@line 417 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($96)>>2)]=$94; //@line 417 "lib/lua-5.2.3/src/llex.c"
 var $97=$2; //@line 418 "lib/lua-5.2.3/src/llex.c"
 var $98=(($97)|0); //@line 418 "lib/lua-5.2.3/src/llex.c"
 var $99=HEAP32[(($98)>>2)]; //@line 418 "lib/lua-5.2.3/src/llex.c"
 var $100=($99|0)==91; //@line 418 "lib/lua-5.2.3/src/llex.c"
 if($100){label=17;break;}else{label=20;break;} //@line 418 "lib/lua-5.2.3/src/llex.c"
 case 17: 
 var $102=$2; //@line 419 "lib/lua-5.2.3/src/llex.c"
 var $103=_skip_sep($102); //@line 419 "lib/lua-5.2.3/src/llex.c"
 $sep=$103; //@line 419 "lib/lua-5.2.3/src/llex.c"
 var $104=$2; //@line 420 "lib/lua-5.2.3/src/llex.c"
 var $105=(($104+60)|0); //@line 420 "lib/lua-5.2.3/src/llex.c"
 var $106=HEAP32[(($105)>>2)]; //@line 420 "lib/lua-5.2.3/src/llex.c"
 var $107=(($106+4)|0); //@line 420 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($107)>>2)]=0; //@line 420 "lib/lua-5.2.3/src/llex.c"
 var $108=$sep; //@line 421 "lib/lua-5.2.3/src/llex.c"
 var $109=($108|0)>=0; //@line 421 "lib/lua-5.2.3/src/llex.c"
 if($109){label=18;break;}else{label=19;break;} //@line 421 "lib/lua-5.2.3/src/llex.c"
 case 18: 
 var $111=$2; //@line 422 "lib/lua-5.2.3/src/llex.c"
 var $112=$sep; //@line 422 "lib/lua-5.2.3/src/llex.c"
 _read_long_string($111,0,$112); //@line 422 "lib/lua-5.2.3/src/llex.c"
 var $113=$2; //@line 423 "lib/lua-5.2.3/src/llex.c"
 var $114=(($113+60)|0); //@line 423 "lib/lua-5.2.3/src/llex.c"
 var $115=HEAP32[(($114)>>2)]; //@line 423 "lib/lua-5.2.3/src/llex.c"
 var $116=(($115+4)|0); //@line 423 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($116)>>2)]=0; //@line 423 "lib/lua-5.2.3/src/llex.c"
 label=109;break; //@line 424 "lib/lua-5.2.3/src/llex.c"
 case 19: 
 label=20;break; //@line 426 "lib/lua-5.2.3/src/llex.c"
 case 20: 
 label=21;break; //@line 428 "lib/lua-5.2.3/src/llex.c"
 case 21: 
 var $120=$2; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $121=(($120)|0); //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $122=HEAP32[(($121)>>2)]; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $123=($122|0)==10; //@line 428 "lib/lua-5.2.3/src/llex.c"
 if($123){var $135=0;label=24;break;}else{label=22;break;} //@line 428 "lib/lua-5.2.3/src/llex.c"
 case 22: 
 var $125=$2; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $126=(($125)|0); //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $127=HEAP32[(($126)>>2)]; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $128=($127|0)==13; //@line 428 "lib/lua-5.2.3/src/llex.c"
 if($128){var $135=0;label=24;break;}else{label=23;break;} //@line 428 "lib/lua-5.2.3/src/llex.c"
 case 23: 
 var $130=$2; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $131=(($130)|0); //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $132=HEAP32[(($131)>>2)]; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $133=($132|0)!=-1; //@line 428 "lib/lua-5.2.3/src/llex.c"
 var $135=$133;label=24;break;
 case 24: 
 var $135;
 if($135){label=25;break;}else{label=29;break;}
 case 25: 
 var $137=$2; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $138=(($137+56)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $139=HEAP32[(($138)>>2)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $140=(($139)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $141=HEAP32[(($140)>>2)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $142=((($141)-(1))|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($140)>>2)]=$142; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $143=($141>>>0)>0; //@line 429 "lib/lua-5.2.3/src/llex.c"
 if($143){label=26;break;}else{label=27;break;} //@line 429 "lib/lua-5.2.3/src/llex.c"
 case 26: 
 var $145=$2; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $146=(($145+56)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $147=HEAP32[(($146)>>2)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $148=(($147+4)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $149=HEAP32[(($148)>>2)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $150=(($149+1)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($148)>>2)]=$150; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $151=HEAP8[($149)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $152=($151&255); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $159=$152;label=28;break; //@line 429 "lib/lua-5.2.3/src/llex.c"
 case 27: 
 var $154=$2; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $155=(($154+56)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $156=HEAP32[(($155)>>2)]; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $157=_luaZ_fill($156); //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $159=$157;label=28;break; //@line 429 "lib/lua-5.2.3/src/llex.c"
 case 28: 
 var $159; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $160=$2; //@line 429 "lib/lua-5.2.3/src/llex.c"
 var $161=(($160)|0); //@line 429 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($161)>>2)]=$159; //@line 429 "lib/lua-5.2.3/src/llex.c"
 label=21;break; //@line 429 "lib/lua-5.2.3/src/llex.c"
 case 29: 
 label=109;break; //@line 430 "lib/lua-5.2.3/src/llex.c"
 case 30: 
 var $164=$2; //@line 433 "lib/lua-5.2.3/src/llex.c"
 var $165=_skip_sep($164); //@line 433 "lib/lua-5.2.3/src/llex.c"
 $sep1=$165; //@line 433 "lib/lua-5.2.3/src/llex.c"
 var $166=$sep1; //@line 434 "lib/lua-5.2.3/src/llex.c"
 var $167=($166|0)>=0; //@line 434 "lib/lua-5.2.3/src/llex.c"
 if($167){label=31;break;}else{label=32;break;} //@line 434 "lib/lua-5.2.3/src/llex.c"
 case 31: 
 var $169=$2; //@line 435 "lib/lua-5.2.3/src/llex.c"
 var $170=$3; //@line 435 "lib/lua-5.2.3/src/llex.c"
 var $171=$sep1; //@line 435 "lib/lua-5.2.3/src/llex.c"
 _read_long_string($169,$170,$171); //@line 435 "lib/lua-5.2.3/src/llex.c"
 $1=289; //@line 436 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 436 "lib/lua-5.2.3/src/llex.c"
 case 32: 
 var $173=$sep1; //@line 438 "lib/lua-5.2.3/src/llex.c"
 var $174=($173|0)==-1; //@line 438 "lib/lua-5.2.3/src/llex.c"
 if($174){label=33;break;}else{label=34;break;} //@line 438 "lib/lua-5.2.3/src/llex.c"
 case 33: 
 $1=91; //@line 438 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 438 "lib/lua-5.2.3/src/llex.c"
 case 34: 
 var $177=$2; //@line 439 "lib/lua-5.2.3/src/llex.c"
 _lexerror($177,6296,289); //@line 439 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 439 "lib/lua-5.2.3/src/llex.c"
 case 35: 
 var $179=$2; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $180=(($179+56)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $181=HEAP32[(($180)>>2)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $182=(($181)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $183=HEAP32[(($182)>>2)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $184=((($183)-(1))|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($182)>>2)]=$184; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $185=($183>>>0)>0; //@line 442 "lib/lua-5.2.3/src/llex.c"
 if($185){label=36;break;}else{label=37;break;} //@line 442 "lib/lua-5.2.3/src/llex.c"
 case 36: 
 var $187=$2; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $188=(($187+56)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $189=HEAP32[(($188)>>2)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $190=(($189+4)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $191=HEAP32[(($190)>>2)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $192=(($191+1)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($190)>>2)]=$192; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $193=HEAP8[($191)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $194=($193&255); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $201=$194;label=38;break; //@line 442 "lib/lua-5.2.3/src/llex.c"
 case 37: 
 var $196=$2; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $197=(($196+56)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $198=HEAP32[(($197)>>2)]; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $199=_luaZ_fill($198); //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $201=$199;label=38;break; //@line 442 "lib/lua-5.2.3/src/llex.c"
 case 38: 
 var $201; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $202=$2; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $203=(($202)|0); //@line 442 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($203)>>2)]=$201; //@line 442 "lib/lua-5.2.3/src/llex.c"
 var $204=$2; //@line 443 "lib/lua-5.2.3/src/llex.c"
 var $205=(($204)|0); //@line 443 "lib/lua-5.2.3/src/llex.c"
 var $206=HEAP32[(($205)>>2)]; //@line 443 "lib/lua-5.2.3/src/llex.c"
 var $207=($206|0)!=61; //@line 443 "lib/lua-5.2.3/src/llex.c"
 if($207){label=39;break;}else{label=40;break;} //@line 443 "lib/lua-5.2.3/src/llex.c"
 case 39: 
 $1=61; //@line 443 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 443 "lib/lua-5.2.3/src/llex.c"
 case 40: 
 var $210=$2; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $211=(($210+56)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $212=HEAP32[(($211)>>2)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $213=(($212)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $214=HEAP32[(($213)>>2)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $215=((($214)-(1))|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($213)>>2)]=$215; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $216=($214>>>0)>0; //@line 444 "lib/lua-5.2.3/src/llex.c"
 if($216){label=41;break;}else{label=42;break;} //@line 444 "lib/lua-5.2.3/src/llex.c"
 case 41: 
 var $218=$2; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $219=(($218+56)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $220=HEAP32[(($219)>>2)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $221=(($220+4)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $222=HEAP32[(($221)>>2)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $223=(($222+1)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($221)>>2)]=$223; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $224=HEAP8[($222)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $225=($224&255); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $232=$225;label=43;break; //@line 444 "lib/lua-5.2.3/src/llex.c"
 case 42: 
 var $227=$2; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $228=(($227+56)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $229=HEAP32[(($228)>>2)]; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $230=_luaZ_fill($229); //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $232=$230;label=43;break; //@line 444 "lib/lua-5.2.3/src/llex.c"
 case 43: 
 var $232; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $233=$2; //@line 444 "lib/lua-5.2.3/src/llex.c"
 var $234=(($233)|0); //@line 444 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($234)>>2)]=$232; //@line 444 "lib/lua-5.2.3/src/llex.c"
 $1=281; //@line 444 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 444 "lib/lua-5.2.3/src/llex.c"
 case 44: 
 var $236=$2; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $237=(($236+56)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $238=HEAP32[(($237)>>2)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $239=(($238)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $240=HEAP32[(($239)>>2)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $241=((($240)-(1))|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($239)>>2)]=$241; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $242=($240>>>0)>0; //@line 447 "lib/lua-5.2.3/src/llex.c"
 if($242){label=45;break;}else{label=46;break;} //@line 447 "lib/lua-5.2.3/src/llex.c"
 case 45: 
 var $244=$2; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $245=(($244+56)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $246=HEAP32[(($245)>>2)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $247=(($246+4)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $248=HEAP32[(($247)>>2)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $249=(($248+1)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($247)>>2)]=$249; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $250=HEAP8[($248)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $251=($250&255); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $258=$251;label=47;break; //@line 447 "lib/lua-5.2.3/src/llex.c"
 case 46: 
 var $253=$2; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $254=(($253+56)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $255=HEAP32[(($254)>>2)]; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $256=_luaZ_fill($255); //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $258=$256;label=47;break; //@line 447 "lib/lua-5.2.3/src/llex.c"
 case 47: 
 var $258; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $259=$2; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $260=(($259)|0); //@line 447 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($260)>>2)]=$258; //@line 447 "lib/lua-5.2.3/src/llex.c"
 var $261=$2; //@line 448 "lib/lua-5.2.3/src/llex.c"
 var $262=(($261)|0); //@line 448 "lib/lua-5.2.3/src/llex.c"
 var $263=HEAP32[(($262)>>2)]; //@line 448 "lib/lua-5.2.3/src/llex.c"
 var $264=($263|0)!=61; //@line 448 "lib/lua-5.2.3/src/llex.c"
 if($264){label=48;break;}else{label=49;break;} //@line 448 "lib/lua-5.2.3/src/llex.c"
 case 48: 
 $1=60; //@line 448 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 448 "lib/lua-5.2.3/src/llex.c"
 case 49: 
 var $267=$2; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $268=(($267+56)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $269=HEAP32[(($268)>>2)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $270=(($269)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $271=HEAP32[(($270)>>2)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $272=((($271)-(1))|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($270)>>2)]=$272; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $273=($271>>>0)>0; //@line 449 "lib/lua-5.2.3/src/llex.c"
 if($273){label=50;break;}else{label=51;break;} //@line 449 "lib/lua-5.2.3/src/llex.c"
 case 50: 
 var $275=$2; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $276=(($275+56)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $277=HEAP32[(($276)>>2)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $278=(($277+4)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $279=HEAP32[(($278)>>2)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $280=(($279+1)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($278)>>2)]=$280; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $281=HEAP8[($279)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $282=($281&255); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $289=$282;label=52;break; //@line 449 "lib/lua-5.2.3/src/llex.c"
 case 51: 
 var $284=$2; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $285=(($284+56)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $286=HEAP32[(($285)>>2)]; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $287=_luaZ_fill($286); //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $289=$287;label=52;break; //@line 449 "lib/lua-5.2.3/src/llex.c"
 case 52: 
 var $289; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $290=$2; //@line 449 "lib/lua-5.2.3/src/llex.c"
 var $291=(($290)|0); //@line 449 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($291)>>2)]=$289; //@line 449 "lib/lua-5.2.3/src/llex.c"
 $1=283; //@line 449 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 449 "lib/lua-5.2.3/src/llex.c"
 case 53: 
 var $293=$2; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $294=(($293+56)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $295=HEAP32[(($294)>>2)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $296=(($295)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $297=HEAP32[(($296)>>2)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $298=((($297)-(1))|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($296)>>2)]=$298; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $299=($297>>>0)>0; //@line 452 "lib/lua-5.2.3/src/llex.c"
 if($299){label=54;break;}else{label=55;break;} //@line 452 "lib/lua-5.2.3/src/llex.c"
 case 54: 
 var $301=$2; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $302=(($301+56)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $303=HEAP32[(($302)>>2)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $304=(($303+4)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $305=HEAP32[(($304)>>2)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $306=(($305+1)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($304)>>2)]=$306; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $307=HEAP8[($305)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $308=($307&255); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $315=$308;label=56;break; //@line 452 "lib/lua-5.2.3/src/llex.c"
 case 55: 
 var $310=$2; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $311=(($310+56)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $312=HEAP32[(($311)>>2)]; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $313=_luaZ_fill($312); //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $315=$313;label=56;break; //@line 452 "lib/lua-5.2.3/src/llex.c"
 case 56: 
 var $315; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $316=$2; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $317=(($316)|0); //@line 452 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($317)>>2)]=$315; //@line 452 "lib/lua-5.2.3/src/llex.c"
 var $318=$2; //@line 453 "lib/lua-5.2.3/src/llex.c"
 var $319=(($318)|0); //@line 453 "lib/lua-5.2.3/src/llex.c"
 var $320=HEAP32[(($319)>>2)]; //@line 453 "lib/lua-5.2.3/src/llex.c"
 var $321=($320|0)!=61; //@line 453 "lib/lua-5.2.3/src/llex.c"
 if($321){label=57;break;}else{label=58;break;} //@line 453 "lib/lua-5.2.3/src/llex.c"
 case 57: 
 $1=62; //@line 453 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 453 "lib/lua-5.2.3/src/llex.c"
 case 58: 
 var $324=$2; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $325=(($324+56)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $326=HEAP32[(($325)>>2)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $327=(($326)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $328=HEAP32[(($327)>>2)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $329=((($328)-(1))|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($327)>>2)]=$329; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $330=($328>>>0)>0; //@line 454 "lib/lua-5.2.3/src/llex.c"
 if($330){label=59;break;}else{label=60;break;} //@line 454 "lib/lua-5.2.3/src/llex.c"
 case 59: 
 var $332=$2; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $333=(($332+56)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $334=HEAP32[(($333)>>2)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $335=(($334+4)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $336=HEAP32[(($335)>>2)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $337=(($336+1)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($335)>>2)]=$337; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $338=HEAP8[($336)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $339=($338&255); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $346=$339;label=61;break; //@line 454 "lib/lua-5.2.3/src/llex.c"
 case 60: 
 var $341=$2; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $342=(($341+56)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $343=HEAP32[(($342)>>2)]; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $344=_luaZ_fill($343); //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $346=$344;label=61;break; //@line 454 "lib/lua-5.2.3/src/llex.c"
 case 61: 
 var $346; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $347=$2; //@line 454 "lib/lua-5.2.3/src/llex.c"
 var $348=(($347)|0); //@line 454 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($348)>>2)]=$346; //@line 454 "lib/lua-5.2.3/src/llex.c"
 $1=282; //@line 454 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 454 "lib/lua-5.2.3/src/llex.c"
 case 62: 
 var $350=$2; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $351=(($350+56)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $352=HEAP32[(($351)>>2)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $353=(($352)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $354=HEAP32[(($353)>>2)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $355=((($354)-(1))|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($353)>>2)]=$355; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $356=($354>>>0)>0; //@line 457 "lib/lua-5.2.3/src/llex.c"
 if($356){label=63;break;}else{label=64;break;} //@line 457 "lib/lua-5.2.3/src/llex.c"
 case 63: 
 var $358=$2; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $359=(($358+56)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $360=HEAP32[(($359)>>2)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $361=(($360+4)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $362=HEAP32[(($361)>>2)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $363=(($362+1)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($361)>>2)]=$363; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $364=HEAP8[($362)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $365=($364&255); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $372=$365;label=65;break; //@line 457 "lib/lua-5.2.3/src/llex.c"
 case 64: 
 var $367=$2; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $368=(($367+56)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $369=HEAP32[(($368)>>2)]; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $370=_luaZ_fill($369); //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $372=$370;label=65;break; //@line 457 "lib/lua-5.2.3/src/llex.c"
 case 65: 
 var $372; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $373=$2; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $374=(($373)|0); //@line 457 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($374)>>2)]=$372; //@line 457 "lib/lua-5.2.3/src/llex.c"
 var $375=$2; //@line 458 "lib/lua-5.2.3/src/llex.c"
 var $376=(($375)|0); //@line 458 "lib/lua-5.2.3/src/llex.c"
 var $377=HEAP32[(($376)>>2)]; //@line 458 "lib/lua-5.2.3/src/llex.c"
 var $378=($377|0)!=61; //@line 458 "lib/lua-5.2.3/src/llex.c"
 if($378){label=66;break;}else{label=67;break;} //@line 458 "lib/lua-5.2.3/src/llex.c"
 case 66: 
 $1=126; //@line 458 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 458 "lib/lua-5.2.3/src/llex.c"
 case 67: 
 var $381=$2; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $382=(($381+56)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $383=HEAP32[(($382)>>2)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $384=(($383)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $385=HEAP32[(($384)>>2)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $386=((($385)-(1))|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($384)>>2)]=$386; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $387=($385>>>0)>0; //@line 459 "lib/lua-5.2.3/src/llex.c"
 if($387){label=68;break;}else{label=69;break;} //@line 459 "lib/lua-5.2.3/src/llex.c"
 case 68: 
 var $389=$2; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $390=(($389+56)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $391=HEAP32[(($390)>>2)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $392=(($391+4)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $393=HEAP32[(($392)>>2)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $394=(($393+1)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($392)>>2)]=$394; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $395=HEAP8[($393)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $396=($395&255); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $403=$396;label=70;break; //@line 459 "lib/lua-5.2.3/src/llex.c"
 case 69: 
 var $398=$2; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $399=(($398+56)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $400=HEAP32[(($399)>>2)]; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $401=_luaZ_fill($400); //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $403=$401;label=70;break; //@line 459 "lib/lua-5.2.3/src/llex.c"
 case 70: 
 var $403; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $404=$2; //@line 459 "lib/lua-5.2.3/src/llex.c"
 var $405=(($404)|0); //@line 459 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($405)>>2)]=$403; //@line 459 "lib/lua-5.2.3/src/llex.c"
 $1=284; //@line 459 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 459 "lib/lua-5.2.3/src/llex.c"
 case 71: 
 var $407=$2; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $408=(($407+56)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $409=HEAP32[(($408)>>2)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $410=(($409)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $411=HEAP32[(($410)>>2)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $412=((($411)-(1))|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($410)>>2)]=$412; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $413=($411>>>0)>0; //@line 462 "lib/lua-5.2.3/src/llex.c"
 if($413){label=72;break;}else{label=73;break;} //@line 462 "lib/lua-5.2.3/src/llex.c"
 case 72: 
 var $415=$2; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $416=(($415+56)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $417=HEAP32[(($416)>>2)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $418=(($417+4)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $419=HEAP32[(($418)>>2)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $420=(($419+1)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($418)>>2)]=$420; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $421=HEAP8[($419)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $422=($421&255); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $429=$422;label=74;break; //@line 462 "lib/lua-5.2.3/src/llex.c"
 case 73: 
 var $424=$2; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $425=(($424+56)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $426=HEAP32[(($425)>>2)]; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $427=_luaZ_fill($426); //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $429=$427;label=74;break; //@line 462 "lib/lua-5.2.3/src/llex.c"
 case 74: 
 var $429; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $430=$2; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $431=(($430)|0); //@line 462 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($431)>>2)]=$429; //@line 462 "lib/lua-5.2.3/src/llex.c"
 var $432=$2; //@line 463 "lib/lua-5.2.3/src/llex.c"
 var $433=(($432)|0); //@line 463 "lib/lua-5.2.3/src/llex.c"
 var $434=HEAP32[(($433)>>2)]; //@line 463 "lib/lua-5.2.3/src/llex.c"
 var $435=($434|0)!=58; //@line 463 "lib/lua-5.2.3/src/llex.c"
 if($435){label=75;break;}else{label=76;break;} //@line 463 "lib/lua-5.2.3/src/llex.c"
 case 75: 
 $1=58; //@line 463 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 463 "lib/lua-5.2.3/src/llex.c"
 case 76: 
 var $438=$2; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $439=(($438+56)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $440=HEAP32[(($439)>>2)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $441=(($440)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $442=HEAP32[(($441)>>2)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $443=((($442)-(1))|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($441)>>2)]=$443; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $444=($442>>>0)>0; //@line 464 "lib/lua-5.2.3/src/llex.c"
 if($444){label=77;break;}else{label=78;break;} //@line 464 "lib/lua-5.2.3/src/llex.c"
 case 77: 
 var $446=$2; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $447=(($446+56)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $448=HEAP32[(($447)>>2)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $449=(($448+4)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $450=HEAP32[(($449)>>2)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $451=(($450+1)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($449)>>2)]=$451; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $452=HEAP8[($450)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $453=($452&255); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $460=$453;label=79;break; //@line 464 "lib/lua-5.2.3/src/llex.c"
 case 78: 
 var $455=$2; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $456=(($455+56)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $457=HEAP32[(($456)>>2)]; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $458=_luaZ_fill($457); //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $460=$458;label=79;break; //@line 464 "lib/lua-5.2.3/src/llex.c"
 case 79: 
 var $460; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $461=$2; //@line 464 "lib/lua-5.2.3/src/llex.c"
 var $462=(($461)|0); //@line 464 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($462)>>2)]=$460; //@line 464 "lib/lua-5.2.3/src/llex.c"
 $1=285; //@line 464 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 464 "lib/lua-5.2.3/src/llex.c"
 case 80: 
 var $464=$2; //@line 467 "lib/lua-5.2.3/src/llex.c"
 var $465=$2; //@line 467 "lib/lua-5.2.3/src/llex.c"
 var $466=(($465)|0); //@line 467 "lib/lua-5.2.3/src/llex.c"
 var $467=HEAP32[(($466)>>2)]; //@line 467 "lib/lua-5.2.3/src/llex.c"
 var $468=$3; //@line 467 "lib/lua-5.2.3/src/llex.c"
 _read_string($464,$467,$468); //@line 467 "lib/lua-5.2.3/src/llex.c"
 $1=289; //@line 468 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 468 "lib/lua-5.2.3/src/llex.c"
 case 81: 
 var $470=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $471=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $472=(($471)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $473=HEAP32[(($472)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 _save($470,$473); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $474=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $475=(($474+56)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $476=HEAP32[(($475)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $477=(($476)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $478=HEAP32[(($477)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $479=((($478)-(1))|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($477)>>2)]=$479; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $480=($478>>>0)>0; //@line 471 "lib/lua-5.2.3/src/llex.c"
 if($480){label=82;break;}else{label=83;break;} //@line 471 "lib/lua-5.2.3/src/llex.c"
 case 82: 
 var $482=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $483=(($482+56)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $484=HEAP32[(($483)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $485=(($484+4)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $486=HEAP32[(($485)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $487=(($486+1)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($485)>>2)]=$487; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $488=HEAP8[($486)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $489=($488&255); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $496=$489;label=84;break; //@line 471 "lib/lua-5.2.3/src/llex.c"
 case 83: 
 var $491=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $492=(($491+56)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $493=HEAP32[(($492)>>2)]; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $494=_luaZ_fill($493); //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $496=$494;label=84;break; //@line 471 "lib/lua-5.2.3/src/llex.c"
 case 84: 
 var $496; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $497=$2; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $498=(($497)|0); //@line 471 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($498)>>2)]=$496; //@line 471 "lib/lua-5.2.3/src/llex.c"
 var $499=$2; //@line 472 "lib/lua-5.2.3/src/llex.c"
 var $500=_check_next($499,5312); //@line 472 "lib/lua-5.2.3/src/llex.c"
 var $501=($500|0)!=0; //@line 472 "lib/lua-5.2.3/src/llex.c"
 if($501){label=85;break;}else{label=88;break;} //@line 472 "lib/lua-5.2.3/src/llex.c"
 case 85: 
 var $503=$2; //@line 473 "lib/lua-5.2.3/src/llex.c"
 var $504=_check_next($503,5312); //@line 473 "lib/lua-5.2.3/src/llex.c"
 var $505=($504|0)!=0; //@line 473 "lib/lua-5.2.3/src/llex.c"
 if($505){label=86;break;}else{label=87;break;} //@line 473 "lib/lua-5.2.3/src/llex.c"
 case 86: 
 $1=280; //@line 474 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 474 "lib/lua-5.2.3/src/llex.c"
 case 87: 
 $1=279; //@line 475 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 475 "lib/lua-5.2.3/src/llex.c"
 case 88: 
 var $509=$2; //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $510=(($509)|0); //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $511=HEAP32[(($510)>>2)]; //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $512=((($511)+(1))|0); //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $513=((800+$512)|0); //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $514=HEAP8[($513)]; //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $515=($514&255); //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $516=$515&2; //@line 477 "lib/lua-5.2.3/src/llex.c"
 var $517=($516|0)!=0; //@line 477 "lib/lua-5.2.3/src/llex.c"
 if($517){label=90;break;}else{label=89;break;} //@line 477 "lib/lua-5.2.3/src/llex.c"
 case 89: 
 $1=46; //@line 477 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 477 "lib/lua-5.2.3/src/llex.c"
 case 90: 
 label=91;break;
 case 91: 
 label=92;break; //@line 479 "lib/lua-5.2.3/src/llex.c"
 case 92: 
 var $522=$2; //@line 482 "lib/lua-5.2.3/src/llex.c"
 var $523=$3; //@line 482 "lib/lua-5.2.3/src/llex.c"
 _read_numeral($522,$523); //@line 482 "lib/lua-5.2.3/src/llex.c"
 $1=287; //@line 483 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 483 "lib/lua-5.2.3/src/llex.c"
 case 93: 
 $1=286; //@line 486 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 486 "lib/lua-5.2.3/src/llex.c"
 case 94: 
 var $526=$2; //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $527=(($526)|0); //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $528=HEAP32[(($527)>>2)]; //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $529=((($528)+(1))|0); //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $530=((800+$529)|0); //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $531=HEAP8[($530)]; //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $532=($531&255); //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $533=$532&1; //@line 489 "lib/lua-5.2.3/src/llex.c"
 var $534=($533|0)!=0; //@line 489 "lib/lua-5.2.3/src/llex.c"
 if($534){label=95;break;}else{label=105;break;} //@line 489 "lib/lua-5.2.3/src/llex.c"
 case 95: 
 label=96;break; //@line 491 "lib/lua-5.2.3/src/llex.c"
 case 96: 
 var $537=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $538=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $539=(($538)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $540=HEAP32[(($539)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 _save($537,$540); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $541=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $542=(($541+56)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $543=HEAP32[(($542)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $544=(($543)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $545=HEAP32[(($544)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $546=((($545)-(1))|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($544)>>2)]=$546; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $547=($545>>>0)>0; //@line 492 "lib/lua-5.2.3/src/llex.c"
 if($547){label=97;break;}else{label=98;break;} //@line 492 "lib/lua-5.2.3/src/llex.c"
 case 97: 
 var $549=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $550=(($549+56)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $551=HEAP32[(($550)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $552=(($551+4)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $553=HEAP32[(($552)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $554=(($553+1)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($552)>>2)]=$554; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $555=HEAP8[($553)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $556=($555&255); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $563=$556;label=99;break; //@line 492 "lib/lua-5.2.3/src/llex.c"
 case 98: 
 var $558=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $559=(($558+56)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $560=HEAP32[(($559)>>2)]; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $561=_luaZ_fill($560); //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $563=$561;label=99;break; //@line 492 "lib/lua-5.2.3/src/llex.c"
 case 99: 
 var $563; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $564=$2; //@line 492 "lib/lua-5.2.3/src/llex.c"
 var $565=(($564)|0); //@line 492 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($565)>>2)]=$563; //@line 492 "lib/lua-5.2.3/src/llex.c"
 label=100;break; //@line 493 "lib/lua-5.2.3/src/llex.c"
 case 100: 
 var $567=$2; //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $568=(($567)|0); //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $569=HEAP32[(($568)>>2)]; //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $570=((($569)+(1))|0); //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $571=((800+$570)|0); //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $572=HEAP8[($571)]; //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $573=($572&255); //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $574=$573&3; //@line 493 "lib/lua-5.2.3/src/llex.c"
 var $575=($574|0)!=0; //@line 493 "lib/lua-5.2.3/src/llex.c"
 if($575){label=96;break;}else{label=101;break;} //@line 493 "lib/lua-5.2.3/src/llex.c"
 case 101: 
 var $577=$2; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $578=$2; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $579=(($578+60)|0); //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $580=HEAP32[(($579)>>2)]; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $581=(($580)|0); //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $582=HEAP32[(($581)>>2)]; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $583=$2; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $584=(($583+60)|0); //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $585=HEAP32[(($584)>>2)]; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $586=(($585+4)|0); //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $587=HEAP32[(($586)>>2)]; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $588=_luaX_newstring($577,$582,$587); //@line 494 "lib/lua-5.2.3/src/llex.c"
 $ts=$588; //@line 494 "lib/lua-5.2.3/src/llex.c"
 var $589=$ts; //@line 496 "lib/lua-5.2.3/src/llex.c"
 var $590=$3; //@line 496 "lib/lua-5.2.3/src/llex.c"
 var $591=$590; //@line 496 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($591)>>2)]=$589; //@line 496 "lib/lua-5.2.3/src/llex.c"
 var $592=$ts; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $593=$592; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $594=(($593+4)|0); //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $595=HEAP8[($594)]; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $596=($595&255); //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $597=($596|0)==4; //@line 497 "lib/lua-5.2.3/src/llex.c"
 if($597){label=102;break;}else{label=104;break;} //@line 497 "lib/lua-5.2.3/src/llex.c"
 case 102: 
 var $599=$ts; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $600=$599; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $601=(($600+6)|0); //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $602=HEAP8[($601)]; //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $603=($602&255); //@line 497 "lib/lua-5.2.3/src/llex.c"
 var $604=($603|0)>0; //@line 497 "lib/lua-5.2.3/src/llex.c"
 if($604){label=103;break;}else{label=104;break;} //@line 497 "lib/lua-5.2.3/src/llex.c"
 case 103: 
 var $606=$ts; //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $607=$606; //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $608=(($607+6)|0); //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $609=HEAP8[($608)]; //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $610=($609&255); //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $611=((($610)-(1))|0); //@line 498 "lib/lua-5.2.3/src/llex.c"
 var $612=((($611)+(257))|0); //@line 498 "lib/lua-5.2.3/src/llex.c"
 $1=$612; //@line 498 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 498 "lib/lua-5.2.3/src/llex.c"
 case 104: 
 $1=288; //@line 500 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 500 "lib/lua-5.2.3/src/llex.c"
 case 105: 
 var $615=$2; //@line 504 "lib/lua-5.2.3/src/llex.c"
 var $616=(($615)|0); //@line 504 "lib/lua-5.2.3/src/llex.c"
 var $617=HEAP32[(($616)>>2)]; //@line 504 "lib/lua-5.2.3/src/llex.c"
 $c=$617; //@line 504 "lib/lua-5.2.3/src/llex.c"
 var $618=$2; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $619=(($618+56)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $620=HEAP32[(($619)>>2)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $621=(($620)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $622=HEAP32[(($621)>>2)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $623=((($622)-(1))|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($621)>>2)]=$623; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $624=($622>>>0)>0; //@line 505 "lib/lua-5.2.3/src/llex.c"
 if($624){label=106;break;}else{label=107;break;} //@line 505 "lib/lua-5.2.3/src/llex.c"
 case 106: 
 var $626=$2; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $627=(($626+56)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $628=HEAP32[(($627)>>2)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $629=(($628+4)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $630=HEAP32[(($629)>>2)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $631=(($630+1)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($629)>>2)]=$631; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $632=HEAP8[($630)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $633=($632&255); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $640=$633;label=108;break; //@line 505 "lib/lua-5.2.3/src/llex.c"
 case 107: 
 var $635=$2; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $636=(($635+56)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $637=HEAP32[(($636)>>2)]; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $638=_luaZ_fill($637); //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $640=$638;label=108;break; //@line 505 "lib/lua-5.2.3/src/llex.c"
 case 108: 
 var $640; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $641=$2; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $642=(($641)|0); //@line 505 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($642)>>2)]=$640; //@line 505 "lib/lua-5.2.3/src/llex.c"
 var $643=$c; //@line 506 "lib/lua-5.2.3/src/llex.c"
 $1=$643; //@line 506 "lib/lua-5.2.3/src/llex.c"
 label=110;break; //@line 506 "lib/lua-5.2.3/src/llex.c"
 case 109: 
 label=2;break; //@line 510 "lib/lua-5.2.3/src/llex.c"
 case 110: 
 var $646=$1; //@line 511 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $646; //@line 511 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaX_lookahead($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$ls;
 var $2=$1; //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $3=$1; //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $4=(($3+32)|0); //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $5=(($4+8)|0); //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $6=_llex($2,$5); //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $7=$1; //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+32)|0); //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $9=(($8)|0); //@line 527 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($9)>>2)]=$6; //@line 527 "lib/lua-5.2.3/src/llex.c"
 var $10=$1; //@line 528 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10+32)|0); //@line 528 "lib/lua-5.2.3/src/llex.c"
 var $12=(($11)|0); //@line 528 "lib/lua-5.2.3/src/llex.c"
 var $13=HEAP32[(($12)>>2)]; //@line 528 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $13; //@line 528 "lib/lua-5.2.3/src/llex.c"
}


function _inclinenumber($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $old;
 $1=$ls;
 var $2=$1; //@line 149 "lib/lua-5.2.3/src/llex.c"
 var $3=(($2)|0); //@line 149 "lib/lua-5.2.3/src/llex.c"
 var $4=HEAP32[(($3)>>2)]; //@line 149 "lib/lua-5.2.3/src/llex.c"
 $old=$4; //@line 149 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5+56)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $7=HEAP32[(($6)>>2)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $9=HEAP32[(($8)>>2)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $10=((($9)-(1))|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($8)>>2)]=$10; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $11=($9>>>0)>0; //@line 151 "lib/lua-5.2.3/src/llex.c"
 if($11){label=2;break;}else{label=3;break;} //@line 151 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $13=$1; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $14=(($13+56)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $15=HEAP32[(($14)>>2)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+4)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP32[(($16)>>2)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $18=(($17+1)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($16)>>2)]=$18; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $19=HEAP8[($17)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $20=($19&255); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $27=$20;label=4;break; //@line 151 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $22=$1; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+56)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $24=HEAP32[(($23)>>2)]; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $25=_luaZ_fill($24); //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $27=$25;label=4;break; //@line 151 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $27; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $28=$1; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $29=(($28)|0); //@line 151 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($29)>>2)]=$27; //@line 151 "lib/lua-5.2.3/src/llex.c"
 var $30=$1; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30)|0); //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $32=HEAP32[(($31)>>2)]; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $33=($32|0)==10; //@line 152 "lib/lua-5.2.3/src/llex.c"
 if($33){label=6;break;}else{label=5;break;} //@line 152 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $35=$1; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $36=(($35)|0); //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $37=HEAP32[(($36)>>2)]; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $38=($37|0)==13; //@line 152 "lib/lua-5.2.3/src/llex.c"
 if($38){label=6;break;}else{label=11;break;} //@line 152 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $40=$1; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40)|0); //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $42=HEAP32[(($41)>>2)]; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $43=$old; //@line 152 "lib/lua-5.2.3/src/llex.c"
 var $44=($42|0)!=($43|0); //@line 152 "lib/lua-5.2.3/src/llex.c"
 if($44){label=7;break;}else{label=11;break;} //@line 152 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $46=$1; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $47=(($46+56)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $48=HEAP32[(($47)>>2)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $49=(($48)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $50=HEAP32[(($49)>>2)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $51=((($50)-(1))|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($49)>>2)]=$51; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $52=($50>>>0)>0; //@line 153 "lib/lua-5.2.3/src/llex.c"
 if($52){label=8;break;}else{label=9;break;} //@line 153 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $54=$1; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $55=(($54+56)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $56=HEAP32[(($55)>>2)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $57=(($56+4)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $58=HEAP32[(($57)>>2)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $59=(($58+1)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($57)>>2)]=$59; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $60=HEAP8[($58)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $61=($60&255); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $68=$61;label=10;break; //@line 153 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $63=$1; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $64=(($63+56)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $65=HEAP32[(($64)>>2)]; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $66=_luaZ_fill($65); //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $68=$66;label=10;break; //@line 153 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $68; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $69=$1; //@line 153 "lib/lua-5.2.3/src/llex.c"
 var $70=(($69)|0); //@line 153 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($70)>>2)]=$68; //@line 153 "lib/lua-5.2.3/src/llex.c"
 label=11;break; //@line 153 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $72=$1; //@line 154 "lib/lua-5.2.3/src/llex.c"
 var $73=(($72+4)|0); //@line 154 "lib/lua-5.2.3/src/llex.c"
 var $74=HEAP32[(($73)>>2)]; //@line 154 "lib/lua-5.2.3/src/llex.c"
 var $75=((($74)+(1))|0); //@line 154 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($73)>>2)]=$75; //@line 154 "lib/lua-5.2.3/src/llex.c"
 var $76=($75|0)>=2147483645; //@line 154 "lib/lua-5.2.3/src/llex.c"
 if($76){label=12;break;}else{label=13;break;} //@line 154 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $78=$1; //@line 155 "lib/lua-5.2.3/src/llex.c"
 _luaX_syntaxerror($78,13016); //@line 155 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 155 "lib/lua-5.2.3/src/llex.c"
 case 13: 
 STACKTOP=sp;return; //@line 156 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _skip_sep($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $count;
 var $s;
 $1=$ls;
 $count=0; //@line 258 "lib/lua-5.2.3/src/llex.c"
 var $2=$1; //@line 259 "lib/lua-5.2.3/src/llex.c"
 var $3=(($2)|0); //@line 259 "lib/lua-5.2.3/src/llex.c"
 var $4=HEAP32[(($3)>>2)]; //@line 259 "lib/lua-5.2.3/src/llex.c"
 $s=$4; //@line 259 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $6=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 _save($5,$8); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $9=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $10=(($9+56)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $11=HEAP32[(($10)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $12=(($11)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $13=HEAP32[(($12)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $14=((($13)-(1))|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($12)>>2)]=$14; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $15=($13>>>0)>0; //@line 261 "lib/lua-5.2.3/src/llex.c"
 if($15){label=2;break;}else{label=3;break;} //@line 261 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $17=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $18=(($17+56)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $19=HEAP32[(($18)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $20=(($19+4)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $21=HEAP32[(($20)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $22=(($21+1)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($20)>>2)]=$22; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $23=HEAP8[($21)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $24=($23&255); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $31=$24;label=4;break; //@line 261 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $26=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $27=(($26+56)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $28=HEAP32[(($27)>>2)]; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $29=_luaZ_fill($28); //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $31=$29;label=4;break; //@line 261 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $31; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $32=$1; //@line 261 "lib/lua-5.2.3/src/llex.c"
 var $33=(($32)|0); //@line 261 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($33)>>2)]=$31; //@line 261 "lib/lua-5.2.3/src/llex.c"
 label=5;break; //@line 262 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $35=$1; //@line 262 "lib/lua-5.2.3/src/llex.c"
 var $36=(($35)|0); //@line 262 "lib/lua-5.2.3/src/llex.c"
 var $37=HEAP32[(($36)>>2)]; //@line 262 "lib/lua-5.2.3/src/llex.c"
 var $38=($37|0)==61; //@line 262 "lib/lua-5.2.3/src/llex.c"
 if($38){label=6;break;}else{label=10;break;} //@line 262 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $40=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $41=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $42=(($41)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $43=HEAP32[(($42)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 _save($40,$43); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $44=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $45=(($44+56)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $46=HEAP32[(($45)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $47=(($46)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $48=HEAP32[(($47)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $49=((($48)-(1))|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($47)>>2)]=$49; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $50=($48>>>0)>0; //@line 263 "lib/lua-5.2.3/src/llex.c"
 if($50){label=7;break;}else{label=8;break;} //@line 263 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $52=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $53=(($52+56)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $54=HEAP32[(($53)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $55=(($54+4)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $56=HEAP32[(($55)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $57=(($56+1)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($55)>>2)]=$57; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $58=HEAP8[($56)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $59=($58&255); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $66=$59;label=9;break; //@line 263 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $61=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $62=(($61+56)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $63=HEAP32[(($62)>>2)]; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $64=_luaZ_fill($63); //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $66=$64;label=9;break; //@line 263 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $66; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $67=$1; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $68=(($67)|0); //@line 263 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($68)>>2)]=$66; //@line 263 "lib/lua-5.2.3/src/llex.c"
 var $69=$count; //@line 264 "lib/lua-5.2.3/src/llex.c"
 var $70=((($69)+(1))|0); //@line 264 "lib/lua-5.2.3/src/llex.c"
 $count=$70; //@line 264 "lib/lua-5.2.3/src/llex.c"
 label=5;break; //@line 265 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $72=$1; //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $73=(($72)|0); //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $74=HEAP32[(($73)>>2)]; //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $75=$s; //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $76=($74|0)==($75|0); //@line 266 "lib/lua-5.2.3/src/llex.c"
 if($76){label=11;break;}else{label=12;break;} //@line 266 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $78=$count; //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $84=$78;label=13;break; //@line 266 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $80=$count; //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $81=(((-$80))|0); //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $82=((($81)-(1))|0); //@line 266 "lib/lua-5.2.3/src/llex.c"
 var $84=$82;label=13;break; //@line 266 "lib/lua-5.2.3/src/llex.c"
 case 13: 
 var $84; //@line 266 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $84; //@line 266 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _read_long_string($ls,$seminfo,$sep){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$ls;
 $2=$seminfo;
 $3=$sep;
 var $4=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $7=HEAP32[(($6)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 _save($4,$7); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $8=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $9=(($8+56)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $10=HEAP32[(($9)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $13=((($12)-(1))|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($11)>>2)]=$13; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $14=($12>>>0)>0; //@line 271 "lib/lua-5.2.3/src/llex.c"
 if($14){label=2;break;}else{label=3;break;} //@line 271 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $16=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $17=(($16+56)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $18=HEAP32[(($17)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18+4)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20+1)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($19)>>2)]=$21; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $22=HEAP8[($20)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $23=($22&255); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $30=$23;label=4;break; //@line 271 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $25=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+56)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $28=_luaZ_fill($27); //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $30=$28;label=4;break; //@line 271 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $30; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $31=$1; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $32=(($31)|0); //@line 271 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($32)>>2)]=$30; //@line 271 "lib/lua-5.2.3/src/llex.c"
 var $33=$1; //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $34=(($33)|0); //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $35=HEAP32[(($34)>>2)]; //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $36=($35|0)==10; //@line 272 "lib/lua-5.2.3/src/llex.c"
 if($36){label=6;break;}else{label=5;break;} //@line 272 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $38=$1; //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $39=(($38)|0); //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $40=HEAP32[(($39)>>2)]; //@line 272 "lib/lua-5.2.3/src/llex.c"
 var $41=($40|0)==13; //@line 272 "lib/lua-5.2.3/src/llex.c"
 if($41){label=6;break;}else{label=7;break;} //@line 272 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $43=$1; //@line 273 "lib/lua-5.2.3/src/llex.c"
 _inclinenumber($43); //@line 273 "lib/lua-5.2.3/src/llex.c"
 label=7;break; //@line 273 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 label=8;break; //@line 274 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $46=$1; //@line 275 "lib/lua-5.2.3/src/llex.c"
 var $47=(($46)|0); //@line 275 "lib/lua-5.2.3/src/llex.c"
 var $48=HEAP32[(($47)>>2)]; //@line 275 "lib/lua-5.2.3/src/llex.c"
 if(($48|0)==93){ label=10;break;}else if(($48|0)==10|($48|0)==13){ label=16;break;}else if(($48|0)==-1){ label=9;break;}else{label=19;break;}
 case 9: 
 var $50=$1; //@line 277 "lib/lua-5.2.3/src/llex.c"
 var $51=$2; //@line 277 "lib/lua-5.2.3/src/llex.c"
 var $52=($51|0)!=0; //@line 277 "lib/lua-5.2.3/src/llex.c"
 var $53=($52?13544:13240); //@line 277 "lib/lua-5.2.3/src/llex.c"
 _lexerror($50,$53,286); //@line 277 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 277 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $55=$1; //@line 281 "lib/lua-5.2.3/src/llex.c"
 var $56=_skip_sep($55); //@line 281 "lib/lua-5.2.3/src/llex.c"
 var $57=$3; //@line 281 "lib/lua-5.2.3/src/llex.c"
 var $58=($56|0)==($57|0); //@line 281 "lib/lua-5.2.3/src/llex.c"
 if($58){label=11;break;}else{label=15;break;} //@line 281 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $60=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $61=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $62=(($61)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $63=HEAP32[(($62)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 _save($60,$63); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $64=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $65=(($64+56)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $66=HEAP32[(($65)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $67=(($66)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $68=HEAP32[(($67)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $69=((($68)-(1))|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($67)>>2)]=$69; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $70=($68>>>0)>0; //@line 282 "lib/lua-5.2.3/src/llex.c"
 if($70){label=12;break;}else{label=13;break;} //@line 282 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $72=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $73=(($72+56)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $74=HEAP32[(($73)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $75=(($74+4)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $76=HEAP32[(($75)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $77=(($76+1)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($75)>>2)]=$77; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $78=HEAP8[($76)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $79=($78&255); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $86=$79;label=14;break; //@line 282 "lib/lua-5.2.3/src/llex.c"
 case 13: 
 var $81=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $82=(($81+56)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $83=HEAP32[(($82)>>2)]; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $84=_luaZ_fill($83); //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $86=$84;label=14;break; //@line 282 "lib/lua-5.2.3/src/llex.c"
 case 14: 
 var $86; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $87=$1; //@line 282 "lib/lua-5.2.3/src/llex.c"
 var $88=(($87)|0); //@line 282 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($88)>>2)]=$86; //@line 282 "lib/lua-5.2.3/src/llex.c"
 label=30;break; //@line 283 "lib/lua-5.2.3/src/llex.c"
 case 15: 
 label=29;break; //@line 285 "lib/lua-5.2.3/src/llex.c"
 case 16: 
 var $91=$1; //@line 288 "lib/lua-5.2.3/src/llex.c"
 _save($91,10); //@line 288 "lib/lua-5.2.3/src/llex.c"
 var $92=$1; //@line 289 "lib/lua-5.2.3/src/llex.c"
 _inclinenumber($92); //@line 289 "lib/lua-5.2.3/src/llex.c"
 var $93=$2; //@line 290 "lib/lua-5.2.3/src/llex.c"
 var $94=($93|0)!=0; //@line 290 "lib/lua-5.2.3/src/llex.c"
 if($94){label=18;break;}else{label=17;break;} //@line 290 "lib/lua-5.2.3/src/llex.c"
 case 17: 
 var $96=$1; //@line 290 "lib/lua-5.2.3/src/llex.c"
 var $97=(($96+60)|0); //@line 290 "lib/lua-5.2.3/src/llex.c"
 var $98=HEAP32[(($97)>>2)]; //@line 290 "lib/lua-5.2.3/src/llex.c"
 var $99=(($98+4)|0); //@line 290 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($99)>>2)]=0; //@line 290 "lib/lua-5.2.3/src/llex.c"
 label=18;break; //@line 290 "lib/lua-5.2.3/src/llex.c"
 case 18: 
 label=29;break; //@line 291 "lib/lua-5.2.3/src/llex.c"
 case 19: 
 var $102=$2; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $103=($102|0)!=0; //@line 294 "lib/lua-5.2.3/src/llex.c"
 if($103){label=20;break;}else{label=24;break;} //@line 294 "lib/lua-5.2.3/src/llex.c"
 case 20: 
 var $105=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $106=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $107=(($106)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $108=HEAP32[(($107)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 _save($105,$108); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $109=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $110=(($109+56)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $111=HEAP32[(($110)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $112=(($111)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $113=HEAP32[(($112)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $114=((($113)-(1))|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($112)>>2)]=$114; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $115=($113>>>0)>0; //@line 294 "lib/lua-5.2.3/src/llex.c"
 if($115){label=21;break;}else{label=22;break;} //@line 294 "lib/lua-5.2.3/src/llex.c"
 case 21: 
 var $117=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $118=(($117+56)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $119=HEAP32[(($118)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $120=(($119+4)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $121=HEAP32[(($120)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $122=(($121+1)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($120)>>2)]=$122; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $123=HEAP8[($121)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $124=($123&255); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $131=$124;label=23;break; //@line 294 "lib/lua-5.2.3/src/llex.c"
 case 22: 
 var $126=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $127=(($126+56)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $128=HEAP32[(($127)>>2)]; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $129=_luaZ_fill($128); //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $131=$129;label=23;break; //@line 294 "lib/lua-5.2.3/src/llex.c"
 case 23: 
 var $131; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $132=$1; //@line 294 "lib/lua-5.2.3/src/llex.c"
 var $133=(($132)|0); //@line 294 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($133)>>2)]=$131; //@line 294 "lib/lua-5.2.3/src/llex.c"
 label=28;break; //@line 294 "lib/lua-5.2.3/src/llex.c"
 case 24: 
 var $135=$1; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $136=(($135+56)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $137=HEAP32[(($136)>>2)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $138=(($137)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $139=HEAP32[(($138)>>2)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $140=((($139)-(1))|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($138)>>2)]=$140; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $141=($139>>>0)>0; //@line 295 "lib/lua-5.2.3/src/llex.c"
 if($141){label=25;break;}else{label=26;break;} //@line 295 "lib/lua-5.2.3/src/llex.c"
 case 25: 
 var $143=$1; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $144=(($143+56)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $145=HEAP32[(($144)>>2)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $146=(($145+4)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $147=HEAP32[(($146)>>2)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $148=(($147+1)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($146)>>2)]=$148; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $149=HEAP8[($147)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $150=($149&255); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $157=$150;label=27;break; //@line 295 "lib/lua-5.2.3/src/llex.c"
 case 26: 
 var $152=$1; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $153=(($152+56)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $154=HEAP32[(($153)>>2)]; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $155=_luaZ_fill($154); //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $157=$155;label=27;break; //@line 295 "lib/lua-5.2.3/src/llex.c"
 case 27: 
 var $157; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $158=$1; //@line 295 "lib/lua-5.2.3/src/llex.c"
 var $159=(($158)|0); //@line 295 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($159)>>2)]=$157; //@line 295 "lib/lua-5.2.3/src/llex.c"
 label=28;break;
 case 28: 
 label=29;break; //@line 297 "lib/lua-5.2.3/src/llex.c"
 case 29: 
 label=8;break; //@line 298 "lib/lua-5.2.3/src/llex.c"
 case 30: 
 var $163=$2; //@line 299 "lib/lua-5.2.3/src/llex.c"
 var $164=($163|0)!=0; //@line 299 "lib/lua-5.2.3/src/llex.c"
 if($164){label=31;break;}else{label=32;break;} //@line 299 "lib/lua-5.2.3/src/llex.c"
 case 31: 
 var $166=$1; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $167=$1; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $168=(($167+60)|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $169=HEAP32[(($168)>>2)]; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $170=(($169)|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $171=HEAP32[(($170)>>2)]; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $172=$3; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $173=((($172)+(2))|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $174=(($171+$173)|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $175=$1; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $176=(($175+60)|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $177=HEAP32[(($176)>>2)]; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $178=(($177+4)|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $179=HEAP32[(($178)>>2)]; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $180=$3; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $181=((($180)+(2))|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $182=($181<<1); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $183=((($179)-($182))|0); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $184=_luaX_newstring($166,$174,$183); //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $185=$2; //@line 300 "lib/lua-5.2.3/src/llex.c"
 var $186=$185; //@line 300 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($186)>>2)]=$184; //@line 300 "lib/lua-5.2.3/src/llex.c"
 label=32;break; //@line 300 "lib/lua-5.2.3/src/llex.c"
 case 32: 
 STACKTOP=sp;return; //@line 302 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _read_string($ls,$del,$seminfo){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $c;
 $1=$ls;
 $2=$del;
 $3=$seminfo;
 var $4=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $5=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $7=HEAP32[(($6)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 _save($4,$7); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $8=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $9=(($8+56)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $10=HEAP32[(($9)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $13=((($12)-(1))|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($11)>>2)]=$13; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $14=($12>>>0)>0; //@line 344 "lib/lua-5.2.3/src/llex.c"
 if($14){label=2;break;}else{label=3;break;} //@line 344 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $16=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $17=(($16+56)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $18=HEAP32[(($17)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18+4)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20+1)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($19)>>2)]=$21; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $22=HEAP8[($20)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $23=($22&255); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $30=$23;label=4;break; //@line 344 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $25=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+56)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $28=_luaZ_fill($27); //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $30=$28;label=4;break; //@line 344 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $30; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $31=$1; //@line 344 "lib/lua-5.2.3/src/llex.c"
 var $32=(($31)|0); //@line 344 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($32)>>2)]=$30; //@line 344 "lib/lua-5.2.3/src/llex.c"
 label=5;break; //@line 345 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $34=$1; //@line 345 "lib/lua-5.2.3/src/llex.c"
 var $35=(($34)|0); //@line 345 "lib/lua-5.2.3/src/llex.c"
 var $36=HEAP32[(($35)>>2)]; //@line 345 "lib/lua-5.2.3/src/llex.c"
 var $37=$2; //@line 345 "lib/lua-5.2.3/src/llex.c"
 var $38=($36|0)!=($37|0); //@line 345 "lib/lua-5.2.3/src/llex.c"
 if($38){label=6;break;}else{label=52;break;} //@line 345 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $40=$1; //@line 346 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40)|0); //@line 346 "lib/lua-5.2.3/src/llex.c"
 var $42=HEAP32[(($41)>>2)]; //@line 346 "lib/lua-5.2.3/src/llex.c"
 if(($42|0)==-1){ label=7;break;}else if(($42|0)==10|($42|0)==13){ label=8;break;}else if(($42|0)==92){ label=9;break;}else{label=47;break;}
 case 7: 
 var $44=$1; //@line 348 "lib/lua-5.2.3/src/llex.c"
 _lexerror($44,14920,286); //@line 348 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 348 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $46=$1; //@line 352 "lib/lua-5.2.3/src/llex.c"
 _lexerror($46,14920,289); //@line 352 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 352 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $48=$1; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $49=(($48+56)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $50=HEAP32[(($49)>>2)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $51=(($50)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $52=HEAP32[(($51)>>2)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $53=((($52)-(1))|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($51)>>2)]=$53; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $54=($52>>>0)>0; //@line 356 "lib/lua-5.2.3/src/llex.c"
 if($54){label=10;break;}else{label=11;break;} //@line 356 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $56=$1; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $57=(($56+56)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $58=HEAP32[(($57)>>2)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $59=(($58+4)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $60=HEAP32[(($59)>>2)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $61=(($60+1)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($59)>>2)]=$61; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $62=HEAP8[($60)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $63=($62&255); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $70=$63;label=12;break; //@line 356 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $65=$1; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $66=(($65+56)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $67=HEAP32[(($66)>>2)]; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $68=_luaZ_fill($67); //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $70=$68;label=12;break; //@line 356 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $70; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $71=$1; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $72=(($71)|0); //@line 356 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($72)>>2)]=$70; //@line 356 "lib/lua-5.2.3/src/llex.c"
 var $73=$1; //@line 357 "lib/lua-5.2.3/src/llex.c"
 var $74=(($73)|0); //@line 357 "lib/lua-5.2.3/src/llex.c"
 var $75=HEAP32[(($74)>>2)]; //@line 357 "lib/lua-5.2.3/src/llex.c"
 switch(($75|0)){case 97:{ label=13;break;}case 98:{ label=14;break;}case 102:{ label=15;break;}case 110:{ label=16;break;}case 114:{ label=17;break;}case 116:{ label=18;break;}case 118:{ label=19;break;}case 120:{ label=20;break;}case 10:case 13:{ label=21;break;}case 92:case 34:case 39:{ label=22;break;}case -1:{ label=23;break;}case 122:{ label=24;break;}default:{label=38;break;}}break;
 case 13: 
 $c=7; //@line 358 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 358 "lib/lua-5.2.3/src/llex.c"
 case 14: 
 $c=8; //@line 359 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 359 "lib/lua-5.2.3/src/llex.c"
 case 15: 
 $c=12; //@line 360 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 360 "lib/lua-5.2.3/src/llex.c"
 case 16: 
 $c=10; //@line 361 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 361 "lib/lua-5.2.3/src/llex.c"
 case 17: 
 $c=13; //@line 362 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 362 "lib/lua-5.2.3/src/llex.c"
 case 18: 
 $c=9; //@line 363 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 363 "lib/lua-5.2.3/src/llex.c"
 case 19: 
 $c=11; //@line 364 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 364 "lib/lua-5.2.3/src/llex.c"
 case 20: 
 var $84=$1; //@line 365 "lib/lua-5.2.3/src/llex.c"
 var $85=_readhexaesc($84); //@line 365 "lib/lua-5.2.3/src/llex.c"
 $c=$85; //@line 365 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 365 "lib/lua-5.2.3/src/llex.c"
 case 21: 
 var $87=$1; //@line 367 "lib/lua-5.2.3/src/llex.c"
 _inclinenumber($87); //@line 367 "lib/lua-5.2.3/src/llex.c"
 $c=10; //@line 367 "lib/lua-5.2.3/src/llex.c"
 label=45;break; //@line 367 "lib/lua-5.2.3/src/llex.c"
 case 22: 
 var $89=$1; //@line 369 "lib/lua-5.2.3/src/llex.c"
 var $90=(($89)|0); //@line 369 "lib/lua-5.2.3/src/llex.c"
 var $91=HEAP32[(($90)>>2)]; //@line 369 "lib/lua-5.2.3/src/llex.c"
 $c=$91; //@line 369 "lib/lua-5.2.3/src/llex.c"
 label=41;break; //@line 369 "lib/lua-5.2.3/src/llex.c"
 case 23: 
 label=46;break; //@line 370 "lib/lua-5.2.3/src/llex.c"
 case 24: 
 var $94=$1; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $95=(($94+56)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $96=HEAP32[(($95)>>2)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $97=(($96)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $98=HEAP32[(($97)>>2)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $99=((($98)-(1))|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($97)>>2)]=$99; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $100=($98>>>0)>0; //@line 372 "lib/lua-5.2.3/src/llex.c"
 if($100){label=25;break;}else{label=26;break;} //@line 372 "lib/lua-5.2.3/src/llex.c"
 case 25: 
 var $102=$1; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $103=(($102+56)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $104=HEAP32[(($103)>>2)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $105=(($104+4)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $106=HEAP32[(($105)>>2)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $107=(($106+1)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($105)>>2)]=$107; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $108=HEAP8[($106)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $109=($108&255); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $116=$109;label=27;break; //@line 372 "lib/lua-5.2.3/src/llex.c"
 case 26: 
 var $111=$1; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $112=(($111+56)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $113=HEAP32[(($112)>>2)]; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $114=_luaZ_fill($113); //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $116=$114;label=27;break; //@line 372 "lib/lua-5.2.3/src/llex.c"
 case 27: 
 var $116; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $117=$1; //@line 372 "lib/lua-5.2.3/src/llex.c"
 var $118=(($117)|0); //@line 372 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($118)>>2)]=$116; //@line 372 "lib/lua-5.2.3/src/llex.c"
 label=28;break; //@line 373 "lib/lua-5.2.3/src/llex.c"
 case 28: 
 var $120=$1; //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $121=(($120)|0); //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $122=HEAP32[(($121)>>2)]; //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $123=((($122)+(1))|0); //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $124=((800+$123)|0); //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $125=HEAP8[($124)]; //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $126=($125&255); //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $127=$126&8; //@line 373 "lib/lua-5.2.3/src/llex.c"
 var $128=($127|0)!=0; //@line 373 "lib/lua-5.2.3/src/llex.c"
 if($128){label=29;break;}else{label=37;break;} //@line 373 "lib/lua-5.2.3/src/llex.c"
 case 29: 
 var $130=$1; //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $131=(($130)|0); //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $132=HEAP32[(($131)>>2)]; //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $133=($132|0)==10; //@line 374 "lib/lua-5.2.3/src/llex.c"
 if($133){label=31;break;}else{label=30;break;} //@line 374 "lib/lua-5.2.3/src/llex.c"
 case 30: 
 var $135=$1; //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $136=(($135)|0); //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $137=HEAP32[(($136)>>2)]; //@line 374 "lib/lua-5.2.3/src/llex.c"
 var $138=($137|0)==13; //@line 374 "lib/lua-5.2.3/src/llex.c"
 if($138){label=31;break;}else{label=32;break;} //@line 374 "lib/lua-5.2.3/src/llex.c"
 case 31: 
 var $140=$1; //@line 374 "lib/lua-5.2.3/src/llex.c"
 _inclinenumber($140); //@line 374 "lib/lua-5.2.3/src/llex.c"
 label=36;break; //@line 374 "lib/lua-5.2.3/src/llex.c"
 case 32: 
 var $142=$1; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $143=(($142+56)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $144=HEAP32[(($143)>>2)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $145=(($144)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $146=HEAP32[(($145)>>2)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $147=((($146)-(1))|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($145)>>2)]=$147; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $148=($146>>>0)>0; //@line 375 "lib/lua-5.2.3/src/llex.c"
 if($148){label=33;break;}else{label=34;break;} //@line 375 "lib/lua-5.2.3/src/llex.c"
 case 33: 
 var $150=$1; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $151=(($150+56)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $152=HEAP32[(($151)>>2)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $153=(($152+4)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $154=HEAP32[(($153)>>2)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $155=(($154+1)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($153)>>2)]=$155; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $156=HEAP8[($154)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $157=($156&255); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $164=$157;label=35;break; //@line 375 "lib/lua-5.2.3/src/llex.c"
 case 34: 
 var $159=$1; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $160=(($159+56)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $161=HEAP32[(($160)>>2)]; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $162=_luaZ_fill($161); //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $164=$162;label=35;break; //@line 375 "lib/lua-5.2.3/src/llex.c"
 case 35: 
 var $164; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $165=$1; //@line 375 "lib/lua-5.2.3/src/llex.c"
 var $166=(($165)|0); //@line 375 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($166)>>2)]=$164; //@line 375 "lib/lua-5.2.3/src/llex.c"
 label=36;break;
 case 36: 
 label=28;break; //@line 376 "lib/lua-5.2.3/src/llex.c"
 case 37: 
 label=46;break; //@line 377 "lib/lua-5.2.3/src/llex.c"
 case 38: 
 var $170=$1; //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $171=(($170)|0); //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $172=HEAP32[(($171)>>2)]; //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $173=((($172)+(1))|0); //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $174=((800+$173)|0); //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $175=HEAP8[($174)]; //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $176=($175&255); //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $177=$176&2; //@line 380 "lib/lua-5.2.3/src/llex.c"
 var $178=($177|0)!=0; //@line 380 "lib/lua-5.2.3/src/llex.c"
 if($178){label=40;break;}else{label=39;break;} //@line 380 "lib/lua-5.2.3/src/llex.c"
 case 39: 
 var $180=$1; //@line 381 "lib/lua-5.2.3/src/llex.c"
 var $181=$1; //@line 381 "lib/lua-5.2.3/src/llex.c"
 var $182=(($181)|0); //@line 381 "lib/lua-5.2.3/src/llex.c"
 _escerror($180,$182,1,14448); //@line 381 "lib/lua-5.2.3/src/llex.c"
 label=40;break; //@line 381 "lib/lua-5.2.3/src/llex.c"
 case 40: 
 var $184=$1; //@line 383 "lib/lua-5.2.3/src/llex.c"
 var $185=_readdecesc($184); //@line 383 "lib/lua-5.2.3/src/llex.c"
 $c=$185; //@line 383 "lib/lua-5.2.3/src/llex.c"
 label=45;break; //@line 384 "lib/lua-5.2.3/src/llex.c"
 case 41: 
 var $187=$1; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $188=(($187+56)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $189=HEAP32[(($188)>>2)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $190=(($189)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $191=HEAP32[(($190)>>2)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $192=((($191)-(1))|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($190)>>2)]=$192; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $193=($191>>>0)>0; //@line 387 "lib/lua-5.2.3/src/llex.c"
 if($193){label=42;break;}else{label=43;break;} //@line 387 "lib/lua-5.2.3/src/llex.c"
 case 42: 
 var $195=$1; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $196=(($195+56)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $197=HEAP32[(($196)>>2)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $198=(($197+4)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $199=HEAP32[(($198)>>2)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $200=(($199+1)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($198)>>2)]=$200; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $201=HEAP8[($199)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $202=($201&255); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $209=$202;label=44;break; //@line 387 "lib/lua-5.2.3/src/llex.c"
 case 43: 
 var $204=$1; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $205=(($204+56)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $206=HEAP32[(($205)>>2)]; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $207=_luaZ_fill($206); //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $209=$207;label=44;break; //@line 387 "lib/lua-5.2.3/src/llex.c"
 case 44: 
 var $209; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $210=$1; //@line 387 "lib/lua-5.2.3/src/llex.c"
 var $211=(($210)|0); //@line 387 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($211)>>2)]=$209; //@line 387 "lib/lua-5.2.3/src/llex.c"
 label=45;break; //@line 387 "lib/lua-5.2.3/src/llex.c"
 case 45: 
 var $213=$1; //@line 388 "lib/lua-5.2.3/src/llex.c"
 var $214=$c; //@line 388 "lib/lua-5.2.3/src/llex.c"
 _save($213,$214); //@line 388 "lib/lua-5.2.3/src/llex.c"
 label=46;break; //@line 388 "lib/lua-5.2.3/src/llex.c"
 case 46: 
 label=51;break; //@line 389 "lib/lua-5.2.3/src/llex.c"
 case 47: 
 var $217=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $218=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $219=(($218)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $220=HEAP32[(($219)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 _save($217,$220); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $221=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $222=(($221+56)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $223=HEAP32[(($222)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $224=(($223)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $225=HEAP32[(($224)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $226=((($225)-(1))|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($224)>>2)]=$226; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $227=($225>>>0)>0; //@line 392 "lib/lua-5.2.3/src/llex.c"
 if($227){label=48;break;}else{label=49;break;} //@line 392 "lib/lua-5.2.3/src/llex.c"
 case 48: 
 var $229=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $230=(($229+56)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $231=HEAP32[(($230)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $232=(($231+4)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $233=HEAP32[(($232)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $234=(($233+1)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($232)>>2)]=$234; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $235=HEAP8[($233)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $236=($235&255); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $243=$236;label=50;break; //@line 392 "lib/lua-5.2.3/src/llex.c"
 case 49: 
 var $238=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $239=(($238+56)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $240=HEAP32[(($239)>>2)]; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $241=_luaZ_fill($240); //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $243=$241;label=50;break; //@line 392 "lib/lua-5.2.3/src/llex.c"
 case 50: 
 var $243; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $244=$1; //@line 392 "lib/lua-5.2.3/src/llex.c"
 var $245=(($244)|0); //@line 392 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($245)>>2)]=$243; //@line 392 "lib/lua-5.2.3/src/llex.c"
 label=51;break; //@line 393 "lib/lua-5.2.3/src/llex.c"
 case 51: 
 label=5;break; //@line 394 "lib/lua-5.2.3/src/llex.c"
 case 52: 
 var $248=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $249=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $250=(($249)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $251=HEAP32[(($250)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 _save($248,$251); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $252=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $253=(($252+56)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $254=HEAP32[(($253)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $255=(($254)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $256=HEAP32[(($255)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $257=((($256)-(1))|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($255)>>2)]=$257; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $258=($256>>>0)>0; //@line 395 "lib/lua-5.2.3/src/llex.c"
 if($258){label=53;break;}else{label=54;break;} //@line 395 "lib/lua-5.2.3/src/llex.c"
 case 53: 
 var $260=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $261=(($260+56)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $262=HEAP32[(($261)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $263=(($262+4)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $264=HEAP32[(($263)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $265=(($264+1)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($263)>>2)]=$265; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $266=HEAP8[($264)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $267=($266&255); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $274=$267;label=55;break; //@line 395 "lib/lua-5.2.3/src/llex.c"
 case 54: 
 var $269=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $270=(($269+56)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $271=HEAP32[(($270)>>2)]; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $272=_luaZ_fill($271); //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $274=$272;label=55;break; //@line 395 "lib/lua-5.2.3/src/llex.c"
 case 55: 
 var $274; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $275=$1; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $276=(($275)|0); //@line 395 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($276)>>2)]=$274; //@line 395 "lib/lua-5.2.3/src/llex.c"
 var $277=$1; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $278=$1; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $279=(($278+60)|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $280=HEAP32[(($279)>>2)]; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $281=(($280)|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $282=HEAP32[(($281)>>2)]; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $283=(($282+1)|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $284=$1; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $285=(($284+60)|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $286=HEAP32[(($285)>>2)]; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $287=(($286+4)|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $288=HEAP32[(($287)>>2)]; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $289=((($288)-(2))|0); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $290=_luaX_newstring($277,$283,$289); //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $291=$3; //@line 396 "lib/lua-5.2.3/src/llex.c"
 var $292=$291; //@line 396 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($292)>>2)]=$290; //@line 396 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 398 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _save($ls,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $b;
 var $newsize;
 $1=$ls;
 $2=$c;
 var $3=$1; //@line 53 "lib/lua-5.2.3/src/llex.c"
 var $4=(($3+60)|0); //@line 53 "lib/lua-5.2.3/src/llex.c"
 var $5=HEAP32[(($4)>>2)]; //@line 53 "lib/lua-5.2.3/src/llex.c"
 $b=$5; //@line 53 "lib/lua-5.2.3/src/llex.c"
 var $6=$b; //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6+4)|0); //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $9=((($8)+(1))|0); //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $10=$b; //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10+8)|0); //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 54 "lib/lua-5.2.3/src/llex.c"
 var $13=($9>>>0)>($12>>>0); //@line 54 "lib/lua-5.2.3/src/llex.c"
 if($13){label=2;break;}else{label=8;break;} //@line 54 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $15=$b; //@line 56 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+8)|0); //@line 56 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP32[(($16)>>2)]; //@line 56 "lib/lua-5.2.3/src/llex.c"
 var $18=($17>>>0)>=2147483646; //@line 56 "lib/lua-5.2.3/src/llex.c"
 if($18){label=3;break;}else{label=4;break;} //@line 56 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $20=$1; //@line 57 "lib/lua-5.2.3/src/llex.c"
 _lexerror($20,15408,0); //@line 57 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 57 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $22=$b; //@line 58 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+8)|0); //@line 58 "lib/lua-5.2.3/src/llex.c"
 var $24=HEAP32[(($23)>>2)]; //@line 58 "lib/lua-5.2.3/src/llex.c"
 var $25=($24<<1); //@line 58 "lib/lua-5.2.3/src/llex.c"
 $newsize=$25; //@line 58 "lib/lua-5.2.3/src/llex.c"
 var $26=$newsize; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $27=((($26)+(1))|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $28=($27>>>0)>4294967293; //@line 59 "lib/lua-5.2.3/src/llex.c"
 if($28){label=5;break;}else{label=6;break;} //@line 59 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $30=$1; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30+52)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $32=HEAP32[(($31)>>2)]; //@line 59 "lib/lua-5.2.3/src/llex.c"
 _luaM_toobig($32); //@line 59 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 59 "lib/lua-5.2.3/src/llex.c"
 label=7;break; //@line 59 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $36=0;label=7;break; //@line 59 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $36; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $37=$1; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $38=(($37+52)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $39=HEAP32[(($38)>>2)]; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $40=$b; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $42=HEAP32[(($41)>>2)]; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $43=$b; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $44=(($43+8)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $45=HEAP32[(($44)>>2)]; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $46=$45; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $47=$newsize; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $48=$47; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $49=_luaM_realloc_($39,$42,$46,$48); //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $50=$b; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $51=(($50)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($51)>>2)]=$49; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $52=$newsize; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $53=$b; //@line 59 "lib/lua-5.2.3/src/llex.c"
 var $54=(($53+8)|0); //@line 59 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($54)>>2)]=$52; //@line 59 "lib/lua-5.2.3/src/llex.c"
 label=8;break; //@line 60 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $56=$2; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $57=(($56)&255); //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $58=$b; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $59=(($58+4)|0); //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $60=HEAP32[(($59)>>2)]; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $61=((($60)+(1))|0); //@line 61 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($59)>>2)]=$61; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $62=$b; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $63=(($62)|0); //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $64=HEAP32[(($63)>>2)]; //@line 61 "lib/lua-5.2.3/src/llex.c"
 var $65=(($64+$60)|0); //@line 61 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($65)]=$57; //@line 61 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 62 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _check_next($ls,$set){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ls;
 $3=$set;
 var $4=$2; //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $5=(($4)|0); //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $6=HEAP32[(($5)>>2)]; //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $7=($6|0)==0; //@line 186 "lib/lua-5.2.3/src/llex.c"
 if($7){label=3;break;}else{label=2;break;} //@line 186 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $9=$3; //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $10=$2; //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10)|0); //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $13=_strchr($9,$12); //@line 186 "lib/lua-5.2.3/src/llex.c"
 var $14=($13|0)!=0; //@line 186 "lib/lua-5.2.3/src/llex.c"
 if($14){label=4;break;}else{label=3;break;} //@line 186 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 $1=0; //@line 187 "lib/lua-5.2.3/src/llex.c"
 label=8;break; //@line 187 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $17=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $18=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 _save($17,$20); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $21=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $22=(($21+56)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $23=HEAP32[(($22)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $24=(($23)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $25=HEAP32[(($24)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $26=((($25)-(1))|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($24)>>2)]=$26; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $27=($25>>>0)>0; //@line 188 "lib/lua-5.2.3/src/llex.c"
 if($27){label=5;break;}else{label=6;break;} //@line 188 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $29=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $30=(($29+56)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $31=HEAP32[(($30)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $32=(($31+4)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $33=HEAP32[(($32)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $34=(($33+1)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($32)>>2)]=$34; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $35=HEAP8[($33)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $36=($35&255); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $43=$36;label=7;break; //@line 188 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $38=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $39=(($38+56)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $40=HEAP32[(($39)>>2)]; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $41=_luaZ_fill($40); //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $43=$41;label=7;break; //@line 188 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $43; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $44=$2; //@line 188 "lib/lua-5.2.3/src/llex.c"
 var $45=(($44)|0); //@line 188 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($45)>>2)]=$43; //@line 188 "lib/lua-5.2.3/src/llex.c"
 $1=1; //@line 189 "lib/lua-5.2.3/src/llex.c"
 label=8;break; //@line 189 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $47=$1; //@line 190 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $47; //@line 190 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _read_numeral($ls,$seminfo){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $expo;
 var $first;
 $1=$ls;
 $2=$seminfo;
 $expo=4608; //@line 233 "lib/lua-5.2.3/src/llex.c"
 var $3=$1; //@line 234 "lib/lua-5.2.3/src/llex.c"
 var $4=(($3)|0); //@line 234 "lib/lua-5.2.3/src/llex.c"
 var $5=HEAP32[(($4)>>2)]; //@line 234 "lib/lua-5.2.3/src/llex.c"
 $first=$5; //@line 234 "lib/lua-5.2.3/src/llex.c"
 var $6=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $7=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $9=HEAP32[(($8)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 _save($6,$9); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $10=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10+56)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $13=(($12)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $14=HEAP32[(($13)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $15=((($14)-(1))|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($13)>>2)]=$15; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $16=($14>>>0)>0; //@line 236 "lib/lua-5.2.3/src/llex.c"
 if($16){label=2;break;}else{label=3;break;} //@line 236 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $18=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18+56)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20+4)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $22=HEAP32[(($21)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22+1)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($21)>>2)]=$23; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $24=HEAP8[($22)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $25=($24&255); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $32=$25;label=4;break; //@line 236 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $27=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $28=(($27+56)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $29=HEAP32[(($28)>>2)]; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $30=_luaZ_fill($29); //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $32=$30;label=4;break; //@line 236 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $32; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $33=$1; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $34=(($33)|0); //@line 236 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($34)>>2)]=$32; //@line 236 "lib/lua-5.2.3/src/llex.c"
 var $35=$first; //@line 237 "lib/lua-5.2.3/src/llex.c"
 var $36=($35|0)==48; //@line 237 "lib/lua-5.2.3/src/llex.c"
 if($36){label=5;break;}else{label=7;break;} //@line 237 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $38=$1; //@line 237 "lib/lua-5.2.3/src/llex.c"
 var $39=_check_next($38,3848); //@line 237 "lib/lua-5.2.3/src/llex.c"
 var $40=($39|0)!=0; //@line 237 "lib/lua-5.2.3/src/llex.c"
 if($40){label=6;break;}else{label=7;break;} //@line 237 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 $expo=3160; //@line 238 "lib/lua-5.2.3/src/llex.c"
 label=7;break; //@line 238 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 label=8;break; //@line 239 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $44=$1; //@line 240 "lib/lua-5.2.3/src/llex.c"
 var $45=$expo; //@line 240 "lib/lua-5.2.3/src/llex.c"
 var $46=_check_next($44,$45); //@line 240 "lib/lua-5.2.3/src/llex.c"
 var $47=($46|0)!=0; //@line 240 "lib/lua-5.2.3/src/llex.c"
 if($47){label=9;break;}else{label=10;break;} //@line 240 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $49=$1; //@line 241 "lib/lua-5.2.3/src/llex.c"
 var $50=_check_next($49,2568); //@line 241 "lib/lua-5.2.3/src/llex.c"
 label=10;break; //@line 241 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $52=$1; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $53=(($52)|0); //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $54=HEAP32[(($53)>>2)]; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $55=((($54)+(1))|0); //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $56=((800+$55)|0); //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $57=HEAP8[($56)]; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $58=($57&255); //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $59=$58&16; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $60=($59|0)!=0; //@line 242 "lib/lua-5.2.3/src/llex.c"
 if($60){label=12;break;}else{label=11;break;} //@line 242 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $62=$1; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $63=(($62)|0); //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $64=HEAP32[(($63)>>2)]; //@line 242 "lib/lua-5.2.3/src/llex.c"
 var $65=($64|0)==46; //@line 242 "lib/lua-5.2.3/src/llex.c"
 if($65){label=12;break;}else{label=16;break;} //@line 242 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $67=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $68=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $69=(($68)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $70=HEAP32[(($69)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 _save($67,$70); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $71=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $72=(($71+56)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $73=HEAP32[(($72)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $74=(($73)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $75=HEAP32[(($74)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $76=((($75)-(1))|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($74)>>2)]=$76; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $77=($75>>>0)>0; //@line 243 "lib/lua-5.2.3/src/llex.c"
 if($77){label=13;break;}else{label=14;break;} //@line 243 "lib/lua-5.2.3/src/llex.c"
 case 13: 
 var $79=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $80=(($79+56)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $81=HEAP32[(($80)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $82=(($81+4)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $83=HEAP32[(($82)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $84=(($83+1)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($82)>>2)]=$84; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $85=HEAP8[($83)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $86=($85&255); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $93=$86;label=15;break; //@line 243 "lib/lua-5.2.3/src/llex.c"
 case 14: 
 var $88=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $89=(($88+56)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $90=HEAP32[(($89)>>2)]; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $91=_luaZ_fill($90); //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $93=$91;label=15;break; //@line 243 "lib/lua-5.2.3/src/llex.c"
 case 15: 
 var $93; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $94=$1; //@line 243 "lib/lua-5.2.3/src/llex.c"
 var $95=(($94)|0); //@line 243 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($95)>>2)]=$93; //@line 243 "lib/lua-5.2.3/src/llex.c"
 label=17;break; //@line 243 "lib/lua-5.2.3/src/llex.c"
 case 16: 
 label=18;break; //@line 244 "lib/lua-5.2.3/src/llex.c"
 case 17: 
 label=8;break; //@line 245 "lib/lua-5.2.3/src/llex.c"
 case 18: 
 var $99=$1; //@line 246 "lib/lua-5.2.3/src/llex.c"
 _save($99,0); //@line 246 "lib/lua-5.2.3/src/llex.c"
 var $100=$1; //@line 247 "lib/lua-5.2.3/src/llex.c"
 var $101=$1; //@line 247 "lib/lua-5.2.3/src/llex.c"
 var $102=(($101+76)|0); //@line 247 "lib/lua-5.2.3/src/llex.c"
 var $103=HEAP8[($102)]; //@line 247 "lib/lua-5.2.3/src/llex.c"
 _buffreplace($100,46,$103); //@line 247 "lib/lua-5.2.3/src/llex.c"
 var $104=$1; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $105=(($104+60)|0); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $106=HEAP32[(($105)>>2)]; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $107=(($106)|0); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $108=HEAP32[(($107)>>2)]; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $109=$1; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $110=(($109+60)|0); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $111=HEAP32[(($110)>>2)]; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $112=(($111+4)|0); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $113=HEAP32[(($112)>>2)]; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $114=((($113)-(1))|0); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $115=$2; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $116=$115; //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $117=_luaO_str2d($108,$114,$116); //@line 248 "lib/lua-5.2.3/src/llex.c"
 var $118=($117|0)!=0; //@line 248 "lib/lua-5.2.3/src/llex.c"
 if($118){label=20;break;}else{label=19;break;} //@line 248 "lib/lua-5.2.3/src/llex.c"
 case 19: 
 var $120=$1; //@line 249 "lib/lua-5.2.3/src/llex.c"
 var $121=$2; //@line 249 "lib/lua-5.2.3/src/llex.c"
 _trydecpoint($120,$121); //@line 249 "lib/lua-5.2.3/src/llex.c"
 label=20;break; //@line 249 "lib/lua-5.2.3/src/llex.c"
 case 20: 
 STACKTOP=sp;return; //@line 250 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _buffreplace($ls,$from,$to){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $n;
 var $p;
 $1=$ls;
 $2=$from;
 $3=$to;
 var $4=$1; //@line 197 "lib/lua-5.2.3/src/llex.c"
 var $5=(($4+60)|0); //@line 197 "lib/lua-5.2.3/src/llex.c"
 var $6=HEAP32[(($5)>>2)]; //@line 197 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6+4)|0); //@line 197 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 197 "lib/lua-5.2.3/src/llex.c"
 $n=$8; //@line 197 "lib/lua-5.2.3/src/llex.c"
 var $9=$1; //@line 198 "lib/lua-5.2.3/src/llex.c"
 var $10=(($9+60)|0); //@line 198 "lib/lua-5.2.3/src/llex.c"
 var $11=HEAP32[(($10)>>2)]; //@line 198 "lib/lua-5.2.3/src/llex.c"
 var $12=(($11)|0); //@line 198 "lib/lua-5.2.3/src/llex.c"
 var $13=HEAP32[(($12)>>2)]; //@line 198 "lib/lua-5.2.3/src/llex.c"
 $p=$13; //@line 198 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 199 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $15=$n; //@line 199 "lib/lua-5.2.3/src/llex.c"
 var $16=((($15)-(1))|0); //@line 199 "lib/lua-5.2.3/src/llex.c"
 $n=$16; //@line 199 "lib/lua-5.2.3/src/llex.c"
 var $17=($15|0)!=0; //@line 199 "lib/lua-5.2.3/src/llex.c"
 if($17){label=3;break;}else{label=6;break;} //@line 199 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $19=$n; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $20=$p; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20+$19)|0); //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $22=HEAP8[($21)]; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $23=(($22<<24)>>24); //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $24=$2; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $25=(($24<<24)>>24); //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $26=($23|0)==($25|0); //@line 200 "lib/lua-5.2.3/src/llex.c"
 if($26){label=4;break;}else{label=5;break;} //@line 200 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $28=$3; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $29=$n; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $30=$p; //@line 200 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30+$29)|0); //@line 200 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($31)]=$28; //@line 200 "lib/lua-5.2.3/src/llex.c"
 label=5;break; //@line 200 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 label=2;break; //@line 200 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 STACKTOP=sp;return; //@line 201 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _trydecpoint($ls,$seminfo){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $old;
 $1=$ls;
 $2=$seminfo;
 var $3=$1; //@line 216 "lib/lua-5.2.3/src/llex.c"
 var $4=(($3+76)|0); //@line 216 "lib/lua-5.2.3/src/llex.c"
 var $5=HEAP8[($4)]; //@line 216 "lib/lua-5.2.3/src/llex.c"
 $old=$5; //@line 216 "lib/lua-5.2.3/src/llex.c"
 var $6=_localeconv(); //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6)|0); //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $9=(($8)|0); //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $10=HEAP8[($9)]; //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $11=$1; //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $12=(($11+76)|0); //@line 217 "lib/lua-5.2.3/src/llex.c"
 HEAP8[($12)]=$10; //@line 217 "lib/lua-5.2.3/src/llex.c"
 var $13=$1; //@line 218 "lib/lua-5.2.3/src/llex.c"
 var $14=$old; //@line 218 "lib/lua-5.2.3/src/llex.c"
 var $15=$1; //@line 218 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+76)|0); //@line 218 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP8[($16)]; //@line 218 "lib/lua-5.2.3/src/llex.c"
 _buffreplace($13,$14,$17); //@line 218 "lib/lua-5.2.3/src/llex.c"
 var $18=$1; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18+60)|0); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $21=(($20)|0); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $22=HEAP32[(($21)>>2)]; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $23=$1; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $24=(($23+60)|0); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $25=HEAP32[(($24)>>2)]; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+4)|0); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $28=((($27)-(1))|0); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $29=$2; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $30=$29; //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $31=_luaO_str2d($22,$28,$30); //@line 219 "lib/lua-5.2.3/src/llex.c"
 var $32=($31|0)!=0; //@line 219 "lib/lua-5.2.3/src/llex.c"
 if($32){label=3;break;}else{label=2;break;} //@line 219 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $34=$1; //@line 221 "lib/lua-5.2.3/src/llex.c"
 var $35=$1; //@line 221 "lib/lua-5.2.3/src/llex.c"
 var $36=(($35+76)|0); //@line 221 "lib/lua-5.2.3/src/llex.c"
 var $37=HEAP8[($36)]; //@line 221 "lib/lua-5.2.3/src/llex.c"
 _buffreplace($34,$37,46); //@line 221 "lib/lua-5.2.3/src/llex.c"
 var $38=$1; //@line 222 "lib/lua-5.2.3/src/llex.c"
 _lexerror($38,16064,287); //@line 222 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 222 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 STACKTOP=sp;return; //@line 224 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _readhexaesc($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $c=sp;
 var $i;
 var $r;
 $1=$ls;
 $r=0; //@line 317 "lib/lua-5.2.3/src/llex.c"
 var $2=(($c)|0); //@line 318 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($2)>>2)]=120; //@line 318 "lib/lua-5.2.3/src/llex.c"
 $i=1; //@line 319 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 319 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $4=$i; //@line 319 "lib/lua-5.2.3/src/llex.c"
 var $5=($4|0)<3; //@line 319 "lib/lua-5.2.3/src/llex.c"
 if($5){label=3;break;}else{label=10;break;} //@line 319 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $7=$1; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+56)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $9=HEAP32[(($8)>>2)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $10=(($9)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $11=HEAP32[(($10)>>2)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $12=((($11)-(1))|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($10)>>2)]=$12; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $13=($11>>>0)>0; //@line 320 "lib/lua-5.2.3/src/llex.c"
 if($13){label=4;break;}else{label=5;break;} //@line 320 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $15=$1; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $16=(($15+56)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $17=HEAP32[(($16)>>2)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $18=(($17+4)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $19=HEAP32[(($18)>>2)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $20=(($19+1)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($18)>>2)]=$20; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $21=HEAP8[($19)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $22=($21&255); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $29=$22;label=6;break; //@line 320 "lib/lua-5.2.3/src/llex.c"
 case 5: 
 var $24=$1; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $25=(($24+56)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $26=HEAP32[(($25)>>2)]; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $27=_luaZ_fill($26); //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $29=$27;label=6;break; //@line 320 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $29; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $30=$1; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30)|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($31)>>2)]=$29; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $32=$i; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $33=(($c+($32<<2))|0); //@line 320 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($33)>>2)]=$29; //@line 320 "lib/lua-5.2.3/src/llex.c"
 var $34=$i; //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $35=(($c+($34<<2))|0); //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $36=HEAP32[(($35)>>2)]; //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $37=((($36)+(1))|0); //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $38=((800+$37)|0); //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $39=HEAP8[($38)]; //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $40=($39&255); //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $41=$40&16; //@line 321 "lib/lua-5.2.3/src/llex.c"
 var $42=($41|0)!=0; //@line 321 "lib/lua-5.2.3/src/llex.c"
 if($42){label=8;break;}else{label=7;break;} //@line 321 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $44=$1; //@line 322 "lib/lua-5.2.3/src/llex.c"
 var $45=(($c)|0); //@line 322 "lib/lua-5.2.3/src/llex.c"
 var $46=$i; //@line 322 "lib/lua-5.2.3/src/llex.c"
 var $47=((($46)+(1))|0); //@line 322 "lib/lua-5.2.3/src/llex.c"
 _escerror($44,$45,$47,13816); //@line 322 "lib/lua-5.2.3/src/llex.c"
 label=8;break; //@line 322 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $49=$r; //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $50=$49<<4; //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $51=$i; //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $52=(($c+($51<<2))|0); //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $53=HEAP32[(($52)>>2)]; //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $54=_luaO_hexavalue($53); //@line 323 "lib/lua-5.2.3/src/llex.c"
 var $55=((($50)+($54))|0); //@line 323 "lib/lua-5.2.3/src/llex.c"
 $r=$55; //@line 323 "lib/lua-5.2.3/src/llex.c"
 label=9;break; //@line 324 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $57=$i; //@line 319 "lib/lua-5.2.3/src/llex.c"
 var $58=((($57)+(1))|0); //@line 319 "lib/lua-5.2.3/src/llex.c"
 $i=$58; //@line 319 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 319 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $60=$r; //@line 325 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $60; //@line 325 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _escerror($ls,$c,$n,$msg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 $1=$ls;
 $2=$c;
 $3=$n;
 $4=$msg;
 var $5=$1; //@line 307 "lib/lua-5.2.3/src/llex.c"
 var $6=(($5+60)|0); //@line 307 "lib/lua-5.2.3/src/llex.c"
 var $7=HEAP32[(($6)>>2)]; //@line 307 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+4)|0); //@line 307 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($8)>>2)]=0; //@line 307 "lib/lua-5.2.3/src/llex.c"
 var $9=$1; //@line 308 "lib/lua-5.2.3/src/llex.c"
 _save($9,92); //@line 308 "lib/lua-5.2.3/src/llex.c"
 $i=0; //@line 309 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 309 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $11=$i; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $12=$3; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $13=($11|0)<($12|0); //@line 309 "lib/lua-5.2.3/src/llex.c"
 if($13){label=3;break;}else{var $21=0;label=4;break;} //@line 309 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $15=$i; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $16=$2; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $17=(($16+($15<<2))|0); //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $18=HEAP32[(($17)>>2)]; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $19=($18|0)!=-1; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $21=$19;label=4;break;
 case 4: 
 var $21;
 if($21){label=5;break;}else{label=7;break;}
 case 5: 
 var $23=$1; //@line 310 "lib/lua-5.2.3/src/llex.c"
 var $24=$i; //@line 310 "lib/lua-5.2.3/src/llex.c"
 var $25=$2; //@line 310 "lib/lua-5.2.3/src/llex.c"
 var $26=(($25+($24<<2))|0); //@line 310 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 310 "lib/lua-5.2.3/src/llex.c"
 _save($23,$27); //@line 310 "lib/lua-5.2.3/src/llex.c"
 label=6;break; //@line 310 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $29=$i; //@line 309 "lib/lua-5.2.3/src/llex.c"
 var $30=((($29)+(1))|0); //@line 309 "lib/lua-5.2.3/src/llex.c"
 $i=$30; //@line 309 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 309 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $32=$1; //@line 311 "lib/lua-5.2.3/src/llex.c"
 var $33=$4; //@line 311 "lib/lua-5.2.3/src/llex.c"
 _lexerror($32,$33,289); //@line 311 "lib/lua-5.2.3/src/llex.c"
 throw "Reached an unreachable!"; //@line 311 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return; //@line 312 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _readdecesc($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $c=sp;
 var $i;
 var $r;
 $1=$ls;
 $r=0; //@line 331 "lib/lua-5.2.3/src/llex.c"
 $i=0; //@line 332 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 332 "lib/lua-5.2.3/src/llex.c"
 case 2: 
 var $3=$i; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $4=($3|0)<3; //@line 332 "lib/lua-5.2.3/src/llex.c"
 if($4){label=3;break;}else{var $16=0;label=4;break;} //@line 332 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $6=$1; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $7=(($6)|0); //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $8=HEAP32[(($7)>>2)]; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $9=((($8)+(1))|0); //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $10=((800+$9)|0); //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $11=HEAP8[($10)]; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $12=($11&255); //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $13=$12&2; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $14=($13|0)!=0; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $16=$14;label=4;break;
 case 4: 
 var $16;
 if($16){label=5;break;}else{label=10;break;}
 case 5: 
 var $18=$1; //@line 333 "lib/lua-5.2.3/src/llex.c"
 var $19=(($18)|0); //@line 333 "lib/lua-5.2.3/src/llex.c"
 var $20=HEAP32[(($19)>>2)]; //@line 333 "lib/lua-5.2.3/src/llex.c"
 var $21=$i; //@line 333 "lib/lua-5.2.3/src/llex.c"
 var $22=(($c+($21<<2))|0); //@line 333 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($22)>>2)]=$20; //@line 333 "lib/lua-5.2.3/src/llex.c"
 var $23=$r; //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $24=((($23)*(10))&-1); //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $25=$i; //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $26=(($c+($25<<2))|0); //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $27=HEAP32[(($26)>>2)]; //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $28=((($24)+($27))|0); //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $29=((($28)-(48))|0); //@line 334 "lib/lua-5.2.3/src/llex.c"
 $r=$29; //@line 334 "lib/lua-5.2.3/src/llex.c"
 var $30=$1; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $31=(($30+56)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $32=HEAP32[(($31)>>2)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $33=(($32)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $34=HEAP32[(($33)>>2)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $35=((($34)-(1))|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($33)>>2)]=$35; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $36=($34>>>0)>0; //@line 335 "lib/lua-5.2.3/src/llex.c"
 if($36){label=6;break;}else{label=7;break;} //@line 335 "lib/lua-5.2.3/src/llex.c"
 case 6: 
 var $38=$1; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $39=(($38+56)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $40=HEAP32[(($39)>>2)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $41=(($40+4)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $42=HEAP32[(($41)>>2)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $43=(($42+1)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($41)>>2)]=$43; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $44=HEAP8[($42)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $45=($44&255); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $52=$45;label=8;break; //@line 335 "lib/lua-5.2.3/src/llex.c"
 case 7: 
 var $47=$1; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $48=(($47+56)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $49=HEAP32[(($48)>>2)]; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $50=_luaZ_fill($49); //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $52=$50;label=8;break; //@line 335 "lib/lua-5.2.3/src/llex.c"
 case 8: 
 var $52; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $53=$1; //@line 335 "lib/lua-5.2.3/src/llex.c"
 var $54=(($53)|0); //@line 335 "lib/lua-5.2.3/src/llex.c"
 HEAP32[(($54)>>2)]=$52; //@line 335 "lib/lua-5.2.3/src/llex.c"
 label=9;break; //@line 336 "lib/lua-5.2.3/src/llex.c"
 case 9: 
 var $56=$i; //@line 332 "lib/lua-5.2.3/src/llex.c"
 var $57=((($56)+(1))|0); //@line 332 "lib/lua-5.2.3/src/llex.c"
 $i=$57; //@line 332 "lib/lua-5.2.3/src/llex.c"
 label=2;break; //@line 332 "lib/lua-5.2.3/src/llex.c"
 case 10: 
 var $59=$r; //@line 337 "lib/lua-5.2.3/src/llex.c"
 var $60=($59|0)>255; //@line 337 "lib/lua-5.2.3/src/llex.c"
 if($60){label=11;break;}else{label=12;break;} //@line 337 "lib/lua-5.2.3/src/llex.c"
 case 11: 
 var $62=$1; //@line 338 "lib/lua-5.2.3/src/llex.c"
 var $63=(($c)|0); //@line 338 "lib/lua-5.2.3/src/llex.c"
 var $64=$i; //@line 338 "lib/lua-5.2.3/src/llex.c"
 _escerror($62,$63,$64,14088); //@line 338 "lib/lua-5.2.3/src/llex.c"
 label=12;break; //@line 338 "lib/lua-5.2.3/src/llex.c"
 case 12: 
 var $66=$r; //@line 339 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $66; //@line 339 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _txtToken($ls,$token){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ls;
 $3=$token;
 var $4=$3; //@line 92 "lib/lua-5.2.3/src/llex.c"
 if(($4|0)==288|($4|0)==289|($4|0)==287){ label=2;break;}else{label=3;break;}
 case 2: 
 var $6=$2; //@line 96 "lib/lua-5.2.3/src/llex.c"
 _save($6,0); //@line 96 "lib/lua-5.2.3/src/llex.c"
 var $7=$2; //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $8=(($7+52)|0); //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $9=HEAP32[(($8)>>2)]; //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $10=$2; //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $11=(($10+60)|0); //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $12=HEAP32[(($11)>>2)]; //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $13=(($12)|0); //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $14=HEAP32[(($13)>>2)]; //@line 97 "lib/lua-5.2.3/src/llex.c"
 var $15=_luaO_pushfstring($9,10440,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,tempVarArgs)); STACKTOP=tempVarArgs; //@line 97 "lib/lua-5.2.3/src/llex.c"
 $1=$15; //@line 97 "lib/lua-5.2.3/src/llex.c"
 label=4;break; //@line 97 "lib/lua-5.2.3/src/llex.c"
 case 3: 
 var $17=$2; //@line 99 "lib/lua-5.2.3/src/llex.c"
 var $18=$3; //@line 99 "lib/lua-5.2.3/src/llex.c"
 var $19=_luaX_token2str($17,$18); //@line 99 "lib/lua-5.2.3/src/llex.c"
 $1=$19; //@line 99 "lib/lua-5.2.3/src/llex.c"
 label=4;break; //@line 99 "lib/lua-5.2.3/src/llex.c"
 case 4: 
 var $21=$1; //@line 101 "lib/lua-5.2.3/src/llex.c"
 STACKTOP=sp;return $21; //@line 101 "lib/lua-5.2.3/src/llex.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaopen_string($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 1015 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_createtable($2,0,14); //@line 1015 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=$1; //@line 1015 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_setfuncs($3,224,0); //@line 1015 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 1016 "lib/lua-5.2.3/src/lstrlib.c"
 _createmetatable($4); //@line 1016 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 1017 "lib/lua-5.2.3/src/lstrlib.c"
}


function _createmetatable($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 1000 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_createtable($2,0,1); //@line 1000 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=$1; //@line 1001 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_lua_pushlstring($3,19952,0); //@line 1001 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$1; //@line 1002 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushvalue($5,-2); //@line 1002 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$1; //@line 1003 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_lua_setmetatable($6,-2); //@line 1003 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$1; //@line 1004 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($8,-2); //@line 1004 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$1; //@line 1005 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushvalue($9,-2); //@line 1005 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$1; //@line 1006 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_setfield($10,-2,13568); //@line 1006 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=$1; //@line 1007 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($11,-2); //@line 1007 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return; //@line 1008 "lib/lua-5.2.3/src/lstrlib.c"
}


function _str_byte($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $l=sp;
 var $s;
 var $posi;
 var $pose;
 var $n;
 var $i;
 $2=$L;
 var $3=$2; //@line 135 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_luaL_checklstring($3,1,$l); //@line 135 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$4; //@line 135 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 136 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_optinteger($5,2,1); //@line 136 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=HEAP32[(($l)>>2)]; //@line 136 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_posrelat($6,$7); //@line 136 "lib/lua-5.2.3/src/lstrlib.c"
 $posi=$8; //@line 136 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$2; //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$posi; //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_luaL_optinteger($9,3,$10); //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($l)>>2)]; //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=_posrelat($11,$12); //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 $pose=$13; //@line 137 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=$posi; //@line 139 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=($14>>>0)<1; //@line 139 "lib/lua-5.2.3/src/lstrlib.c"
 if($15){label=2;break;}else{label=3;break;} //@line 139 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 $posi=1; //@line 139 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 139 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $18=$pose; //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=HEAP32[(($l)>>2)]; //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=($18>>>0)>($19>>>0); //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 if($20){label=4;break;}else{label=5;break;} //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $22=HEAP32[(($l)>>2)]; //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 $pose=$22; //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 140 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $24=$posi; //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$pose; //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=($24>>>0)>($25>>>0); //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 if($26){label=6;break;}else{label=7;break;} //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 $1=0; //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 141 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $29=$pose; //@line 142 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$posi; //@line 142 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=((($29)-($30))|0); //@line 142 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=((($31)+(1))|0); //@line 142 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$32; //@line 142 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$posi; //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=$n; //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=((($33)+($34))|0); //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$pose; //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=($35>>>0)<=($36>>>0); //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 if($37){label=8;break;}else{label=9;break;} //@line 143 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $39=$2; //@line 144 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=_luaL_error($39,6616,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 144 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$40; //@line 144 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 144 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $42=$2; //@line 145 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=$n; //@line 145 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_checkstack($42,$43,6616); //@line 145 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $45=$i; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=$n; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=($45|0)<($46|0); //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 if($47){label=11;break;}else{label=13;break;} //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $49=$2; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$posi; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=$i; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=((($50)+($51))|0); //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=((($52)-(1))|0); //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=$s; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=(($54+$53)|0); //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=HEAP8[($55)]; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=($56&255); //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($49,$57); //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 label=12;break; //@line 147 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $59=$i; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=((($59)+(1))|0); //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$60; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 146 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $62=$n; //@line 148 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$62; //@line 148 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 148 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $64=$1; //@line 149 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $64; //@line 149 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_char($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $n;
 var $i;
 var $b=sp;
 var $p;
 var $c;
 $1=$L;
 var $2=$1; //@line 153 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_lua_gettop($2); //@line 153 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$3; //@line 153 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 156 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$n; //@line 156 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_buffinitsize($4,$b,$5); //@line 156 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$6; //@line 156 "lib/lua-5.2.3/src/lstrlib.c"
 $i=1; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $8=$i; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$n; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($8|0)<=($9|0); //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=7;break;} //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $12=$1; //@line 158 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$i; //@line 158 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=_luaL_checkinteger($12,$13); //@line 158 "lib/lua-5.2.3/src/lstrlib.c"
 $c=$14; //@line 158 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=$c; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=(($15)&255); //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=($16&255); //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$c; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=($17|0)==($18|0); //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 if($19){var $26=1;label=5;break;}else{label=4;break;} //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $21=$1; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=$i; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=_luaL_argerror($21,$22,6856); //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=($23|0)!=0; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=$24;label=5;break; //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $26;
 var $27=($26&1); //@line 159 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$c; //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($28)&255); //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$i; //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=((($30)-(1))|0); //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=$p; //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=(($32+$31)|0); //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($33)]=$29; //@line 160 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 161 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $35=$i; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=((($35)+(1))|0); //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$36; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 157 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $38=$n; //@line 162 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresultsize($b,$38); //@line 162 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 163 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_dump($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $b=sp;
 $2=$L;
 var $3=$2; //@line 176 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_checktype($3,1,6); //@line 176 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$2; //@line 177 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($4,1); //@line 177 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 178 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_buffinit($5,$b); //@line 178 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$2; //@line 179 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$b; //@line 179 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_lua_dump($6,82,$7); //@line 179 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($8|0)!=0; //@line 179 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 179 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $11=$2; //@line 180 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=_luaL_error($11,7216,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 180 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$12; //@line 180 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 180 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 _luaL_pushresult($b); //@line 181 "lib/lua-5.2.3/src/lstrlib.c"
 $1=1; //@line 182 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 182 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $15=$1; //@line 183 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $15; //@line 183 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_find($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 630 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_str_find_aux($2,1); //@line 630 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $3; //@line 630 "lib/lua-5.2.3/src/lstrlib.c"
}


function _str_format($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1080)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $top;
 var $arg;
 var $sfl=sp;
 var $strfrmt;
 var $strfrmt_end;
 var $b=(sp)+(8);
 var $form=(sp)+(1048);
 var $buff;
 var $nb;
 var $n;
 var $ni;
 var $diff;
 var $n1;
 var $ni2;
 var $diff3;
 var $l=(sp)+(1072);
 var $s;
 $2=$L;
 var $3=$2; //@line 893 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_lua_gettop($3); //@line 893 "lib/lua-5.2.3/src/lstrlib.c"
 $top=$4; //@line 893 "lib/lua-5.2.3/src/lstrlib.c"
 $arg=1; //@line 894 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 896 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$arg; //@line 896 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_luaL_checklstring($5,$6,$sfl); //@line 896 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$7; //@line 896 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$strfrmt; //@line 897 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($sfl)>>2)]; //@line 897 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($8+$9)|0); //@line 897 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt_end=$10; //@line 897 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=$2; //@line 899 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_buffinit($11,$b); //@line 899 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 900 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $13=$strfrmt; //@line 900 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=$strfrmt_end; //@line 900 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=($13>>>0)<($14>>>0); //@line 900 "lib/lua-5.2.3/src/lstrlib.c"
 if($15){label=3;break;}else{label=33;break;} //@line 900 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $17=$strfrmt; //@line 901 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=HEAP8[($17)]; //@line 901 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18<<24)>>24); //@line 901 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=($19|0)!=37; //@line 901 "lib/lua-5.2.3/src/lstrlib.c"
 if($20){label=4;break;}else{label=7;break;} //@line 901 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $22=(($b+8)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=(($b+4)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=HEAP32[(($24)>>2)]; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=($23>>>0)<($25>>>0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 if($26){var $31=1;label=6;break;}else{label=5;break;} //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $28=_luaL_prepbuffsize($b,1); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=($28|0)!=0; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=$29;label=6;break; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $31;
 var $32=($31&1); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$strfrmt; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=(($33+1)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$34; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=HEAP8[($33)]; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=(($b+8)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=HEAP32[(($36)>>2)]; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=((($37)+(1))|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($36)>>2)]=$38; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=(($b)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=HEAP32[(($39)>>2)]; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=(($40+$37)|0); //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($41)]=$35; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 label=32;break; //@line 902 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $43=$strfrmt; //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=(($43+1)|0); //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$44; //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=HEAP8[($44)]; //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=(($45<<24)>>24); //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=($46|0)==37; //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 if($47){label=8;break;}else{label=11;break;} //@line 903 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $49=(($b+8)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=HEAP32[(($49)>>2)]; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=(($b+4)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=HEAP32[(($51)>>2)]; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=($50>>>0)<($52>>>0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 if($53){var $58=1;label=10;break;}else{label=9;break;} //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $55=_luaL_prepbuffsize($b,1); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=($55|0)!=0; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=$56;label=10;break; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $58;
 var $59=($58&1); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=$strfrmt; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=(($60+1)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$61; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=HEAP8[($60)]; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=(($b+8)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $64=HEAP32[(($63)>>2)]; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $65=((($64)+(1))|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($63)>>2)]=$65; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $66=(($b)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=HEAP32[(($66)>>2)]; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=(($67+$64)|0); //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($68)]=$62; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 label=31;break; //@line 904 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $70=_luaL_prepbuffsize($b,512); //@line 907 "lib/lua-5.2.3/src/lstrlib.c"
 $buff=$70; //@line 907 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=0; //@line 908 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=$arg; //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=((($71)+(1))|0); //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 $arg=$72; //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=$top; //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 var $74=($72|0)>($73|0); //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 if($74){label=12;break;}else{label=13;break;} //@line 909 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $76=$2; //@line 910 "lib/lua-5.2.3/src/lstrlib.c"
 var $77=$arg; //@line 910 "lib/lua-5.2.3/src/lstrlib.c"
 var $78=_luaL_argerror($76,$77,9048); //@line 910 "lib/lua-5.2.3/src/lstrlib.c"
 label=13;break; //@line 910 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $80=$2; //@line 911 "lib/lua-5.2.3/src/lstrlib.c"
 var $81=$strfrmt; //@line 911 "lib/lua-5.2.3/src/lstrlib.c"
 var $82=(($form)|0); //@line 911 "lib/lua-5.2.3/src/lstrlib.c"
 var $83=_scanformat($80,$81,$82); //@line 911 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$83; //@line 911 "lib/lua-5.2.3/src/lstrlib.c"
 var $84=$strfrmt; //@line 912 "lib/lua-5.2.3/src/lstrlib.c"
 var $85=(($84+1)|0); //@line 912 "lib/lua-5.2.3/src/lstrlib.c"
 $strfrmt=$85; //@line 912 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=HEAP8[($84)]; //@line 912 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=(($86<<24)>>24); //@line 912 "lib/lua-5.2.3/src/lstrlib.c"
 switch(($87|0)){case 99:{ label=14;break;}case 100:case 105:{ label=15;break;}case 111:case 117:case 120:case 88:{ label=19;break;}case 101:case 69:case 102:case 103:case 71:{ label=23;break;}case 113:{ label=24;break;}case 115:{ label=25;break;}default:{label=29;break;}}break;
 case 14: 
 var $89=$buff; //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=(($form)|0); //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=$2; //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=$arg; //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=_luaL_checkinteger($91,$92); //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 var $94=_sprintf($89,$90,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$93,tempVarArgs)); STACKTOP=tempVarArgs; //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=$94; //@line 914 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 915 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $96=$2; //@line 918 "lib/lua-5.2.3/src/lstrlib.c"
 var $97=$arg; //@line 918 "lib/lua-5.2.3/src/lstrlib.c"
 var $98=_luaL_checknumber($96,$97); //@line 918 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$98; //@line 918 "lib/lua-5.2.3/src/lstrlib.c"
 var $99=$n; //@line 919 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=(($99)&-1); //@line 919 "lib/lua-5.2.3/src/lstrlib.c"
 $ni=$100; //@line 919 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=$n; //@line 920 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=$ni; //@line 920 "lib/lua-5.2.3/src/lstrlib.c"
 var $103=($102|0); //@line 920 "lib/lua-5.2.3/src/lstrlib.c"
 var $104=($101)-($103); //@line 920 "lib/lua-5.2.3/src/lstrlib.c"
 $diff=$104; //@line 920 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=$diff; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $106=-1<$105; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 if($106){label=16;break;}else{label=17;break;} //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $108=$diff; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $109=$108<1; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 if($109){var $116=1;label=18;break;}else{label=17;break;} //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $111=$2; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $112=$arg; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $113=_luaL_argerror($111,$112,8752); //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $114=($113|0)!=0; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $116=$114;label=18;break; //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 case 18: 
 var $116;
 var $117=($116&1); //@line 921 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=(($form)|0); //@line 923 "lib/lua-5.2.3/src/lstrlib.c"
 _addlenmod($118,8424); //@line 923 "lib/lua-5.2.3/src/lstrlib.c"
 var $119=$buff; //@line 924 "lib/lua-5.2.3/src/lstrlib.c"
 var $120=(($form)|0); //@line 924 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=$ni; //@line 924 "lib/lua-5.2.3/src/lstrlib.c"
 var $122=_sprintf($119,$120,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$121,tempVarArgs)); STACKTOP=tempVarArgs; //@line 924 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=$122; //@line 924 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 925 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 var $124=$2; //@line 928 "lib/lua-5.2.3/src/lstrlib.c"
 var $125=$arg; //@line 928 "lib/lua-5.2.3/src/lstrlib.c"
 var $126=_luaL_checknumber($124,$125); //@line 928 "lib/lua-5.2.3/src/lstrlib.c"
 $n1=$126; //@line 928 "lib/lua-5.2.3/src/lstrlib.c"
 var $127=$n1; //@line 929 "lib/lua-5.2.3/src/lstrlib.c"
 var $128=($127>=0 ? Math_floor($127) : Math_ceil($127)); //@line 929 "lib/lua-5.2.3/src/lstrlib.c"
 $ni2=$128; //@line 929 "lib/lua-5.2.3/src/lstrlib.c"
 var $129=$n1; //@line 930 "lib/lua-5.2.3/src/lstrlib.c"
 var $130=$ni2; //@line 930 "lib/lua-5.2.3/src/lstrlib.c"
 var $131=($130>>>0); //@line 930 "lib/lua-5.2.3/src/lstrlib.c"
 var $132=($129)-($131); //@line 930 "lib/lua-5.2.3/src/lstrlib.c"
 $diff3=$132; //@line 930 "lib/lua-5.2.3/src/lstrlib.c"
 var $133=$diff3; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $134=-1<$133; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 if($134){label=20;break;}else{label=21;break;} //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 var $136=$diff3; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $137=$136<1; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 if($137){var $144=1;label=22;break;}else{label=21;break;} //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 case 21: 
 var $139=$2; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $140=$arg; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $141=_luaL_argerror($139,$140,8216); //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $142=($141|0)!=0; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $144=$142;label=22;break; //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 case 22: 
 var $144;
 var $145=($144&1); //@line 931 "lib/lua-5.2.3/src/lstrlib.c"
 var $146=(($form)|0); //@line 933 "lib/lua-5.2.3/src/lstrlib.c"
 _addlenmod($146,8424); //@line 933 "lib/lua-5.2.3/src/lstrlib.c"
 var $147=$buff; //@line 934 "lib/lua-5.2.3/src/lstrlib.c"
 var $148=(($form)|0); //@line 934 "lib/lua-5.2.3/src/lstrlib.c"
 var $149=$ni2; //@line 934 "lib/lua-5.2.3/src/lstrlib.c"
 var $150=_sprintf($147,$148,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$149,tempVarArgs)); STACKTOP=tempVarArgs; //@line 934 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=$150; //@line 934 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 935 "lib/lua-5.2.3/src/lstrlib.c"
 case 23: 
 var $152=(($form)|0); //@line 942 "lib/lua-5.2.3/src/lstrlib.c"
 _addlenmod($152,19952); //@line 942 "lib/lua-5.2.3/src/lstrlib.c"
 var $153=$buff; //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 var $154=(($form)|0); //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 var $155=$2; //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 var $156=$arg; //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 var $157=_luaL_checknumber($155,$156); //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 var $158=_sprintf($153,$154,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$157,tempVarArgs)); STACKTOP=tempVarArgs; //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=$158; //@line 943 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 944 "lib/lua-5.2.3/src/lstrlib.c"
 case 24: 
 var $160=$2; //@line 947 "lib/lua-5.2.3/src/lstrlib.c"
 var $161=$arg; //@line 947 "lib/lua-5.2.3/src/lstrlib.c"
 _addquoted($160,$b,$161); //@line 947 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 948 "lib/lua-5.2.3/src/lstrlib.c"
 case 25: 
 var $163=$2; //@line 952 "lib/lua-5.2.3/src/lstrlib.c"
 var $164=$arg; //@line 952 "lib/lua-5.2.3/src/lstrlib.c"
 var $165=_luaL_tolstring($163,$164,$l); //@line 952 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$165; //@line 952 "lib/lua-5.2.3/src/lstrlib.c"
 var $166=(($form)|0); //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 var $167=_strchr($166,46); //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 var $168=($167|0)!=0; //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 if($168){label=28;break;}else{label=26;break;} //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 case 26: 
 var $170=HEAP32[(($l)>>2)]; //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 var $171=($170>>>0)>=100; //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 if($171){label=27;break;}else{label=28;break;} //@line 953 "lib/lua-5.2.3/src/lstrlib.c"
 case 27: 
 _luaL_addvalue($b); //@line 956 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 957 "lib/lua-5.2.3/src/lstrlib.c"
 case 28: 
 var $174=$buff; //@line 960 "lib/lua-5.2.3/src/lstrlib.c"
 var $175=(($form)|0); //@line 960 "lib/lua-5.2.3/src/lstrlib.c"
 var $176=$s; //@line 960 "lib/lua-5.2.3/src/lstrlib.c"
 var $177=_sprintf($174,$175,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$176,tempVarArgs)); STACKTOP=tempVarArgs; //@line 960 "lib/lua-5.2.3/src/lstrlib.c"
 $nb=$177; //@line 960 "lib/lua-5.2.3/src/lstrlib.c"
 var $178=$2; //@line 961 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($178,-2); //@line 961 "lib/lua-5.2.3/src/lstrlib.c"
 label=30;break; //@line 962 "lib/lua-5.2.3/src/lstrlib.c"
 case 29: 
 var $180=$2; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 var $181=$strfrmt; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 var $182=((($181)-(1))|0); //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 var $183=HEAP8[($182)]; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 var $184=(($183<<24)>>24); //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 var $185=_luaL_error($180,8064,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$184,tempVarArgs)); STACKTOP=tempVarArgs; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$185; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 label=34;break; //@line 966 "lib/lua-5.2.3/src/lstrlib.c"
 case 30: 
 var $187=$nb; //@line 970 "lib/lua-5.2.3/src/lstrlib.c"
 var $188=(($b+8)|0); //@line 970 "lib/lua-5.2.3/src/lstrlib.c"
 var $189=HEAP32[(($188)>>2)]; //@line 970 "lib/lua-5.2.3/src/lstrlib.c"
 var $190=((($189)+($187))|0); //@line 970 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($188)>>2)]=$190; //@line 970 "lib/lua-5.2.3/src/lstrlib.c"
 label=31;break;
 case 31: 
 label=32;break;
 case 32: 
 label=2;break; //@line 972 "lib/lua-5.2.3/src/lstrlib.c"
 case 33: 
 _luaL_pushresult($b); //@line 973 "lib/lua-5.2.3/src/lstrlib.c"
 $1=1; //@line 974 "lib/lua-5.2.3/src/lstrlib.c"
 label=34;break; //@line 974 "lib/lua-5.2.3/src/lstrlib.c"
 case 34: 
 var $195=$1; //@line 975 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $195; //@line 975 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _gmatch($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 669 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,0); //@line 669 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 670 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_luaL_checklstring($4,2,0); //@line 670 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$1; //@line 671 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($6,2); //@line 671 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$1; //@line 672 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($7,0); //@line 672 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$1; //@line 673 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushcclosure($8,220,3); //@line 673 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 674 "lib/lua-5.2.3/src/lstrlib.c"
}


function _str_gsub($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1336)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $srcl=sp;
 var $lp=(sp)+(8);
 var $src;
 var $p;
 var $tr;
 var $max_s;
 var $anchor;
 var $n;
 var $ms=(sp)+(16);
 var $b=(sp)+(296);
 var $e;
 $1=$L;
 var $2=$1; //@line 737 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$srcl); //@line 737 "lib/lua-5.2.3/src/lstrlib.c"
 $src=$3; //@line 737 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 738 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_luaL_checklstring($4,2,$lp); //@line 738 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$5; //@line 738 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$1; //@line 739 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_lua_type($6,3); //@line 739 "lib/lua-5.2.3/src/lstrlib.c"
 $tr=$7; //@line 739 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$1; //@line 740 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($srcl)>>2)]; //@line 740 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=((($9)+(1))|0); //@line 740 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_luaL_optinteger($8,4,$10); //@line 740 "lib/lua-5.2.3/src/lstrlib.c"
 $max_s=$11; //@line 740 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$p; //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=HEAP8[($12)]; //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($13<<24)>>24); //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=($14|0)==94; //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=($15&1); //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 $anchor=$16; //@line 741 "lib/lua-5.2.3/src/lstrlib.c"
 $n=0; //@line 742 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$tr; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=($17|0)==3; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 if($18){var $33=1;label=6;break;}else{label=2;break;} //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $20=$tr; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=($20|0)==4; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 if($21){var $33=1;label=6;break;}else{label=3;break;} //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $23=$tr; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=($23|0)==6; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 if($24){var $33=1;label=6;break;}else{label=4;break;} //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $26=$tr; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=($26|0)==5; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 if($27){var $33=1;label=6;break;}else{label=5;break;} //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $29=$1; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=_luaL_argerror($29,3,9760); //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=($30|0)!=0; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$31;label=6;break; //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $33;
 var $34=($33&1); //@line 745 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=$1; //@line 748 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_buffinit($35,$b); //@line 748 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$anchor; //@line 749 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=($36|0)!=0; //@line 749 "lib/lua-5.2.3/src/lstrlib.c"
 if($37){label=7;break;}else{label=8;break;} //@line 749 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $39=$p; //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=(($39+1)|0); //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$40; //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=HEAP32[(($lp)>>2)]; //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=((($41)-(1))|0); //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($lp)>>2)]=$42; //@line 750 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 751 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $44=$1; //@line 752 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=(($ms+16)|0); //@line 752 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($45)>>2)]=$44; //@line 752 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=(($ms)|0); //@line 753 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($46)>>2)]=200; //@line 753 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=$src; //@line 754 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=(($ms+4)|0); //@line 754 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($48)>>2)]=$47; //@line 754 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=$src; //@line 755 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=HEAP32[(($srcl)>>2)]; //@line 755 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=(($49+$50)|0); //@line 755 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=(($ms+8)|0); //@line 755 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($52)>>2)]=$51; //@line 755 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=$p; //@line 756 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=HEAP32[(($lp)>>2)]; //@line 756 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=(($53+$54)|0); //@line 756 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=(($ms+12)|0); //@line 756 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($56)>>2)]=$55; //@line 756 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break; //@line 757 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $58=$n; //@line 757 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=$max_s; //@line 757 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=($58>>>0)<($59>>>0); //@line 757 "lib/lua-5.2.3/src/lstrlib.c"
 if($60){label=10;break;}else{label=24;break;} //@line 757 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $62=(($ms+20)|0); //@line 759 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($62)>>2)]=0; //@line 759 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=$src; //@line 761 "lib/lua-5.2.3/src/lstrlib.c"
 var $64=$p; //@line 761 "lib/lua-5.2.3/src/lstrlib.c"
 var $65=_match($ms,$63,$64); //@line 761 "lib/lua-5.2.3/src/lstrlib.c"
 $e=$65; //@line 761 "lib/lua-5.2.3/src/lstrlib.c"
 var $66=$e; //@line 762 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=($66|0)!=0; //@line 762 "lib/lua-5.2.3/src/lstrlib.c"
 if($67){label=11;break;}else{label=12;break;} //@line 762 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $69=$n; //@line 763 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=((($69)+(1))|0); //@line 763 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$70; //@line 763 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=$src; //@line 764 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=$e; //@line 764 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=$tr; //@line 764 "lib/lua-5.2.3/src/lstrlib.c"
 _add_value($ms,$b,$71,$72,$73); //@line 764 "lib/lua-5.2.3/src/lstrlib.c"
 label=12;break; //@line 765 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $75=$e; //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 var $76=($75|0)!=0; //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 if($76){label=13;break;}else{label=15;break;} //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $78=$e; //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 var $79=$src; //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=($78>>>0)>($79>>>0); //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 if($80){label=14;break;}else{label=15;break;} //@line 766 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $82=$e; //@line 767 "lib/lua-5.2.3/src/lstrlib.c"
 $src=$82; //@line 767 "lib/lua-5.2.3/src/lstrlib.c"
 label=21;break; //@line 767 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $84=$src; //@line 768 "lib/lua-5.2.3/src/lstrlib.c"
 var $85=(($ms+8)|0); //@line 768 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=HEAP32[(($85)>>2)]; //@line 768 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=($84>>>0)<($86>>>0); //@line 768 "lib/lua-5.2.3/src/lstrlib.c"
 if($87){label=16;break;}else{label=19;break;} //@line 768 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $89=(($b+8)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=HEAP32[(($89)>>2)]; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=(($b+4)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=HEAP32[(($91)>>2)]; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=($90>>>0)<($92>>>0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 if($93){var $98=1;label=18;break;}else{label=17;break;} //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $95=_luaL_prepbuffsize($b,1); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $96=($95|0)!=0; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $98=$96;label=18;break; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 case 18: 
 var $98;
 var $99=($98&1); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=$src; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=(($100+1)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 $src=$101; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=HEAP8[($100)]; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $103=(($b+8)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $104=HEAP32[(($103)>>2)]; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=((($104)+(1))|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($103)>>2)]=$105; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $106=(($b)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $107=HEAP32[(($106)>>2)]; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 var $108=(($107+$104)|0); //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($108)]=$102; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 label=20;break; //@line 769 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 label=24;break; //@line 770 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 label=21;break;
 case 21: 
 var $112=$anchor; //@line 771 "lib/lua-5.2.3/src/lstrlib.c"
 var $113=($112|0)!=0; //@line 771 "lib/lua-5.2.3/src/lstrlib.c"
 if($113){label=22;break;}else{label=23;break;} //@line 771 "lib/lua-5.2.3/src/lstrlib.c"
 case 22: 
 label=24;break; //@line 771 "lib/lua-5.2.3/src/lstrlib.c"
 case 23: 
 label=9;break; //@line 772 "lib/lua-5.2.3/src/lstrlib.c"
 case 24: 
 var $117=$src; //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=(($ms+8)|0); //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $119=HEAP32[(($118)>>2)]; //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $120=$src; //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=$119; //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $122=$120; //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 var $123=((($121)-($122))|0); //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addlstring($b,$117,$123); //@line 773 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresult($b); //@line 774 "lib/lua-5.2.3/src/lstrlib.c"
 var $124=$1; //@line 775 "lib/lua-5.2.3/src/lstrlib.c"
 var $125=$n; //@line 775 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($124,$125); //@line 775 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 2; //@line 776 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_len($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $l=sp;
 $1=$L;
 var $2=$1; //@line 39 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$l); //@line 39 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 40 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=HEAP32[(($l)>>2)]; //@line 40 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($4,$5); //@line 40 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 41 "lib/lua-5.2.3/src/lstrlib.c"
}


function _str_lower($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1048)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $l=sp;
 var $i;
 var $b=(sp)+(8);
 var $s;
 var $p;
 $1=$L;
 var $2=$1; //@line 83 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$l); //@line 83 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$3; //@line 83 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 84 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=HEAP32[(($l)>>2)]; //@line 84 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_buffinitsize($4,$b,$5); //@line 84 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$6; //@line 84 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $8=$i; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($l)>>2)]; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($8>>>0)<($9>>>0); //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=5;break;} //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $12=$i; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$s; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($13+$12)|0); //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=HEAP8[($14)]; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=($15&255); //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=_tolower($16); //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17)&255); //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$i; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$p; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=(($20+$19)|0); //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($21)]=$18; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 86 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $23=$i; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=((($23)+(1))|0); //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$24; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 85 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $26=HEAP32[(($l)>>2)]; //@line 87 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresultsize($b,$26); //@line 87 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 88 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_match($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 635 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_str_find_aux($2,0); //@line 635 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $3; //@line 635 "lib/lua-5.2.3/src/lstrlib.c"
}


function _str_rep($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1056)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $l=sp;
 var $lsep=(sp)+(8);
 var $s;
 var $n;
 var $sep;
 var $totallen;
 var $b=(sp)+(16);
 var $p;
 $2=$L;
 var $3=$2; //@line 110 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_luaL_checklstring($3,1,$l); //@line 110 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$4; //@line 110 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 111 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_checkinteger($5,2); //@line 111 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$6; //@line 111 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$2; //@line 112 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_luaL_optlstring($7,3,19952,$lsep); //@line 112 "lib/lua-5.2.3/src/lstrlib.c"
 $sep=$8; //@line 112 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$n; //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($9|0)<=0; //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=2;break;}else{label=3;break;} //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $12=$2; //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=_lua_pushlstring($12,19952,0); //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 label=13;break; //@line 113 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $15=HEAP32[(($l)>>2)]; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=HEAP32[(($lsep)>>2)]; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=((($15)+($16))|0); //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=HEAP32[(($l)>>2)]; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=($17>>>0)<($18>>>0); //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 if($19){label=5;break;}else{label=4;break;} //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $21=HEAP32[(($l)>>2)]; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=HEAP32[(($lsep)>>2)]; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=((($21)+($22))|0); //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$n; //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=(((2147483647)/(($24>>>0)))&-1); //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=($23>>>0)>=($25>>>0); //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 if($26){label=5;break;}else{label=6;break;} //@line 114 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $28=$2; //@line 115 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=_luaL_error($28,13512,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 115 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$29; //@line 115 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 115 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $31=$n; //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=HEAP32[(($l)>>2)]; //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=(Math_imul($31,$32)|0); //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=$n; //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=((($34)-(1))|0); //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=HEAP32[(($lsep)>>2)]; //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=(Math_imul($35,$36)|0); //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=((($33)+($37))|0); //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 $totallen=$38; //@line 117 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=$2; //@line 119 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=$totallen; //@line 119 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=_luaL_buffinitsize($39,$b,$40); //@line 119 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$41; //@line 119 "lib/lua-5.2.3/src/lstrlib.c"
 label=7;break; //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $43=$n; //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=((($43)-(1))|0); //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$44; //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=($43|0)>1; //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 if($45){label=8;break;}else{label=11;break;} //@line 120 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $47=$p; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=$s; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=HEAP32[(($l)>>2)]; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$49; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 assert($50 % 1 === 0);(_memcpy($47, $48, $50)|0); //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=HEAP32[(($l)>>2)]; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$p; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=(($52+$51)|0); //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$53; //@line 121 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=HEAP32[(($lsep)>>2)]; //@line 122 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=($54>>>0)>0; //@line 122 "lib/lua-5.2.3/src/lstrlib.c"
 if($55){label=9;break;}else{label=10;break;} //@line 122 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $57=$p; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=$sep; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=HEAP32[(($lsep)>>2)]; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=$59; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 assert($60 % 1 === 0);(_memcpy($57, $58, $60)|0); //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=HEAP32[(($lsep)>>2)]; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=$p; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=(($62+$61)|0); //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$63; //@line 123 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 124 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 label=7;break; //@line 125 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $66=$p; //@line 126 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=$s; //@line 126 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=HEAP32[(($l)>>2)]; //@line 126 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=$68; //@line 126 "lib/lua-5.2.3/src/lstrlib.c"
 assert($69 % 1 === 0);(_memcpy($66, $67, $69)|0); //@line 126 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=$totallen; //@line 127 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresultsize($b,$70); //@line 127 "lib/lua-5.2.3/src/lstrlib.c"
 label=12;break;
 case 12: 
 label=13;break;
 case 13: 
 $1=1; //@line 129 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 129 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $74=$1; //@line 130 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $74; //@line 130 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_reverse($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1048)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $l=sp;
 var $i;
 var $b=(sp)+(8);
 var $s;
 var $p;
 $1=$L;
 var $2=$1; //@line 70 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$l); //@line 70 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$3; //@line 70 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 71 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=HEAP32[(($l)>>2)]; //@line 71 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_buffinitsize($4,$b,$5); //@line 71 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$6; //@line 71 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $8=$i; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($l)>>2)]; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($8>>>0)<($9>>>0); //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=5;break;} //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $12=HEAP32[(($l)>>2)]; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$i; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=((($12)-($13))|0); //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=((($14)-(1))|0); //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$s; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=(($16+$15)|0); //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=HEAP8[($17)]; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$i; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$p; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=(($20+$19)|0); //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($21)]=$18; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 73 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $23=$i; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=((($23)+(1))|0); //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$24; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 72 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $26=HEAP32[(($l)>>2)]; //@line 74 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresultsize($b,$26); //@line 74 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 75 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_sub($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $l=sp;
 var $s;
 var $start;
 var $end;
 $1=$L;
 var $2=$1; //@line 55 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$l); //@line 55 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$3; //@line 55 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 56 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_luaL_checkinteger($4,2); //@line 56 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=HEAP32[(($l)>>2)]; //@line 56 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_posrelat($5,$6); //@line 56 "lib/lua-5.2.3/src/lstrlib.c"
 $start=$7; //@line 56 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$1; //@line 57 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=_luaL_optinteger($8,3,-1); //@line 57 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=HEAP32[(($l)>>2)]; //@line 57 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_posrelat($9,$10); //@line 57 "lib/lua-5.2.3/src/lstrlib.c"
 $end=$11; //@line 57 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$start; //@line 58 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($12>>>0)<1; //@line 58 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=2;break;}else{label=3;break;} //@line 58 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 $start=1; //@line 58 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 58 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $16=$end; //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP32[(($l)>>2)]; //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=($16>>>0)>($17>>>0); //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 if($18){label=4;break;}else{label=5;break;} //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $20=HEAP32[(($l)>>2)]; //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 $end=$20; //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 59 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $22=$start; //@line 60 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=$end; //@line 60 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=($22>>>0)<=($23>>>0); //@line 60 "lib/lua-5.2.3/src/lstrlib.c"
 if($24){label=6;break;}else{label=7;break;} //@line 60 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $26=$1; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=$s; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$start; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($27+$28)|0); //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=((($29)-(1))|0); //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=$end; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=$start; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=((($31)-($32))|0); //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=((($33)+(1))|0); //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=_lua_pushlstring($26,$30,$34); //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 61 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $37=$1; //@line 62 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=_lua_pushlstring($37,19952,0); //@line 62 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break;
 case 8: 
 STACKTOP=sp;return 1; //@line 63 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_upper($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1048)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $l=sp;
 var $i;
 var $b=(sp)+(8);
 var $s;
 var $p;
 $1=$L;
 var $2=$1; //@line 96 "lib/lua-5.2.3/src/lstrlib.c"
 var $3=_luaL_checklstring($2,1,$l); //@line 96 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$3; //@line 96 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=$1; //@line 97 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=HEAP32[(($l)>>2)]; //@line 97 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_buffinitsize($4,$b,$5); //@line 97 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$6; //@line 97 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $8=$i; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($l)>>2)]; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($8>>>0)<($9>>>0); //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=5;break;} //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $12=$i; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$s; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($13+$12)|0); //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=HEAP8[($14)]; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=($15&255); //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=_toupper($16); //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17)&255); //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$i; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$p; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=(($20+$19)|0); //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($21)]=$18; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 99 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $23=$i; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=((($23)+(1))|0); //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$24; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 98 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $26=HEAP32[(($l)>>2)]; //@line 100 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_pushresultsize($b,$26); //@line 100 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 1; //@line 101 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _posrelat($pos,$len){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$pos;
 $3=$len;
 var $4=$2; //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=($4|0)>=0; //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 if($5){label=2;break;}else{label=3;break;} //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $7=$2; //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$7; //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 47 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $9=$2; //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(((-$9))|0); //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=$3; //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=($10>>>0)>($11>>>0); //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 if($12){label=4;break;}else{label=5;break;} //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 $1=0; //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 48 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $15=$3; //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$2; //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=(((-$16))|0); //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=((($15)-($17))|0); //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=((($18)+(1))|0); //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$19; //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 49 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $21=$1; //@line 50 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $21; //@line 50 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_find_aux($L,$find){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+296)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ls=sp;
 var $lp=(sp)+(8);
 var $s;
 var $p;
 var $init;
 var $s2;
 var $ms=(sp)+(16);
 var $s1;
 var $anchor;
 var $res;
 $2=$L;
 $3=$find;
 var $4=$2; //@line 579 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_luaL_checklstring($4,1,$ls); //@line 579 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$5; //@line 579 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$2; //@line 580 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_luaL_checklstring($6,2,$lp); //@line 580 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$7; //@line 580 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$2; //@line 581 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=_luaL_optinteger($8,3,1); //@line 581 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=HEAP32[(($ls)>>2)]; //@line 581 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_posrelat($9,$10); //@line 581 "lib/lua-5.2.3/src/lstrlib.c"
 $init=$11; //@line 581 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$init; //@line 582 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($12>>>0)<1; //@line 582 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=2;break;}else{label=3;break;} //@line 582 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 $init=1; //@line 582 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 582 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $16=$init; //@line 583 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP32[(($ls)>>2)]; //@line 583 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=((($17)+(1))|0); //@line 583 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=($16>>>0)>($18>>>0); //@line 583 "lib/lua-5.2.3/src/lstrlib.c"
 if($19){label=4;break;}else{label=5;break;} //@line 583 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $21=$2; //@line 584 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushnil($21); //@line 584 "lib/lua-5.2.3/src/lstrlib.c"
 $1=1; //@line 585 "lib/lua-5.2.3/src/lstrlib.c"
 label=25;break; //@line 585 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 label=6;break;
 case 6: 
 var $24=$3; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=($24|0)!=0; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 if($25){label=7;break;}else{label=12;break;} //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $27=$2; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=_lua_toboolean($27,4); //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=($28|0)!=0; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 if($29){label=9;break;}else{label=8;break;} //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $31=$p; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=HEAP32[(($lp)>>2)]; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=_nospecials($31,$32); //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=($33|0)!=0; //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 if($34){label=9;break;}else{label=12;break;} //@line 588 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $36=$s; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$init; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=(($36+$37)|0); //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=((($38)-(1))|0); //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=HEAP32[(($ls)>>2)]; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=$init; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=((($40)-($41))|0); //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=((($42)+(1))|0); //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=$p; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=HEAP32[(($lp)>>2)]; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=_lmemfind($39,$43,$44,$45); //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 $s2=$46; //@line 590 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=$s2; //@line 591 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=($47|0)!=0; //@line 591 "lib/lua-5.2.3/src/lstrlib.c"
 if($48){label=10;break;}else{label=11;break;} //@line 591 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $50=$2; //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=$s2; //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$s; //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=$51; //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=$52; //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=((($53)-($54))|0); //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=((($55)+(1))|0); //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($50,$56); //@line 592 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=$2; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=$s2; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=$s; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=$58; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=$59; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=((($60)-($61))|0); //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=HEAP32[(($lp)>>2)]; //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 var $64=((($62)+($63))|0); //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($57,$64); //@line 593 "lib/lua-5.2.3/src/lstrlib.c"
 $1=2; //@line 594 "lib/lua-5.2.3/src/lstrlib.c"
 label=25;break; //@line 594 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 label=24;break; //@line 596 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $67=$s; //@line 599 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=$init; //@line 599 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=(($67+$68)|0); //@line 599 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=((($69)-(1))|0); //@line 599 "lib/lua-5.2.3/src/lstrlib.c"
 $s1=$70; //@line 599 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=$p; //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=HEAP8[($71)]; //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=(($72<<24)>>24); //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 var $74=($73|0)==94; //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 var $75=($74&1); //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 $anchor=$75; //@line 600 "lib/lua-5.2.3/src/lstrlib.c"
 var $76=$anchor; //@line 601 "lib/lua-5.2.3/src/lstrlib.c"
 var $77=($76|0)!=0; //@line 601 "lib/lua-5.2.3/src/lstrlib.c"
 if($77){label=13;break;}else{label=14;break;} //@line 601 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $79=$p; //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=(($79+1)|0); //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$80; //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 var $81=HEAP32[(($lp)>>2)]; //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 var $82=((($81)-(1))|0); //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($lp)>>2)]=$82; //@line 602 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 603 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $84=$2; //@line 604 "lib/lua-5.2.3/src/lstrlib.c"
 var $85=(($ms+16)|0); //@line 604 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($85)>>2)]=$84; //@line 604 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=(($ms)|0); //@line 605 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($86)>>2)]=200; //@line 605 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=$s; //@line 606 "lib/lua-5.2.3/src/lstrlib.c"
 var $88=(($ms+4)|0); //@line 606 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($88)>>2)]=$87; //@line 606 "lib/lua-5.2.3/src/lstrlib.c"
 var $89=$s; //@line 607 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=HEAP32[(($ls)>>2)]; //@line 607 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=(($89+$90)|0); //@line 607 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=(($ms+8)|0); //@line 607 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($92)>>2)]=$91; //@line 607 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=$p; //@line 608 "lib/lua-5.2.3/src/lstrlib.c"
 var $94=HEAP32[(($lp)>>2)]; //@line 608 "lib/lua-5.2.3/src/lstrlib.c"
 var $95=(($93+$94)|0); //@line 608 "lib/lua-5.2.3/src/lstrlib.c"
 var $96=(($ms+12)|0); //@line 608 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($96)>>2)]=$95; //@line 608 "lib/lua-5.2.3/src/lstrlib.c"
 label=15;break; //@line 609 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $98=(($ms+20)|0); //@line 611 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($98)>>2)]=0; //@line 611 "lib/lua-5.2.3/src/lstrlib.c"
 var $99=$s1; //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=$p; //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=_match($ms,$99,$100); //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$101; //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=($101|0)!=0; //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 if($102){label=16;break;}else{label=19;break;} //@line 613 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $104=$3; //@line 614 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=($104|0)!=0; //@line 614 "lib/lua-5.2.3/src/lstrlib.c"
 if($105){label=17;break;}else{label=18;break;} //@line 614 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $107=$2; //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $108=$s1; //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $109=$s; //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $110=$108; //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $111=$109; //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $112=((($110)-($111))|0); //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $113=((($112)+(1))|0); //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($107,$113); //@line 615 "lib/lua-5.2.3/src/lstrlib.c"
 var $114=$2; //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $115=$res; //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $116=$s; //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $117=$115; //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=$116; //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $119=((($117)-($118))|0); //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($114,$119); //@line 616 "lib/lua-5.2.3/src/lstrlib.c"
 var $120=_push_captures($ms,0,0); //@line 617 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=((($120)+(2))|0); //@line 617 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$121; //@line 617 "lib/lua-5.2.3/src/lstrlib.c"
 label=25;break; //@line 617 "lib/lua-5.2.3/src/lstrlib.c"
 case 18: 
 var $123=$s1; //@line 620 "lib/lua-5.2.3/src/lstrlib.c"
 var $124=$res; //@line 620 "lib/lua-5.2.3/src/lstrlib.c"
 var $125=_push_captures($ms,$123,$124); //@line 620 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$125; //@line 620 "lib/lua-5.2.3/src/lstrlib.c"
 label=25;break; //@line 620 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 label=20;break; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 var $128=$s1; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $129=(($128+1)|0); //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 $s1=$129; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $130=(($ms+8)|0); //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $131=HEAP32[(($130)>>2)]; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $132=($128>>>0)<($131>>>0); //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 if($132){label=21;break;}else{var $138=0;label=22;break;} //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 case 21: 
 var $134=$anchor; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $135=($134|0)!=0; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $136=$135^1; //@line 622 "lib/lua-5.2.3/src/lstrlib.c"
 var $138=$136;label=22;break;
 case 22: 
 var $138;
 if($138){label=15;break;}else{label=23;break;}
 case 23: 
 label=24;break;
 case 24: 
 var $141=$2; //@line 624 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushnil($141); //@line 624 "lib/lua-5.2.3/src/lstrlib.c"
 $1=1; //@line 625 "lib/lua-5.2.3/src/lstrlib.c"
 label=25;break; //@line 625 "lib/lua-5.2.3/src/lstrlib.c"
 case 25: 
 var $143=$1; //@line 626 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $143; //@line 626 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _nospecials($p,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $upto;
 $2=$p;
 $3=$l;
 $upto=0; //@line 567 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 568 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $5=$2; //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$upto; //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=(($5+$6)|0); //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_strpbrk($7,9976); //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($8|0)!=0; //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=3;break;}else{label=4;break;} //@line 569 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 $1=0; //@line 570 "lib/lua-5.2.3/src/lstrlib.c"
 label=7;break; //@line 570 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $12=$2; //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$upto; //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($12+$13)|0); //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=_strlen($14); //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=((($15)+(1))|0); //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$upto; //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=((($17)+($16))|0); //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 $upto=$18; //@line 571 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 572 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $20=$upto; //@line 572 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$3; //@line 572 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=($20>>>0)<=($21>>>0); //@line 572 "lib/lua-5.2.3/src/lstrlib.c"
 if($22){label=2;break;}else{label=6;break;} //@line 572 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 $1=1; //@line 573 "lib/lua-5.2.3/src/lstrlib.c"
 label=7;break; //@line 573 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $25=$1; //@line 574 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $25; //@line 574 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lmemfind($s1,$l1,$s2,$l2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $init;
 $2=$s1;
 $3=$l1;
 $4=$s2;
 $5=$l2;
 var $6=$5; //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=($6|0)==0; //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 if($7){label=2;break;}else{label=3;break;} //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $9=$2; //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$9; //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 516 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $11=$5; //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$3; //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($11>>>0)>($12>>>0); //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=4;break;}else{label=5;break;} //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 $1=0; //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 517 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $16=$5; //@line 520 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=((($16)-(1))|0); //@line 520 "lib/lua-5.2.3/src/lstrlib.c"
 $5=$17; //@line 520 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$3; //@line 521 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$5; //@line 521 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=((($18)-($19))|0); //@line 521 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$20; //@line 521 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $22=$3; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=($22>>>0)>0; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 if($23){label=7;break;}else{var $33=0;label=8;break;} //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $25=$2; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=$4; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=HEAP8[($26)]; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=(($27<<24)>>24); //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=$3; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=_memchr($25,$28,$29); //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 $init=$30; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=($30|0)!=0; //@line 522 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$31;label=8;break;
 case 8: 
 var $33;
 if($33){label=9;break;}else{label=13;break;}
 case 9: 
 var $35=$init; //@line 523 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=(($35+1)|0); //@line 523 "lib/lua-5.2.3/src/lstrlib.c"
 $init=$36; //@line 523 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$init; //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=$4; //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=(($38+1)|0); //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=$5; //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=_memcmp($37,$39,$40); //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=($41|0)==0; //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 if($42){label=10;break;}else{label=11;break;} //@line 524 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $44=$init; //@line 525 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=((($44)-(1))|0); //@line 525 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$45; //@line 525 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 525 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $47=$init; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=$2; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=$47; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$48; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=((($49)-($50))|0); //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$3; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=((($52)-($51))|0); //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$53; //@line 527 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=$init; //@line 528 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$54; //@line 528 "lib/lua-5.2.3/src/lstrlib.c"
 label=12;break;
 case 12: 
 label=6;break; //@line 530 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 $1=0; //@line 531 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 531 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $58=$1; //@line 533 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $58; //@line 533 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _match($ms,$s,$p){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ep;
 var $previous;
 var $ep1;
 var $res;
 $1=$ms;
 $2=$s;
 $3=$p;
 var $4=$1; //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=(($4)|0); //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=HEAP32[(($5)>>2)]; //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=((($6)-(1))|0); //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($5)>>2)]=$7; //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=($6|0)==0; //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 if($8){label=2;break;}else{label=3;break;} //@line 411 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $10=$1; //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10+16)|0); //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($11)>>2)]; //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=_luaL_error($12,12440,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 label=4;break; //@line 412 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $16=$3; //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$1; //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17+12)|0); //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=HEAP32[(($18)>>2)]; //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=($16|0)!=($19|0); //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 if($20){label=5;break;}else{label=55;break;} //@line 414 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $22=$3; //@line 415 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=HEAP8[($22)]; //@line 415 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=(($23<<24)>>24); //@line 415 "lib/lua-5.2.3/src/lstrlib.c"
 if(($24|0)==41){ label=10;break;}else if(($24|0)==36){ label=11;break;}else if(($24|0)==37){ label=17;break;}else if(($24|0)==40){ label=6;break;}else{label=35;break;}
 case 6: 
 var $26=$3; //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=(($26+1)|0); //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=HEAP8[($27)]; //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($28<<24)>>24); //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=($29|0)==41; //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 if($30){label=7;break;}else{label=8;break;} //@line 417 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $32=$1; //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$2; //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=$3; //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=(($34+2)|0); //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=_start_capture($32,$33,$35,-2); //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$36; //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break; //@line 418 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $38=$1; //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=$2; //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=$3; //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=(($40+1)|0); //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=_start_capture($38,$39,$41,-1); //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$42; //@line 420 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break;
 case 9: 
 label=54;break; //@line 421 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $45=$1; //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=$2; //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=$3; //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=(($47+1)|0); //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=_end_capture($45,$46,$48); //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$49; //@line 424 "lib/lua-5.2.3/src/lstrlib.c"
 label=54;break; //@line 425 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $51=$3; //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=(($51+1)|0); //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=$1; //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=(($53+12)|0); //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=HEAP32[(($54)>>2)]; //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=($52|0)!=($55|0); //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 if($56){label=12;break;}else{label=13;break;} //@line 428 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 label=36;break; //@line 429 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $59=$2; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=$1; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=(($60+8)|0); //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=HEAP32[(($61)>>2)]; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=($59|0)==($62|0); //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 if($63){label=14;break;}else{label=15;break;} //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $65=$2; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=$65;label=16;break; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $68=0;label=16;break; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $68; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$68; //@line 430 "lib/lua-5.2.3/src/lstrlib.c"
 label=54;break; //@line 431 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $70=$3; //@line 434 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=(($70+1)|0); //@line 434 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=HEAP8[($71)]; //@line 434 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=(($72<<24)>>24); //@line 434 "lib/lua-5.2.3/src/lstrlib.c"
 switch(($73|0)){case 98:{ label=18;break;}case 102:{ label=21;break;}case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:{ label=30;break;}default:{label=33;break;}}break;
 case 18: 
 var $75=$1; //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 var $76=$2; //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 var $77=$3; //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 var $78=(($77+2)|0); //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 var $79=_matchbalance($75,$76,$78); //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$79; //@line 436 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=$2; //@line 437 "lib/lua-5.2.3/src/lstrlib.c"
 var $81=($80|0)!=0; //@line 437 "lib/lua-5.2.3/src/lstrlib.c"
 if($81){label=19;break;}else{label=20;break;} //@line 437 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 var $83=$3; //@line 438 "lib/lua-5.2.3/src/lstrlib.c"
 var $84=(($83+4)|0); //@line 438 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$84; //@line 438 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 438 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 label=34;break; //@line 440 "lib/lua-5.2.3/src/lstrlib.c"
 case 21: 
 var $87=$3; //@line 444 "lib/lua-5.2.3/src/lstrlib.c"
 var $88=(($87+2)|0); //@line 444 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$88; //@line 444 "lib/lua-5.2.3/src/lstrlib.c"
 var $89=$3; //@line 445 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=HEAP8[($89)]; //@line 445 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=(($90<<24)>>24); //@line 445 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=($91|0)!=91; //@line 445 "lib/lua-5.2.3/src/lstrlib.c"
 if($92){label=22;break;}else{label=23;break;} //@line 445 "lib/lua-5.2.3/src/lstrlib.c"
 case 22: 
 var $94=$1; //@line 446 "lib/lua-5.2.3/src/lstrlib.c"
 var $95=(($94+16)|0); //@line 446 "lib/lua-5.2.3/src/lstrlib.c"
 var $96=HEAP32[(($95)>>2)]; //@line 446 "lib/lua-5.2.3/src/lstrlib.c"
 var $97=_luaL_error($96,11992,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 446 "lib/lua-5.2.3/src/lstrlib.c"
 label=23;break; //@line 446 "lib/lua-5.2.3/src/lstrlib.c"
 case 23: 
 var $99=$1; //@line 448 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=$3; //@line 448 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=_classend($99,$100); //@line 448 "lib/lua-5.2.3/src/lstrlib.c"
 $ep=$101; //@line 448 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=$2; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $103=$1; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $104=(($103+4)|0); //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=HEAP32[(($104)>>2)]; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $106=($102|0)==($105|0); //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 if($106){label=24;break;}else{label=25;break;} //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 case 24: 
 var $114=0;label=26;break; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 case 25: 
 var $109=$2; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $110=((($109)-(1))|0); //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $111=HEAP8[($110)]; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $112=(($111<<24)>>24); //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $114=$112;label=26;break; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 case 26: 
 var $114; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $115=(($114)&255); //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 $previous=$115; //@line 449 "lib/lua-5.2.3/src/lstrlib.c"
 var $116=$previous; //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $117=($116&255); //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=$3; //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $119=$ep; //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $120=((($119)-(1))|0); //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=_matchbracketclass($117,$118,$120); //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 var $122=($121|0)!=0; //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 if($122){label=29;break;}else{label=27;break;} //@line 450 "lib/lua-5.2.3/src/lstrlib.c"
 case 27: 
 var $124=$2; //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $125=HEAP8[($124)]; //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $126=($125&255); //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $127=$3; //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $128=$ep; //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $129=((($128)-(1))|0); //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $130=_matchbracketclass($126,$127,$129); //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 var $131=($130|0)!=0; //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 if($131){label=28;break;}else{label=29;break;} //@line 451 "lib/lua-5.2.3/src/lstrlib.c"
 case 28: 
 var $133=$ep; //@line 452 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$133; //@line 452 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 452 "lib/lua-5.2.3/src/lstrlib.c"
 case 29: 
 $2=0; //@line 454 "lib/lua-5.2.3/src/lstrlib.c"
 label=34;break; //@line 455 "lib/lua-5.2.3/src/lstrlib.c"
 case 30: 
 var $136=$1; //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $137=$2; //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $138=$3; //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $139=(($138+1)|0); //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $140=HEAP8[($139)]; //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $141=($140&255); //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $142=_match_capture($136,$137,$141); //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$142; //@line 460 "lib/lua-5.2.3/src/lstrlib.c"
 var $143=$2; //@line 461 "lib/lua-5.2.3/src/lstrlib.c"
 var $144=($143|0)!=0; //@line 461 "lib/lua-5.2.3/src/lstrlib.c"
 if($144){label=31;break;}else{label=32;break;} //@line 461 "lib/lua-5.2.3/src/lstrlib.c"
 case 31: 
 var $146=$3; //@line 462 "lib/lua-5.2.3/src/lstrlib.c"
 var $147=(($146+2)|0); //@line 462 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$147; //@line 462 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 462 "lib/lua-5.2.3/src/lstrlib.c"
 case 32: 
 label=34;break; //@line 464 "lib/lua-5.2.3/src/lstrlib.c"
 case 33: 
 label=36;break; //@line 466 "lib/lua-5.2.3/src/lstrlib.c"
 case 34: 
 label=54;break; //@line 468 "lib/lua-5.2.3/src/lstrlib.c"
 case 35: 
 label=36;break; //@line 469 "lib/lua-5.2.3/src/lstrlib.c"
 case 36: 
 var $153=$1; //@line 471 "lib/lua-5.2.3/src/lstrlib.c"
 var $154=$3; //@line 471 "lib/lua-5.2.3/src/lstrlib.c"
 var $155=_classend($153,$154); //@line 471 "lib/lua-5.2.3/src/lstrlib.c"
 $ep1=$155; //@line 471 "lib/lua-5.2.3/src/lstrlib.c"
 var $156=$1; //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 var $157=$2; //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 var $158=$3; //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 var $159=$ep1; //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 var $160=_singlematch($156,$157,$158,$159); //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 var $161=($160|0)!=0; //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 if($161){label=43;break;}else{label=37;break;} //@line 473 "lib/lua-5.2.3/src/lstrlib.c"
 case 37: 
 var $163=$ep1; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $164=HEAP8[($163)]; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $165=(($164<<24)>>24); //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $166=($165|0)==42; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 if($166){label=40;break;}else{label=38;break;} //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 case 38: 
 var $168=$ep1; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $169=HEAP8[($168)]; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $170=(($169<<24)>>24); //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $171=($170|0)==63; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 if($171){label=40;break;}else{label=39;break;} //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 case 39: 
 var $173=$ep1; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $174=HEAP8[($173)]; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $175=(($174<<24)>>24); //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 var $176=($175|0)==45; //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 if($176){label=40;break;}else{label=41;break;} //@line 474 "lib/lua-5.2.3/src/lstrlib.c"
 case 40: 
 var $178=$ep1; //@line 475 "lib/lua-5.2.3/src/lstrlib.c"
 var $179=(($178+1)|0); //@line 475 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$179; //@line 475 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 475 "lib/lua-5.2.3/src/lstrlib.c"
 case 41: 
 $2=0; //@line 478 "lib/lua-5.2.3/src/lstrlib.c"
 label=42;break;
 case 42: 
 label=53;break; //@line 479 "lib/lua-5.2.3/src/lstrlib.c"
 case 43: 
 var $183=$ep1; //@line 481 "lib/lua-5.2.3/src/lstrlib.c"
 var $184=HEAP8[($183)]; //@line 481 "lib/lua-5.2.3/src/lstrlib.c"
 var $185=(($184<<24)>>24); //@line 481 "lib/lua-5.2.3/src/lstrlib.c"
 if(($185|0)==63){ label=44;break;}else if(($185|0)==43){ label=48;break;}else if(($185|0)==42){ label=49;break;}else if(($185|0)==45){ label=50;break;}else{label=51;break;}
 case 44: 
 var $187=$1; //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $188=$2; //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $189=(($188+1)|0); //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $190=$ep1; //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $191=(($190+1)|0); //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $192=_match($187,$189,$191); //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$192; //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 var $193=($192|0)!=0; //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 if($193){label=45;break;}else{label=46;break;} //@line 484 "lib/lua-5.2.3/src/lstrlib.c"
 case 45: 
 var $195=$res; //@line 485 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$195; //@line 485 "lib/lua-5.2.3/src/lstrlib.c"
 label=47;break; //@line 485 "lib/lua-5.2.3/src/lstrlib.c"
 case 46: 
 var $197=$ep1; //@line 487 "lib/lua-5.2.3/src/lstrlib.c"
 var $198=(($197+1)|0); //@line 487 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$198; //@line 487 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 487 "lib/lua-5.2.3/src/lstrlib.c"
 case 47: 
 label=52;break; //@line 489 "lib/lua-5.2.3/src/lstrlib.c"
 case 48: 
 var $201=$2; //@line 492 "lib/lua-5.2.3/src/lstrlib.c"
 var $202=(($201+1)|0); //@line 492 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$202; //@line 492 "lib/lua-5.2.3/src/lstrlib.c"
 label=49;break; //@line 492 "lib/lua-5.2.3/src/lstrlib.c"
 case 49: 
 var $204=$1; //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 var $205=$2; //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 var $206=$3; //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 var $207=$ep1; //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 var $208=_max_expand($204,$205,$206,$207); //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$208; //@line 495 "lib/lua-5.2.3/src/lstrlib.c"
 label=52;break; //@line 496 "lib/lua-5.2.3/src/lstrlib.c"
 case 50: 
 var $210=$1; //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 var $211=$2; //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 var $212=$3; //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 var $213=$ep1; //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 var $214=_min_expand($210,$211,$212,$213); //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$214; //@line 498 "lib/lua-5.2.3/src/lstrlib.c"
 label=52;break; //@line 499 "lib/lua-5.2.3/src/lstrlib.c"
 case 51: 
 var $216=$2; //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 var $217=(($216+1)|0); //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 $2=$217; //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 var $218=$ep1; //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$218; //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 501 "lib/lua-5.2.3/src/lstrlib.c"
 case 52: 
 label=53;break;
 case 53: 
 label=54;break; //@line 504 "lib/lua-5.2.3/src/lstrlib.c"
 case 54: 
 label=55;break; //@line 507 "lib/lua-5.2.3/src/lstrlib.c"
 case 55: 
 var $223=$1; //@line 508 "lib/lua-5.2.3/src/lstrlib.c"
 var $224=(($223)|0); //@line 508 "lib/lua-5.2.3/src/lstrlib.c"
 var $225=HEAP32[(($224)>>2)]; //@line 508 "lib/lua-5.2.3/src/lstrlib.c"
 var $226=((($225)+(1))|0); //@line 508 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($224)>>2)]=$226; //@line 508 "lib/lua-5.2.3/src/lstrlib.c"
 var $227=$2; //@line 509 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $227; //@line 509 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _push_captures($ms,$s,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $nlevels;
 $1=$ms;
 $2=$s;
 $3=$e;
 var $4=$1; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=(($4+20)|0); //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=HEAP32[(($5)>>2)]; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=($6|0)==0; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 if($7){label=2;break;}else{label=4;break;} //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $9=$2; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($9|0)!=0; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=4;break;} //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $17=1;label=5;break; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $13=$1; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($13+20)|0); //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=HEAP32[(($14)>>2)]; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$15;label=5;break; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $17; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 $nlevels=$17; //@line 557 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$1; //@line 558 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18+16)|0); //@line 558 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=HEAP32[(($19)>>2)]; //@line 558 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$nlevels; //@line 558 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_checkstack($20,$21,13216); //@line 558 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $23=$i; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$nlevels; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=($23|0)<($24|0); //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 if($25){label=7;break;}else{label=9;break;} //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $27=$1; //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$i; //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=$2; //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$3; //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 _push_onecapture($27,$28,$29,$30); //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 560 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $32=$i; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=((($32)+(1))|0); //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$33; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 559 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $35=$nlevels; //@line 561 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $35; //@line 561 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _push_onecapture($ms,$i,$s,$e){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $l;
 $1=$ms;
 $2=$i;
 $3=$s;
 $4=$e;
 var $5=$2; //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$1; //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=(($6+20)|0); //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($5|0)>=($8|0); //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=2;break;}else{label=6;break;} //@line 538 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $11=$2; //@line 539 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=($11|0)==0; //@line 539 "lib/lua-5.2.3/src/lstrlib.c"
 if($12){label=3;break;}else{label=4;break;} //@line 539 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $14=$1; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=(($14+16)|0); //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=HEAP32[(($15)>>2)]; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$3; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$4; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$3; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$18; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$19; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=((($20)-($21))|0); //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=_lua_pushlstring($16,$17,$22); //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 540 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $25=$1; //@line 542 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($25+16)|0); //@line 542 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=HEAP32[(($26)>>2)]; //@line 542 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=_luaL_error($27,12968,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 542 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break;
 case 5: 
 label=12;break; //@line 543 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $31=$2; //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=$1; //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=(($32+24)|0); //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=(($33+($31<<3))|0); //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=(($34+4)|0); //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=HEAP32[(($35)>>2)]; //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 $l=$36; //@line 545 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$l; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=($37|0)==-1; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 if($38){label=7;break;}else{label=8;break;} //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $40=$1; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=(($40+16)|0); //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=HEAP32[(($41)>>2)]; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=_luaL_error($42,12696,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 546 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $45=$l; //@line 547 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=($45|0)==-2; //@line 547 "lib/lua-5.2.3/src/lstrlib.c"
 if($46){label=9;break;}else{label=10;break;} //@line 547 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $48=$1; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=(($48+16)|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=HEAP32[(($49)>>2)]; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=$2; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$1; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=(($52+24)|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=(($53+($51<<3))|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=(($54)|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=HEAP32[(($55)>>2)]; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=$1; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=(($57+4)|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=HEAP32[(($58)>>2)]; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=$56; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=$59; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=((($60)-($61))|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=((($62)+(1))|0); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($50,$63); //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 label=11;break; //@line 548 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $65=$1; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $66=(($65+16)|0); //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=HEAP32[(($66)>>2)]; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=$2; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=$1; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=(($69+24)|0); //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=(($70+($68<<3))|0); //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=(($71)|0); //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=HEAP32[(($72)>>2)]; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $74=$l; //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 var $75=_lua_pushlstring($67,$73,$74); //@line 550 "lib/lua-5.2.3/src/lstrlib.c"
 label=11;break;
 case 11: 
 label=12;break;
 case 12: 
 STACKTOP=sp;return; //@line 552 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _start_capture($ms,$s,$p,$what){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $res;
 var $level;
 $1=$ms;
 $2=$s;
 $3=$p;
 $4=$what;
 var $5=$1; //@line 377 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=(($5+20)|0); //@line 377 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=HEAP32[(($6)>>2)]; //@line 377 "lib/lua-5.2.3/src/lstrlib.c"
 $level=$7; //@line 377 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$level; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($8|0)>=32; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $11=$1; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=(($11+16)|0); //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=HEAP32[(($12)>>2)]; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=_luaL_error($13,13216,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 378 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $16=$2; //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$level; //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$1; //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18+24)|0); //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=(($19+($17<<3))|0); //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=(($20)|0); //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($21)>>2)]=$16; //@line 379 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=$4; //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=$level; //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$1; //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=(($24+24)|0); //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($25+($23<<3))|0); //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=(($26+4)|0); //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($27)>>2)]=$22; //@line 380 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$level; //@line 381 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=((($28)+(1))|0); //@line 381 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$1; //@line 381 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=(($30+20)|0); //@line 381 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($31)>>2)]=$29; //@line 381 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=$1; //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$2; //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=$3; //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=_match($32,$33,$34); //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$35; //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=($35|0)==0; //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 if($36){label=4;break;}else{label=5;break;} //@line 382 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $38=$1; //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=(($38+20)|0); //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=HEAP32[(($39)>>2)]; //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=((($40)-(1))|0); //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($39)>>2)]=$41; //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 383 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $43=$res; //@line 384 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $43; //@line 384 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _end_capture($ms,$s,$p){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $l;
 var $res;
 $1=$ms;
 $2=$s;
 $3=$p;
 var $4=$1; //@line 390 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_capture_to_close($4); //@line 390 "lib/lua-5.2.3/src/lstrlib.c"
 $l=$5; //@line 390 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$2; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$l; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$1; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=(($8+24)|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($9+($7<<3))|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10)|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($11)>>2)]; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$6; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=$12; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=((($13)-($14))|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$l; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$1; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17+24)|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18+($16<<3))|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=(($19+4)|0); //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($20)>>2)]=$15; //@line 392 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$1; //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=$2; //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=$3; //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=_match($21,$22,$23); //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$24; //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=($24|0)==0; //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 if($25){label=2;break;}else{label=3;break;} //@line 393 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $27=$l; //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$1; //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($28+24)|0); //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=(($29+($27<<3))|0); //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=(($30+4)|0); //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($31)>>2)]=-1; //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 394 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $33=$res; //@line 395 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $33; //@line 395 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _matchbalance($ms,$s,$p){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $b;
 var $e;
 var $cont;
 $2=$ms;
 $3=$s;
 $4=$p;
 var $5=$4; //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$2; //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=(($6+12)|0); //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=((($8)-(1))|0); //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($5>>>0)>=($9>>>0); //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=2;break;}else{label=3;break;} //@line 327 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $12=$2; //@line 328 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=(($12+16)|0); //@line 328 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=HEAP32[(($13)>>2)]; //@line 328 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=_luaL_error($14,10384,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 328 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 328 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $17=$3; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=HEAP8[($17)]; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18<<24)>>24); //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$4; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=HEAP8[($20)]; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=(($21<<24)>>24); //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=($19|0)!=($22|0); //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 if($23){label=4;break;}else{label=5;break;} //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 $1=0; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 330 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $26=$4; //@line 332 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=HEAP8[($26)]; //@line 332 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=(($27<<24)>>24); //@line 332 "lib/lua-5.2.3/src/lstrlib.c"
 $b=$28; //@line 332 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=$4; //@line 333 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=(($29+1)|0); //@line 333 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=HEAP8[($30)]; //@line 333 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=(($31<<24)>>24); //@line 333 "lib/lua-5.2.3/src/lstrlib.c"
 $e=$32; //@line 333 "lib/lua-5.2.3/src/lstrlib.c"
 $cont=1; //@line 334 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $34=$3; //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=(($34+1)|0); //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$35; //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$2; //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=(($36+8)|0); //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=HEAP32[(($37)>>2)]; //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=($35>>>0)<($38>>>0); //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 if($39){label=7;break;}else{label=15;break;} //@line 335 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $41=$3; //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=HEAP8[($41)]; //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=(($42<<24)>>24); //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=$e; //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=($43|0)==($44|0); //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 if($45){label=8;break;}else{label=11;break;} //@line 336 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $47=$cont; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=((($47)-(1))|0); //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 $cont=$48; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=($48|0)==0; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 if($49){label=9;break;}else{label=10;break;} //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $51=$3; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=(($51+1)|0); //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$52; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 337 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 label=14;break; //@line 338 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $55=$3; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=HEAP8[($55)]; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=(($56<<24)>>24); //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=$b; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=($57|0)==($58|0); //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 if($59){label=12;break;}else{label=13;break;} //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $61=$cont; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=((($61)+(1))|0); //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 $cont=$62; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 label=13;break; //@line 339 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 label=14;break;
 case 14: 
 label=6;break; //@line 340 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 label=16;break;
 case 16: 
 $1=0; //@line 342 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 342 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $68=$1; //@line 343 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $68; //@line 343 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _classend($ms,$p){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ms;
 $3=$p;
 var $4=$3; //@line 243 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=(($4+1)|0); //@line 243 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$5; //@line 243 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=HEAP8[($4)]; //@line 243 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=(($6<<24)>>24); //@line 243 "lib/lua-5.2.3/src/lstrlib.c"
 if(($7|0)==37){ label=2;break;}else if(($7|0)==91){ label=5;break;}else{label=16;break;}
 case 2: 
 var $9=$3; //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$2; //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10+12)|0); //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($11)>>2)]; //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($9|0)==($12|0); //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=3;break;}else{label=4;break;} //@line 245 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $15=$2; //@line 246 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=(($15+16)|0); //@line 246 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP32[(($16)>>2)]; //@line 246 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=_luaL_error($17,11136,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 246 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 246 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $20=$3; //@line 247 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=(($20+1)|0); //@line 247 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$21; //@line 247 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 247 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $23=$3; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=HEAP8[($23)]; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=(($24<<24)>>24); //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=($25|0)==94; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 if($26){label=6;break;}else{label=7;break;} //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $28=$3; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($28+1)|0); //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$29; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 label=7;break; //@line 250 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 label=8;break; //@line 251 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $32=$3; //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$2; //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=(($33+12)|0); //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=HEAP32[(($34)>>2)]; //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=($32|0)==($35|0); //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 if($36){label=9;break;}else{label=10;break;} //@line 252 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $38=$2; //@line 253 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=(($38+16)|0); //@line 253 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=HEAP32[(($39)>>2)]; //@line 253 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=_luaL_error($40,10680,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 253 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 253 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $43=$3; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=(($43+1)|0); //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$44; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=HEAP8[($43)]; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=(($45<<24)>>24); //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=($46|0)==37; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 if($47){label=11;break;}else{label=13;break;} //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $49=$3; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$2; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=(($50+12)|0); //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=HEAP32[(($51)>>2)]; //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=($49>>>0)<($52>>>0); //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 if($53){label=12;break;}else{label=13;break;} //@line 254 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $55=$3; //@line 255 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=(($55+1)|0); //@line 255 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$56; //@line 255 "lib/lua-5.2.3/src/lstrlib.c"
 label=13;break; //@line 255 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 label=14;break; //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $59=$3; //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=HEAP8[($59)]; //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=(($60<<24)>>24); //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=($61|0)!=93; //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 if($62){label=8;break;}else{label=15;break;} //@line 256 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $64=$3; //@line 257 "lib/lua-5.2.3/src/lstrlib.c"
 var $65=(($64+1)|0); //@line 257 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$65; //@line 257 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 257 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $67=$3; //@line 260 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$67; //@line 260 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 260 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $69=$1; //@line 263 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $69; //@line 263 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _matchbracketclass($c,$p,$ec){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $sig;
 $2=$c;
 $3=$p;
 $4=$ec;
 $sig=1; //@line 287 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$3; //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=(($5+1)|0); //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=HEAP8[($6)]; //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=(($7<<24)>>24); //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($8|0)==94; //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 288 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 $sig=0; //@line 289 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=$3; //@line 290 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=(($11+1)|0); //@line 290 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$12; //@line 290 "lib/lua-5.2.3/src/lstrlib.c"
 label=3;break; //@line 291 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 label=4;break; //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $15=$3; //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=(($15+1)|0); //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$16; //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$4; //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=($16>>>0)<($17>>>0); //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 if($18){label=5;break;}else{label=20;break;} //@line 292 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $20=$3; //@line 293 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=HEAP8[($20)]; //@line 293 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=(($21<<24)>>24); //@line 293 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=($22|0)==37; //@line 293 "lib/lua-5.2.3/src/lstrlib.c"
 if($23){label=6;break;}else{label=9;break;} //@line 293 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $25=$3; //@line 294 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($25+1)|0); //@line 294 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$26; //@line 294 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=$2; //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$3; //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=HEAP8[($28)]; //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=($29&255); //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=_match_class($27,$30); //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=($31|0)!=0; //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 if($32){label=7;break;}else{label=8;break;} //@line 295 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $34=$sig; //@line 296 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$34; //@line 296 "lib/lua-5.2.3/src/lstrlib.c"
 label=21;break; //@line 296 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 label=19;break; //@line 297 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $37=$3; //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=(($37+1)|0); //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=HEAP8[($38)]; //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=(($39<<24)>>24); //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=($40|0)==45; //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 if($41){label=10;break;}else{label=15;break;} //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $43=$3; //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=(($43+2)|0); //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=$4; //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=($44>>>0)<($45>>>0); //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 if($46){label=11;break;}else{label=15;break;} //@line 298 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $48=$3; //@line 299 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=(($48+2)|0); //@line 299 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$49; //@line 299 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$3; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=((($50)-(2))|0); //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=HEAP8[($51)]; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=($52&255); //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=$2; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=($53|0)<=($54|0); //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 if($55){label=12;break;}else{label=14;break;} //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $57=$2; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=$3; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=HEAP8[($58)]; //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=($59&255); //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=($57|0)<=($60|0); //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 if($61){label=13;break;}else{label=14;break;} //@line 300 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $63=$sig; //@line 301 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$63; //@line 301 "lib/lua-5.2.3/src/lstrlib.c"
 label=21;break; //@line 301 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 label=18;break; //@line 302 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $66=$3; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=HEAP8[($66)]; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=($67&255); //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=$2; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=($68|0)==($69|0); //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 if($70){label=16;break;}else{label=17;break;} //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $72=$sig; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$72; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 label=21;break; //@line 303 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 label=18;break;
 case 18: 
 label=19;break;
 case 19: 
 label=4;break; //@line 304 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 var $77=$sig; //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 var $78=($77|0)!=0; //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 var $79=$78^1; //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=($79&1); //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$80; //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 label=21;break; //@line 305 "lib/lua-5.2.3/src/lstrlib.c"
 case 21: 
 var $82=$1; //@line 306 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $82; //@line 306 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _match_capture($ms,$s,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $len;
 $2=$ms;
 $3=$s;
 $4=$l;
 var $5=$2; //@line 401 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$4; //@line 401 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=_check_capture($5,$6); //@line 401 "lib/lua-5.2.3/src/lstrlib.c"
 $4=$7; //@line 401 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$4; //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$2; //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($9+24)|0); //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10+($8<<3))|0); //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=(($11+4)|0); //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=HEAP32[(($12)>>2)]; //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 $len=$13; //@line 402 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=$2; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=(($14+8)|0); //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=HEAP32[(($15)>>2)]; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$3; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$16; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$17; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=((($18)-($19))|0); //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$len; //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=($20>>>0)>=($21>>>0); //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 if($22){label=2;break;}else{label=4;break;} //@line 403 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $24=$4; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$2; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($25+24)|0); //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=(($26+($24<<3))|0); //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=(($27)|0); //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=HEAP32[(($28)>>2)]; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$3; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=$len; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=_memcmp($29,$30,$31); //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=($32|0)==0; //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 if($33){label=3;break;}else{label=4;break;} //@line 404 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $35=$3; //@line 405 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$len; //@line 405 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=(($35+$36)|0); //@line 405 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$37; //@line 405 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 405 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 $1=0; //@line 406 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 406 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $40=$1; //@line 407 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $40; //@line 407 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _singlematch($ms,$s,$p,$ep){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $c;
 $2=$ms;
 $3=$s;
 $4=$p;
 $5=$ep;
 var $6=$3; //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$2; //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=(($7+8)|0); //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($8)>>2)]; //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($6>>>0)>=($9>>>0); //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=2;break;}else{label=3;break;} //@line 311 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 $1=0; //@line 312 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 312 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $13=$3; //@line 314 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=HEAP8[($13)]; //@line 314 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=($14&255); //@line 314 "lib/lua-5.2.3/src/lstrlib.c"
 $c=$15; //@line 314 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$4; //@line 315 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP8[($16)]; //@line 315 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17<<24)>>24); //@line 315 "lib/lua-5.2.3/src/lstrlib.c"
 if(($18|0)==46){ label=4;break;}else if(($18|0)==37){ label=5;break;}else if(($18|0)==91){ label=6;break;}else{label=7;break;}
 case 4: 
 $1=1; //@line 316 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 316 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $21=$c; //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=$4; //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=(($22+1)|0); //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=HEAP8[($23)]; //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=($24&255); //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=_match_class($21,$25); //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$26; //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 317 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $28=$c; //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=$4; //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$5; //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=((($30)-(1))|0); //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=_matchbracketclass($28,$29,$31); //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$32; //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 318 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $34=$4; //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=HEAP8[($34)]; //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=($35&255); //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$c; //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=($36|0)==($37|0); //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=($38&1); //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$39; //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 319 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $41=$1; //@line 322 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $41; //@line 322 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _max_expand($ms,$s,$p,$ep){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $i;
 var $res;
 $2=$ms;
 $3=$s;
 $4=$p;
 $5=$ep;
 $i=0; //@line 348 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $7=$2; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$3; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$i; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($8+$9)|0); //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=$4; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$5; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=_singlematch($7,$10,$11,$12); //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=($13|0)!=0; //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 if($14){label=3;break;}else{label=4;break;} //@line 349 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $16=$i; //@line 350 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=((($16)+(1))|0); //@line 350 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$17; //@line 350 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 350 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 label=5;break; //@line 352 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $20=$i; //@line 352 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=($20|0)>=0; //@line 352 "lib/lua-5.2.3/src/lstrlib.c"
 if($21){label=6;break;}else{label=9;break;} //@line 352 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $23=$2; //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$3; //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$i; //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($24+$25)|0); //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=$5; //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=(($27+1)|0); //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=_match($23,$26,$28); //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$29; //@line 353 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=$res; //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=($30|0)!=0; //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 if($31){label=7;break;}else{label=8;break;} //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $33=$res; //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$33; //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 354 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $35=$i; //@line 355 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=((($35)-(1))|0); //@line 355 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$36; //@line 355 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 356 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 $1=0; //@line 357 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 357 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $39=$1; //@line 358 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $39; //@line 358 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _min_expand($ms,$s,$p,$ep){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $res;
 $2=$ms;
 $3=$s;
 $4=$p;
 $5=$ep;
 label=2;break; //@line 363 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $7=$2; //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$3; //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$5; //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($9+1)|0); //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_match($7,$8,$10); //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$11; //@line 364 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$res; //@line 365 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($12|0)!=0; //@line 365 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=3;break;}else{label=4;break;} //@line 365 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $15=$res; //@line 366 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$15; //@line 366 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break; //@line 366 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $17=$2; //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$3; //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$4; //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$5; //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=_singlematch($17,$18,$19,$20); //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=($21|0)!=0; //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 if($22){label=5;break;}else{label=6;break;} //@line 367 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $24=$3; //@line 368 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=(($24+1)|0); //@line 368 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$25; //@line 368 "lib/lua-5.2.3/src/lstrlib.c"
 label=7;break; //@line 368 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 $1=0; //@line 369 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break; //@line 369 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 label=8;break;
 case 8: 
 label=2;break; //@line 370 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $30=$1; //@line 371 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $30; //@line 371 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _match_class($c,$cl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $res;
 $2=$c;
 $3=$cl;
 var $4=$3; //@line 268 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=_tolower($4); //@line 268 "lib/lua-5.2.3/src/lstrlib.c"
 switch(($5|0)){case 119:{ label=10;break;}case 120:{ label=11;break;}case 122:{ label=12;break;}case 97:{ label=2;break;}case 99:{ label=3;break;}case 100:{ label=4;break;}case 103:{ label=5;break;}case 108:{ label=6;break;}case 112:{ label=7;break;}case 115:{ label=8;break;}case 117:{ label=9;break;}default:{label=13;break;}}break;
 case 2: 
 var $7=$2; //@line 269 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_isalpha($7); //@line 269 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$8; //@line 269 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 269 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $10=$2; //@line 270 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=_iscntrl($10); //@line 270 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$11; //@line 270 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 270 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $13=$2; //@line 271 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=_isdigit($13); //@line 271 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$14; //@line 271 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 271 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $16=$2; //@line 272 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=_isgraph($16); //@line 272 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$17; //@line 272 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 272 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $19=$2; //@line 273 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=_islower($19); //@line 273 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$20; //@line 273 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 273 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $22=$2; //@line 274 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=_ispunct($22); //@line 274 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$23; //@line 274 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 274 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $25=$2; //@line 275 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=_isspace($25); //@line 275 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$26; //@line 275 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 275 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $28=$2; //@line 276 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=_isupper($28); //@line 276 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$29; //@line 276 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 276 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $31=$2; //@line 277 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=_isalnum($31); //@line 277 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$32; //@line 277 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 277 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $34=$2; //@line 278 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=_isxdigit($34); //@line 278 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$35; //@line 278 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 278 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $37=$2; //@line 279 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=($37|0)==0; //@line 279 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=($38&1); //@line 279 "lib/lua-5.2.3/src/lstrlib.c"
 $res=$39; //@line 279 "lib/lua-5.2.3/src/lstrlib.c"
 label=14;break; //@line 279 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $41=$3; //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=$2; //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=($41|0)==($42|0); //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=($43&1); //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$44; //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 label=18;break; //@line 280 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $46=$3; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=_islower($46); //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=($47|0)!=0; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 if($48){label=15;break;}else{label=16;break;} //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $50=$res; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=$50;label=17;break; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $52=$res; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=($52|0)!=0; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=$53^1; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=($54&1); //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=$55;label=17;break; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $57; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$57; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 label=18;break; //@line 282 "lib/lua-5.2.3/src/lstrlib.c"
 case 18: 
 var $59=$1; //@line 283 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $59; //@line 283 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _check_capture($ms,$l){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ms;
 $3=$l;
 var $4=$3; //@line 227 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=((($4)-(49))|0); //@line 227 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$5; //@line 227 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$3; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=($6|0)<0; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 if($7){label=4;break;}else{label=2;break;} //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $9=$3; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$2; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10+20)|0); //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($11)>>2)]; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($9|0)>=($12|0); //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){label=4;break;}else{label=3;break;} //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $15=$3; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$2; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=(($16+24)|0); //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17+($15<<3))|0); //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($18+4)|0); //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=HEAP32[(($19)>>2)]; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=($20|0)==-1; //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 if($21){label=4;break;}else{label=5;break;} //@line 228 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $23=$2; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=(($23+16)|0); //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=HEAP32[(($24)>>2)]; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=$3; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=((($26)+(1))|0); //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=_luaL_error($25,11632,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$27,tempVarArgs)); STACKTOP=tempVarArgs; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$28; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 229 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $30=$3; //@line 230 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$30; //@line 230 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 230 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $32=$1; //@line 231 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $32; //@line 231 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _capture_to_close($ms){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $level;
 $2=$ms;
 var $3=$2; //@line 235 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=(($3+20)|0); //@line 235 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=HEAP32[(($4)>>2)]; //@line 235 "lib/lua-5.2.3/src/lstrlib.c"
 $level=$5; //@line 235 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$level; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=((($6)-(1))|0); //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 $level=$7; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $9=$level; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=($9|0)>=0; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 if($10){label=3;break;}else{label=7;break;} //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $12=$level; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$2; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($13+24)|0); //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=(($14+($12<<3))|0); //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=(($15+4)|0); //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP32[(($16)>>2)]; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=($17|0)==-1; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 if($18){label=4;break;}else{label=5;break;} //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $20=$level; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$20; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 label=6;break; //@line 237 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $23=$level; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=((($23)-(1))|0); //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 $level=$24; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 236 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $26=$2; //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=(($26+16)|0); //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=HEAP32[(($27)>>2)]; //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=_luaL_error($28,10200,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$29; //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 238 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $31=$1; //@line 239 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $31; //@line 239 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _add_value($ms,$b,$s,$e,$tr){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $L;
 var $n;
 $1=$ms;
 $2=$b;
 $3=$s;
 $4=$e;
 $5=$tr;
 var $6=$1; //@line 706 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=(($6+16)|0); //@line 706 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 706 "lib/lua-5.2.3/src/lstrlib.c"
 $L=$8; //@line 706 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$5; //@line 707 "lib/lua-5.2.3/src/lstrlib.c"
 if(($9|0)==6){ label=2;break;}else if(($9|0)==5){ label=3;break;}else{label=4;break;}
 case 2: 
 var $11=$L; //@line 710 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushvalue($11,3); //@line 710 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$1; //@line 711 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$3; //@line 711 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=$4; //@line 711 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=_push_captures($12,$13,$14); //@line 711 "lib/lua-5.2.3/src/lstrlib.c"
 $n=$15; //@line 711 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$L; //@line 712 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$n; //@line 712 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_callk($16,$17,1,0,0); //@line 712 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 713 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $19=$1; //@line 716 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$3; //@line 716 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$4; //@line 716 "lib/lua-5.2.3/src/lstrlib.c"
 _push_onecapture($19,0,$20,$21); //@line 716 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=$L; //@line 717 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_gettable($22,3); //@line 717 "lib/lua-5.2.3/src/lstrlib.c"
 label=5;break; //@line 718 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $24=$1; //@line 721 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$2; //@line 721 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=$3; //@line 721 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=$4; //@line 721 "lib/lua-5.2.3/src/lstrlib.c"
 _add_s($24,$25,$26,$27); //@line 721 "lib/lua-5.2.3/src/lstrlib.c"
 label=11;break; //@line 722 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $29=$L; //@line 725 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=_lua_toboolean($29,-1); //@line 725 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=($30|0)!=0; //@line 725 "lib/lua-5.2.3/src/lstrlib.c"
 if($31){label=7;break;}else{label=6;break;} //@line 725 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $33=$L; //@line 726 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_settop($33,-2); //@line 726 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=$L; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=$3; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$4; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$3; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=$36; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=$37; //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=((($38)-($39))|0); //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=_lua_pushlstring($34,$35,$40); //@line 727 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 728 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $43=$L; //@line 729 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=_lua_isstring($43,-1); //@line 729 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=($44|0)!=0; //@line 729 "lib/lua-5.2.3/src/lstrlib.c"
 if($45){label=9;break;}else{label=8;break;} //@line 729 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $47=$L; //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=$L; //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=$L; //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=_lua_type($49,-1); //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=_lua_typename($48,$50); //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=_luaL_error($47,9552,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$51,tempVarArgs)); STACKTOP=tempVarArgs; //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 label=9;break; //@line 730 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 label=10;break;
 case 10: 
 var $55=$2; //@line 731 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addvalue($55); //@line 731 "lib/lua-5.2.3/src/lstrlib.c"
 label=11;break; //@line 732 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 STACKTOP=sp;return; //@line 732 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _add_s($ms,$b,$s,$e){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $l=sp;
 var $i;
 var $news;
 $1=$ms;
 $2=$b;
 $3=$s;
 $4=$e;
 var $5=$1; //@line 681 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=(($5+16)|0); //@line 681 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=HEAP32[(($6)>>2)]; //@line 681 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=_lua_tolstring($7,3,$l); //@line 681 "lib/lua-5.2.3/src/lstrlib.c"
 $news=$8; //@line 681 "lib/lua-5.2.3/src/lstrlib.c"
 $i=0; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $10=$i; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=HEAP32[(($l)>>2)]; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=($10>>>0)<($11>>>0); //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 if($12){label=3;break;}else{label=20;break;} //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $14=$i; //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=$news; //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=(($15+$14)|0); //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP8[($16)]; //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($17<<24)>>24); //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=($18|0)!=37; //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 if($19){label=4;break;}else{label=7;break;} //@line 683 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $21=$2; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=(($21+8)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$2; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=(($24+4)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=HEAP32[(($25)>>2)]; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=($23>>>0)<($26>>>0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 if($27){var $33=1;label=6;break;}else{label=5;break;} //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $29=$2; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=_luaL_prepbuffsize($29,1); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=($30|0)!=0; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=$31;label=6;break; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $33;
 var $34=($33&1); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=$i; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=$news; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=(($36+$35)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=HEAP8[($37)]; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=$2; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=(($39+8)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=HEAP32[(($40)>>2)]; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=((($41)+(1))|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($40)>>2)]=$42; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=$2; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=(($43)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=HEAP32[(($44)>>2)]; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=(($45+$41)|0); //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($46)]=$38; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 label=18;break; //@line 684 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $48=$i; //@line 686 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=((($48)+(1))|0); //@line 686 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$49; //@line 686 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$i; //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=$news; //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=(($51+$50)|0); //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=HEAP8[($52)]; //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=($53&255); //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=_isdigit($54); //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=($55|0)!=0; //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 if($56){label=13;break;}else{label=8;break;} //@line 687 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $58=$i; //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=$news; //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=(($59+$58)|0); //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=HEAP8[($60)]; //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 var $62=(($61<<24)>>24); //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=($62|0)!=37; //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 if($63){label=9;break;}else{label=10;break;} //@line 688 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $65=$1; //@line 689 "lib/lua-5.2.3/src/lstrlib.c"
 var $66=(($65+16)|0); //@line 689 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=HEAP32[(($66)>>2)]; //@line 689 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=_luaL_error($67,9304,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=37,tempVarArgs)); STACKTOP=tempVarArgs; //@line 689 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 689 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $70=$2; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=(($70+8)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=HEAP32[(($71)>>2)]; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=$2; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $74=(($73+4)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $75=HEAP32[(($74)>>2)]; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $76=($72>>>0)<($75>>>0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 if($76){var $82=1;label=12;break;}else{label=11;break;} //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $78=$2; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $79=_luaL_prepbuffsize($78,1); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=($79|0)!=0; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $82=$80;label=12;break; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $82;
 var $83=($82&1); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $84=$i; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $85=$news; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=(($85+$84)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=HEAP8[($86)]; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $88=$2; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $89=(($88+8)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=HEAP32[(($89)>>2)]; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=((($90)+(1))|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($89)>>2)]=$91; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=$2; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=(($92)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $94=HEAP32[(($93)>>2)]; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 var $95=(($94+$90)|0); //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($95)]=$87; //@line 691 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 692 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $97=$i; //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 var $98=$news; //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 var $99=(($98+$97)|0); //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=HEAP8[($99)]; //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=(($100<<24)>>24); //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=($101|0)==48; //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 if($102){label=14;break;}else{label=15;break;} //@line 693 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $104=$2; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=$3; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $106=$4; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $107=$3; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $108=$106; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $109=$107; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 var $110=((($108)-($109))|0); //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addlstring($104,$105,$110); //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 label=16;break; //@line 694 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $112=$1; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $113=$i; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $114=$news; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $115=(($114+$113)|0); //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $116=HEAP8[($115)]; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $117=(($116<<24)>>24); //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=((($117)-(49))|0); //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $119=$3; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $120=$4; //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 _push_onecapture($112,$118,$119,$120); //@line 696 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=$2; //@line 697 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addvalue($121); //@line 697 "lib/lua-5.2.3/src/lstrlib.c"
 label=16;break;
 case 16: 
 label=17;break;
 case 17: 
 label=18;break;
 case 18: 
 label=19;break; //@line 700 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 var $126=$i; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 var $127=((($126)+(1))|0); //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 $i=$127; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 682 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 STACKTOP=sp;return; //@line 701 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _gmatch_aux($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+296)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ms=sp;
 var $ls=(sp)+(280);
 var $lp=(sp)+(288);
 var $s;
 var $p;
 var $src;
 var $e;
 var $newstart;
 $2=$L;
 var $3=$2; //@line 642 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_lua_tolstring($3,-1001001,$ls); //@line 642 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$4; //@line 642 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 643 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_lua_tolstring($5,-1001002,$lp); //@line 643 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$6; //@line 643 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$2; //@line 645 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=(($ms+16)|0); //@line 645 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($8)>>2)]=$7; //@line 645 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=(($ms)|0); //@line 646 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($9)>>2)]=200; //@line 646 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$s; //@line 647 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($ms+4)|0); //@line 647 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($11)>>2)]=$10; //@line 647 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$s; //@line 648 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=HEAP32[(($ls)>>2)]; //@line 648 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($12+$13)|0); //@line 648 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=(($ms+8)|0); //@line 648 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($15)>>2)]=$14; //@line 648 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$p; //@line 649 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=HEAP32[(($lp)>>2)]; //@line 649 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=(($16+$17)|0); //@line 649 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=(($ms+12)|0); //@line 649 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($19)>>2)]=$18; //@line 649 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$s; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$2; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=_lua_tointegerx($21,-1001003,0); //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=(($20+$22)|0); //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 $src=$23; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $25=$src; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($ms+8)|0); //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=HEAP32[(($26)>>2)]; //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=($25>>>0)<=($27>>>0); //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 if($28){label=3;break;}else{label=9;break;} //@line 650 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $30=(($ms+20)|0); //@line 654 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($30)>>2)]=0; //@line 654 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=$src; //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=$p; //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=_match($ms,$31,$32); //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 $e=$33; //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=($33|0)!=0; //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 if($34){label=4;break;}else{label=7;break;} //@line 656 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $36=$e; //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=$s; //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 var $38=$36; //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=$37; //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=((($38)-($39))|0); //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 $newstart=$40; //@line 657 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=$e; //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=$src; //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=($41|0)==($42|0); //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 if($43){label=5;break;}else{label=6;break;} //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $45=$newstart; //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=((($45)+(1))|0); //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 $newstart=$46; //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 label=6;break; //@line 658 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $48=$2; //@line 659 "lib/lua-5.2.3/src/lstrlib.c"
 var $49=$newstart; //@line 659 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_pushinteger($48,$49); //@line 659 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=$2; //@line 660 "lib/lua-5.2.3/src/lstrlib.c"
 _lua_replace($50,-1001003); //@line 660 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=$src; //@line 661 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$e; //@line 661 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=_push_captures($ms,$51,$52); //@line 661 "lib/lua-5.2.3/src/lstrlib.c"
 $1=$53; //@line 661 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 661 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 label=8;break; //@line 663 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $56=$src; //@line 652 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=(($56+1)|0); //@line 652 "lib/lua-5.2.3/src/lstrlib.c"
 $src=$57; //@line 652 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 652 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 $1=0; //@line 664 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 664 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $60=$1; //@line 665 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $60; //@line 665 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _scanformat($L,$strfrmt,$form){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $p;
 $1=$L;
 $2=$strfrmt;
 $3=$form;
 var $4=$2; //@line 858 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$4; //@line 858 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $6=$p; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=HEAP8[($6)]; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=(($7<<24)>>24); //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=($8|0)!=0; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 if($9){label=3;break;}else{var $17=0;label=4;break;} //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $11=$p; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP8[($11)]; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=(($12<<24)>>24); //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=_strchr(7760,$13); //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=($14|0)!=0; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=$15;label=4;break;
 case 4: 
 var $17;
 if($17){label=5;break;}else{label=6;break;}
 case 5: 
 var $19=$p; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=(($19+1)|0); //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$20; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 label=2;break; //@line 859 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $22=$p; //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=$2; //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=$22; //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$23; //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=((($24)-($25))|0); //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=($26>>>0)>=6; //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 if($27){label=7;break;}else{label=8;break;} //@line 860 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $29=$1; //@line 861 "lib/lua-5.2.3/src/lstrlib.c"
 var $30=_luaL_error($29,7648,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 861 "lib/lua-5.2.3/src/lstrlib.c"
 label=8;break; //@line 861 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $32=$p; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 var $33=HEAP8[($32)]; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 var $34=($33&255); //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=_isdigit($34); //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=($35|0)!=0; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 if($36){label=9;break;}else{label=10;break;} //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $38=$p; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 var $39=(($38+1)|0); //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$39; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 label=10;break; //@line 862 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $41=$p; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=HEAP8[($41)]; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 var $43=($42&255); //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 var $44=_isdigit($43); //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=($44|0)!=0; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 if($45){label=11;break;}else{label=12;break;} //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $47=$p; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 var $48=(($47+1)|0); //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$48; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 label=12;break; //@line 863 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $50=$p; //@line 864 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=HEAP8[($50)]; //@line 864 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=(($51<<24)>>24); //@line 864 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=($52|0)==46; //@line 864 "lib/lua-5.2.3/src/lstrlib.c"
 if($53){label=13;break;}else{label=18;break;} //@line 864 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $55=$p; //@line 865 "lib/lua-5.2.3/src/lstrlib.c"
 var $56=(($55+1)|0); //@line 865 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$56; //@line 865 "lib/lua-5.2.3/src/lstrlib.c"
 var $57=$p; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=HEAP8[($57)]; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=($58&255); //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 var $60=_isdigit($59); //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=($60|0)!=0; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 if($61){label=14;break;}else{label=15;break;} //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $63=$p; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 var $64=(($63+1)|0); //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$64; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 label=15;break; //@line 866 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $66=$p; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=HEAP8[($66)]; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=($67&255); //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=_isdigit($68); //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=($69|0)!=0; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 if($70){label=16;break;}else{label=17;break;} //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $72=$p; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=(($72+1)|0); //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 $p=$73; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 label=17;break; //@line 867 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 label=18;break; //@line 868 "lib/lua-5.2.3/src/lstrlib.c"
 case 18: 
 var $76=$p; //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 var $77=HEAP8[($76)]; //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 var $78=($77&255); //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 var $79=_isdigit($78); //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=($79|0)!=0; //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 if($80){label=19;break;}else{label=20;break;} //@line 869 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 var $82=$1; //@line 870 "lib/lua-5.2.3/src/lstrlib.c"
 var $83=_luaL_error($82,7512,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 870 "lib/lua-5.2.3/src/lstrlib.c"
 label=20;break; //@line 870 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 var $85=$3; //@line 871 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=(($85+1)|0); //@line 871 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$86; //@line 871 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($85)]=37; //@line 871 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=$3; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $88=$2; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $89=$p; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=$2; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=$89; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=$90; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=((($91)-($92))|0); //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $94=((($93)+(1))|0); //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $95=$94; //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 assert($95 % 1 === 0);(_memcpy($87, $88, $95)|0); //@line 872 "lib/lua-5.2.3/src/lstrlib.c"
 var $96=$p; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $97=$2; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $98=$96; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $99=$97; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $100=((($98)-($99))|0); //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $101=((($100)+(1))|0); //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=$3; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $103=(($102+$101)|0); //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 $3=$103; //@line 873 "lib/lua-5.2.3/src/lstrlib.c"
 var $104=$3; //@line 874 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($104)]=0; //@line 874 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=$p; //@line 875 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return $105; //@line 875 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _addlenmod($form,$lenmod){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $l;
 var $lm;
 var $spec;
 $1=$form;
 $2=$lenmod;
 var $3=$1; //@line 883 "lib/lua-5.2.3/src/lstrlib.c"
 var $4=_strlen($3); //@line 883 "lib/lua-5.2.3/src/lstrlib.c"
 $l=$4; //@line 883 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$2; //@line 884 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_strlen($5); //@line 884 "lib/lua-5.2.3/src/lstrlib.c"
 $lm=$6; //@line 884 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$l; //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=((($7)-(1))|0); //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$1; //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=(($9+$8)|0); //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=HEAP8[($10)]; //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 $spec=$11; //@line 885 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=$1; //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=$l; //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $14=(($12+$13)|0); //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $15=((($14)-(1))|0); //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=$2; //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=_strcpy($15,$16); //@line 886 "lib/lua-5.2.3/src/lstrlib.c"
 var $18=$spec; //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$l; //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $20=$lm; //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=((($19)+($20))|0); //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=((($21)-(1))|0); //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=$1; //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=(($23+$22)|0); //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($24)]=$18; //@line 887 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$l; //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=$lm; //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=((($25)+($26))|0); //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=$1; //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 var $29=(($28+$27)|0); //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($29)]=0; //@line 888 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return; //@line 889 "lib/lua-5.2.3/src/lstrlib.c"
}


function _addquoted($L,$b,$arg){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $l=sp;
 var $s;
 var $buff=(sp)+(8);
 $1=$L;
 $2=$b;
 $3=$arg;
 var $4=$1; //@line 835 "lib/lua-5.2.3/src/lstrlib.c"
 var $5=$3; //@line 835 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=_luaL_checklstring($4,$5,$l); //@line 835 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$6; //@line 835 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$2; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=(($7+8)|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=HEAP32[(($8)>>2)]; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $10=$2; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $11=(($10+4)|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $12=HEAP32[(($11)>>2)]; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $13=($9>>>0)<($12>>>0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 if($13){var $19=1;label=3;break;}else{label=2;break;} //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 case 2: 
 var $15=$2; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $16=_luaL_prepbuffsize($15,1); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $17=($16|0)!=0; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $19=$17;label=3;break; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 case 3: 
 var $19;
 var $20=($19&1); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $21=$2; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $22=(($21+8)|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $24=((($23)+(1))|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($22)>>2)]=$24; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $25=$2; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $26=(($25)|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $27=HEAP32[(($26)>>2)]; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 var $28=(($27+$23)|0); //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($28)]=34; //@line 836 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 case 4: 
 var $30=HEAP32[(($l)>>2)]; //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 var $31=((($30)-(1))|0); //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($l)>>2)]=$31; //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 var $32=($30|0)!=0; //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 if($32){label=5;break;}else{label=24;break;} //@line 837 "lib/lua-5.2.3/src/lstrlib.c"
 case 5: 
 var $34=$s; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $35=HEAP8[($34)]; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $36=(($35<<24)>>24); //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $37=($36|0)==34; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 if($37){label=8;break;}else{label=6;break;} //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 case 6: 
 var $39=$s; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $40=HEAP8[($39)]; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $41=(($40<<24)>>24); //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $42=($41|0)==92; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 if($42){label=8;break;}else{label=7;break;} //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 case 7: 
 var $44=$s; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $45=HEAP8[($44)]; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $46=(($45<<24)>>24); //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 var $47=($46|0)==10; //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 if($47){label=8;break;}else{label=13;break;} //@line 838 "lib/lua-5.2.3/src/lstrlib.c"
 case 8: 
 var $49=$2; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $50=(($49+8)|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $51=HEAP32[(($50)>>2)]; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $52=$2; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $53=(($52+4)|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $54=HEAP32[(($53)>>2)]; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $55=($51>>>0)<($54>>>0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 if($55){var $61=1;label=10;break;}else{label=9;break;} //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 case 9: 
 var $57=$2; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $58=_luaL_prepbuffsize($57,1); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $59=($58|0)!=0; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $61=$59;label=10;break; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 case 10: 
 var $61;
 var $62=($61&1); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $63=$2; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $64=(($63+8)|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $65=HEAP32[(($64)>>2)]; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $66=((($65)+(1))|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($64)>>2)]=$66; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $67=$2; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $68=(($67)|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $69=HEAP32[(($68)>>2)]; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $70=(($69+$65)|0); //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($70)]=92; //@line 839 "lib/lua-5.2.3/src/lstrlib.c"
 var $71=$2; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $72=(($71+8)|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $73=HEAP32[(($72)>>2)]; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $74=$2; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $75=(($74+4)|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $76=HEAP32[(($75)>>2)]; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $77=($73>>>0)<($76>>>0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 if($77){var $83=1;label=12;break;}else{label=11;break;} //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 case 11: 
 var $79=$2; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $80=_luaL_prepbuffsize($79,1); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $81=($80|0)!=0; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $83=$81;label=12;break; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 case 12: 
 var $83;
 var $84=($83&1); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $85=$s; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $86=HEAP8[($85)]; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $87=$2; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $88=(($87+8)|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $89=HEAP32[(($88)>>2)]; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $90=((($89)+(1))|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($88)>>2)]=$90; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $91=$2; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $92=(($91)|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $93=HEAP32[(($92)>>2)]; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 var $94=(($93+$89)|0); //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($94)]=$86; //@line 840 "lib/lua-5.2.3/src/lstrlib.c"
 label=23;break; //@line 841 "lib/lua-5.2.3/src/lstrlib.c"
 case 13: 
 var $96=$s; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $97=HEAP8[($96)]; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $98=(($97<<24)>>24); //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $99=($98|0)==0; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 if($99){label=15;break;}else{label=14;break;} //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 case 14: 
 var $101=$s; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $102=HEAP8[($101)]; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $103=($102&255); //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $104=_iscntrl($103); //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 var $105=($104|0)!=0; //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 if($105){label=15;break;}else{label=19;break;} //@line 842 "lib/lua-5.2.3/src/lstrlib.c"
 case 15: 
 var $107=$s; //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 var $108=(($107+1)|0); //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 var $109=HEAP8[($108)]; //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 var $110=($109&255); //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 var $111=_isdigit($110); //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 var $112=($111|0)!=0; //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 if($112){label=17;break;}else{label=16;break;} //@line 844 "lib/lua-5.2.3/src/lstrlib.c"
 case 16: 
 var $114=(($buff)|0); //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 var $115=$s; //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 var $116=HEAP8[($115)]; //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 var $117=($116&255); //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 var $118=_sprintf($114,7992,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$117,tempVarArgs)); STACKTOP=tempVarArgs; //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 label=18;break; //@line 845 "lib/lua-5.2.3/src/lstrlib.c"
 case 17: 
 var $120=(($buff)|0); //@line 847 "lib/lua-5.2.3/src/lstrlib.c"
 var $121=$s; //@line 847 "lib/lua-5.2.3/src/lstrlib.c"
 var $122=HEAP8[($121)]; //@line 847 "lib/lua-5.2.3/src/lstrlib.c"
 var $123=($122&255); //@line 847 "lib/lua-5.2.3/src/lstrlib.c"
 var $124=_sprintf($120,7856,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$123,tempVarArgs)); STACKTOP=tempVarArgs; //@line 847 "lib/lua-5.2.3/src/lstrlib.c"
 label=18;break;
 case 18: 
 var $126=$2; //@line 848 "lib/lua-5.2.3/src/lstrlib.c"
 var $127=(($buff)|0); //@line 848 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addstring($126,$127); //@line 848 "lib/lua-5.2.3/src/lstrlib.c"
 label=22;break; //@line 849 "lib/lua-5.2.3/src/lstrlib.c"
 case 19: 
 var $129=$2; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $130=(($129+8)|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $131=HEAP32[(($130)>>2)]; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $132=$2; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $133=(($132+4)|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $134=HEAP32[(($133)>>2)]; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $135=($131>>>0)<($134>>>0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 if($135){var $141=1;label=21;break;}else{label=20;break;} //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 case 20: 
 var $137=$2; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $138=_luaL_prepbuffsize($137,1); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $139=($138|0)!=0; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $141=$139;label=21;break; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 case 21: 
 var $141;
 var $142=($141&1); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $143=$s; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $144=HEAP8[($143)]; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $145=$2; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $146=(($145+8)|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $147=HEAP32[(($146)>>2)]; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $148=((($147)+(1))|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($146)>>2)]=$148; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $149=$2; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $150=(($149)|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $151=HEAP32[(($150)>>2)]; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 var $152=(($151+$147)|0); //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($152)]=$144; //@line 851 "lib/lua-5.2.3/src/lstrlib.c"
 label=22;break;
 case 22: 
 label=23;break;
 case 23: 
 var $155=$s; //@line 852 "lib/lua-5.2.3/src/lstrlib.c"
 var $156=(($155+1)|0); //@line 852 "lib/lua-5.2.3/src/lstrlib.c"
 $s=$156; //@line 852 "lib/lua-5.2.3/src/lstrlib.c"
 label=4;break; //@line 853 "lib/lua-5.2.3/src/lstrlib.c"
 case 24: 
 var $158=$2; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $159=(($158+8)|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $160=HEAP32[(($159)>>2)]; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $161=$2; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $162=(($161+4)|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $163=HEAP32[(($162)>>2)]; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $164=($160>>>0)<($163>>>0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 if($164){var $170=1;label=26;break;}else{label=25;break;} //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 case 25: 
 var $166=$2; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $167=_luaL_prepbuffsize($166,1); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $168=($167|0)!=0; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $170=$168;label=26;break; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 case 26: 
 var $170;
 var $171=($170&1); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $172=$2; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $173=(($172+8)|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $174=HEAP32[(($173)>>2)]; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $175=((($174)+(1))|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP32[(($173)>>2)]=$175; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $176=$2; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $177=(($176)|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $178=HEAP32[(($177)>>2)]; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 var $179=(($178+$174)|0); //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 HEAP8[($179)]=34; //@line 854 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return; //@line 855 "lib/lua-5.2.3/src/lstrlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _writer($L,$b,$size,$B){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$L;
 $2=$b;
 $3=$size;
 $4=$B;
 var $5=$1; //@line 168 "lib/lua-5.2.3/src/lstrlib.c"
 var $6=$4; //@line 169 "lib/lua-5.2.3/src/lstrlib.c"
 var $7=$6; //@line 169 "lib/lua-5.2.3/src/lstrlib.c"
 var $8=$2; //@line 169 "lib/lua-5.2.3/src/lstrlib.c"
 var $9=$3; //@line 169 "lib/lua-5.2.3/src/lstrlib.c"
 _luaL_addlstring($7,$8,$9); //@line 169 "lib/lua-5.2.3/src/lstrlib.c"
 STACKTOP=sp;return 0; //@line 170 "lib/lua-5.2.3/src/lstrlib.c"
}


function _luaL_argerror($L,$narg,$extramsg){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $ar=sp;
 $2=$L;
 $3=$narg;
 $4=$extramsg;
 var $5=$2; //@line 155 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_getstack($5,0,$ar); //@line 155 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 155 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=3;break;}else{label=2;break;} //@line 155 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$2; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$3; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$4; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=_luaL_error($9,3080,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$10,HEAP32[(((tempVarArgs)+(8))>>2)]=$11,tempVarArgs)); STACKTOP=tempVarArgs; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$12; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 label=13;break; //@line 156 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$2; //@line 157 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=_lua_getinfo($14,2552,$ar); //@line 157 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=(($ar+8)|0); //@line 158 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=HEAP32[(($16)>>2)]; //@line 158 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=_strcmp($17,16040); //@line 158 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=($18|0)==0; //@line 158 "lib/lua-5.2.3/src/lauxlib.c"
 if($19){label=4;break;}else{label=7;break;} //@line 158 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $21=$3; //@line 159 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=((($21)-(1))|0); //@line 159 "lib/lua-5.2.3/src/lauxlib.c"
 $3=$22; //@line 159 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=$3; //@line 160 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=($23|0)==0; //@line 160 "lib/lua-5.2.3/src/lauxlib.c"
 if($24){label=5;break;}else{label=6;break;} //@line 160 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $26=$2; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=(($ar+4)|0); //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=HEAP32[(($27)>>2)]; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=$4; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=_luaL_error($26,15344,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$28,HEAP32[(((tempVarArgs)+(8))>>2)]=$29,tempVarArgs)); STACKTOP=tempVarArgs; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$30; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 label=13;break; //@line 161 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 label=7;break; //@line 163 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $33=(($ar+4)|0); //@line 164 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=HEAP32[(($33)>>2)]; //@line 164 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=($34|0)==0; //@line 164 "lib/lua-5.2.3/src/lauxlib.c"
 if($35){label=8;break;}else{label=12;break;} //@line 164 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $37=$2; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=_pushglobalfuncname($37,$ar); //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 var $39=($38|0)!=0; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 if($39){label=9;break;}else{label=10;break;} //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $41=$2; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=_lua_tolstring($41,-1,0); //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 var $45=$42;label=11;break; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 case 10: 
 var $45=14880;label=11;break; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 case 11: 
 var $45; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 var $46=(($ar+4)|0); //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($46)>>2)]=$45; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 label=12;break; //@line 165 "lib/lua-5.2.3/src/lauxlib.c"
 case 12: 
 var $48=$2; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 var $49=$3; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 var $50=(($ar+4)|0); //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 var $51=HEAP32[(($50)>>2)]; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 var $52=$4; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 var $53=_luaL_error($48,14368,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$49,HEAP32[(((tempVarArgs)+(8))>>2)]=$51,HEAP32[(((tempVarArgs)+(16))>>2)]=$52,tempVarArgs)); STACKTOP=tempVarArgs; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$53; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 label=13;break; //@line 166 "lib/lua-5.2.3/src/lauxlib.c"
 case 13: 
 var $55=$1; //@line 168 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $55; //@line 168 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_error($L,$fmt,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $argp=sp;
 $1=$L;
 $2=$fmt;
 var $3=(($argp)|0); //@line 198 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$3; //@line 198 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($4)>>2)]=varrp;HEAP32[((($4)+(4))>>2)]=0; //@line 198 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$1; //@line 199 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_where($5,1); //@line 199 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$1; //@line 200 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$2; //@line 200 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=(($argp)|0); //@line 200 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_lua_pushvfstring($6,$7,$8); //@line 200 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($argp)|0); //@line 201 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$10; //@line 201 "lib/lua-5.2.3/src/lauxlib.c"
 //@line 201 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$1; //@line 202 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_concat($12,2); //@line 202 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$1; //@line 203 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=_lua_error($13); //@line 203 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $14; //@line 203 "lib/lua-5.2.3/src/lauxlib.c"
}


function _pushglobalfuncname($L,$ar){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $top;
 $2=$L;
 $3=$ar;
 var $4=$2; //@line 68 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_gettop($4); //@line 68 "lib/lua-5.2.3/src/lauxlib.c"
 $top=$5; //@line 68 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$2; //@line 69 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$3; //@line 69 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=_lua_getinfo($6,6144,$7); //@line 69 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$2; //@line 70 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_rawgeti($9,-1001000,2); //@line 70 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$2; //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$top; //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=((($11)+(1))|0); //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=_findfield($10,$12,2); //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=($13|0)!=0; //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 if($14){label=2;break;}else{label=3;break;} //@line 71 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $16=$2; //@line 72 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$top; //@line 72 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=((($17)+(1))|0); //@line 72 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_copy($16,-1,$18); //@line 72 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=$2; //@line 73 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($19,-3); //@line 73 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 74 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 74 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $21=$2; //@line 77 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=$top; //@line 77 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($21,$22); //@line 77 "lib/lua-5.2.3/src/lauxlib.c"
 $1=0; //@line 78 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 78 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $24=$1; //@line 80 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $24; //@line 80 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_where($L,$level){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ar=sp;
 $1=$L;
 $2=$level;
 var $3=$1; //@line 185 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 185 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_getstack($3,$4,$ar); //@line 185 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=($5|0)!=0; //@line 185 "lib/lua-5.2.3/src/lauxlib.c"
 if($6){label=2;break;}else{label=5;break;} //@line 185 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $8=$1; //@line 186 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_lua_getinfo($8,14056,$ar); //@line 186 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($ar+20)|0); //@line 187 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=HEAP32[(($10)>>2)]; //@line 187 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=($11|0)>0; //@line 187 "lib/lua-5.2.3/src/lauxlib.c"
 if($12){label=3;break;}else{label=4;break;} //@line 187 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$1; //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=(($ar+36)|0); //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=(($15)|0); //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=(($ar+20)|0); //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=HEAP32[(($17)>>2)]; //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=_lua_pushfstring($14,13800,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$16,HEAP32[(((tempVarArgs)+(8))>>2)]=$18,tempVarArgs)); STACKTOP=tempVarArgs; //@line 188 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 189 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 label=5;break; //@line 191 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $22=$1; //@line 192 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=_lua_pushlstring($22,19976,0); //@line 192 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 193 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 STACKTOP=sp;return; //@line 193 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _typeerror($L,$narg,$tname){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $msg;
 $1=$L;
 $2=$narg;
 $3=$tname;
 var $4=$1; //@line 172 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$3; //@line 172 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$1; //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$1; //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$2; //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_lua_type($7,$8); //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=_lua_typename($6,$9); //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=_lua_pushfstring($4,6168,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$5,HEAP32[(((tempVarArgs)+(8))>>2)]=$10,tempVarArgs)); STACKTOP=tempVarArgs; //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 $msg=$11; //@line 173 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$1; //@line 174 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$2; //@line 174 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$msg; //@line 174 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=_luaL_argerror($12,$13,$14); //@line 174 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $15; //@line 174 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_checkoption($L,$narg,$def,$lst){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $name;
 var $i;
 $2=$L;
 $3=$narg;
 $4=$def;
 $5=$lst;
 var $6=$4; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=2;break;}else{label=3;break;} //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$2; //@line 322 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$3; //@line 322 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$4; //@line 322 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=_luaL_optlstring($9,$10,$11,0); //@line 322 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$12;label=4;break; //@line 322 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$2; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$3; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=_luaL_checklstring($14,$15,0); //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$16;label=4;break; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $18; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 $name=$18; //@line 323 "lib/lua-5.2.3/src/lauxlib.c"
 $i=0; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $20=$i; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=$5; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=(($21+($20<<2))|0); //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=($23|0)!=0; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 if($24){label=6;break;}else{label=10;break;} //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $26=$i; //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=$5; //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=(($27+($26<<2))|0); //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=HEAP32[(($28)>>2)]; //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=$name; //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=_strcmp($29,$30); //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=($31|0)==0; //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 if($32){label=7;break;}else{label=8;break;} //@line 326 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $34=$i; //@line 327 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$34; //@line 327 "lib/lua-5.2.3/src/lauxlib.c"
 label=11;break; //@line 327 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 label=9;break; //@line 327 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $37=$i; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=((($37)+(1))|0); //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 $i=$38; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 325 "lib/lua-5.2.3/src/lauxlib.c"
 case 10: 
 var $40=$2; //@line 328 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=$3; //@line 328 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=$2; //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 var $43=$name; //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 var $44=_lua_pushfstring($42,12672,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$43,tempVarArgs)); STACKTOP=tempVarArgs; //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 var $45=_luaL_argerror($40,$41,$44); //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$45; //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 label=11;break; //@line 329 "lib/lua-5.2.3/src/lauxlib.c"
 case 11: 
 var $47=$1; //@line 330 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $47; //@line 330 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_optlstring($L,$narg,$def,$len){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$L;
 $3=$narg;
 $4=$def;
 $5=$len;
 var $6=$2; //@line 366 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$3; //@line 366 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=_lua_type($6,$7); //@line 366 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=($8|0)<=0; //@line 366 "lib/lua-5.2.3/src/lauxlib.c"
 if($9){label=2;break;}else{label=8;break;} //@line 366 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $11=$5; //@line 367 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=($11|0)!=0; //@line 367 "lib/lua-5.2.3/src/lauxlib.c"
 if($12){label=3;break;}else{label=7;break;} //@line 367 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$4; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=($14|0)!=0; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 if($15){label=4;break;}else{label=5;break;} //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $17=$4; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=_strlen($17); //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=$18;label=6;break; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $21=0;label=6;break; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $21; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=$5; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($22)>>2)]=$21; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 368 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $24=$4; //@line 369 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$24; //@line 369 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 369 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $26=$2; //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=$3; //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=$5; //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=_luaL_checklstring($26,$27,$28); //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$29; //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 371 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $31=$1; //@line 372 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $31; //@line 372 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checklstring($L,$narg,$len){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $s;
 $1=$L;
 $2=$narg;
 $3=$len;
 var $4=$1; //@line 358 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 358 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$3; //@line 358 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=_lua_tolstring($4,$5,$6); //@line 358 "lib/lua-5.2.3/src/lauxlib.c"
 $s=$7; //@line 358 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$s; //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=($8|0)!=0; //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 if($9){label=3;break;}else{label=2;break;} //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $11=$1; //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$2; //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 _tag_error($11,$12,4); //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 359 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$s; //@line 360 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $14; //@line 360 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checkstack($L,$space,$msg){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $extra;
 $1=$L;
 $2=$space;
 $3=$msg;
 $extra=20; //@line 335 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$1; //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=((($5)+(20))|0); //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=_lua_checkstack($4,$6); //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=($7|0)!=0; //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 if($8){label=6;break;}else{label=2;break;} //@line 336 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $10=$3; //@line 337 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=($10|0)!=0; //@line 337 "lib/lua-5.2.3/src/lauxlib.c"
 if($11){label=3;break;}else{label=4;break;} //@line 337 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $13=$1; //@line 338 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$3; //@line 338 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=_luaL_error($13,12416,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,tempVarArgs)); STACKTOP=tempVarArgs; //@line 338 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 338 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $17=$1; //@line 340 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=_luaL_error($17,11976,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 340 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break;
 case 5: 
 label=6;break; //@line 341 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 STACKTOP=sp;return; //@line 342 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checktype($L,$narg,$t){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$narg;
 $3=$t;
 var $4=$1; //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_type($4,$5); //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$3; //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=($6|0)!=($7|0); //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 if($8){label=2;break;}else{label=3;break;} //@line 346 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $10=$1; //@line 347 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$2; //@line 347 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$3; //@line 347 "lib/lua-5.2.3/src/lauxlib.c"
 _tag_error($10,$11,$12); //@line 347 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 347 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 STACKTOP=sp;return; //@line 348 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _tag_error($L,$narg,$tag){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$narg;
 $3=$tag;
 var $4=$1; //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$1; //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$3; //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=_lua_typename($6,$7); //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_typeerror($4,$5,$8); //@line 179 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 180 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_checkany($L,$narg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$narg;
 var $3=$1; //@line 352 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 352 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_type($3,$4); //@line 352 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=($5|0)==-1; //@line 352 "lib/lua-5.2.3/src/lauxlib.c"
 if($6){label=2;break;}else{label=3;break;} //@line 352 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $8=$1; //@line 353 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$2; //@line 353 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=_luaL_argerror($8,$9,11616); //@line 353 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 353 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 STACKTOP=sp;return; //@line 354 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checknumber($L,$narg){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $isnum=sp;
 var $d;
 $1=$L;
 $2=$narg;
 var $3=$1; //@line 377 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 377 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_tonumberx($3,$4,$isnum); //@line 377 "lib/lua-5.2.3/src/lauxlib.c"
 $d=$5; //@line 377 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=HEAP32[(($isnum)>>2)]; //@line 378 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 378 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=3;break;}else{label=2;break;} //@line 378 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$1; //@line 379 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$2; //@line 379 "lib/lua-5.2.3/src/lauxlib.c"
 _tag_error($9,$10,3); //@line 379 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 379 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $12=$d; //@line 380 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $12; //@line 380 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checkinteger($L,$narg){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $isnum=sp;
 var $d;
 $1=$L;
 $2=$narg;
 var $3=$1; //@line 391 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 391 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_tointegerx($3,$4,$isnum); //@line 391 "lib/lua-5.2.3/src/lauxlib.c"
 $d=$5; //@line 391 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=HEAP32[(($isnum)>>2)]; //@line 392 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 392 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=3;break;}else{label=2;break;} //@line 392 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$1; //@line 393 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$2; //@line 393 "lib/lua-5.2.3/src/lauxlib.c"
 _tag_error($9,$10,3); //@line 393 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 393 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $12=$d; //@line 394 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $12; //@line 394 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checkunsigned($L,$narg){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $isnum=sp;
 var $d;
 $1=$L;
 $2=$narg;
 var $3=$1; //@line 400 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 400 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_lua_tounsignedx($3,$4,$isnum); //@line 400 "lib/lua-5.2.3/src/lauxlib.c"
 $d=$5; //@line 400 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=HEAP32[(($isnum)>>2)]; //@line 401 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 401 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=3;break;}else{label=2;break;} //@line 401 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$1; //@line 402 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$2; //@line 402 "lib/lua-5.2.3/src/lauxlib.c"
 _tag_error($9,$10,3); //@line 402 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 402 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $12=$d; //@line 403 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $12; //@line 403 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_optinteger($L,$narg,$def){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$narg;
 $3=$def;
 var $4=$1; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_type($4,$5); //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)<=0; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=2;break;}else{label=3;break;} //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$3; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$9;label=4;break; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $11=$1; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$2; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=_luaL_checkinteger($11,$12); //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$13;label=4;break; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $15; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $15; //@line 409 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_prepbuffsize($B,$sz){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $L;
 var $newbuff;
 var $newsize;
 $1=$B;
 $2=$sz;
 var $3=$1; //@line 438 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=(($3+12)|0); //@line 438 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=HEAP32[(($4)>>2)]; //@line 438 "lib/lua-5.2.3/src/lauxlib.c"
 $L=$5; //@line 438 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$1; //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=(($6+4)|0); //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$1; //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($9+8)|0); //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=HEAP32[(($10)>>2)]; //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=((($8)-($11))|0); //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$2; //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=($12>>>0)<($13>>>0); //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 if($14){label=2;break;}else{label=10;break;} //@line 439 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $16=$1; //@line 441 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=(($16+4)|0); //@line 441 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=HEAP32[(($17)>>2)]; //@line 441 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=($18<<1); //@line 441 "lib/lua-5.2.3/src/lauxlib.c"
 $newsize=$19; //@line 441 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=$newsize; //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=$1; //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=(($21+8)|0); //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=((($20)-($23))|0); //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=$2; //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=($24>>>0)<($25>>>0); //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 if($26){label=3;break;}else{label=4;break;} //@line 442 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $28=$1; //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=(($28+8)|0); //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=HEAP32[(($29)>>2)]; //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=$2; //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=((($30)+($31))|0); //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 $newsize=$32; //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 443 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $34=$newsize; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=$1; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $36=(($35+8)|0); //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $37=HEAP32[(($36)>>2)]; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=($34>>>0)<($37>>>0); //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 if($38){label=6;break;}else{label=5;break;} //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $40=$newsize; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=$1; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=(($41+8)|0); //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $43=HEAP32[(($42)>>2)]; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $44=((($40)-($43))|0); //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $45=$2; //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 var $46=($44>>>0)<($45>>>0); //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 if($46){label=6;break;}else{label=7;break;} //@line 444 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $48=$L; //@line 445 "lib/lua-5.2.3/src/lauxlib.c"
 var $49=_luaL_error($48,11016,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 445 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 445 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $51=$L; //@line 447 "lib/lua-5.2.3/src/lauxlib.c"
 var $52=$newsize; //@line 447 "lib/lua-5.2.3/src/lauxlib.c"
 var $53=$52; //@line 447 "lib/lua-5.2.3/src/lauxlib.c"
 var $54=_lua_newuserdata($51,$53); //@line 447 "lib/lua-5.2.3/src/lauxlib.c"
 $newbuff=$54; //@line 447 "lib/lua-5.2.3/src/lauxlib.c"
 var $55=$newbuff; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $56=$1; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $57=(($56)|0); //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $58=HEAP32[(($57)>>2)]; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $59=$1; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $60=(($59+8)|0); //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $61=HEAP32[(($60)>>2)]; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $62=$61; //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 assert($62 % 1 === 0);(_memcpy($55, $58, $62)|0); //@line 449 "lib/lua-5.2.3/src/lauxlib.c"
 var $63=$1; //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $64=(($63)|0); //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $65=HEAP32[(($64)>>2)]; //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $66=$1; //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $67=(($66+16)|0); //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $68=(($67)|0); //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 var $69=($65|0)!=($68|0); //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 if($69){label=8;break;}else{label=9;break;} //@line 450 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $71=$L; //@line 451 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($71,-2); //@line 451 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 451 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $73=$newbuff; //@line 452 "lib/lua-5.2.3/src/lauxlib.c"
 var $74=$1; //@line 452 "lib/lua-5.2.3/src/lauxlib.c"
 var $75=(($74)|0); //@line 452 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($75)>>2)]=$73; //@line 452 "lib/lua-5.2.3/src/lauxlib.c"
 var $76=$newsize; //@line 453 "lib/lua-5.2.3/src/lauxlib.c"
 var $77=$1; //@line 453 "lib/lua-5.2.3/src/lauxlib.c"
 var $78=(($77+4)|0); //@line 453 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($78)>>2)]=$76; //@line 453 "lib/lua-5.2.3/src/lauxlib.c"
 label=10;break; //@line 454 "lib/lua-5.2.3/src/lauxlib.c"
 case 10: 
 var $80=$1; //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $81=(($80+8)|0); //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $82=HEAP32[(($81)>>2)]; //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $83=$1; //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $84=(($83)|0); //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $85=HEAP32[(($84)>>2)]; //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 var $86=(($85+$82)|0); //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $86; //@line 455 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_addlstring($B,$s,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $b;
 $1=$B;
 $2=$s;
 $3=$l;
 var $4=$1; //@line 460 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$3; //@line 460 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_luaL_prepbuffsize($4,$5); //@line 460 "lib/lua-5.2.3/src/lauxlib.c"
 $b=$6; //@line 460 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$b; //@line 461 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$2; //@line 461 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$3; //@line 461 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$9; //@line 461 "lib/lua-5.2.3/src/lauxlib.c"
 assert($10 % 1 === 0);(_memcpy($7, $8, $10)|0); //@line 461 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$3; //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$1; //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=(($12+8)|0); //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=HEAP32[(($13)>>2)]; //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=((($14)+($11))|0); //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($13)>>2)]=$15; //@line 462 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 463 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_addstring($B,$s){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$B;
 $2=$s;
 var $3=$1; //@line 467 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 467 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 467 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_strlen($5); //@line 467 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_addlstring($3,$4,$6); //@line 467 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 468 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_pushresult($B){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $L;
 $1=$B;
 var $2=$1; //@line 472 "lib/lua-5.2.3/src/lauxlib.c"
 var $3=(($2+12)|0); //@line 472 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=HEAP32[(($3)>>2)]; //@line 472 "lib/lua-5.2.3/src/lauxlib.c"
 $L=$4; //@line 472 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$L; //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$1; //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=(($6)|0); //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$1; //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($9+8)|0); //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=HEAP32[(($10)>>2)]; //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=_lua_pushlstring($5,$8,$11); //@line 473 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$1; //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=(($13)|0); //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=HEAP32[(($14)>>2)]; //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=$1; //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=(($16+16)|0); //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=(($17)|0); //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=($15|0)!=($18|0); //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 if($19){label=2;break;}else{label=3;break;} //@line 474 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $21=$L; //@line 475 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($21,-2); //@line 475 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 475 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 STACKTOP=sp;return; //@line 476 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_pushresultsize($B,$sz){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$B;
 $2=$sz;
 var $3=$2; //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$1; //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=(($4+8)|0); //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=HEAP32[(($5)>>2)]; //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=((($6)+($3))|0); //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($5)>>2)]=$7; //@line 480 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$1; //@line 481 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_pushresult($8); //@line 481 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 482 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_addvalue($B){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $L;
 var $l=sp;
 var $s;
 $1=$B;
 var $2=$1; //@line 486 "lib/lua-5.2.3/src/lauxlib.c"
 var $3=(($2+12)|0); //@line 486 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=HEAP32[(($3)>>2)]; //@line 486 "lib/lua-5.2.3/src/lauxlib.c"
 $L=$4; //@line 486 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$L; //@line 488 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_tolstring($5,-1,$l); //@line 488 "lib/lua-5.2.3/src/lauxlib.c"
 $s=$6; //@line 488 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$1; //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=(($7)|0); //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=HEAP32[(($8)>>2)]; //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$1; //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=(($10+16)|0); //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=(($11)|0); //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=($9|0)!=($12|0); //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 if($13){label=2;break;}else{label=3;break;} //@line 489 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $15=$L; //@line 490 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_insert($15,-2); //@line 490 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 490 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $17=$1; //@line 491 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$s; //@line 491 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=HEAP32[(($l)>>2)]; //@line 491 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_addlstring($17,$18,$19); //@line 491 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=$L; //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=$1; //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=(($21)|0); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=$1; //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=(($24+16)|0); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=(($25)|0); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=($23|0)!=($26|0); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=($27?-2:-1); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($20,$28); //@line 492 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 493 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_buffinit($L,$B){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$B;
 var $3=$1; //@line 497 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 497 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=(($4+12)|0); //@line 497 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($5)>>2)]=$3; //@line 497 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$2; //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=(($6+16)|0); //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=(($7)|0); //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$2; //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($9)|0); //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($10)>>2)]=$8; //@line 498 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$2; //@line 499 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=(($11+8)|0); //@line 499 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($12)>>2)]=0; //@line 499 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$2; //@line 500 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=(($13+4)|0); //@line 500 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($14)>>2)]=1024; //@line 500 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 501 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_buffinitsize($L,$B,$sz){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$B;
 $3=$sz;
 var $4=$1; //@line 505 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 505 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_buffinit($4,$5); //@line 505 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$2; //@line 506 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$3; //@line 506 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=_luaL_prepbuffsize($6,$7); //@line 506 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $8; //@line 506 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_loadfilex($L,$filename,$mode){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $lf=sp;
 var $status;
 var $readstatus;
 var $c=(sp)+(1032);
 var $fnameindex;
 $2=$L;
 $3=$filename;
 $4=$mode;
 var $5=$2; //@line 635 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_gettop($5); //@line 635 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=((($6)+(1))|0); //@line 635 "lib/lua-5.2.3/src/lauxlib.c"
 $fnameindex=$7; //@line 635 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$3; //@line 636 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=($8|0)==0; //@line 636 "lib/lua-5.2.3/src/lauxlib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 636 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $11=$2; //@line 637 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=_lua_pushlstring($11,10672,6); //@line 637 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=HEAP32[((_stdin)>>2)]; //@line 638 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=(($lf+4)|0); //@line 638 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($14)>>2)]=$13; //@line 638 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 639 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $16=$2; //@line 641 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$3; //@line 641 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=_lua_pushfstring($16,10376,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$17,tempVarArgs)); STACKTOP=tempVarArgs; //@line 641 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=$3; //@line 642 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=_fopen($19,10192); //@line 642 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=(($lf+4)|0); //@line 642 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($21)>>2)]=$20; //@line 642 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=(($lf+4)|0); //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=HEAP32[(($22)>>2)]; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=($23|0)==0; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 if($24){label=4;break;}else{label=5;break;} //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $26=$2; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=$fnameindex; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=_errfile($26,9968,$27); //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$28; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 label=20;break; //@line 643 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 label=6;break;
 case 6: 
 var $31=_skipcomment($lf,$c); //@line 645 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=($31|0)!=0; //@line 645 "lib/lua-5.2.3/src/lauxlib.c"
 if($32){label=7;break;}else{label=8;break;} //@line 645 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $34=(($lf)|0); //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=HEAP32[(($34)>>2)]; //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 var $36=((($35)+(1))|0); //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($34)>>2)]=$36; //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 var $37=(($lf+8)|0); //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=(($37+$35)|0); //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP8[($38)]=10; //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 label=8;break; //@line 646 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $40=HEAP32[(($c)>>2)]; //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=HEAP8[(9752)]; //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=(($41<<24)>>24); //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 var $43=($40|0)==($42|0); //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 if($43){label=9;break;}else{label=13;break;} //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $45=$3; //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 var $46=($45|0)!=0; //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 if($46){label=10;break;}else{label=13;break;} //@line 647 "lib/lua-5.2.3/src/lauxlib.c"
 case 10: 
 var $48=$3; //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 var $49=(($lf+4)|0); //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 var $50=HEAP32[(($49)>>2)]; //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 var $51=_freopen($48,9544,$50); //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 var $52=(($lf+4)|0); //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($52)>>2)]=$51; //@line 648 "lib/lua-5.2.3/src/lauxlib.c"
 var $53=(($lf+4)|0); //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 var $54=HEAP32[(($53)>>2)]; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 var $55=($54|0)==0; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 if($55){label=11;break;}else{label=12;break;} //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 case 11: 
 var $57=$2; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 var $58=$fnameindex; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 var $59=_errfile($57,9296,$58); //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$59; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 label=20;break; //@line 649 "lib/lua-5.2.3/src/lauxlib.c"
 case 12: 
 var $61=_skipcomment($lf,$c); //@line 650 "lib/lua-5.2.3/src/lauxlib.c"
 label=13;break; //@line 651 "lib/lua-5.2.3/src/lauxlib.c"
 case 13: 
 var $63=HEAP32[(($c)>>2)]; //@line 652 "lib/lua-5.2.3/src/lauxlib.c"
 var $64=($63|0)!=-1; //@line 652 "lib/lua-5.2.3/src/lauxlib.c"
 if($64){label=14;break;}else{label=15;break;} //@line 652 "lib/lua-5.2.3/src/lauxlib.c"
 case 14: 
 var $66=HEAP32[(($c)>>2)]; //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $67=(($66)&255); //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $68=(($lf)|0); //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $69=HEAP32[(($68)>>2)]; //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $70=((($69)+(1))|0); //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($68)>>2)]=$70; //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $71=(($lf+8)|0); //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 var $72=(($71+$69)|0); //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP8[($72)]=$67; //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 label=15;break; //@line 653 "lib/lua-5.2.3/src/lauxlib.c"
 case 15: 
 var $74=$2; //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $75=$lf; //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $76=$2; //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $77=_lua_tolstring($76,-1,0); //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $78=$4; //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $79=_lua_load($74,462,$75,$77,$78); //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 $status=$79; //@line 654 "lib/lua-5.2.3/src/lauxlib.c"
 var $80=(($lf+4)|0); //@line 655 "lib/lua-5.2.3/src/lauxlib.c"
 var $81=HEAP32[(($80)>>2)]; //@line 655 "lib/lua-5.2.3/src/lauxlib.c"
 var $82=_ferror($81); //@line 655 "lib/lua-5.2.3/src/lauxlib.c"
 $readstatus=$82; //@line 655 "lib/lua-5.2.3/src/lauxlib.c"
 var $83=$3; //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 var $84=($83|0)!=0; //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 if($84){label=16;break;}else{label=17;break;} //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 case 16: 
 var $86=(($lf+4)|0); //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 var $87=HEAP32[(($86)>>2)]; //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 var $88=_fclose($87); //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 label=17;break; //@line 656 "lib/lua-5.2.3/src/lauxlib.c"
 case 17: 
 var $90=$readstatus; //@line 657 "lib/lua-5.2.3/src/lauxlib.c"
 var $91=($90|0)!=0; //@line 657 "lib/lua-5.2.3/src/lauxlib.c"
 if($91){label=18;break;}else{label=19;break;} //@line 657 "lib/lua-5.2.3/src/lauxlib.c"
 case 18: 
 var $93=$2; //@line 658 "lib/lua-5.2.3/src/lauxlib.c"
 var $94=$fnameindex; //@line 658 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($93,$94); //@line 658 "lib/lua-5.2.3/src/lauxlib.c"
 var $95=$2; //@line 659 "lib/lua-5.2.3/src/lauxlib.c"
 var $96=$fnameindex; //@line 659 "lib/lua-5.2.3/src/lauxlib.c"
 var $97=_errfile($95,9040,$96); //@line 659 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$97; //@line 659 "lib/lua-5.2.3/src/lauxlib.c"
 label=20;break; //@line 659 "lib/lua-5.2.3/src/lauxlib.c"
 case 19: 
 var $99=$2; //@line 661 "lib/lua-5.2.3/src/lauxlib.c"
 var $100=$fnameindex; //@line 661 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($99,$100); //@line 661 "lib/lua-5.2.3/src/lauxlib.c"
 var $101=$status; //@line 662 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$101; //@line 662 "lib/lua-5.2.3/src/lauxlib.c"
 label=20;break; //@line 662 "lib/lua-5.2.3/src/lauxlib.c"
 case 20: 
 var $103=$1; //@line 663 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $103; //@line 663 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _errfile($L,$what,$fnameindex){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $serr;
 var $filename;
 $1=$L;
 $2=$what;
 $3=$fnameindex;
 var $4=___errno_location(); //@line 588 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=HEAP32[(($4)>>2)]; //@line 588 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_strerror($5); //@line 588 "lib/lua-5.2.3/src/lauxlib.c"
 $serr=$6; //@line 588 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$1; //@line 589 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$3; //@line 589 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_lua_tolstring($7,$8,0); //@line 589 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=(($9+1)|0); //@line 589 "lib/lua-5.2.3/src/lauxlib.c"
 $filename=$10; //@line 589 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$1; //@line 590 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$2; //@line 590 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$filename; //@line 590 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$serr; //@line 590 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=_lua_pushfstring($11,6264,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$12,HEAP32[(((tempVarArgs)+(8))>>2)]=$13,HEAP32[(((tempVarArgs)+(16))>>2)]=$14,tempVarArgs)); STACKTOP=tempVarArgs; //@line 590 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=$1; //@line 591 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$3; //@line 591 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($16,$17); //@line 591 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return 7; //@line 592 "lib/lua-5.2.3/src/lauxlib.c"
}


function _skipcomment($lf,$cp){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $c;
 $2=$lf;
 $3=$cp;
 var $4=$2; //@line 618 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_skipBOM($4); //@line 618 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$3; //@line 618 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($6)>>2)]=$5; //@line 618 "lib/lua-5.2.3/src/lauxlib.c"
 $c=$5; //@line 618 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$c; //@line 619 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=($7|0)==35; //@line 619 "lib/lua-5.2.3/src/lauxlib.c"
 if($8){label=2;break;}else{label=8;break;} //@line 619 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 label=3;break; //@line 620 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $11=$2; //@line 621 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=(($11+4)|0); //@line 621 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=HEAP32[(($12)>>2)]; //@line 621 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=_fgetc($13); //@line 621 "lib/lua-5.2.3/src/lauxlib.c"
 $c=$14; //@line 621 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $16=$c; //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=($16|0)!=-1; //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 if($17){label=5;break;}else{var $22=0;label=6;break;} //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $19=$c; //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=($19|0)!=10; //@line 622 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=$20;label=6;break;
 case 6: 
 var $22;
 if($22){label=3;break;}else{label=7;break;}
 case 7: 
 var $24=$2; //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=(($24+4)|0); //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=HEAP32[(($25)>>2)]; //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=_fgetc($26); //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=$3; //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($28)>>2)]=$27; //@line 623 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 624 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 624 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 $1=0; //@line 626 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 626 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $31=$1; //@line 627 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $31; //@line 627 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getF($L,$ud,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $lf;
 $2=$L;
 $3=$ud;
 $4=$size;
 var $5=$3; //@line 570 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$5; //@line 570 "lib/lua-5.2.3/src/lauxlib.c"
 $lf=$6; //@line 570 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$2; //@line 571 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$lf; //@line 572 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=(($8)|0); //@line 572 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=HEAP32[(($9)>>2)]; //@line 572 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=($10|0)>0; //@line 572 "lib/lua-5.2.3/src/lauxlib.c"
 if($11){label=2;break;}else{label=3;break;} //@line 572 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $13=$lf; //@line 573 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=(($13)|0); //@line 573 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=HEAP32[(($14)>>2)]; //@line 573 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=$4; //@line 573 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($16)>>2)]=$15; //@line 573 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$lf; //@line 574 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=(($17)|0); //@line 574 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($18)>>2)]=0; //@line 574 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 575 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $20=$lf; //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=(($20+4)|0); //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=HEAP32[(($21)>>2)]; //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=_feof($22); //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=($23|0)!=0; //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 if($24){label=4;break;}else{label=5;break;} //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 $1=0; //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 580 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $27=$lf; //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=(($27+8)|0); //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=(($28)|0); //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=$lf; //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=(($30+4)|0); //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=HEAP32[(($31)>>2)]; //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $33=_fread($29,1,1024,$32); //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=$4; //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($34)>>2)]=$33; //@line 581 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break;
 case 6: 
 var $36=$lf; //@line 583 "lib/lua-5.2.3/src/lauxlib.c"
 var $37=(($36+8)|0); //@line 583 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=(($37)|0); //@line 583 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$38; //@line 583 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 583 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $40=$1; //@line 584 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $40; //@line 584 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_loadbufferx($L,$buff,$size,$name,$mode){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $ls=sp;
 $1=$L;
 $2=$buff;
 $3=$size;
 $4=$name;
 $5=$mode;
 var $6=$2; //@line 685 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=(($ls)|0); //@line 685 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($7)>>2)]=$6; //@line 685 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$3; //@line 686 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=(($ls+4)|0); //@line 686 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($9)>>2)]=$8; //@line 686 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$1; //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=$ls; //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$4; //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=$5; //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=_lua_load($10,450,$11,$12,$13); //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $14; //@line 687 "lib/lua-5.2.3/src/lauxlib.c"
}


function _getS($L,$ud,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $ls;
 $2=$L;
 $3=$ud;
 $4=$size;
 var $5=$3; //@line 673 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$5; //@line 673 "lib/lua-5.2.3/src/lauxlib.c"
 $ls=$6; //@line 673 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$2; //@line 674 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$ls; //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=(($8+4)|0); //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=HEAP32[(($9)>>2)]; //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=($10|0)==0; //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 if($11){label=2;break;}else{label=3;break;} //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 $1=0; //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 675 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $14=$ls; //@line 676 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=(($14+4)|0); //@line 676 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=HEAP32[(($15)>>2)]; //@line 676 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$4; //@line 676 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($17)>>2)]=$16; //@line 676 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$ls; //@line 677 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=(($18+4)|0); //@line 677 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($19)>>2)]=0; //@line 677 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=$ls; //@line 678 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=(($20)|0); //@line 678 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=HEAP32[(($21)>>2)]; //@line 678 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$22; //@line 678 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 678 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $24=$1; //@line 679 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $24; //@line 679 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_loadstring($L,$s){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$s;
 var $3=$1; //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_strlen($5); //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$2; //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=_luaL_loadbufferx($3,$4,$6,$7,0); //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $8; //@line 692 "lib/lua-5.2.3/src/lauxlib.c"
}


function _luaL_getmetafield($L,$obj,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$obj;
 $4=$event;
 var $5=$2; //@line 700 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$3; //@line 700 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=_lua_getmetatable($5,$6); //@line 700 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=($7|0)!=0; //@line 700 "lib/lua-5.2.3/src/lauxlib.c"
 if($8){label=3;break;}else{label=2;break;} //@line 700 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 $1=0; //@line 701 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 701 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $11=$2; //@line 702 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=$4; //@line 702 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=_lua_pushstring($11,$12); //@line 702 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$2; //@line 703 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_rawget($14,-2); //@line 703 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$2; //@line 704 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=_lua_type($15,-1); //@line 704 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=($16|0)==0; //@line 704 "lib/lua-5.2.3/src/lauxlib.c"
 if($17){label=4;break;}else{label=5;break;} //@line 704 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $19=$2; //@line 705 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($19,-3); //@line 705 "lib/lua-5.2.3/src/lauxlib.c"
 $1=0; //@line 706 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 706 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $21=$2; //@line 709 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($21,-2); //@line 709 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 710 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 710 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $23=$1; //@line 712 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $23; //@line 712 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_callmeta($L,$obj,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$obj;
 $4=$event;
 var $5=$2; //@line 716 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$3; //@line 716 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=_lua_absindex($5,$6); //@line 716 "lib/lua-5.2.3/src/lauxlib.c"
 $3=$7; //@line 716 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$2; //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=$3; //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$4; //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=_luaL_getmetafield($8,$9,$10); //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 var $12=($11|0)!=0; //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 if($12){label=3;break;}else{label=2;break;} //@line 717 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 $1=0; //@line 718 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 718 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $15=$2; //@line 719 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=$3; //@line 719 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushvalue($15,$16); //@line 719 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$2; //@line 720 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_callk($17,1,1,0,0); //@line 720 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 721 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 721 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $19=$1; //@line 722 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $19; //@line 722 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_len($L,$idx){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $l;
 var $isnum=sp;
 $1=$L;
 $2=$idx;
 var $3=$1; //@line 728 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=$2; //@line 728 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_len($3,$4); //@line 728 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$1; //@line 729 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_tointegerx($5,-1,$isnum); //@line 729 "lib/lua-5.2.3/src/lauxlib.c"
 $l=$6; //@line 729 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=HEAP32[(($isnum)>>2)]; //@line 730 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=($7|0)!=0; //@line 730 "lib/lua-5.2.3/src/lauxlib.c"
 if($8){label=3;break;}else{label=2;break;} //@line 730 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $10=$1; //@line 731 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=_luaL_error($10,8720,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 731 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 731 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $13=$1; //@line 732 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($13,-2); //@line 732 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$l; //@line 733 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $14; //@line 733 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_tolstring($L,$idx,$len){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$idx;
 $3=$len;
 var $4=$1; //@line 738 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$2; //@line 738 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_luaL_callmeta($4,$5,8408); //@line 738 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($6|0)!=0; //@line 738 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=8;break;}else{label=2;break;} //@line 738 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$1; //@line 739 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$2; //@line 739 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=_lua_type($9,$10); //@line 739 "lib/lua-5.2.3/src/lauxlib.c"
 if(($11|0)==3|($11|0)==4){ label=3;break;}else if(($11|0)==1){ label=4;break;}else if(($11|0)==0){ label=5;break;}else{label=6;break;}
 case 3: 
 var $13=$1; //@line 742 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$2; //@line 742 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushvalue($13,$14); //@line 742 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 743 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $16=$1; //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=$1; //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$2; //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=_lua_toboolean($17,$18); //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=($19|0)!=0; //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=($20?8208:8056); //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 var $22=_lua_pushstring($16,$21); //@line 745 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 746 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $24=$1; //@line 748 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=_lua_pushlstring($24,7984,3); //@line 748 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 749 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $27=$1; //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=$1; //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=$1; //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=$2; //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=_lua_type($29,$30); //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=_lua_typename($28,$31); //@line 751 "lib/lua-5.2.3/src/lauxlib.c"
 var $33=$1; //@line 752 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=$2; //@line 752 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=_lua_topointer($33,$34); //@line 752 "lib/lua-5.2.3/src/lauxlib.c"
 var $36=_lua_pushfstring($27,7848,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$32,HEAP32[(((tempVarArgs)+(8))>>2)]=$35,tempVarArgs)); STACKTOP=tempVarArgs; //@line 752 "lib/lua-5.2.3/src/lauxlib.c"
 label=7;break; //@line 753 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 label=8;break; //@line 755 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $39=$1; //@line 756 "lib/lua-5.2.3/src/lauxlib.c"
 var $40=$3; //@line 756 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=_lua_tolstring($39,-1,$40); //@line 756 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $41; //@line 756 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_setfuncs($L,$l,$nup){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 $1=$L;
 $2=$l;
 $3=$nup;
 var $4=$1; //@line 849 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_checkversion_($4,502); //@line 849 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$1; //@line 850 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=$3; //@line 850 "lib/lua-5.2.3/src/lauxlib.c"
 _luaL_checkstack($5,$6,7736); //@line 850 "lib/lua-5.2.3/src/lauxlib.c"
 label=2;break; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $8=$2; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=(($8)|0); //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=HEAP32[(($9)>>2)]; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=($10|0)!=0; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 if($11){label=3;break;}else{label=9;break;} //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 $i=0; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $14=$i; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$3; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=($14|0)<($15|0); //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 if($16){label=5;break;}else{label=7;break;} //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $18=$1; //@line 854 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=$3; //@line 854 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=(((-$19))|0); //@line 854 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushvalue($18,$20); //@line 854 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 854 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $22=$i; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=((($22)+(1))|0); //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 $i=$23; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 853 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $25=$1; //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=$2; //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=(($26+4)|0); //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=HEAP32[(($27)>>2)]; //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=$3; //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushcclosure($25,$28,$29); //@line 855 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=$1; //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=$3; //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=((($31)+(2))|0); //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $33=(((-$32))|0); //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=$2; //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=(($34)|0); //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 var $36=HEAP32[(($35)>>2)]; //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_setfield($30,$33,$36); //@line 856 "lib/lua-5.2.3/src/lauxlib.c"
 label=8;break; //@line 857 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $38=$2; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 var $39=(($38+8)|0); //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 $2=$39; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 label=2;break; //@line 851 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $41=$1; //@line 858 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=$3; //@line 858 "lib/lua-5.2.3/src/lauxlib.c"
 var $43=(((-$42))|0); //@line 858 "lib/lua-5.2.3/src/lauxlib.c"
 var $44=((($43)-(1))|0); //@line 858 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($41,$44); //@line 858 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 859 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_checkversion_($L,$ver){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $v;
 $1=$L;
 $2=$ver;
 var $3=$1; //@line 945 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=_lua_version($3); //@line 945 "lib/lua-5.2.3/src/lauxlib.c"
 $v=$4; //@line 945 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=$v; //@line 946 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_version(0); //@line 946 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=($5|0)!=($6|0); //@line 946 "lib/lua-5.2.3/src/lauxlib.c"
 if($7){label=2;break;}else{label=3;break;} //@line 946 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $9=$1; //@line 947 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=_luaL_error($9,7480,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 947 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 947 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $12=$v; //@line 948 "lib/lua-5.2.3/src/lauxlib.c"
 var $13=HEAPF64[(($12)>>3)]; //@line 948 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$2; //@line 948 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=$13!=$14; //@line 948 "lib/lua-5.2.3/src/lauxlib.c"
 if($15){label=4;break;}else{label=5;break;} //@line 948 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $17=$1; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=$2; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 var $19=$v; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=HEAPF64[(($19)>>3)]; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=_luaL_error($17,7160,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$18,HEAPF64[(((tempVarArgs)+(8))>>3)]=$20,tempVarArgs)); STACKTOP=tempVarArgs; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 949 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 label=6;break;
 case 6: 
 var $24=$1; //@line 952 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushnumber($24,-4660); //@line 952 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=$1; //@line 953 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=_lua_tointegerx($25,-1,0); //@line 953 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=($26|0)!=-4660; //@line 953 "lib/lua-5.2.3/src/lauxlib.c"
 if($27){label=8;break;}else{label=7;break;} //@line 953 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $29=$1; //@line 954 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=_lua_tounsignedx($29,-1,0); //@line 954 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=($30|0)!=-4660; //@line 954 "lib/lua-5.2.3/src/lauxlib.c"
 if($31){label=8;break;}else{label=9;break;} //@line 954 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $33=$1; //@line 955 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=_luaL_error($33,6784,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 955 "lib/lua-5.2.3/src/lauxlib.c"
 label=9;break; //@line 955 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $36=$1; //@line 957 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($36,-2); //@line 957 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return; //@line 958 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaL_newstate(){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $L;
 var $1=_lua_newstate(62,0); //@line 938 "lib/lua-5.2.3/src/lauxlib.c"
 $L=$1; //@line 938 "lib/lua-5.2.3/src/lauxlib.c"
 var $2=$L; //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 var $3=($2|0)!=0; //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 if($3){label=2;break;}else{label=3;break;} //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $5=$L; //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=_lua_atpanic($5,114); //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 label=3;break; //@line 939 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $8=$L; //@line 940 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $8; //@line 940 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _l_alloc($ud,$ptr,$osize,$nsize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$ud;
 $3=$ptr;
 $4=$osize;
 $5=$nsize;
 var $6=$2; //@line 920 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=$4; //@line 920 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=$5; //@line 921 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=($8|0)==0; //@line 921 "lib/lua-5.2.3/src/lauxlib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 921 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $11=$3; //@line 922 "lib/lua-5.2.3/src/lauxlib.c"
 _free($11); //@line 922 "lib/lua-5.2.3/src/lauxlib.c"
 $1=0; //@line 923 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 923 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $13=$3; //@line 926 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$5; //@line 926 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=_realloc($13,$14); //@line 926 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$15; //@line 926 "lib/lua-5.2.3/src/lauxlib.c"
 label=4;break; //@line 926 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $17=$1; //@line 927 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $17; //@line 927 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _panic($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=HEAP32[((_stderr)>>2)]; //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 var $3=$1; //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=_lua_tolstring($3,-1,0); //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 var $5=_fprintf($2,6560,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs)); STACKTOP=tempVarArgs; //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=HEAP32[((_stderr)>>2)]; //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=_fflush($6); //@line 931 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return 0; //@line 933 "lib/lua-5.2.3/src/lauxlib.c"
}


function _skipBOM($lf){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $p;
 var $c;
 $2=$lf;
 $p=6376; //@line 597 "lib/lua-5.2.3/src/lauxlib.c"
 var $3=$2; //@line 599 "lib/lua-5.2.3/src/lauxlib.c"
 var $4=(($3)|0); //@line 599 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($4)>>2)]=0; //@line 599 "lib/lua-5.2.3/src/lauxlib.c"
 label=2;break; //@line 600 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $6=$2; //@line 601 "lib/lua-5.2.3/src/lauxlib.c"
 var $7=(($6+4)|0); //@line 601 "lib/lua-5.2.3/src/lauxlib.c"
 var $8=HEAP32[(($7)>>2)]; //@line 601 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_fgetc($8); //@line 601 "lib/lua-5.2.3/src/lauxlib.c"
 $c=$9; //@line 601 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=$c; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $11=($10|0)==-1; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 if($11){label=4;break;}else{label=3;break;} //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 var $13=$c; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $14=$p; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $15=(($14+1)|0); //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 $p=$15; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=HEAP8[($14)]; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=($16&255); //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 var $18=($13|0)!=($17|0); //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 if($18){label=4;break;}else{label=5;break;} //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $20=$c; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$20; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 label=8;break; //@line 602 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $22=$c; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $23=(($22)&255); //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=$2; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=(($24)|0); //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=HEAP32[(($25)>>2)]; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $27=((($26)+(1))|0); //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($25)>>2)]=$27; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $28=$2; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $29=(($28+8)|0); //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 var $30=(($29+$26)|0); //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP8[($30)]=$23; //@line 603 "lib/lua-5.2.3/src/lauxlib.c"
 label=6;break; //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $32=$p; //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 var $33=HEAP8[($32)]; //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=(($33<<24)>>24); //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=($34|0)!=0; //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 if($35){label=2;break;}else{label=7;break;} //@line 604 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $37=$2; //@line 605 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=(($37)|0); //@line 605 "lib/lua-5.2.3/src/lauxlib.c"
 HEAP32[(($38)>>2)]=0; //@line 605 "lib/lua-5.2.3/src/lauxlib.c"
 var $39=$2; //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 var $40=(($39+4)|0); //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=HEAP32[(($40)>>2)]; //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 var $42=_fgetc($41); //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 $1=$42; //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 label=8;break; //@line 606 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $44=$1; //@line 607 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $44; //@line 607 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _findfield($L,$objidx,$level){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$objidx;
 $4=$level;
 var $5=$4; //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 var $6=($5|0)==0; //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 if($6){label=3;break;}else{label=2;break;} //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 case 2: 
 var $8=$2; //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 var $9=_lua_type($8,-1); //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 var $10=($9|0)==5; //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 if($10){label=4;break;}else{label=3;break;} //@line 44 "lib/lua-5.2.3/src/lauxlib.c"
 case 3: 
 $1=0; //@line 45 "lib/lua-5.2.3/src/lauxlib.c"
 label=15;break; //@line 45 "lib/lua-5.2.3/src/lauxlib.c"
 case 4: 
 var $13=$2; //@line 46 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_pushnil($13); //@line 46 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 47 "lib/lua-5.2.3/src/lauxlib.c"
 case 5: 
 var $15=$2; //@line 47 "lib/lua-5.2.3/src/lauxlib.c"
 var $16=_lua_next($15,-2); //@line 47 "lib/lua-5.2.3/src/lauxlib.c"
 var $17=($16|0)!=0; //@line 47 "lib/lua-5.2.3/src/lauxlib.c"
 if($17){label=6;break;}else{label=14;break;} //@line 47 "lib/lua-5.2.3/src/lauxlib.c"
 case 6: 
 var $19=$2; //@line 48 "lib/lua-5.2.3/src/lauxlib.c"
 var $20=_lua_type($19,-2); //@line 48 "lib/lua-5.2.3/src/lauxlib.c"
 var $21=($20|0)==4; //@line 48 "lib/lua-5.2.3/src/lauxlib.c"
 if($21){label=7;break;}else{label=13;break;} //@line 48 "lib/lua-5.2.3/src/lauxlib.c"
 case 7: 
 var $23=$2; //@line 49 "lib/lua-5.2.3/src/lauxlib.c"
 var $24=$3; //@line 49 "lib/lua-5.2.3/src/lauxlib.c"
 var $25=_lua_rawequal($23,$24,-1); //@line 49 "lib/lua-5.2.3/src/lauxlib.c"
 var $26=($25|0)!=0; //@line 49 "lib/lua-5.2.3/src/lauxlib.c"
 if($26){label=8;break;}else{label=9;break;} //@line 49 "lib/lua-5.2.3/src/lauxlib.c"
 case 8: 
 var $28=$2; //@line 50 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($28,-2); //@line 50 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 51 "lib/lua-5.2.3/src/lauxlib.c"
 label=15;break; //@line 51 "lib/lua-5.2.3/src/lauxlib.c"
 case 9: 
 var $30=$2; //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 var $31=$3; //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 var $32=$4; //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 var $33=((($32)-(1))|0); //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 var $34=_findfield($30,$31,$33); //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 var $35=($34|0)!=0; //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 if($35){label=10;break;}else{label=11;break;} //@line 53 "lib/lua-5.2.3/src/lauxlib.c"
 case 10: 
 var $37=$2; //@line 54 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_remove($37,-2); //@line 54 "lib/lua-5.2.3/src/lauxlib.c"
 var $38=$2; //@line 55 "lib/lua-5.2.3/src/lauxlib.c"
 var $39=_lua_pushlstring($38,6096,1); //@line 55 "lib/lua-5.2.3/src/lauxlib.c"
 var $40=$2; //@line 56 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_insert($40,-2); //@line 56 "lib/lua-5.2.3/src/lauxlib.c"
 var $41=$2; //@line 57 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_concat($41,3); //@line 57 "lib/lua-5.2.3/src/lauxlib.c"
 $1=1; //@line 58 "lib/lua-5.2.3/src/lauxlib.c"
 label=15;break; //@line 58 "lib/lua-5.2.3/src/lauxlib.c"
 case 11: 
 label=12;break;
 case 12: 
 label=13;break; //@line 60 "lib/lua-5.2.3/src/lauxlib.c"
 case 13: 
 var $45=$2; //@line 61 "lib/lua-5.2.3/src/lauxlib.c"
 _lua_settop($45,-2); //@line 61 "lib/lua-5.2.3/src/lauxlib.c"
 label=5;break; //@line 62 "lib/lua-5.2.3/src/lauxlib.c"
 case 14: 
 $1=0; //@line 63 "lib/lua-5.2.3/src/lauxlib.c"
 label=15;break; //@line 63 "lib/lua-5.2.3/src/lauxlib.c"
 case 15: 
 var $48=$1; //@line 64 "lib/lua-5.2.3/src/lauxlib.c"
 STACKTOP=sp;return $48; //@line 64 "lib/lua-5.2.3/src/lauxlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaF_newCclosure($L,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $c;
 $1=$L;
 $2=$n;
 var $3=$1; //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$2; //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $5=((($4)-(1))|0); //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $6=($5<<4); //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $7=((($6)+(32))|0); //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $8=_luaC_newobj($3,38,$7,0,0); //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $9=$8; //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 $c=$9; //@line 24 "lib/lua-5.2.3/src/lfunc.c"
 var $10=$2; //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 var $11=(($10)&255); //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 var $12=$c; //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$12; //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 var $14=(($13+6)|0); //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($14)]=$11; //@line 25 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$c; //@line 26 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $15; //@line 26 "lib/lua-5.2.3/src/lfunc.c"
}


function _luaF_newLclosure($L,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $c;
 $1=$L;
 $2=$n;
 var $3=$1; //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$2; //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $5=((($4)-(1))|0); //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $6=($5<<2); //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $7=((($6)+(20))|0); //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $8=_luaC_newobj($3,6,$7,0,0); //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $9=$8; //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 $c=$9; //@line 31 "lib/lua-5.2.3/src/lfunc.c"
 var $10=$c; //@line 32 "lib/lua-5.2.3/src/lfunc.c"
 var $11=$10; //@line 32 "lib/lua-5.2.3/src/lfunc.c"
 var $12=(($11+12)|0); //@line 32 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($12)>>2)]=0; //@line 32 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$2; //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 var $14=(($13)&255); //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$c; //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 var $16=$15; //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 var $17=(($16+6)|0); //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($17)]=$14; //@line 33 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 case 2: 
 var $19=$2; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $20=((($19)-(1))|0); //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 $2=$20; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $21=($19|0)!=0; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 if($21){label=3;break;}else{label=4;break;} //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 case 3: 
 var $23=$2; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $24=$c; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $25=$24; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $26=(($25+16)|0); //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 var $27=(($26+($23<<2))|0); //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($27)>>2)]=0; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 34 "lib/lua-5.2.3/src/lfunc.c"
 case 4: 
 var $29=$c; //@line 35 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $29; //@line 35 "lib/lua-5.2.3/src/lfunc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaF_newupval($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $uv;
 $1=$L;
 var $2=$1; //@line 40 "lib/lua-5.2.3/src/lfunc.c"
 var $3=_luaC_newobj($2,10,32,0,0); //@line 40 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$3; //@line 40 "lib/lua-5.2.3/src/lfunc.c"
 $uv=$4; //@line 40 "lib/lua-5.2.3/src/lfunc.c"
 var $5=$uv; //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 var $6=(($5+16)|0); //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$6; //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 var $8=$uv; //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 var $9=(($8+8)|0); //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($9)>>2)]=$7; //@line 41 "lib/lua-5.2.3/src/lfunc.c"
 var $10=$uv; //@line 42 "lib/lua-5.2.3/src/lfunc.c"
 var $11=(($10+8)|0); //@line 42 "lib/lua-5.2.3/src/lfunc.c"
 var $12=HEAP32[(($11)>>2)]; //@line 42 "lib/lua-5.2.3/src/lfunc.c"
 var $13=(($12+8)|0); //@line 42 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($13)>>2)]=0; //@line 42 "lib/lua-5.2.3/src/lfunc.c"
 var $14=$uv; //@line 43 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $14; //@line 43 "lib/lua-5.2.3/src/lfunc.c"
}


function _luaF_findupval($L,$level){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $g;
 var $pp;
 var $p;
 var $uv;
 var $o;
 $2=$L;
 $3=$level;
 var $4=$2; //@line 48 "lib/lua-5.2.3/src/lfunc.c"
 var $5=(($4+12)|0); //@line 48 "lib/lua-5.2.3/src/lfunc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 48 "lib/lua-5.2.3/src/lfunc.c"
 $g=$6; //@line 48 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$2; //@line 49 "lib/lua-5.2.3/src/lfunc.c"
 var $8=(($7+56)|0); //@line 49 "lib/lua-5.2.3/src/lfunc.c"
 $pp=$8; //@line 49 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 case 2: 
 var $10=$pp; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $11=HEAP32[(($10)>>2)]; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $12=($11|0)!=0; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 if($12){label=3;break;}else{var $22=0;label=4;break;} //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 case 3: 
 var $14=$pp; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $16=$15; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 $p=$16; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $17=(($16+8)|0); //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $18=HEAP32[(($17)>>2)]; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $19=$3; //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $20=($18>>>0)>=($19>>>0); //@line 52 "lib/lua-5.2.3/src/lfunc.c"
 var $22=$20;label=4;break;
 case 4: 
 var $22;
 if($22){label=5;break;}else{label=10;break;}
 case 5: 
 var $24=$p; //@line 53 "lib/lua-5.2.3/src/lfunc.c"
 var $25=$24; //@line 53 "lib/lua-5.2.3/src/lfunc.c"
 $o=$25; //@line 53 "lib/lua-5.2.3/src/lfunc.c"
 var $26=$p; //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 var $27=(($26+8)|0); //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 var $28=HEAP32[(($27)>>2)]; //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 var $29=$3; //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 var $30=($28|0)==($29|0); //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 if($30){label=6;break;}else{label=9;break;} //@line 56 "lib/lua-5.2.3/src/lfunc.c"
 case 6: 
 var $32=$o; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $33=$32; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $34=(($33+5)|0); //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $35=HEAP8[($34)]; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $36=($35&255); //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $37=$36^3; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $38=$g; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $39=(($38+60)|0); //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $40=HEAP8[($39)]; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $41=($40&255); //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $42=$41^3; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $43=$37&$42; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 var $44=($43|0)!=0; //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 if($44){label=8;break;}else{label=7;break;} //@line 57 "lib/lua-5.2.3/src/lfunc.c"
 case 7: 
 var $46=$o; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $47=$46; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $48=(($47+5)|0); //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $49=HEAP8[($48)]; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $50=($49&255); //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $51=$50^3; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 var $52=(($51)&255); //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($48)]=$52; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 label=8;break; //@line 58 "lib/lua-5.2.3/src/lfunc.c"
 case 8: 
 var $54=$p; //@line 59 "lib/lua-5.2.3/src/lfunc.c"
 $1=$54; //@line 59 "lib/lua-5.2.3/src/lfunc.c"
 label=11;break; //@line 59 "lib/lua-5.2.3/src/lfunc.c"
 case 9: 
 var $56=$p; //@line 61 "lib/lua-5.2.3/src/lfunc.c"
 var $57=(($56)|0); //@line 61 "lib/lua-5.2.3/src/lfunc.c"
 $pp=$57; //@line 61 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 62 "lib/lua-5.2.3/src/lfunc.c"
 case 10: 
 var $59=$2; //@line 64 "lib/lua-5.2.3/src/lfunc.c"
 var $60=$pp; //@line 64 "lib/lua-5.2.3/src/lfunc.c"
 var $61=_luaC_newobj($59,10,32,$60,0); //@line 64 "lib/lua-5.2.3/src/lfunc.c"
 var $62=$61; //@line 64 "lib/lua-5.2.3/src/lfunc.c"
 $uv=$62; //@line 64 "lib/lua-5.2.3/src/lfunc.c"
 var $63=$3; //@line 65 "lib/lua-5.2.3/src/lfunc.c"
 var $64=$uv; //@line 65 "lib/lua-5.2.3/src/lfunc.c"
 var $65=(($64+8)|0); //@line 65 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($65)>>2)]=$63; //@line 65 "lib/lua-5.2.3/src/lfunc.c"
 var $66=$g; //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $67=(($66+112)|0); //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $68=$uv; //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $69=(($68+16)|0); //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $70=$69; //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $71=(($70)|0); //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($71)>>2)]=$67; //@line 66 "lib/lua-5.2.3/src/lfunc.c"
 var $72=$g; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $73=(($72+112)|0); //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $74=(($73+16)|0); //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $75=$74; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $76=(($75+4)|0); //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $77=HEAP32[(($76)>>2)]; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $78=$uv; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $79=(($78+16)|0); //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $80=$79; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $81=(($80+4)|0); //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($81)>>2)]=$77; //@line 67 "lib/lua-5.2.3/src/lfunc.c"
 var $82=$uv; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $83=$uv; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $84=(($83+16)|0); //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $85=$84; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $86=(($85+4)|0); //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $87=HEAP32[(($86)>>2)]; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $88=(($87+16)|0); //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $89=$88; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $90=(($89)|0); //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($90)>>2)]=$82; //@line 68 "lib/lua-5.2.3/src/lfunc.c"
 var $91=$uv; //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $92=$g; //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $93=(($92+112)|0); //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $94=(($93+16)|0); //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $95=$94; //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $96=(($95+4)|0); //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($96)>>2)]=$91; //@line 69 "lib/lua-5.2.3/src/lfunc.c"
 var $97=$uv; //@line 71 "lib/lua-5.2.3/src/lfunc.c"
 $1=$97; //@line 71 "lib/lua-5.2.3/src/lfunc.c"
 label=11;break; //@line 71 "lib/lua-5.2.3/src/lfunc.c"
 case 11: 
 var $99=$1; //@line 72 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $99; //@line 72 "lib/lua-5.2.3/src/lfunc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaF_freeupval($L,$uv){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$uv;
 var $3=$2; //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $4=(($3+8)|0); //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $6=$2; //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $7=(($6+16)|0); //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $8=$7; //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 var $9=($5|0)!=($8|0); //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 if($9){label=2;break;}else{label=3;break;} //@line 83 "lib/lua-5.2.3/src/lfunc.c"
 case 2: 
 var $11=$2; //@line 84 "lib/lua-5.2.3/src/lfunc.c"
 _unlinkupval($11); //@line 84 "lib/lua-5.2.3/src/lfunc.c"
 label=3;break; //@line 84 "lib/lua-5.2.3/src/lfunc.c"
 case 3: 
 var $13=$1; //@line 85 "lib/lua-5.2.3/src/lfunc.c"
 var $14=$2; //@line 85 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$14; //@line 85 "lib/lua-5.2.3/src/lfunc.c"
 var $16=_luaM_realloc_($13,$15,32,0); //@line 85 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return; //@line 86 "lib/lua-5.2.3/src/lfunc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _unlinkupval($uv){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$uv;
 var $2=$1; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $3=(($2+16)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$3; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $5=(($4)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$1; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $8=(($7+16)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $9=$8; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $10=(($9+4)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $11=HEAP32[(($10)>>2)]; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $12=(($11+16)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$12; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $14=(($13)|0); //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($14)>>2)]=$6; //@line 77 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$1; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $16=(($15+16)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $17=$16; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $18=(($17+4)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $19=HEAP32[(($18)>>2)]; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $20=$1; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $21=(($20+16)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $22=$21; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $23=(($22)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $24=HEAP32[(($23)>>2)]; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $25=(($24+16)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $26=$25; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 var $27=(($26+4)|0); //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($27)>>2)]=$19; //@line 78 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return; //@line 79 "lib/lua-5.2.3/src/lfunc.c"
}


function _luaF_close($L,$level){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $uv;
 var $g;
 var $o;
 var $io2;
 var $io1;
 $1=$L;
 $2=$level;
 var $3=$1; //@line 91 "lib/lua-5.2.3/src/lfunc.c"
 var $4=(($3+12)|0); //@line 91 "lib/lua-5.2.3/src/lfunc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 91 "lib/lua-5.2.3/src/lfunc.c"
 $g=$5; //@line 91 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 case 2: 
 var $7=$1; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $8=(($7+56)|0); //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $9=HEAP32[(($8)>>2)]; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $10=($9|0)!=0; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 if($10){label=3;break;}else{var $21=0;label=4;break;} //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 case 3: 
 var $12=$1; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $13=(($12+56)|0); //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$14; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 $uv=$15; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $16=(($15+8)|0); //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $17=HEAP32[(($16)>>2)]; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $18=$2; //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $19=($17>>>0)>=($18>>>0); //@line 92 "lib/lua-5.2.3/src/lfunc.c"
 var $21=$19;label=4;break;
 case 4: 
 var $21;
 if($21){label=5;break;}else{label=9;break;}
 case 5: 
 var $23=$uv; //@line 93 "lib/lua-5.2.3/src/lfunc.c"
 var $24=$23; //@line 93 "lib/lua-5.2.3/src/lfunc.c"
 $o=$24; //@line 93 "lib/lua-5.2.3/src/lfunc.c"
 var $25=$uv; //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 var $26=(($25)|0); //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 var $28=$1; //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 var $29=(($28+56)|0); //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($29)>>2)]=$27; //@line 95 "lib/lua-5.2.3/src/lfunc.c"
 var $30=$o; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $31=$30; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $32=(($31+5)|0); //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $33=HEAP8[($32)]; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $34=($33&255); //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $35=$34^3; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $36=$g; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $37=(($36+60)|0); //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $38=HEAP8[($37)]; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $39=($38&255); //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $40=$39^3; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $41=$35&$40; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 var $42=($41|0)!=0; //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 if($42){label=7;break;}else{label=6;break;} //@line 96 "lib/lua-5.2.3/src/lfunc.c"
 case 6: 
 var $44=$1; //@line 97 "lib/lua-5.2.3/src/lfunc.c"
 var $45=$uv; //@line 97 "lib/lua-5.2.3/src/lfunc.c"
 _luaF_freeupval($44,$45); //@line 97 "lib/lua-5.2.3/src/lfunc.c"
 label=8;break; //@line 97 "lib/lua-5.2.3/src/lfunc.c"
 case 7: 
 var $47=$uv; //@line 99 "lib/lua-5.2.3/src/lfunc.c"
 _unlinkupval($47); //@line 99 "lib/lua-5.2.3/src/lfunc.c"
 var $48=$uv; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $49=(($48+8)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 $io2=$50; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $51=$uv; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $52=(($51+16)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $53=$52; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 $io1=$53; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $54=$io1; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $55=(($54)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $56=$io2; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $57=(($56)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $58=$55; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $59=$57; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 assert(8 % 1 === 0);HEAP32[(($58)>>2)]=HEAP32[(($59)>>2)];HEAP32[((($58)+(4))>>2)]=HEAP32[((($59)+(4))>>2)]; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $60=$io2; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $61=(($60+8)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $62=HEAP32[(($61)>>2)]; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $63=$io1; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $64=(($63+8)|0); //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($64)>>2)]=$62; //@line 100 "lib/lua-5.2.3/src/lfunc.c"
 var $65=$uv; //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 var $66=(($65+16)|0); //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 var $67=$66; //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 var $68=$uv; //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 var $69=(($68+8)|0); //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($69)>>2)]=$67; //@line 101 "lib/lua-5.2.3/src/lfunc.c"
 var $70=$g; //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $71=(($70+68)|0); //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $72=HEAP32[(($71)>>2)]; //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $73=$o; //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $74=$73; //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $75=(($74)|0); //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($75)>>2)]=$72; //@line 102 "lib/lua-5.2.3/src/lfunc.c"
 var $76=$o; //@line 103 "lib/lua-5.2.3/src/lfunc.c"
 var $77=$g; //@line 103 "lib/lua-5.2.3/src/lfunc.c"
 var $78=(($77+68)|0); //@line 103 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($78)>>2)]=$76; //@line 103 "lib/lua-5.2.3/src/lfunc.c"
 var $79=$g; //@line 104 "lib/lua-5.2.3/src/lfunc.c"
 var $80=$uv; //@line 104 "lib/lua-5.2.3/src/lfunc.c"
 _luaC_checkupvalcolor($79,$80); //@line 104 "lib/lua-5.2.3/src/lfunc.c"
 label=8;break;
 case 8: 
 label=2;break; //@line 106 "lib/lua-5.2.3/src/lfunc.c"
 case 9: 
 STACKTOP=sp;return; //@line 107 "lib/lua-5.2.3/src/lfunc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaF_newproto($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $f;
 $1=$L;
 var $2=$1; //@line 111 "lib/lua-5.2.3/src/lfunc.c"
 var $3=_luaC_newobj($2,9,80,0,0); //@line 111 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$3; //@line 111 "lib/lua-5.2.3/src/lfunc.c"
 $f=$4; //@line 111 "lib/lua-5.2.3/src/lfunc.c"
 var $5=$f; //@line 112 "lib/lua-5.2.3/src/lfunc.c"
 var $6=(($5+8)|0); //@line 112 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($6)>>2)]=0; //@line 112 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$f; //@line 113 "lib/lua-5.2.3/src/lfunc.c"
 var $8=(($7+44)|0); //@line 113 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($8)>>2)]=0; //@line 113 "lib/lua-5.2.3/src/lfunc.c"
 var $9=$f; //@line 114 "lib/lua-5.2.3/src/lfunc.c"
 var $10=(($9+16)|0); //@line 114 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($10)>>2)]=0; //@line 114 "lib/lua-5.2.3/src/lfunc.c"
 var $11=$f; //@line 115 "lib/lua-5.2.3/src/lfunc.c"
 var $12=(($11+56)|0); //@line 115 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($12)>>2)]=0; //@line 115 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$f; //@line 116 "lib/lua-5.2.3/src/lfunc.c"
 var $14=(($13+12)|0); //@line 116 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($14)>>2)]=0; //@line 116 "lib/lua-5.2.3/src/lfunc.c"
 var $15=$f; //@line 117 "lib/lua-5.2.3/src/lfunc.c"
 var $16=(($15+32)|0); //@line 117 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($16)>>2)]=0; //@line 117 "lib/lua-5.2.3/src/lfunc.c"
 var $17=$f; //@line 118 "lib/lua-5.2.3/src/lfunc.c"
 var $18=(($17+48)|0); //@line 118 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($18)>>2)]=0; //@line 118 "lib/lua-5.2.3/src/lfunc.c"
 var $19=$f; //@line 119 "lib/lua-5.2.3/src/lfunc.c"
 var $20=(($19+20)|0); //@line 119 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($20)>>2)]=0; //@line 119 "lib/lua-5.2.3/src/lfunc.c"
 var $21=$f; //@line 120 "lib/lua-5.2.3/src/lfunc.c"
 var $22=(($21+52)|0); //@line 120 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($22)>>2)]=0; //@line 120 "lib/lua-5.2.3/src/lfunc.c"
 var $23=$f; //@line 121 "lib/lua-5.2.3/src/lfunc.c"
 var $24=(($23+28)|0); //@line 121 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($24)>>2)]=0; //@line 121 "lib/lua-5.2.3/src/lfunc.c"
 var $25=$f; //@line 122 "lib/lua-5.2.3/src/lfunc.c"
 var $26=(($25+40)|0); //@line 122 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($26)>>2)]=0; //@line 122 "lib/lua-5.2.3/src/lfunc.c"
 var $27=$f; //@line 123 "lib/lua-5.2.3/src/lfunc.c"
 var $28=(($27+76)|0); //@line 123 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($28)]=0; //@line 123 "lib/lua-5.2.3/src/lfunc.c"
 var $29=$f; //@line 124 "lib/lua-5.2.3/src/lfunc.c"
 var $30=(($29+77)|0); //@line 124 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($30)]=0; //@line 124 "lib/lua-5.2.3/src/lfunc.c"
 var $31=$f; //@line 125 "lib/lua-5.2.3/src/lfunc.c"
 var $32=(($31+78)|0); //@line 125 "lib/lua-5.2.3/src/lfunc.c"
 HEAP8[($32)]=0; //@line 125 "lib/lua-5.2.3/src/lfunc.c"
 var $33=$f; //@line 126 "lib/lua-5.2.3/src/lfunc.c"
 var $34=(($33+24)|0); //@line 126 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($34)>>2)]=0; //@line 126 "lib/lua-5.2.3/src/lfunc.c"
 var $35=$f; //@line 127 "lib/lua-5.2.3/src/lfunc.c"
 var $36=(($35+60)|0); //@line 127 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($36)>>2)]=0; //@line 127 "lib/lua-5.2.3/src/lfunc.c"
 var $37=$f; //@line 128 "lib/lua-5.2.3/src/lfunc.c"
 var $38=(($37+64)|0); //@line 128 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($38)>>2)]=0; //@line 128 "lib/lua-5.2.3/src/lfunc.c"
 var $39=$f; //@line 129 "lib/lua-5.2.3/src/lfunc.c"
 var $40=(($39+68)|0); //@line 129 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($40)>>2)]=0; //@line 129 "lib/lua-5.2.3/src/lfunc.c"
 var $41=$f; //@line 130 "lib/lua-5.2.3/src/lfunc.c"
 var $42=(($41+36)|0); //@line 130 "lib/lua-5.2.3/src/lfunc.c"
 HEAP32[(($42)>>2)]=0; //@line 130 "lib/lua-5.2.3/src/lfunc.c"
 var $43=$f; //@line 131 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $43; //@line 131 "lib/lua-5.2.3/src/lfunc.c"
}


function _luaF_freeproto($L,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$f;
 var $3=$1; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $4=$2; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $5=(($4+12)|0); //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$6; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $8=$2; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $9=(($8+48)|0); //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $11=($10<<2); //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $12=_luaM_realloc_($3,$7,$11,0); //@line 136 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$1; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $14=$2; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $15=(($14+16)|0); //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $17=$16; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $18=$2; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $19=(($18+56)|0); //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $20=HEAP32[(($19)>>2)]; //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $21=($20<<2); //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $22=_luaM_realloc_($13,$17,$21,0); //@line 137 "lib/lua-5.2.3/src/lfunc.c"
 var $23=$1; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $24=$2; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $25=(($24+8)|0); //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $26=HEAP32[(($25)>>2)]; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $27=$26; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $28=$2; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $29=(($28+44)|0); //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $30=HEAP32[(($29)>>2)]; //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $31=($30<<4); //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $32=_luaM_realloc_($23,$27,$31,0); //@line 138 "lib/lua-5.2.3/src/lfunc.c"
 var $33=$1; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $34=$2; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $35=(($34+20)|0); //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $37=$36; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $38=$2; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $39=(($38+52)|0); //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $40=HEAP32[(($39)>>2)]; //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $41=($40<<2); //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $42=_luaM_realloc_($33,$37,$41,0); //@line 139 "lib/lua-5.2.3/src/lfunc.c"
 var $43=$1; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $44=$2; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $45=(($44+24)|0); //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $46=HEAP32[(($45)>>2)]; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $47=$46; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $48=$2; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $49=(($48+60)|0); //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $51=((($50)*(12))&-1); //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $52=_luaM_realloc_($43,$47,$51,0); //@line 140 "lib/lua-5.2.3/src/lfunc.c"
 var $53=$1; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $54=$2; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $55=(($54+28)|0); //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $57=$56; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $58=$2; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $59=(($58+40)|0); //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $60=HEAP32[(($59)>>2)]; //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $61=($60<<3); //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $62=_luaM_realloc_($53,$57,$61,0); //@line 141 "lib/lua-5.2.3/src/lfunc.c"
 var $63=$1; //@line 142 "lib/lua-5.2.3/src/lfunc.c"
 var $64=$2; //@line 142 "lib/lua-5.2.3/src/lfunc.c"
 var $65=$64; //@line 142 "lib/lua-5.2.3/src/lfunc.c"
 var $66=_luaM_realloc_($63,$65,80,0); //@line 142 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return; //@line 143 "lib/lua-5.2.3/src/lfunc.c"
}


function _luaF_getlocalname($f,$local_number,$pc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 $2=$f;
 $3=$local_number;
 $4=$pc;
 $i=0; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 case 2: 
 var $6=$i; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $7=$2; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $8=(($7+60)|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $9=HEAP32[(($8)>>2)]; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $10=($6|0)<($9|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 if($10){label=3;break;}else{var $22=0;label=4;break;} //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 case 3: 
 var $12=$i; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $13=$2; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $14=(($13+24)|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $16=(($15+((($12)*(12))&-1))|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $17=(($16+4)|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $18=HEAP32[(($17)>>2)]; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $19=$4; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $20=($18|0)<=($19|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $22=$20;label=4;break;
 case 4: 
 var $22;
 if($22){label=5;break;}else{label=11;break;}
 case 5: 
 var $24=$4; //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $25=$i; //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $26=$2; //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $27=(($26+24)|0); //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $28=HEAP32[(($27)>>2)]; //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $29=(($28+((($25)*(12))&-1))|0); //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $30=(($29+8)|0); //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $31=HEAP32[(($30)>>2)]; //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 var $32=($24|0)<($31|0); //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 if($32){label=6;break;}else{label=9;break;} //@line 153 "lib/lua-5.2.3/src/lfunc.c"
 case 6: 
 var $34=$3; //@line 154 "lib/lua-5.2.3/src/lfunc.c"
 var $35=((($34)-(1))|0); //@line 154 "lib/lua-5.2.3/src/lfunc.c"
 $3=$35; //@line 154 "lib/lua-5.2.3/src/lfunc.c"
 var $36=$3; //@line 155 "lib/lua-5.2.3/src/lfunc.c"
 var $37=($36|0)==0; //@line 155 "lib/lua-5.2.3/src/lfunc.c"
 if($37){label=7;break;}else{label=8;break;} //@line 155 "lib/lua-5.2.3/src/lfunc.c"
 case 7: 
 var $39=$i; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $40=$2; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $41=(($40+24)|0); //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $42=HEAP32[(($41)>>2)]; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $43=(($42+((($39)*(12))&-1))|0); //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $44=(($43)|0); //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $45=HEAP32[(($44)>>2)]; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $46=(($45+16)|0); //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 var $47=$46; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 $1=$47; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 label=12;break; //@line 156 "lib/lua-5.2.3/src/lfunc.c"
 case 8: 
 label=9;break; //@line 157 "lib/lua-5.2.3/src/lfunc.c"
 case 9: 
 label=10;break; //@line 158 "lib/lua-5.2.3/src/lfunc.c"
 case 10: 
 var $51=$i; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 var $52=((($51)+(1))|0); //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 $i=$52; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 label=2;break; //@line 152 "lib/lua-5.2.3/src/lfunc.c"
 case 11: 
 $1=0; //@line 159 "lib/lua-5.2.3/src/lfunc.c"
 label=12;break; //@line 159 "lib/lua-5.2.3/src/lfunc.c"
 case 12: 
 var $55=$1; //@line 160 "lib/lua-5.2.3/src/lfunc.c"
 STACKTOP=sp;return $55; //@line 160 "lib/lua-5.2.3/src/lfunc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaopen_math($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 272 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_createtable($2,0,27); //@line 272 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 272 "lib/lua-5.2.3/src/lmathlib.c"
 _luaL_setfuncs($3,576,0); //@line 272 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 273 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($4,3.141592653589793); //@line 273 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=$1; //@line 274 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_setfield($5,-2,3656); //@line 274 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=$1; //@line 275 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($6,Infinity); //@line 275 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=$1; //@line 276 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_setfield($7,-2,13168); //@line 276 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 277 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_abs($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 27 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 27 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 27 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_abs($4); //@line 27 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 27 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 28 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_acos($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 67 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 67 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 67 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_acos($4); //@line 67 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 67 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 68 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_asin($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 62 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 62 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 62 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_asin($4); //@line 62 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 62 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 63 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_atan2($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 77 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 77 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 77 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=$1; //@line 78 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=_luaL_checknumber($5,2); //@line 78 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=Math_atan2($4,$6); //@line 78 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$7); //@line 78 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 79 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_atan($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 72 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 72 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 72 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_atan($4); //@line 72 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 72 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 73 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_ceil($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 83 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 83 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 83 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_ceil($4); //@line 83 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 83 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 84 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_cosh($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 47 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 47 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 47 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_cosh($4); //@line 47 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 47 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 48 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_cos($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 42 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 42 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 42 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_cos($4); //@line 42 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 42 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 43 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_deg($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 145 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 145 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 145 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=($4)/((0.017453292519943295)); //@line 145 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 145 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 146 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_exp($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 140 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 140 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 140 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_exp($4); //@line 140 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 140 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 141 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_floor($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 88 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 88 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 88 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_floor($4); //@line 88 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 88 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 89 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_fmod($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 93 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 93 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 93 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=$1; //@line 94 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=_luaL_checknumber($5,2); //@line 94 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=_fmod($4,$6); //@line 94 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$7); //@line 94 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 95 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_frexp($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $e=sp;
 $1=$L;
 var $2=$1; //@line 156 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 156 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 156 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_frexp($4,$e); //@line 156 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 156 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=$1; //@line 157 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=HEAP32[(($e)>>2)]; //@line 157 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushinteger($6,$7); //@line 157 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 2; //@line 158 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_ldexp($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $x;
 var $ep;
 $1=$L;
 var $2=$1; //@line 162 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_luaL_checknumber($2,1); //@line 162 "lib/lua-5.2.3/src/lmathlib.c"
 $x=$3; //@line 162 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 163 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_luaL_checkinteger($4,2); //@line 163 "lib/lua-5.2.3/src/lmathlib.c"
 $ep=$5; //@line 163 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=$1; //@line 164 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=$x; //@line 164 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=$ep; //@line 164 "lib/lua-5.2.3/src/lmathlib.c"
 var $9=_ldexp($7,$8); //@line 164 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($6,$9); //@line 164 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 165 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_log($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $x;
 var $res;
 var $base;
 $1=$L;
 var $2=$1; //@line 119 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_luaL_checknumber($2,1); //@line 119 "lib/lua-5.2.3/src/lmathlib.c"
 $x=$3; //@line 119 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 121 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_lua_type($4,2); //@line 121 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=($5|0)<=0; //@line 121 "lib/lua-5.2.3/src/lmathlib.c"
 if($6){label=2;break;}else{label=3;break;} //@line 121 "lib/lua-5.2.3/src/lmathlib.c"
 case 2: 
 var $8=$x; //@line 122 "lib/lua-5.2.3/src/lmathlib.c"
 var $9=Math_log($8); //@line 122 "lib/lua-5.2.3/src/lmathlib.c"
 $res=$9; //@line 122 "lib/lua-5.2.3/src/lmathlib.c"
 label=7;break; //@line 122 "lib/lua-5.2.3/src/lmathlib.c"
 case 3: 
 var $11=$1; //@line 124 "lib/lua-5.2.3/src/lmathlib.c"
 var $12=_luaL_checknumber($11,2); //@line 124 "lib/lua-5.2.3/src/lmathlib.c"
 $base=$12; //@line 124 "lib/lua-5.2.3/src/lmathlib.c"
 var $13=$base; //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 var $14=$13==10; //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 if($14){label=4;break;}else{label=5;break;} //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 case 4: 
 var $16=$x; //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 var $17=_log10($16); //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 $res=$17; //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 label=6;break; //@line 125 "lib/lua-5.2.3/src/lmathlib.c"
 case 5: 
 var $19=$x; //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 var $20=Math_log($19); //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 var $21=$base; //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 var $22=Math_log($21); //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 var $23=($20)/($22); //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 $res=$23; //@line 126 "lib/lua-5.2.3/src/lmathlib.c"
 label=6;break;
 case 6: 
 label=7;break;
 case 7: 
 var $26=$1; //@line 128 "lib/lua-5.2.3/src/lmathlib.c"
 var $27=$res; //@line 128 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($26,$27); //@line 128 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 129 "lib/lua-5.2.3/src/lmathlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _math_max($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $n;
 var $dmax;
 var $i;
 var $d;
 $1=$L;
 var $2=$1; //@line 185 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_lua_gettop($2); //@line 185 "lib/lua-5.2.3/src/lmathlib.c"
 $n=$3; //@line 185 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 186 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_luaL_checknumber($4,1); //@line 186 "lib/lua-5.2.3/src/lmathlib.c"
 $dmax=$5; //@line 186 "lib/lua-5.2.3/src/lmathlib.c"
 $i=2; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 label=2;break; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 case 2: 
 var $7=$i; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=$n; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 var $9=($7|0)<=($8|0); //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 if($9){label=3;break;}else{label=7;break;} //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 case 3: 
 var $11=$1; //@line 189 "lib/lua-5.2.3/src/lmathlib.c"
 var $12=$i; //@line 189 "lib/lua-5.2.3/src/lmathlib.c"
 var $13=_luaL_checknumber($11,$12); //@line 189 "lib/lua-5.2.3/src/lmathlib.c"
 $d=$13; //@line 189 "lib/lua-5.2.3/src/lmathlib.c"
 var $14=$d; //@line 190 "lib/lua-5.2.3/src/lmathlib.c"
 var $15=$dmax; //@line 190 "lib/lua-5.2.3/src/lmathlib.c"
 var $16=$14>$15; //@line 190 "lib/lua-5.2.3/src/lmathlib.c"
 if($16){label=4;break;}else{label=5;break;} //@line 190 "lib/lua-5.2.3/src/lmathlib.c"
 case 4: 
 var $18=$d; //@line 191 "lib/lua-5.2.3/src/lmathlib.c"
 $dmax=$18; //@line 191 "lib/lua-5.2.3/src/lmathlib.c"
 label=5;break; //@line 191 "lib/lua-5.2.3/src/lmathlib.c"
 case 5: 
 label=6;break; //@line 192 "lib/lua-5.2.3/src/lmathlib.c"
 case 6: 
 var $21=$i; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 var $22=((($21)+(1))|0); //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 $i=$22; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 label=2;break; //@line 188 "lib/lua-5.2.3/src/lmathlib.c"
 case 7: 
 var $24=$1; //@line 193 "lib/lua-5.2.3/src/lmathlib.c"
 var $25=$dmax; //@line 193 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($24,$25); //@line 193 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 194 "lib/lua-5.2.3/src/lmathlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _math_min($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $n;
 var $dmin;
 var $i;
 var $d;
 $1=$L;
 var $2=$1; //@line 171 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_lua_gettop($2); //@line 171 "lib/lua-5.2.3/src/lmathlib.c"
 $n=$3; //@line 171 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 172 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_luaL_checknumber($4,1); //@line 172 "lib/lua-5.2.3/src/lmathlib.c"
 $dmin=$5; //@line 172 "lib/lua-5.2.3/src/lmathlib.c"
 $i=2; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 label=2;break; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 case 2: 
 var $7=$i; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=$n; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 var $9=($7|0)<=($8|0); //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 if($9){label=3;break;}else{label=7;break;} //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 case 3: 
 var $11=$1; //@line 175 "lib/lua-5.2.3/src/lmathlib.c"
 var $12=$i; //@line 175 "lib/lua-5.2.3/src/lmathlib.c"
 var $13=_luaL_checknumber($11,$12); //@line 175 "lib/lua-5.2.3/src/lmathlib.c"
 $d=$13; //@line 175 "lib/lua-5.2.3/src/lmathlib.c"
 var $14=$d; //@line 176 "lib/lua-5.2.3/src/lmathlib.c"
 var $15=$dmin; //@line 176 "lib/lua-5.2.3/src/lmathlib.c"
 var $16=$14<$15; //@line 176 "lib/lua-5.2.3/src/lmathlib.c"
 if($16){label=4;break;}else{label=5;break;} //@line 176 "lib/lua-5.2.3/src/lmathlib.c"
 case 4: 
 var $18=$d; //@line 177 "lib/lua-5.2.3/src/lmathlib.c"
 $dmin=$18; //@line 177 "lib/lua-5.2.3/src/lmathlib.c"
 label=5;break; //@line 177 "lib/lua-5.2.3/src/lmathlib.c"
 case 5: 
 label=6;break; //@line 178 "lib/lua-5.2.3/src/lmathlib.c"
 case 6: 
 var $21=$i; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 var $22=((($21)+(1))|0); //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 $i=$22; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 label=2;break; //@line 174 "lib/lua-5.2.3/src/lmathlib.c"
 case 7: 
 var $24=$1; //@line 179 "lib/lua-5.2.3/src/lmathlib.c"
 var $25=$dmin; //@line 179 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($24,$25); //@line 179 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 180 "lib/lua-5.2.3/src/lmathlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _math_modf($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $ip=sp;
 var $fp;
 $1=$L;
 var $2=$1; //@line 100 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_luaL_checknumber($2,1); //@line 100 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_modf($3,$ip); //@line 100 "lib/lua-5.2.3/src/lmathlib.c"
 $fp=$4; //@line 100 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=$1; //@line 101 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=HEAPF64[(($ip)>>3)]; //@line 101 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($5,$6); //@line 101 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=$1; //@line 102 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=$fp; //@line 102 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($7,$8); //@line 102 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 2; //@line 103 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_pow($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $x;
 var $y;
 $1=$L;
 var $2=$1; //@line 112 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_luaL_checknumber($2,1); //@line 112 "lib/lua-5.2.3/src/lmathlib.c"
 $x=$3; //@line 112 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=$1; //@line 113 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_luaL_checknumber($4,2); //@line 113 "lib/lua-5.2.3/src/lmathlib.c"
 $y=$5; //@line 113 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=$1; //@line 114 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=$x; //@line 114 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=$y; //@line 114 "lib/lua-5.2.3/src/lmathlib.c"
 var $9=Math_pow($7,$8); //@line 114 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($6,$9); //@line 114 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 115 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_rad($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 150 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 150 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 150 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=($4)*((0.017453292519943295)); //@line 150 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 150 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 151 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_random($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $r;
 var $u;
 var $l;
 var $u1;
 $2=$L;
 var $3=_rand(); //@line 201 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=(((($3|0))%(2147483647))&-1); //@line 201 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=($4|0); //@line 201 "lib/lua-5.2.3/src/lmathlib.c"
 var $6=($5)/(2147483647); //@line 201 "lib/lua-5.2.3/src/lmathlib.c"
 $r=$6; //@line 201 "lib/lua-5.2.3/src/lmathlib.c"
 var $7=$2; //@line 202 "lib/lua-5.2.3/src/lmathlib.c"
 var $8=_lua_gettop($7); //@line 202 "lib/lua-5.2.3/src/lmathlib.c"
 if(($8|0)==0){ label=2;break;}else if(($8|0)==1){ label=3;break;}else if(($8|0)==2){ label=6;break;}else{label=9;break;}
 case 2: 
 var $10=$2; //@line 204 "lib/lua-5.2.3/src/lmathlib.c"
 var $11=$r; //@line 204 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($10,$11); //@line 204 "lib/lua-5.2.3/src/lmathlib.c"
 label=10;break; //@line 205 "lib/lua-5.2.3/src/lmathlib.c"
 case 3: 
 var $13=$2; //@line 208 "lib/lua-5.2.3/src/lmathlib.c"
 var $14=_luaL_checknumber($13,1); //@line 208 "lib/lua-5.2.3/src/lmathlib.c"
 $u=$14; //@line 208 "lib/lua-5.2.3/src/lmathlib.c"
 var $15=$u; //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 var $16=1<=$15; //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 if($16){var $22=1;label=5;break;}else{label=4;break;} //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 case 4: 
 var $18=$2; //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 var $19=_luaL_argerror($18,1,9520); //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 var $20=($19|0)!=0; //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 var $22=$20;label=5;break; //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 case 5: 
 var $22;
 var $23=($22&1); //@line 209 "lib/lua-5.2.3/src/lmathlib.c"
 var $24=$2; //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 var $25=$r; //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 var $26=$u; //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 var $27=($25)*($26); //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 var $28=Math_floor($27); //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 var $29=($28)+(1); //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($24,$29); //@line 210 "lib/lua-5.2.3/src/lmathlib.c"
 label=10;break; //@line 211 "lib/lua-5.2.3/src/lmathlib.c"
 case 6: 
 var $31=$2; //@line 214 "lib/lua-5.2.3/src/lmathlib.c"
 var $32=_luaL_checknumber($31,1); //@line 214 "lib/lua-5.2.3/src/lmathlib.c"
 $l=$32; //@line 214 "lib/lua-5.2.3/src/lmathlib.c"
 var $33=$2; //@line 215 "lib/lua-5.2.3/src/lmathlib.c"
 var $34=_luaL_checknumber($33,2); //@line 215 "lib/lua-5.2.3/src/lmathlib.c"
 $u1=$34; //@line 215 "lib/lua-5.2.3/src/lmathlib.c"
 var $35=$l; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $36=$u1; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $37=$35<=$36; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 if($37){var $43=1;label=8;break;}else{label=7;break;} //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 case 7: 
 var $39=$2; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $40=_luaL_argerror($39,2,9520); //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $41=($40|0)!=0; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $43=$41;label=8;break; //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 case 8: 
 var $43;
 var $44=($43&1); //@line 216 "lib/lua-5.2.3/src/lmathlib.c"
 var $45=$2; //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $46=$r; //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $47=$u1; //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $48=$l; //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $49=($47)-($48); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $50=($49)+(1); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $51=($46)*($50); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $52=Math_floor($51); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $53=$l; //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 var $54=($52)+($53); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($45,$54); //@line 217 "lib/lua-5.2.3/src/lmathlib.c"
 label=10;break; //@line 218 "lib/lua-5.2.3/src/lmathlib.c"
 case 9: 
 var $56=$2; //@line 220 "lib/lua-5.2.3/src/lmathlib.c"
 var $57=_luaL_error($56,9264,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 220 "lib/lua-5.2.3/src/lmathlib.c"
 $1=$57; //@line 220 "lib/lua-5.2.3/src/lmathlib.c"
 label=11;break; //@line 220 "lib/lua-5.2.3/src/lmathlib.c"
 case 10: 
 $1=1; //@line 222 "lib/lua-5.2.3/src/lmathlib.c"
 label=11;break; //@line 222 "lib/lua-5.2.3/src/lmathlib.c"
 case 11: 
 var $60=$1; //@line 223 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return $60; //@line 223 "lib/lua-5.2.3/src/lmathlib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _math_randomseed($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 227 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=_luaL_checkunsigned($2,1); //@line 227 "lib/lua-5.2.3/src/lmathlib.c"
 _srand($3); //@line 227 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_rand(); //@line 228 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 0; //@line 229 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_sinh($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 37 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 37 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 37 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_sinh($4); //@line 37 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 37 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 38 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_sin($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 32 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 32 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 32 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_sin($4); //@line 32 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 32 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 33 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_sqrt($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 107 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 107 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 107 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_sqrt($4); //@line 107 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 107 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 108 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_tanh($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 57 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 57 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 57 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=_tanh($4); //@line 57 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 57 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 58 "lib/lua-5.2.3/src/lmathlib.c"
}


function _math_tan($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 52 "lib/lua-5.2.3/src/lmathlib.c"
 var $3=$1; //@line 52 "lib/lua-5.2.3/src/lmathlib.c"
 var $4=_luaL_checknumber($3,1); //@line 52 "lib/lua-5.2.3/src/lmathlib.c"
 var $5=Math_tan($4); //@line 52 "lib/lua-5.2.3/src/lmathlib.c"
 _lua_pushnumber($2,$5); //@line 52 "lib/lua-5.2.3/src/lmathlib.c"
 STACKTOP=sp;return 1; //@line 53 "lib/lua-5.2.3/src/lmathlib.c"
}


function _luaH_next($L,$t,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 var $io;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 var $io23;
 var $io14;
 $2=$L;
 $3=$t;
 $4=$key;
 var $5=$2; //@line 170 "lib/lua-5.2.3/src/ltable.c"
 var $6=$3; //@line 170 "lib/lua-5.2.3/src/ltable.c"
 var $7=$4; //@line 170 "lib/lua-5.2.3/src/ltable.c"
 var $8=_findindex($5,$6,$7); //@line 170 "lib/lua-5.2.3/src/ltable.c"
 $i=$8; //@line 170 "lib/lua-5.2.3/src/ltable.c"
 var $9=$i; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $10=((($9)+(1))|0); //@line 171 "lib/lua-5.2.3/src/ltable.c"
 $i=$10; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $12=$i; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $13=$3; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $14=(($13+28)|0); //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $15=HEAP32[(($14)>>2)]; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $16=($12|0)<($15|0); //@line 171 "lib/lua-5.2.3/src/ltable.c"
 if($16){label=3;break;}else{label=7;break;} //@line 171 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $18=$i; //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $19=$3; //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $20=(($19+12)|0); //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $21=HEAP32[(($20)>>2)]; //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $22=(($21+($18<<4))|0); //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $23=(($22+8)|0); //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $24=HEAP32[(($23)>>2)]; //@line 172 "lib/lua-5.2.3/src/ltable.c"
 var $25=($24|0)==0; //@line 172 "lib/lua-5.2.3/src/ltable.c"
 if($25){label=5;break;}else{label=4;break;} //@line 172 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $27=$4; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 $io=$27; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $28=$i; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $29=((($28)+(1))|0); //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $30=($29|0); //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $31=$io; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $32=(($31)|0); //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $33=$32; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 HEAPF64[(($33)>>3)]=$30; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $34=$io; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $35=(($34+8)|0); //@line 173 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($35)>>2)]=3; //@line 173 "lib/lua-5.2.3/src/ltable.c"
 var $36=$i; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $37=$3; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $38=(($37+12)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $39=HEAP32[(($38)>>2)]; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $40=(($39+($36<<4))|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 $io2=$40; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $41=$4; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $42=(($41+16)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 $io1=$42; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $43=$io1; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $44=(($43)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $45=$io2; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $46=(($45)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $47=$44; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $48=$46; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($47)>>2)]=HEAP32[(($48)>>2)];HEAP32[((($47)+(4))>>2)]=HEAP32[((($48)+(4))>>2)]; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $49=$io2; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $50=(($49+8)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $51=HEAP32[(($50)>>2)]; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $52=$io1; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 var $53=(($52+8)|0); //@line 174 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($53)>>2)]=$51; //@line 174 "lib/lua-5.2.3/src/ltable.c"
 $1=1; //@line 175 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 175 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 label=6;break; //@line 177 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $56=$i; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 var $57=((($56)+(1))|0); //@line 171 "lib/lua-5.2.3/src/ltable.c"
 $i=$57; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 171 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $59=$3; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $60=(($59+28)|0); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $61=HEAP32[(($60)>>2)]; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $62=$i; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $63=((($62)-($61))|0); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 $i=$63; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $65=$i; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $66=$3; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $67=(($66+7)|0); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $68=HEAP8[($67)]; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $69=($68&255); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $70=1<<$69; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $71=($65|0)<($70|0); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 if($71){label=9;break;}else{label=13;break;} //@line 178 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $73=$i; //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $74=$3; //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $75=(($74+16)|0); //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $76=HEAP32[(($75)>>2)]; //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $77=(($76+($73<<5))|0); //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $78=(($77)|0); //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $79=(($78+8)|0); //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $80=HEAP32[(($79)>>2)]; //@line 179 "lib/lua-5.2.3/src/ltable.c"
 var $81=($80|0)==0; //@line 179 "lib/lua-5.2.3/src/ltable.c"
 if($81){label=11;break;}else{label=10;break;} //@line 179 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $83=$i; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $84=$3; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $85=(($84+16)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $86=HEAP32[(($85)>>2)]; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $87=(($86+($83<<5))|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $88=(($87+16)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $89=$88; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 $io21=$89; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $90=$4; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 $io12=$90; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $91=$io12; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $92=(($91)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $93=$io21; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $94=(($93)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $95=$92; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $96=$94; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($95)>>2)]=HEAP32[(($96)>>2)];HEAP32[((($95)+(4))>>2)]=HEAP32[((($96)+(4))>>2)]; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $97=$io21; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $98=(($97+8)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $99=HEAP32[(($98)>>2)]; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $100=$io12; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $101=(($100+8)|0); //@line 180 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($101)>>2)]=$99; //@line 180 "lib/lua-5.2.3/src/ltable.c"
 var $102=$i; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $103=$3; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $104=(($103+16)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $105=HEAP32[(($104)>>2)]; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $106=(($105+($102<<5))|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $107=(($106)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 $io23=$107; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $108=$4; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $109=(($108+16)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 $io14=$109; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $110=$io14; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $111=(($110)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $112=$io23; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $113=(($112)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $114=$111; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $115=$113; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($114)>>2)]=HEAP32[(($115)>>2)];HEAP32[((($114)+(4))>>2)]=HEAP32[((($115)+(4))>>2)]; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $116=$io23; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $117=(($116+8)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $118=HEAP32[(($117)>>2)]; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $119=$io14; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 var $120=(($119+8)|0); //@line 181 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($120)>>2)]=$118; //@line 181 "lib/lua-5.2.3/src/ltable.c"
 $1=1; //@line 182 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 182 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 label=12;break; //@line 184 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $123=$i; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 var $124=((($123)+(1))|0); //@line 178 "lib/lua-5.2.3/src/ltable.c"
 $i=$124; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 178 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 $1=0; //@line 185 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 185 "lib/lua-5.2.3/src/ltable.c"
 case 14: 
 var $127=$1; //@line 186 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $127; //@line 186 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _findindex($L,$t,$key){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 var $n;
 $2=$L;
 $3=$t;
 $4=$key;
 var $5=$4; //@line 146 "lib/lua-5.2.3/src/ltable.c"
 var $6=(($5+8)|0); //@line 146 "lib/lua-5.2.3/src/ltable.c"
 var $7=HEAP32[(($6)>>2)]; //@line 146 "lib/lua-5.2.3/src/ltable.c"
 var $8=($7|0)==0; //@line 146 "lib/lua-5.2.3/src/ltable.c"
 if($8){label=2;break;}else{label=3;break;} //@line 146 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 $1=-1; //@line 146 "lib/lua-5.2.3/src/ltable.c"
 label=17;break; //@line 146 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $11=$4; //@line 147 "lib/lua-5.2.3/src/ltable.c"
 var $12=_arrayindex($11); //@line 147 "lib/lua-5.2.3/src/ltable.c"
 $i=$12; //@line 147 "lib/lua-5.2.3/src/ltable.c"
 var $13=$i; //@line 148 "lib/lua-5.2.3/src/ltable.c"
 var $14=0<($13|0); //@line 148 "lib/lua-5.2.3/src/ltable.c"
 if($14){label=4;break;}else{label=6;break;} //@line 148 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $16=$i; //@line 148 "lib/lua-5.2.3/src/ltable.c"
 var $17=$3; //@line 148 "lib/lua-5.2.3/src/ltable.c"
 var $18=(($17+28)|0); //@line 148 "lib/lua-5.2.3/src/ltable.c"
 var $19=HEAP32[(($18)>>2)]; //@line 148 "lib/lua-5.2.3/src/ltable.c"
 var $20=($16|0)<=($19|0); //@line 148 "lib/lua-5.2.3/src/ltable.c"
 if($20){label=5;break;}else{label=6;break;} //@line 148 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $22=$i; //@line 149 "lib/lua-5.2.3/src/ltable.c"
 var $23=((($22)-(1))|0); //@line 149 "lib/lua-5.2.3/src/ltable.c"
 $1=$23; //@line 149 "lib/lua-5.2.3/src/ltable.c"
 label=17;break; //@line 149 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $25=$3; //@line 151 "lib/lua-5.2.3/src/ltable.c"
 var $26=$4; //@line 151 "lib/lua-5.2.3/src/ltable.c"
 var $27=_mainposition($25,$26); //@line 151 "lib/lua-5.2.3/src/ltable.c"
 $n=$27; //@line 151 "lib/lua-5.2.3/src/ltable.c"
 label=7;break; //@line 152 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $29=$n; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $30=(($29+16)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $31=$30; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $32=(($31+8)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $33=HEAP32[(($32)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $34=$4; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $35=(($34+8)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $36=HEAP32[(($35)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $37=($33|0)==($36|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 if($37){label=8;break;}else{label=9;break;} //@line 154 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $39=$n; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $40=(($39+16)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $41=$40; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $42=$4; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $43=_luaV_equalobj_(0,$41,$42); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $44=($43|0)!=0; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 if($44){label=12;break;}else{label=9;break;} //@line 154 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $46=$n; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $47=(($46+16)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $48=$47; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $49=(($48+8)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $50=HEAP32[(($49)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $51=($50|0)==11; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 if($51){label=10;break;}else{label=13;break;} //@line 154 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $53=$4; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $54=(($53+8)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $55=HEAP32[(($54)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $56=$55&64; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $57=($56|0)!=0; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 if($57){label=11;break;}else{label=13;break;} //@line 154 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $59=$n; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $60=(($59+16)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $61=$60; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $62=(($61)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $63=$62; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $64=HEAP32[(($63)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $65=$64; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $66=$4; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $67=(($66)|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $68=$67; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $69=HEAP32[(($68)>>2)]; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $70=$69; //@line 154 "lib/lua-5.2.3/src/ltable.c"
 var $71=($65|0)==($70|0); //@line 154 "lib/lua-5.2.3/src/ltable.c"
 if($71){label=12;break;}else{label=13;break;} //@line 154 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $73=$n; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $74=$3; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $75=(($74+16)|0); //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $76=HEAP32[(($75)>>2)]; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $77=(($76)|0); //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $78=$73; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $79=$77; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $80=((($78)-($79))|0); //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $81=(((($80|0))/(32))&-1); //@line 157 "lib/lua-5.2.3/src/ltable.c"
 $i=$81; //@line 157 "lib/lua-5.2.3/src/ltable.c"
 var $82=$i; //@line 159 "lib/lua-5.2.3/src/ltable.c"
 var $83=$3; //@line 159 "lib/lua-5.2.3/src/ltable.c"
 var $84=(($83+28)|0); //@line 159 "lib/lua-5.2.3/src/ltable.c"
 var $85=HEAP32[(($84)>>2)]; //@line 159 "lib/lua-5.2.3/src/ltable.c"
 var $86=((($82)+($85))|0); //@line 159 "lib/lua-5.2.3/src/ltable.c"
 $1=$86; //@line 159 "lib/lua-5.2.3/src/ltable.c"
 label=17;break; //@line 159 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $88=$n; //@line 161 "lib/lua-5.2.3/src/ltable.c"
 var $89=(($88+16)|0); //@line 161 "lib/lua-5.2.3/src/ltable.c"
 var $90=$89; //@line 161 "lib/lua-5.2.3/src/ltable.c"
 var $91=(($90+12)|0); //@line 161 "lib/lua-5.2.3/src/ltable.c"
 var $92=HEAP32[(($91)>>2)]; //@line 161 "lib/lua-5.2.3/src/ltable.c"
 $n=$92; //@line 161 "lib/lua-5.2.3/src/ltable.c"
 label=14;break;
 case 14: 
 var $94=$n; //@line 162 "lib/lua-5.2.3/src/ltable.c"
 var $95=($94|0)==0; //@line 162 "lib/lua-5.2.3/src/ltable.c"
 if($95){label=15;break;}else{label=16;break;} //@line 162 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $97=$2; //@line 163 "lib/lua-5.2.3/src/ltable.c"
 _luaG_runerror($97,7768,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 163 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 163 "lib/lua-5.2.3/src/ltable.c"
 case 16: 
 label=7;break; //@line 164 "lib/lua-5.2.3/src/ltable.c"
 case 17: 
 var $100=$1; //@line 166 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $100; //@line 166 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_resize($L,$t,$nasize,$nhsize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 var $oldasize;
 var $oldhsize;
 var $nold;
 var $old;
 var $io2;
 var $io1;
 $1=$L;
 $2=$t;
 $3=$nasize;
 $4=$nhsize;
 var $5=$2; //@line 306 "lib/lua-5.2.3/src/ltable.c"
 var $6=(($5+28)|0); //@line 306 "lib/lua-5.2.3/src/ltable.c"
 var $7=HEAP32[(($6)>>2)]; //@line 306 "lib/lua-5.2.3/src/ltable.c"
 $oldasize=$7; //@line 306 "lib/lua-5.2.3/src/ltable.c"
 var $8=$2; //@line 307 "lib/lua-5.2.3/src/ltable.c"
 var $9=(($8+7)|0); //@line 307 "lib/lua-5.2.3/src/ltable.c"
 var $10=HEAP8[($9)]; //@line 307 "lib/lua-5.2.3/src/ltable.c"
 var $11=($10&255); //@line 307 "lib/lua-5.2.3/src/ltable.c"
 $oldhsize=$11; //@line 307 "lib/lua-5.2.3/src/ltable.c"
 var $12=$2; //@line 308 "lib/lua-5.2.3/src/ltable.c"
 var $13=(($12+16)|0); //@line 308 "lib/lua-5.2.3/src/ltable.c"
 var $14=HEAP32[(($13)>>2)]; //@line 308 "lib/lua-5.2.3/src/ltable.c"
 $nold=$14; //@line 308 "lib/lua-5.2.3/src/ltable.c"
 var $15=$3; //@line 309 "lib/lua-5.2.3/src/ltable.c"
 var $16=$oldasize; //@line 309 "lib/lua-5.2.3/src/ltable.c"
 var $17=($15|0)>($16|0); //@line 309 "lib/lua-5.2.3/src/ltable.c"
 if($17){label=2;break;}else{label=3;break;} //@line 309 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $19=$1; //@line 310 "lib/lua-5.2.3/src/ltable.c"
 var $20=$2; //@line 310 "lib/lua-5.2.3/src/ltable.c"
 var $21=$3; //@line 310 "lib/lua-5.2.3/src/ltable.c"
 _setarrayvector($19,$20,$21); //@line 310 "lib/lua-5.2.3/src/ltable.c"
 label=3;break; //@line 310 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $23=$1; //@line 312 "lib/lua-5.2.3/src/ltable.c"
 var $24=$2; //@line 312 "lib/lua-5.2.3/src/ltable.c"
 var $25=$4; //@line 312 "lib/lua-5.2.3/src/ltable.c"
 _setnodevector($23,$24,$25); //@line 312 "lib/lua-5.2.3/src/ltable.c"
 var $26=$3; //@line 313 "lib/lua-5.2.3/src/ltable.c"
 var $27=$oldasize; //@line 313 "lib/lua-5.2.3/src/ltable.c"
 var $28=($26|0)<($27|0); //@line 313 "lib/lua-5.2.3/src/ltable.c"
 if($28){label=4;break;}else{label=14;break;} //@line 313 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $30=$3; //@line 314 "lib/lua-5.2.3/src/ltable.c"
 var $31=$2; //@line 314 "lib/lua-5.2.3/src/ltable.c"
 var $32=(($31+28)|0); //@line 314 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($32)>>2)]=$30; //@line 314 "lib/lua-5.2.3/src/ltable.c"
 var $33=$3; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 $i=$33; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $35=$i; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 var $36=$oldasize; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 var $37=($35|0)<($36|0); //@line 316 "lib/lua-5.2.3/src/ltable.c"
 if($37){label=6;break;}else{label=10;break;} //@line 316 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $39=$i; //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $40=$2; //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $41=(($40+12)|0); //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $42=HEAP32[(($41)>>2)]; //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $43=(($42+($39<<4))|0); //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $44=(($43+8)|0); //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $45=HEAP32[(($44)>>2)]; //@line 317 "lib/lua-5.2.3/src/ltable.c"
 var $46=($45|0)==0; //@line 317 "lib/lua-5.2.3/src/ltable.c"
 if($46){label=8;break;}else{label=7;break;} //@line 317 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $48=$1; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $49=$2; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $50=$i; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $51=((($50)+(1))|0); //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $52=$i; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $53=$2; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $54=(($53+12)|0); //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $55=HEAP32[(($54)>>2)]; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 var $56=(($55+($52<<4))|0); //@line 318 "lib/lua-5.2.3/src/ltable.c"
 _luaH_setint($48,$49,$51,$56); //@line 318 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 318 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 label=9;break; //@line 319 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $59=$i; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 var $60=((($59)+(1))|0); //@line 316 "lib/lua-5.2.3/src/ltable.c"
 $i=$60; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 316 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $62=$3; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $63=((($62)+(1))|0); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $64=($63>>>0)>268435455; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 if($64){label=11;break;}else{label=12;break;} //@line 321 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $66=$1; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 _luaM_toobig($66); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $70=0;label=13;break; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $70; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $71=$1; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $72=$2; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $73=(($72+12)|0); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $74=HEAP32[(($73)>>2)]; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $75=$74; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $76=$oldasize; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $77=($76<<4); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $78=$3; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $79=($78<<4); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $80=_luaM_realloc_($71,$75,$77,$79); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $81=$80; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $82=$2; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 var $83=(($82+12)|0); //@line 321 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($83)>>2)]=$81; //@line 321 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 322 "lib/lua-5.2.3/src/ltable.c"
 case 14: 
 var $85=$oldhsize; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 var $86=1<<$85; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 var $87=((($86)-(1))|0); //@line 324 "lib/lua-5.2.3/src/ltable.c"
 $i=$87; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $89=$i; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 var $90=($89|0)>=0; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 if($90){label=16;break;}else{label=20;break;} //@line 324 "lib/lua-5.2.3/src/ltable.c"
 case 16: 
 var $92=$nold; //@line 325 "lib/lua-5.2.3/src/ltable.c"
 var $93=$i; //@line 325 "lib/lua-5.2.3/src/ltable.c"
 var $94=(($92+($93<<5))|0); //@line 325 "lib/lua-5.2.3/src/ltable.c"
 $old=$94; //@line 325 "lib/lua-5.2.3/src/ltable.c"
 var $95=$old; //@line 326 "lib/lua-5.2.3/src/ltable.c"
 var $96=(($95)|0); //@line 326 "lib/lua-5.2.3/src/ltable.c"
 var $97=(($96+8)|0); //@line 326 "lib/lua-5.2.3/src/ltable.c"
 var $98=HEAP32[(($97)>>2)]; //@line 326 "lib/lua-5.2.3/src/ltable.c"
 var $99=($98|0)==0; //@line 326 "lib/lua-5.2.3/src/ltable.c"
 if($99){label=18;break;}else{label=17;break;} //@line 326 "lib/lua-5.2.3/src/ltable.c"
 case 17: 
 var $101=$old; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $102=(($101)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 $io2=$102; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $103=$1; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $104=$2; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $105=$old; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $106=(($105+16)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $107=$106; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $108=_luaH_set($103,$104,$107); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 $io1=$108; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $109=$io1; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $110=(($109)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $111=$io2; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $112=(($111)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $113=$110; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $114=$112; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($113)>>2)]=HEAP32[(($114)>>2)];HEAP32[((($113)+(4))>>2)]=HEAP32[((($114)+(4))>>2)]; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $115=$io2; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $116=(($115+8)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $117=HEAP32[(($116)>>2)]; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $118=$io1; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 var $119=(($118+8)|0); //@line 329 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($119)>>2)]=$117; //@line 329 "lib/lua-5.2.3/src/ltable.c"
 label=18;break; //@line 330 "lib/lua-5.2.3/src/ltable.c"
 case 18: 
 label=19;break; //@line 331 "lib/lua-5.2.3/src/ltable.c"
 case 19: 
 var $122=$i; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 var $123=((($122)-(1))|0); //@line 324 "lib/lua-5.2.3/src/ltable.c"
 $i=$123; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 324 "lib/lua-5.2.3/src/ltable.c"
 case 20: 
 var $125=$nold; //@line 332 "lib/lua-5.2.3/src/ltable.c"
 var $126=($125|0)==2096; //@line 332 "lib/lua-5.2.3/src/ltable.c"
 if($126){label=22;break;}else{label=21;break;} //@line 332 "lib/lua-5.2.3/src/ltable.c"
 case 21: 
 var $128=$1; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $129=$nold; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $130=$129; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $131=$oldhsize; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $132=1<<$131; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $133=($132<<5); //@line 333 "lib/lua-5.2.3/src/ltable.c"
 var $134=_luaM_realloc_($128,$130,$133,0); //@line 333 "lib/lua-5.2.3/src/ltable.c"
 label=22;break; //@line 333 "lib/lua-5.2.3/src/ltable.c"
 case 22: 
 STACKTOP=sp;return; //@line 334 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _setarrayvector($L,$t,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 $1=$L;
 $2=$t;
 $3=$size;
 var $4=$3; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $5=((($4)+(1))|0); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $6=($5>>>0)>268435455; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 if($6){label=2;break;}else{label=3;break;} //@line 272 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $8=$1; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 _luaM_toobig($8); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $12=0;label=4;break; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $12; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $13=$1; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $14=$2; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $15=(($14+12)|0); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $16=HEAP32[(($15)>>2)]; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $17=$16; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $18=$2; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($18+28)|0); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $20=HEAP32[(($19)>>2)]; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $21=($20<<4); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $22=$3; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $23=($22<<4); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $24=_luaM_realloc_($13,$17,$21,$23); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $25=$24; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $26=$2; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $27=(($26+12)|0); //@line 272 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($27)>>2)]=$25; //@line 272 "lib/lua-5.2.3/src/ltable.c"
 var $28=$2; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 var $29=(($28+28)|0); //@line 273 "lib/lua-5.2.3/src/ltable.c"
 var $30=HEAP32[(($29)>>2)]; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 $i=$30; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $32=$i; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 var $33=$3; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 var $34=($32|0)<($33|0); //@line 273 "lib/lua-5.2.3/src/ltable.c"
 if($34){label=6;break;}else{label=8;break;} //@line 273 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $36=$i; //@line 274 "lib/lua-5.2.3/src/ltable.c"
 var $37=$2; //@line 274 "lib/lua-5.2.3/src/ltable.c"
 var $38=(($37+12)|0); //@line 274 "lib/lua-5.2.3/src/ltable.c"
 var $39=HEAP32[(($38)>>2)]; //@line 274 "lib/lua-5.2.3/src/ltable.c"
 var $40=(($39+($36<<4))|0); //@line 274 "lib/lua-5.2.3/src/ltable.c"
 var $41=(($40+8)|0); //@line 274 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($41)>>2)]=0; //@line 274 "lib/lua-5.2.3/src/ltable.c"
 label=7;break; //@line 274 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $43=$i; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 var $44=((($43)+(1))|0); //@line 273 "lib/lua-5.2.3/src/ltable.c"
 $i=$44; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 273 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $46=$3; //@line 275 "lib/lua-5.2.3/src/ltable.c"
 var $47=$2; //@line 275 "lib/lua-5.2.3/src/ltable.c"
 var $48=(($47+28)|0); //@line 275 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($48)>>2)]=$46; //@line 275 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 276 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _setnodevector($L,$t,$size){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $lsize;
 var $i;
 var $n;
 $1=$L;
 $2=$t;
 $3=$size;
 var $4=$3; //@line 281 "lib/lua-5.2.3/src/ltable.c"
 var $5=($4|0)==0; //@line 281 "lib/lua-5.2.3/src/ltable.c"
 if($5){label=2;break;}else{label=3;break;} //@line 281 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $7=$2; //@line 282 "lib/lua-5.2.3/src/ltable.c"
 var $8=(($7+16)|0); //@line 282 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($8)>>2)]=2096; //@line 282 "lib/lua-5.2.3/src/ltable.c"
 $lsize=0; //@line 283 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 284 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $10=$3; //@line 287 "lib/lua-5.2.3/src/ltable.c"
 var $11=_luaO_ceillog2($10); //@line 287 "lib/lua-5.2.3/src/ltable.c"
 $lsize=$11; //@line 287 "lib/lua-5.2.3/src/ltable.c"
 var $12=$lsize; //@line 288 "lib/lua-5.2.3/src/ltable.c"
 var $13=($12|0)>30; //@line 288 "lib/lua-5.2.3/src/ltable.c"
 if($13){label=4;break;}else{label=5;break;} //@line 288 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $15=$1; //@line 289 "lib/lua-5.2.3/src/ltable.c"
 _luaG_runerror($15,9808,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 289 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 289 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $17=$lsize; //@line 290 "lib/lua-5.2.3/src/ltable.c"
 var $18=1<<$17; //@line 290 "lib/lua-5.2.3/src/ltable.c"
 $3=$18; //@line 290 "lib/lua-5.2.3/src/ltable.c"
 var $19=$3; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $20=((($19)+(1))|0); //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $21=($20>>>0)>134217727; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 if($21){label=6;break;}else{label=7;break;} //@line 291 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $23=$1; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 _luaM_toobig($23); //@line 291 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $27=0;label=8;break; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $27; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $28=$1; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $29=$3; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $30=($29<<5); //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $31=_luaM_realloc_($28,0,0,$30); //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $32=$31; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $33=$2; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 var $34=(($33+16)|0); //@line 291 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($34)>>2)]=$32; //@line 291 "lib/lua-5.2.3/src/ltable.c"
 $i=0; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 label=9;break; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $36=$i; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 var $37=$3; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 var $38=($36|0)<($37|0); //@line 292 "lib/lua-5.2.3/src/ltable.c"
 if($38){label=10;break;}else{label=12;break;} //@line 292 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $40=$i; //@line 293 "lib/lua-5.2.3/src/ltable.c"
 var $41=$2; //@line 293 "lib/lua-5.2.3/src/ltable.c"
 var $42=(($41+16)|0); //@line 293 "lib/lua-5.2.3/src/ltable.c"
 var $43=HEAP32[(($42)>>2)]; //@line 293 "lib/lua-5.2.3/src/ltable.c"
 var $44=(($43+($40<<5))|0); //@line 293 "lib/lua-5.2.3/src/ltable.c"
 $n=$44; //@line 293 "lib/lua-5.2.3/src/ltable.c"
 var $45=$n; //@line 294 "lib/lua-5.2.3/src/ltable.c"
 var $46=(($45+16)|0); //@line 294 "lib/lua-5.2.3/src/ltable.c"
 var $47=$46; //@line 294 "lib/lua-5.2.3/src/ltable.c"
 var $48=(($47+12)|0); //@line 294 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($48)>>2)]=0; //@line 294 "lib/lua-5.2.3/src/ltable.c"
 var $49=$n; //@line 295 "lib/lua-5.2.3/src/ltable.c"
 var $50=(($49+16)|0); //@line 295 "lib/lua-5.2.3/src/ltable.c"
 var $51=$50; //@line 295 "lib/lua-5.2.3/src/ltable.c"
 var $52=(($51+8)|0); //@line 295 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($52)>>2)]=0; //@line 295 "lib/lua-5.2.3/src/ltable.c"
 var $53=$n; //@line 296 "lib/lua-5.2.3/src/ltable.c"
 var $54=(($53)|0); //@line 296 "lib/lua-5.2.3/src/ltable.c"
 var $55=(($54+8)|0); //@line 296 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($55)>>2)]=0; //@line 296 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 297 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $57=$i; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 var $58=((($57)+(1))|0); //@line 292 "lib/lua-5.2.3/src/ltable.c"
 $i=$58; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 label=9;break; //@line 292 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 label=13;break;
 case 13: 
 var $61=$lsize; //@line 299 "lib/lua-5.2.3/src/ltable.c"
 var $62=(($61)&255); //@line 299 "lib/lua-5.2.3/src/ltable.c"
 var $63=$2; //@line 299 "lib/lua-5.2.3/src/ltable.c"
 var $64=(($63+7)|0); //@line 299 "lib/lua-5.2.3/src/ltable.c"
 HEAP8[($64)]=$62; //@line 299 "lib/lua-5.2.3/src/ltable.c"
 var $65=$3; //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $66=$2; //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $67=(($66+16)|0); //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $68=HEAP32[(($67)>>2)]; //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $69=(($68+($65<<5))|0); //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $70=$2; //@line 300 "lib/lua-5.2.3/src/ltable.c"
 var $71=(($70+20)|0); //@line 300 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($71)>>2)]=$69; //@line 300 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 301 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_setint($L,$t,$key,$value){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $p;
 var $cell;
 var $k=sp;
 var $io;
 var $io2;
 var $io1;
 $1=$L;
 $2=$t;
 $3=$key;
 $4=$value;
 var $5=$2; //@line 519 "lib/lua-5.2.3/src/ltable.c"
 var $6=$3; //@line 519 "lib/lua-5.2.3/src/ltable.c"
 var $7=_luaH_getint($5,$6); //@line 519 "lib/lua-5.2.3/src/ltable.c"
 $p=$7; //@line 519 "lib/lua-5.2.3/src/ltable.c"
 var $8=$p; //@line 521 "lib/lua-5.2.3/src/ltable.c"
 var $9=($8|0)!=1376; //@line 521 "lib/lua-5.2.3/src/ltable.c"
 if($9){label=2;break;}else{label=3;break;} //@line 521 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $11=$p; //@line 522 "lib/lua-5.2.3/src/ltable.c"
 $cell=$11; //@line 522 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 522 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 $io=$k; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $13=$3; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $14=($13|0); //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $15=$io; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $16=(($15)|0); //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $17=$16; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 HEAPF64[(($17)>>3)]=$14; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $18=$io; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($18+8)|0); //@line 525 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($19)>>2)]=3; //@line 525 "lib/lua-5.2.3/src/ltable.c"
 var $20=$1; //@line 526 "lib/lua-5.2.3/src/ltable.c"
 var $21=$2; //@line 526 "lib/lua-5.2.3/src/ltable.c"
 var $22=_luaH_newkey($20,$21,$k); //@line 526 "lib/lua-5.2.3/src/ltable.c"
 $cell=$22; //@line 526 "lib/lua-5.2.3/src/ltable.c"
 label=4;break;
 case 4: 
 var $24=$4; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 $io2=$24; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $25=$cell; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 $io1=$25; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $26=$io1; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $27=(($26)|0); //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $28=$io2; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $29=(($28)|0); //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $30=$27; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $31=$29; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($30)>>2)]=HEAP32[(($31)>>2)];HEAP32[((($30)+(4))>>2)]=HEAP32[((($31)+(4))>>2)]; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $32=$io2; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $33=(($32+8)|0); //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $34=HEAP32[(($33)>>2)]; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $35=$io1; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 var $36=(($35+8)|0); //@line 528 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($36)>>2)]=$34; //@line 528 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 529 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_set($L,$t,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $p;
 $2=$L;
 $3=$t;
 $4=$key;
 var $5=$3; //@line 511 "lib/lua-5.2.3/src/ltable.c"
 var $6=$4; //@line 511 "lib/lua-5.2.3/src/ltable.c"
 var $7=_luaH_get($5,$6); //@line 511 "lib/lua-5.2.3/src/ltable.c"
 $p=$7; //@line 511 "lib/lua-5.2.3/src/ltable.c"
 var $8=$p; //@line 512 "lib/lua-5.2.3/src/ltable.c"
 var $9=($8|0)!=1376; //@line 512 "lib/lua-5.2.3/src/ltable.c"
 if($9){label=2;break;}else{label=3;break;} //@line 512 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $11=$p; //@line 513 "lib/lua-5.2.3/src/ltable.c"
 $1=$11; //@line 513 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 513 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $13=$2; //@line 514 "lib/lua-5.2.3/src/ltable.c"
 var $14=$3; //@line 514 "lib/lua-5.2.3/src/ltable.c"
 var $15=$4; //@line 514 "lib/lua-5.2.3/src/ltable.c"
 var $16=_luaH_newkey($13,$14,$15); //@line 514 "lib/lua-5.2.3/src/ltable.c"
 $1=$16; //@line 514 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 514 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $18=$1; //@line 515 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $18; //@line 515 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_resizearray($L,$t,$nasize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $nsize;
 $1=$L;
 $2=$t;
 $3=$nasize;
 var $4=$2; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $5=(($4+16)|0); //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $6=HEAP32[(($5)>>2)]; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $7=($6|0)==2096; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 if($7){label=2;break;}else{label=3;break;} //@line 338 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $16=0;label=4;break; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $10=$2; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $11=(($10+7)|0); //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $12=HEAP8[($11)]; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $13=($12&255); //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $14=1<<$13; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $16=$14;label=4;break; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $16; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 $nsize=$16; //@line 338 "lib/lua-5.2.3/src/ltable.c"
 var $17=$1; //@line 339 "lib/lua-5.2.3/src/ltable.c"
 var $18=$2; //@line 339 "lib/lua-5.2.3/src/ltable.c"
 var $19=$3; //@line 339 "lib/lua-5.2.3/src/ltable.c"
 var $20=$nsize; //@line 339 "lib/lua-5.2.3/src/ltable.c"
 _luaH_resize($17,$18,$19,$20); //@line 339 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 340 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_new($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $t;
 $1=$L;
 var $2=$1; //@line 369 "lib/lua-5.2.3/src/ltable.c"
 var $3=_luaC_newobj($2,5,32,0,0); //@line 369 "lib/lua-5.2.3/src/ltable.c"
 var $4=$3; //@line 369 "lib/lua-5.2.3/src/ltable.c"
 $t=$4; //@line 369 "lib/lua-5.2.3/src/ltable.c"
 var $5=$t; //@line 370 "lib/lua-5.2.3/src/ltable.c"
 var $6=(($5+8)|0); //@line 370 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($6)>>2)]=0; //@line 370 "lib/lua-5.2.3/src/ltable.c"
 var $7=$t; //@line 371 "lib/lua-5.2.3/src/ltable.c"
 var $8=(($7+6)|0); //@line 371 "lib/lua-5.2.3/src/ltable.c"
 HEAP8[($8)]=-1; //@line 371 "lib/lua-5.2.3/src/ltable.c"
 var $9=$t; //@line 372 "lib/lua-5.2.3/src/ltable.c"
 var $10=(($9+12)|0); //@line 372 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($10)>>2)]=0; //@line 372 "lib/lua-5.2.3/src/ltable.c"
 var $11=$t; //@line 373 "lib/lua-5.2.3/src/ltable.c"
 var $12=(($11+28)|0); //@line 373 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($12)>>2)]=0; //@line 373 "lib/lua-5.2.3/src/ltable.c"
 var $13=$1; //@line 374 "lib/lua-5.2.3/src/ltable.c"
 var $14=$t; //@line 374 "lib/lua-5.2.3/src/ltable.c"
 _setnodevector($13,$14,0); //@line 374 "lib/lua-5.2.3/src/ltable.c"
 var $15=$t; //@line 375 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $15; //@line 375 "lib/lua-5.2.3/src/ltable.c"
}


function _luaH_free($L,$t){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$t;
 var $3=$2; //@line 380 "lib/lua-5.2.3/src/ltable.c"
 var $4=(($3+16)|0); //@line 380 "lib/lua-5.2.3/src/ltable.c"
 var $5=HEAP32[(($4)>>2)]; //@line 380 "lib/lua-5.2.3/src/ltable.c"
 var $6=($5|0)==2096; //@line 380 "lib/lua-5.2.3/src/ltable.c"
 if($6){label=3;break;}else{label=2;break;} //@line 380 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $8=$1; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $9=$2; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $10=(($9+16)|0); //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $11=HEAP32[(($10)>>2)]; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $12=$11; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $13=$2; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $14=(($13+7)|0); //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $15=HEAP8[($14)]; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $16=($15&255); //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $17=1<<$16; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $18=($17<<5); //@line 381 "lib/lua-5.2.3/src/ltable.c"
 var $19=_luaM_realloc_($8,$12,$18,0); //@line 381 "lib/lua-5.2.3/src/ltable.c"
 label=3;break; //@line 381 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $21=$1; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $22=$2; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $23=(($22+12)|0); //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $24=HEAP32[(($23)>>2)]; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $25=$24; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $26=$2; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $27=(($26+28)|0); //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $28=HEAP32[(($27)>>2)]; //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $29=($28<<4); //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $30=_luaM_realloc_($21,$25,$29,0); //@line 382 "lib/lua-5.2.3/src/ltable.c"
 var $31=$1; //@line 383 "lib/lua-5.2.3/src/ltable.c"
 var $32=$2; //@line 383 "lib/lua-5.2.3/src/ltable.c"
 var $33=$32; //@line 383 "lib/lua-5.2.3/src/ltable.c"
 var $34=_luaM_realloc_($31,$33,32,0); //@line 383 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 384 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_newkey($L,$t,$key){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $mp;
 var $othern;
 var $n;
 var $io2;
 var $io1;
 $2=$L;
 $3=$t;
 $4=$key;
 var $5=$4; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 var $6=(($5+8)|0); //@line 407 "lib/lua-5.2.3/src/ltable.c"
 var $7=HEAP32[(($6)>>2)]; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 var $8=($7|0)==0; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 if($8){label=2;break;}else{label=3;break;} //@line 407 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $10=$2; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 _luaG_runerror($10,3136,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 407 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $12=$4; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $13=(($12+8)|0); //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $14=HEAP32[(($13)>>2)]; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $15=($14|0)==3; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 if($15){label=4;break;}else{label=6;break;} //@line 408 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $17=$4; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $18=(($17)|0); //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $19=$18; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $20=HEAPF64[(($19)>>3)]; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $21=$4; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $22=(($21)|0); //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $23=$22; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $24=HEAPF64[(($23)>>3)]; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 var $25=$20==$24; //@line 408 "lib/lua-5.2.3/src/ltable.c"
 if($25){label=6;break;}else{label=5;break;} //@line 408 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $27=$2; //@line 409 "lib/lua-5.2.3/src/ltable.c"
 _luaG_runerror($27,12992,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 409 "lib/lua-5.2.3/src/ltable.c"
 throw "Reached an unreachable!"; //@line 409 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 label=7;break;
 case 7: 
 var $30=$3; //@line 410 "lib/lua-5.2.3/src/ltable.c"
 var $31=$4; //@line 410 "lib/lua-5.2.3/src/ltable.c"
 var $32=_mainposition($30,$31); //@line 410 "lib/lua-5.2.3/src/ltable.c"
 $mp=$32; //@line 410 "lib/lua-5.2.3/src/ltable.c"
 var $33=$mp; //@line 411 "lib/lua-5.2.3/src/ltable.c"
 var $34=(($33)|0); //@line 411 "lib/lua-5.2.3/src/ltable.c"
 var $35=(($34+8)|0); //@line 411 "lib/lua-5.2.3/src/ltable.c"
 var $36=HEAP32[(($35)>>2)]; //@line 411 "lib/lua-5.2.3/src/ltable.c"
 var $37=($36|0)==0; //@line 411 "lib/lua-5.2.3/src/ltable.c"
 if($37){label=8;break;}else{label=9;break;} //@line 411 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $39=$mp; //@line 411 "lib/lua-5.2.3/src/ltable.c"
 var $40=($39|0)==2096; //@line 411 "lib/lua-5.2.3/src/ltable.c"
 if($40){label=9;break;}else{label=18;break;} //@line 411 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $42=$3; //@line 413 "lib/lua-5.2.3/src/ltable.c"
 var $43=_getfreepos($42); //@line 413 "lib/lua-5.2.3/src/ltable.c"
 $n=$43; //@line 413 "lib/lua-5.2.3/src/ltable.c"
 var $44=$n; //@line 414 "lib/lua-5.2.3/src/ltable.c"
 var $45=($44|0)==0; //@line 414 "lib/lua-5.2.3/src/ltable.c"
 if($45){label=10;break;}else{label=11;break;} //@line 414 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $47=$2; //@line 415 "lib/lua-5.2.3/src/ltable.c"
 var $48=$3; //@line 415 "lib/lua-5.2.3/src/ltable.c"
 var $49=$4; //@line 415 "lib/lua-5.2.3/src/ltable.c"
 _rehash($47,$48,$49); //@line 415 "lib/lua-5.2.3/src/ltable.c"
 var $50=$2; //@line 417 "lib/lua-5.2.3/src/ltable.c"
 var $51=$3; //@line 417 "lib/lua-5.2.3/src/ltable.c"
 var $52=$4; //@line 417 "lib/lua-5.2.3/src/ltable.c"
 var $53=_luaH_set($50,$51,$52); //@line 417 "lib/lua-5.2.3/src/ltable.c"
 $1=$53; //@line 417 "lib/lua-5.2.3/src/ltable.c"
 label=23;break; //@line 417 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $55=$3; //@line 420 "lib/lua-5.2.3/src/ltable.c"
 var $56=$mp; //@line 420 "lib/lua-5.2.3/src/ltable.c"
 var $57=(($56+16)|0); //@line 420 "lib/lua-5.2.3/src/ltable.c"
 var $58=$57; //@line 420 "lib/lua-5.2.3/src/ltable.c"
 var $59=_mainposition($55,$58); //@line 420 "lib/lua-5.2.3/src/ltable.c"
 $othern=$59; //@line 420 "lib/lua-5.2.3/src/ltable.c"
 var $60=$othern; //@line 421 "lib/lua-5.2.3/src/ltable.c"
 var $61=$mp; //@line 421 "lib/lua-5.2.3/src/ltable.c"
 var $62=($60|0)!=($61|0); //@line 421 "lib/lua-5.2.3/src/ltable.c"
 if($62){label=12;break;}else{label=16;break;} //@line 421 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 label=13;break; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $65=$othern; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $66=(($65+16)|0); //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $67=$66; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $68=(($67+12)|0); //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $69=HEAP32[(($68)>>2)]; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $70=$mp; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $71=($69|0)!=($70|0); //@line 423 "lib/lua-5.2.3/src/ltable.c"
 if($71){label=14;break;}else{label=15;break;} //@line 423 "lib/lua-5.2.3/src/ltable.c"
 case 14: 
 var $73=$othern; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $74=(($73+16)|0); //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $75=$74; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $76=(($75+12)|0); //@line 423 "lib/lua-5.2.3/src/ltable.c"
 var $77=HEAP32[(($76)>>2)]; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 $othern=$77; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 423 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $79=$n; //@line 424 "lib/lua-5.2.3/src/ltable.c"
 var $80=$othern; //@line 424 "lib/lua-5.2.3/src/ltable.c"
 var $81=(($80+16)|0); //@line 424 "lib/lua-5.2.3/src/ltable.c"
 var $82=$81; //@line 424 "lib/lua-5.2.3/src/ltable.c"
 var $83=(($82+12)|0); //@line 424 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($83)>>2)]=$79; //@line 424 "lib/lua-5.2.3/src/ltable.c"
 var $84=$n; //@line 425 "lib/lua-5.2.3/src/ltable.c"
 var $85=$mp; //@line 425 "lib/lua-5.2.3/src/ltable.c"
 var $86=$84; //@line 425 "lib/lua-5.2.3/src/ltable.c"
 var $87=$85; //@line 425 "lib/lua-5.2.3/src/ltable.c"
 assert(32 % 1 === 0);HEAP32[(($86)>>2)]=HEAP32[(($87)>>2)];HEAP32[((($86)+(4))>>2)]=HEAP32[((($87)+(4))>>2)];HEAP32[((($86)+(8))>>2)]=HEAP32[((($87)+(8))>>2)];HEAP32[((($86)+(12))>>2)]=HEAP32[((($87)+(12))>>2)];HEAP32[((($86)+(16))>>2)]=HEAP32[((($87)+(16))>>2)];HEAP32[((($86)+(20))>>2)]=HEAP32[((($87)+(20))>>2)];HEAP32[((($86)+(24))>>2)]=HEAP32[((($87)+(24))>>2)];HEAP32[((($86)+(28))>>2)]=HEAP32[((($87)+(28))>>2)]; //@line 425 "lib/lua-5.2.3/src/ltable.c"
 var $88=$mp; //@line 426 "lib/lua-5.2.3/src/ltable.c"
 var $89=(($88+16)|0); //@line 426 "lib/lua-5.2.3/src/ltable.c"
 var $90=$89; //@line 426 "lib/lua-5.2.3/src/ltable.c"
 var $91=(($90+12)|0); //@line 426 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($91)>>2)]=0; //@line 426 "lib/lua-5.2.3/src/ltable.c"
 var $92=$mp; //@line 427 "lib/lua-5.2.3/src/ltable.c"
 var $93=(($92)|0); //@line 427 "lib/lua-5.2.3/src/ltable.c"
 var $94=(($93+8)|0); //@line 427 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($94)>>2)]=0; //@line 427 "lib/lua-5.2.3/src/ltable.c"
 label=17;break; //@line 428 "lib/lua-5.2.3/src/ltable.c"
 case 16: 
 var $96=$mp; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $97=(($96+16)|0); //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $98=$97; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $99=(($98+12)|0); //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $100=HEAP32[(($99)>>2)]; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $101=$n; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $102=(($101+16)|0); //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $103=$102; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $104=(($103+12)|0); //@line 431 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($104)>>2)]=$100; //@line 431 "lib/lua-5.2.3/src/ltable.c"
 var $105=$n; //@line 432 "lib/lua-5.2.3/src/ltable.c"
 var $106=$mp; //@line 432 "lib/lua-5.2.3/src/ltable.c"
 var $107=(($106+16)|0); //@line 432 "lib/lua-5.2.3/src/ltable.c"
 var $108=$107; //@line 432 "lib/lua-5.2.3/src/ltable.c"
 var $109=(($108+12)|0); //@line 432 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($109)>>2)]=$105; //@line 432 "lib/lua-5.2.3/src/ltable.c"
 var $110=$n; //@line 433 "lib/lua-5.2.3/src/ltable.c"
 $mp=$110; //@line 433 "lib/lua-5.2.3/src/ltable.c"
 label=17;break;
 case 17: 
 label=18;break; //@line 435 "lib/lua-5.2.3/src/ltable.c"
 case 18: 
 var $113=$4; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 $io2=$113; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $114=$mp; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $115=(($114+16)|0); //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $116=$115; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 $io1=$116; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $117=$io1; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $118=(($117)|0); //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $119=$io2; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $120=(($119)|0); //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $121=$118; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $122=$120; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 assert(8 % 1 === 0);HEAP32[(($121)>>2)]=HEAP32[(($122)>>2)];HEAP32[((($121)+(4))>>2)]=HEAP32[((($122)+(4))>>2)]; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $123=$io2; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $124=(($123+8)|0); //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $125=HEAP32[(($124)>>2)]; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $126=$io1; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $127=(($126+8)|0); //@line 436 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($127)>>2)]=$125; //@line 436 "lib/lua-5.2.3/src/ltable.c"
 var $128=$4; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $129=(($128+8)|0); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $130=HEAP32[(($129)>>2)]; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $131=$130&64; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $132=($131|0)!=0; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 if($132){label=19;break;}else{label=22;break;} //@line 437 "lib/lua-5.2.3/src/ltable.c"
 case 19: 
 var $134=$4; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $135=(($134)|0); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $136=$135; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $137=HEAP32[(($136)>>2)]; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $138=$137; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $139=(($138+5)|0); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $140=HEAP8[($139)]; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $141=($140&255); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $142=$141&3; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $143=($142|0)!=0; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 if($143){label=20;break;}else{label=22;break;} //@line 437 "lib/lua-5.2.3/src/ltable.c"
 case 20: 
 var $145=$3; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $146=$145; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $147=$146; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $148=(($147+5)|0); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $149=HEAP8[($148)]; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $150=($149&255); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $151=$150&4; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $152=($151|0)!=0; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 if($152){label=21;break;}else{label=22;break;} //@line 437 "lib/lua-5.2.3/src/ltable.c"
 case 21: 
 var $154=$2; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $155=$3; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 var $156=$155; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 _luaC_barrierback_($154,$156); //@line 437 "lib/lua-5.2.3/src/ltable.c"
 label=22;break; //@line 437 "lib/lua-5.2.3/src/ltable.c"
 case 22: 
 var $158=$mp; //@line 439 "lib/lua-5.2.3/src/ltable.c"
 var $159=(($158)|0); //@line 439 "lib/lua-5.2.3/src/ltable.c"
 $1=$159; //@line 439 "lib/lua-5.2.3/src/ltable.c"
 label=23;break; //@line 439 "lib/lua-5.2.3/src/ltable.c"
 case 23: 
 var $161=$1; //@line 440 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $161; //@line 440 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _mainposition($t,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $s;
 $2=$t;
 $3=$key;
 var $4=$3; //@line 98 "lib/lua-5.2.3/src/ltable.c"
 var $5=(($4+8)|0); //@line 98 "lib/lua-5.2.3/src/ltable.c"
 var $6=HEAP32[(($5)>>2)]; //@line 98 "lib/lua-5.2.3/src/ltable.c"
 var $7=$6&63; //@line 98 "lib/lua-5.2.3/src/ltable.c"
 switch(($7|0)){case 3:{ label=2;break;}case 20:{ label=3;break;}case 4:{ label=6;break;}case 1:{ label=7;break;}case 2:{ label=8;break;}case 22:{ label=9;break;}default:{label=10;break;}}break;
 case 2: 
 var $9=$2; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 var $10=$3; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 var $11=(($10)|0); //@line 100 "lib/lua-5.2.3/src/ltable.c"
 var $12=$11; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 var $13=HEAPF64[(($12)>>3)]; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 var $14=_hashnum($9,$13); //@line 100 "lib/lua-5.2.3/src/ltable.c"
 $1=$14; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 100 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $16=$3; //@line 102 "lib/lua-5.2.3/src/ltable.c"
 var $17=(($16)|0); //@line 102 "lib/lua-5.2.3/src/ltable.c"
 var $18=$17; //@line 102 "lib/lua-5.2.3/src/ltable.c"
 var $19=HEAP32[(($18)>>2)]; //@line 102 "lib/lua-5.2.3/src/ltable.c"
 var $20=$19; //@line 102 "lib/lua-5.2.3/src/ltable.c"
 $s=$20; //@line 102 "lib/lua-5.2.3/src/ltable.c"
 var $21=$s; //@line 103 "lib/lua-5.2.3/src/ltable.c"
 var $22=$21; //@line 103 "lib/lua-5.2.3/src/ltable.c"
 var $23=(($22+6)|0); //@line 103 "lib/lua-5.2.3/src/ltable.c"
 var $24=HEAP8[($23)]; //@line 103 "lib/lua-5.2.3/src/ltable.c"
 var $25=($24&255); //@line 103 "lib/lua-5.2.3/src/ltable.c"
 var $26=($25|0)==0; //@line 103 "lib/lua-5.2.3/src/ltable.c"
 if($26){label=4;break;}else{label=5;break;} //@line 103 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $28=$s; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $29=(($28+16)|0); //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $30=$29; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $31=$s; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $32=$31; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $33=(($32+12)|0); //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $34=HEAP32[(($33)>>2)]; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $35=$s; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $36=$35; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $37=(($36+8)|0); //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $38=HEAP32[(($37)>>2)]; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $39=_luaS_hash($30,$34,$38); //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $40=$s; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $41=$40; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $42=(($41+8)|0); //@line 104 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($42)>>2)]=$39; //@line 104 "lib/lua-5.2.3/src/ltable.c"
 var $43=$s; //@line 105 "lib/lua-5.2.3/src/ltable.c"
 var $44=$43; //@line 105 "lib/lua-5.2.3/src/ltable.c"
 var $45=(($44+6)|0); //@line 105 "lib/lua-5.2.3/src/ltable.c"
 HEAP8[($45)]=1; //@line 105 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 106 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $47=$3; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $48=(($47)|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $49=$48; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $50=HEAP32[(($49)>>2)]; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $51=$50; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $52=$51; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $53=(($52+8)|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $54=HEAP32[(($53)>>2)]; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $55=$2; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $56=(($55+7)|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $57=HEAP8[($56)]; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $58=($57&255); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $59=1<<$58; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $60=((($59)-(1))|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $61=$54&$60; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $62=$2; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $63=(($62+16)|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $64=HEAP32[(($63)>>2)]; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 var $65=(($64+($61<<5))|0); //@line 107 "lib/lua-5.2.3/src/ltable.c"
 $1=$65; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 107 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $67=$3; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $68=(($67)|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $69=$68; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $70=HEAP32[(($69)>>2)]; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $71=$70; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $72=$71; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $73=(($72+8)|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $74=HEAP32[(($73)>>2)]; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $75=$2; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $76=(($75+7)|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $77=HEAP8[($76)]; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $78=($77&255); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $79=1<<$78; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $80=((($79)-(1))|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $81=$74&$80; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $82=$2; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $83=(($82+16)|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $84=HEAP32[(($83)>>2)]; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 var $85=(($84+($81<<5))|0); //@line 110 "lib/lua-5.2.3/src/ltable.c"
 $1=$85; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 110 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $87=$3; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $88=(($87)|0); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $89=$88; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $90=HEAP32[(($89)>>2)]; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $91=$2; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $92=(($91+7)|0); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $93=HEAP8[($92)]; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $94=($93&255); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $95=1<<$94; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $96=((($95)-(1))|0); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $97=$90&$96; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $98=$2; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $99=(($98+16)|0); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $100=HEAP32[(($99)>>2)]; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 var $101=(($100+($97<<5))|0); //@line 112 "lib/lua-5.2.3/src/ltable.c"
 $1=$101; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 112 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $103=$3; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $104=(($103)|0); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $105=$104; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $106=HEAP32[(($105)>>2)]; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $107=$106; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $108=$2; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $109=(($108+7)|0); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $110=HEAP8[($109)]; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $111=($110&255); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $112=1<<$111; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $113=((($112)-(1))|0); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $114=$113|1; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $115=(((($107>>>0))%(($114>>>0)))&-1); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $116=$2; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $117=(($116+16)|0); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $118=HEAP32[(($117)>>2)]; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 var $119=(($118+($115<<5))|0); //@line 114 "lib/lua-5.2.3/src/ltable.c"
 $1=$119; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 114 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $121=$3; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $122=(($121)|0); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $123=$122; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $124=HEAP32[(($123)>>2)]; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $125=$124; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $126=$2; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $127=(($126+7)|0); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $128=HEAP8[($127)]; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $129=($128&255); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $130=1<<$129; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $131=((($130)-(1))|0); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $132=$131|1; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $133=(((($125>>>0))%(($132>>>0)))&-1); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $134=$2; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $135=(($134+16)|0); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $136=HEAP32[(($135)>>2)]; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 var $137=(($136+($133<<5))|0); //@line 116 "lib/lua-5.2.3/src/ltable.c"
 $1=$137; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 116 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $139=$3; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $140=(($139)|0); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $141=$140; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $142=HEAP32[(($141)>>2)]; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $143=$142; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $144=$2; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $145=(($144+7)|0); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $146=HEAP8[($145)]; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $147=($146&255); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $148=1<<$147; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $149=((($148)-(1))|0); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $150=$149|1; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $151=(((($143>>>0))%(($150>>>0)))&-1); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $152=$2; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $153=(($152+16)|0); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $154=HEAP32[(($153)>>2)]; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 var $155=(($154+($151<<5))|0); //@line 118 "lib/lua-5.2.3/src/ltable.c"
 $1=$155; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 118 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $157=$1; //@line 120 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $157; //@line 120 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getfreepos($t){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$t;
 label=2;break; //@line 388 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $4=$2; //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $5=(($4+20)|0); //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $6=HEAP32[(($5)>>2)]; //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $7=$2; //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $8=(($7+16)|0); //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $9=HEAP32[(($8)>>2)]; //@line 388 "lib/lua-5.2.3/src/ltable.c"
 var $10=($6>>>0)>($9>>>0); //@line 388 "lib/lua-5.2.3/src/ltable.c"
 if($10){label=3;break;}else{label=6;break;} //@line 388 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $12=$2; //@line 389 "lib/lua-5.2.3/src/ltable.c"
 var $13=(($12+20)|0); //@line 389 "lib/lua-5.2.3/src/ltable.c"
 var $14=HEAP32[(($13)>>2)]; //@line 389 "lib/lua-5.2.3/src/ltable.c"
 var $15=((($14)-(32))|0); //@line 389 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($13)>>2)]=$15; //@line 389 "lib/lua-5.2.3/src/ltable.c"
 var $16=$2; //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $17=(($16+20)|0); //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $18=HEAP32[(($17)>>2)]; //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($18+16)|0); //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $20=$19; //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $21=(($20+8)|0); //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $22=HEAP32[(($21)>>2)]; //@line 390 "lib/lua-5.2.3/src/ltable.c"
 var $23=($22|0)==0; //@line 390 "lib/lua-5.2.3/src/ltable.c"
 if($23){label=4;break;}else{label=5;break;} //@line 390 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $25=$2; //@line 391 "lib/lua-5.2.3/src/ltable.c"
 var $26=(($25+20)|0); //@line 391 "lib/lua-5.2.3/src/ltable.c"
 var $27=HEAP32[(($26)>>2)]; //@line 391 "lib/lua-5.2.3/src/ltable.c"
 $1=$27; //@line 391 "lib/lua-5.2.3/src/ltable.c"
 label=7;break; //@line 391 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 label=2;break; //@line 392 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 $1=0; //@line 393 "lib/lua-5.2.3/src/ltable.c"
 label=7;break; //@line 393 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $31=$1; //@line 394 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $31; //@line 394 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _rehash($L,$t,$ek){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+136)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $nasize=sp;
 var $na;
 var $nums=(sp)+(8);
 var $i;
 var $totaluse;
 $1=$L;
 $2=$t;
 $3=$ek;
 $i=0; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $5=$i; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 var $6=($5|0)<=30; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 if($6){label=3;break;}else{label=5;break;} //@line 348 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $8=$i; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 var $9=(($nums+($8<<2))|0); //@line 348 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($9)>>2)]=0; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $11=$i; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 var $12=((($11)+(1))|0); //@line 348 "lib/lua-5.2.3/src/ltable.c"
 $i=$12; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 348 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $14=$2; //@line 349 "lib/lua-5.2.3/src/ltable.c"
 var $15=(($nums)|0); //@line 349 "lib/lua-5.2.3/src/ltable.c"
 var $16=_numusearray($14,$15); //@line 349 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($nasize)>>2)]=$16; //@line 349 "lib/lua-5.2.3/src/ltable.c"
 var $17=HEAP32[(($nasize)>>2)]; //@line 350 "lib/lua-5.2.3/src/ltable.c"
 $totaluse=$17; //@line 350 "lib/lua-5.2.3/src/ltable.c"
 var $18=$2; //@line 351 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($nums)|0); //@line 351 "lib/lua-5.2.3/src/ltable.c"
 var $20=_numusehash($18,$19,$nasize); //@line 351 "lib/lua-5.2.3/src/ltable.c"
 var $21=$totaluse; //@line 351 "lib/lua-5.2.3/src/ltable.c"
 var $22=((($21)+($20))|0); //@line 351 "lib/lua-5.2.3/src/ltable.c"
 $totaluse=$22; //@line 351 "lib/lua-5.2.3/src/ltable.c"
 var $23=$3; //@line 353 "lib/lua-5.2.3/src/ltable.c"
 var $24=(($nums)|0); //@line 353 "lib/lua-5.2.3/src/ltable.c"
 var $25=_countint($23,$24); //@line 353 "lib/lua-5.2.3/src/ltable.c"
 var $26=HEAP32[(($nasize)>>2)]; //@line 353 "lib/lua-5.2.3/src/ltable.c"
 var $27=((($26)+($25))|0); //@line 353 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($nasize)>>2)]=$27; //@line 353 "lib/lua-5.2.3/src/ltable.c"
 var $28=$totaluse; //@line 354 "lib/lua-5.2.3/src/ltable.c"
 var $29=((($28)+(1))|0); //@line 354 "lib/lua-5.2.3/src/ltable.c"
 $totaluse=$29; //@line 354 "lib/lua-5.2.3/src/ltable.c"
 var $30=(($nums)|0); //@line 356 "lib/lua-5.2.3/src/ltable.c"
 var $31=_computesizes($30,$nasize); //@line 356 "lib/lua-5.2.3/src/ltable.c"
 $na=$31; //@line 356 "lib/lua-5.2.3/src/ltable.c"
 var $32=$1; //@line 358 "lib/lua-5.2.3/src/ltable.c"
 var $33=$2; //@line 358 "lib/lua-5.2.3/src/ltable.c"
 var $34=HEAP32[(($nasize)>>2)]; //@line 358 "lib/lua-5.2.3/src/ltable.c"
 var $35=$totaluse; //@line 358 "lib/lua-5.2.3/src/ltable.c"
 var $36=$na; //@line 358 "lib/lua-5.2.3/src/ltable.c"
 var $37=((($35)-($36))|0); //@line 358 "lib/lua-5.2.3/src/ltable.c"
 _luaH_resize($32,$33,$34,$37); //@line 358 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return; //@line 359 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_getint($t,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $nk;
 var $n;
 $2=$t;
 $3=$key;
 var $4=$3; //@line 448 "lib/lua-5.2.3/src/ltable.c"
 var $5=((($4)-(1))|0); //@line 448 "lib/lua-5.2.3/src/ltable.c"
 var $6=$2; //@line 448 "lib/lua-5.2.3/src/ltable.c"
 var $7=(($6+28)|0); //@line 448 "lib/lua-5.2.3/src/ltable.c"
 var $8=HEAP32[(($7)>>2)]; //@line 448 "lib/lua-5.2.3/src/ltable.c"
 var $9=($5>>>0)<($8>>>0); //@line 448 "lib/lua-5.2.3/src/ltable.c"
 if($9){label=2;break;}else{label=3;break;} //@line 448 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $11=$3; //@line 449 "lib/lua-5.2.3/src/ltable.c"
 var $12=((($11)-(1))|0); //@line 449 "lib/lua-5.2.3/src/ltable.c"
 var $13=$2; //@line 449 "lib/lua-5.2.3/src/ltable.c"
 var $14=(($13+12)|0); //@line 449 "lib/lua-5.2.3/src/ltable.c"
 var $15=HEAP32[(($14)>>2)]; //@line 449 "lib/lua-5.2.3/src/ltable.c"
 var $16=(($15+($12<<4))|0); //@line 449 "lib/lua-5.2.3/src/ltable.c"
 $1=$16; //@line 449 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 449 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $18=$3; //@line 451 "lib/lua-5.2.3/src/ltable.c"
 var $19=($18|0); //@line 451 "lib/lua-5.2.3/src/ltable.c"
 $nk=$19; //@line 451 "lib/lua-5.2.3/src/ltable.c"
 var $20=$2; //@line 452 "lib/lua-5.2.3/src/ltable.c"
 var $21=$nk; //@line 452 "lib/lua-5.2.3/src/ltable.c"
 var $22=_hashnum($20,$21); //@line 452 "lib/lua-5.2.3/src/ltable.c"
 $n=$22; //@line 452 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 453 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $24=$n; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $25=(($24+16)|0); //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $26=$25; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $27=(($26+8)|0); //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $28=HEAP32[(($27)>>2)]; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $29=($28|0)==3; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 if($29){label=5;break;}else{label=7;break;} //@line 454 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $31=$n; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $32=(($31+16)|0); //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $33=$32; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $34=(($33)|0); //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $35=$34; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $36=HEAPF64[(($35)>>3)]; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $37=$nk; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 var $38=$36==$37; //@line 454 "lib/lua-5.2.3/src/ltable.c"
 if($38){label=6;break;}else{label=7;break;} //@line 454 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $40=$n; //@line 455 "lib/lua-5.2.3/src/ltable.c"
 var $41=(($40)|0); //@line 455 "lib/lua-5.2.3/src/ltable.c"
 $1=$41; //@line 455 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 455 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $43=$n; //@line 456 "lib/lua-5.2.3/src/ltable.c"
 var $44=(($43+16)|0); //@line 456 "lib/lua-5.2.3/src/ltable.c"
 var $45=$44; //@line 456 "lib/lua-5.2.3/src/ltable.c"
 var $46=(($45+12)|0); //@line 456 "lib/lua-5.2.3/src/ltable.c"
 var $47=HEAP32[(($46)>>2)]; //@line 456 "lib/lua-5.2.3/src/ltable.c"
 $n=$47; //@line 456 "lib/lua-5.2.3/src/ltable.c"
 label=8;break;
 case 8: 
 label=9;break; //@line 457 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $50=$n; //@line 457 "lib/lua-5.2.3/src/ltable.c"
 var $51=($50|0)!=0; //@line 457 "lib/lua-5.2.3/src/ltable.c"
 if($51){label=4;break;}else{label=10;break;} //@line 457 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 $1=1376; //@line 458 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 458 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $54=$1; //@line 460 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $54; //@line 460 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _hashnum($t,$n){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $u=sp;
 $1=$t;
 $2=$n;
 var $3=$2; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $4=($3)+(1); //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $5=$u; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 HEAPF64[(($5)>>3)]=$4; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $6=$u; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $7=(($6)|0); //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $8=HEAP32[(($7)>>2)]; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 $i=$8; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $9=$u; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $10=(($9+4)|0); //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $11=HEAP32[(($10)>>2)]; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $12=$i; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $13=((($12)+($11))|0); //@line 82 "lib/lua-5.2.3/src/ltable.c"
 $i=$13; //@line 82 "lib/lua-5.2.3/src/ltable.c"
 var $14=$i; //@line 83 "lib/lua-5.2.3/src/ltable.c"
 var $15=($14|0)<0; //@line 83 "lib/lua-5.2.3/src/ltable.c"
 if($15){label=2;break;}else{label=5;break;} //@line 83 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $17=$i; //@line 84 "lib/lua-5.2.3/src/ltable.c"
 var $18=$i; //@line 84 "lib/lua-5.2.3/src/ltable.c"
 var $19=(((-$18))|0); //@line 84 "lib/lua-5.2.3/src/ltable.c"
 var $20=($17|0)==($19|0); //@line 84 "lib/lua-5.2.3/src/ltable.c"
 if($20){label=3;break;}else{label=4;break;} //@line 84 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 $i=0; //@line 85 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 85 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $23=$i; //@line 86 "lib/lua-5.2.3/src/ltable.c"
 var $24=(((-$23))|0); //@line 86 "lib/lua-5.2.3/src/ltable.c"
 $i=$24; //@line 86 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 87 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $26=$i; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $27=$1; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $28=(($27+7)|0); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $29=HEAP8[($28)]; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $30=($29&255); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $31=1<<$30; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $32=((($31)-(1))|0); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $33=$32|1; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $34=(((($26|0))%(($33|0)))&-1); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $35=$1; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $36=(($35+16)|0); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $37=HEAP32[(($36)>>2)]; //@line 88 "lib/lua-5.2.3/src/ltable.c"
 var $38=(($37+($34<<5))|0); //@line 88 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $38; //@line 88 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_getstr($t,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $n;
 $2=$t;
 $3=$key;
 var $4=$3; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $5=$4; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $6=(($5+8)|0); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $7=HEAP32[(($6)>>2)]; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $8=$2; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $9=(($8+7)|0); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $10=HEAP8[($9)]; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $11=($10&255); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $12=1<<$11; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $13=((($12)-(1))|0); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $14=$7&$13; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $15=$2; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $16=(($15+16)|0); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $17=HEAP32[(($16)>>2)]; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 var $18=(($17+($14<<5))|0); //@line 467 "lib/lua-5.2.3/src/ltable.c"
 $n=$18; //@line 467 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 469 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $20=$n; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $21=(($20+16)|0); //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $22=$21; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $23=(($22+8)|0); //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $24=HEAP32[(($23)>>2)]; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $25=($24|0)==68; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 if($25){label=3;break;}else{label=5;break;} //@line 470 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $27=$n; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $28=(($27+16)|0); //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $29=$28; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $30=(($29)|0); //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $31=$30; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $32=HEAP32[(($31)>>2)]; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $33=$32; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $34=$3; //@line 470 "lib/lua-5.2.3/src/ltable.c"
 var $35=($33|0)==($34|0); //@line 470 "lib/lua-5.2.3/src/ltable.c"
 if($35){label=4;break;}else{label=5;break;} //@line 470 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $37=$n; //@line 471 "lib/lua-5.2.3/src/ltable.c"
 var $38=(($37)|0); //@line 471 "lib/lua-5.2.3/src/ltable.c"
 $1=$38; //@line 471 "lib/lua-5.2.3/src/ltable.c"
 label=9;break; //@line 471 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $40=$n; //@line 472 "lib/lua-5.2.3/src/ltable.c"
 var $41=(($40+16)|0); //@line 472 "lib/lua-5.2.3/src/ltable.c"
 var $42=$41; //@line 472 "lib/lua-5.2.3/src/ltable.c"
 var $43=(($42+12)|0); //@line 472 "lib/lua-5.2.3/src/ltable.c"
 var $44=HEAP32[(($43)>>2)]; //@line 472 "lib/lua-5.2.3/src/ltable.c"
 $n=$44; //@line 472 "lib/lua-5.2.3/src/ltable.c"
 label=6;break;
 case 6: 
 label=7;break; //@line 473 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $47=$n; //@line 473 "lib/lua-5.2.3/src/ltable.c"
 var $48=($47|0)!=0; //@line 473 "lib/lua-5.2.3/src/ltable.c"
 if($48){label=2;break;}else{label=8;break;} //@line 473 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 $1=1376; //@line 474 "lib/lua-5.2.3/src/ltable.c"
 label=9;break; //@line 474 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $51=$1; //@line 475 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $51; //@line 475 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_get($t,$key){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $k;
 var $n;
 var $u=sp;
 var $n1;
 $2=$t;
 $3=$key;
 var $4=$3; //@line 482 "lib/lua-5.2.3/src/ltable.c"
 var $5=(($4+8)|0); //@line 482 "lib/lua-5.2.3/src/ltable.c"
 var $6=HEAP32[(($5)>>2)]; //@line 482 "lib/lua-5.2.3/src/ltable.c"
 var $7=$6&63; //@line 482 "lib/lua-5.2.3/src/ltable.c"
 if(($7|0)==4){ label=2;break;}else if(($7|0)==0){ label=3;break;}else if(($7|0)==3){ label=4;break;}else{label=7;break;}
 case 2: 
 var $9=$2; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $10=$3; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $11=(($10)|0); //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $12=$11; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $13=HEAP32[(($12)>>2)]; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $14=$13; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 var $15=_luaH_getstr($9,$14); //@line 483 "lib/lua-5.2.3/src/ltable.c"
 $1=$15; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 483 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 $1=1376; //@line 484 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 484 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $18=$3; //@line 487 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($18)|0); //@line 487 "lib/lua-5.2.3/src/ltable.c"
 var $20=$19; //@line 487 "lib/lua-5.2.3/src/ltable.c"
 var $21=HEAPF64[(($20)>>3)]; //@line 487 "lib/lua-5.2.3/src/ltable.c"
 $n=$21; //@line 487 "lib/lua-5.2.3/src/ltable.c"
 var $22=$n; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $23=($22)+(6755399441055744); //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $24=$u; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 HEAPF64[(($24)>>3)]=$23; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $25=HEAP32[((1652)>>2)]; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $26=($25|0)==33; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $27=($26&1); //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $28=$u; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $29=(($28+($27<<2))|0); //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $30=HEAP32[(($29)>>2)]; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 $k=$30; //@line 488 "lib/lua-5.2.3/src/ltable.c"
 var $31=$k; //@line 489 "lib/lua-5.2.3/src/ltable.c"
 var $32=($31|0); //@line 489 "lib/lua-5.2.3/src/ltable.c"
 var $33=$n; //@line 489 "lib/lua-5.2.3/src/ltable.c"
 var $34=$32==$33; //@line 489 "lib/lua-5.2.3/src/ltable.c"
 if($34){label=5;break;}else{label=6;break;} //@line 489 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $36=$2; //@line 490 "lib/lua-5.2.3/src/ltable.c"
 var $37=$k; //@line 490 "lib/lua-5.2.3/src/ltable.c"
 var $38=_luaH_getint($36,$37); //@line 490 "lib/lua-5.2.3/src/ltable.c"
 $1=$38; //@line 490 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 490 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 label=7;break; //@line 492 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $41=$2; //@line 494 "lib/lua-5.2.3/src/ltable.c"
 var $42=$3; //@line 494 "lib/lua-5.2.3/src/ltable.c"
 var $43=_mainposition($41,$42); //@line 494 "lib/lua-5.2.3/src/ltable.c"
 $n1=$43; //@line 494 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 495 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $45=$n1; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $46=(($45+16)|0); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $47=$46; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $48=(($47+8)|0); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $49=HEAP32[(($48)>>2)]; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $50=$3; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $51=(($50+8)|0); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $52=HEAP32[(($51)>>2)]; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $53=($49|0)==($52|0); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 if($53){label=9;break;}else{label=11;break;} //@line 496 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $55=$n1; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $56=(($55+16)|0); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $57=$56; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $58=$3; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $59=_luaV_equalobj_(0,$57,$58); //@line 496 "lib/lua-5.2.3/src/ltable.c"
 var $60=($59|0)!=0; //@line 496 "lib/lua-5.2.3/src/ltable.c"
 if($60){label=10;break;}else{label=11;break;} //@line 496 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $62=$n1; //@line 497 "lib/lua-5.2.3/src/ltable.c"
 var $63=(($62)|0); //@line 497 "lib/lua-5.2.3/src/ltable.c"
 $1=$63; //@line 497 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 497 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $65=$n1; //@line 498 "lib/lua-5.2.3/src/ltable.c"
 var $66=(($65+16)|0); //@line 498 "lib/lua-5.2.3/src/ltable.c"
 var $67=$66; //@line 498 "lib/lua-5.2.3/src/ltable.c"
 var $68=(($67+12)|0); //@line 498 "lib/lua-5.2.3/src/ltable.c"
 var $69=HEAP32[(($68)>>2)]; //@line 498 "lib/lua-5.2.3/src/ltable.c"
 $n1=$69; //@line 498 "lib/lua-5.2.3/src/ltable.c"
 label=12;break;
 case 12: 
 label=13;break; //@line 499 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $72=$n1; //@line 499 "lib/lua-5.2.3/src/ltable.c"
 var $73=($72|0)!=0; //@line 499 "lib/lua-5.2.3/src/ltable.c"
 if($73){label=8;break;}else{label=14;break;} //@line 499 "lib/lua-5.2.3/src/ltable.c"
 case 14: 
 $1=1376; //@line 500 "lib/lua-5.2.3/src/ltable.c"
 label=15;break; //@line 500 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $76=$1; //@line 503 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $76; //@line 503 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaH_getn($t){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $j;
 var $i;
 var $m;
 $2=$t;
 var $3=$2; //@line 561 "lib/lua-5.2.3/src/ltable.c"
 var $4=(($3+28)|0); //@line 561 "lib/lua-5.2.3/src/ltable.c"
 var $5=HEAP32[(($4)>>2)]; //@line 561 "lib/lua-5.2.3/src/ltable.c"
 $j=$5; //@line 561 "lib/lua-5.2.3/src/ltable.c"
 var $6=$j; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $7=($6>>>0)>0; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 if($7){label=2;break;}else{label=10;break;} //@line 562 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $9=$j; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $10=((($9)-(1))|0); //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $11=$2; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $12=(($11+12)|0); //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $13=HEAP32[(($12)>>2)]; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $14=(($13+($10<<4))|0); //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $15=(($14+8)|0); //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $16=HEAP32[(($15)>>2)]; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 var $17=($16|0)==0; //@line 562 "lib/lua-5.2.3/src/ltable.c"
 if($17){label=3;break;}else{label=10;break;} //@line 562 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 $i=0; //@line 564 "lib/lua-5.2.3/src/ltable.c"
 label=4;break; //@line 565 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $20=$j; //@line 565 "lib/lua-5.2.3/src/ltable.c"
 var $21=$i; //@line 565 "lib/lua-5.2.3/src/ltable.c"
 var $22=((($20)-($21))|0); //@line 565 "lib/lua-5.2.3/src/ltable.c"
 var $23=($22>>>0)>1; //@line 565 "lib/lua-5.2.3/src/ltable.c"
 if($23){label=5;break;}else{label=9;break;} //@line 565 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $25=$i; //@line 566 "lib/lua-5.2.3/src/ltable.c"
 var $26=$j; //@line 566 "lib/lua-5.2.3/src/ltable.c"
 var $27=((($25)+($26))|0); //@line 566 "lib/lua-5.2.3/src/ltable.c"
 var $28=(((($27>>>0))/(2))&-1); //@line 566 "lib/lua-5.2.3/src/ltable.c"
 $m=$28; //@line 566 "lib/lua-5.2.3/src/ltable.c"
 var $29=$m; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $30=((($29)-(1))|0); //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $31=$2; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $32=(($31+12)|0); //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $33=HEAP32[(($32)>>2)]; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $34=(($33+($30<<4))|0); //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $35=(($34+8)|0); //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $36=HEAP32[(($35)>>2)]; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 var $37=($36|0)==0; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 if($37){label=6;break;}else{label=7;break;} //@line 567 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $39=$m; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 $j=$39; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 567 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $41=$m; //@line 568 "lib/lua-5.2.3/src/ltable.c"
 $i=$41; //@line 568 "lib/lua-5.2.3/src/ltable.c"
 label=8;break;
 case 8: 
 label=4;break; //@line 569 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $44=$i; //@line 570 "lib/lua-5.2.3/src/ltable.c"
 $1=$44; //@line 570 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 570 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $46=$2; //@line 573 "lib/lua-5.2.3/src/ltable.c"
 var $47=(($46+16)|0); //@line 573 "lib/lua-5.2.3/src/ltable.c"
 var $48=HEAP32[(($47)>>2)]; //@line 573 "lib/lua-5.2.3/src/ltable.c"
 var $49=($48|0)==2096; //@line 573 "lib/lua-5.2.3/src/ltable.c"
 if($49){label=11;break;}else{label=12;break;} //@line 573 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $51=$j; //@line 574 "lib/lua-5.2.3/src/ltable.c"
 $1=$51; //@line 574 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 574 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $53=$2; //@line 575 "lib/lua-5.2.3/src/ltable.c"
 var $54=$j; //@line 575 "lib/lua-5.2.3/src/ltable.c"
 var $55=_unbound_search($53,$54); //@line 575 "lib/lua-5.2.3/src/ltable.c"
 $1=$55; //@line 575 "lib/lua-5.2.3/src/ltable.c"
 label=13;break; //@line 575 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $57=$1; //@line 576 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $57; //@line 576 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _unbound_search($t,$j){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $m;
 $2=$t;
 $3=$j;
 var $4=$3; //@line 533 "lib/lua-5.2.3/src/ltable.c"
 $i=$4; //@line 533 "lib/lua-5.2.3/src/ltable.c"
 var $5=$3; //@line 534 "lib/lua-5.2.3/src/ltable.c"
 var $6=((($5)+(1))|0); //@line 534 "lib/lua-5.2.3/src/ltable.c"
 $3=$6; //@line 534 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $8=$2; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $9=$3; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $10=_luaH_getint($8,$9); //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $11=(($10+8)|0); //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $12=HEAP32[(($11)>>2)]; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $13=($12|0)==0; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 var $14=$13^1; //@line 536 "lib/lua-5.2.3/src/ltable.c"
 if($14){label=3;break;}else{label=9;break;} //@line 536 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $16=$3; //@line 537 "lib/lua-5.2.3/src/ltable.c"
 $i=$16; //@line 537 "lib/lua-5.2.3/src/ltable.c"
 var $17=$3; //@line 538 "lib/lua-5.2.3/src/ltable.c"
 var $18=($17<<1); //@line 538 "lib/lua-5.2.3/src/ltable.c"
 $3=$18; //@line 538 "lib/lua-5.2.3/src/ltable.c"
 var $19=$3; //@line 539 "lib/lua-5.2.3/src/ltable.c"
 var $20=($19>>>0)>2147483645; //@line 539 "lib/lua-5.2.3/src/ltable.c"
 if($20){label=4;break;}else{label=8;break;} //@line 539 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 $i=1; //@line 541 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $23=$2; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $24=$i; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $25=_luaH_getint($23,$24); //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $26=(($25+8)|0); //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $27=HEAP32[(($26)>>2)]; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $28=($27|0)==0; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $29=$28^1; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 if($29){label=6;break;}else{label=7;break;} //@line 542 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $31=$i; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 var $32=((($31)+(1))|0); //@line 542 "lib/lua-5.2.3/src/ltable.c"
 $i=$32; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 542 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $34=$i; //@line 543 "lib/lua-5.2.3/src/ltable.c"
 var $35=((($34)-(1))|0); //@line 543 "lib/lua-5.2.3/src/ltable.c"
 $1=$35; //@line 543 "lib/lua-5.2.3/src/ltable.c"
 label=16;break; //@line 543 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 label=2;break; //@line 545 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 label=10;break; //@line 547 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $39=$3; //@line 547 "lib/lua-5.2.3/src/ltable.c"
 var $40=$i; //@line 547 "lib/lua-5.2.3/src/ltable.c"
 var $41=((($39)-($40))|0); //@line 547 "lib/lua-5.2.3/src/ltable.c"
 var $42=($41>>>0)>1; //@line 547 "lib/lua-5.2.3/src/ltable.c"
 if($42){label=11;break;}else{label=15;break;} //@line 547 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $44=$i; //@line 548 "lib/lua-5.2.3/src/ltable.c"
 var $45=$3; //@line 548 "lib/lua-5.2.3/src/ltable.c"
 var $46=((($44)+($45))|0); //@line 548 "lib/lua-5.2.3/src/ltable.c"
 var $47=(((($46>>>0))/(2))&-1); //@line 548 "lib/lua-5.2.3/src/ltable.c"
 $m=$47; //@line 548 "lib/lua-5.2.3/src/ltable.c"
 var $48=$2; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 var $49=$m; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 var $50=_luaH_getint($48,$49); //@line 549 "lib/lua-5.2.3/src/ltable.c"
 var $51=(($50+8)|0); //@line 549 "lib/lua-5.2.3/src/ltable.c"
 var $52=HEAP32[(($51)>>2)]; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 var $53=($52|0)==0; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 if($53){label=12;break;}else{label=13;break;} //@line 549 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $55=$m; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 $3=$55; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 549 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $57=$m; //@line 550 "lib/lua-5.2.3/src/ltable.c"
 $i=$57; //@line 550 "lib/lua-5.2.3/src/ltable.c"
 label=14;break;
 case 14: 
 label=10;break; //@line 551 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $60=$i; //@line 552 "lib/lua-5.2.3/src/ltable.c"
 $1=$60; //@line 552 "lib/lua-5.2.3/src/ltable.c"
 label=16;break; //@line 552 "lib/lua-5.2.3/src/ltable.c"
 case 16: 
 var $62=$1; //@line 553 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $62; //@line 553 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _numusearray($t,$nums){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $lg;
 var $ttlg;
 var $ause;
 var $i;
 var $lc;
 var $lim;
 $1=$t;
 $2=$nums;
 $ause=0; //@line 232 "lib/lua-5.2.3/src/ltable.c"
 $i=1; //@line 233 "lib/lua-5.2.3/src/ltable.c"
 $lg=0; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 $ttlg=1; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $4=$lg; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 var $5=($4|0)<=30; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 if($5){label=3;break;}else{label=15;break;} //@line 234 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 $lc=0; //@line 235 "lib/lua-5.2.3/src/ltable.c"
 var $7=$ttlg; //@line 236 "lib/lua-5.2.3/src/ltable.c"
 $lim=$7; //@line 236 "lib/lua-5.2.3/src/ltable.c"
 var $8=$lim; //@line 237 "lib/lua-5.2.3/src/ltable.c"
 var $9=$1; //@line 237 "lib/lua-5.2.3/src/ltable.c"
 var $10=(($9+28)|0); //@line 237 "lib/lua-5.2.3/src/ltable.c"
 var $11=HEAP32[(($10)>>2)]; //@line 237 "lib/lua-5.2.3/src/ltable.c"
 var $12=($8|0)>($11|0); //@line 237 "lib/lua-5.2.3/src/ltable.c"
 if($12){label=4;break;}else{label=7;break;} //@line 237 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $14=$1; //@line 238 "lib/lua-5.2.3/src/ltable.c"
 var $15=(($14+28)|0); //@line 238 "lib/lua-5.2.3/src/ltable.c"
 var $16=HEAP32[(($15)>>2)]; //@line 238 "lib/lua-5.2.3/src/ltable.c"
 $lim=$16; //@line 238 "lib/lua-5.2.3/src/ltable.c"
 var $17=$i; //@line 239 "lib/lua-5.2.3/src/ltable.c"
 var $18=$lim; //@line 239 "lib/lua-5.2.3/src/ltable.c"
 var $19=($17|0)>($18|0); //@line 239 "lib/lua-5.2.3/src/ltable.c"
 if($19){label=5;break;}else{label=6;break;} //@line 239 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 label=15;break; //@line 240 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 label=7;break; //@line 241 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 label=8;break; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 var $24=$i; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 var $25=$lim; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 var $26=($24|0)<=($25|0); //@line 243 "lib/lua-5.2.3/src/ltable.c"
 if($26){label=9;break;}else{label=13;break;} //@line 243 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 var $28=$i; //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $29=((($28)-(1))|0); //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $30=$1; //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $31=(($30+12)|0); //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $32=HEAP32[(($31)>>2)]; //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $33=(($32+($29<<4))|0); //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $34=(($33+8)|0); //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $35=HEAP32[(($34)>>2)]; //@line 244 "lib/lua-5.2.3/src/ltable.c"
 var $36=($35|0)==0; //@line 244 "lib/lua-5.2.3/src/ltable.c"
 if($36){label=11;break;}else{label=10;break;} //@line 244 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $38=$lc; //@line 245 "lib/lua-5.2.3/src/ltable.c"
 var $39=((($38)+(1))|0); //@line 245 "lib/lua-5.2.3/src/ltable.c"
 $lc=$39; //@line 245 "lib/lua-5.2.3/src/ltable.c"
 label=11;break; //@line 245 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 label=12;break; //@line 246 "lib/lua-5.2.3/src/ltable.c"
 case 12: 
 var $42=$i; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 var $43=((($42)+(1))|0); //@line 243 "lib/lua-5.2.3/src/ltable.c"
 $i=$43; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 label=8;break; //@line 243 "lib/lua-5.2.3/src/ltable.c"
 case 13: 
 var $45=$lc; //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $46=$lg; //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $47=$2; //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $48=(($47+($46<<2))|0); //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $49=HEAP32[(($48)>>2)]; //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $50=((($49)+($45))|0); //@line 247 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($48)>>2)]=$50; //@line 247 "lib/lua-5.2.3/src/ltable.c"
 var $51=$lc; //@line 248 "lib/lua-5.2.3/src/ltable.c"
 var $52=$ause; //@line 248 "lib/lua-5.2.3/src/ltable.c"
 var $53=((($52)+($51))|0); //@line 248 "lib/lua-5.2.3/src/ltable.c"
 $ause=$53; //@line 248 "lib/lua-5.2.3/src/ltable.c"
 label=14;break; //@line 249 "lib/lua-5.2.3/src/ltable.c"
 case 14: 
 var $55=$lg; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 var $56=((($55)+(1))|0); //@line 234 "lib/lua-5.2.3/src/ltable.c"
 $lg=$56; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 var $57=$ttlg; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 var $58=($57<<1); //@line 234 "lib/lua-5.2.3/src/ltable.c"
 $ttlg=$58; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 234 "lib/lua-5.2.3/src/ltable.c"
 case 15: 
 var $60=$ause; //@line 250 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $60; //@line 250 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _numusehash($t,$nums,$pnasize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $totaluse;
 var $ause;
 var $i;
 var $n;
 $1=$t;
 $2=$nums;
 $3=$pnasize;
 $totaluse=0; //@line 255 "lib/lua-5.2.3/src/ltable.c"
 $ause=0; //@line 256 "lib/lua-5.2.3/src/ltable.c"
 var $4=$1; //@line 257 "lib/lua-5.2.3/src/ltable.c"
 var $5=(($4+7)|0); //@line 257 "lib/lua-5.2.3/src/ltable.c"
 var $6=HEAP8[($5)]; //@line 257 "lib/lua-5.2.3/src/ltable.c"
 var $7=($6&255); //@line 257 "lib/lua-5.2.3/src/ltable.c"
 var $8=1<<$7; //@line 257 "lib/lua-5.2.3/src/ltable.c"
 $i=$8; //@line 257 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 258 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $10=$i; //@line 258 "lib/lua-5.2.3/src/ltable.c"
 var $11=((($10)-(1))|0); //@line 258 "lib/lua-5.2.3/src/ltable.c"
 $i=$11; //@line 258 "lib/lua-5.2.3/src/ltable.c"
 var $12=($10|0)!=0; //@line 258 "lib/lua-5.2.3/src/ltable.c"
 if($12){label=3;break;}else{label=6;break;} //@line 258 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $14=$i; //@line 259 "lib/lua-5.2.3/src/ltable.c"
 var $15=$1; //@line 259 "lib/lua-5.2.3/src/ltable.c"
 var $16=(($15+16)|0); //@line 259 "lib/lua-5.2.3/src/ltable.c"
 var $17=HEAP32[(($16)>>2)]; //@line 259 "lib/lua-5.2.3/src/ltable.c"
 var $18=(($17+($14<<5))|0); //@line 259 "lib/lua-5.2.3/src/ltable.c"
 $n=$18; //@line 259 "lib/lua-5.2.3/src/ltable.c"
 var $19=$n; //@line 260 "lib/lua-5.2.3/src/ltable.c"
 var $20=(($19)|0); //@line 260 "lib/lua-5.2.3/src/ltable.c"
 var $21=(($20+8)|0); //@line 260 "lib/lua-5.2.3/src/ltable.c"
 var $22=HEAP32[(($21)>>2)]; //@line 260 "lib/lua-5.2.3/src/ltable.c"
 var $23=($22|0)==0; //@line 260 "lib/lua-5.2.3/src/ltable.c"
 if($23){label=5;break;}else{label=4;break;} //@line 260 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $25=$n; //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $26=(($25+16)|0); //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $27=$26; //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $28=$2; //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $29=_countint($27,$28); //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $30=$ause; //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $31=((($30)+($29))|0); //@line 261 "lib/lua-5.2.3/src/ltable.c"
 $ause=$31; //@line 261 "lib/lua-5.2.3/src/ltable.c"
 var $32=$totaluse; //@line 262 "lib/lua-5.2.3/src/ltable.c"
 var $33=((($32)+(1))|0); //@line 262 "lib/lua-5.2.3/src/ltable.c"
 $totaluse=$33; //@line 262 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 263 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 label=2;break; //@line 264 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $36=$ause; //@line 265 "lib/lua-5.2.3/src/ltable.c"
 var $37=$3; //@line 265 "lib/lua-5.2.3/src/ltable.c"
 var $38=HEAP32[(($37)>>2)]; //@line 265 "lib/lua-5.2.3/src/ltable.c"
 var $39=((($38)+($36))|0); //@line 265 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($37)>>2)]=$39; //@line 265 "lib/lua-5.2.3/src/ltable.c"
 var $40=$totaluse; //@line 266 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $40; //@line 266 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _countint($key,$nums){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $k;
 $2=$key;
 $3=$nums;
 var $4=$2; //@line 219 "lib/lua-5.2.3/src/ltable.c"
 var $5=_arrayindex($4); //@line 219 "lib/lua-5.2.3/src/ltable.c"
 $k=$5; //@line 219 "lib/lua-5.2.3/src/ltable.c"
 var $6=$k; //@line 220 "lib/lua-5.2.3/src/ltable.c"
 var $7=0<($6|0); //@line 220 "lib/lua-5.2.3/src/ltable.c"
 if($7){label=2;break;}else{label=4;break;} //@line 220 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $9=$k; //@line 220 "lib/lua-5.2.3/src/ltable.c"
 var $10=($9|0)<=1073741824; //@line 220 "lib/lua-5.2.3/src/ltable.c"
 if($10){label=3;break;}else{label=4;break;} //@line 220 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $12=$k; //@line 221 "lib/lua-5.2.3/src/ltable.c"
 var $13=_luaO_ceillog2($12); //@line 221 "lib/lua-5.2.3/src/ltable.c"
 var $14=$3; //@line 221 "lib/lua-5.2.3/src/ltable.c"
 var $15=(($14+($13<<2))|0); //@line 221 "lib/lua-5.2.3/src/ltable.c"
 var $16=HEAP32[(($15)>>2)]; //@line 221 "lib/lua-5.2.3/src/ltable.c"
 var $17=((($16)+(1))|0); //@line 221 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($15)>>2)]=$17; //@line 221 "lib/lua-5.2.3/src/ltable.c"
 $1=1; //@line 222 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 222 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 $1=0; //@line 225 "lib/lua-5.2.3/src/ltable.c"
 label=5;break; //@line 225 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $20=$1; //@line 226 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $20; //@line 226 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _computesizes($nums,$narray){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $twotoi;
 var $a;
 var $na;
 var $n;
 $1=$nums;
 $2=$narray;
 $a=0; //@line 199 "lib/lua-5.2.3/src/ltable.c"
 $na=0; //@line 200 "lib/lua-5.2.3/src/ltable.c"
 $n=0; //@line 201 "lib/lua-5.2.3/src/ltable.c"
 $i=0; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 $twotoi=1; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $4=$twotoi; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $5=(((($4|0))/(2))&-1); //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $6=$2; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $7=HEAP32[(($6)>>2)]; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $8=($5|0)<($7|0); //@line 202 "lib/lua-5.2.3/src/ltable.c"
 if($8){label=3;break;}else{label=11;break;} //@line 202 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $10=$i; //@line 203 "lib/lua-5.2.3/src/ltable.c"
 var $11=$1; //@line 203 "lib/lua-5.2.3/src/ltable.c"
 var $12=(($11+($10<<2))|0); //@line 203 "lib/lua-5.2.3/src/ltable.c"
 var $13=HEAP32[(($12)>>2)]; //@line 203 "lib/lua-5.2.3/src/ltable.c"
 var $14=($13|0)>0; //@line 203 "lib/lua-5.2.3/src/ltable.c"
 if($14){label=4;break;}else{label=7;break;} //@line 203 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 var $16=$i; //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $17=$1; //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $18=(($17+($16<<2))|0); //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $19=HEAP32[(($18)>>2)]; //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $20=$a; //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $21=((($20)+($19))|0); //@line 204 "lib/lua-5.2.3/src/ltable.c"
 $a=$21; //@line 204 "lib/lua-5.2.3/src/ltable.c"
 var $22=$a; //@line 205 "lib/lua-5.2.3/src/ltable.c"
 var $23=$twotoi; //@line 205 "lib/lua-5.2.3/src/ltable.c"
 var $24=(((($23|0))/(2))&-1); //@line 205 "lib/lua-5.2.3/src/ltable.c"
 var $25=($22|0)>($24|0); //@line 205 "lib/lua-5.2.3/src/ltable.c"
 if($25){label=5;break;}else{label=6;break;} //@line 205 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 var $27=$twotoi; //@line 206 "lib/lua-5.2.3/src/ltable.c"
 $n=$27; //@line 206 "lib/lua-5.2.3/src/ltable.c"
 var $28=$a; //@line 207 "lib/lua-5.2.3/src/ltable.c"
 $na=$28; //@line 207 "lib/lua-5.2.3/src/ltable.c"
 label=6;break; //@line 208 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 label=7;break; //@line 209 "lib/lua-5.2.3/src/ltable.c"
 case 7: 
 var $31=$a; //@line 210 "lib/lua-5.2.3/src/ltable.c"
 var $32=$2; //@line 210 "lib/lua-5.2.3/src/ltable.c"
 var $33=HEAP32[(($32)>>2)]; //@line 210 "lib/lua-5.2.3/src/ltable.c"
 var $34=($31|0)==($33|0); //@line 210 "lib/lua-5.2.3/src/ltable.c"
 if($34){label=8;break;}else{label=9;break;} //@line 210 "lib/lua-5.2.3/src/ltable.c"
 case 8: 
 label=11;break; //@line 210 "lib/lua-5.2.3/src/ltable.c"
 case 9: 
 label=10;break; //@line 211 "lib/lua-5.2.3/src/ltable.c"
 case 10: 
 var $38=$i; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $39=((($38)+(1))|0); //@line 202 "lib/lua-5.2.3/src/ltable.c"
 $i=$39; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $40=$twotoi; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 var $41=($40<<1); //@line 202 "lib/lua-5.2.3/src/ltable.c"
 $twotoi=$41; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 label=2;break; //@line 202 "lib/lua-5.2.3/src/ltable.c"
 case 11: 
 var $43=$n; //@line 212 "lib/lua-5.2.3/src/ltable.c"
 var $44=$2; //@line 212 "lib/lua-5.2.3/src/ltable.c"
 HEAP32[(($44)>>2)]=$43; //@line 212 "lib/lua-5.2.3/src/ltable.c"
 var $45=$na; //@line 214 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $45; //@line 214 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _arrayindex($key){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 var $k;
 var $u=sp;
 $2=$key;
 var $3=$2; //@line 128 "lib/lua-5.2.3/src/ltable.c"
 var $4=(($3+8)|0); //@line 128 "lib/lua-5.2.3/src/ltable.c"
 var $5=HEAP32[(($4)>>2)]; //@line 128 "lib/lua-5.2.3/src/ltable.c"
 var $6=($5|0)==3; //@line 128 "lib/lua-5.2.3/src/ltable.c"
 if($6){label=2;break;}else{label=5;break;} //@line 128 "lib/lua-5.2.3/src/ltable.c"
 case 2: 
 var $8=$2; //@line 129 "lib/lua-5.2.3/src/ltable.c"
 var $9=(($8)|0); //@line 129 "lib/lua-5.2.3/src/ltable.c"
 var $10=$9; //@line 129 "lib/lua-5.2.3/src/ltable.c"
 var $11=HEAPF64[(($10)>>3)]; //@line 129 "lib/lua-5.2.3/src/ltable.c"
 $n=$11; //@line 129 "lib/lua-5.2.3/src/ltable.c"
 var $12=$n; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $13=($12)+(6755399441055744); //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $14=$u; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 HEAPF64[(($14)>>3)]=$13; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $15=HEAP32[((2476)>>2)]; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $16=($15|0)==33; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $17=($16&1); //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $18=$u; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $19=(($18+($17<<2))|0); //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $20=HEAP32[(($19)>>2)]; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 $k=$20; //@line 131 "lib/lua-5.2.3/src/ltable.c"
 var $21=$k; //@line 132 "lib/lua-5.2.3/src/ltable.c"
 var $22=($21|0); //@line 132 "lib/lua-5.2.3/src/ltable.c"
 var $23=$n; //@line 132 "lib/lua-5.2.3/src/ltable.c"
 var $24=$22==$23; //@line 132 "lib/lua-5.2.3/src/ltable.c"
 if($24){label=3;break;}else{label=4;break;} //@line 132 "lib/lua-5.2.3/src/ltable.c"
 case 3: 
 var $26=$k; //@line 133 "lib/lua-5.2.3/src/ltable.c"
 $1=$26; //@line 133 "lib/lua-5.2.3/src/ltable.c"
 label=6;break; //@line 133 "lib/lua-5.2.3/src/ltable.c"
 case 4: 
 label=5;break; //@line 134 "lib/lua-5.2.3/src/ltable.c"
 case 5: 
 $1=-1; //@line 135 "lib/lua-5.2.3/src/ltable.c"
 label=6;break; //@line 135 "lib/lua-5.2.3/src/ltable.c"
 case 6: 
 var $30=$1; //@line 136 "lib/lua-5.2.3/src/ltable.c"
 STACKTOP=sp;return $30; //@line 136 "lib/lua-5.2.3/src/ltable.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaU_undump($L,$Z,$buff,$name){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $S=sp;
 var $cl;
 var $io;
 var $p;
 var $io1;
 $1=$L;
 $2=$Z;
 $3=$buff;
 $4=$name;
 var $5=$4; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $6=HEAP8[($5)]; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $7=(($6<<24)>>24); //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $8=($7|0)==64; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 if($8){label=3;break;}else{label=2;break;} //@line 210 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $10=$4; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $11=HEAP8[($10)]; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $12=(($11<<24)>>24); //@line 210 "lib/lua-5.2.3/src/lundump.c"
 var $13=($12|0)==61; //@line 210 "lib/lua-5.2.3/src/lundump.c"
 if($13){label=3;break;}else{label=4;break;} //@line 210 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $15=$4; //@line 211 "lib/lua-5.2.3/src/lundump.c"
 var $16=(($15+1)|0); //@line 211 "lib/lua-5.2.3/src/lundump.c"
 var $17=(($S+12)|0); //@line 211 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($17)>>2)]=$16; //@line 211 "lib/lua-5.2.3/src/lundump.c"
 label=8;break; //@line 211 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $19=$4; //@line 212 "lib/lua-5.2.3/src/lundump.c"
 var $20=HEAP8[($19)]; //@line 212 "lib/lua-5.2.3/src/lundump.c"
 var $21=(($20<<24)>>24); //@line 212 "lib/lua-5.2.3/src/lundump.c"
 var $22=HEAP8[(3008)]; //@line 212 "lib/lua-5.2.3/src/lundump.c"
 var $23=(($22<<24)>>24); //@line 212 "lib/lua-5.2.3/src/lundump.c"
 var $24=($21|0)==($23|0); //@line 212 "lib/lua-5.2.3/src/lundump.c"
 if($24){label=5;break;}else{label=6;break;} //@line 212 "lib/lua-5.2.3/src/lundump.c"
 case 5: 
 var $26=(($S+12)|0); //@line 213 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($26)>>2)]=12952; //@line 213 "lib/lua-5.2.3/src/lundump.c"
 label=7;break; //@line 213 "lib/lua-5.2.3/src/lundump.c"
 case 6: 
 var $28=$4; //@line 215 "lib/lua-5.2.3/src/lundump.c"
 var $29=(($S+12)|0); //@line 215 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($29)>>2)]=$28; //@line 215 "lib/lua-5.2.3/src/lundump.c"
 label=7;break;
 case 7: 
 label=8;break;
 case 8: 
 var $32=$1; //@line 216 "lib/lua-5.2.3/src/lundump.c"
 var $33=(($S)|0); //@line 216 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($33)>>2)]=$32; //@line 216 "lib/lua-5.2.3/src/lundump.c"
 var $34=$2; //@line 217 "lib/lua-5.2.3/src/lundump.c"
 var $35=(($S+4)|0); //@line 217 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($35)>>2)]=$34; //@line 217 "lib/lua-5.2.3/src/lundump.c"
 var $36=$3; //@line 218 "lib/lua-5.2.3/src/lundump.c"
 var $37=(($S+8)|0); //@line 218 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($37)>>2)]=$36; //@line 218 "lib/lua-5.2.3/src/lundump.c"
 _LoadHeader($S); //@line 219 "lib/lua-5.2.3/src/lundump.c"
 var $38=$1; //@line 220 "lib/lua-5.2.3/src/lundump.c"
 var $39=_luaF_newLclosure($38,1); //@line 220 "lib/lua-5.2.3/src/lundump.c"
 $cl=$39; //@line 220 "lib/lua-5.2.3/src/lundump.c"
 var $40=$1; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $41=(($40+8)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $42=HEAP32[(($41)>>2)]; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 $io=$42; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $43=$cl; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $44=$43; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $45=$io; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $46=(($45)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $47=$46; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($47)>>2)]=$44; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $48=$io; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $49=(($48+8)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($49)>>2)]=70; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $50=$1; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $51=(($50+8)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $52=HEAP32[(($51)>>2)]; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $53=(($52+16)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($51)>>2)]=$53; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $54=$1; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $55=(($54+24)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $56=HEAP32[(($55)>>2)]; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $57=$1; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $58=(($57+8)|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $59=HEAP32[(($58)>>2)]; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $60=$56; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $61=$59; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $62=((($60)-($61))|0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $63=(((($62|0))/(16))&-1); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 var $64=($63|0)<=0; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 if($64){label=9;break;}else{label=10;break;} //@line 221 "lib/lua-5.2.3/src/lundump.c"
 case 9: 
 var $66=$1; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 _luaD_growstack($66,0); //@line 221 "lib/lua-5.2.3/src/lundump.c"
 label=11;break; //@line 221 "lib/lua-5.2.3/src/lundump.c"
 case 10: 
 label=11;break;
 case 11: 
 var $69=$1; //@line 222 "lib/lua-5.2.3/src/lundump.c"
 var $70=_luaF_newproto($69); //@line 222 "lib/lua-5.2.3/src/lundump.c"
 var $71=$cl; //@line 222 "lib/lua-5.2.3/src/lundump.c"
 var $72=$71; //@line 222 "lib/lua-5.2.3/src/lundump.c"
 var $73=(($72+12)|0); //@line 222 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($73)>>2)]=$70; //@line 222 "lib/lua-5.2.3/src/lundump.c"
 var $74=$cl; //@line 223 "lib/lua-5.2.3/src/lundump.c"
 var $75=$74; //@line 223 "lib/lua-5.2.3/src/lundump.c"
 var $76=(($75+12)|0); //@line 223 "lib/lua-5.2.3/src/lundump.c"
 var $77=HEAP32[(($76)>>2)]; //@line 223 "lib/lua-5.2.3/src/lundump.c"
 _LoadFunction($S,$77); //@line 223 "lib/lua-5.2.3/src/lundump.c"
 var $78=$cl; //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $79=$78; //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $80=(($79+12)|0); //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $81=HEAP32[(($80)>>2)]; //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $82=(($81+40)|0); //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $83=HEAP32[(($82)>>2)]; //@line 224 "lib/lua-5.2.3/src/lundump.c"
 var $84=($83|0)!=1; //@line 224 "lib/lua-5.2.3/src/lundump.c"
 if($84){label=12;break;}else{label=13;break;} //@line 224 "lib/lua-5.2.3/src/lundump.c"
 case 12: 
 var $86=$cl; //@line 226 "lib/lua-5.2.3/src/lundump.c"
 var $87=$86; //@line 226 "lib/lua-5.2.3/src/lundump.c"
 var $88=(($87+12)|0); //@line 226 "lib/lua-5.2.3/src/lundump.c"
 var $89=HEAP32[(($88)>>2)]; //@line 226 "lib/lua-5.2.3/src/lundump.c"
 $p=$89; //@line 226 "lib/lua-5.2.3/src/lundump.c"
 var $90=$1; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $91=$cl; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $92=$91; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $93=(($92+12)|0); //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $94=HEAP32[(($93)>>2)]; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $95=(($94+40)|0); //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $96=HEAP32[(($95)>>2)]; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $97=_luaF_newLclosure($90,$96); //@line 227 "lib/lua-5.2.3/src/lundump.c"
 $cl=$97; //@line 227 "lib/lua-5.2.3/src/lundump.c"
 var $98=$p; //@line 228 "lib/lua-5.2.3/src/lundump.c"
 var $99=$cl; //@line 228 "lib/lua-5.2.3/src/lundump.c"
 var $100=$99; //@line 228 "lib/lua-5.2.3/src/lundump.c"
 var $101=(($100+12)|0); //@line 228 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($101)>>2)]=$98; //@line 228 "lib/lua-5.2.3/src/lundump.c"
 var $102=$1; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $103=(($102+8)|0); //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $104=HEAP32[(($103)>>2)]; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $105=((($104)-(16))|0); //@line 229 "lib/lua-5.2.3/src/lundump.c"
 $io1=$105; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $106=$cl; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $107=$106; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $108=$io1; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $109=(($108)|0); //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $110=$109; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($110)>>2)]=$107; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $111=$io1; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 var $112=(($111+8)|0); //@line 229 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($112)>>2)]=70; //@line 229 "lib/lua-5.2.3/src/lundump.c"
 label=13;break; //@line 230 "lib/lua-5.2.3/src/lundump.c"
 case 13: 
 var $114=$cl; //@line 232 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return $114; //@line 232 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadHeader($S){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $h=sp;
 var $s=(sp)+(24);
 $1=$S;
 var $2=(($h)|0); //@line 194 "lib/lua-5.2.3/src/lundump.c"
 _luaU_header($2); //@line 194 "lib/lua-5.2.3/src/lundump.c"
 var $3=$s; //@line 195 "lib/lua-5.2.3/src/lundump.c"
 var $4=$h; //@line 195 "lib/lua-5.2.3/src/lundump.c"
 assert(1 % 1 === 0);HEAP8[($3)]=HEAP8[($4)]; //@line 195 "lib/lua-5.2.3/src/lundump.c"
 var $5=$1; //@line 196 "lib/lua-5.2.3/src/lundump.c"
 var $6=(($s)|0); //@line 196 "lib/lua-5.2.3/src/lundump.c"
 var $7=(($6+1)|0); //@line 196 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($5,$7,17); //@line 196 "lib/lua-5.2.3/src/lundump.c"
 var $8=(($h)|0); //@line 197 "lib/lua-5.2.3/src/lundump.c"
 var $9=(($s)|0); //@line 197 "lib/lua-5.2.3/src/lundump.c"
 var $10=_memcmp($8,$9,18); //@line 197 "lib/lua-5.2.3/src/lundump.c"
 var $11=($10|0)==0; //@line 197 "lib/lua-5.2.3/src/lundump.c"
 if($11){label=2;break;}else{label=3;break;} //@line 197 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 STACKTOP=sp;return; //@line 197 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $14=(($h)|0); //@line 198 "lib/lua-5.2.3/src/lundump.c"
 var $15=(($s)|0); //@line 198 "lib/lua-5.2.3/src/lundump.c"
 var $16=_memcmp($14,$15,4); //@line 198 "lib/lua-5.2.3/src/lundump.c"
 var $17=($16|0)!=0; //@line 198 "lib/lua-5.2.3/src/lundump.c"
 if($17){label=4;break;}else{label=5;break;} //@line 198 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $19=$1; //@line 198 "lib/lua-5.2.3/src/lundump.c"
 _error($19,2984); //@line 198 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 198 "lib/lua-5.2.3/src/lundump.c"
 case 5: 
 var $21=(($h)|0); //@line 199 "lib/lua-5.2.3/src/lundump.c"
 var $22=(($s)|0); //@line 199 "lib/lua-5.2.3/src/lundump.c"
 var $23=_memcmp($21,$22,6); //@line 199 "lib/lua-5.2.3/src/lundump.c"
 var $24=($23|0)!=0; //@line 199 "lib/lua-5.2.3/src/lundump.c"
 if($24){label=6;break;}else{label=7;break;} //@line 199 "lib/lua-5.2.3/src/lundump.c"
 case 6: 
 var $26=$1; //@line 199 "lib/lua-5.2.3/src/lundump.c"
 _error($26,2504); //@line 199 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 199 "lib/lua-5.2.3/src/lundump.c"
 case 7: 
 var $28=(($h)|0); //@line 200 "lib/lua-5.2.3/src/lundump.c"
 var $29=(($s)|0); //@line 200 "lib/lua-5.2.3/src/lundump.c"
 var $30=_memcmp($28,$29,12); //@line 200 "lib/lua-5.2.3/src/lundump.c"
 var $31=($30|0)!=0; //@line 200 "lib/lua-5.2.3/src/lundump.c"
 if($31){label=8;break;}else{label=9;break;} //@line 200 "lib/lua-5.2.3/src/lundump.c"
 case 8: 
 var $33=$1; //@line 200 "lib/lua-5.2.3/src/lundump.c"
 _error($33,15976); //@line 200 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 200 "lib/lua-5.2.3/src/lundump.c"
 case 9: 
 var $35=$1; //@line 200 "lib/lua-5.2.3/src/lundump.c"
 _error($35,3704); //@line 200 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 200 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadFunction($S,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$S;
 $2=$f;
 var $3=$1; //@line 173 "lib/lua-5.2.3/src/lundump.c"
 var $4=_LoadInt($3); //@line 173 "lib/lua-5.2.3/src/lundump.c"
 var $5=$2; //@line 173 "lib/lua-5.2.3/src/lundump.c"
 var $6=(($5+64)|0); //@line 173 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($6)>>2)]=$4; //@line 173 "lib/lua-5.2.3/src/lundump.c"
 var $7=$1; //@line 174 "lib/lua-5.2.3/src/lundump.c"
 var $8=_LoadInt($7); //@line 174 "lib/lua-5.2.3/src/lundump.c"
 var $9=$2; //@line 174 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9+68)|0); //@line 174 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($10)>>2)]=$8; //@line 174 "lib/lua-5.2.3/src/lundump.c"
 var $11=$1; //@line 175 "lib/lua-5.2.3/src/lundump.c"
 var $12=_LoadChar($11); //@line 175 "lib/lua-5.2.3/src/lundump.c"
 var $13=(($12)&255); //@line 175 "lib/lua-5.2.3/src/lundump.c"
 var $14=$2; //@line 175 "lib/lua-5.2.3/src/lundump.c"
 var $15=(($14+76)|0); //@line 175 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($15)]=$13; //@line 175 "lib/lua-5.2.3/src/lundump.c"
 var $16=$1; //@line 176 "lib/lua-5.2.3/src/lundump.c"
 var $17=_LoadChar($16); //@line 176 "lib/lua-5.2.3/src/lundump.c"
 var $18=(($17)&255); //@line 176 "lib/lua-5.2.3/src/lundump.c"
 var $19=$2; //@line 176 "lib/lua-5.2.3/src/lundump.c"
 var $20=(($19+77)|0); //@line 176 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($20)]=$18; //@line 176 "lib/lua-5.2.3/src/lundump.c"
 var $21=$1; //@line 177 "lib/lua-5.2.3/src/lundump.c"
 var $22=_LoadChar($21); //@line 177 "lib/lua-5.2.3/src/lundump.c"
 var $23=(($22)&255); //@line 177 "lib/lua-5.2.3/src/lundump.c"
 var $24=$2; //@line 177 "lib/lua-5.2.3/src/lundump.c"
 var $25=(($24+78)|0); //@line 177 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($25)]=$23; //@line 177 "lib/lua-5.2.3/src/lundump.c"
 var $26=$1; //@line 178 "lib/lua-5.2.3/src/lundump.c"
 var $27=$2; //@line 178 "lib/lua-5.2.3/src/lundump.c"
 _LoadCode($26,$27); //@line 178 "lib/lua-5.2.3/src/lundump.c"
 var $28=$1; //@line 179 "lib/lua-5.2.3/src/lundump.c"
 var $29=$2; //@line 179 "lib/lua-5.2.3/src/lundump.c"
 _LoadConstants($28,$29); //@line 179 "lib/lua-5.2.3/src/lundump.c"
 var $30=$1; //@line 180 "lib/lua-5.2.3/src/lundump.c"
 var $31=$2; //@line 180 "lib/lua-5.2.3/src/lundump.c"
 _LoadUpvalues($30,$31); //@line 180 "lib/lua-5.2.3/src/lundump.c"
 var $32=$1; //@line 181 "lib/lua-5.2.3/src/lundump.c"
 var $33=$2; //@line 181 "lib/lua-5.2.3/src/lundump.c"
 _LoadDebug($32,$33); //@line 181 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return; //@line 182 "lib/lua-5.2.3/src/lundump.c"
}


function _luaU_header($h){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $x=sp;
 $1=$h;
 HEAP32[(($x)>>2)]=1; //@line 246 "lib/lua-5.2.3/src/lundump.c"
 var $2=$1; //@line 247 "lib/lua-5.2.3/src/lundump.c"
 assert(4 % 1 === 0);HEAP8[($2)]=HEAP8[(3008)];HEAP8[((($2)+(1))|0)]=HEAP8[(3009)];HEAP8[((($2)+(2))|0)]=HEAP8[(3010)];HEAP8[((($2)+(3))|0)]=HEAP8[(3011)]; //@line 247 "lib/lua-5.2.3/src/lundump.c"
 var $3=$1; //@line 248 "lib/lua-5.2.3/src/lundump.c"
 var $4=(($3+4)|0); //@line 248 "lib/lua-5.2.3/src/lundump.c"
 $1=$4; //@line 248 "lib/lua-5.2.3/src/lundump.c"
 var $5=HEAP8[(9744)]; //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $6=(($5<<24)>>24); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $7=((($6)-(48))|0); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $8=($7<<4); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $9=HEAP8[(7728)]; //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9<<24)>>24); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $11=((($10)-(48))|0); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $12=((($8)+($11))|0); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $13=(($12)&255); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $14=$1; //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $15=(($14+1)|0); //@line 249 "lib/lua-5.2.3/src/lundump.c"
 $1=$15; //@line 249 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($14)]=$13; //@line 249 "lib/lua-5.2.3/src/lundump.c"
 var $16=$1; //@line 250 "lib/lua-5.2.3/src/lundump.c"
 var $17=(($16+1)|0); //@line 250 "lib/lua-5.2.3/src/lundump.c"
 $1=$17; //@line 250 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($16)]=0; //@line 250 "lib/lua-5.2.3/src/lundump.c"
 var $18=$x; //@line 251 "lib/lua-5.2.3/src/lundump.c"
 var $19=HEAP8[($18)]; //@line 251 "lib/lua-5.2.3/src/lundump.c"
 var $20=$1; //@line 251 "lib/lua-5.2.3/src/lundump.c"
 var $21=(($20+1)|0); //@line 251 "lib/lua-5.2.3/src/lundump.c"
 $1=$21; //@line 251 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($20)]=$19; //@line 251 "lib/lua-5.2.3/src/lundump.c"
 var $22=$1; //@line 252 "lib/lua-5.2.3/src/lundump.c"
 var $23=(($22+1)|0); //@line 252 "lib/lua-5.2.3/src/lundump.c"
 $1=$23; //@line 252 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($22)]=4; //@line 252 "lib/lua-5.2.3/src/lundump.c"
 var $24=$1; //@line 253 "lib/lua-5.2.3/src/lundump.c"
 var $25=(($24+1)|0); //@line 253 "lib/lua-5.2.3/src/lundump.c"
 $1=$25; //@line 253 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($24)]=4; //@line 253 "lib/lua-5.2.3/src/lundump.c"
 var $26=$1; //@line 254 "lib/lua-5.2.3/src/lundump.c"
 var $27=(($26+1)|0); //@line 254 "lib/lua-5.2.3/src/lundump.c"
 $1=$27; //@line 254 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($26)]=4; //@line 254 "lib/lua-5.2.3/src/lundump.c"
 var $28=$1; //@line 255 "lib/lua-5.2.3/src/lundump.c"
 var $29=(($28+1)|0); //@line 255 "lib/lua-5.2.3/src/lundump.c"
 $1=$29; //@line 255 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($28)]=8; //@line 255 "lib/lua-5.2.3/src/lundump.c"
 var $30=$1; //@line 256 "lib/lua-5.2.3/src/lundump.c"
 var $31=(($30+1)|0); //@line 256 "lib/lua-5.2.3/src/lundump.c"
 $1=$31; //@line 256 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($30)]=0; //@line 256 "lib/lua-5.2.3/src/lundump.c"
 var $32=$1; //@line 257 "lib/lua-5.2.3/src/lundump.c"
 assert(6 % 1 === 0);HEAP8[($32)]=HEAP8[(6088)];HEAP8[((($32)+(1))|0)]=HEAP8[(6089)];HEAP8[((($32)+(2))|0)]=HEAP8[(6090)];HEAP8[((($32)+(3))|0)]=HEAP8[(6091)];HEAP8[((($32)+(4))|0)]=HEAP8[(6092)];HEAP8[((($32)+(5))|0)]=HEAP8[(6093)]; //@line 257 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return; //@line 258 "lib/lua-5.2.3/src/lundump.c"
}


function _LoadInt($S){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $x=sp;
 $1=$S;
 var $2=$1; //@line 60 "lib/lua-5.2.3/src/lundump.c"
 var $3=$x; //@line 60 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($2,$3,4); //@line 60 "lib/lua-5.2.3/src/lundump.c"
 var $4=HEAP32[(($x)>>2)]; //@line 61 "lib/lua-5.2.3/src/lundump.c"
 var $5=($4|0)<0; //@line 61 "lib/lua-5.2.3/src/lundump.c"
 if($5){label=2;break;}else{label=3;break;} //@line 61 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $7=$1; //@line 61 "lib/lua-5.2.3/src/lundump.c"
 _error($7,3704); //@line 61 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 61 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $9=HEAP32[(($x)>>2)]; //@line 62 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return $9; //@line 62 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadChar($S){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $x=sp;
 $1=$S;
 var $2=$1; //@line 53 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($2,$x,1); //@line 53 "lib/lua-5.2.3/src/lundump.c"
 var $3=HEAP8[($x)]; //@line 54 "lib/lua-5.2.3/src/lundump.c"
 var $4=(($3<<24)>>24); //@line 54 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return $4; //@line 54 "lib/lua-5.2.3/src/lundump.c"
}


function _LoadCode($S,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 $1=$S;
 $2=$f;
 var $3=$1; //@line 88 "lib/lua-5.2.3/src/lundump.c"
 var $4=_LoadInt($3); //@line 88 "lib/lua-5.2.3/src/lundump.c"
 $n=$4; //@line 88 "lib/lua-5.2.3/src/lundump.c"
 var $5=$n; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $6=((($5)+(1))|0); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $7=($6>>>0)>1073741823; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 if($7){label=2;break;}else{label=3;break;} //@line 89 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $9=$1; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9)|0); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($11); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $15=0;label=4;break; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $15; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $16=$1; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $17=(($16)|0); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $18=HEAP32[(($17)>>2)]; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $19=$n; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $20=($19<<2); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $21=_luaM_realloc_($18,0,0,$20); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $22=$21; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $23=$2; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $24=(($23+12)|0); //@line 89 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($24)>>2)]=$22; //@line 89 "lib/lua-5.2.3/src/lundump.c"
 var $25=$n; //@line 90 "lib/lua-5.2.3/src/lundump.c"
 var $26=$2; //@line 90 "lib/lua-5.2.3/src/lundump.c"
 var $27=(($26+48)|0); //@line 90 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($27)>>2)]=$25; //@line 90 "lib/lua-5.2.3/src/lundump.c"
 var $28=$1; //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $29=$2; //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $30=(($29+12)|0); //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $31=HEAP32[(($30)>>2)]; //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $32=$31; //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $33=$n; //@line 91 "lib/lua-5.2.3/src/lundump.c"
 var $34=($33<<2); //@line 91 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($28,$32,$34); //@line 91 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return; //@line 92 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadConstants($S,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 var $o;
 var $t;
 var $io;
 var $io1;
 var $io2;
 var $x_;
 $1=$S;
 $2=$f;
 var $3=$1; //@line 99 "lib/lua-5.2.3/src/lundump.c"
 var $4=_LoadInt($3); //@line 99 "lib/lua-5.2.3/src/lundump.c"
 $n=$4; //@line 99 "lib/lua-5.2.3/src/lundump.c"
 var $5=$n; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $6=((($5)+(1))|0); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $7=($6>>>0)>268435455; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 if($7){label=2;break;}else{label=3;break;} //@line 100 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $9=$1; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9)|0); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($11); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $15=0;label=4;break; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $15; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $16=$1; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $17=(($16)|0); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $18=HEAP32[(($17)>>2)]; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $19=$n; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $20=($19<<4); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $21=_luaM_realloc_($18,0,0,$20); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $22=$21; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $23=$2; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $24=(($23+8)|0); //@line 100 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($24)>>2)]=$22; //@line 100 "lib/lua-5.2.3/src/lundump.c"
 var $25=$n; //@line 101 "lib/lua-5.2.3/src/lundump.c"
 var $26=$2; //@line 101 "lib/lua-5.2.3/src/lundump.c"
 var $27=(($26+44)|0); //@line 101 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($27)>>2)]=$25; //@line 101 "lib/lua-5.2.3/src/lundump.c"
 $i=0; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 label=5;break; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 case 5: 
 var $29=$i; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $30=$n; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $31=($29|0)<($30|0); //@line 102 "lib/lua-5.2.3/src/lundump.c"
 if($31){label=6;break;}else{label=8;break;} //@line 102 "lib/lua-5.2.3/src/lundump.c"
 case 6: 
 var $33=$i; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $34=$2; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $35=(($34+8)|0); //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $36=HEAP32[(($35)>>2)]; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $37=(($36+($33<<4))|0); //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $38=(($37+8)|0); //@line 102 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($38)>>2)]=0; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 label=7;break; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 case 7: 
 var $40=$i; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 var $41=((($40)+(1))|0); //@line 102 "lib/lua-5.2.3/src/lundump.c"
 $i=$41; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 label=5;break; //@line 102 "lib/lua-5.2.3/src/lundump.c"
 case 8: 
 $i=0; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 label=9;break; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 case 9: 
 var $44=$i; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 var $45=$n; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 var $46=($44|0)<($45|0); //@line 103 "lib/lua-5.2.3/src/lundump.c"
 if($46){label=10;break;}else{label=18;break;} //@line 103 "lib/lua-5.2.3/src/lundump.c"
 case 10: 
 var $48=$i; //@line 105 "lib/lua-5.2.3/src/lundump.c"
 var $49=$2; //@line 105 "lib/lua-5.2.3/src/lundump.c"
 var $50=(($49+8)|0); //@line 105 "lib/lua-5.2.3/src/lundump.c"
 var $51=HEAP32[(($50)>>2)]; //@line 105 "lib/lua-5.2.3/src/lundump.c"
 var $52=(($51+($48<<4))|0); //@line 105 "lib/lua-5.2.3/src/lundump.c"
 $o=$52; //@line 105 "lib/lua-5.2.3/src/lundump.c"
 var $53=$1; //@line 106 "lib/lua-5.2.3/src/lundump.c"
 var $54=_LoadChar($53); //@line 106 "lib/lua-5.2.3/src/lundump.c"
 $t=$54; //@line 106 "lib/lua-5.2.3/src/lundump.c"
 var $55=$t; //@line 107 "lib/lua-5.2.3/src/lundump.c"
 if(($55|0)==0){ label=11;break;}else if(($55|0)==1){ label=12;break;}else if(($55|0)==3){ label=13;break;}else if(($55|0)==4){ label=14;break;}else{label=15;break;}
 case 11: 
 var $57=$o; //@line 110 "lib/lua-5.2.3/src/lundump.c"
 var $58=(($57+8)|0); //@line 110 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($58)>>2)]=0; //@line 110 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 111 "lib/lua-5.2.3/src/lundump.c"
 case 12: 
 var $60=$o; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 $io=$60; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $61=$1; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $62=_LoadChar($61); //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $63=$io; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $64=(($63)|0); //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $65=$64; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($65)>>2)]=$62; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $66=$io; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 var $67=(($66+8)|0); //@line 113 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($67)>>2)]=1; //@line 113 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 114 "lib/lua-5.2.3/src/lundump.c"
 case 13: 
 var $69=$o; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 $io1=$69; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $70=$1; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $71=_LoadNumber($70); //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $72=$io1; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $73=(($72)|0); //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $74=$73; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 HEAPF64[(($74)>>3)]=$71; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $75=$io1; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 var $76=(($75+8)|0); //@line 116 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($76)>>2)]=3; //@line 116 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 117 "lib/lua-5.2.3/src/lundump.c"
 case 14: 
 var $78=$o; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 $io2=$78; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $79=$1; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $80=_LoadString($79); //@line 119 "lib/lua-5.2.3/src/lundump.c"
 $x_=$80; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $81=$x_; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $82=$81; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $83=$io2; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $84=(($83)|0); //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $85=$84; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($85)>>2)]=$82; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $86=$x_; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $87=$86; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $88=(($87+4)|0); //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $89=HEAP8[($88)]; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $90=($89&255); //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $91=$90|64; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $92=$io2; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 var $93=(($92+8)|0); //@line 119 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($93)>>2)]=$91; //@line 119 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 120 "lib/lua-5.2.3/src/lundump.c"
 case 15: 
 label=16;break; //@line 122 "lib/lua-5.2.3/src/lundump.c"
 case 16: 
 label=17;break; //@line 123 "lib/lua-5.2.3/src/lundump.c"
 case 17: 
 var $97=$i; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 var $98=((($97)+(1))|0); //@line 103 "lib/lua-5.2.3/src/lundump.c"
 $i=$98; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 label=9;break; //@line 103 "lib/lua-5.2.3/src/lundump.c"
 case 18: 
 var $100=$1; //@line 124 "lib/lua-5.2.3/src/lundump.c"
 var $101=_LoadInt($100); //@line 124 "lib/lua-5.2.3/src/lundump.c"
 $n=$101; //@line 124 "lib/lua-5.2.3/src/lundump.c"
 var $102=$n; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $103=((($102)+(1))|0); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $104=($103>>>0)>1073741823; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 if($104){label=19;break;}else{label=20;break;} //@line 125 "lib/lua-5.2.3/src/lundump.c"
 case 19: 
 var $106=$1; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $107=(($106)|0); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $108=HEAP32[(($107)>>2)]; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($108); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 label=21;break; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 case 20: 
 var $112=0;label=21;break; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 case 21: 
 var $112; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $113=$1; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $114=(($113)|0); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $115=HEAP32[(($114)>>2)]; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $116=$n; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $117=($116<<2); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $118=_luaM_realloc_($115,0,0,$117); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $119=$118; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $120=$2; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $121=(($120+16)|0); //@line 125 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($121)>>2)]=$119; //@line 125 "lib/lua-5.2.3/src/lundump.c"
 var $122=$n; //@line 126 "lib/lua-5.2.3/src/lundump.c"
 var $123=$2; //@line 126 "lib/lua-5.2.3/src/lundump.c"
 var $124=(($123+56)|0); //@line 126 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($124)>>2)]=$122; //@line 126 "lib/lua-5.2.3/src/lundump.c"
 $i=0; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 label=22;break; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 case 22: 
 var $126=$i; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $127=$n; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $128=($126|0)<($127|0); //@line 127 "lib/lua-5.2.3/src/lundump.c"
 if($128){label=23;break;}else{label=25;break;} //@line 127 "lib/lua-5.2.3/src/lundump.c"
 case 23: 
 var $130=$i; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $131=$2; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $132=(($131+16)|0); //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $133=HEAP32[(($132)>>2)]; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $134=(($133+($130<<2))|0); //@line 127 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($134)>>2)]=0; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 label=24;break; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 case 24: 
 var $136=$i; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 var $137=((($136)+(1))|0); //@line 127 "lib/lua-5.2.3/src/lundump.c"
 $i=$137; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 label=22;break; //@line 127 "lib/lua-5.2.3/src/lundump.c"
 case 25: 
 $i=0; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 label=26;break; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 case 26: 
 var $140=$i; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 var $141=$n; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 var $142=($140|0)<($141|0); //@line 128 "lib/lua-5.2.3/src/lundump.c"
 if($142){label=27;break;}else{label=29;break;} //@line 128 "lib/lua-5.2.3/src/lundump.c"
 case 27: 
 var $144=$1; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $145=(($144)|0); //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $146=HEAP32[(($145)>>2)]; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $147=_luaF_newproto($146); //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $148=$i; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $149=$2; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $150=(($149+16)|0); //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $151=HEAP32[(($150)>>2)]; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $152=(($151+($148<<2))|0); //@line 130 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($152)>>2)]=$147; //@line 130 "lib/lua-5.2.3/src/lundump.c"
 var $153=$1; //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $154=$i; //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $155=$2; //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $156=(($155+16)|0); //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $157=HEAP32[(($156)>>2)]; //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $158=(($157+($154<<2))|0); //@line 131 "lib/lua-5.2.3/src/lundump.c"
 var $159=HEAP32[(($158)>>2)]; //@line 131 "lib/lua-5.2.3/src/lundump.c"
 _LoadFunction($153,$159); //@line 131 "lib/lua-5.2.3/src/lundump.c"
 label=28;break; //@line 132 "lib/lua-5.2.3/src/lundump.c"
 case 28: 
 var $161=$i; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 var $162=((($161)+(1))|0); //@line 128 "lib/lua-5.2.3/src/lundump.c"
 $i=$162; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 label=26;break; //@line 128 "lib/lua-5.2.3/src/lundump.c"
 case 29: 
 STACKTOP=sp;return; //@line 133 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadUpvalues($S,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 $1=$S;
 $2=$f;
 var $3=$1; //@line 138 "lib/lua-5.2.3/src/lundump.c"
 var $4=_LoadInt($3); //@line 138 "lib/lua-5.2.3/src/lundump.c"
 $n=$4; //@line 138 "lib/lua-5.2.3/src/lundump.c"
 var $5=$n; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $6=((($5)+(1))|0); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $7=($6>>>0)>536870911; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 if($7){label=2;break;}else{label=3;break;} //@line 139 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $9=$1; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9)|0); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($11); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $15=0;label=4;break; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $15; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $16=$1; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $17=(($16)|0); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $18=HEAP32[(($17)>>2)]; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $19=$n; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $20=($19<<3); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $21=_luaM_realloc_($18,0,0,$20); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $22=$21; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $23=$2; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $24=(($23+28)|0); //@line 139 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($24)>>2)]=$22; //@line 139 "lib/lua-5.2.3/src/lundump.c"
 var $25=$n; //@line 140 "lib/lua-5.2.3/src/lundump.c"
 var $26=$2; //@line 140 "lib/lua-5.2.3/src/lundump.c"
 var $27=(($26+40)|0); //@line 140 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($27)>>2)]=$25; //@line 140 "lib/lua-5.2.3/src/lundump.c"
 $i=0; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 label=5;break; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 case 5: 
 var $29=$i; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $30=$n; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $31=($29|0)<($30|0); //@line 141 "lib/lua-5.2.3/src/lundump.c"
 if($31){label=6;break;}else{label=8;break;} //@line 141 "lib/lua-5.2.3/src/lundump.c"
 case 6: 
 var $33=$i; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $34=$2; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $35=(($34+28)|0); //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $36=HEAP32[(($35)>>2)]; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $37=(($36+($33<<3))|0); //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $38=(($37)|0); //@line 141 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($38)>>2)]=0; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 label=7;break; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 case 7: 
 var $40=$i; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 var $41=((($40)+(1))|0); //@line 141 "lib/lua-5.2.3/src/lundump.c"
 $i=$41; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 label=5;break; //@line 141 "lib/lua-5.2.3/src/lundump.c"
 case 8: 
 $i=0; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 label=9;break; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 case 9: 
 var $44=$i; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 var $45=$n; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 var $46=($44|0)<($45|0); //@line 142 "lib/lua-5.2.3/src/lundump.c"
 if($46){label=10;break;}else{label=12;break;} //@line 142 "lib/lua-5.2.3/src/lundump.c"
 case 10: 
 var $48=$1; //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $49=_LoadChar($48); //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $50=(($49)&255); //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $51=$i; //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $52=$2; //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $53=(($52+28)|0); //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $54=HEAP32[(($53)>>2)]; //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $55=(($54+($51<<3))|0); //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $56=(($55+4)|0); //@line 144 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($56)]=$50; //@line 144 "lib/lua-5.2.3/src/lundump.c"
 var $57=$1; //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $58=_LoadChar($57); //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $59=(($58)&255); //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $60=$i; //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $61=$2; //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $62=(($61+28)|0); //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $63=HEAP32[(($62)>>2)]; //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $64=(($63+($60<<3))|0); //@line 145 "lib/lua-5.2.3/src/lundump.c"
 var $65=(($64+5)|0); //@line 145 "lib/lua-5.2.3/src/lundump.c"
 HEAP8[($65)]=$59; //@line 145 "lib/lua-5.2.3/src/lundump.c"
 label=11;break; //@line 146 "lib/lua-5.2.3/src/lundump.c"
 case 11: 
 var $67=$i; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 var $68=((($67)+(1))|0); //@line 142 "lib/lua-5.2.3/src/lundump.c"
 $i=$68; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 label=9;break; //@line 142 "lib/lua-5.2.3/src/lundump.c"
 case 12: 
 STACKTOP=sp;return; //@line 147 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadDebug($S,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $n;
 $1=$S;
 $2=$f;
 var $3=$1; //@line 152 "lib/lua-5.2.3/src/lundump.c"
 var $4=_LoadString($3); //@line 152 "lib/lua-5.2.3/src/lundump.c"
 var $5=$2; //@line 152 "lib/lua-5.2.3/src/lundump.c"
 var $6=(($5+36)|0); //@line 152 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($6)>>2)]=$4; //@line 152 "lib/lua-5.2.3/src/lundump.c"
 var $7=$1; //@line 153 "lib/lua-5.2.3/src/lundump.c"
 var $8=_LoadInt($7); //@line 153 "lib/lua-5.2.3/src/lundump.c"
 $n=$8; //@line 153 "lib/lua-5.2.3/src/lundump.c"
 var $9=$n; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $10=((($9)+(1))|0); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $11=($10>>>0)>1073741823; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 if($11){label=2;break;}else{label=3;break;} //@line 154 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $13=$1; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $14=(($13)|0); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $15=HEAP32[(($14)>>2)]; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($15); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $19=0;label=4;break; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $19; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $20=$1; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $21=(($20)|0); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $22=HEAP32[(($21)>>2)]; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $23=$n; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $24=($23<<2); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $25=_luaM_realloc_($22,0,0,$24); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $26=$25; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $27=$2; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $28=(($27+20)|0); //@line 154 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($28)>>2)]=$26; //@line 154 "lib/lua-5.2.3/src/lundump.c"
 var $29=$n; //@line 155 "lib/lua-5.2.3/src/lundump.c"
 var $30=$2; //@line 155 "lib/lua-5.2.3/src/lundump.c"
 var $31=(($30+52)|0); //@line 155 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($31)>>2)]=$29; //@line 155 "lib/lua-5.2.3/src/lundump.c"
 var $32=$1; //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $33=$2; //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $34=(($33+20)|0); //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $35=HEAP32[(($34)>>2)]; //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $36=$35; //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $37=$n; //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $38=($37<<2); //@line 156 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($32,$36,$38); //@line 156 "lib/lua-5.2.3/src/lundump.c"
 var $39=$1; //@line 157 "lib/lua-5.2.3/src/lundump.c"
 var $40=_LoadInt($39); //@line 157 "lib/lua-5.2.3/src/lundump.c"
 $n=$40; //@line 157 "lib/lua-5.2.3/src/lundump.c"
 var $41=$n; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $42=((($41)+(1))|0); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $43=($42>>>0)>357913941; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 if($43){label=5;break;}else{label=6;break;} //@line 158 "lib/lua-5.2.3/src/lundump.c"
 case 5: 
 var $45=$1; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $46=(($45)|0); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $47=HEAP32[(($46)>>2)]; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 _luaM_toobig($47); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 label=7;break; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 case 6: 
 var $51=0;label=7;break; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 case 7: 
 var $51; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $52=$1; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $53=(($52)|0); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $54=HEAP32[(($53)>>2)]; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $55=$n; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $56=((($55)*(12))&-1); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $57=_luaM_realloc_($54,0,0,$56); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $58=$57; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $59=$2; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $60=(($59+24)|0); //@line 158 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($60)>>2)]=$58; //@line 158 "lib/lua-5.2.3/src/lundump.c"
 var $61=$n; //@line 159 "lib/lua-5.2.3/src/lundump.c"
 var $62=$2; //@line 159 "lib/lua-5.2.3/src/lundump.c"
 var $63=(($62+60)|0); //@line 159 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($63)>>2)]=$61; //@line 159 "lib/lua-5.2.3/src/lundump.c"
 $i=0; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 label=8;break; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 case 8: 
 var $65=$i; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $66=$n; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $67=($65|0)<($66|0); //@line 160 "lib/lua-5.2.3/src/lundump.c"
 if($67){label=9;break;}else{label=11;break;} //@line 160 "lib/lua-5.2.3/src/lundump.c"
 case 9: 
 var $69=$i; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $70=$2; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $71=(($70+24)|0); //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $72=HEAP32[(($71)>>2)]; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $73=(($72+((($69)*(12))&-1))|0); //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $74=(($73)|0); //@line 160 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($74)>>2)]=0; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 label=10;break; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 case 10: 
 var $76=$i; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 var $77=((($76)+(1))|0); //@line 160 "lib/lua-5.2.3/src/lundump.c"
 $i=$77; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 label=8;break; //@line 160 "lib/lua-5.2.3/src/lundump.c"
 case 11: 
 $i=0; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 label=12;break; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 case 12: 
 var $80=$i; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 var $81=$n; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 var $82=($80|0)<($81|0); //@line 161 "lib/lua-5.2.3/src/lundump.c"
 if($82){label=13;break;}else{label=15;break;} //@line 161 "lib/lua-5.2.3/src/lundump.c"
 case 13: 
 var $84=$1; //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $85=_LoadString($84); //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $86=$i; //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $87=$2; //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $88=(($87+24)|0); //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $89=HEAP32[(($88)>>2)]; //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $90=(($89+((($86)*(12))&-1))|0); //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $91=(($90)|0); //@line 163 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($91)>>2)]=$85; //@line 163 "lib/lua-5.2.3/src/lundump.c"
 var $92=$1; //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $93=_LoadInt($92); //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $94=$i; //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $95=$2; //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $96=(($95+24)|0); //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $97=HEAP32[(($96)>>2)]; //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $98=(($97+((($94)*(12))&-1))|0); //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $99=(($98+4)|0); //@line 164 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($99)>>2)]=$93; //@line 164 "lib/lua-5.2.3/src/lundump.c"
 var $100=$1; //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $101=_LoadInt($100); //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $102=$i; //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $103=$2; //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $104=(($103+24)|0); //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $105=HEAP32[(($104)>>2)]; //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $106=(($105+((($102)*(12))&-1))|0); //@line 165 "lib/lua-5.2.3/src/lundump.c"
 var $107=(($106+8)|0); //@line 165 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($107)>>2)]=$101; //@line 165 "lib/lua-5.2.3/src/lundump.c"
 label=14;break; //@line 166 "lib/lua-5.2.3/src/lundump.c"
 case 14: 
 var $109=$i; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 var $110=((($109)+(1))|0); //@line 161 "lib/lua-5.2.3/src/lundump.c"
 $i=$110; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 label=12;break; //@line 161 "lib/lua-5.2.3/src/lundump.c"
 case 15: 
 var $112=$1; //@line 167 "lib/lua-5.2.3/src/lundump.c"
 var $113=_LoadInt($112); //@line 167 "lib/lua-5.2.3/src/lundump.c"
 $n=$113; //@line 167 "lib/lua-5.2.3/src/lundump.c"
 $i=0; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 case 16: 
 var $115=$i; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $116=$n; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $117=($115|0)<($116|0); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 if($117){label=17;break;}else{label=19;break;} //@line 168 "lib/lua-5.2.3/src/lundump.c"
 case 17: 
 var $119=$1; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $120=_LoadString($119); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $121=$i; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $122=$2; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $123=(($122+28)|0); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $124=HEAP32[(($123)>>2)]; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $125=(($124+($121<<3))|0); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $126=(($125)|0); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 HEAP32[(($126)>>2)]=$120; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 label=18;break; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 case 18: 
 var $128=$i; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 var $129=((($128)+(1))|0); //@line 168 "lib/lua-5.2.3/src/lundump.c"
 $i=$129; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 label=16;break; //@line 168 "lib/lua-5.2.3/src/lundump.c"
 case 19: 
 STACKTOP=sp;return; //@line 169 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadString($S){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $size=sp;
 var $s;
 $2=$S;
 var $3=$2; //@line 75 "lib/lua-5.2.3/src/lundump.c"
 var $4=$size; //@line 75 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($3,$4,4); //@line 75 "lib/lua-5.2.3/src/lundump.c"
 var $5=HEAP32[(($size)>>2)]; //@line 76 "lib/lua-5.2.3/src/lundump.c"
 var $6=($5|0)==0; //@line 76 "lib/lua-5.2.3/src/lundump.c"
 if($6){label=2;break;}else{label=3;break;} //@line 76 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 $1=0; //@line 77 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 77 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 var $9=$2; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $10=(($9)|0); //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $11=HEAP32[(($10)>>2)]; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $12=$2; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $13=(($12+8)|0); //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $14=HEAP32[(($13)>>2)]; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $15=HEAP32[(($size)>>2)]; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $16=_luaZ_openspace($11,$14,$15); //@line 80 "lib/lua-5.2.3/src/lundump.c"
 $s=$16; //@line 80 "lib/lua-5.2.3/src/lundump.c"
 var $17=$2; //@line 81 "lib/lua-5.2.3/src/lundump.c"
 var $18=$s; //@line 81 "lib/lua-5.2.3/src/lundump.c"
 var $19=HEAP32[(($size)>>2)]; //@line 81 "lib/lua-5.2.3/src/lundump.c"
 var $20=$19; //@line 81 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($17,$18,$20); //@line 81 "lib/lua-5.2.3/src/lundump.c"
 var $21=$2; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $22=(($21)|0); //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $23=HEAP32[(($22)>>2)]; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $24=$s; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $25=HEAP32[(($size)>>2)]; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $26=((($25)-(1))|0); //@line 82 "lib/lua-5.2.3/src/lundump.c"
 var $27=_luaS_newlstr($23,$24,$26); //@line 82 "lib/lua-5.2.3/src/lundump.c"
 $1=$27; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 label=4;break; //@line 82 "lib/lua-5.2.3/src/lundump.c"
 case 4: 
 var $29=$1; //@line 84 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return $29; //@line 84 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _LoadBlock($S,$b,$size){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$S;
 $2=$b;
 $3=$size;
 var $4=$1; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $5=(($4+4)|0); //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $6=HEAP32[(($5)>>2)]; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $7=$2; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $8=$3; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $9=_luaZ_read($6,$7,$8); //@line 47 "lib/lua-5.2.3/src/lundump.c"
 var $10=($9|0)!=0; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 if($10){label=2;break;}else{label=3;break;} //@line 47 "lib/lua-5.2.3/src/lundump.c"
 case 2: 
 var $12=$1; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 _error($12,5208); //@line 47 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 47 "lib/lua-5.2.3/src/lundump.c"
 case 3: 
 STACKTOP=sp;return; //@line 48 "lib/lua-5.2.3/src/lundump.c"
  default: assert(0, "bad label: " + label);
 }

}


function _error($S,$why){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$S;
 $2=$why;
 var $3=$1; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $4=(($3)|0); //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $5=HEAP32[(($4)>>2)]; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $6=$1; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $7=(($6+12)|0); //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $8=HEAP32[(($7)>>2)]; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $9=$2; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $10=_luaO_pushfstring($5,4488,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$8,HEAP32[(((tempVarArgs)+(8))>>2)]=$9,tempVarArgs)); STACKTOP=tempVarArgs; //@line 32 "lib/lua-5.2.3/src/lundump.c"
 var $11=$1; //@line 33 "lib/lua-5.2.3/src/lundump.c"
 var $12=(($11)|0); //@line 33 "lib/lua-5.2.3/src/lundump.c"
 var $13=HEAP32[(($12)>>2)]; //@line 33 "lib/lua-5.2.3/src/lundump.c"
 _luaD_throw($13,3); //@line 33 "lib/lua-5.2.3/src/lundump.c"
 throw "Reached an unreachable!"; //@line 33 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return; //@line 34 "lib/lua-5.2.3/src/lundump.c"
}


function _LoadNumber($S){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $x=sp;
 $1=$S;
 var $2=$1; //@line 68 "lib/lua-5.2.3/src/lundump.c"
 var $3=$x; //@line 68 "lib/lua-5.2.3/src/lundump.c"
 _LoadBlock($2,$3,8); //@line 68 "lib/lua-5.2.3/src/lundump.c"
 var $4=HEAPF64[(($x)>>3)]; //@line 69 "lib/lua-5.2.3/src/lundump.c"
 STACKTOP=sp;return $4; //@line 69 "lib/lua-5.2.3/src/lundump.c"
}


function _luaopen_base($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 449 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_rawgeti($2,-1001000,2); //@line 449 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 450 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_rawgeti($3,-1001000,2); //@line 450 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 451 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_setfield($4,-2,2960); //@line 451 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 453 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_setfuncs($5,2288,0); //@line 453 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$1; //@line 454 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_lua_pushlstring($6,12896,7); //@line 454 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=$1; //@line 455 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_setfield($8,-2,9680); //@line 455 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 456 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_assert($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$L;
 var $3=$2; //@line 347 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_lua_toboolean($3,1); //@line 347 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=($4|0)!=0; //@line 347 "lib/lua-5.2.3/src/lbaselib.c"
 if($5){label=3;break;}else{label=2;break;} //@line 347 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $7=$2; //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=$2; //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=_luaL_optlstring($8,2,5288,0); //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=_luaL_error($7,5344,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,tempVarArgs)); STACKTOP=tempVarArgs; //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$10; //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 348 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $12=$2; //@line 349 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=_lua_gettop($12); //@line 349 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$13; //@line 349 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 349 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $15=$1; //@line 350 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $15; //@line 350 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_collectgarbage($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $o;
 var $ex;
 var $res;
 var $b;
 $2=$L;
 var $3=$2; //@line 167 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_luaL_checkoption($3,1,6256,1704); //@line 167 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=((1656+($4<<2))|0); //@line 167 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=HEAP32[(($5)>>2)]; //@line 167 "lib/lua-5.2.3/src/lbaselib.c"
 $o=$6; //@line 167 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=$2; //@line 168 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_luaL_optinteger($7,2,0); //@line 168 "lib/lua-5.2.3/src/lbaselib.c"
 $ex=$8; //@line 168 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$2; //@line 169 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=$o; //@line 169 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$ex; //@line 169 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=_lua_gc($9,$10,$11); //@line 169 "lib/lua-5.2.3/src/lbaselib.c"
 $res=$12; //@line 169 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$o; //@line 170 "lib/lua-5.2.3/src/lbaselib.c"
 if(($13|0)==3){ label=2;break;}else if(($13|0)==5|($13|0)==9){ label=3;break;}else{label=4;break;}
 case 2: 
 var $15=$2; //@line 172 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=_lua_gc($15,4,0); //@line 172 "lib/lua-5.2.3/src/lbaselib.c"
 $b=$16; //@line 172 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$2; //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=$res; //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $19=($18|0); //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=$b; //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=($20|0); //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=($21)/(1024); //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $23=($19)+($22); //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnumber($17,$23); //@line 173 "lib/lua-5.2.3/src/lbaselib.c"
 var $24=$2; //@line 174 "lib/lua-5.2.3/src/lbaselib.c"
 var $25=$b; //@line 174 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($24,$25); //@line 174 "lib/lua-5.2.3/src/lbaselib.c"
 $1=2; //@line 175 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 175 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $27=$2; //@line 178 "lib/lua-5.2.3/src/lbaselib.c"
 var $28=$res; //@line 178 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushboolean($27,$28); //@line 178 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 179 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 179 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $30=$2; //@line 182 "lib/lua-5.2.3/src/lbaselib.c"
 var $31=$res; //@line 182 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($30,$31); //@line 182 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 183 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 183 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 var $33=$1; //@line 186 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $33; //@line 186 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_dofile($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fname;
 $2=$L;
 var $3=$2; //@line 337 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_luaL_optlstring($3,1,0,0); //@line 337 "lib/lua-5.2.3/src/lbaselib.c"
 $fname=$4; //@line 337 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$2; //@line 338 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($5,1); //@line 338 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$2; //@line 339 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=$fname; //@line 339 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_luaL_loadfilex($6,$7,0); //@line 339 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=($8|0)!=0; //@line 339 "lib/lua-5.2.3/src/lbaselib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 339 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $11=$2; //@line 340 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=_lua_error($11); //@line 340 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$12; //@line 340 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 340 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $14=$2; //@line 341 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_callk($14,0,-1,0,238); //@line 341 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$2; //@line 342 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=_dofilecont($15); //@line 342 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$16; //@line 342 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 342 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $18=$1; //@line 343 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $18; //@line 343 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_error($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $level;
 $1=$L;
 var $2=$1; //@line 90 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_luaL_optinteger($2,2,1); //@line 90 "lib/lua-5.2.3/src/lbaselib.c"
 $level=$3; //@line 90 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 91 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($4,1); //@line 91 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=_lua_isstring($5,1); //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=($6|0)!=0; //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 if($7){label=2;break;}else{label=4;break;} //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $9=$level; //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=($9|0)>0; //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 if($10){label=3;break;}else{label=4;break;} //@line 92 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $12=$1; //@line 93 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$level; //@line 93 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_where($12,$13); //@line 93 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$1; //@line 94 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($14,1); //@line 94 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$1; //@line 95 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_concat($15,2); //@line 95 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 96 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $17=$1; //@line 97 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=_lua_error($17); //@line 97 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $18; //@line 97 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_getmetatable($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$L;
 var $3=$2; //@line 102 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($3,1); //@line 102 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$2; //@line 103 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=_lua_getmetatable($4,1); //@line 103 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=($5|0)!=0; //@line 103 "lib/lua-5.2.3/src/lbaselib.c"
 if($6){label=3;break;}else{label=2;break;} //@line 103 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $8=$2; //@line 104 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($8); //@line 104 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 105 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 105 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $10=$2; //@line 107 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=_luaL_getmetafield($10,1,9248); //@line 107 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 108 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 108 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $13=$1; //@line 109 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $13; //@line 109 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_ipairs($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 241 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_pairsmeta($2,6768,1,214); //@line 241 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $3; //@line 241 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_loadfile($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $fname;
 var $mode;
 var $env;
 var $status;
 $1=$L;
 var $2=$1; //@line 263 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_luaL_optlstring($2,1,0,0); //@line 263 "lib/lua-5.2.3/src/lbaselib.c"
 $fname=$3; //@line 263 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 264 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=_luaL_optlstring($4,2,0,0); //@line 264 "lib/lua-5.2.3/src/lbaselib.c"
 $mode=$5; //@line 264 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$1; //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_lua_type($6,3); //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=($7|0)==-1; //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$8^1; //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=($9?3:0); //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 $env=$10; //@line 265 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$1; //@line 266 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=$fname; //@line 266 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$mode; //@line 266 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=_luaL_loadfilex($11,$12,$13); //@line 266 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$14; //@line 266 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$1; //@line 267 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$status; //@line 267 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$env; //@line 267 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=_load_aux($15,$16,$17); //@line 267 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $18; //@line 267 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_load($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $status;
 var $l=sp;
 var $s;
 var $mode;
 var $env;
 var $chunkname;
 var $chunkname1;
 $1=$L;
 var $2=$1; //@line 312 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_lua_tolstring($2,1,$l); //@line 312 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$3; //@line 312 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 313 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=_luaL_optlstring($4,3,7720,0); //@line 313 "lib/lua-5.2.3/src/lbaselib.c"
 $mode=$5; //@line 313 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$1; //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_lua_type($6,4); //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=($7|0)==-1; //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$8^1; //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=($9?4:0); //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 $env=$10; //@line 314 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$s; //@line 315 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=($11|0)!=0; //@line 315 "lib/lua-5.2.3/src/lbaselib.c"
 if($12){label=2;break;}else{label=3;break;} //@line 315 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $14=$1; //@line 316 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$s; //@line 316 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=_luaL_optlstring($14,2,$15,0); //@line 316 "lib/lua-5.2.3/src/lbaselib.c"
 $chunkname=$16; //@line 316 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$1; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=$s; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 var $19=HEAP32[(($l)>>2)]; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=$chunkname; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=$mode; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=_luaL_loadbufferx($17,$18,$19,$20,$21); //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$22; //@line 317 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 318 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $24=$1; //@line 320 "lib/lua-5.2.3/src/lbaselib.c"
 var $25=_luaL_optlstring($24,2,7624,0); //@line 320 "lib/lua-5.2.3/src/lbaselib.c"
 $chunkname1=$25; //@line 320 "lib/lua-5.2.3/src/lbaselib.c"
 var $26=$1; //@line 321 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($26,1,6); //@line 321 "lib/lua-5.2.3/src/lbaselib.c"
 var $27=$1; //@line 322 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($27,5); //@line 322 "lib/lua-5.2.3/src/lbaselib.c"
 var $28=$1; //@line 323 "lib/lua-5.2.3/src/lbaselib.c"
 var $29=$chunkname1; //@line 323 "lib/lua-5.2.3/src/lbaselib.c"
 var $30=$mode; //@line 323 "lib/lua-5.2.3/src/lbaselib.c"
 var $31=_lua_load($28,142,0,$29,$30); //@line 323 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$31; //@line 323 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break;
 case 4: 
 var $33=$1; //@line 325 "lib/lua-5.2.3/src/lbaselib.c"
 var $34=$status; //@line 325 "lib/lua-5.2.3/src/lbaselib.c"
 var $35=$env; //@line 325 "lib/lua-5.2.3/src/lbaselib.c"
 var $36=_load_aux($33,$34,$35); //@line 325 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $36; //@line 325 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_next($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$L;
 var $3=$2; //@line 214 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($3,1,5); //@line 214 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$2; //@line 215 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($4,2); //@line 215 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$2; //@line 216 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=_lua_next($5,1); //@line 216 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=($6|0)!=0; //@line 216 "lib/lua-5.2.3/src/lbaselib.c"
 if($7){label=2;break;}else{label=3;break;} //@line 216 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 $1=2; //@line 217 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 217 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $10=$2; //@line 219 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($10); //@line 219 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 220 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 220 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $12=$1; //@line 222 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $12; //@line 222 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_pairs($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 226 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_pairsmeta($2,7840,0,110); //@line 226 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $3; //@line 226 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_pcall($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $status;
 $1=$L;
 var $2=$1; //@line 390 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($2,1); //@line 390 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 391 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($3); //@line 391 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 392 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_insert($4,1); //@line 392 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$1; //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_lua_gettop($6); //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=((($7)-(2))|0); //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=_lua_pcallk($5,$8,-1,0,0,262); //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$9; //@line 393 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=$1; //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$status; //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=($11|0)==0; //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=($12&1); //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=_finishpcall($10,$13); //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $14; //@line 394 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_print($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 var $i;
 var $s;
 var $l=sp;
 $2=$L;
 var $3=$2; //@line 24 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_lua_gettop($3); //@line 24 "lib/lua-5.2.3/src/lbaselib.c"
 $n=$4; //@line 24 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$2; //@line 26 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_getglobal($5,11544); //@line 26 "lib/lua-5.2.3/src/lbaselib.c"
 $i=1; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 label=2;break; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $7=$i; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=$n; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=($7|0)<=($8|0); //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 if($9){label=3;break;}else{label=9;break;} //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $11=$2; //@line 30 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($11,-1); //@line 30 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=$2; //@line 31 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$i; //@line 31 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($12,$13); //@line 31 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$2; //@line 32 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_callk($14,1,1,0,0); //@line 32 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$2; //@line 33 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=_lua_tolstring($15,-1,$l); //@line 33 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$16; //@line 33 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$s; //@line 34 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=($17|0)==0; //@line 34 "lib/lua-5.2.3/src/lbaselib.c"
 if($18){label=4;break;}else{label=5;break;} //@line 34 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $20=$2; //@line 35 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=_luaL_error($20,8144,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 35 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$21; //@line 35 "lib/lua-5.2.3/src/lbaselib.c"
 label=10;break; //@line 35 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 var $23=$i; //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 var $24=($23|0)>1; //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 if($24){label=6;break;}else{label=7;break;} //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 var $26=HEAP32[((_stdout)>>2)]; //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 var $27=_fwrite(8048,1,1,$26); //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break; //@line 37 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $29=$s; //@line 38 "lib/lua-5.2.3/src/lbaselib.c"
 var $30=HEAP32[(($l)>>2)]; //@line 38 "lib/lua-5.2.3/src/lbaselib.c"
 var $31=HEAP32[((_stdout)>>2)]; //@line 38 "lib/lua-5.2.3/src/lbaselib.c"
 var $32=_fwrite($29,1,$30,$31); //@line 38 "lib/lua-5.2.3/src/lbaselib.c"
 var $33=$2; //@line 39 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($33,-2); //@line 39 "lib/lua-5.2.3/src/lbaselib.c"
 label=8;break; //@line 40 "lib/lua-5.2.3/src/lbaselib.c"
 case 8: 
 var $35=$i; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 var $36=((($35)+(1))|0); //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$36; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 label=2;break; //@line 27 "lib/lua-5.2.3/src/lbaselib.c"
 case 9: 
 var $38=HEAP32[((_stdout)>>2)]; //@line 41 "lib/lua-5.2.3/src/lbaselib.c"
 var $39=_fwrite(7936,1,1,$38); //@line 41 "lib/lua-5.2.3/src/lbaselib.c"
 var $40=HEAP32[((_stdout)>>2)]; //@line 41 "lib/lua-5.2.3/src/lbaselib.c"
 var $41=_fflush($40); //@line 41 "lib/lua-5.2.3/src/lbaselib.c"
 $1=0; //@line 42 "lib/lua-5.2.3/src/lbaselib.c"
 label=10;break; //@line 42 "lib/lua-5.2.3/src/lbaselib.c"
 case 10: 
 var $43=$1; //@line 43 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $43; //@line 43 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_rawequal($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 126 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($2,1); //@line 126 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 127 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($3,2); //@line 127 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 128 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 128 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=_lua_rawequal($5,1,2); //@line 128 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushboolean($4,$6); //@line 128 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 129 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_rawlen($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $t;
 $1=$L;
 var $2=$1; //@line 134 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_lua_type($2,1); //@line 134 "lib/lua-5.2.3/src/lbaselib.c"
 $t=$3; //@line 134 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$t; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=($4|0)==5; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 if($5){var $14=1;label=4;break;}else{label=2;break;} //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $7=$t; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=($7|0)==4; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 if($8){var $14=1;label=4;break;}else{label=3;break;} //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $10=$1; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=_luaL_argerror($10,1,8360); //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=($11|0)!=0; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$12;label=4;break; //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $14;
 var $15=($14&1); //@line 135 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$1; //@line 137 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$1; //@line 137 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=_lua_rawlen($17,1); //@line 137 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($16,$18); //@line 137 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 138 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_rawget($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 143 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($2,1,5); //@line 143 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 144 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($3,2); //@line 144 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 145 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($4,2); //@line 145 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 146 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_rawget($5,1); //@line 146 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 147 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_rawset($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 151 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($2,1,5); //@line 151 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 152 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($3,2); //@line 152 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 153 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($4,3); //@line 153 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 154 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($5,3); //@line 154 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$1; //@line 155 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_rawset($6,1); //@line 155 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 156 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_select($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 var $i;
 $2=$L;
 var $3=$2; //@line 354 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_lua_gettop($3); //@line 354 "lib/lua-5.2.3/src/lbaselib.c"
 $n=$4; //@line 354 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$2; //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=_lua_type($5,1); //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=($6|0)==4; //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 if($7){label=2;break;}else{label=4;break;} //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $9=$2; //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=_lua_tolstring($9,1,0); //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=HEAP8[($10)]; //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=(($11<<24)>>24); //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=($12|0)==35; //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 if($13){label=3;break;}else{label=4;break;} //@line 355 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $15=$2; //@line 356 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$n; //@line 356 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=((($16)-(1))|0); //@line 356 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($15,$17); //@line 356 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 357 "lib/lua-5.2.3/src/lbaselib.c"
 label=12;break; //@line 357 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $19=$2; //@line 360 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=_luaL_checkinteger($19,1); //@line 360 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$20; //@line 360 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=$i; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=($21|0)<0; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 if($22){label=5;break;}else{label=6;break;} //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 var $24=$n; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 var $25=$i; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 var $26=((($24)+($25))|0); //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$26; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 label=9;break; //@line 361 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 var $28=$i; //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 var $29=$n; //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 var $30=($28|0)>($29|0); //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 if($30){label=7;break;}else{label=8;break;} //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $32=$n; //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$32; //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 label=8;break; //@line 362 "lib/lua-5.2.3/src/lbaselib.c"
 case 8: 
 label=9;break;
 case 9: 
 var $35=$i; //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 var $36=1<=($35|0); //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 if($36){var $42=1;label=11;break;}else{label=10;break;} //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 case 10: 
 var $38=$2; //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 var $39=_luaL_argerror($38,1,8664); //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 var $40=($39|0)!=0; //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 var $42=$40;label=11;break; //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 case 11: 
 var $42;
 var $43=($42&1); //@line 363 "lib/lua-5.2.3/src/lbaselib.c"
 var $44=$n; //@line 364 "lib/lua-5.2.3/src/lbaselib.c"
 var $45=$i; //@line 364 "lib/lua-5.2.3/src/lbaselib.c"
 var $46=((($44)-($45))|0); //@line 364 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$46; //@line 364 "lib/lua-5.2.3/src/lbaselib.c"
 label=12;break; //@line 364 "lib/lua-5.2.3/src/lbaselib.c"
 case 12: 
 var $48=$1; //@line 366 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $48; //@line 366 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_setmetatable($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $t;
 $2=$L;
 var $3=$2; //@line 113 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_lua_type($3,2); //@line 113 "lib/lua-5.2.3/src/lbaselib.c"
 $t=$4; //@line 113 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$2; //@line 114 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($5,1,5); //@line 114 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$t; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=($6|0)==0; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 if($7){var $16=1;label=4;break;}else{label=2;break;} //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $9=$t; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=($9|0)==5; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 if($10){var $16=1;label=4;break;}else{label=3;break;} //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $12=$2; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=_luaL_argerror($12,2,9456); //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=($13|0)!=0; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$14;label=4;break; //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $16;
 var $17=($16&1); //@line 115 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=$2; //@line 117 "lib/lua-5.2.3/src/lbaselib.c"
 var $19=_luaL_getmetafield($18,1,9248); //@line 117 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=($19|0)!=0; //@line 117 "lib/lua-5.2.3/src/lbaselib.c"
 if($20){label=5;break;}else{label=6;break;} //@line 117 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 var $22=$2; //@line 118 "lib/lua-5.2.3/src/lbaselib.c"
 var $23=_luaL_error($22,8952,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 118 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$23; //@line 118 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break; //@line 118 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 var $25=$2; //@line 119 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($25,2); //@line 119 "lib/lua-5.2.3/src/lbaselib.c"
 var $26=$2; //@line 120 "lib/lua-5.2.3/src/lbaselib.c"
 var $27=_lua_setmetatable($26,1); //@line 120 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 121 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break; //@line 121 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $29=$1; //@line 122 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $29; //@line 122 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_tonumber($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $isnum=sp;
 var $n;
 var $l=(sp)+(8);
 var $s;
 var $e;
 var $base;
 var $neg;
 var $n1;
 var $digit;
 $2=$L;
 var $3=$2; //@line 49 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_lua_type($3,2); //@line 49 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=($4|0)<=0; //@line 49 "lib/lua-5.2.3/src/lbaselib.c"
 if($5){label=2;break;}else{label=5;break;} //@line 49 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $7=$2; //@line 51 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_lua_tonumberx($7,1,$isnum); //@line 51 "lib/lua-5.2.3/src/lbaselib.c"
 $n=$8; //@line 51 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=HEAP32[(($isnum)>>2)]; //@line 52 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=($9|0)!=0; //@line 52 "lib/lua-5.2.3/src/lbaselib.c"
 if($10){label=3;break;}else{label=4;break;} //@line 52 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $12=$2; //@line 53 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$n; //@line 53 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnumber($12,$13); //@line 53 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 54 "lib/lua-5.2.3/src/lbaselib.c"
 label=30;break; //@line 54 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $15=$2; //@line 56 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($15,1); //@line 56 "lib/lua-5.2.3/src/lbaselib.c"
 label=29;break; //@line 57 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 var $17=$2; //@line 60 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=_luaL_checklstring($17,1,$l); //@line 60 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$18; //@line 60 "lib/lua-5.2.3/src/lbaselib.c"
 var $19=$s; //@line 61 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=HEAP32[(($l)>>2)]; //@line 61 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=(($19+$20)|0); //@line 61 "lib/lua-5.2.3/src/lbaselib.c"
 $e=$21; //@line 61 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=$2; //@line 62 "lib/lua-5.2.3/src/lbaselib.c"
 var $23=_luaL_checkinteger($22,2); //@line 62 "lib/lua-5.2.3/src/lbaselib.c"
 $base=$23; //@line 62 "lib/lua-5.2.3/src/lbaselib.c"
 $neg=0; //@line 63 "lib/lua-5.2.3/src/lbaselib.c"
 var $24=$base; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $25=2<=($24|0); //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 if($25){label=6;break;}else{label=7;break;} //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 var $27=$base; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $28=($27|0)<=36; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 if($28){var $34=1;label=8;break;}else{label=7;break;} //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $30=$2; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $31=_luaL_argerror($30,2,9936); //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $32=($31|0)!=0; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $34=$32;label=8;break; //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 case 8: 
 var $34;
 var $35=($34&1); //@line 64 "lib/lua-5.2.3/src/lbaselib.c"
 var $36=$s; //@line 65 "lib/lua-5.2.3/src/lbaselib.c"
 var $37=_strspn($36,9728); //@line 65 "lib/lua-5.2.3/src/lbaselib.c"
 var $38=$s; //@line 65 "lib/lua-5.2.3/src/lbaselib.c"
 var $39=(($38+$37)|0); //@line 65 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$39; //@line 65 "lib/lua-5.2.3/src/lbaselib.c"
 var $40=$s; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 var $41=HEAP8[($40)]; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 var $42=(($41<<24)>>24); //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 var $43=($42|0)==45; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 if($43){label=9;break;}else{label=10;break;} //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 case 9: 
 var $45=$s; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 var $46=(($45+1)|0); //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$46; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 $neg=1; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 label=13;break; //@line 66 "lib/lua-5.2.3/src/lbaselib.c"
 case 10: 
 var $48=$s; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 var $49=HEAP8[($48)]; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 var $50=(($49<<24)>>24); //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 var $51=($50|0)==43; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 if($51){label=11;break;}else{label=12;break;} //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 case 11: 
 var $53=$s; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 var $54=(($53+1)|0); //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$54; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 label=12;break; //@line 67 "lib/lua-5.2.3/src/lbaselib.c"
 case 12: 
 label=13;break;
 case 13: 
 var $57=$s; //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 var $58=HEAP8[($57)]; //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 var $59=($58&255); //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 var $60=_isalnum($59); //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 var $61=($60|0)!=0; //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 if($61){label=14;break;}else{label=28;break;} //@line 68 "lib/lua-5.2.3/src/lbaselib.c"
 case 14: 
 $n1=0; //@line 69 "lib/lua-5.2.3/src/lbaselib.c"
 label=15;break; //@line 70 "lib/lua-5.2.3/src/lbaselib.c"
 case 15: 
 var $64=$s; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $65=HEAP8[($64)]; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $66=($65&255); //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $67=_isdigit($66); //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $68=($67|0)!=0; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 if($68){label=16;break;}else{label=17;break;} //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 case 16: 
 var $70=$s; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $71=HEAP8[($70)]; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $72=(($71<<24)>>24); //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $73=((($72)-(48))|0); //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 var $82=$73;label=18;break; //@line 71 "lib/lua-5.2.3/src/lbaselib.c"
 case 17: 
 var $75=$s; //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $76=HEAP8[($75)]; //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $77=($76&255); //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $78=_toupper($77); //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $79=((($78)-(65))|0); //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $80=((($79)+(10))|0); //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $82=$80;label=18;break; //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 case 18: 
 var $82; //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 $digit=$82; //@line 72 "lib/lua-5.2.3/src/lbaselib.c"
 var $83=$digit; //@line 73 "lib/lua-5.2.3/src/lbaselib.c"
 var $84=$base; //@line 73 "lib/lua-5.2.3/src/lbaselib.c"
 var $85=($83|0)>=($84|0); //@line 73 "lib/lua-5.2.3/src/lbaselib.c"
 if($85){label=19;break;}else{label=20;break;} //@line 73 "lib/lua-5.2.3/src/lbaselib.c"
 case 19: 
 label=22;break; //@line 73 "lib/lua-5.2.3/src/lbaselib.c"
 case 20: 
 var $88=$n1; //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $89=$base; //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $90=($89|0); //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $91=($88)*($90); //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $92=$digit; //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $93=($92|0); //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $94=($91)+($93); //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 $n1=$94; //@line 74 "lib/lua-5.2.3/src/lbaselib.c"
 var $95=$s; //@line 75 "lib/lua-5.2.3/src/lbaselib.c"
 var $96=(($95+1)|0); //@line 75 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$96; //@line 75 "lib/lua-5.2.3/src/lbaselib.c"
 label=21;break; //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 case 21: 
 var $98=$s; //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 var $99=HEAP8[($98)]; //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 var $100=($99&255); //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 var $101=_isalnum($100); //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 var $102=($101|0)!=0; //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 if($102){label=15;break;}else{label=22;break;} //@line 76 "lib/lua-5.2.3/src/lbaselib.c"
 case 22: 
 var $104=$s; //@line 77 "lib/lua-5.2.3/src/lbaselib.c"
 var $105=_strspn($104,9728); //@line 77 "lib/lua-5.2.3/src/lbaselib.c"
 var $106=$s; //@line 77 "lib/lua-5.2.3/src/lbaselib.c"
 var $107=(($106+$105)|0); //@line 77 "lib/lua-5.2.3/src/lbaselib.c"
 $s=$107; //@line 77 "lib/lua-5.2.3/src/lbaselib.c"
 var $108=$s; //@line 78 "lib/lua-5.2.3/src/lbaselib.c"
 var $109=$e; //@line 78 "lib/lua-5.2.3/src/lbaselib.c"
 var $110=($108|0)==($109|0); //@line 78 "lib/lua-5.2.3/src/lbaselib.c"
 if($110){label=23;break;}else{label=27;break;} //@line 78 "lib/lua-5.2.3/src/lbaselib.c"
 case 23: 
 var $112=$2; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 var $113=$neg; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 var $114=($113|0)!=0; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 if($114){label=24;break;}else{label=25;break;} //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 case 24: 
 var $116=$n1; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 var $117=((-.0))-($116); //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 var $121=$117;label=26;break; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 case 25: 
 var $119=$n1; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 var $121=$119;label=26;break; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 case 26: 
 var $121; //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnumber($112,$121); //@line 79 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 80 "lib/lua-5.2.3/src/lbaselib.c"
 label=30;break; //@line 80 "lib/lua-5.2.3/src/lbaselib.c"
 case 27: 
 label=28;break; //@line 82 "lib/lua-5.2.3/src/lbaselib.c"
 case 28: 
 label=29;break;
 case 29: 
 var $125=$2; //@line 84 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($125); //@line 84 "lib/lua-5.2.3/src/lbaselib.c"
 $1=1; //@line 85 "lib/lua-5.2.3/src/lbaselib.c"
 label=30;break; //@line 85 "lib/lua-5.2.3/src/lbaselib.c"
 case 30: 
 var $127=$1; //@line 86 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $127; //@line 86 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaB_tostring($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 411 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($2,1); //@line 411 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 412 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=_luaL_tolstring($3,1,0); //@line 412 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 413 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_type($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 190 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkany($2,1); //@line 190 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=$1; //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$1; //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=_lua_type($5,1); //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_lua_typename($4,$6); //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_lua_pushstring($3,$7); //@line 191 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return 1; //@line 192 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaB_xpcall($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $status;
 var $n;
 $1=$L;
 var $2=$1; //@line 400 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_lua_gettop($2); //@line 400 "lib/lua-5.2.3/src/lbaselib.c"
 $n=$3; //@line 400 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$n; //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=($4|0)>=2; //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 if($5){var $11=1;label=3;break;}else{label=2;break;} //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $7=$1; //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_luaL_argerror($7,2,10352); //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=($8|0)!=0; //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$9;label=3;break; //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $11;
 var $12=($11&1); //@line 401 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$1; //@line 402 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($13,1); //@line 402 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$1; //@line 403 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_copy($14,2,1); //@line 403 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$1; //@line 404 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_replace($15,2); //@line 404 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$1; //@line 405 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=$n; //@line 405 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=((($17)-(2))|0); //@line 405 "lib/lua-5.2.3/src/lbaselib.c"
 var $19=_lua_pcallk($16,$18,-1,1,0,262); //@line 405 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$19; //@line 405 "lib/lua-5.2.3/src/lbaselib.c"
 var $20=$1; //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=$status; //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=($21|0)==0; //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
 var $23=($22&1); //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
 var $24=_finishpcall($20,$23); //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $24; //@line 406 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _pcallcont($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $status;
 $1=$L;
 var $2=$1; //@line 383 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_lua_getctx($2,0); //@line 383 "lib/lua-5.2.3/src/lbaselib.c"
 $status=$3; //@line 383 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$status; //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=($5|0)==1; //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=($6&1); //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=_finishpcall($4,$7); //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $8; //@line 384 "lib/lua-5.2.3/src/lbaselib.c"
}


function _finishpcall($L,$status){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$L;
 $3=$status;
 var $4=$2; //@line 370 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=_lua_checkstack($4,1); //@line 370 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=($5|0)!=0; //@line 370 "lib/lua-5.2.3/src/lbaselib.c"
 if($6){label=3;break;}else{label=2;break;} //@line 370 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $8=$2; //@line 371 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($8,0); //@line 371 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$2; //@line 372 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushboolean($9,0); //@line 372 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=$2; //@line 373 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=_lua_pushstring($10,10136); //@line 373 "lib/lua-5.2.3/src/lbaselib.c"
 $1=2; //@line 374 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 374 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $13=$2; //@line 376 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$3; //@line 376 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushboolean($13,$14); //@line 376 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=$2; //@line 377 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_replace($15,1); //@line 377 "lib/lua-5.2.3/src/lbaselib.c"
 var $16=$2; //@line 378 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=_lua_gettop($16); //@line 378 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$17; //@line 378 "lib/lua-5.2.3/src/lbaselib.c"
 label=4;break; //@line 378 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $19=$1; //@line 379 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $19; //@line 379 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _pairsmeta($L,$method,$iszero,$iter){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $1=$L;
 $2=$method;
 $3=$iszero;
 $4=$iter;
 var $5=$1; //@line 198 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$2; //@line 198 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=_luaL_getmetafield($5,1,$6); //@line 198 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=($7|0)!=0; //@line 198 "lib/lua-5.2.3/src/lbaselib.c"
 if($8){label=6;break;}else{label=2;break;} //@line 198 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $10=$1; //@line 199 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($10,1,5); //@line 199 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$1; //@line 200 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=$4; //@line 200 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushcclosure($11,$12,0); //@line 200 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$1; //@line 201 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($13,1); //@line 201 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$3; //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=($14|0)!=0; //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 if($15){label=3;break;}else{label=4;break;} //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $17=$1; //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($17,0); //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 202 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $19=$1; //@line 203 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($19); //@line 203 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break;
 case 5: 
 label=7;break; //@line 204 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 var $22=$1; //@line 206 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($22,1); //@line 206 "lib/lua-5.2.3/src/lbaselib.c"
 var $23=$1; //@line 207 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_callk($23,1,3,0,0); //@line 207 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break;
 case 7: 
 STACKTOP=sp;return 3; //@line 209 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _generic_reader($L,$ud,$size){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$ud;
 $4=$size;
 var $5=$3; //@line 293 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=$2; //@line 294 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checkstack($6,2,7448); //@line 294 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=$2; //@line 295 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($7,1); //@line 295 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=$2; //@line 296 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_callk($8,0,1,0,0); //@line 296 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$2; //@line 297 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=_lua_type($9,-1); //@line 297 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=($10|0)==0; //@line 297 "lib/lua-5.2.3/src/lbaselib.c"
 if($11){label=2;break;}else{label=3;break;} //@line 297 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $13=$2; //@line 298 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($13,-2); //@line 298 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=$4; //@line 299 "lib/lua-5.2.3/src/lbaselib.c"
 HEAP32[(($14)>>2)]=0; //@line 299 "lib/lua-5.2.3/src/lbaselib.c"
 $1=0; //@line 300 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break; //@line 300 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $16=$2; //@line 302 "lib/lua-5.2.3/src/lbaselib.c"
 var $17=_lua_isstring($16,-1); //@line 302 "lib/lua-5.2.3/src/lbaselib.c"
 var $18=($17|0)!=0; //@line 302 "lib/lua-5.2.3/src/lbaselib.c"
 if($18){label=5;break;}else{label=4;break;} //@line 302 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $20=$2; //@line 303 "lib/lua-5.2.3/src/lbaselib.c"
 var $21=_luaL_error($20,7120,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 303 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 303 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 label=6;break;
 case 6: 
 var $24=$2; //@line 304 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_replace($24,5); //@line 304 "lib/lua-5.2.3/src/lbaselib.c"
 var $25=$2; //@line 305 "lib/lua-5.2.3/src/lbaselib.c"
 var $26=$4; //@line 305 "lib/lua-5.2.3/src/lbaselib.c"
 var $27=_lua_tolstring($25,5,$26); //@line 305 "lib/lua-5.2.3/src/lbaselib.c"
 $1=$27; //@line 305 "lib/lua-5.2.3/src/lbaselib.c"
 label=7;break; //@line 305 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $29=$1; //@line 306 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $29; //@line 306 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _load_aux($L,$status,$envidx){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$status;
 $4=$envidx;
 var $5=$3; //@line 246 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=($5|0)==0; //@line 246 "lib/lua-5.2.3/src/lbaselib.c"
 if($6){label=2;break;}else{label=7;break;} //@line 246 "lib/lua-5.2.3/src/lbaselib.c"
 case 2: 
 var $8=$4; //@line 247 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=($8|0)!=0; //@line 247 "lib/lua-5.2.3/src/lbaselib.c"
 if($9){label=3;break;}else{label=6;break;} //@line 247 "lib/lua-5.2.3/src/lbaselib.c"
 case 3: 
 var $11=$2; //@line 248 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=$4; //@line 248 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushvalue($11,$12); //@line 248 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=$2; //@line 249 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=_lua_setupvalue($13,-2,1); //@line 249 "lib/lua-5.2.3/src/lbaselib.c"
 var $15=($14|0)!=0; //@line 249 "lib/lua-5.2.3/src/lbaselib.c"
 if($15){label=5;break;}else{label=4;break;} //@line 249 "lib/lua-5.2.3/src/lbaselib.c"
 case 4: 
 var $17=$2; //@line 250 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_settop($17,-2); //@line 250 "lib/lua-5.2.3/src/lbaselib.c"
 label=5;break; //@line 250 "lib/lua-5.2.3/src/lbaselib.c"
 case 5: 
 label=6;break; //@line 251 "lib/lua-5.2.3/src/lbaselib.c"
 case 6: 
 $1=1; //@line 252 "lib/lua-5.2.3/src/lbaselib.c"
 label=8;break; //@line 252 "lib/lua-5.2.3/src/lbaselib.c"
 case 7: 
 var $21=$2; //@line 255 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushnil($21); //@line 255 "lib/lua-5.2.3/src/lbaselib.c"
 var $22=$2; //@line 256 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_insert($22,-2); //@line 256 "lib/lua-5.2.3/src/lbaselib.c"
 $1=2; //@line 257 "lib/lua-5.2.3/src/lbaselib.c"
 label=8;break; //@line 257 "lib/lua-5.2.3/src/lbaselib.c"
 case 8: 
 var $24=$1; //@line 259 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $24; //@line 259 "lib/lua-5.2.3/src/lbaselib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _ipairsaux($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $i;
 $1=$L;
 var $2=$1; //@line 231 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_luaL_checkinteger($2,2); //@line 231 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$3; //@line 231 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=$1; //@line 232 "lib/lua-5.2.3/src/lbaselib.c"
 _luaL_checktype($4,1,5); //@line 232 "lib/lua-5.2.3/src/lbaselib.c"
 var $5=$i; //@line 233 "lib/lua-5.2.3/src/lbaselib.c"
 var $6=((($5)+(1))|0); //@line 233 "lib/lua-5.2.3/src/lbaselib.c"
 $i=$6; //@line 233 "lib/lua-5.2.3/src/lbaselib.c"
 var $7=$1; //@line 234 "lib/lua-5.2.3/src/lbaselib.c"
 var $8=$i; //@line 234 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_pushinteger($7,$8); //@line 234 "lib/lua-5.2.3/src/lbaselib.c"
 var $9=$1; //@line 235 "lib/lua-5.2.3/src/lbaselib.c"
 var $10=$i; //@line 235 "lib/lua-5.2.3/src/lbaselib.c"
 _lua_rawgeti($9,1,$10); //@line 235 "lib/lua-5.2.3/src/lbaselib.c"
 var $11=$1; //@line 236 "lib/lua-5.2.3/src/lbaselib.c"
 var $12=_lua_type($11,-1); //@line 236 "lib/lua-5.2.3/src/lbaselib.c"
 var $13=($12|0)==0; //@line 236 "lib/lua-5.2.3/src/lbaselib.c"
 var $14=($13?1:2); //@line 236 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $14; //@line 236 "lib/lua-5.2.3/src/lbaselib.c"
}


function _dofilecont($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 332 "lib/lua-5.2.3/src/lbaselib.c"
 var $3=_lua_gettop($2); //@line 332 "lib/lua-5.2.3/src/lbaselib.c"
 var $4=((($3)-(1))|0); //@line 332 "lib/lua-5.2.3/src/lbaselib.c"
 STACKTOP=sp;return $4; //@line 332 "lib/lua-5.2.3/src/lbaselib.c"
}


function _luaC_barrier_($L,$o,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $g;
 $1=$L;
 $2=$o;
 $3=$v;
 var $4=$1; //@line 136 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+12)|0); //@line 136 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 136 "lib/lua-5.2.3/src/lgc.c"
 $g=$6; //@line 136 "lib/lua-5.2.3/src/lgc.c"
 var $7=$g; //@line 140 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+61)|0); //@line 140 "lib/lua-5.2.3/src/lgc.c"
 var $9=HEAP8[($8)]; //@line 140 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9&255); //@line 140 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10|0)<=1; //@line 140 "lib/lua-5.2.3/src/lgc.c"
 if($11){label=2;break;}else{label=3;break;} //@line 140 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $13=$g; //@line 141 "lib/lua-5.2.3/src/lgc.c"
 var $14=$3; //@line 141 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($13,$14); //@line 141 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 141 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $16=$2; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17+5)|0); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $19=HEAP8[($18)]; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $20=($19&255); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $21=$20&-72; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $22=$g; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+60)|0); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $24=HEAP8[($23)]; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $25=($24&255); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25&3; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26)&255); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $28=($27&255); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $29=$21|$28; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $30=(($29)&255); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $31=$2; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+5)|0); //@line 144 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($33)]=$30; //@line 144 "lib/lua-5.2.3/src/lgc.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 146 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _reallymarkobject($g,$o){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $size;
 var $mt;
 var $uv;
 $1=$g;
 $2=$o;
 var $3=$2; //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $4=$3; //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+5)|0); //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP8[($5)]; //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $7=($6&255); //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $8=$7&252; //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8)&255); //@line 245 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($5)]=$9; //@line 245 "lib/lua-5.2.3/src/lgc.c"
 var $10=$2; //@line 246 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10; //@line 246 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+4)|0); //@line 246 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP8[($12)]; //@line 246 "lib/lua-5.2.3/src/lgc.c"
 var $14=($13&255); //@line 246 "lib/lua-5.2.3/src/lgc.c"
 switch(($14|0)){case 10:{ label=10;break;}case 6:{ label=16;break;}case 38:{ label=17;break;}case 5:{ label=18;break;}case 8:{ label=19;break;}case 4:case 20:{ label=2;break;}case 9:{ label=20;break;}case 7:{ label=3;break;}default:{label=21;break;}}break;
 case 2: 
 var $16=$2; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+12)|0); //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $20=HEAP32[(($19)>>2)]; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $21=((($20)+(1))|0); //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $22=$21; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 var $23=((($22)+(16))|0); //@line 249 "lib/lua-5.2.3/src/lgc.c"
 $size=$23; //@line 249 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 250 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $25=$2; //@line 253 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25; //@line 253 "lib/lua-5.2.3/src/lgc.c"
 var $27=$26; //@line 253 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+8)|0); //@line 253 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP32[(($28)>>2)]; //@line 253 "lib/lua-5.2.3/src/lgc.c"
 $mt=$29; //@line 253 "lib/lua-5.2.3/src/lgc.c"
 var $30=$mt; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $31=($30|0)!=0; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 if($31){label=4;break;}else{label=6;break;} //@line 254 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $33=$mt; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $34=$33; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $36=(($35+5)|0); //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $37=HEAP8[($36)]; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $38=($37&255); //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $39=$38&3; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39|0)!=0; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 if($40){label=5;break;}else{label=6;break;} //@line 254 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $42=$1; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $43=$mt; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 var $44=$43; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($42,$44); //@line 254 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 254 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $46=$2; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $47=$46; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $48=$47; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+12)|0); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $51=($50|0)!=0; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 if($51){label=7;break;}else{label=9;break;} //@line 255 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $53=$2; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $54=$53; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $55=$54; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55+12)|0); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $57=HEAP32[(($56)>>2)]; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $58=$57; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $59=$58; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $60=(($59+5)|0); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $61=HEAP8[($60)]; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $62=($61&255); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $63=$62&3; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $64=($63|0)!=0; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 if($64){label=8;break;}else{label=9;break;} //@line 255 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $66=$1; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $67=$2; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $68=$67; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $69=$68; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $70=(($69+12)|0); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $71=HEAP32[(($70)>>2)]; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 var $72=$71; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($66,$72); //@line 255 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 255 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $74=$2; //@line 256 "lib/lua-5.2.3/src/lgc.c"
 var $75=$74; //@line 256 "lib/lua-5.2.3/src/lgc.c"
 var $76=$75; //@line 256 "lib/lua-5.2.3/src/lgc.c"
 var $77=(($76+16)|0); //@line 256 "lib/lua-5.2.3/src/lgc.c"
 var $78=HEAP32[(($77)>>2)]; //@line 256 "lib/lua-5.2.3/src/lgc.c"
 var $79=((($78)+(24))|0); //@line 256 "lib/lua-5.2.3/src/lgc.c"
 $size=$79; //@line 256 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 257 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $81=$2; //@line 260 "lib/lua-5.2.3/src/lgc.c"
 var $82=$81; //@line 260 "lib/lua-5.2.3/src/lgc.c"
 $uv=$82; //@line 260 "lib/lua-5.2.3/src/lgc.c"
 var $83=$uv; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $84=(($83+8)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $85=HEAP32[(($84)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $86=(($85+8)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $87=HEAP32[(($86)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $88=$87&64; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $89=($88|0)!=0; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 if($89){label=11;break;}else{label=13;break;} //@line 261 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $91=$uv; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $92=(($91+8)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $93=HEAP32[(($92)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $94=(($93)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $95=$94; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $96=HEAP32[(($95)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $97=$96; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $98=(($97+5)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $99=HEAP8[($98)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $100=($99&255); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $101=$100&3; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $102=($101|0)!=0; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 if($102){label=12;break;}else{label=13;break;} //@line 261 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $104=$1; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $105=$uv; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $106=(($105+8)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $107=HEAP32[(($106)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $108=(($107)|0); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $109=$108; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 var $110=HEAP32[(($109)>>2)]; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($104,$110); //@line 261 "lib/lua-5.2.3/src/lgc.c"
 label=13;break; //@line 261 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $112=$uv; //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $113=(($112+8)|0); //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $114=HEAP32[(($113)>>2)]; //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $115=$uv; //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $116=(($115+16)|0); //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $117=$116; //@line 262 "lib/lua-5.2.3/src/lgc.c"
 var $118=($114|0)!=($117|0); //@line 262 "lib/lua-5.2.3/src/lgc.c"
 if($118){label=14;break;}else{label=15;break;} //@line 262 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 label=23;break; //@line 263 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 $size=32; //@line 264 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 265 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $122=$1; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $123=(($122+84)|0); //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $124=HEAP32[(($123)>>2)]; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $125=$2; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $126=$125; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $127=$126; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $128=(($127+8)|0); //@line 268 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($128)>>2)]=$124; //@line 268 "lib/lua-5.2.3/src/lgc.c"
 var $129=$2; //@line 269 "lib/lua-5.2.3/src/lgc.c"
 var $130=$1; //@line 269 "lib/lua-5.2.3/src/lgc.c"
 var $131=(($130+84)|0); //@line 269 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($131)>>2)]=$129; //@line 269 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 270 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $133=$1; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $134=(($133+84)|0); //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $135=HEAP32[(($134)>>2)]; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $136=$2; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $137=$136; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $138=$137; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $139=(($138+8)|0); //@line 273 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($139)>>2)]=$135; //@line 273 "lib/lua-5.2.3/src/lgc.c"
 var $140=$2; //@line 274 "lib/lua-5.2.3/src/lgc.c"
 var $141=$1; //@line 274 "lib/lua-5.2.3/src/lgc.c"
 var $142=(($141+84)|0); //@line 274 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($142)>>2)]=$140; //@line 274 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 275 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $144=$1; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $145=(($144+84)|0); //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $146=HEAP32[(($145)>>2)]; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $147=$2; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $148=$147; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $149=(($148+24)|0); //@line 278 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($149)>>2)]=$146; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $150=$2; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $151=$150; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $152=$151; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $153=$1; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 var $154=(($153+84)|0); //@line 278 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($154)>>2)]=$152; //@line 278 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 279 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $156=$1; //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $157=(($156+84)|0); //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $158=HEAP32[(($157)>>2)]; //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $159=$2; //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $160=$159; //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $161=(($160+60)|0); //@line 282 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($161)>>2)]=$158; //@line 282 "lib/lua-5.2.3/src/lgc.c"
 var $162=$2; //@line 283 "lib/lua-5.2.3/src/lgc.c"
 var $163=$1; //@line 283 "lib/lua-5.2.3/src/lgc.c"
 var $164=(($163+84)|0); //@line 283 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($164)>>2)]=$162; //@line 283 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 284 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 var $166=$1; //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $167=(($166+84)|0); //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $168=HEAP32[(($167)>>2)]; //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $169=$2; //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $170=$169; //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $171=(($170+72)|0); //@line 287 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($171)>>2)]=$168; //@line 287 "lib/lua-5.2.3/src/lgc.c"
 var $172=$2; //@line 288 "lib/lua-5.2.3/src/lgc.c"
 var $173=$1; //@line 288 "lib/lua-5.2.3/src/lgc.c"
 var $174=(($173+84)|0); //@line 288 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($174)>>2)]=$172; //@line 288 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 289 "lib/lua-5.2.3/src/lgc.c"
 case 21: 
 label=23;break; //@line 291 "lib/lua-5.2.3/src/lgc.c"
 case 22: 
 var $177=$2; //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $178=$177; //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $179=(($178+5)|0); //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $180=HEAP8[($179)]; //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $181=($180&255); //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $182=$181|4; //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $183=(($182)&255); //@line 293 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($179)]=$183; //@line 293 "lib/lua-5.2.3/src/lgc.c"
 var $184=$size; //@line 294 "lib/lua-5.2.3/src/lgc.c"
 var $185=$1; //@line 294 "lib/lua-5.2.3/src/lgc.c"
 var $186=(($185+16)|0); //@line 294 "lib/lua-5.2.3/src/lgc.c"
 var $187=HEAP32[(($186)>>2)]; //@line 294 "lib/lua-5.2.3/src/lgc.c"
 var $188=((($187)+($184))|0); //@line 294 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($186)>>2)]=$188; //@line 294 "lib/lua-5.2.3/src/lgc.c"
 label=23;break; //@line 295 "lib/lua-5.2.3/src/lgc.c"
 case 23: 
 STACKTOP=sp;return; //@line 295 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_barrierback_($L,$o){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $g;
 $1=$L;
 $2=$o;
 var $3=$1; //@line 156 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 156 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 156 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 156 "lib/lua-5.2.3/src/lgc.c"
 var $6=$2; //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $7=$6; //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+5)|0); //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $9=HEAP8[($8)]; //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9&255); //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10&251; //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11)&255); //@line 158 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($8)]=$12; //@line 158 "lib/lua-5.2.3/src/lgc.c"
 var $13=$g; //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+88)|0); //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $16=$2; //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17+24)|0); //@line 159 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($18)>>2)]=$15; //@line 159 "lib/lua-5.2.3/src/lgc.c"
 var $19=$2; //@line 160 "lib/lua-5.2.3/src/lgc.c"
 var $20=$g; //@line 160 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+88)|0); //@line 160 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($21)>>2)]=$19; //@line 160 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 161 "lib/lua-5.2.3/src/lgc.c"
}


function _luaC_barrierproto_($L,$p,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $g;
 $1=$L;
 $2=$p;
 $3=$c;
 var $4=$1; //@line 173 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+12)|0); //@line 173 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 173 "lib/lua-5.2.3/src/lgc.c"
 $g=$6; //@line 173 "lib/lua-5.2.3/src/lgc.c"
 var $7=$2; //@line 175 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+32)|0); //@line 175 "lib/lua-5.2.3/src/lgc.c"
 var $9=HEAP32[(($8)>>2)]; //@line 175 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9|0)==0; //@line 175 "lib/lua-5.2.3/src/lgc.c"
 if($10){label=2;break;}else{label=6;break;} //@line 175 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $12=$3; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $13=$12; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $14=$13; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+5)|0); //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP8[($15)]; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16&255); //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17&3; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18|0)!=0; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 if($19){label=3;break;}else{label=5;break;} //@line 176 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $21=$2; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $22=$21; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $23=$22; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+5)|0); //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $25=HEAP8[($24)]; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $26=($25&255); //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $27=$26&4; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $28=($27|0)!=0; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 if($28){label=4;break;}else{label=5;break;} //@line 176 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $30=$1; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $31=$2; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $33=$3; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 var $34=$33; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 _luaC_barrier_($30,$32,$34); //@line 176 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 176 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 label=7;break; //@line 177 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $37=$2; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $38=$37; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $39=$38; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $40=(($39+5)|0); //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP8[($40)]; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41&255); //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $43=$42&251; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $44=(($43)&255); //@line 179 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($40)]=$44; //@line 179 "lib/lua-5.2.3/src/lgc.c"
 var $45=$g; //@line 180 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+88)|0); //@line 180 "lib/lua-5.2.3/src/lgc.c"
 var $47=HEAP32[(($46)>>2)]; //@line 180 "lib/lua-5.2.3/src/lgc.c"
 var $48=$2; //@line 180 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+72)|0); //@line 180 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($49)>>2)]=$47; //@line 180 "lib/lua-5.2.3/src/lgc.c"
 var $50=$2; //@line 181 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 181 "lib/lua-5.2.3/src/lgc.c"
 var $52=$g; //@line 181 "lib/lua-5.2.3/src/lgc.c"
 var $53=(($52+88)|0); //@line 181 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($53)>>2)]=$51; //@line 181 "lib/lua-5.2.3/src/lgc.c"
 label=7;break;
 case 7: 
 STACKTOP=sp;return; //@line 183 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_checkupvalcolor($g,$uv){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $o;
 $1=$g;
 $2=$uv;
 var $3=$2; //@line 191 "lib/lua-5.2.3/src/lgc.c"
 var $4=$3; //@line 191 "lib/lua-5.2.3/src/lgc.c"
 $o=$4; //@line 191 "lib/lua-5.2.3/src/lgc.c"
 var $5=$o; //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $6=$5; //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+5)|0); //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP8[($7)]; //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8&255); //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $10=$9&7; //@line 193 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10|0)!=0; //@line 193 "lib/lua-5.2.3/src/lgc.c"
 if($11){label=10;break;}else{label=2;break;} //@line 193 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $13=$1; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+62)|0); //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP8[($14)]; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15&255); //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16|0)==2; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=4;break;}else{label=3;break;} //@line 194 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=$1; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+61)|0); //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $21=HEAP8[($20)]; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $22=($21&255); //@line 194 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22|0)<=1; //@line 194 "lib/lua-5.2.3/src/lgc.c"
 if($23){label=4;break;}else{label=8;break;} //@line 194 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $25=$o; //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25; //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26+5)|0); //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $28=HEAP8[($27)]; //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $29=($28&255); //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $30=$29&191; //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30)&255); //@line 195 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($27)]=$31; //@line 195 "lib/lua-5.2.3/src/lgc.c"
 var $32=$o; //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $33=$32; //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33+5)|0); //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $35=HEAP8[($34)]; //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $36=($35&255); //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36|4; //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37)&255); //@line 196 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($34)]=$38; //@line 196 "lib/lua-5.2.3/src/lgc.c"
 var $39=$2; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $40=(($39+8)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP32[(($40)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41+8)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $43=HEAP32[(($42)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $44=$43&64; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $45=($44|0)!=0; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 if($45){label=5;break;}else{label=7;break;} //@line 197 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $47=$2; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $48=(($47+8)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $49=HEAP32[(($48)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $50=(($49)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP32[(($51)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $53=$52; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $54=(($53+5)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $55=HEAP8[($54)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $56=($55&255); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $57=$56&3; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $58=($57|0)!=0; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 if($58){label=6;break;}else{label=7;break;} //@line 197 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $60=$1; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $61=$2; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $62=(($61+8)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $63=HEAP32[(($62)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $64=(($63)|0); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $65=$64; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 var $66=HEAP32[(($65)>>2)]; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($60,$66); //@line 197 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 197 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 label=9;break; //@line 198 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $69=$o; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $70=$69; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $71=(($70+5)|0); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $72=HEAP8[($71)]; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $73=($72&255); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $74=$73&-72; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $75=$1; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $76=(($75+60)|0); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $77=HEAP8[($76)]; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $78=($77&255); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $79=$78&3; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $80=(($79)&255); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $81=($80&255); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $82=$74|$81; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $83=(($82)&255); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $84=$o; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $85=$84; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 var $86=(($85+5)|0); //@line 201 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($86)]=$83; //@line 201 "lib/lua-5.2.3/src/lgc.c"
 label=9;break;
 case 9: 
 label=10;break; //@line 203 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 STACKTOP=sp;return; //@line 204 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_newobj($L,$tt,$sz,$list,$offset){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $g;
 var $raw;
 var $o;
 $1=$L;
 $2=$tt;
 $3=$sz;
 $4=$list;
 $5=$offset;
 var $6=$1; //@line 214 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+12)|0); //@line 214 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP32[(($7)>>2)]; //@line 214 "lib/lua-5.2.3/src/lgc.c"
 $g=$8; //@line 214 "lib/lua-5.2.3/src/lgc.c"
 var $9=$1; //@line 215 "lib/lua-5.2.3/src/lgc.c"
 var $10=$2; //@line 215 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10&15; //@line 215 "lib/lua-5.2.3/src/lgc.c"
 var $12=$3; //@line 215 "lib/lua-5.2.3/src/lgc.c"
 var $13=_luaM_realloc_($9,0,$11,$12); //@line 215 "lib/lua-5.2.3/src/lgc.c"
 $raw=$13; //@line 215 "lib/lua-5.2.3/src/lgc.c"
 var $14=$raw; //@line 216 "lib/lua-5.2.3/src/lgc.c"
 var $15=$5; //@line 216 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($14+$15)|0); //@line 216 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 216 "lib/lua-5.2.3/src/lgc.c"
 $o=$17; //@line 216 "lib/lua-5.2.3/src/lgc.c"
 var $18=$4; //@line 217 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18|0)==0; //@line 217 "lib/lua-5.2.3/src/lgc.c"
 if($19){label=2;break;}else{label=3;break;} //@line 217 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $21=$g; //@line 218 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+68)|0); //@line 218 "lib/lua-5.2.3/src/lgc.c"
 $4=$22; //@line 218 "lib/lua-5.2.3/src/lgc.c"
 label=3;break; //@line 218 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $24=$g; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24+60)|0); //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $26=HEAP8[($25)]; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $27=($26&255); //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $28=$27&3; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $29=(($28)&255); //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $30=$o; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+5)|0); //@line 219 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($32)]=$29; //@line 219 "lib/lua-5.2.3/src/lgc.c"
 var $33=$2; //@line 220 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33)&255); //@line 220 "lib/lua-5.2.3/src/lgc.c"
 var $35=$o; //@line 220 "lib/lua-5.2.3/src/lgc.c"
 var $36=$35; //@line 220 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+4)|0); //@line 220 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($37)]=$34; //@line 220 "lib/lua-5.2.3/src/lgc.c"
 var $38=$4; //@line 221 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP32[(($38)>>2)]; //@line 221 "lib/lua-5.2.3/src/lgc.c"
 var $40=$o; //@line 221 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40; //@line 221 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41)|0); //@line 221 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($42)>>2)]=$39; //@line 221 "lib/lua-5.2.3/src/lgc.c"
 var $43=$o; //@line 222 "lib/lua-5.2.3/src/lgc.c"
 var $44=$4; //@line 222 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($44)>>2)]=$43; //@line 222 "lib/lua-5.2.3/src/lgc.c"
 var $45=$o; //@line 223 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $45; //@line 223 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_checkfinalizer($L,$o,$mt){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $g;
 var $p;
 var $ho;
 $1=$L;
 $2=$o;
 $3=$mt;
 var $4=$1; //@line 874 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+12)|0); //@line 874 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 874 "lib/lua-5.2.3/src/lgc.c"
 $g=$6; //@line 874 "lib/lua-5.2.3/src/lgc.c"
 var $7=$2; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $8=$7; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+5)|0); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP8[($9)]; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10&255); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $12=$11&16; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $13=($12|0)!=0; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 if($13){label=10;break;}else{label=2;break;} //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $15=$2; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $16=$15; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+5)|0); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP8[($17)]; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18&255); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $20=$19&8; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $21=($20|0)!=0; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 if($21){label=10;break;}else{label=3;break;} //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $23=$3; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $24=($23|0)==0; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 if($24){label=4;break;}else{label=5;break;} //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $44=0;label=9;break; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $27=$3; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+6)|0); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP8[($28)]; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29&255); //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30&4; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 var $32=($31|0)!=0; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 if($32){label=6;break;}else{label=7;break;} //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $42=0;label=8;break; //@line 875 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $35=$3; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $36=$g; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+184)|0); //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+8)|0); //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP32[(($38)>>2)]; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $40=_luaT_gettm($35,2,$39); //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $42=$40;label=8;break; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $42; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $44=$42;label=9;break; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $44; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 var $45=($44|0)==0; //@line 877 "lib/lua-5.2.3/src/lgc.c"
 if($45){label=10;break;}else{label=11;break;} //@line 877 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 label=21;break; //@line 878 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $48=$2; //@line 881 "lib/lua-5.2.3/src/lgc.c"
 var $49=$48; //@line 881 "lib/lua-5.2.3/src/lgc.c"
 $ho=$49; //@line 881 "lib/lua-5.2.3/src/lgc.c"
 var $50=$g; //@line 882 "lib/lua-5.2.3/src/lgc.c"
 var $51=(($50+76)|0); //@line 882 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP32[(($51)>>2)]; //@line 882 "lib/lua-5.2.3/src/lgc.c"
 var $53=$ho; //@line 882 "lib/lua-5.2.3/src/lgc.c"
 var $54=(($53)|0); //@line 882 "lib/lua-5.2.3/src/lgc.c"
 var $55=($52|0)==($54|0); //@line 882 "lib/lua-5.2.3/src/lgc.c"
 if($55){label=12;break;}else{label=13;break;} //@line 882 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $57=$1; //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $58=$g; //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58+76)|0); //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $60=HEAP32[(($59)>>2)]; //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $61=_sweeptolive($57,$60,0); //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $62=$g; //@line 884 "lib/lua-5.2.3/src/lgc.c"
 var $63=(($62+76)|0); //@line 884 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($63)>>2)]=$61; //@line 884 "lib/lua-5.2.3/src/lgc.c"
 label=13;break; //@line 885 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $65=$g; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $66=(($65+68)|0); //@line 887 "lib/lua-5.2.3/src/lgc.c"
 $p=$66; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $68=$p; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $69=HEAP32[(($68)>>2)]; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $70=$2; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $71=($69|0)!=($70|0); //@line 887 "lib/lua-5.2.3/src/lgc.c"
 if($71){label=15;break;}else{label=17;break;} //@line 887 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 label=16;break; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $74=$p; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $75=HEAP32[(($74)>>2)]; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $76=$75; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 var $77=(($76)|0); //@line 887 "lib/lua-5.2.3/src/lgc.c"
 $p=$77; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 887 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $79=$ho; //@line 888 "lib/lua-5.2.3/src/lgc.c"
 var $80=(($79)|0); //@line 888 "lib/lua-5.2.3/src/lgc.c"
 var $81=HEAP32[(($80)>>2)]; //@line 888 "lib/lua-5.2.3/src/lgc.c"
 var $82=$p; //@line 888 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($82)>>2)]=$81; //@line 888 "lib/lua-5.2.3/src/lgc.c"
 var $83=$g; //@line 889 "lib/lua-5.2.3/src/lgc.c"
 var $84=(($83+72)|0); //@line 889 "lib/lua-5.2.3/src/lgc.c"
 var $85=HEAP32[(($84)>>2)]; //@line 889 "lib/lua-5.2.3/src/lgc.c"
 var $86=$ho; //@line 889 "lib/lua-5.2.3/src/lgc.c"
 var $87=(($86)|0); //@line 889 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($87)>>2)]=$85; //@line 889 "lib/lua-5.2.3/src/lgc.c"
 var $88=$2; //@line 890 "lib/lua-5.2.3/src/lgc.c"
 var $89=$g; //@line 890 "lib/lua-5.2.3/src/lgc.c"
 var $90=(($89+72)|0); //@line 890 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($90)>>2)]=$88; //@line 890 "lib/lua-5.2.3/src/lgc.c"
 var $91=$ho; //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $92=(($91+5)|0); //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $93=HEAP8[($92)]; //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $94=($93&255); //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $95=$94|16; //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $96=(($95)&255); //@line 891 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($92)]=$96; //@line 891 "lib/lua-5.2.3/src/lgc.c"
 var $97=$g; //@line 892 "lib/lua-5.2.3/src/lgc.c"
 var $98=(($97+61)|0); //@line 892 "lib/lua-5.2.3/src/lgc.c"
 var $99=HEAP8[($98)]; //@line 892 "lib/lua-5.2.3/src/lgc.c"
 var $100=($99&255); //@line 892 "lib/lua-5.2.3/src/lgc.c"
 var $101=($100|0)<=1; //@line 892 "lib/lua-5.2.3/src/lgc.c"
 if($101){label=19;break;}else{label=18;break;} //@line 892 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $103=$2; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $104=$103; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $105=(($104+5)|0); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $106=HEAP8[($105)]; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $107=($106&255); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $108=$107&-72; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $109=$g; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $110=(($109+60)|0); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $111=HEAP8[($110)]; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $112=($111&255); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $113=$112&3; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $114=(($113)&255); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $115=($114&255); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $116=$108|$115; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $117=(($116)&255); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $118=$2; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $119=$118; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 var $120=(($119+5)|0); //@line 893 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($120)]=$117; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 label=20;break; //@line 893 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $122=$2; //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $123=$122; //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $124=(($123+5)|0); //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $125=HEAP8[($124)]; //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $126=($125&255); //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $127=$126&191; //@line 895 "lib/lua-5.2.3/src/lgc.c"
 var $128=(($127)&255); //@line 895 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($124)]=$128; //@line 895 "lib/lua-5.2.3/src/lgc.c"
 label=20;break;
 case 20: 
 label=21;break;
 case 21: 
 STACKTOP=sp;return; //@line 897 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _sweeptolive($L,$p,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $old;
 var $i;
 $1=$L;
 $2=$p;
 $3=$n;
 var $4=$2; //@line 759 "lib/lua-5.2.3/src/lgc.c"
 $old=$4; //@line 759 "lib/lua-5.2.3/src/lgc.c"
 $i=0; //@line 760 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 761 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $6=$i; //@line 762 "lib/lua-5.2.3/src/lgc.c"
 var $7=((($6)+(1))|0); //@line 762 "lib/lua-5.2.3/src/lgc.c"
 $i=$7; //@line 762 "lib/lua-5.2.3/src/lgc.c"
 var $8=$1; //@line 763 "lib/lua-5.2.3/src/lgc.c"
 var $9=$2; //@line 763 "lib/lua-5.2.3/src/lgc.c"
 var $10=_sweeplist($8,$9,1); //@line 763 "lib/lua-5.2.3/src/lgc.c"
 $2=$10; //@line 763 "lib/lua-5.2.3/src/lgc.c"
 label=3;break; //@line 764 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $12=$2; //@line 764 "lib/lua-5.2.3/src/lgc.c"
 var $13=$old; //@line 764 "lib/lua-5.2.3/src/lgc.c"
 var $14=($12|0)==($13|0); //@line 764 "lib/lua-5.2.3/src/lgc.c"
 if($14){label=2;break;}else{label=4;break;} //@line 764 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $16=$3; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16|0)!=0; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=5;break;}else{label=6;break;} //@line 765 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $19=$i; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 var $20=$3; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 var $21=HEAP32[(($20)>>2)]; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 var $22=((($21)+($19))|0); //@line 765 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($20)>>2)]=$22; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 765 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $24=$2; //@line 766 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $24; //@line 766 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_changemode($L,$mode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 $1=$L;
 $2=$mode;
 var $3=$1; //@line 953 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 953 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 953 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 953 "lib/lua-5.2.3/src/lgc.c"
 var $6=$2; //@line 954 "lib/lua-5.2.3/src/lgc.c"
 var $7=$g; //@line 954 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+62)|0); //@line 954 "lib/lua-5.2.3/src/lgc.c"
 var $9=HEAP8[($8)]; //@line 954 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9&255); //@line 954 "lib/lua-5.2.3/src/lgc.c"
 var $11=($6|0)==($10|0); //@line 954 "lib/lua-5.2.3/src/lgc.c"
 if($11){label=2;break;}else{label=3;break;} //@line 954 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 label=6;break; //@line 954 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $14=$2; //@line 955 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14|0)==2; //@line 955 "lib/lua-5.2.3/src/lgc.c"
 if($15){label=4;break;}else{label=5;break;} //@line 955 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $17=$1; //@line 957 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($17,1); //@line 957 "lib/lua-5.2.3/src/lgc.c"
 var $18=$g; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+8)|0); //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $20=HEAP32[(($19)>>2)]; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $21=$g; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+12)|0); //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP32[(($22)>>2)]; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $24=((($20)+($23))|0); //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $25=$g; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+20)|0); //@line 958 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($26)>>2)]=$24; //@line 958 "lib/lua-5.2.3/src/lgc.c"
 var $27=$g; //@line 959 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+62)|0); //@line 959 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($28)]=2; //@line 959 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 960 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $30=$g; //@line 964 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+62)|0); //@line 964 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($31)]=0; //@line 964 "lib/lua-5.2.3/src/lgc.c"
 var $32=$1; //@line 965 "lib/lua-5.2.3/src/lgc.c"
 var $33=_entersweep($32); //@line 965 "lib/lua-5.2.3/src/lgc.c"
 var $34=$1; //@line 966 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($34,-29); //@line 966 "lib/lua-5.2.3/src/lgc.c"
 label=6;break;
 case 6: 
 STACKTOP=sp;return; //@line 968 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_runtilstate($L,$statesmask){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 $1=$L;
 $2=$statesmask;
 var $3=$1; //@line 1111 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 1111 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1111 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 1111 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $7=$2; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $8=$g; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+61)|0); //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP8[($9)]; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10&255); //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $12=1<<$11; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $13=$7&$12; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $14=($13|0)!=0; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14^1; //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 if($15){label=3;break;}else{label=4;break;} //@line 1112 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $17=$1; //@line 1113 "lib/lua-5.2.3/src/lgc.c"
 var $18=_singlestep($17); //@line 1113 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 1113 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 STACKTOP=sp;return; //@line 1114 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _entersweep($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $g;
 var $n=sp;
 $1=$L;
 var $2=$1; //@line 937 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 937 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 937 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 937 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($n)>>2)]=0; //@line 938 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 939 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+61)|0); //@line 939 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($6)]=2; //@line 939 "lib/lua-5.2.3/src/lgc.c"
 var $7=$g; //@line 942 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+64)|0); //@line 942 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($8)>>2)]=0; //@line 942 "lib/lua-5.2.3/src/lgc.c"
 var $9=$1; //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $10=$g; //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+72)|0); //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $12=_sweeptolive($9,$11,$n); //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $13=$g; //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+80)|0); //@line 943 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($14)>>2)]=$12; //@line 943 "lib/lua-5.2.3/src/lgc.c"
 var $15=$1; //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $16=$g; //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+68)|0); //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $18=_sweeptolive($15,$17,$n); //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $19=$g; //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+76)|0); //@line 944 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($20)>>2)]=$18; //@line 944 "lib/lua-5.2.3/src/lgc.c"
 var $21=HEAP32[(($n)>>2)]; //@line 945 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $21; //@line 945 "lib/lua-5.2.3/src/lgc.c"
}


function _luaC_freeallobjects($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $i;
 $1=$L;
 var $2=$1; //@line 984 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 984 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 984 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 984 "lib/lua-5.2.3/src/lgc.c"
 var $5=$1; //@line 986 "lib/lua-5.2.3/src/lgc.c"
 _separatetobefnz($5,1); //@line 986 "lib/lua-5.2.3/src/lgc.c"
 var $6=$1; //@line 988 "lib/lua-5.2.3/src/lgc.c"
 _callallpendingfinalizers($6,0); //@line 988 "lib/lua-5.2.3/src/lgc.c"
 var $7=$g; //@line 989 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+60)|0); //@line 989 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($8)]=3; //@line 989 "lib/lua-5.2.3/src/lgc.c"
 var $9=$g; //@line 990 "lib/lua-5.2.3/src/lgc.c"
 var $10=(($9+62)|0); //@line 990 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($10)]=0; //@line 990 "lib/lua-5.2.3/src/lgc.c"
 var $11=$1; //@line 991 "lib/lua-5.2.3/src/lgc.c"
 var $12=$g; //@line 991 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+72)|0); //@line 991 "lib/lua-5.2.3/src/lgc.c"
 var $14=_sweeplist($11,$13,-3); //@line 991 "lib/lua-5.2.3/src/lgc.c"
 var $15=$1; //@line 992 "lib/lua-5.2.3/src/lgc.c"
 var $16=$g; //@line 992 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+68)|0); //@line 992 "lib/lua-5.2.3/src/lgc.c"
 var $18=_sweeplist($15,$17,-3); //@line 992 "lib/lua-5.2.3/src/lgc.c"
 $i=0; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $20=$i; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $21=$g; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+24)|0); //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+8)|0); //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $24=HEAP32[(($23)>>2)]; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $25=($20|0)<($24|0); //@line 993 "lib/lua-5.2.3/src/lgc.c"
 if($25){label=3;break;}else{label=5;break;} //@line 993 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $27=$1; //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $28=$i; //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $29=$g; //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $30=(($29+24)|0); //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30)|0); //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+($28<<2))|0); //@line 994 "lib/lua-5.2.3/src/lgc.c"
 var $34=_sweeplist($27,$33,-3); //@line 994 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 994 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $36=$i; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 var $37=((($36)+(1))|0); //@line 993 "lib/lua-5.2.3/src/lgc.c"
 $i=$37; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 993 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 STACKTOP=sp;return; //@line 996 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _separatetobefnz($L,$all){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 var $p;
 var $curr;
 var $lastnext;
 $1=$L;
 $2=$all;
 var $3=$1; //@line 846 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 846 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 846 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 846 "lib/lua-5.2.3/src/lgc.c"
 var $6=$g; //@line 847 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+72)|0); //@line 847 "lib/lua-5.2.3/src/lgc.c"
 $p=$7; //@line 847 "lib/lua-5.2.3/src/lgc.c"
 var $8=$g; //@line 849 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+104)|0); //@line 849 "lib/lua-5.2.3/src/lgc.c"
 $lastnext=$9; //@line 849 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 851 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $11=$lastnext; //@line 851 "lib/lua-5.2.3/src/lgc.c"
 var $12=HEAP32[(($11)>>2)]; //@line 851 "lib/lua-5.2.3/src/lgc.c"
 var $13=($12|0)!=0; //@line 851 "lib/lua-5.2.3/src/lgc.c"
 if($13){label=3;break;}else{label=4;break;} //@line 851 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $15=$lastnext; //@line 852 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 852 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 852 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17)|0); //@line 852 "lib/lua-5.2.3/src/lgc.c"
 $lastnext=$18; //@line 852 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 852 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 label=5;break; //@line 853 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $21=$p; //@line 853 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 853 "lib/lua-5.2.3/src/lgc.c"
 $curr=$22; //@line 853 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22|0)!=0; //@line 853 "lib/lua-5.2.3/src/lgc.c"
 if($23){label=6;break;}else{label=11;break;} //@line 853 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $25=$curr; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26+5)|0); //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $28=HEAP8[($27)]; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $29=($28&255); //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $30=$29&3; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $31=($30|0)!=0; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 if($31){label=9;break;}else{label=7;break;} //@line 856 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $33=$2; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 var $34=($33|0)!=0; //@line 856 "lib/lua-5.2.3/src/lgc.c"
 if($34){label=9;break;}else{label=8;break;} //@line 856 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $36=$curr; //@line 857 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36; //@line 857 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37)|0); //@line 857 "lib/lua-5.2.3/src/lgc.c"
 $p=$38; //@line 857 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 857 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $40=$curr; //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40; //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41+5)|0); //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $43=HEAP8[($42)]; //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $44=($43&255); //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $45=$44|8; //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45)&255); //@line 859 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($42)]=$46; //@line 859 "lib/lua-5.2.3/src/lgc.c"
 var $47=$curr; //@line 860 "lib/lua-5.2.3/src/lgc.c"
 var $48=$47; //@line 860 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48)|0); //@line 860 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 860 "lib/lua-5.2.3/src/lgc.c"
 var $51=$p; //@line 860 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($51)>>2)]=$50; //@line 860 "lib/lua-5.2.3/src/lgc.c"
 var $52=$lastnext; //@line 861 "lib/lua-5.2.3/src/lgc.c"
 var $53=HEAP32[(($52)>>2)]; //@line 861 "lib/lua-5.2.3/src/lgc.c"
 var $54=$curr; //@line 861 "lib/lua-5.2.3/src/lgc.c"
 var $55=$54; //@line 861 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55)|0); //@line 861 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($56)>>2)]=$53; //@line 861 "lib/lua-5.2.3/src/lgc.c"
 var $57=$curr; //@line 862 "lib/lua-5.2.3/src/lgc.c"
 var $58=$lastnext; //@line 862 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($58)>>2)]=$57; //@line 862 "lib/lua-5.2.3/src/lgc.c"
 var $59=$curr; //@line 863 "lib/lua-5.2.3/src/lgc.c"
 var $60=$59; //@line 863 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60)|0); //@line 863 "lib/lua-5.2.3/src/lgc.c"
 $lastnext=$61; //@line 863 "lib/lua-5.2.3/src/lgc.c"
 label=10;break;
 case 10: 
 label=5;break; //@line 865 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 STACKTOP=sp;return; //@line 866 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _callallpendingfinalizers($L,$propagateerrors){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 $1=$L;
 $2=$propagateerrors;
 var $3=$1; //@line 975 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 975 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 975 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 975 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 976 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $7=$g; //@line 976 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+104)|0); //@line 976 "lib/lua-5.2.3/src/lgc.c"
 var $9=HEAP32[(($8)>>2)]; //@line 976 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9|0)!=0; //@line 976 "lib/lua-5.2.3/src/lgc.c"
 if($10){label=3;break;}else{label=4;break;} //@line 976 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $12=$g; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+104)|0); //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($15+5)|0); //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $17=HEAP8[($16)]; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $18=($17&255); //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $19=$18&191; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19)&255); //@line 977 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($16)]=$20; //@line 977 "lib/lua-5.2.3/src/lgc.c"
 var $21=$1; //@line 978 "lib/lua-5.2.3/src/lgc.c"
 var $22=$2; //@line 978 "lib/lua-5.2.3/src/lgc.c"
 _GCTM($21,$22); //@line 978 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 979 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 STACKTOP=sp;return; //@line 980 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _sweeplist($L,$p,$count){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $g;
 var $ow;
 var $toclear;
 var $toset;
 var $tostop;
 var $curr;
 var $marked;
 $2=$L;
 $3=$p;
 $4=$count;
 var $5=$2; //@line 720 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+12)|0); //@line 720 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 720 "lib/lua-5.2.3/src/lgc.c"
 $g=$7; //@line 720 "lib/lua-5.2.3/src/lgc.c"
 var $8=$g; //@line 721 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+60)|0); //@line 721 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP8[($9)]; //@line 721 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10&255); //@line 721 "lib/lua-5.2.3/src/lgc.c"
 var $12=$11^3; //@line 721 "lib/lua-5.2.3/src/lgc.c"
 $ow=$12; //@line 721 "lib/lua-5.2.3/src/lgc.c"
 var $13=$g; //@line 724 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+62)|0); //@line 724 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP8[($14)]; //@line 724 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15&255); //@line 724 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16|0)==2; //@line 724 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=2;break;}else{label=3;break;} //@line 724 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 $toclear=-1; //@line 725 "lib/lua-5.2.3/src/lgc.c"
 $toset=64; //@line 726 "lib/lua-5.2.3/src/lgc.c"
 $tostop=64; //@line 727 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 728 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 $toclear=-72; //@line 730 "lib/lua-5.2.3/src/lgc.c"
 var $20=$g; //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+60)|0); //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP8[($21)]; //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22&255); //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $24=$23&3; //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24)&255); //@line 731 "lib/lua-5.2.3/src/lgc.c"
 var $26=($25&255); //@line 731 "lib/lua-5.2.3/src/lgc.c"
 $toset=$26; //@line 731 "lib/lua-5.2.3/src/lgc.c"
 $tostop=0; //@line 732 "lib/lua-5.2.3/src/lgc.c"
 label=4;break;
 case 4: 
 label=5;break; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $29=$3; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 var $30=HEAP32[(($29)>>2)]; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 var $31=($30|0)!=0; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 if($31){label=6;break;}else{var $37=0;label=7;break;} //@line 734 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $33=$4; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 var $34=((($33)-(1))|0); //@line 734 "lib/lua-5.2.3/src/lgc.c"
 $4=$34; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 var $35=($33>>>0)>0; //@line 734 "lib/lua-5.2.3/src/lgc.c"
 var $37=$35;label=7;break;
 case 7: 
 var $37;
 if($37){label=8;break;}else{label=16;break;}
 case 8: 
 var $39=$3; //@line 735 "lib/lua-5.2.3/src/lgc.c"
 var $40=HEAP32[(($39)>>2)]; //@line 735 "lib/lua-5.2.3/src/lgc.c"
 $curr=$40; //@line 735 "lib/lua-5.2.3/src/lgc.c"
 var $41=$curr; //@line 736 "lib/lua-5.2.3/src/lgc.c"
 var $42=$41; //@line 736 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+5)|0); //@line 736 "lib/lua-5.2.3/src/lgc.c"
 var $44=HEAP8[($43)]; //@line 736 "lib/lua-5.2.3/src/lgc.c"
 var $45=($44&255); //@line 736 "lib/lua-5.2.3/src/lgc.c"
 $marked=$45; //@line 736 "lib/lua-5.2.3/src/lgc.c"
 var $46=$marked; //@line 737 "lib/lua-5.2.3/src/lgc.c"
 var $47=$46^3; //@line 737 "lib/lua-5.2.3/src/lgc.c"
 var $48=$ow; //@line 737 "lib/lua-5.2.3/src/lgc.c"
 var $49=$47&$48; //@line 737 "lib/lua-5.2.3/src/lgc.c"
 var $50=($49|0)!=0; //@line 737 "lib/lua-5.2.3/src/lgc.c"
 if($50){label=10;break;}else{label=9;break;} //@line 737 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $52=$curr; //@line 738 "lib/lua-5.2.3/src/lgc.c"
 var $53=$52; //@line 738 "lib/lua-5.2.3/src/lgc.c"
 var $54=(($53)|0); //@line 738 "lib/lua-5.2.3/src/lgc.c"
 var $55=HEAP32[(($54)>>2)]; //@line 738 "lib/lua-5.2.3/src/lgc.c"
 var $56=$3; //@line 738 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($56)>>2)]=$55; //@line 738 "lib/lua-5.2.3/src/lgc.c"
 var $57=$2; //@line 739 "lib/lua-5.2.3/src/lgc.c"
 var $58=$curr; //@line 739 "lib/lua-5.2.3/src/lgc.c"
 _freeobj($57,$58); //@line 739 "lib/lua-5.2.3/src/lgc.c"
 label=15;break; //@line 740 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $60=$marked; //@line 742 "lib/lua-5.2.3/src/lgc.c"
 var $61=$tostop; //@line 742 "lib/lua-5.2.3/src/lgc.c"
 var $62=$60&$61; //@line 742 "lib/lua-5.2.3/src/lgc.c"
 var $63=($62|0)!=0; //@line 742 "lib/lua-5.2.3/src/lgc.c"
 if($63){label=11;break;}else{label=12;break;} //@line 742 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 $1=0; //@line 743 "lib/lua-5.2.3/src/lgc.c"
 label=20;break; //@line 743 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $66=$curr; //@line 744 "lib/lua-5.2.3/src/lgc.c"
 var $67=$66; //@line 744 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67+4)|0); //@line 744 "lib/lua-5.2.3/src/lgc.c"
 var $69=HEAP8[($68)]; //@line 744 "lib/lua-5.2.3/src/lgc.c"
 var $70=($69&255); //@line 744 "lib/lua-5.2.3/src/lgc.c"
 var $71=($70|0)==8; //@line 744 "lib/lua-5.2.3/src/lgc.c"
 if($71){label=13;break;}else{label=14;break;} //@line 744 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $73=$2; //@line 745 "lib/lua-5.2.3/src/lgc.c"
 var $74=$curr; //@line 745 "lib/lua-5.2.3/src/lgc.c"
 var $75=$74; //@line 745 "lib/lua-5.2.3/src/lgc.c"
 _sweepthread($73,$75); //@line 745 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 745 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $77=$marked; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $78=$toclear; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $79=$77&$78; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $80=$toset; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $81=$79|$80; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $82=(($81)&255); //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $83=$curr; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $84=$83; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $85=(($84+5)|0); //@line 747 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($85)]=$82; //@line 747 "lib/lua-5.2.3/src/lgc.c"
 var $86=$curr; //@line 748 "lib/lua-5.2.3/src/lgc.c"
 var $87=$86; //@line 748 "lib/lua-5.2.3/src/lgc.c"
 var $88=(($87)|0); //@line 748 "lib/lua-5.2.3/src/lgc.c"
 $3=$88; //@line 748 "lib/lua-5.2.3/src/lgc.c"
 label=15;break;
 case 15: 
 label=5;break; //@line 750 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $91=$3; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 var $92=HEAP32[(($91)>>2)]; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 var $93=($92|0)==0; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 if($93){label=17;break;}else{label=18;break;} //@line 751 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $98=0;label=19;break; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $96=$3; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 var $98=$96;label=19;break; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $98; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 $1=$98; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 label=20;break; //@line 751 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 var $100=$1; //@line 752 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $100; //@line 752 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _singlestep($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 var $oldtrav;
 var $work;
 var $sw;
 var $i;
 var $mt=sp;
 $2=$L;
 var $3=$2; //@line 1041 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 1041 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1041 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 1041 "lib/lua-5.2.3/src/lgc.c"
 var $6=$g; //@line 1042 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+61)|0); //@line 1042 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP8[($7)]; //@line 1042 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8&255); //@line 1042 "lib/lua-5.2.3/src/lgc.c"
 switch(($9|0)){case 3:{ label=15;break;}case 4:{ label=18;break;}case 5:{ label=2;break;}case 0:{ label=3;break;}case 2:{ label=6;break;}default:{label=21;break;}}break;
 case 2: 
 var $11=$g; //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+24)|0); //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+8)|0); //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14<<2); //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $16=$g; //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+16)|0); //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($17)>>2)]=$15; //@line 1045 "lib/lua-5.2.3/src/lgc.c"
 var $18=$g; //@line 1047 "lib/lua-5.2.3/src/lgc.c"
 _restartcollection($18); //@line 1047 "lib/lua-5.2.3/src/lgc.c"
 var $19=$g; //@line 1048 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+61)|0); //@line 1048 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($20)]=0; //@line 1048 "lib/lua-5.2.3/src/lgc.c"
 var $21=$g; //@line 1049 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+16)|0); //@line 1049 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1049 "lib/lua-5.2.3/src/lgc.c"
 $1=$23; //@line 1049 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1049 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $25=$g; //@line 1052 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+84)|0); //@line 1052 "lib/lua-5.2.3/src/lgc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 1052 "lib/lua-5.2.3/src/lgc.c"
 var $28=($27|0)!=0; //@line 1052 "lib/lua-5.2.3/src/lgc.c"
 if($28){label=4;break;}else{label=5;break;} //@line 1052 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $30=$g; //@line 1053 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+16)|0); //@line 1053 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 1053 "lib/lua-5.2.3/src/lgc.c"
 $oldtrav=$32; //@line 1053 "lib/lua-5.2.3/src/lgc.c"
 var $33=$g; //@line 1054 "lib/lua-5.2.3/src/lgc.c"
 _propagatemark($33); //@line 1054 "lib/lua-5.2.3/src/lgc.c"
 var $34=$g; //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+16)|0); //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 var $37=$oldtrav; //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 var $38=((($36)-($37))|0); //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 $1=$38; //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1055 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $40=$g; //@line 1060 "lib/lua-5.2.3/src/lgc.c"
 var $41=(($40+61)|0); //@line 1060 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($41)]=1; //@line 1060 "lib/lua-5.2.3/src/lgc.c"
 var $42=$g; //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+16)|0); //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 var $44=HEAP32[(($43)>>2)]; //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 var $45=$g; //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+20)|0); //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($46)>>2)]=$44; //@line 1061 "lib/lua-5.2.3/src/lgc.c"
 var $47=$2; //@line 1062 "lib/lua-5.2.3/src/lgc.c"
 var $48=_atomic($47); //@line 1062 "lib/lua-5.2.3/src/lgc.c"
 $work=$48; //@line 1062 "lib/lua-5.2.3/src/lgc.c"
 var $49=$work; //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 var $50=$g; //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 var $51=(($50+20)|0); //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP32[(($51)>>2)]; //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 var $53=((($52)+($49))|0); //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($51)>>2)]=$53; //@line 1063 "lib/lua-5.2.3/src/lgc.c"
 var $54=$2; //@line 1064 "lib/lua-5.2.3/src/lgc.c"
 var $55=_entersweep($54); //@line 1064 "lib/lua-5.2.3/src/lgc.c"
 $sw=$55; //@line 1064 "lib/lua-5.2.3/src/lgc.c"
 var $56=$work; //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 var $57=$sw; //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 var $58=((($57)*(5))&-1); //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 var $59=((($56)+($58))|0); //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 $1=$59; //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1065 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 $i=0; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $62=$i; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $63=($62|0)<80; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 if($63){label=8;break;}else{var $76=0;label=9;break;} //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $65=$g; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $66=(($65+64)|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $67=HEAP32[(($66)>>2)]; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $68=$i; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $69=((($67)+($68))|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $70=$g; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $71=(($70+24)|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $72=(($71+8)|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $73=HEAP32[(($72)>>2)]; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $74=($69|0)<($73|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $76=$74;label=9;break;
 case 9: 
 var $76;
 if($76){label=10;break;}else{label=12;break;}
 case 10: 
 var $78=$2; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $79=$g; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $80=(($79+64)|0); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $81=HEAP32[(($80)>>2)]; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $82=$i; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $83=((($81)+($82))|0); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $84=$g; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $85=(($84+24)|0); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $86=(($85)|0); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $87=HEAP32[(($86)>>2)]; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $88=(($87+($83<<2))|0); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 var $89=_sweeplist($78,$88,-3); //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 label=11;break; //@line 1071 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $91=$i; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 var $92=((($91)+(1))|0); //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 $i=$92; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1070 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $94=$i; //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 var $95=$g; //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 var $96=(($95+64)|0); //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 var $97=HEAP32[(($96)>>2)]; //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 var $98=((($97)+($94))|0); //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($96)>>2)]=$98; //@line 1072 "lib/lua-5.2.3/src/lgc.c"
 var $99=$g; //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $100=(($99+64)|0); //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $101=HEAP32[(($100)>>2)]; //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $102=$g; //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $103=(($102+24)|0); //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $104=(($103+8)|0); //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $105=HEAP32[(($104)>>2)]; //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 var $106=($101|0)>=($105|0); //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 if($106){label=13;break;}else{label=14;break;} //@line 1073 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $108=$g; //@line 1074 "lib/lua-5.2.3/src/lgc.c"
 var $109=(($108+61)|0); //@line 1074 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($109)]=3; //@line 1074 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 1074 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $111=$i; //@line 1075 "lib/lua-5.2.3/src/lgc.c"
 var $112=((($111)*(5))&-1); //@line 1075 "lib/lua-5.2.3/src/lgc.c"
 $1=$112; //@line 1075 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1075 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $114=$g; //@line 1078 "lib/lua-5.2.3/src/lgc.c"
 var $115=(($114+80)|0); //@line 1078 "lib/lua-5.2.3/src/lgc.c"
 var $116=HEAP32[(($115)>>2)]; //@line 1078 "lib/lua-5.2.3/src/lgc.c"
 var $117=($116|0)!=0; //@line 1078 "lib/lua-5.2.3/src/lgc.c"
 if($117){label=16;break;}else{label=17;break;} //@line 1078 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $119=$2; //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $120=$g; //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $121=(($120+80)|0); //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $122=HEAP32[(($121)>>2)]; //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $123=_sweeplist($119,$122,80); //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $124=$g; //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 var $125=(($124+80)|0); //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($125)>>2)]=$123; //@line 1079 "lib/lua-5.2.3/src/lgc.c"
 $1=400; //@line 1080 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1080 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $127=$g; //@line 1083 "lib/lua-5.2.3/src/lgc.c"
 var $128=(($127+61)|0); //@line 1083 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($128)]=4; //@line 1083 "lib/lua-5.2.3/src/lgc.c"
 $1=0; //@line 1084 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1084 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $130=$g; //@line 1088 "lib/lua-5.2.3/src/lgc.c"
 var $131=(($130+76)|0); //@line 1088 "lib/lua-5.2.3/src/lgc.c"
 var $132=HEAP32[(($131)>>2)]; //@line 1088 "lib/lua-5.2.3/src/lgc.c"
 var $133=($132|0)!=0; //@line 1088 "lib/lua-5.2.3/src/lgc.c"
 if($133){label=19;break;}else{label=20;break;} //@line 1088 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $135=$2; //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $136=$g; //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $137=(($136+76)|0); //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $138=HEAP32[(($137)>>2)]; //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $139=_sweeplist($135,$138,80); //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $140=$g; //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 var $141=(($140+76)|0); //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($141)>>2)]=$139; //@line 1089 "lib/lua-5.2.3/src/lgc.c"
 $1=400; //@line 1090 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1090 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 var $143=$g; //@line 1094 "lib/lua-5.2.3/src/lgc.c"
 var $144=(($143+172)|0); //@line 1094 "lib/lua-5.2.3/src/lgc.c"
 var $145=HEAP32[(($144)>>2)]; //@line 1094 "lib/lua-5.2.3/src/lgc.c"
 var $146=$145; //@line 1094 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($mt)>>2)]=$146; //@line 1094 "lib/lua-5.2.3/src/lgc.c"
 var $147=$2; //@line 1095 "lib/lua-5.2.3/src/lgc.c"
 var $148=_sweeplist($147,$mt,1); //@line 1095 "lib/lua-5.2.3/src/lgc.c"
 var $149=$2; //@line 1096 "lib/lua-5.2.3/src/lgc.c"
 _checkSizes($149); //@line 1096 "lib/lua-5.2.3/src/lgc.c"
 var $150=$g; //@line 1097 "lib/lua-5.2.3/src/lgc.c"
 var $151=(($150+61)|0); //@line 1097 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($151)]=5; //@line 1097 "lib/lua-5.2.3/src/lgc.c"
 $1=5; //@line 1098 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1098 "lib/lua-5.2.3/src/lgc.c"
 case 21: 
 $1=0; //@line 1101 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 1101 "lib/lua-5.2.3/src/lgc.c"
 case 22: 
 var $154=$1; //@line 1103 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $154; //@line 1103 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_forcestep($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $i;
 $1=$L;
 var $2=$1; //@line 1164 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 1164 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1164 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 1164 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+62)|0); //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP8[($6)]; //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7&255); //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8|0)==2; //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 if($9){label=2;break;}else{label=3;break;} //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $11=$1; //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 _generationalcollection($11); //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 1166 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $13=$1; //@line 1167 "lib/lua-5.2.3/src/lgc.c"
 _incstep($13); //@line 1167 "lib/lua-5.2.3/src/lgc.c"
 label=4;break;
 case 4: 
 $i=0; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $16=$g; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+104)|0); //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP32[(($17)>>2)]; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18|0)!=0; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 if($19){label=6;break;}else{var $32=0;label=9;break;} //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $21=$i; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $22=($21|0)<4; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 if($22){var $30=1;label=8;break;}else{label=7;break;} //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $24=$g; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24+61)|0); //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $26=HEAP8[($25)]; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $27=($26&255); //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $28=($27|0)==5; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $30=$28;label=8;break; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $30;
 var $32=$30;label=9;break;
 case 9: 
 var $32;
 if($32){label=10;break;}else{label=12;break;}
 case 10: 
 var $34=$1; //@line 1170 "lib/lua-5.2.3/src/lgc.c"
 _GCTM($34,1); //@line 1170 "lib/lua-5.2.3/src/lgc.c"
 label=11;break; //@line 1170 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $36=$i; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 var $37=((($36)+(1))|0); //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 $i=$37; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 1169 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 STACKTOP=sp;return; //@line 1171 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _generationalcollection($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $estimate;
 $1=$L;
 var $2=$1; //@line 1118 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 1118 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1118 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 1118 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 1120 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+20)|0); //@line 1120 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1120 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7|0)==0; //@line 1120 "lib/lua-5.2.3/src/lgc.c"
 if($8){label=2;break;}else{label=3;break;} //@line 1120 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $10=$1; //@line 1121 "lib/lua-5.2.3/src/lgc.c"
 _luaC_fullgc($10,0); //@line 1121 "lib/lua-5.2.3/src/lgc.c"
 var $11=$g; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+8)|0); //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP32[(($12)>>2)]; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $14=$g; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+12)|0); //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $17=((($13)+($16))|0); //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $18=$g; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+20)|0); //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($19)>>2)]=$17; //@line 1122 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1123 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $21=$g; //@line 1125 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+20)|0); //@line 1125 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1125 "lib/lua-5.2.3/src/lgc.c"
 $estimate=$23; //@line 1125 "lib/lua-5.2.3/src/lgc.c"
 var $24=$1; //@line 1126 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($24,32); //@line 1126 "lib/lua-5.2.3/src/lgc.c"
 var $25=$g; //@line 1127 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+61)|0); //@line 1127 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($26)]=0; //@line 1127 "lib/lua-5.2.3/src/lgc.c"
 var $27=$g; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+8)|0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP32[(($28)>>2)]; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $30=$g; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+12)|0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $33=((($29)+($32))|0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $34=$estimate; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $35=(((($34>>>0))/(100))&-1); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $36=$g; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+160)|0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $38=HEAP32[(($37)>>2)]; //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $39=(Math_imul($35,$38)|0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 var $40=($33>>>0)>($39>>>0); //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 if($40){label=4;break;}else{label=5;break;} //@line 1128 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $42=$g; //@line 1129 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+20)|0); //@line 1129 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($43)>>2)]=0; //@line 1129 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 1129 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $45=$estimate; //@line 1131 "lib/lua-5.2.3/src/lgc.c"
 var $46=$g; //@line 1131 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+20)|0); //@line 1131 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($47)>>2)]=$45; //@line 1131 "lib/lua-5.2.3/src/lgc.c"
 label=6;break;
 case 6: 
 label=7;break;
 case 7: 
 var $50=$g; //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $51=$g; //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $52=(($51+8)|0); //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $53=HEAP32[(($52)>>2)]; //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $54=$g; //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+12)|0); //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 var $57=((($53)+($56))|0); //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 _setpause($50,$57); //@line 1134 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 1136 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _incstep($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $debt;
 var $stepmul;
 var $work;
 $1=$L;
 var $2=$1; //@line 1140 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 1140 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1140 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 1140 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 1141 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+12)|0); //@line 1141 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1141 "lib/lua-5.2.3/src/lgc.c"
 $debt=$7; //@line 1141 "lib/lua-5.2.3/src/lgc.c"
 var $8=$g; //@line 1142 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+164)|0); //@line 1142 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 1142 "lib/lua-5.2.3/src/lgc.c"
 $stepmul=$10; //@line 1142 "lib/lua-5.2.3/src/lgc.c"
 var $11=$stepmul; //@line 1143 "lib/lua-5.2.3/src/lgc.c"
 var $12=($11|0)<40; //@line 1143 "lib/lua-5.2.3/src/lgc.c"
 if($12){label=2;break;}else{label=3;break;} //@line 1143 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 $stepmul=40; //@line 1143 "lib/lua-5.2.3/src/lgc.c"
 label=3;break; //@line 1143 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $15=$debt; //@line 1145 "lib/lua-5.2.3/src/lgc.c"
 var $16=(((($15|0))/(200))&-1); //@line 1145 "lib/lua-5.2.3/src/lgc.c"
 var $17=((($16)+(1))|0); //@line 1145 "lib/lua-5.2.3/src/lgc.c"
 $debt=$17; //@line 1145 "lib/lua-5.2.3/src/lgc.c"
 var $18=$debt; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $19=$stepmul; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $20=(((2147483644)/(($19|0)))&-1); //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $21=($18|0)<($20|0); //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 if($21){label=4;break;}else{label=5;break;} //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $23=$debt; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $24=$stepmul; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $25=(Math_imul($23,$24)|0); //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 var $28=$25;label=6;break; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $28=2147483644;label=6;break; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $28; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 $debt=$28; //@line 1146 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1147 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $30=$1; //@line 1148 "lib/lua-5.2.3/src/lgc.c"
 var $31=_singlestep($30); //@line 1148 "lib/lua-5.2.3/src/lgc.c"
 $work=$31; //@line 1148 "lib/lua-5.2.3/src/lgc.c"
 var $32=$work; //@line 1149 "lib/lua-5.2.3/src/lgc.c"
 var $33=$debt; //@line 1149 "lib/lua-5.2.3/src/lgc.c"
 var $34=((($33)-($32))|0); //@line 1149 "lib/lua-5.2.3/src/lgc.c"
 $debt=$34; //@line 1149 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $36=$debt; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $37=($36|0)>-1600; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 if($37){label=9;break;}else{var $45=0;label=10;break;} //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $39=$g; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $40=(($39+61)|0); //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP8[($40)]; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41&255); //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $43=($42|0)!=5; //@line 1150 "lib/lua-5.2.3/src/lgc.c"
 var $45=$43;label=10;break;
 case 10: 
 var $45;
 if($45){label=7;break;}else{label=11;break;}
 case 11: 
 var $47=$g; //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 var $48=(($47+61)|0); //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 var $49=HEAP8[($48)]; //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 var $50=($49&255); //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 var $51=($50|0)==5; //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 if($51){label=12;break;}else{label=13;break;} //@line 1151 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $53=$g; //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 var $54=$g; //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+20)|0); //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 _setpause($53,$56); //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 1152 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $58=$debt; //@line 1154 "lib/lua-5.2.3/src/lgc.c"
 var $59=$stepmul; //@line 1154 "lib/lua-5.2.3/src/lgc.c"
 var $60=(((($58|0))/(($59|0)))&-1); //@line 1154 "lib/lua-5.2.3/src/lgc.c"
 var $61=((($60)*(200))&-1); //@line 1154 "lib/lua-5.2.3/src/lgc.c"
 $debt=$61; //@line 1154 "lib/lua-5.2.3/src/lgc.c"
 var $62=$g; //@line 1155 "lib/lua-5.2.3/src/lgc.c"
 var $63=$debt; //@line 1155 "lib/lua-5.2.3/src/lgc.c"
 _luaE_setdebt($62,$63); //@line 1155 "lib/lua-5.2.3/src/lgc.c"
 label=14;break;
 case 14: 
 STACKTOP=sp;return; //@line 1157 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _GCTM($L,$propagateerrors){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 var $tm;
 var $v=sp;
 var $io;
 var $i_g;
 var $status;
 var $oldah;
 var $running;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 var $msg;
 $1=$L;
 $2=$propagateerrors;
 var $3=$1; //@line 810 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 810 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 810 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 810 "lib/lua-5.2.3/src/lgc.c"
 $io=$v; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $6=$g; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $7=_udata2finalize($6); //@line 813 "lib/lua-5.2.3/src/lgc.c"
 $i_g=$7; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $8=$i_g; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $9=$io; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $10=(($9)|0); //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($11)>>2)]=$8; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $12=$i_g; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $13=$12; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+4)|0); //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP8[($14)]; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15&255); //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16|64; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $18=$io; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+8)|0); //@line 813 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($19)>>2)]=$17; //@line 813 "lib/lua-5.2.3/src/lgc.c"
 var $20=$1; //@line 814 "lib/lua-5.2.3/src/lgc.c"
 var $21=_luaT_gettmbyobj($20,$v,2); //@line 814 "lib/lua-5.2.3/src/lgc.c"
 $tm=$21; //@line 814 "lib/lua-5.2.3/src/lgc.c"
 var $22=$tm; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22|0)!=0; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 if($23){label=2;break;}else{label=12;break;} //@line 815 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $25=$tm; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+8)|0); //@line 815 "lib/lua-5.2.3/src/lgc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 var $28=$27&15; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 var $29=($28|0)==6; //@line 815 "lib/lua-5.2.3/src/lgc.c"
 if($29){label=3;break;}else{label=12;break;} //@line 815 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $31=$1; //@line 817 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+41)|0); //@line 817 "lib/lua-5.2.3/src/lgc.c"
 var $33=HEAP8[($32)]; //@line 817 "lib/lua-5.2.3/src/lgc.c"
 $oldah=$33; //@line 817 "lib/lua-5.2.3/src/lgc.c"
 var $34=$g; //@line 818 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+63)|0); //@line 818 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP8[($35)]; //@line 818 "lib/lua-5.2.3/src/lgc.c"
 var $37=($36&255); //@line 818 "lib/lua-5.2.3/src/lgc.c"
 $running=$37; //@line 818 "lib/lua-5.2.3/src/lgc.c"
 var $38=$1; //@line 819 "lib/lua-5.2.3/src/lgc.c"
 var $39=(($38+41)|0); //@line 819 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($39)]=0; //@line 819 "lib/lua-5.2.3/src/lgc.c"
 var $40=$g; //@line 820 "lib/lua-5.2.3/src/lgc.c"
 var $41=(($40+63)|0); //@line 820 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($41)]=0; //@line 820 "lib/lua-5.2.3/src/lgc.c"
 var $42=$tm; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 $io2=$42; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $43=$1; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $44=(($43+8)|0); //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $45=HEAP32[(($44)>>2)]; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 $io1=$45; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $46=$io1; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46)|0); //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $48=$io2; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48)|0); //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $50=$47; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $51=$49; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 assert(8 % 1 === 0);HEAP32[(($50)>>2)]=HEAP32[(($51)>>2)];HEAP32[((($50)+(4))>>2)]=HEAP32[((($51)+(4))>>2)]; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $52=$io2; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $53=(($52+8)|0); //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $54=HEAP32[(($53)>>2)]; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $55=$io1; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55+8)|0); //@line 821 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($56)>>2)]=$54; //@line 821 "lib/lua-5.2.3/src/lgc.c"
 $io21=$v; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $57=$1; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $58=(($57+8)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $59=HEAP32[(($58)>>2)]; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $60=(($59+16)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 $io12=$60; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $61=$io12; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $62=(($61)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $63=$io21; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $64=(($63)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $65=$62; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $66=$64; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 assert(8 % 1 === 0);HEAP32[(($65)>>2)]=HEAP32[(($66)>>2)];HEAP32[((($65)+(4))>>2)]=HEAP32[((($66)+(4))>>2)]; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $67=$io21; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67+8)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $69=HEAP32[(($68)>>2)]; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $70=$io12; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $71=(($70+8)|0); //@line 822 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($71)>>2)]=$69; //@line 822 "lib/lua-5.2.3/src/lgc.c"
 var $72=$1; //@line 823 "lib/lua-5.2.3/src/lgc.c"
 var $73=(($72+8)|0); //@line 823 "lib/lua-5.2.3/src/lgc.c"
 var $74=HEAP32[(($73)>>2)]; //@line 823 "lib/lua-5.2.3/src/lgc.c"
 var $75=(($74+32)|0); //@line 823 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($73)>>2)]=$75; //@line 823 "lib/lua-5.2.3/src/lgc.c"
 var $76=$1; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $77=$1; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $78=(($77+8)|0); //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $79=HEAP32[(($78)>>2)]; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $80=((($79)-(32))|0); //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $81=$80; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $82=$1; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $83=(($82+28)|0); //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $84=HEAP32[(($83)>>2)]; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $85=$84; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $86=$81; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $87=$85; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $88=((($86)-($87))|0); //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $89=_luaD_pcall($76,74,0,$88,0); //@line 824 "lib/lua-5.2.3/src/lgc.c"
 $status=$89; //@line 824 "lib/lua-5.2.3/src/lgc.c"
 var $90=$oldah; //@line 825 "lib/lua-5.2.3/src/lgc.c"
 var $91=$1; //@line 825 "lib/lua-5.2.3/src/lgc.c"
 var $92=(($91+41)|0); //@line 825 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($92)]=$90; //@line 825 "lib/lua-5.2.3/src/lgc.c"
 var $93=$running; //@line 826 "lib/lua-5.2.3/src/lgc.c"
 var $94=(($93)&255); //@line 826 "lib/lua-5.2.3/src/lgc.c"
 var $95=$g; //@line 826 "lib/lua-5.2.3/src/lgc.c"
 var $96=(($95+63)|0); //@line 826 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($96)]=$94; //@line 826 "lib/lua-5.2.3/src/lgc.c"
 var $97=$status; //@line 827 "lib/lua-5.2.3/src/lgc.c"
 var $98=($97|0)!=0; //@line 827 "lib/lua-5.2.3/src/lgc.c"
 if($98){label=4;break;}else{label=11;break;} //@line 827 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $100=$2; //@line 827 "lib/lua-5.2.3/src/lgc.c"
 var $101=($100|0)!=0; //@line 827 "lib/lua-5.2.3/src/lgc.c"
 if($101){label=5;break;}else{label=11;break;} //@line 827 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $103=$status; //@line 828 "lib/lua-5.2.3/src/lgc.c"
 var $104=($103|0)==2; //@line 828 "lib/lua-5.2.3/src/lgc.c"
 if($104){label=6;break;}else{label=10;break;} //@line 828 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $106=$1; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $107=(($106+8)|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $108=HEAP32[(($107)>>2)]; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $109=((($108)-(16))|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $110=(($109+8)|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $111=HEAP32[(($110)>>2)]; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $112=$111&15; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $113=($112|0)==4; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 if($113){label=7;break;}else{label=8;break;} //@line 831 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $115=$1; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $116=(($115+8)|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $117=HEAP32[(($116)>>2)]; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $118=((($117)-(16))|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $119=(($118)|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $120=$119; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $121=HEAP32[(($120)>>2)]; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $122=$121; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $123=(($122+16)|0); //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $124=$123; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $127=$124;label=9;break; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $127=16384;label=9;break; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $127; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 $msg=$127; //@line 831 "lib/lua-5.2.3/src/lgc.c"
 var $128=$1; //@line 832 "lib/lua-5.2.3/src/lgc.c"
 var $129=$msg; //@line 832 "lib/lua-5.2.3/src/lgc.c"
 var $130=_luaO_pushfstring($128,15912,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$129,tempVarArgs)); STACKTOP=tempVarArgs; //@line 832 "lib/lua-5.2.3/src/lgc.c"
 $status=5; //@line 833 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 834 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $132=$1; //@line 835 "lib/lua-5.2.3/src/lgc.c"
 var $133=$status; //@line 835 "lib/lua-5.2.3/src/lgc.c"
 _luaD_throw($132,$133); //@line 835 "lib/lua-5.2.3/src/lgc.c"
 throw "Reached an unreachable!"; //@line 835 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 label=12;break; //@line 837 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 STACKTOP=sp;return; //@line 838 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_step($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 $1=$L;
 var $2=$1; //@line 1178 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 1178 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1178 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 1178 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+63)|0); //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP8[($6)]; //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7<<24)>>24)!=0; //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 if($8){label=2;break;}else{label=3;break;} //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $10=$1; //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 _luaC_forcestep($10); //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 1179 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $12=$g; //@line 1180 "lib/lua-5.2.3/src/lgc.c"
 _luaE_setdebt($12,-1600); //@line 1180 "lib/lua-5.2.3/src/lgc.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 1181 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaC_fullgc($L,$isemergency){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $g;
 var $origkind;
 $1=$L;
 $2=$isemergency;
 var $3=$1; //@line 1190 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 1190 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1190 "lib/lua-5.2.3/src/lgc.c"
 $g=$5; //@line 1190 "lib/lua-5.2.3/src/lgc.c"
 var $6=$g; //@line 1191 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+62)|0); //@line 1191 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP8[($7)]; //@line 1191 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8&255); //@line 1191 "lib/lua-5.2.3/src/lgc.c"
 $origkind=$9; //@line 1191 "lib/lua-5.2.3/src/lgc.c"
 var $10=$2; //@line 1193 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10|0)!=0; //@line 1193 "lib/lua-5.2.3/src/lgc.c"
 if($11){label=2;break;}else{label=3;break;} //@line 1193 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $13=$g; //@line 1194 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+62)|0); //@line 1194 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($14)]=1; //@line 1194 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 1194 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $16=$g; //@line 1196 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+62)|0); //@line 1196 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($17)]=0; //@line 1196 "lib/lua-5.2.3/src/lgc.c"
 var $18=$1; //@line 1197 "lib/lua-5.2.3/src/lgc.c"
 _callallpendingfinalizers($18,1); //@line 1197 "lib/lua-5.2.3/src/lgc.c"
 label=4;break;
 case 4: 
 var $20=$g; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+62)|0); //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP8[($21)]; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22&255); //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $24=($23|0)==2; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 if($24){label=6;break;}else{label=5;break;} //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $26=$g; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26+61)|0); //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $28=HEAP8[($27)]; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $29=($28&255); //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29|0)<=1; //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 if($30){label=6;break;}else{label=7;break;} //@line 1199 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $32=$1; //@line 1202 "lib/lua-5.2.3/src/lgc.c"
 var $33=_entersweep($32); //@line 1202 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1203 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $35=$1; //@line 1205 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($35,32); //@line 1205 "lib/lua-5.2.3/src/lgc.c"
 var $36=$1; //@line 1206 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($36,-33); //@line 1206 "lib/lua-5.2.3/src/lgc.c"
 var $37=$1; //@line 1207 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($37,32); //@line 1207 "lib/lua-5.2.3/src/lgc.c"
 var $38=$origkind; //@line 1208 "lib/lua-5.2.3/src/lgc.c"
 var $39=($38|0)==2; //@line 1208 "lib/lua-5.2.3/src/lgc.c"
 if($39){label=8;break;}else{label=9;break;} //@line 1208 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $41=$1; //@line 1210 "lib/lua-5.2.3/src/lgc.c"
 _luaC_runtilstate($41,1); //@line 1210 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 1211 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $43=$origkind; //@line 1212 "lib/lua-5.2.3/src/lgc.c"
 var $44=(($43)&255); //@line 1212 "lib/lua-5.2.3/src/lgc.c"
 var $45=$g; //@line 1212 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+62)|0); //@line 1212 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($46)]=$44; //@line 1212 "lib/lua-5.2.3/src/lgc.c"
 var $47=$g; //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $48=$g; //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+8)|0); //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $51=$g; //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $52=(($51+12)|0); //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $53=HEAP32[(($52)>>2)]; //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $54=((($50)+($53))|0); //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 _setpause($47,$54); //@line 1213 "lib/lua-5.2.3/src/lgc.c"
 var $55=$2; //@line 1214 "lib/lua-5.2.3/src/lgc.c"
 var $56=($55|0)!=0; //@line 1214 "lib/lua-5.2.3/src/lgc.c"
 if($56){label=11;break;}else{label=10;break;} //@line 1214 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $58=$1; //@line 1215 "lib/lua-5.2.3/src/lgc.c"
 _callallpendingfinalizers($58,1); //@line 1215 "lib/lua-5.2.3/src/lgc.c"
 label=11;break; //@line 1215 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 STACKTOP=sp;return; //@line 1216 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _setpause($g,$estimate){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $debt;
 var $threshold;
 $1=$g;
 $2=$estimate;
 var $3=$2; //@line 915 "lib/lua-5.2.3/src/lgc.c"
 var $4=(((($3|0))/(100))&-1); //@line 915 "lib/lua-5.2.3/src/lgc.c"
 $2=$4; //@line 915 "lib/lua-5.2.3/src/lgc.c"
 var $5=$1; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+156)|0); //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $8=$2; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $9=(((2147483644)/(($8|0)))&-1); //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $10=($7|0)<($9|0); //@line 916 "lib/lua-5.2.3/src/lgc.c"
 if($10){label=2;break;}else{label=3;break;} //@line 916 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $12=$2; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $13=$1; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+156)|0); //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $16=(Math_imul($12,$15)|0); //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $19=$16;label=4;break; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=2147483644;label=4;break; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $19; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 $threshold=$19; //@line 916 "lib/lua-5.2.3/src/lgc.c"
 var $20=$threshold; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $21=$1; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+8)|0); //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP32[(($22)>>2)]; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $24=$1; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24+12)|0); //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $26=HEAP32[(($25)>>2)]; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $27=((($23)+($26))|0); //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $28=((($20)-($27))|0); //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $29=(((-$28))|0); //@line 919 "lib/lua-5.2.3/src/lgc.c"
 $debt=$29; //@line 919 "lib/lua-5.2.3/src/lgc.c"
 var $30=$1; //@line 920 "lib/lua-5.2.3/src/lgc.c"
 var $31=$debt; //@line 920 "lib/lua-5.2.3/src/lgc.c"
 _luaE_setdebt($30,$31); //@line 920 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 921 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _udata2finalize($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $o;
 $1=$g;
 var $2=$1; //@line 790 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+104)|0); //@line 790 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 790 "lib/lua-5.2.3/src/lgc.c"
 $o=$4; //@line 790 "lib/lua-5.2.3/src/lgc.c"
 var $5=$o; //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $6=$5; //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6)|0); //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP32[(($7)>>2)]; //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $9=$1; //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $10=(($9+104)|0); //@line 792 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($10)>>2)]=$8; //@line 792 "lib/lua-5.2.3/src/lgc.c"
 var $11=$1; //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+68)|0); //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP32[(($12)>>2)]; //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $14=$o; //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14; //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($15)|0); //@line 793 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($16)>>2)]=$13; //@line 793 "lib/lua-5.2.3/src/lgc.c"
 var $17=$o; //@line 794 "lib/lua-5.2.3/src/lgc.c"
 var $18=$1; //@line 794 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+68)|0); //@line 794 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($19)>>2)]=$17; //@line 794 "lib/lua-5.2.3/src/lgc.c"
 var $20=$o; //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $21=$20; //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+5)|0); //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP8[($22)]; //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $24=($23&255); //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $25=$24&239; //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25)&255); //@line 795 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($22)]=$26; //@line 795 "lib/lua-5.2.3/src/lgc.c"
 var $27=$1; //@line 797 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+61)|0); //@line 797 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP8[($28)]; //@line 797 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29&255); //@line 797 "lib/lua-5.2.3/src/lgc.c"
 var $31=($30|0)<=1; //@line 797 "lib/lua-5.2.3/src/lgc.c"
 if($31){label=3;break;}else{label=2;break;} //@line 797 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $33=$o; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $34=$33; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+5)|0); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP8[($35)]; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $37=($36&255); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $38=$37&-72; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $39=$1; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $40=(($39+60)|0); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP8[($40)]; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41&255); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $43=$42&3; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $44=(($43)&255); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $45=($44&255); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $46=$38|$45; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46)&255); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $48=$o; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $49=$48; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 var $50=(($49+5)|0); //@line 798 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($50)]=$47; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 label=3;break; //@line 798 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $52=$o; //@line 799 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $52; //@line 799 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _dothecall($L,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$ud;
 var $3=$2; //@line 804 "lib/lua-5.2.3/src/lgc.c"
 var $4=$1; //@line 805 "lib/lua-5.2.3/src/lgc.c"
 var $5=$1; //@line 805 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+8)|0); //@line 805 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 805 "lib/lua-5.2.3/src/lgc.c"
 var $8=((($7)-(32))|0); //@line 805 "lib/lua-5.2.3/src/lgc.c"
 _luaD_call($4,$8,0,0); //@line 805 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 806 "lib/lua-5.2.3/src/lgc.c"
}


function _restartcollection($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$g;
 var $2=$1; //@line 338 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+88)|0); //@line 338 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($3)>>2)]=0; //@line 338 "lib/lua-5.2.3/src/lgc.c"
 var $4=$1; //@line 338 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+84)|0); //@line 338 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($5)>>2)]=0; //@line 338 "lib/lua-5.2.3/src/lgc.c"
 var $6=$1; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+96)|0); //@line 339 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($7)>>2)]=0; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $8=$1; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+100)|0); //@line 339 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($9)>>2)]=0; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $10=$1; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+92)|0); //@line 339 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($11)>>2)]=0; //@line 339 "lib/lua-5.2.3/src/lgc.c"
 var $12=$1; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+172)|0); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14|0)!=0; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 if($15){label=2;break;}else{label=4;break;} //@line 340 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $17=$1; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17+172)|0); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $19=HEAP32[(($18)>>2)]; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $20=$19; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $21=$20; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+5)|0); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $23=HEAP8[($22)]; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $24=($23&255); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $25=$24&3; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $26=($25|0)!=0; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 if($26){label=3;break;}else{label=4;break;} //@line 340 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $28=$1; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $29=$1; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $30=(($29+172)|0); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $31=HEAP32[(($30)>>2)]; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($28,$32); //@line 340 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 340 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $34=$1; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+40)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $36=(($35+8)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $37=HEAP32[(($36)>>2)]; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $38=$37&64; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $39=($38|0)!=0; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 if($39){label=5;break;}else{label=7;break;} //@line 341 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $41=$1; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41+40)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $44=$43; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $45=HEAP32[(($44)>>2)]; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $46=$45; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+5)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $48=HEAP8[($47)]; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $49=($48&255); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $50=$49&3; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $51=($50|0)!=0; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 if($51){label=6;break;}else{label=7;break;} //@line 341 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $53=$1; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $54=$1; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+40)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55)|0); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $57=$56; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 var $58=HEAP32[(($57)>>2)]; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($53,$58); //@line 341 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 341 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $60=$1; //@line 342 "lib/lua-5.2.3/src/lgc.c"
 _markmt($60); //@line 342 "lib/lua-5.2.3/src/lgc.c"
 var $61=$1; //@line 343 "lib/lua-5.2.3/src/lgc.c"
 _markbeingfnz($61); //@line 343 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 344 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _propagatemark($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $size;
 var $o;
 var $h;
 var $cl;
 var $cl1;
 var $th;
 var $p;
 $1=$g;
 var $2=$1; //@line 523 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+84)|0); //@line 523 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 523 "lib/lua-5.2.3/src/lgc.c"
 $o=$4; //@line 523 "lib/lua-5.2.3/src/lgc.c"
 var $5=$o; //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $6=$5; //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+5)|0); //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $8=HEAP8[($7)]; //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8&255); //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $10=$9|4; //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10)&255); //@line 525 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($7)]=$11; //@line 525 "lib/lua-5.2.3/src/lgc.c"
 var $12=$o; //@line 526 "lib/lua-5.2.3/src/lgc.c"
 var $13=$12; //@line 526 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+4)|0); //@line 526 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP8[($14)]; //@line 526 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15&255); //@line 526 "lib/lua-5.2.3/src/lgc.c"
 switch(($16|0)){case 5:{ label=2;break;}case 6:{ label=3;break;}case 38:{ label=4;break;}case 8:{ label=5;break;}case 9:{ label=6;break;}default:{label=7;break;}}break;
 case 2: 
 var $18=$o; //@line 528 "lib/lua-5.2.3/src/lgc.c"
 var $19=$18; //@line 528 "lib/lua-5.2.3/src/lgc.c"
 $h=$19; //@line 528 "lib/lua-5.2.3/src/lgc.c"
 var $20=$h; //@line 529 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+24)|0); //@line 529 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 529 "lib/lua-5.2.3/src/lgc.c"
 var $23=$1; //@line 529 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+84)|0); //@line 529 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($24)>>2)]=$22; //@line 529 "lib/lua-5.2.3/src/lgc.c"
 var $25=$1; //@line 530 "lib/lua-5.2.3/src/lgc.c"
 var $26=$h; //@line 530 "lib/lua-5.2.3/src/lgc.c"
 var $27=_traversetable($25,$26); //@line 530 "lib/lua-5.2.3/src/lgc.c"
 $size=$27; //@line 530 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 531 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $29=$o; //@line 534 "lib/lua-5.2.3/src/lgc.c"
 var $30=$29; //@line 534 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30; //@line 534 "lib/lua-5.2.3/src/lgc.c"
 $cl=$31; //@line 534 "lib/lua-5.2.3/src/lgc.c"
 var $32=$cl; //@line 535 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+8)|0); //@line 535 "lib/lua-5.2.3/src/lgc.c"
 var $34=HEAP32[(($33)>>2)]; //@line 535 "lib/lua-5.2.3/src/lgc.c"
 var $35=$1; //@line 535 "lib/lua-5.2.3/src/lgc.c"
 var $36=(($35+84)|0); //@line 535 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($36)>>2)]=$34; //@line 535 "lib/lua-5.2.3/src/lgc.c"
 var $37=$1; //@line 536 "lib/lua-5.2.3/src/lgc.c"
 var $38=$cl; //@line 536 "lib/lua-5.2.3/src/lgc.c"
 var $39=_traverseLclosure($37,$38); //@line 536 "lib/lua-5.2.3/src/lgc.c"
 $size=$39; //@line 536 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 537 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $41=$o; //@line 540 "lib/lua-5.2.3/src/lgc.c"
 var $42=$41; //@line 540 "lib/lua-5.2.3/src/lgc.c"
 var $43=$42; //@line 540 "lib/lua-5.2.3/src/lgc.c"
 $cl1=$43; //@line 540 "lib/lua-5.2.3/src/lgc.c"
 var $44=$cl1; //@line 541 "lib/lua-5.2.3/src/lgc.c"
 var $45=(($44+8)|0); //@line 541 "lib/lua-5.2.3/src/lgc.c"
 var $46=HEAP32[(($45)>>2)]; //@line 541 "lib/lua-5.2.3/src/lgc.c"
 var $47=$1; //@line 541 "lib/lua-5.2.3/src/lgc.c"
 var $48=(($47+84)|0); //@line 541 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($48)>>2)]=$46; //@line 541 "lib/lua-5.2.3/src/lgc.c"
 var $49=$1; //@line 542 "lib/lua-5.2.3/src/lgc.c"
 var $50=$cl1; //@line 542 "lib/lua-5.2.3/src/lgc.c"
 var $51=_traverseCclosure($49,$50); //@line 542 "lib/lua-5.2.3/src/lgc.c"
 $size=$51; //@line 542 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 543 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $53=$o; //@line 546 "lib/lua-5.2.3/src/lgc.c"
 var $54=$53; //@line 546 "lib/lua-5.2.3/src/lgc.c"
 $th=$54; //@line 546 "lib/lua-5.2.3/src/lgc.c"
 var $55=$th; //@line 547 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55+60)|0); //@line 547 "lib/lua-5.2.3/src/lgc.c"
 var $57=HEAP32[(($56)>>2)]; //@line 547 "lib/lua-5.2.3/src/lgc.c"
 var $58=$1; //@line 547 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58+84)|0); //@line 547 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($59)>>2)]=$57; //@line 547 "lib/lua-5.2.3/src/lgc.c"
 var $60=$1; //@line 548 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60+88)|0); //@line 548 "lib/lua-5.2.3/src/lgc.c"
 var $62=HEAP32[(($61)>>2)]; //@line 548 "lib/lua-5.2.3/src/lgc.c"
 var $63=$th; //@line 548 "lib/lua-5.2.3/src/lgc.c"
 var $64=(($63+60)|0); //@line 548 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($64)>>2)]=$62; //@line 548 "lib/lua-5.2.3/src/lgc.c"
 var $65=$o; //@line 549 "lib/lua-5.2.3/src/lgc.c"
 var $66=$1; //@line 549 "lib/lua-5.2.3/src/lgc.c"
 var $67=(($66+88)|0); //@line 549 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($67)>>2)]=$65; //@line 549 "lib/lua-5.2.3/src/lgc.c"
 var $68=$o; //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $69=$68; //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $70=(($69+5)|0); //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $71=HEAP8[($70)]; //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $72=($71&255); //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $73=$72&251; //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $74=(($73)&255); //@line 550 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($70)]=$74; //@line 550 "lib/lua-5.2.3/src/lgc.c"
 var $75=$1; //@line 551 "lib/lua-5.2.3/src/lgc.c"
 var $76=$th; //@line 551 "lib/lua-5.2.3/src/lgc.c"
 var $77=_traversestack($75,$76); //@line 551 "lib/lua-5.2.3/src/lgc.c"
 $size=$77; //@line 551 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 552 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $79=$o; //@line 555 "lib/lua-5.2.3/src/lgc.c"
 var $80=$79; //@line 555 "lib/lua-5.2.3/src/lgc.c"
 $p=$80; //@line 555 "lib/lua-5.2.3/src/lgc.c"
 var $81=$p; //@line 556 "lib/lua-5.2.3/src/lgc.c"
 var $82=(($81+72)|0); //@line 556 "lib/lua-5.2.3/src/lgc.c"
 var $83=HEAP32[(($82)>>2)]; //@line 556 "lib/lua-5.2.3/src/lgc.c"
 var $84=$1; //@line 556 "lib/lua-5.2.3/src/lgc.c"
 var $85=(($84+84)|0); //@line 556 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($85)>>2)]=$83; //@line 556 "lib/lua-5.2.3/src/lgc.c"
 var $86=$1; //@line 557 "lib/lua-5.2.3/src/lgc.c"
 var $87=$p; //@line 557 "lib/lua-5.2.3/src/lgc.c"
 var $88=_traverseproto($86,$87); //@line 557 "lib/lua-5.2.3/src/lgc.c"
 $size=$88; //@line 557 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 558 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 label=9;break; //@line 560 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $91=$size; //@line 562 "lib/lua-5.2.3/src/lgc.c"
 var $92=$1; //@line 562 "lib/lua-5.2.3/src/lgc.c"
 var $93=(($92+16)|0); //@line 562 "lib/lua-5.2.3/src/lgc.c"
 var $94=HEAP32[(($93)>>2)]; //@line 562 "lib/lua-5.2.3/src/lgc.c"
 var $95=((($94)+($91))|0); //@line 562 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($93)>>2)]=$95; //@line 562 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 563 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 STACKTOP=sp;return; //@line 563 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _atomic($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $work;
 var $origweak;
 var $origall;
 $1=$L;
 var $2=$1; //@line 1000 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 1000 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1000 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 1000 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 1001 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+16)|0); //@line 1001 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1001 "lib/lua-5.2.3/src/lgc.c"
 var $8=(((-$7))|0); //@line 1001 "lib/lua-5.2.3/src/lgc.c"
 $work=$8; //@line 1001 "lib/lua-5.2.3/src/lgc.c"
 var $9=$1; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9|0)!=0; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 if($10){label=2;break;}else{label=4;break;} //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $12=$1; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $13=$12; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $14=$13; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+5)|0); //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP8[($15)]; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16&255); //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17&3; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18|0)!=0; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 if($19){label=3;break;}else{label=4;break;} //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $21=$g; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $22=$1; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 var $23=$22; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($21,$23); //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 1004 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $25=$g; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+40)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26+8)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $28=HEAP32[(($27)>>2)]; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $29=$28&64; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29|0)!=0; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 if($30){label=5;break;}else{label=7;break;} //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $32=$g; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+40)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+5)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP8[($38)]; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39&255); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40&3; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41|0)!=0; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 if($42){label=6;break;}else{label=7;break;} //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $44=$g; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $45=$g; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+40)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46)|0); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $48=$47; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 var $49=HEAP32[(($48)>>2)]; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($44,$49); //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 1006 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $51=$g; //@line 1007 "lib/lua-5.2.3/src/lgc.c"
 _markmt($51); //@line 1007 "lib/lua-5.2.3/src/lgc.c"
 var $52=$g; //@line 1009 "lib/lua-5.2.3/src/lgc.c"
 _remarkupvals($52); //@line 1009 "lib/lua-5.2.3/src/lgc.c"
 var $53=$g; //@line 1010 "lib/lua-5.2.3/src/lgc.c"
 _propagateall($53); //@line 1010 "lib/lua-5.2.3/src/lgc.c"
 var $54=$g; //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+16)|0); //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 var $57=$work; //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 var $58=((($57)+($56))|0); //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 $work=$58; //@line 1011 "lib/lua-5.2.3/src/lgc.c"
 var $59=$g; //@line 1013 "lib/lua-5.2.3/src/lgc.c"
 _retraversegrays($59); //@line 1013 "lib/lua-5.2.3/src/lgc.c"
 var $60=$g; //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60+16)|0); //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 var $62=HEAP32[(($61)>>2)]; //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 var $63=$work; //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 var $64=((($63)-($62))|0); //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 $work=$64; //@line 1014 "lib/lua-5.2.3/src/lgc.c"
 var $65=$g; //@line 1015 "lib/lua-5.2.3/src/lgc.c"
 _convergeephemerons($65); //@line 1015 "lib/lua-5.2.3/src/lgc.c"
 var $66=$g; //@line 1018 "lib/lua-5.2.3/src/lgc.c"
 var $67=$g; //@line 1018 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67+92)|0); //@line 1018 "lib/lua-5.2.3/src/lgc.c"
 var $69=HEAP32[(($68)>>2)]; //@line 1018 "lib/lua-5.2.3/src/lgc.c"
 _clearvalues($66,$69,0); //@line 1018 "lib/lua-5.2.3/src/lgc.c"
 var $70=$g; //@line 1019 "lib/lua-5.2.3/src/lgc.c"
 var $71=$g; //@line 1019 "lib/lua-5.2.3/src/lgc.c"
 var $72=(($71+100)|0); //@line 1019 "lib/lua-5.2.3/src/lgc.c"
 var $73=HEAP32[(($72)>>2)]; //@line 1019 "lib/lua-5.2.3/src/lgc.c"
 _clearvalues($70,$73,0); //@line 1019 "lib/lua-5.2.3/src/lgc.c"
 var $74=$g; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $75=(($74+92)|0); //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $76=HEAP32[(($75)>>2)]; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 $origweak=$76; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $77=$g; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $78=(($77+100)|0); //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $79=HEAP32[(($78)>>2)]; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 $origall=$79; //@line 1020 "lib/lua-5.2.3/src/lgc.c"
 var $80=$g; //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 var $81=(($80+16)|0); //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 var $82=HEAP32[(($81)>>2)]; //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 var $83=$work; //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 var $84=((($83)+($82))|0); //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 $work=$84; //@line 1021 "lib/lua-5.2.3/src/lgc.c"
 var $85=$1; //@line 1022 "lib/lua-5.2.3/src/lgc.c"
 _separatetobefnz($85,0); //@line 1022 "lib/lua-5.2.3/src/lgc.c"
 var $86=$g; //@line 1023 "lib/lua-5.2.3/src/lgc.c"
 _markbeingfnz($86); //@line 1023 "lib/lua-5.2.3/src/lgc.c"
 var $87=$g; //@line 1024 "lib/lua-5.2.3/src/lgc.c"
 _propagateall($87); //@line 1024 "lib/lua-5.2.3/src/lgc.c"
 var $88=$g; //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 var $89=(($88+16)|0); //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 var $90=HEAP32[(($89)>>2)]; //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 var $91=$work; //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 var $92=((($91)-($90))|0); //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 $work=$92; //@line 1025 "lib/lua-5.2.3/src/lgc.c"
 var $93=$g; //@line 1026 "lib/lua-5.2.3/src/lgc.c"
 _convergeephemerons($93); //@line 1026 "lib/lua-5.2.3/src/lgc.c"
 var $94=$g; //@line 1029 "lib/lua-5.2.3/src/lgc.c"
 var $95=$g; //@line 1029 "lib/lua-5.2.3/src/lgc.c"
 var $96=(($95+96)|0); //@line 1029 "lib/lua-5.2.3/src/lgc.c"
 var $97=HEAP32[(($96)>>2)]; //@line 1029 "lib/lua-5.2.3/src/lgc.c"
 _clearkeys($94,$97,0); //@line 1029 "lib/lua-5.2.3/src/lgc.c"
 var $98=$g; //@line 1030 "lib/lua-5.2.3/src/lgc.c"
 var $99=$g; //@line 1030 "lib/lua-5.2.3/src/lgc.c"
 var $100=(($99+100)|0); //@line 1030 "lib/lua-5.2.3/src/lgc.c"
 var $101=HEAP32[(($100)>>2)]; //@line 1030 "lib/lua-5.2.3/src/lgc.c"
 _clearkeys($98,$101,0); //@line 1030 "lib/lua-5.2.3/src/lgc.c"
 var $102=$g; //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 var $103=$g; //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 var $104=(($103+92)|0); //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 var $105=HEAP32[(($104)>>2)]; //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 var $106=$origweak; //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 _clearvalues($102,$105,$106); //@line 1032 "lib/lua-5.2.3/src/lgc.c"
 var $107=$g; //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 var $108=$g; //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 var $109=(($108+100)|0); //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 var $110=HEAP32[(($109)>>2)]; //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 var $111=$origall; //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 _clearvalues($107,$110,$111); //@line 1033 "lib/lua-5.2.3/src/lgc.c"
 var $112=$g; //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $113=(($112+60)|0); //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $114=HEAP8[($113)]; //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $115=($114&255); //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $116=$115^3; //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $117=(($116)&255); //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $118=$g; //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $119=(($118+60)|0); //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($119)]=$117; //@line 1034 "lib/lua-5.2.3/src/lgc.c"
 var $120=$g; //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 var $121=(($120+16)|0); //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 var $122=HEAP32[(($121)>>2)]; //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 var $123=$work; //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 var $124=((($123)+($122))|0); //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 $work=$124; //@line 1035 "lib/lua-5.2.3/src/lgc.c"
 var $125=$work; //@line 1036 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $125; //@line 1036 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checkSizes($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 var $hs;
 $1=$L;
 var $2=$1; //@line 779 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+12)|0); //@line 779 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 779 "lib/lua-5.2.3/src/lgc.c"
 $g=$4; //@line 779 "lib/lua-5.2.3/src/lgc.c"
 var $5=$g; //@line 780 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+62)|0); //@line 780 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP8[($6)]; //@line 780 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7&255); //@line 780 "lib/lua-5.2.3/src/lgc.c"
 var $9=($8|0)!=1; //@line 780 "lib/lua-5.2.3/src/lgc.c"
 if($9){label=2;break;}else{label=5;break;} //@line 780 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $11=$g; //@line 781 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+24)|0); //@line 781 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+8)|0); //@line 781 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 781 "lib/lua-5.2.3/src/lgc.c"
 var $15=(((($14|0))/(2))&-1); //@line 781 "lib/lua-5.2.3/src/lgc.c"
 $hs=$15; //@line 781 "lib/lua-5.2.3/src/lgc.c"
 var $16=$g; //@line 782 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+24)|0); //@line 782 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17+4)|0); //@line 782 "lib/lua-5.2.3/src/lgc.c"
 var $19=HEAP32[(($18)>>2)]; //@line 782 "lib/lua-5.2.3/src/lgc.c"
 var $20=$hs; //@line 782 "lib/lua-5.2.3/src/lgc.c"
 var $21=($19>>>0)<($20>>>0); //@line 782 "lib/lua-5.2.3/src/lgc.c"
 if($21){label=3;break;}else{label=4;break;} //@line 782 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $23=$1; //@line 783 "lib/lua-5.2.3/src/lgc.c"
 var $24=$hs; //@line 783 "lib/lua-5.2.3/src/lgc.c"
 _luaS_resize($23,$24); //@line 783 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 783 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $26=$1; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $27=$g; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+144)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $29=(($28)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $30=HEAP32[(($29)>>2)]; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $31=$g; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+144)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+8)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $34=HEAP32[(($33)>>2)]; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $36=_luaM_realloc_($26,$30,$35,0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $37=$g; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+144)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $39=(($38)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($39)>>2)]=$36; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $40=$g; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $41=(($40+144)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41+8)|0); //@line 784 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($42)>>2)]=0; //@line 784 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 785 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 STACKTOP=sp;return; //@line 786 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _markmt($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $i;
 $1=$g;
 $i=0; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $3=$i; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 var $4=($3|0)<9; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 if($4){label=3;break;}else{label=8;break;} //@line 303 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $6=$i; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $7=$1; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $8=(($7+252)|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+($6<<2))|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $11=($10|0)!=0; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 if($11){label=4;break;}else{label=6;break;} //@line 304 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $13=$i; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $14=$1; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+252)|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($15+($13<<2))|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $17=HEAP32[(($16)>>2)]; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $19=$18; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+5)|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $21=HEAP8[($20)]; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $22=($21&255); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $23=$22&3; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $24=($23|0)!=0; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 if($24){label=5;break;}else{label=6;break;} //@line 304 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $26=$1; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $27=$i; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $28=$1; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $29=(($28+252)|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $30=(($29+($27<<2))|0); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $31=HEAP32[(($30)>>2)]; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($26,$32); //@line 304 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 label=7;break; //@line 304 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $35=$i; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 var $36=((($35)+(1))|0); //@line 303 "lib/lua-5.2.3/src/lgc.c"
 $i=$36; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 303 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 STACKTOP=sp;return; //@line 305 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _remarkupvals($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $uv;
 $1=$g;
 var $2=$1; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+112)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+16)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $5=$4; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+4)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 $uv=$7; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $9=$uv; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $10=$1; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+112)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $12=($9|0)!=($11|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 if($12){label=3;break;}else{label=10;break;} //@line 326 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $14=$uv; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $16=$15; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+5)|0); //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP8[($17)]; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18&255); //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $20=$19&7; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 var $21=($20|0)!=0; //@line 327 "lib/lua-5.2.3/src/lgc.c"
 if($21){label=8;break;}else{label=4;break;} //@line 327 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $23=$uv; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+8)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $25=HEAP32[(($24)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+8)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $28=$27&64; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $29=($28|0)!=0; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 if($29){label=5;break;}else{label=7;break;} //@line 328 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $31=$uv; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+8)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $33=HEAP32[(($32)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+5)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP8[($38)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39&255); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40&3; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41|0)!=0; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 if($42){label=6;break;}else{label=7;break;} //@line 328 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $44=$1; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $45=$uv; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+8)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $47=HEAP32[(($46)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $48=(($47)|0); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $49=$48; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($44,$50); //@line 328 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 label=8;break; //@line 328 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 label=9;break; //@line 329 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $54=$uv; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+16)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $56=$55; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $57=(($56+4)|0); //@line 326 "lib/lua-5.2.3/src/lgc.c"
 var $58=HEAP32[(($57)>>2)]; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 $uv=$58; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 326 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 STACKTOP=sp;return; //@line 330 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _propagateall($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$g;
 label=2;break; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $3=$1; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+84)|0); //@line 567 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5|0)!=0; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 if($6){label=3;break;}else{label=4;break;} //@line 567 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $8=$1; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 _propagatemark($8); //@line 567 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 567 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 STACKTOP=sp;return; //@line 568 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _retraversegrays($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $weak;
 var $grayagain;
 var $ephemeron;
 $1=$g;
 var $2=$1; //@line 583 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+92)|0); //@line 583 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 583 "lib/lua-5.2.3/src/lgc.c"
 $weak=$4; //@line 583 "lib/lua-5.2.3/src/lgc.c"
 var $5=$1; //@line 584 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+88)|0); //@line 584 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP32[(($6)>>2)]; //@line 584 "lib/lua-5.2.3/src/lgc.c"
 $grayagain=$7; //@line 584 "lib/lua-5.2.3/src/lgc.c"
 var $8=$1; //@line 585 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+96)|0); //@line 585 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 585 "lib/lua-5.2.3/src/lgc.c"
 $ephemeron=$10; //@line 585 "lib/lua-5.2.3/src/lgc.c"
 var $11=$1; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+96)|0); //@line 586 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($12)>>2)]=0; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $13=$1; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+88)|0); //@line 586 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($14)>>2)]=0; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $15=$1; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($15+92)|0); //@line 586 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($16)>>2)]=0; //@line 586 "lib/lua-5.2.3/src/lgc.c"
 var $17=$1; //@line 587 "lib/lua-5.2.3/src/lgc.c"
 _propagateall($17); //@line 587 "lib/lua-5.2.3/src/lgc.c"
 var $18=$1; //@line 588 "lib/lua-5.2.3/src/lgc.c"
 var $19=$grayagain; //@line 588 "lib/lua-5.2.3/src/lgc.c"
 _propagatelist($18,$19); //@line 588 "lib/lua-5.2.3/src/lgc.c"
 var $20=$1; //@line 589 "lib/lua-5.2.3/src/lgc.c"
 var $21=$weak; //@line 589 "lib/lua-5.2.3/src/lgc.c"
 _propagatelist($20,$21); //@line 589 "lib/lua-5.2.3/src/lgc.c"
 var $22=$1; //@line 590 "lib/lua-5.2.3/src/lgc.c"
 var $23=$ephemeron; //@line 590 "lib/lua-5.2.3/src/lgc.c"
 _propagatelist($22,$23); //@line 590 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 591 "lib/lua-5.2.3/src/lgc.c"
}


function _convergeephemerons($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $changed;
 var $w;
 var $next;
 $1=$g;
 label=2;break; //@line 596 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $3=$1; //@line 598 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+96)|0); //@line 598 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 598 "lib/lua-5.2.3/src/lgc.c"
 $next=$5; //@line 598 "lib/lua-5.2.3/src/lgc.c"
 var $6=$1; //@line 599 "lib/lua-5.2.3/src/lgc.c"
 var $7=(($6+96)|0); //@line 599 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($7)>>2)]=0; //@line 599 "lib/lua-5.2.3/src/lgc.c"
 $changed=0; //@line 600 "lib/lua-5.2.3/src/lgc.c"
 label=3;break; //@line 601 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$next; //@line 601 "lib/lua-5.2.3/src/lgc.c"
 $w=$9; //@line 601 "lib/lua-5.2.3/src/lgc.c"
 var $10=($9|0)!=0; //@line 601 "lib/lua-5.2.3/src/lgc.c"
 if($10){label=4;break;}else{label=7;break;} //@line 601 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $12=$w; //@line 602 "lib/lua-5.2.3/src/lgc.c"
 var $13=$12; //@line 602 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+24)|0); //@line 602 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 602 "lib/lua-5.2.3/src/lgc.c"
 $next=$15; //@line 602 "lib/lua-5.2.3/src/lgc.c"
 var $16=$1; //@line 603 "lib/lua-5.2.3/src/lgc.c"
 var $17=$w; //@line 603 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17; //@line 603 "lib/lua-5.2.3/src/lgc.c"
 var $19=_traverseephemeron($16,$18); //@line 603 "lib/lua-5.2.3/src/lgc.c"
 var $20=($19|0)!=0; //@line 603 "lib/lua-5.2.3/src/lgc.c"
 if($20){label=5;break;}else{label=6;break;} //@line 603 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $22=$1; //@line 604 "lib/lua-5.2.3/src/lgc.c"
 _propagateall($22); //@line 604 "lib/lua-5.2.3/src/lgc.c"
 $changed=1; //@line 605 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 606 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 label=3;break; //@line 607 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 label=8;break; //@line 608 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $26=$changed; //@line 608 "lib/lua-5.2.3/src/lgc.c"
 var $27=($26|0)!=0; //@line 608 "lib/lua-5.2.3/src/lgc.c"
 if($27){label=2;break;}else{label=9;break;} //@line 608 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 STACKTOP=sp;return; //@line 609 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _clearvalues($g,$l,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $h;
 var $n;
 var $limit;
 var $i;
 var $o;
 $1=$g;
 $2=$l;
 $3=$f;
 label=2;break; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $5=$2; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 var $6=$3; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 var $7=($5|0)!=($6|0); //@line 644 "lib/lua-5.2.3/src/lgc.c"
 if($7){label=3;break;}else{label=18;break;} //@line 644 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$2; //@line 645 "lib/lua-5.2.3/src/lgc.c"
 var $10=$9; //@line 645 "lib/lua-5.2.3/src/lgc.c"
 $h=$10; //@line 645 "lib/lua-5.2.3/src/lgc.c"
 var $11=$h; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+7)|0); //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP8[($12)]; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $14=($13&255); //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $15=1<<$14; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $16=$h; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+16)|0); //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP32[(($17)>>2)]; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+($15<<5))|0); //@line 646 "lib/lua-5.2.3/src/lgc.c"
 $limit=$19; //@line 646 "lib/lua-5.2.3/src/lgc.c"
 $i=0; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $21=$i; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 var $22=$h; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+28)|0); //@line 648 "lib/lua-5.2.3/src/lgc.c"
 var $24=HEAP32[(($23)>>2)]; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 var $25=($21|0)<($24|0); //@line 648 "lib/lua-5.2.3/src/lgc.c"
 if($25){label=5;break;}else{label=9;break;} //@line 648 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $27=$i; //@line 649 "lib/lua-5.2.3/src/lgc.c"
 var $28=$h; //@line 649 "lib/lua-5.2.3/src/lgc.c"
 var $29=(($28+12)|0); //@line 649 "lib/lua-5.2.3/src/lgc.c"
 var $30=HEAP32[(($29)>>2)]; //@line 649 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+($27<<4))|0); //@line 649 "lib/lua-5.2.3/src/lgc.c"
 $o=$31; //@line 649 "lib/lua-5.2.3/src/lgc.c"
 var $32=$1; //@line 650 "lib/lua-5.2.3/src/lgc.c"
 var $33=$o; //@line 650 "lib/lua-5.2.3/src/lgc.c"
 var $34=_iscleared($32,$33); //@line 650 "lib/lua-5.2.3/src/lgc.c"
 var $35=($34|0)!=0; //@line 650 "lib/lua-5.2.3/src/lgc.c"
 if($35){label=6;break;}else{label=7;break;} //@line 650 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $37=$o; //@line 651 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+8)|0); //@line 651 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($38)>>2)]=0; //@line 651 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 651 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 label=8;break; //@line 652 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $41=$i; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 var $42=((($41)+(1))|0); //@line 648 "lib/lua-5.2.3/src/lgc.c"
 $i=$42; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 648 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $44=$h; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $45=(($44+16)|0); //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $46=HEAP32[(($45)>>2)]; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46)|0); //@line 653 "lib/lua-5.2.3/src/lgc.c"
 $n=$47; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $49=$n; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $50=$limit; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $51=($49>>>0)<($50>>>0); //@line 653 "lib/lua-5.2.3/src/lgc.c"
 if($51){label=11;break;}else{label=16;break;} //@line 653 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $53=$n; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $54=(($53)|0); //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+8)|0); //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $57=($56|0)==0; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 if($57){label=14;break;}else{label=12;break;} //@line 654 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $59=$1; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $60=$n; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60)|0); //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $62=_iscleared($59,$61); //@line 654 "lib/lua-5.2.3/src/lgc.c"
 var $63=($62|0)!=0; //@line 654 "lib/lua-5.2.3/src/lgc.c"
 if($63){label=13;break;}else{label=14;break;} //@line 654 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $65=$n; //@line 655 "lib/lua-5.2.3/src/lgc.c"
 var $66=(($65)|0); //@line 655 "lib/lua-5.2.3/src/lgc.c"
 var $67=(($66+8)|0); //@line 655 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($67)>>2)]=0; //@line 655 "lib/lua-5.2.3/src/lgc.c"
 var $68=$n; //@line 656 "lib/lua-5.2.3/src/lgc.c"
 _removeentry($68); //@line 656 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 657 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 label=15;break; //@line 658 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $71=$n; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 var $72=(($71+32)|0); //@line 653 "lib/lua-5.2.3/src/lgc.c"
 $n=$72; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 653 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 label=17;break; //@line 659 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $75=$2; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 var $76=$75; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 var $77=(($76+24)|0); //@line 644 "lib/lua-5.2.3/src/lgc.c"
 var $78=HEAP32[(($77)>>2)]; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 $2=$78; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 644 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 STACKTOP=sp;return; //@line 660 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _markbeingfnz($g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $o;
 $1=$g;
 var $2=$1; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+104)|0); //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $4=HEAP32[(($3)>>2)]; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 $o=$4; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $6=$o; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $7=($6|0)!=0; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 if($7){label=3;break;}else{label=5;break;} //@line 313 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$o; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $10=$9; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+5)|0); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $12=HEAP8[($11)]; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $13=($12&255); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $14=$13&-72; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $15=$1; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $16=(($15+60)|0); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $17=HEAP8[($16)]; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $18=($17&255); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $19=$18&3; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19)&255); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $21=($20&255); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $22=$14|$21; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22)&255); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $24=$o; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $25=$24; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+5)|0); //@line 314 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($26)]=$23; //@line 314 "lib/lua-5.2.3/src/lgc.c"
 var $27=$1; //@line 315 "lib/lua-5.2.3/src/lgc.c"
 var $28=$o; //@line 315 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($27,$28); //@line 315 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 316 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $30=$o; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31)|0); //@line 313 "lib/lua-5.2.3/src/lgc.c"
 var $33=HEAP32[(($32)>>2)]; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 $o=$33; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 313 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 STACKTOP=sp;return; //@line 317 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _clearkeys($g,$l,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $h;
 var $n;
 var $limit;
 $1=$g;
 $2=$l;
 $3=$f;
 label=2;break; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $5=$2; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 var $6=$3; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 var $7=($5|0)!=($6|0); //@line 626 "lib/lua-5.2.3/src/lgc.c"
 if($7){label=3;break;}else{label=12;break;} //@line 626 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$2; //@line 627 "lib/lua-5.2.3/src/lgc.c"
 var $10=$9; //@line 627 "lib/lua-5.2.3/src/lgc.c"
 $h=$10; //@line 627 "lib/lua-5.2.3/src/lgc.c"
 var $11=$h; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+7)|0); //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP8[($12)]; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $14=($13&255); //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $15=1<<$14; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $16=$h; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+16)|0); //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP32[(($17)>>2)]; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+($15<<5))|0); //@line 628 "lib/lua-5.2.3/src/lgc.c"
 $limit=$19; //@line 628 "lib/lua-5.2.3/src/lgc.c"
 var $20=$h; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+16)|0); //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22)|0); //@line 629 "lib/lua-5.2.3/src/lgc.c"
 $n=$23; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $25=$n; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $26=$limit; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $27=($25>>>0)<($26>>>0); //@line 629 "lib/lua-5.2.3/src/lgc.c"
 if($27){label=5;break;}else{label=10;break;} //@line 629 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $29=$n; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $30=(($29)|0); //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+8)|0); //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $33=($32|0)==0; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 if($33){label=8;break;}else{label=6;break;} //@line 630 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $35=$1; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $36=$n; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+16)|0); //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $38=$37; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $39=_iscleared($35,$38); //@line 630 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39|0)!=0; //@line 630 "lib/lua-5.2.3/src/lgc.c"
 if($40){label=7;break;}else{label=8;break;} //@line 630 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $42=$n; //@line 631 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42)|0); //@line 631 "lib/lua-5.2.3/src/lgc.c"
 var $44=(($43+8)|0); //@line 631 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($44)>>2)]=0; //@line 631 "lib/lua-5.2.3/src/lgc.c"
 var $45=$n; //@line 632 "lib/lua-5.2.3/src/lgc.c"
 _removeentry($45); //@line 632 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 633 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 label=9;break; //@line 634 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $48=$n; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+32)|0); //@line 629 "lib/lua-5.2.3/src/lgc.c"
 $n=$49; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 629 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 label=11;break; //@line 635 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $52=$2; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 var $53=$52; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 var $54=(($53+24)|0); //@line 626 "lib/lua-5.2.3/src/lgc.c"
 var $55=HEAP32[(($54)>>2)]; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 $2=$55; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 626 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 STACKTOP=sp;return; //@line 636 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _iscleared($g,$o){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$g;
 $3=$o;
 var $4=$3; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+8)|0); //@line 122 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 var $7=$6&64; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7|0)!=0; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 if($8){label=3;break;}else{label=2;break;} //@line 122 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 $1=0; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 122 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $11=$3; //@line 123 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+8)|0); //@line 123 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP32[(($12)>>2)]; //@line 123 "lib/lua-5.2.3/src/lgc.c"
 var $14=$13&15; //@line 123 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14|0)==4; //@line 123 "lib/lua-5.2.3/src/lgc.c"
 if($15){label=4;break;}else{label=8;break;} //@line 123 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $17=$3; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17)|0); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $19=$18; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $20=HEAP32[(($19)>>2)]; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $21=$20; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $22=($21|0)!=0; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 if($22){label=5;break;}else{label=7;break;} //@line 124 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $24=$3; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24)|0); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $28=$27; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $29=$28; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $30=$29; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+5)|0); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP8[($31)]; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $33=($32&255); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $34=$33&3; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $35=($34|0)!=0; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 if($35){label=6;break;}else{label=7;break;} //@line 124 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $37=$2; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $38=$3; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $39=(($38)|0); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $40=$39; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP32[(($40)>>2)]; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $42=$41; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 var $43=$42; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($37,$43); //@line 124 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 124 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 $1=0; //@line 125 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 125 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $46=$3; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46)|0); //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $48=$47; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $49=HEAP32[(($48)>>2)]; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $50=$49; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $51=(($50+5)|0); //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP8[($51)]; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $53=($52&255); //@line 127 "lib/lua-5.2.3/src/lgc.c"
 var $54=$53&3; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 $1=$54; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 127 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $56=$1; //@line 128 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $56; //@line 128 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _removeentry($n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$n;
 var $2=$1; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $3=(($2+16)|0); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $4=$3; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+8)|0); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $7=$6&64; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7|0)!=0; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 if($8){label=2;break;}else{label=4;break;} //@line 109 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $10=$1; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+16)|0); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $12=$11; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12)|0); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $14=$13; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $16=$15; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+5)|0); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP8[($17)]; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18&255); //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $20=$19&3; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 var $21=($20|0)!=0; //@line 109 "lib/lua-5.2.3/src/lgc.c"
 if($21){label=3;break;}else{label=4;break;} //@line 109 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $23=$1; //@line 110 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+16)|0); //@line 110 "lib/lua-5.2.3/src/lgc.c"
 var $25=$24; //@line 110 "lib/lua-5.2.3/src/lgc.c"
 var $26=(($25+8)|0); //@line 110 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($26)>>2)]=11; //@line 110 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 110 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 STACKTOP=sp;return; //@line 111 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traverseephemeron($g,$h){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $marked;
 var $hasclears;
 var $prop;
 var $n;
 var $limit;
 var $i;
 $1=$g;
 $2=$h;
 $marked=0; //@line 379 "lib/lua-5.2.3/src/lgc.c"
 $hasclears=0; //@line 380 "lib/lua-5.2.3/src/lgc.c"
 $prop=0; //@line 381 "lib/lua-5.2.3/src/lgc.c"
 var $3=$2; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+7)|0); //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP8[($4)]; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5&255); //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $7=1<<$6; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $8=$2; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+16)|0); //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+($7<<5))|0); //@line 382 "lib/lua-5.2.3/src/lgc.c"
 $limit=$11; //@line 382 "lib/lua-5.2.3/src/lgc.c"
 $i=0; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $13=$i; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 var $14=$2; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+28)|0); //@line 385 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 var $17=($13|0)<($16|0); //@line 385 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=3;break;}else{label=8;break;} //@line 385 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=$i; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $20=$2; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+12)|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+($19<<4))|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+8)|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $25=HEAP32[(($24)>>2)]; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25&64; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $27=($26|0)!=0; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 if($27){label=4;break;}else{label=6;break;} //@line 386 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $29=$i; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $30=$2; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+12)|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+($29<<4))|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33)|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+5)|0); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP8[($38)]; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39&255); //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40&3; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41|0)!=0; //@line 386 "lib/lua-5.2.3/src/lgc.c"
 if($42){label=5;break;}else{label=6;break;} //@line 386 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 $marked=1; //@line 387 "lib/lua-5.2.3/src/lgc.c"
 var $44=$1; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $45=$i; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $46=$2; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+12)|0); //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $48=HEAP32[(($47)>>2)]; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+($45<<4))|0); //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $50=(($49)|0); //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP32[(($51)>>2)]; //@line 388 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($44,$52); //@line 388 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 389 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 label=7;break; //@line 390 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $55=$i; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 var $56=((($55)+(1))|0); //@line 385 "lib/lua-5.2.3/src/lgc.c"
 $i=$56; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 385 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $58=$2; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58+16)|0); //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $60=HEAP32[(($59)>>2)]; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60)|0); //@line 392 "lib/lua-5.2.3/src/lgc.c"
 $n=$61; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $63=$n; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $64=$limit; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $65=($63>>>0)<($64>>>0); //@line 392 "lib/lua-5.2.3/src/lgc.c"
 if($65){label=10;break;}else{label=24;break;} //@line 392 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $67=$n; //@line 394 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67)|0); //@line 394 "lib/lua-5.2.3/src/lgc.c"
 var $69=(($68+8)|0); //@line 394 "lib/lua-5.2.3/src/lgc.c"
 var $70=HEAP32[(($69)>>2)]; //@line 394 "lib/lua-5.2.3/src/lgc.c"
 var $71=($70|0)==0; //@line 394 "lib/lua-5.2.3/src/lgc.c"
 if($71){label=11;break;}else{label=12;break;} //@line 394 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $73=$n; //@line 395 "lib/lua-5.2.3/src/lgc.c"
 _removeentry($73); //@line 395 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 395 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $75=$1; //@line 396 "lib/lua-5.2.3/src/lgc.c"
 var $76=$n; //@line 396 "lib/lua-5.2.3/src/lgc.c"
 var $77=(($76+16)|0); //@line 396 "lib/lua-5.2.3/src/lgc.c"
 var $78=$77; //@line 396 "lib/lua-5.2.3/src/lgc.c"
 var $79=_iscleared($75,$78); //@line 396 "lib/lua-5.2.3/src/lgc.c"
 var $80=($79|0)!=0; //@line 396 "lib/lua-5.2.3/src/lgc.c"
 if($80){label=13;break;}else{label=17;break;} //@line 396 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 $hasclears=1; //@line 397 "lib/lua-5.2.3/src/lgc.c"
 var $82=$n; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $83=(($82)|0); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $84=(($83+8)|0); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $85=HEAP32[(($84)>>2)]; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $86=$85&64; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $87=($86|0)!=0; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 if($87){label=14;break;}else{label=16;break;} //@line 398 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $89=$n; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $90=(($89)|0); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $91=(($90)|0); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $92=$91; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $93=HEAP32[(($92)>>2)]; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $94=$93; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $95=(($94+5)|0); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $96=HEAP8[($95)]; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $97=($96&255); //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $98=$97&3; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 var $99=($98|0)!=0; //@line 398 "lib/lua-5.2.3/src/lgc.c"
 if($99){label=15;break;}else{label=16;break;} //@line 398 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 $prop=1; //@line 399 "lib/lua-5.2.3/src/lgc.c"
 label=16;break; //@line 399 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 label=21;break; //@line 400 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $103=$n; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $104=(($103)|0); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $105=(($104+8)|0); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $106=HEAP32[(($105)>>2)]; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $107=$106&64; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $108=($107|0)!=0; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 if($108){label=18;break;}else{label=20;break;} //@line 401 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $110=$n; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $111=(($110)|0); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $112=(($111)|0); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $113=$112; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $114=HEAP32[(($113)>>2)]; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $115=$114; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $116=(($115+5)|0); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $117=HEAP8[($116)]; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $118=($117&255); //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $119=$118&3; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 var $120=($119|0)!=0; //@line 401 "lib/lua-5.2.3/src/lgc.c"
 if($120){label=19;break;}else{label=20;break;} //@line 401 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 $marked=1; //@line 402 "lib/lua-5.2.3/src/lgc.c"
 var $122=$1; //@line 403 "lib/lua-5.2.3/src/lgc.c"
 var $123=$n; //@line 403 "lib/lua-5.2.3/src/lgc.c"
 var $124=(($123)|0); //@line 403 "lib/lua-5.2.3/src/lgc.c"
 var $125=(($124)|0); //@line 403 "lib/lua-5.2.3/src/lgc.c"
 var $126=$125; //@line 403 "lib/lua-5.2.3/src/lgc.c"
 var $127=HEAP32[(($126)>>2)]; //@line 403 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($122,$127); //@line 403 "lib/lua-5.2.3/src/lgc.c"
 label=20;break; //@line 404 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 label=21;break;
 case 21: 
 label=22;break;
 case 22: 
 label=23;break; //@line 405 "lib/lua-5.2.3/src/lgc.c"
 case 23: 
 var $132=$n; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 var $133=(($132+32)|0); //@line 392 "lib/lua-5.2.3/src/lgc.c"
 $n=$133; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 392 "lib/lua-5.2.3/src/lgc.c"
 case 24: 
 var $135=$prop; //@line 406 "lib/lua-5.2.3/src/lgc.c"
 var $136=($135|0)!=0; //@line 406 "lib/lua-5.2.3/src/lgc.c"
 if($136){label=25;break;}else{label=26;break;} //@line 406 "lib/lua-5.2.3/src/lgc.c"
 case 25: 
 var $138=$1; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $139=(($138+96)|0); //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $140=HEAP32[(($139)>>2)]; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $141=$2; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $142=(($141+24)|0); //@line 407 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($142)>>2)]=$140; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $143=$2; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $144=$143; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $145=$1; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 var $146=(($145+96)|0); //@line 407 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($146)>>2)]=$144; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 label=30;break; //@line 407 "lib/lua-5.2.3/src/lgc.c"
 case 26: 
 var $148=$hasclears; //@line 408 "lib/lua-5.2.3/src/lgc.c"
 var $149=($148|0)!=0; //@line 408 "lib/lua-5.2.3/src/lgc.c"
 if($149){label=27;break;}else{label=28;break;} //@line 408 "lib/lua-5.2.3/src/lgc.c"
 case 27: 
 var $151=$1; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $152=(($151+100)|0); //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $153=HEAP32[(($152)>>2)]; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $154=$2; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $155=(($154+24)|0); //@line 409 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($155)>>2)]=$153; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $156=$2; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $157=$156; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $158=$1; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 var $159=(($158+100)|0); //@line 409 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($159)>>2)]=$157; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 label=29;break; //@line 409 "lib/lua-5.2.3/src/lgc.c"
 case 28: 
 var $161=$1; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $162=(($161+88)|0); //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $163=HEAP32[(($162)>>2)]; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $164=$2; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $165=(($164+24)|0); //@line 411 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($165)>>2)]=$163; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $166=$2; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $167=$166; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $168=$1; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 var $169=(($168+88)|0); //@line 411 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($169)>>2)]=$167; //@line 411 "lib/lua-5.2.3/src/lgc.c"
 label=29;break;
 case 29: 
 label=30;break;
 case 30: 
 var $172=$marked; //@line 412 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $172; //@line 412 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _propagatelist($g,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$g;
 $2=$l;
 var $3=$2; //@line 573 "lib/lua-5.2.3/src/lgc.c"
 var $4=$1; //@line 573 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+84)|0); //@line 573 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($5)>>2)]=$3; //@line 573 "lib/lua-5.2.3/src/lgc.c"
 var $6=$1; //@line 574 "lib/lua-5.2.3/src/lgc.c"
 _propagateall($6); //@line 574 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return; //@line 575 "lib/lua-5.2.3/src/lgc.c"
}


function _traversetable($g,$h){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $weakkey;
 var $weakvalue;
 var $mode;
 $1=$g;
 $2=$h;
 var $3=$2; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+8)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5|0)==0; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 if($6){label=2;break;}else{label=3;break;} //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $30=0;label=7;break; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$2; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $10=(($9+8)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $11=HEAP32[(($10)>>2)]; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $12=(($11+6)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $13=HEAP8[($12)]; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $14=($13&255); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14&8; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15|0)!=0; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 if($16){label=4;break;}else{label=5;break;} //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $28=0;label=6;break; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $19=$2; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+8)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $21=HEAP32[(($20)>>2)]; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $22=$1; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+184)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+12)|0); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $25=HEAP32[(($24)>>2)]; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $26=_luaT_gettm($21,3,$25); //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $28=$26;label=6;break; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $28; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $30=$28;label=7;break; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $30; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 $mode=$30; //@line 436 "lib/lua-5.2.3/src/lgc.c"
 var $31=$2; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+8)|0); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $33=HEAP32[(($32)>>2)]; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $34=($33|0)!=0; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 if($34){label=8;break;}else{label=10;break;} //@line 437 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $36=$2; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+8)|0); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $38=HEAP32[(($37)>>2)]; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $39=$38; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $40=$39; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $41=(($40+5)|0); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $42=HEAP8[($41)]; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $43=($42&255); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $44=$43&3; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $45=($44|0)!=0; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 if($45){label=9;break;}else{label=10;break;} //@line 437 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $47=$1; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $48=$2; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+8)|0); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP32[(($49)>>2)]; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($47,$51); //@line 437 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 437 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $53=$mode; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 var $54=($53|0)!=0; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 if($54){label=11;break;}else{label=22;break;} //@line 438 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $56=$mode; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 var $57=(($56+8)|0); //@line 438 "lib/lua-5.2.3/src/lgc.c"
 var $58=HEAP32[(($57)>>2)]; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 var $59=$58&15; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 var $60=($59|0)==4; //@line 438 "lib/lua-5.2.3/src/lgc.c"
 if($60){label=12;break;}else{label=22;break;} //@line 438 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $62=$mode; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $63=(($62)|0); //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $64=$63; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $65=HEAP32[(($64)>>2)]; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $66=$65; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $67=(($66+16)|0); //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $68=$67; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $69=_strchr($68,107); //@line 439 "lib/lua-5.2.3/src/lgc.c"
 $weakkey=$69; //@line 439 "lib/lua-5.2.3/src/lgc.c"
 var $70=$mode; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $71=(($70)|0); //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $72=$71; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $73=HEAP32[(($72)>>2)]; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $74=$73; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $75=(($74+16)|0); //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $76=$75; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $77=_strchr($76,118); //@line 440 "lib/lua-5.2.3/src/lgc.c"
 $weakvalue=$77; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $78=$weakkey; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $79=($78|0)!=0; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 if($79){var $84=1;label=14;break;}else{label=13;break;} //@line 440 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $81=$weakvalue; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $82=($81|0)!=0; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 var $84=$82;label=14;break; //@line 440 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $84;
 if($84){label=15;break;}else{label=22;break;} //@line 440 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $86=$2; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $87=$86; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $88=$87; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $89=(($88+5)|0); //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $90=HEAP8[($89)]; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $91=($90&255); //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $92=$91&251; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $93=(($92)&255); //@line 442 "lib/lua-5.2.3/src/lgc.c"
 HEAP8[($89)]=$93; //@line 442 "lib/lua-5.2.3/src/lgc.c"
 var $94=$weakkey; //@line 443 "lib/lua-5.2.3/src/lgc.c"
 var $95=($94|0)!=0; //@line 443 "lib/lua-5.2.3/src/lgc.c"
 if($95){label=17;break;}else{label=16;break;} //@line 443 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $97=$1; //@line 444 "lib/lua-5.2.3/src/lgc.c"
 var $98=$2; //@line 444 "lib/lua-5.2.3/src/lgc.c"
 _traverseweakvalue($97,$98); //@line 444 "lib/lua-5.2.3/src/lgc.c"
 label=21;break; //@line 444 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $100=$weakvalue; //@line 445 "lib/lua-5.2.3/src/lgc.c"
 var $101=($100|0)!=0; //@line 445 "lib/lua-5.2.3/src/lgc.c"
 if($101){label=19;break;}else{label=18;break;} //@line 445 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $103=$1; //@line 446 "lib/lua-5.2.3/src/lgc.c"
 var $104=$2; //@line 446 "lib/lua-5.2.3/src/lgc.c"
 var $105=_traverseephemeron($103,$104); //@line 446 "lib/lua-5.2.3/src/lgc.c"
 label=20;break; //@line 446 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $107=$1; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $108=(($107+100)|0); //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $109=HEAP32[(($108)>>2)]; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $110=$2; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $111=(($110+24)|0); //@line 448 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($111)>>2)]=$109; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $112=$2; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $113=$112; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $114=$1; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 var $115=(($114+100)|0); //@line 448 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($115)>>2)]=$113; //@line 448 "lib/lua-5.2.3/src/lgc.c"
 label=20;break;
 case 20: 
 label=21;break;
 case 21: 
 label=23;break; //@line 449 "lib/lua-5.2.3/src/lgc.c"
 case 22: 
 var $119=$1; //@line 451 "lib/lua-5.2.3/src/lgc.c"
 var $120=$2; //@line 451 "lib/lua-5.2.3/src/lgc.c"
 _traversestrongtable($119,$120); //@line 451 "lib/lua-5.2.3/src/lgc.c"
 label=23;break;
 case 23: 
 var $122=$2; //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $123=(($122+28)|0); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $124=HEAP32[(($123)>>2)]; //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $125=($124<<4); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $126=((($125)+(32))|0); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $127=$2; //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $128=(($127+7)|0); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $129=HEAP8[($128)]; //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $130=($129&255); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $131=1<<$130; //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $132=($131<<5); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 var $133=((($126)+($132))|0); //@line 452 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $133; //@line 452 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traverseLclosure($g,$cl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 $1=$g;
 $2=$cl;
 var $3=$2; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+12)|0); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5|0)!=0; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 if($6){label=2;break;}else{label=4;break;} //@line 488 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $8=$2; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+12)|0); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $12=$11; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+5)|0); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP8[($13)]; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14&255); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $16=$15&3; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16|0)!=0; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=3;break;}else{label=4;break;} //@line 488 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=$1; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $20=$2; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+12)|0); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 var $23=$22; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($19,$23); //@line 488 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 488 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 $i=0; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $26=$i; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $27=$2; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+6)|0); //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP8[($28)]; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29&255); //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $31=($26|0)<($30|0); //@line 489 "lib/lua-5.2.3/src/lgc.c"
 if($31){label=6;break;}else{label=11;break;} //@line 489 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $33=$i; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $34=$2; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+16)|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $36=(($35+($33<<2))|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $37=HEAP32[(($36)>>2)]; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $38=($37|0)!=0; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 if($38){label=7;break;}else{label=9;break;} //@line 490 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $40=$i; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $41=$2; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $42=(($41+16)|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+($40<<2))|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $44=HEAP32[(($43)>>2)]; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $45=$44; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $46=$45; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+5)|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $48=HEAP8[($47)]; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $49=($48&255); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $50=$49&3; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $51=($50|0)!=0; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 if($51){label=8;break;}else{label=9;break;} //@line 490 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $53=$1; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $54=$i; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $55=$2; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55+16)|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $57=(($56+($54<<2))|0); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $58=HEAP32[(($57)>>2)]; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 var $59=$58; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($53,$59); //@line 490 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 label=10;break; //@line 490 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $62=$i; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 var $63=((($62)+(1))|0); //@line 489 "lib/lua-5.2.3/src/lgc.c"
 $i=$63; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 489 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $65=$2; //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $66=(($65+6)|0); //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $67=HEAP8[($66)]; //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $68=($67&255); //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $69=((($68)-(1))|0); //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $70=($69<<2); //@line 491 "lib/lua-5.2.3/src/lgc.c"
 var $71=((($70)+(20))|0); //@line 491 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $71; //@line 491 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traverseCclosure($g,$cl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 $1=$g;
 $2=$cl;
 $i=0; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $4=$i; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $5=$2; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $6=(($5+6)|0); //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $7=HEAP8[($6)]; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7&255); //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $9=($4|0)<($8|0); //@line 481 "lib/lua-5.2.3/src/lgc.c"
 if($9){label=3;break;}else{label=8;break;} //@line 481 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $11=$i; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $12=$2; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+16)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+($11<<4))|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+8)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16&64; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $18=($17|0)!=0; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 if($18){label=4;break;}else{label=6;break;} //@line 482 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $20=$i; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $21=$2; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $22=(($21+16)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+($20<<4))|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $25=$24; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $26=HEAP32[(($25)>>2)]; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $27=$26; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+5)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP8[($28)]; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29&255); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30&3; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $32=($31|0)!=0; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 if($32){label=5;break;}else{label=6;break;} //@line 482 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $34=$1; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $35=$i; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $36=$2; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+16)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+($35<<4))|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $39=(($38)|0); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $40=$39; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP32[(($40)>>2)]; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($34,$41); //@line 482 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 label=7;break; //@line 482 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $44=$i; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 var $45=((($44)+(1))|0); //@line 481 "lib/lua-5.2.3/src/lgc.c"
 $i=$45; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 481 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $47=$2; //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $48=(($47+6)|0); //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $49=HEAP8[($48)]; //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $50=($49&255); //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $51=((($50)-(1))|0); //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $52=($51<<4); //@line 483 "lib/lua-5.2.3/src/lgc.c"
 var $53=((($52)+(32))|0); //@line 483 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $53; //@line 483 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traversestack($g,$th){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $n;
 var $o;
 var $lim;
 var $ci;
 $2=$g;
 $3=$th;
 $n=0; //@line 496 "lib/lua-5.2.3/src/lgc.c"
 var $4=$3; //@line 497 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+28)|0); //@line 497 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP32[(($5)>>2)]; //@line 497 "lib/lua-5.2.3/src/lgc.c"
 $o=$6; //@line 497 "lib/lua-5.2.3/src/lgc.c"
 var $7=$o; //@line 498 "lib/lua-5.2.3/src/lgc.c"
 var $8=($7|0)==0; //@line 498 "lib/lua-5.2.3/src/lgc.c"
 if($8){label=2;break;}else{label=3;break;} //@line 498 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 $1=1; //@line 499 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 499 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 label=4;break; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $12=$o; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 var $13=$3; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 var $14=(($13+8)|0); //@line 500 "lib/lua-5.2.3/src/lgc.c"
 var $15=HEAP32[(($14)>>2)]; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 var $16=($12>>>0)<($15>>>0); //@line 500 "lib/lua-5.2.3/src/lgc.c"
 if($16){label=5;break;}else{label=10;break;} //@line 500 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $18=$o; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+8)|0); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $20=HEAP32[(($19)>>2)]; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $21=$20&64; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $22=($21|0)!=0; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 if($22){label=6;break;}else{label=8;break;} //@line 501 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $24=$o; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $25=(($24)|0); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $27=HEAP32[(($26)>>2)]; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $28=$27; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $29=(($28+5)|0); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $30=HEAP8[($29)]; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $31=($30&255); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31&3; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $33=($32|0)!=0; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 if($33){label=7;break;}else{label=8;break;} //@line 501 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $35=$2; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $36=$o; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36)|0); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $38=$37; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP32[(($38)>>2)]; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($35,$39); //@line 501 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 label=9;break; //@line 501 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $42=$o; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+16)|0); //@line 500 "lib/lua-5.2.3/src/lgc.c"
 $o=$43; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 500 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $45=$2; //@line 502 "lib/lua-5.2.3/src/lgc.c"
 var $46=(($45+61)|0); //@line 502 "lib/lua-5.2.3/src/lgc.c"
 var $47=HEAP8[($46)]; //@line 502 "lib/lua-5.2.3/src/lgc.c"
 var $48=($47&255); //@line 502 "lib/lua-5.2.3/src/lgc.c"
 var $49=($48|0)==1; //@line 502 "lib/lua-5.2.3/src/lgc.c"
 if($49){label=11;break;}else{label=16;break;} //@line 502 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $51=$3; //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $52=(($51+28)|0); //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $53=HEAP32[(($52)>>2)]; //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $54=$3; //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+32)|0); //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $56=HEAP32[(($55)>>2)]; //@line 503 "lib/lua-5.2.3/src/lgc.c"
 var $57=(($53+($56<<4))|0); //@line 503 "lib/lua-5.2.3/src/lgc.c"
 $lim=$57; //@line 503 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $59=$o; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 var $60=$lim; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 var $61=($59>>>0)<($60>>>0); //@line 504 "lib/lua-5.2.3/src/lgc.c"
 if($61){label=13;break;}else{label=15;break;} //@line 504 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $63=$o; //@line 505 "lib/lua-5.2.3/src/lgc.c"
 var $64=(($63+8)|0); //@line 505 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($64)>>2)]=0; //@line 505 "lib/lua-5.2.3/src/lgc.c"
 label=14;break; //@line 505 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $66=$o; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 var $67=(($66+16)|0); //@line 504 "lib/lua-5.2.3/src/lgc.c"
 $o=$67; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 504 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 label=21;break; //@line 506 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $70=$3; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $71=(($70+72)|0); //@line 509 "lib/lua-5.2.3/src/lgc.c"
 $ci=$71; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 label=17;break; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $73=$ci; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $74=$3; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $75=(($74+16)|0); //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $76=HEAP32[(($75)>>2)]; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $77=($73|0)!=($76|0); //@line 509 "lib/lua-5.2.3/src/lgc.c"
 if($77){label=18;break;}else{label=20;break;} //@line 509 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $79=$n; //@line 510 "lib/lua-5.2.3/src/lgc.c"
 var $80=((($79)+(1))|0); //@line 510 "lib/lua-5.2.3/src/lgc.c"
 $n=$80; //@line 510 "lib/lua-5.2.3/src/lgc.c"
 label=19;break; //@line 510 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 var $82=$ci; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $83=(($82+12)|0); //@line 509 "lib/lua-5.2.3/src/lgc.c"
 var $84=HEAP32[(($83)>>2)]; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 $ci=$84; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 label=17;break; //@line 509 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 label=21;break;
 case 21: 
 var $87=$3; //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $88=(($87+32)|0); //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $89=HEAP32[(($88)>>2)]; //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $90=($89<<4); //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $91=((($90)+(112))|0); //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $92=$n; //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $93=((($92)*(40))&-1); //@line 512 "lib/lua-5.2.3/src/lgc.c"
 var $94=((($91)+($93))|0); //@line 512 "lib/lua-5.2.3/src/lgc.c"
 $1=$94; //@line 512 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 512 "lib/lua-5.2.3/src/lgc.c"
 case 22: 
 var $96=$1; //@line 514 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $96; //@line 514 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traverseproto($g,$f){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 $1=$g;
 $2=$f;
 var $3=$2; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+32)|0); //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5|0)!=0; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 if($6){label=2;break;}else{label=4;break;} //@line 459 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $8=$2; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+32)|0); //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $12=$11; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+5)|0); //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP8[($13)]; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14&255); //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $16=$15&3; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 var $17=($16|0)!=0; //@line 459 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=3;break;}else{label=4;break;} //@line 459 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=$2; //@line 460 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19+32)|0); //@line 460 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($20)>>2)]=0; //@line 460 "lib/lua-5.2.3/src/lgc.c"
 label=4;break; //@line 460 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $22=$2; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+36)|0); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $24=HEAP32[(($23)>>2)]; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $25=($24|0)!=0; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 if($25){label=5;break;}else{label=7;break;} //@line 461 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $27=$2; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+36)|0); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP32[(($28)>>2)]; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $30=$29; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $32=(($31+5)|0); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $33=HEAP8[($32)]; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $34=($33&255); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34&3; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $36=($35|0)!=0; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 if($36){label=6;break;}else{label=7;break;} //@line 461 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $38=$1; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $39=$2; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $40=(($39+36)|0); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $41=HEAP32[(($40)>>2)]; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 var $42=$41; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($38,$42); //@line 461 "lib/lua-5.2.3/src/lgc.c"
 label=7;break; //@line 461 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 $i=0; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $45=$i; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 var $46=$2; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+44)|0); //@line 462 "lib/lua-5.2.3/src/lgc.c"
 var $48=HEAP32[(($47)>>2)]; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 var $49=($45|0)<($48|0); //@line 462 "lib/lua-5.2.3/src/lgc.c"
 if($49){label=9;break;}else{label=14;break;} //@line 462 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $51=$i; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $52=$2; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $53=(($52+8)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $54=HEAP32[(($53)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $55=(($54+($51<<4))|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $56=(($55+8)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $57=HEAP32[(($56)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $58=$57&64; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $59=($58|0)!=0; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 if($59){label=10;break;}else{label=12;break;} //@line 463 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $61=$i; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $62=$2; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $63=(($62+8)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $64=HEAP32[(($63)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $65=(($64+($61<<4))|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $66=(($65)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $67=$66; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $68=HEAP32[(($67)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $69=$68; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $70=(($69+5)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $71=HEAP8[($70)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $72=($71&255); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $73=$72&3; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $74=($73|0)!=0; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 if($74){label=11;break;}else{label=12;break;} //@line 463 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $76=$1; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $77=$i; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $78=$2; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $79=(($78+8)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $80=HEAP32[(($79)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $81=(($80+($77<<4))|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $82=(($81)|0); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $83=$82; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 var $84=HEAP32[(($83)>>2)]; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($76,$84); //@line 463 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 label=13;break; //@line 463 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $87=$i; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 var $88=((($87)+(1))|0); //@line 462 "lib/lua-5.2.3/src/lgc.c"
 $i=$88; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 462 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 $i=0; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 label=15;break; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $91=$i; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 var $92=$2; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 var $93=(($92+40)|0); //@line 464 "lib/lua-5.2.3/src/lgc.c"
 var $94=HEAP32[(($93)>>2)]; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 var $95=($91|0)<($94|0); //@line 464 "lib/lua-5.2.3/src/lgc.c"
 if($95){label=16;break;}else{label=21;break;} //@line 464 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $97=$i; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $98=$2; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $99=(($98+28)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $100=HEAP32[(($99)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $101=(($100+($97<<3))|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $102=(($101)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $103=HEAP32[(($102)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $104=($103|0)!=0; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 if($104){label=17;break;}else{label=19;break;} //@line 465 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $106=$i; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $107=$2; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $108=(($107+28)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $109=HEAP32[(($108)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $110=(($109+($106<<3))|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $111=(($110)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $112=HEAP32[(($111)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $113=$112; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $114=$113; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $115=(($114+5)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $116=HEAP8[($115)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $117=($116&255); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $118=$117&3; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $119=($118|0)!=0; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 if($119){label=18;break;}else{label=19;break;} //@line 465 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 var $121=$1; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $122=$i; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $123=$2; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $124=(($123+28)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $125=HEAP32[(($124)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $126=(($125+($122<<3))|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $127=(($126)|0); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $128=HEAP32[(($127)>>2)]; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 var $129=$128; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($121,$129); //@line 465 "lib/lua-5.2.3/src/lgc.c"
 label=19;break; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 case 19: 
 label=20;break; //@line 465 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 var $132=$i; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 var $133=((($132)+(1))|0); //@line 464 "lib/lua-5.2.3/src/lgc.c"
 $i=$133; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 label=15;break; //@line 464 "lib/lua-5.2.3/src/lgc.c"
 case 21: 
 $i=0; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 case 22: 
 var $136=$i; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 var $137=$2; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 var $138=(($137+56)|0); //@line 466 "lib/lua-5.2.3/src/lgc.c"
 var $139=HEAP32[(($138)>>2)]; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 var $140=($136|0)<($139|0); //@line 466 "lib/lua-5.2.3/src/lgc.c"
 if($140){label=23;break;}else{label=28;break;} //@line 466 "lib/lua-5.2.3/src/lgc.c"
 case 23: 
 var $142=$i; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $143=$2; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $144=(($143+16)|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $145=HEAP32[(($144)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $146=(($145+($142<<2))|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $147=HEAP32[(($146)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $148=($147|0)!=0; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 if($148){label=24;break;}else{label=26;break;} //@line 467 "lib/lua-5.2.3/src/lgc.c"
 case 24: 
 var $150=$i; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $151=$2; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $152=(($151+16)|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $153=HEAP32[(($152)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $154=(($153+($150<<2))|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $155=HEAP32[(($154)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $156=$155; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $157=$156; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $158=(($157+5)|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $159=HEAP8[($158)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $160=($159&255); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $161=$160&3; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $162=($161|0)!=0; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 if($162){label=25;break;}else{label=26;break;} //@line 467 "lib/lua-5.2.3/src/lgc.c"
 case 25: 
 var $164=$1; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $165=$i; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $166=$2; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $167=(($166+16)|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $168=HEAP32[(($167)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $169=(($168+($165<<2))|0); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $170=HEAP32[(($169)>>2)]; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 var $171=$170; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($164,$171); //@line 467 "lib/lua-5.2.3/src/lgc.c"
 label=26;break; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 case 26: 
 label=27;break; //@line 467 "lib/lua-5.2.3/src/lgc.c"
 case 27: 
 var $174=$i; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 var $175=((($174)+(1))|0); //@line 466 "lib/lua-5.2.3/src/lgc.c"
 $i=$175; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 label=22;break; //@line 466 "lib/lua-5.2.3/src/lgc.c"
 case 28: 
 $i=0; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 label=29;break; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 case 29: 
 var $178=$i; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 var $179=$2; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 var $180=(($179+60)|0); //@line 468 "lib/lua-5.2.3/src/lgc.c"
 var $181=HEAP32[(($180)>>2)]; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 var $182=($178|0)<($181|0); //@line 468 "lib/lua-5.2.3/src/lgc.c"
 if($182){label=30;break;}else{label=35;break;} //@line 468 "lib/lua-5.2.3/src/lgc.c"
 case 30: 
 var $184=$i; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $185=$2; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $186=(($185+24)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $187=HEAP32[(($186)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $188=(($187+((($184)*(12))&-1))|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $189=(($188)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $190=HEAP32[(($189)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $191=($190|0)!=0; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 if($191){label=31;break;}else{label=33;break;} //@line 469 "lib/lua-5.2.3/src/lgc.c"
 case 31: 
 var $193=$i; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $194=$2; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $195=(($194+24)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $196=HEAP32[(($195)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $197=(($196+((($193)*(12))&-1))|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $198=(($197)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $199=HEAP32[(($198)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $200=$199; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $201=$200; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $202=(($201+5)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $203=HEAP8[($202)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $204=($203&255); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $205=$204&3; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $206=($205|0)!=0; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 if($206){label=32;break;}else{label=33;break;} //@line 469 "lib/lua-5.2.3/src/lgc.c"
 case 32: 
 var $208=$1; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $209=$i; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $210=$2; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $211=(($210+24)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $212=HEAP32[(($211)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $213=(($212+((($209)*(12))&-1))|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $214=(($213)|0); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $215=HEAP32[(($214)>>2)]; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 var $216=$215; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($208,$216); //@line 469 "lib/lua-5.2.3/src/lgc.c"
 label=33;break; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 case 33: 
 label=34;break; //@line 469 "lib/lua-5.2.3/src/lgc.c"
 case 34: 
 var $219=$i; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 var $220=((($219)+(1))|0); //@line 468 "lib/lua-5.2.3/src/lgc.c"
 $i=$220; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 label=29;break; //@line 468 "lib/lua-5.2.3/src/lgc.c"
 case 35: 
 var $222=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $223=(($222+48)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $224=HEAP32[(($223)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $225=($224<<2); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $226=((($225)+(80))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $227=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $228=(($227+56)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $229=HEAP32[(($228)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $230=($229<<2); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $231=((($226)+($230))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $232=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $233=(($232+44)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $234=HEAP32[(($233)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $235=($234<<4); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $236=((($231)+($235))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $237=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $238=(($237+52)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $239=HEAP32[(($238)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $240=($239<<2); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $241=((($236)+($240))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $242=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $243=(($242+60)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $244=HEAP32[(($243)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $245=((($244)*(12))&-1); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $246=((($241)+($245))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $247=$2; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $248=(($247+40)|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $249=HEAP32[(($248)>>2)]; //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $250=($249<<3); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 var $251=((($246)+($250))|0); //@line 470 "lib/lua-5.2.3/src/lgc.c"
 STACKTOP=sp;return $251; //@line 470 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traverseweakvalue($g,$h){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 var $limit;
 var $hasclears;
 $1=$g;
 $2=$h;
 var $3=$2; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+7)|0); //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP8[($4)]; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5&255); //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $7=1<<$6; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $8=$2; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+16)|0); //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+($7<<5))|0); //@line 356 "lib/lua-5.2.3/src/lgc.c"
 $limit=$11; //@line 356 "lib/lua-5.2.3/src/lgc.c"
 var $12=$2; //@line 359 "lib/lua-5.2.3/src/lgc.c"
 var $13=(($12+28)|0); //@line 359 "lib/lua-5.2.3/src/lgc.c"
 var $14=HEAP32[(($13)>>2)]; //@line 359 "lib/lua-5.2.3/src/lgc.c"
 var $15=($14|0)>0; //@line 359 "lib/lua-5.2.3/src/lgc.c"
 var $16=($15&1); //@line 359 "lib/lua-5.2.3/src/lgc.c"
 $hasclears=$16; //@line 359 "lib/lua-5.2.3/src/lgc.c"
 var $17=$2; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $18=(($17+16)|0); //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $19=HEAP32[(($18)>>2)]; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $20=(($19)|0); //@line 360 "lib/lua-5.2.3/src/lgc.c"
 $n=$20; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $22=$n; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $23=$limit; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $24=($22>>>0)<($23>>>0); //@line 360 "lib/lua-5.2.3/src/lgc.c"
 if($24){label=3;break;}else{label=14;break;} //@line 360 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $26=$n; //@line 362 "lib/lua-5.2.3/src/lgc.c"
 var $27=(($26)|0); //@line 362 "lib/lua-5.2.3/src/lgc.c"
 var $28=(($27+8)|0); //@line 362 "lib/lua-5.2.3/src/lgc.c"
 var $29=HEAP32[(($28)>>2)]; //@line 362 "lib/lua-5.2.3/src/lgc.c"
 var $30=($29|0)==0; //@line 362 "lib/lua-5.2.3/src/lgc.c"
 if($30){label=4;break;}else{label=5;break;} //@line 362 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $32=$n; //@line 363 "lib/lua-5.2.3/src/lgc.c"
 _removeentry($32); //@line 363 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 363 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $34=$n; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $35=(($34+16)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $36=$35; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $37=(($36+8)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $38=HEAP32[(($37)>>2)]; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $39=$38&64; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39|0)!=0; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 if($40){label=6;break;}else{label=8;break;} //@line 366 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $42=$n; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $43=(($42+16)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $44=$43; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $45=(($44)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $46=$45; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $47=HEAP32[(($46)>>2)]; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $48=$47; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+5)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $50=HEAP8[($49)]; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $51=($50&255); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $52=$51&3; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $53=($52|0)!=0; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 if($53){label=7;break;}else{label=8;break;} //@line 366 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $55=$1; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $56=$n; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $57=(($56+16)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $58=$57; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58)|0); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $60=$59; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 var $61=HEAP32[(($60)>>2)]; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($55,$61); //@line 366 "lib/lua-5.2.3/src/lgc.c"
 label=8;break; //@line 366 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $63=$hasclears; //@line 367 "lib/lua-5.2.3/src/lgc.c"
 var $64=($63|0)!=0; //@line 367 "lib/lua-5.2.3/src/lgc.c"
 if($64){label=11;break;}else{label=9;break;} //@line 367 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $66=$1; //@line 367 "lib/lua-5.2.3/src/lgc.c"
 var $67=$n; //@line 367 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67)|0); //@line 367 "lib/lua-5.2.3/src/lgc.c"
 var $69=_iscleared($66,$68); //@line 367 "lib/lua-5.2.3/src/lgc.c"
 var $70=($69|0)!=0; //@line 367 "lib/lua-5.2.3/src/lgc.c"
 if($70){label=10;break;}else{label=11;break;} //@line 367 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 $hasclears=1; //@line 368 "lib/lua-5.2.3/src/lgc.c"
 label=11;break; //@line 368 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 label=12;break;
 case 12: 
 label=13;break; //@line 370 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $75=$n; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 var $76=(($75+32)|0); //@line 360 "lib/lua-5.2.3/src/lgc.c"
 $n=$76; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 360 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $78=$hasclears; //@line 371 "lib/lua-5.2.3/src/lgc.c"
 var $79=($78|0)!=0; //@line 371 "lib/lua-5.2.3/src/lgc.c"
 if($79){label=15;break;}else{label=16;break;} //@line 371 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $81=$1; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $82=(($81+92)|0); //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $83=HEAP32[(($82)>>2)]; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $84=$2; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $85=(($84+24)|0); //@line 372 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($85)>>2)]=$83; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $86=$2; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $87=$86; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $88=$1; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 var $89=(($88+92)|0); //@line 372 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($89)>>2)]=$87; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 label=17;break; //@line 372 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $91=$1; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $92=(($91+88)|0); //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $93=HEAP32[(($92)>>2)]; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $94=$2; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $95=(($94+24)|0); //@line 374 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($95)>>2)]=$93; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $96=$2; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $97=$96; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $98=$1; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 var $99=(($98+88)|0); //@line 374 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($99)>>2)]=$97; //@line 374 "lib/lua-5.2.3/src/lgc.c"
 label=17;break;
 case 17: 
 STACKTOP=sp;return; //@line 375 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traversestrongtable($g,$h){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 var $limit;
 var $i;
 $1=$g;
 $2=$h;
 var $3=$2; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+7)|0); //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP8[($4)]; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5&255); //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $7=1<<$6; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $8=$2; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $9=(($8+16)|0); //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $10=HEAP32[(($9)>>2)]; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+($7<<5))|0); //@line 417 "lib/lua-5.2.3/src/lgc.c"
 $limit=$11; //@line 417 "lib/lua-5.2.3/src/lgc.c"
 $i=0; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 var $13=$i; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 var $14=$2; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+28)|0); //@line 419 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 var $17=($13|0)<($16|0); //@line 419 "lib/lua-5.2.3/src/lgc.c"
 if($17){label=3;break;}else{label=8;break;} //@line 419 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $19=$i; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $20=$2; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $21=(($20+12)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $22=HEAP32[(($21)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $23=(($22+($19<<4))|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $24=(($23+8)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $25=HEAP32[(($24)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $26=$25&64; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $27=($26|0)!=0; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 if($27){label=4;break;}else{label=6;break;} //@line 420 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $29=$i; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $30=$2; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $31=(($30+12)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $32=HEAP32[(($31)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+($29<<4))|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $34=(($33)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $35=$34; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $36=HEAP32[(($35)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $37=$36; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $38=(($37+5)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $39=HEAP8[($38)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $40=($39&255); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $41=$40&3; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $42=($41|0)!=0; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 if($42){label=5;break;}else{label=6;break;} //@line 420 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $44=$1; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $45=$i; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $46=$2; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $47=(($46+12)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $48=HEAP32[(($47)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $49=(($48+($45<<4))|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $50=(($49)|0); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 var $52=HEAP32[(($51)>>2)]; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($44,$52); //@line 420 "lib/lua-5.2.3/src/lgc.c"
 label=6;break; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 label=7;break; //@line 420 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $55=$i; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 var $56=((($55)+(1))|0); //@line 419 "lib/lua-5.2.3/src/lgc.c"
 $i=$56; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 label=2;break; //@line 419 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $58=$2; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58+16)|0); //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $60=HEAP32[(($59)>>2)]; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $61=(($60)|0); //@line 421 "lib/lua-5.2.3/src/lgc.c"
 $n=$61; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $63=$n; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $64=$limit; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $65=($63>>>0)<($64>>>0); //@line 421 "lib/lua-5.2.3/src/lgc.c"
 if($65){label=10;break;}else{label=21;break;} //@line 421 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $67=$n; //@line 423 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67)|0); //@line 423 "lib/lua-5.2.3/src/lgc.c"
 var $69=(($68+8)|0); //@line 423 "lib/lua-5.2.3/src/lgc.c"
 var $70=HEAP32[(($69)>>2)]; //@line 423 "lib/lua-5.2.3/src/lgc.c"
 var $71=($70|0)==0; //@line 423 "lib/lua-5.2.3/src/lgc.c"
 if($71){label=11;break;}else{label=12;break;} //@line 423 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 var $73=$n; //@line 424 "lib/lua-5.2.3/src/lgc.c"
 _removeentry($73); //@line 424 "lib/lua-5.2.3/src/lgc.c"
 label=19;break; //@line 424 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 var $75=$n; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $76=(($75+16)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $77=$76; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $78=(($77+8)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $79=HEAP32[(($78)>>2)]; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $80=$79&64; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $81=($80|0)!=0; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 if($81){label=13;break;}else{label=15;break;} //@line 427 "lib/lua-5.2.3/src/lgc.c"
 case 13: 
 var $83=$n; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $84=(($83+16)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $85=$84; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $86=(($85)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $87=$86; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $88=HEAP32[(($87)>>2)]; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $89=$88; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $90=(($89+5)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $91=HEAP8[($90)]; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $92=($91&255); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $93=$92&3; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $94=($93|0)!=0; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 if($94){label=14;break;}else{label=15;break;} //@line 427 "lib/lua-5.2.3/src/lgc.c"
 case 14: 
 var $96=$1; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $97=$n; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $98=(($97+16)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $99=$98; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $100=(($99)|0); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $101=$100; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 var $102=HEAP32[(($101)>>2)]; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($96,$102); //@line 427 "lib/lua-5.2.3/src/lgc.c"
 label=15;break; //@line 427 "lib/lua-5.2.3/src/lgc.c"
 case 15: 
 var $104=$n; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $105=(($104)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $106=(($105+8)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $107=HEAP32[(($106)>>2)]; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $108=$107&64; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $109=($108|0)!=0; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 if($109){label=16;break;}else{label=18;break;} //@line 428 "lib/lua-5.2.3/src/lgc.c"
 case 16: 
 var $111=$n; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $112=(($111)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $113=(($112)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $114=$113; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $115=HEAP32[(($114)>>2)]; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $116=$115; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $117=(($116+5)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $118=HEAP8[($117)]; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $119=($118&255); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $120=$119&3; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $121=($120|0)!=0; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 if($121){label=17;break;}else{label=18;break;} //@line 428 "lib/lua-5.2.3/src/lgc.c"
 case 17: 
 var $123=$1; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $124=$n; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $125=(($124)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $126=(($125)|0); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $127=$126; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 var $128=HEAP32[(($127)>>2)]; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 _reallymarkobject($123,$128); //@line 428 "lib/lua-5.2.3/src/lgc.c"
 label=18;break; //@line 428 "lib/lua-5.2.3/src/lgc.c"
 case 18: 
 label=19;break;
 case 19: 
 label=20;break; //@line 430 "lib/lua-5.2.3/src/lgc.c"
 case 20: 
 var $132=$n; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 var $133=(($132+32)|0); //@line 421 "lib/lua-5.2.3/src/lgc.c"
 $n=$133; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 label=9;break; //@line 421 "lib/lua-5.2.3/src/lgc.c"
 case 21: 
 STACKTOP=sp;return; //@line 431 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _freeobj($L,$o){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$o;
 var $3=$2; //@line 664 "lib/lua-5.2.3/src/lgc.c"
 var $4=$3; //@line 664 "lib/lua-5.2.3/src/lgc.c"
 var $5=(($4+4)|0); //@line 664 "lib/lua-5.2.3/src/lgc.c"
 var $6=HEAP8[($5)]; //@line 664 "lib/lua-5.2.3/src/lgc.c"
 var $7=($6&255); //@line 664 "lib/lua-5.2.3/src/lgc.c"
 switch(($7|0)){case 20:{ label=10;break;}case 9:{ label=2;break;}case 6:{ label=3;break;}case 38:{ label=4;break;}case 10:{ label=5;break;}case 5:{ label=6;break;}case 8:{ label=7;break;}case 7:{ label=8;break;}case 4:{ label=9;break;}default:{label=11;break;}}break;
 case 2: 
 var $9=$1; //@line 665 "lib/lua-5.2.3/src/lgc.c"
 var $10=$2; //@line 665 "lib/lua-5.2.3/src/lgc.c"
 var $11=$10; //@line 665 "lib/lua-5.2.3/src/lgc.c"
 _luaF_freeproto($9,$11); //@line 665 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 665 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $13=$1; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $14=$2; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $15=$14; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $16=$2; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $17=$16; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $18=$17; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $19=(($18+6)|0); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $20=HEAP8[($19)]; //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $21=($20&255); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $22=((($21)-(1))|0); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $23=($22<<2); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $24=((($23)+(20))|0); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 var $25=_luaM_realloc_($13,$15,$24,0); //@line 667 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 668 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $27=$1; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $28=$2; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $29=$28; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $30=$2; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $31=$30; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $32=$31; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $33=(($32+6)|0); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $34=HEAP8[($33)]; //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $35=($34&255); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $36=((($35)-(1))|0); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $37=($36<<4); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $38=((($37)+(32))|0); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 var $39=_luaM_realloc_($27,$29,$38,0); //@line 671 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 672 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 var $41=$1; //@line 674 "lib/lua-5.2.3/src/lgc.c"
 var $42=$2; //@line 674 "lib/lua-5.2.3/src/lgc.c"
 var $43=$42; //@line 674 "lib/lua-5.2.3/src/lgc.c"
 _luaF_freeupval($41,$43); //@line 674 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 674 "lib/lua-5.2.3/src/lgc.c"
 case 6: 
 var $45=$1; //@line 675 "lib/lua-5.2.3/src/lgc.c"
 var $46=$2; //@line 675 "lib/lua-5.2.3/src/lgc.c"
 var $47=$46; //@line 675 "lib/lua-5.2.3/src/lgc.c"
 _luaH_free($45,$47); //@line 675 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 675 "lib/lua-5.2.3/src/lgc.c"
 case 7: 
 var $49=$1; //@line 676 "lib/lua-5.2.3/src/lgc.c"
 var $50=$2; //@line 676 "lib/lua-5.2.3/src/lgc.c"
 var $51=$50; //@line 676 "lib/lua-5.2.3/src/lgc.c"
 _luaE_freethread($49,$51); //@line 676 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 676 "lib/lua-5.2.3/src/lgc.c"
 case 8: 
 var $53=$1; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $54=$2; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $55=$54; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $56=$2; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $57=$56; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $58=$57; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $59=(($58+16)|0); //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $60=HEAP32[(($59)>>2)]; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $61=((($60)+(24))|0); //@line 677 "lib/lua-5.2.3/src/lgc.c"
 var $62=_luaM_realloc_($53,$55,$61,0); //@line 677 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 677 "lib/lua-5.2.3/src/lgc.c"
 case 9: 
 var $64=$1; //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $65=(($64+12)|0); //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $66=HEAP32[(($65)>>2)]; //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $67=(($66+24)|0); //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $68=(($67+4)|0); //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $69=HEAP32[(($68)>>2)]; //@line 679 "lib/lua-5.2.3/src/lgc.c"
 var $70=((($69)-(1))|0); //@line 679 "lib/lua-5.2.3/src/lgc.c"
 HEAP32[(($68)>>2)]=$70; //@line 679 "lib/lua-5.2.3/src/lgc.c"
 label=10;break; //@line 679 "lib/lua-5.2.3/src/lgc.c"
 case 10: 
 var $72=$1; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $73=$2; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $74=$73; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $75=$2; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $76=$75; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $77=$76; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $78=(($77+12)|0); //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $79=HEAP32[(($78)>>2)]; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $80=((($79)+(1))|0); //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $81=$80; //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $82=((($81)+(16))|0); //@line 682 "lib/lua-5.2.3/src/lgc.c"
 var $83=_luaM_realloc_($72,$74,$82,0); //@line 682 "lib/lua-5.2.3/src/lgc.c"
 label=12;break; //@line 683 "lib/lua-5.2.3/src/lgc.c"
 case 11: 
 label=12;break; //@line 686 "lib/lua-5.2.3/src/lgc.c"
 case 12: 
 STACKTOP=sp;return; //@line 687 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _sweepthread($L,$L1){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$L;
 $2=$L1;
 var $3=$2; //@line 699 "lib/lua-5.2.3/src/lgc.c"
 var $4=(($3+28)|0); //@line 699 "lib/lua-5.2.3/src/lgc.c"
 var $5=HEAP32[(($4)>>2)]; //@line 699 "lib/lua-5.2.3/src/lgc.c"
 var $6=($5|0)==0; //@line 699 "lib/lua-5.2.3/src/lgc.c"
 if($6){label=2;break;}else{label=3;break;} //@line 699 "lib/lua-5.2.3/src/lgc.c"
 case 2: 
 label=5;break; //@line 699 "lib/lua-5.2.3/src/lgc.c"
 case 3: 
 var $9=$1; //@line 700 "lib/lua-5.2.3/src/lgc.c"
 var $10=$2; //@line 700 "lib/lua-5.2.3/src/lgc.c"
 var $11=(($10+56)|0); //@line 700 "lib/lua-5.2.3/src/lgc.c"
 var $12=_sweeplist($9,$11,-3); //@line 700 "lib/lua-5.2.3/src/lgc.c"
 var $13=$2; //@line 701 "lib/lua-5.2.3/src/lgc.c"
 _luaE_freeCI($13); //@line 701 "lib/lua-5.2.3/src/lgc.c"
 var $14=$1; //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $15=(($14+12)|0); //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $16=HEAP32[(($15)>>2)]; //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $17=(($16+62)|0); //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $18=HEAP8[($17)]; //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $19=($18&255); //@line 703 "lib/lua-5.2.3/src/lgc.c"
 var $20=($19|0)!=1; //@line 703 "lib/lua-5.2.3/src/lgc.c"
 if($20){label=4;break;}else{label=5;break;} //@line 703 "lib/lua-5.2.3/src/lgc.c"
 case 4: 
 var $22=$2; //@line 704 "lib/lua-5.2.3/src/lgc.c"
 _luaD_shrinkstack($22); //@line 704 "lib/lua-5.2.3/src/lgc.c"
 label=5;break; //@line 704 "lib/lua-5.2.3/src/lgc.c"
 case 5: 
 STACKTOP=sp;return; //@line 705 "lib/lua-5.2.3/src/lgc.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaM_growaux_($L,$block,$size,$size_elems,$limit,$what){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $newblock;
 var $newsize;
 $1=$L;
 $2=$block;
 $3=$size;
 $4=$size_elems;
 $5=$limit;
 $6=$what;
 var $7=$3; //@line 50 "lib/lua-5.2.3/src/lmem.c"
 var $8=HEAP32[(($7)>>2)]; //@line 50 "lib/lua-5.2.3/src/lmem.c"
 var $9=$5; //@line 50 "lib/lua-5.2.3/src/lmem.c"
 var $10=(((($9|0))/(2))&-1); //@line 50 "lib/lua-5.2.3/src/lmem.c"
 var $11=($8|0)>=($10|0); //@line 50 "lib/lua-5.2.3/src/lmem.c"
 if($11){label=2;break;}else{label=5;break;} //@line 50 "lib/lua-5.2.3/src/lmem.c"
 case 2: 
 var $13=$3; //@line 51 "lib/lua-5.2.3/src/lmem.c"
 var $14=HEAP32[(($13)>>2)]; //@line 51 "lib/lua-5.2.3/src/lmem.c"
 var $15=$5; //@line 51 "lib/lua-5.2.3/src/lmem.c"
 var $16=($14|0)>=($15|0); //@line 51 "lib/lua-5.2.3/src/lmem.c"
 if($16){label=3;break;}else{label=4;break;} //@line 51 "lib/lua-5.2.3/src/lmem.c"
 case 3: 
 var $18=$1; //@line 52 "lib/lua-5.2.3/src/lmem.c"
 var $19=$6; //@line 52 "lib/lua-5.2.3/src/lmem.c"
 var $20=$5; //@line 52 "lib/lua-5.2.3/src/lmem.c"
 _luaG_runerror($18,16272,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$19,HEAP32[(((tempVarArgs)+(8))>>2)]=$20,tempVarArgs)); STACKTOP=tempVarArgs; //@line 52 "lib/lua-5.2.3/src/lmem.c"
 throw "Reached an unreachable!"; //@line 52 "lib/lua-5.2.3/src/lmem.c"
 case 4: 
 var $22=$5; //@line 53 "lib/lua-5.2.3/src/lmem.c"
 $newsize=$22; //@line 53 "lib/lua-5.2.3/src/lmem.c"
 label=8;break; //@line 54 "lib/lua-5.2.3/src/lmem.c"
 case 5: 
 var $24=$3; //@line 56 "lib/lua-5.2.3/src/lmem.c"
 var $25=HEAP32[(($24)>>2)]; //@line 56 "lib/lua-5.2.3/src/lmem.c"
 var $26=($25<<1); //@line 56 "lib/lua-5.2.3/src/lmem.c"
 $newsize=$26; //@line 56 "lib/lua-5.2.3/src/lmem.c"
 var $27=$newsize; //@line 57 "lib/lua-5.2.3/src/lmem.c"
 var $28=($27|0)<4; //@line 57 "lib/lua-5.2.3/src/lmem.c"
 if($28){label=6;break;}else{label=7;break;} //@line 57 "lib/lua-5.2.3/src/lmem.c"
 case 6: 
 $newsize=4; //@line 58 "lib/lua-5.2.3/src/lmem.c"
 label=7;break; //@line 58 "lib/lua-5.2.3/src/lmem.c"
 case 7: 
 label=8;break;
 case 8: 
 var $32=$newsize; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $33=((($32)+(1))|0); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $34=$4; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $35=(((4294967293)/(($34>>>0)))&-1); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $36=($33>>>0)>($35>>>0); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 if($36){label=9;break;}else{label=10;break;} //@line 60 "lib/lua-5.2.3/src/lmem.c"
 case 9: 
 var $38=$1; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 _luaM_toobig($38); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 throw "Reached an unreachable!"; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 label=11;break; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 case 10: 
 var $42=0;label=11;break; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 case 11: 
 var $42; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $43=$1; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $44=$2; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $45=$3; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $46=HEAP32[(($45)>>2)]; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $47=$4; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $48=(Math_imul($46,$47)|0); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $49=$newsize; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $50=$4; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $51=(Math_imul($49,$50)|0); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $52=_luaM_realloc_($43,$44,$48,$51); //@line 60 "lib/lua-5.2.3/src/lmem.c"
 $newblock=$52; //@line 60 "lib/lua-5.2.3/src/lmem.c"
 var $53=$newsize; //@line 61 "lib/lua-5.2.3/src/lmem.c"
 var $54=$3; //@line 61 "lib/lua-5.2.3/src/lmem.c"
 HEAP32[(($54)>>2)]=$53; //@line 61 "lib/lua-5.2.3/src/lmem.c"
 var $55=$newblock; //@line 62 "lib/lua-5.2.3/src/lmem.c"
 STACKTOP=sp;return $55; //@line 62 "lib/lua-5.2.3/src/lmem.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaM_toobig($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 67 "lib/lua-5.2.3/src/lmem.c"
 _luaG_runerror($2,15872,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 67 "lib/lua-5.2.3/src/lmem.c"
 throw "Reached an unreachable!"; //@line 67 "lib/lua-5.2.3/src/lmem.c"
 STACKTOP=sp;return; //@line 68 "lib/lua-5.2.3/src/lmem.c"
}


function _luaM_realloc_($L,$block,$osize,$nsize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $newblock;
 var $g;
 var $realosize;
 $1=$L;
 $2=$block;
 $3=$osize;
 $4=$nsize;
 var $5=$1; //@line 77 "lib/lua-5.2.3/src/lmem.c"
 var $6=(($5+12)|0); //@line 77 "lib/lua-5.2.3/src/lmem.c"
 var $7=HEAP32[(($6)>>2)]; //@line 77 "lib/lua-5.2.3/src/lmem.c"
 $g=$7; //@line 77 "lib/lua-5.2.3/src/lmem.c"
 var $8=$2; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 var $9=($8|0)!=0; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 if($9){label=2;break;}else{label=3;break;} //@line 78 "lib/lua-5.2.3/src/lmem.c"
 case 2: 
 var $11=$3; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 var $14=$11;label=4;break; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 case 3: 
 var $14=0;label=4;break; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 case 4: 
 var $14; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 $realosize=$14; //@line 78 "lib/lua-5.2.3/src/lmem.c"
 var $15=$g; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $16=(($15)|0); //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $17=HEAP32[(($16)>>2)]; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $18=$g; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $19=(($18+4)|0); //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $20=HEAP32[(($19)>>2)]; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $21=$2; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $22=$3; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $23=$4; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $24=FUNCTION_TABLE[$17]($20,$21,$22,$23); //@line 84 "lib/lua-5.2.3/src/lmem.c"
 $newblock=$24; //@line 84 "lib/lua-5.2.3/src/lmem.c"
 var $25=$newblock; //@line 85 "lib/lua-5.2.3/src/lmem.c"
 var $26=($25|0)==0; //@line 85 "lib/lua-5.2.3/src/lmem.c"
 if($26){label=5;break;}else{label=11;break;} //@line 85 "lib/lua-5.2.3/src/lmem.c"
 case 5: 
 var $28=$4; //@line 85 "lib/lua-5.2.3/src/lmem.c"
 var $29=($28>>>0)>0; //@line 85 "lib/lua-5.2.3/src/lmem.c"
 if($29){label=6;break;}else{label=11;break;} //@line 85 "lib/lua-5.2.3/src/lmem.c"
 case 6: 
 var $31=$g; //@line 88 "lib/lua-5.2.3/src/lmem.c"
 var $32=(($31+63)|0); //@line 88 "lib/lua-5.2.3/src/lmem.c"
 var $33=HEAP8[($32)]; //@line 88 "lib/lua-5.2.3/src/lmem.c"
 var $34=(($33<<24)>>24)!=0; //@line 88 "lib/lua-5.2.3/src/lmem.c"
 if($34){label=7;break;}else{label=8;break;} //@line 88 "lib/lua-5.2.3/src/lmem.c"
 case 7: 
 var $36=$1; //@line 89 "lib/lua-5.2.3/src/lmem.c"
 _luaC_fullgc($36,1); //@line 89 "lib/lua-5.2.3/src/lmem.c"
 var $37=$g; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $38=(($37)|0); //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $39=HEAP32[(($38)>>2)]; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $40=$g; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $41=(($40+4)|0); //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $42=HEAP32[(($41)>>2)]; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $43=$2; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $44=$3; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $45=$4; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 var $46=FUNCTION_TABLE[$39]($42,$43,$44,$45); //@line 90 "lib/lua-5.2.3/src/lmem.c"
 $newblock=$46; //@line 90 "lib/lua-5.2.3/src/lmem.c"
 label=8;break; //@line 91 "lib/lua-5.2.3/src/lmem.c"
 case 8: 
 var $48=$newblock; //@line 92 "lib/lua-5.2.3/src/lmem.c"
 var $49=($48|0)==0; //@line 92 "lib/lua-5.2.3/src/lmem.c"
 if($49){label=9;break;}else{label=10;break;} //@line 92 "lib/lua-5.2.3/src/lmem.c"
 case 9: 
 var $51=$1; //@line 93 "lib/lua-5.2.3/src/lmem.c"
 _luaD_throw($51,4); //@line 93 "lib/lua-5.2.3/src/lmem.c"
 throw "Reached an unreachable!"; //@line 93 "lib/lua-5.2.3/src/lmem.c"
 case 10: 
 label=11;break; //@line 94 "lib/lua-5.2.3/src/lmem.c"
 case 11: 
 var $54=$g; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $55=(($54+12)|0); //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $56=HEAP32[(($55)>>2)]; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $57=$4; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $58=((($56)+($57))|0); //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $59=$realosize; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $60=((($58)-($59))|0); //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $61=$g; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $62=(($61+12)|0); //@line 96 "lib/lua-5.2.3/src/lmem.c"
 HEAP32[(($62)>>2)]=$60; //@line 96 "lib/lua-5.2.3/src/lmem.c"
 var $63=$newblock; //@line 97 "lib/lua-5.2.3/src/lmem.c"
 STACKTOP=sp;return $63; //@line 97 "lib/lua-5.2.3/src/lmem.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaY_parser($L,$z,$buff,$dyd,$name,$firstchar){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+136)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $lexstate=sp;
 var $funcstate=(sp)+(80);
 var $cl;
 var $io;
 $1=$L;
 $2=$z;
 $3=$buff;
 $4=$dyd;
 $5=$name;
 $6=$firstchar;
 var $7=$1; //@line 1622 "lib/lua-5.2.3/src/lparser.c"
 var $8=_luaF_newLclosure($7,1); //@line 1622 "lib/lua-5.2.3/src/lparser.c"
 $cl=$8; //@line 1622 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+8)|0); //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 $io=$11; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $12=$cl; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $13=$12; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $14=$io; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $16=$15; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($16)>>2)]=$13; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $17=$io; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17+8)|0); //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($18)>>2)]=70; //@line 1624 "lib/lua-5.2.3/src/lparser.c"
 var $19=$1; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+8)|0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+16)|0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($20)>>2)]=$22; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+24)|0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $26=$1; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+8)|0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $29=$25; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $30=$28; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $31=((($29)-($30))|0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $32=(((($31|0))/(16))&-1); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 var $33=($32|0)<=0; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 if($33){label=2;break;}else{label=3;break;} //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $35=$1; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 _luaD_growstack($35,0); //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 1625 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 label=4;break;
 case 4: 
 var $38=$1; //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $39=_luaF_newproto($38); //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $40=$cl; //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $41=$40; //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+12)|0); //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($42)>>2)]=$39; //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($funcstate)|0); //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($43)>>2)]=$39; //@line 1626 "lib/lua-5.2.3/src/lparser.c"
 var $44=$1; //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $45=$5; //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $46=_luaS_new($44,$45); //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($funcstate)|0); //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP32[(($47)>>2)]; //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $49=(($48+36)|0); //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($49)>>2)]=$46; //@line 1627 "lib/lua-5.2.3/src/lparser.c"
 var $50=$3; //@line 1628 "lib/lua-5.2.3/src/lparser.c"
 var $51=(($lexstate+60)|0); //@line 1628 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($51)>>2)]=$50; //@line 1628 "lib/lua-5.2.3/src/lparser.c"
 var $52=$4; //@line 1629 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($lexstate+64)|0); //@line 1629 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($53)>>2)]=$52; //@line 1629 "lib/lua-5.2.3/src/lparser.c"
 var $54=$4; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+24)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $56=(($55+4)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($56)>>2)]=0; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $57=$4; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $58=(($57+12)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58+4)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($59)>>2)]=0; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $60=$4; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $62=(($61+4)|0); //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($62)>>2)]=0; //@line 1630 "lib/lua-5.2.3/src/lparser.c"
 var $63=$1; //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $64=$2; //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $65=(($funcstate)|0); //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $66=HEAP32[(($65)>>2)]; //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $67=(($66+36)|0); //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $68=HEAP32[(($67)>>2)]; //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 var $69=$6; //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 _luaX_setinput($63,$lexstate,$64,$68,$69); //@line 1631 "lib/lua-5.2.3/src/lparser.c"
 _mainfunc($lexstate,$funcstate); //@line 1632 "lib/lua-5.2.3/src/lparser.c"
 var $70=$cl; //@line 1636 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $70; //@line 1636 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _mainfunc($ls,$fs){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $bl=sp;
 var $v=(sp)+(16);
 $1=$ls;
 $2=$fs;
 var $3=$1; //@line 1607 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 1607 "lib/lua-5.2.3/src/lparser.c"
 _open_func($3,$4,$bl); //@line 1607 "lib/lua-5.2.3/src/lparser.c"
 var $5=$2; //@line 1608 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5)|0); //@line 1608 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1608 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+77)|0); //@line 1608 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($8)]=1; //@line 1608 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($v,7,0); //@line 1609 "lib/lua-5.2.3/src/lparser.c"
 var $9=$2; //@line 1610 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1610 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+72)|0); //@line 1610 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 1610 "lib/lua-5.2.3/src/lparser.c"
 var $13=_newupvalue($9,$12,$v); //@line 1610 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 1611 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($14); //@line 1611 "lib/lua-5.2.3/src/lparser.c"
 var $15=$1; //@line 1612 "lib/lua-5.2.3/src/lparser.c"
 _statlist($15); //@line 1612 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 1613 "lib/lua-5.2.3/src/lparser.c"
 _check($16,286); //@line 1613 "lib/lua-5.2.3/src/lparser.c"
 var $17=$1; //@line 1614 "lib/lua-5.2.3/src/lparser.c"
 _close_func($17); //@line 1614 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1615 "lib/lua-5.2.3/src/lparser.c"
}


function _open_func($ls,$fs,$bl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $L;
 var $f;
 var $io;
 $1=$ls;
 $2=$fs;
 $3=$bl;
 var $4=$1; //@line 528 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+52)|0); //@line 528 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 528 "lib/lua-5.2.3/src/lparser.c"
 $L=$6; //@line 528 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 530 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+48)|0); //@line 530 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 530 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 530 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+8)|0); //@line 530 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($11)>>2)]=$9; //@line 530 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 531 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 531 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+12)|0); //@line 531 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($14)>>2)]=$12; //@line 531 "lib/lua-5.2.3/src/lparser.c"
 var $15=$2; //@line 532 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 532 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+48)|0); //@line 532 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($17)>>2)]=$15; //@line 532 "lib/lua-5.2.3/src/lparser.c"
 var $18=$2; //@line 533 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18+20)|0); //@line 533 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($19)>>2)]=0; //@line 533 "lib/lua-5.2.3/src/lparser.c"
 var $20=$2; //@line 534 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+24)|0); //@line 534 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($21)>>2)]=0; //@line 534 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 535 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+28)|0); //@line 535 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($23)>>2)]=-1; //@line 535 "lib/lua-5.2.3/src/lparser.c"
 var $24=$2; //@line 536 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($24+48)|0); //@line 536 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($25)]=0; //@line 536 "lib/lua-5.2.3/src/lparser.c"
 var $26=$2; //@line 537 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+32)|0); //@line 537 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($27)>>2)]=0; //@line 537 "lib/lua-5.2.3/src/lparser.c"
 var $28=$2; //@line 538 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+36)|0); //@line 538 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($29)>>2)]=0; //@line 538 "lib/lua-5.2.3/src/lparser.c"
 var $30=$2; //@line 539 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+47)|0); //@line 539 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($31)]=0; //@line 539 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 540 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+44)|0); //@line 540 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($33)>>1)]=0; //@line 540 "lib/lua-5.2.3/src/lparser.c"
 var $34=$2; //@line 541 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+46)|0); //@line 541 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($35)]=0; //@line 541 "lib/lua-5.2.3/src/lparser.c"
 var $36=$1; //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36+64)|0); //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $38=HEAP32[(($37)>>2)]; //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $39=(($38)|0); //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+4)|0); //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $42=$2; //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42+40)|0); //@line 542 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($43)>>2)]=$41; //@line 542 "lib/lua-5.2.3/src/lparser.c"
 var $44=$2; //@line 543 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+16)|0); //@line 543 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($45)>>2)]=0; //@line 543 "lib/lua-5.2.3/src/lparser.c"
 var $46=$2; //@line 544 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46)|0); //@line 544 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP32[(($47)>>2)]; //@line 544 "lib/lua-5.2.3/src/lparser.c"
 $f=$48; //@line 544 "lib/lua-5.2.3/src/lparser.c"
 var $49=$1; //@line 545 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+68)|0); //@line 545 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP32[(($50)>>2)]; //@line 545 "lib/lua-5.2.3/src/lparser.c"
 var $52=$f; //@line 545 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+36)|0); //@line 545 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($53)>>2)]=$51; //@line 545 "lib/lua-5.2.3/src/lparser.c"
 var $54=$f; //@line 546 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+78)|0); //@line 546 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($55)]=2; //@line 546 "lib/lua-5.2.3/src/lparser.c"
 var $56=$L; //@line 547 "lib/lua-5.2.3/src/lparser.c"
 var $57=_luaH_new($56); //@line 547 "lib/lua-5.2.3/src/lparser.c"
 var $58=$2; //@line 547 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58+4)|0); //@line 547 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($59)>>2)]=$57; //@line 547 "lib/lua-5.2.3/src/lparser.c"
 var $60=$L; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60+8)|0); //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $62=HEAP32[(($61)>>2)]; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 $io=$62; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $63=$2; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $64=(($63+4)|0); //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $65=HEAP32[(($64)>>2)]; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $66=$65; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $67=$io; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67)|0); //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $69=$68; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($69)>>2)]=$66; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $70=$io; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $71=(($70+8)|0); //@line 549 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($71)>>2)]=69; //@line 549 "lib/lua-5.2.3/src/lparser.c"
 var $72=$L; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $73=(($72+8)|0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $74=HEAP32[(($73)>>2)]; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $75=(($74+16)|0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($73)>>2)]=$75; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $76=$L; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $77=(($76+24)|0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $78=HEAP32[(($77)>>2)]; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $79=$L; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $80=(($79+8)|0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $81=HEAP32[(($80)>>2)]; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $82=$78; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $83=$81; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $84=((($82)-($83))|0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $85=(((($84|0))/(16))&-1); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 var $86=($85|0)<=0; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 if($86){label=2;break;}else{label=3;break;} //@line 550 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $88=$L; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 _luaD_growstack($88,0); //@line 550 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 550 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 label=4;break;
 case 4: 
 var $91=$2; //@line 551 "lib/lua-5.2.3/src/lparser.c"
 var $92=$3; //@line 551 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($91,$92,0); //@line 551 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 552 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _init_exp($e,$k,$i){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$e;
 $2=$k;
 $3=$i;
 var $4=$1; //@line 149 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+16)|0); //@line 149 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($5)>>2)]=-1; //@line 149 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 149 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+20)|0); //@line 149 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($7)>>2)]=-1; //@line 149 "lib/lua-5.2.3/src/lparser.c"
 var $8=$2; //@line 150 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 150 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 150 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($10)>>2)]=$8; //@line 150 "lib/lua-5.2.3/src/lparser.c"
 var $11=$3; //@line 151 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 151 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+8)|0); //@line 151 "lib/lua-5.2.3/src/lparser.c"
 var $14=$13; //@line 151 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($14)>>2)]=$11; //@line 151 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 152 "lib/lua-5.2.3/src/lparser.c"
}


function _newupvalue($fs,$name,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $f;
 var $oldsize;
 $1=$fs;
 $2=$name;
 $3=$v;
 var $4=$1; //@line 232 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 232 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 232 "lib/lua-5.2.3/src/lparser.c"
 $f=$6; //@line 232 "lib/lua-5.2.3/src/lparser.c"
 var $7=$f; //@line 233 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+40)|0); //@line 233 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 233 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$9; //@line 233 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+47)|0); //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP8[($12)]; //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13&255); //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $15=((($14)+(1))|0); //@line 234 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($10,$15,255,9888); //@line 234 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+47)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP8[($17)]; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18&255); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $20=((($19)+(1))|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $21=$f; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+40)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP32[(($22)>>2)]; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $24=($20|0)>($23|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=2;break;}else{label=3;break;} //@line 235 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $26=$1; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+12)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+52)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $31=$f; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+28)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $34=$33; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $35=$f; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+40)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $37=_luaM_growaux_($30,$34,$36,8,255,9888); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $38=$37; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $39=$f; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+28)|0); //@line 235 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($40)>>2)]=$38; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 235 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 label=4;break; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $43=$oldsize; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $44=$f; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+40)|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $46=HEAP32[(($45)>>2)]; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $47=($43|0)<($46|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 if($47){label=5;break;}else{label=6;break;} //@line 237 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $49=$oldsize; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $50=((($49)+(1))|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$50; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $51=$f; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $52=(($51+28)|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $53=HEAP32[(($52)>>2)]; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+($49<<3))|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54)|0); //@line 237 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($55)>>2)]=0; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 237 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $57=$3; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $58=(($57)|0); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $59=HEAP32[(($58)>>2)]; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $60=($59|0)==7; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $61=($60&1); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $62=(($61)&255); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $63=$1; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $64=(($63+47)|0); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $65=HEAP8[($64)]; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $66=($65&255); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $67=$f; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67+28)|0); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $69=HEAP32[(($68)>>2)]; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69+($66<<3))|0); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $71=(($70+4)|0); //@line 238 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($71)]=$62; //@line 238 "lib/lua-5.2.3/src/lparser.c"
 var $72=$3; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $73=(($72+8)|0); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $74=$73; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $75=HEAP32[(($74)>>2)]; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $76=(($75)&255); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $77=$1; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77+47)|0); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $79=HEAP8[($78)]; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $80=($79&255); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $81=$f; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $82=(($81+28)|0); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $83=HEAP32[(($82)>>2)]; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $84=(($83+($80<<3))|0); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $85=(($84+5)|0); //@line 239 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($85)]=$76; //@line 239 "lib/lua-5.2.3/src/lparser.c"
 var $86=$2; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $87=$1; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $88=(($87+47)|0); //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $89=HEAP8[($88)]; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $90=($89&255); //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $91=$f; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $92=(($91+28)|0); //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $93=HEAP32[(($92)>>2)]; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $94=(($93+($90<<3))|0); //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $95=(($94)|0); //@line 240 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($95)>>2)]=$86; //@line 240 "lib/lua-5.2.3/src/lparser.c"
 var $96=$2; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $97=$96; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $98=$97; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $99=(($98+5)|0); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $100=HEAP8[($99)]; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $101=($100&255); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $102=$101&3; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $103=($102|0)!=0; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 if($103){label=7;break;}else{label=9;break;} //@line 241 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $105=$f; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $106=$105; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $107=$106; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $108=(($107+5)|0); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $109=HEAP8[($108)]; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $110=($109&255); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $111=$110&4; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $112=($111|0)!=0; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 if($112){label=8;break;}else{label=9;break;} //@line 241 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $114=$1; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $115=(($114+12)|0); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $116=HEAP32[(($115)>>2)]; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $117=(($116+52)|0); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $118=HEAP32[(($117)>>2)]; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $119=$f; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $120=$119; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $121=$2; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 var $122=$121; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 _luaC_barrier_($118,$120,$122); //@line 241 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 241 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $124=$1; //@line 242 "lib/lua-5.2.3/src/lparser.c"
 var $125=(($124+47)|0); //@line 242 "lib/lua-5.2.3/src/lparser.c"
 var $126=HEAP8[($125)]; //@line 242 "lib/lua-5.2.3/src/lparser.c"
 var $127=((($126)+(1))&255); //@line 242 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($125)]=$127; //@line 242 "lib/lua-5.2.3/src/lparser.c"
 var $128=($126&255); //@line 242 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $128; //@line 242 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _statlist($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$ls;
 label=2;break; //@line 606 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $3=$1; //@line 606 "lib/lua-5.2.3/src/lparser.c"
 var $4=_block_follow($3,1); //@line 606 "lib/lua-5.2.3/src/lparser.c"
 var $5=($4|0)!=0; //@line 606 "lib/lua-5.2.3/src/lparser.c"
 var $6=$5^1; //@line 606 "lib/lua-5.2.3/src/lparser.c"
 if($6){label=3;break;}else{label=6;break;} //@line 606 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $8=$1; //@line 607 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+16)|0); //@line 607 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 607 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 607 "lib/lua-5.2.3/src/lparser.c"
 var $12=($11|0)==274; //@line 607 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=4;break;}else{label=5;break;} //@line 607 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $14=$1; //@line 608 "lib/lua-5.2.3/src/lparser.c"
 _statement($14); //@line 608 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 609 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $16=$1; //@line 611 "lib/lua-5.2.3/src/lparser.c"
 _statement($16); //@line 611 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 612 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 STACKTOP=sp;return; //@line 613 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _check($ls,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$ls;
 $2=$c;
 var $3=$1; //@line 111 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 111 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 111 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 111 "lib/lua-5.2.3/src/lparser.c"
 var $7=$2; //@line 111 "lib/lua-5.2.3/src/lparser.c"
 var $8=($6|0)!=($7|0); //@line 111 "lib/lua-5.2.3/src/lparser.c"
 if($8){label=2;break;}else{label=3;break;} //@line 111 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$1; //@line 112 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 112 "lib/lua-5.2.3/src/lparser.c"
 _error_expected($10,$11); //@line 112 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 112 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 STACKTOP=sp;return; //@line 113 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _close_func($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $L;
 var $fs;
 var $f;
 $1=$ls;
 var $2=$1; //@line 556 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+52)|0); //@line 556 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 556 "lib/lua-5.2.3/src/lparser.c"
 $L=$4; //@line 556 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 557 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+48)|0); //@line 557 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 557 "lib/lua-5.2.3/src/lparser.c"
 $fs=$7; //@line 557 "lib/lua-5.2.3/src/lparser.c"
 var $8=$fs; //@line 558 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8)|0); //@line 558 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 558 "lib/lua-5.2.3/src/lparser.c"
 $f=$10; //@line 558 "lib/lua-5.2.3/src/lparser.c"
 var $11=$fs; //@line 559 "lib/lua-5.2.3/src/lparser.c"
 _luaK_ret($11,0,0); //@line 559 "lib/lua-5.2.3/src/lparser.c"
 var $12=$fs; //@line 560 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($12); //@line 560 "lib/lua-5.2.3/src/lparser.c"
 var $13=$fs; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+20)|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $16=((($15)+(1))|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $17=($16>>>0)>1073741823; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=2;break;}else{label=3;break;} //@line 561 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $19=$L; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($19); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $23=0;label=4;break; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $23; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $24=$L; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $25=$f; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+12)|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $28=$27; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $29=$f; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+48)|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $31=HEAP32[(($30)>>2)]; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $32=($31<<2); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $33=$fs; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $34=(($33+20)|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $35=HEAP32[(($34)>>2)]; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $36=($35<<2); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $37=_luaM_realloc_($24,$28,$32,$36); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $38=$37; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $39=$f; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+12)|0); //@line 561 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($40)>>2)]=$38; //@line 561 "lib/lua-5.2.3/src/lparser.c"
 var $41=$fs; //@line 562 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+20)|0); //@line 562 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP32[(($42)>>2)]; //@line 562 "lib/lua-5.2.3/src/lparser.c"
 var $44=$f; //@line 562 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+48)|0); //@line 562 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($45)>>2)]=$43; //@line 562 "lib/lua-5.2.3/src/lparser.c"
 var $46=$fs; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46+20)|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP32[(($47)>>2)]; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $49=((($48)+(1))|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $50=($49>>>0)>1073741823; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 if($50){label=5;break;}else{label=6;break;} //@line 563 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $52=$L; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($52); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $56=0;label=7;break; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $56; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $57=$L; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $58=$f; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58+20)|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $60=HEAP32[(($59)>>2)]; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $61=$60; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $62=$f; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62+52)|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $64=HEAP32[(($63)>>2)]; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $65=($64<<2); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $66=$fs; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $67=(($66+20)|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $68=HEAP32[(($67)>>2)]; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $69=($68<<2); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $70=_luaM_realloc_($57,$61,$65,$69); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $71=$70; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $72=$f; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $73=(($72+20)|0); //@line 563 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($73)>>2)]=$71; //@line 563 "lib/lua-5.2.3/src/lparser.c"
 var $74=$fs; //@line 564 "lib/lua-5.2.3/src/lparser.c"
 var $75=(($74+20)|0); //@line 564 "lib/lua-5.2.3/src/lparser.c"
 var $76=HEAP32[(($75)>>2)]; //@line 564 "lib/lua-5.2.3/src/lparser.c"
 var $77=$f; //@line 564 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77+52)|0); //@line 564 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($78)>>2)]=$76; //@line 564 "lib/lua-5.2.3/src/lparser.c"
 var $79=$fs; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $80=(($79+32)|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $81=HEAP32[(($80)>>2)]; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $82=((($81)+(1))|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $83=($82>>>0)>268435455; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 if($83){label=8;break;}else{label=9;break;} //@line 565 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $85=$L; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($85); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 label=10;break; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $89=0;label=10;break; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $89; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $90=$L; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $91=$f; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $92=(($91+8)|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $93=HEAP32[(($92)>>2)]; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $94=$93; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $95=$f; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $96=(($95+44)|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $97=HEAP32[(($96)>>2)]; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $98=($97<<4); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $99=$fs; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $100=(($99+32)|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $101=HEAP32[(($100)>>2)]; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $102=($101<<4); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $103=_luaM_realloc_($90,$94,$98,$102); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $104=$103; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $105=$f; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $106=(($105+8)|0); //@line 565 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($106)>>2)]=$104; //@line 565 "lib/lua-5.2.3/src/lparser.c"
 var $107=$fs; //@line 566 "lib/lua-5.2.3/src/lparser.c"
 var $108=(($107+32)|0); //@line 566 "lib/lua-5.2.3/src/lparser.c"
 var $109=HEAP32[(($108)>>2)]; //@line 566 "lib/lua-5.2.3/src/lparser.c"
 var $110=$f; //@line 566 "lib/lua-5.2.3/src/lparser.c"
 var $111=(($110+44)|0); //@line 566 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($111)>>2)]=$109; //@line 566 "lib/lua-5.2.3/src/lparser.c"
 var $112=$fs; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $113=(($112+36)|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $114=HEAP32[(($113)>>2)]; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $115=((($114)+(1))|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $116=($115>>>0)>1073741823; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 if($116){label=11;break;}else{label=12;break;} //@line 567 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $118=$L; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($118); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $122=0;label=13;break; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 var $122; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $123=$L; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $124=$f; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $125=(($124+16)|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $126=HEAP32[(($125)>>2)]; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $127=$126; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $128=$f; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $129=(($128+56)|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $130=HEAP32[(($129)>>2)]; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $131=($130<<2); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $132=$fs; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $133=(($132+36)|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $134=HEAP32[(($133)>>2)]; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $135=($134<<2); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $136=_luaM_realloc_($123,$127,$131,$135); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $137=$136; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $138=$f; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $139=(($138+16)|0); //@line 567 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($139)>>2)]=$137; //@line 567 "lib/lua-5.2.3/src/lparser.c"
 var $140=$fs; //@line 568 "lib/lua-5.2.3/src/lparser.c"
 var $141=(($140+36)|0); //@line 568 "lib/lua-5.2.3/src/lparser.c"
 var $142=HEAP32[(($141)>>2)]; //@line 568 "lib/lua-5.2.3/src/lparser.c"
 var $143=$f; //@line 568 "lib/lua-5.2.3/src/lparser.c"
 var $144=(($143+56)|0); //@line 568 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($144)>>2)]=$142; //@line 568 "lib/lua-5.2.3/src/lparser.c"
 var $145=$fs; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $146=(($145+44)|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $147=HEAP16[(($146)>>1)]; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $148=(($147<<16)>>16); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $149=((($148)+(1))|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $150=($149>>>0)>357913941; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 if($150){label=14;break;}else{label=15;break;} //@line 569 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 var $152=$L; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($152); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 label=16;break; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 case 15: 
 var $156=0;label=16;break; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 case 16: 
 var $156; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $157=$L; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $158=$f; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $159=(($158+24)|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $160=HEAP32[(($159)>>2)]; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $161=$160; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $162=$f; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $163=(($162+60)|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $164=HEAP32[(($163)>>2)]; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $165=((($164)*(12))&-1); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $166=$fs; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $167=(($166+44)|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $168=HEAP16[(($167)>>1)]; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $169=(($168<<16)>>16); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $170=((($169)*(12))&-1); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $171=_luaM_realloc_($157,$161,$165,$170); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $172=$171; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $173=$f; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $174=(($173+24)|0); //@line 569 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($174)>>2)]=$172; //@line 569 "lib/lua-5.2.3/src/lparser.c"
 var $175=$fs; //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $176=(($175+44)|0); //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $177=HEAP16[(($176)>>1)]; //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $178=(($177<<16)>>16); //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $179=$f; //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $180=(($179+60)|0); //@line 570 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($180)>>2)]=$178; //@line 570 "lib/lua-5.2.3/src/lparser.c"
 var $181=$fs; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $182=(($181+47)|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $183=HEAP8[($182)]; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $184=($183&255); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $185=((($184)+(1))|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $186=($185>>>0)>536870911; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 if($186){label=17;break;}else{label=18;break;} //@line 571 "lib/lua-5.2.3/src/lparser.c"
 case 17: 
 var $188=$L; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 _luaM_toobig($188); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 label=19;break; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 case 18: 
 var $192=0;label=19;break; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 case 19: 
 var $192; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $193=$L; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $194=$f; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $195=(($194+28)|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $196=HEAP32[(($195)>>2)]; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $197=$196; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $198=$f; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $199=(($198+40)|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $200=HEAP32[(($199)>>2)]; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $201=($200<<3); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $202=$fs; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $203=(($202+47)|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $204=HEAP8[($203)]; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $205=($204&255); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $206=($205<<3); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $207=_luaM_realloc_($193,$197,$201,$206); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $208=$207; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $209=$f; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $210=(($209+28)|0); //@line 571 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($210)>>2)]=$208; //@line 571 "lib/lua-5.2.3/src/lparser.c"
 var $211=$fs; //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $212=(($211+47)|0); //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $213=HEAP8[($212)]; //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $214=($213&255); //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $215=$f; //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $216=(($215+40)|0); //@line 572 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($216)>>2)]=$214; //@line 572 "lib/lua-5.2.3/src/lparser.c"
 var $217=$fs; //@line 574 "lib/lua-5.2.3/src/lparser.c"
 var $218=(($217+8)|0); //@line 574 "lib/lua-5.2.3/src/lparser.c"
 var $219=HEAP32[(($218)>>2)]; //@line 574 "lib/lua-5.2.3/src/lparser.c"
 var $220=$1; //@line 574 "lib/lua-5.2.3/src/lparser.c"
 var $221=(($220+48)|0); //@line 574 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($221)>>2)]=$219; //@line 574 "lib/lua-5.2.3/src/lparser.c"
 var $222=$1; //@line 576 "lib/lua-5.2.3/src/lparser.c"
 _anchor_token($222); //@line 576 "lib/lua-5.2.3/src/lparser.c"
 var $223=$L; //@line 577 "lib/lua-5.2.3/src/lparser.c"
 var $224=(($223+8)|0); //@line 577 "lib/lua-5.2.3/src/lparser.c"
 var $225=HEAP32[(($224)>>2)]; //@line 577 "lib/lua-5.2.3/src/lparser.c"
 var $226=((($225)-(16))|0); //@line 577 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($224)>>2)]=$226; //@line 577 "lib/lua-5.2.3/src/lparser.c"
 var $227=$L; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 var $228=(($227+12)|0); //@line 578 "lib/lua-5.2.3/src/lparser.c"
 var $229=HEAP32[(($228)>>2)]; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 var $230=(($229+12)|0); //@line 578 "lib/lua-5.2.3/src/lparser.c"
 var $231=HEAP32[(($230)>>2)]; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 var $232=($231|0)>0; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 if($232){label=20;break;}else{label=21;break;} //@line 578 "lib/lua-5.2.3/src/lparser.c"
 case 20: 
 var $234=$L; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 _luaC_step($234); //@line 578 "lib/lua-5.2.3/src/lparser.c"
 label=21;break; //@line 578 "lib/lua-5.2.3/src/lparser.c"
 case 21: 
 STACKTOP=sp;return; //@line 579 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _leaveblock($fs){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $bl;
 var $ls;
 var $j;
 $1=$fs;
 var $2=$1; //@line 473 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+16)|0); //@line 473 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 473 "lib/lua-5.2.3/src/lparser.c"
 $bl=$4; //@line 473 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 474 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+12)|0); //@line 474 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 474 "lib/lua-5.2.3/src/lparser.c"
 $ls=$7; //@line 474 "lib/lua-5.2.3/src/lparser.c"
 var $8=$bl; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8)|0); //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10|0)!=0; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 if($11){label=2;break;}else{label=4;break;} //@line 475 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $13=$bl; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+9)|0); //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP8[($14)]; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $16=($15&255); //@line 475 "lib/lua-5.2.3/src/lparser.c"
 var $17=($16|0)!=0; //@line 475 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=3;break;}else{label=4;break;} //@line 475 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $19=$1; //@line 477 "lib/lua-5.2.3/src/lparser.c"
 var $20=_luaK_jump($19); //@line 477 "lib/lua-5.2.3/src/lparser.c"
 $j=$20; //@line 477 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $22=$j; //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $23=$bl; //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+8)|0); //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP8[($24)]; //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $26=($25&255); //@line 478 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchclose($21,$22,$26); //@line 478 "lib/lua-5.2.3/src/lparser.c"
 var $27=$1; //@line 479 "lib/lua-5.2.3/src/lparser.c"
 var $28=$j; //@line 479 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchtohere($27,$28); //@line 479 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 480 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $30=$bl; //@line 481 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+10)|0); //@line 481 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP8[($31)]; //@line 481 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32<<24)>>24)!=0; //@line 481 "lib/lua-5.2.3/src/lparser.c"
 if($33){label=5;break;}else{label=6;break;} //@line 481 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $35=$ls; //@line 482 "lib/lua-5.2.3/src/lparser.c"
 _breaklabel($35); //@line 482 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 482 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $37=$bl; //@line 483 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37)|0); //@line 483 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP32[(($38)>>2)]; //@line 483 "lib/lua-5.2.3/src/lparser.c"
 var $40=$1; //@line 483 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40+16)|0); //@line 483 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($41)>>2)]=$39; //@line 483 "lib/lua-5.2.3/src/lparser.c"
 var $42=$1; //@line 484 "lib/lua-5.2.3/src/lparser.c"
 var $43=$bl; //@line 484 "lib/lua-5.2.3/src/lparser.c"
 var $44=(($43+8)|0); //@line 484 "lib/lua-5.2.3/src/lparser.c"
 var $45=HEAP8[($44)]; //@line 484 "lib/lua-5.2.3/src/lparser.c"
 var $46=($45&255); //@line 484 "lib/lua-5.2.3/src/lparser.c"
 _removevars($42,$46); //@line 484 "lib/lua-5.2.3/src/lparser.c"
 var $47=$1; //@line 486 "lib/lua-5.2.3/src/lparser.c"
 var $48=(($47+46)|0); //@line 486 "lib/lua-5.2.3/src/lparser.c"
 var $49=HEAP8[($48)]; //@line 486 "lib/lua-5.2.3/src/lparser.c"
 var $50=$1; //@line 486 "lib/lua-5.2.3/src/lparser.c"
 var $51=(($50+48)|0); //@line 486 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($51)]=$49; //@line 486 "lib/lua-5.2.3/src/lparser.c"
 var $52=$bl; //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+4)|0); //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $54=HEAP16[(($53)>>1)]; //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54<<16)>>16); //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $56=$ls; //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+64)|0); //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP32[(($57)>>2)]; //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58+24)|0); //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59+4)|0); //@line 487 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($60)>>2)]=$55; //@line 487 "lib/lua-5.2.3/src/lparser.c"
 var $61=$bl; //@line 488 "lib/lua-5.2.3/src/lparser.c"
 var $62=(($61)|0); //@line 488 "lib/lua-5.2.3/src/lparser.c"
 var $63=HEAP32[(($62)>>2)]; //@line 488 "lib/lua-5.2.3/src/lparser.c"
 var $64=($63|0)!=0; //@line 488 "lib/lua-5.2.3/src/lparser.c"
 if($64){label=7;break;}else{label=8;break;} //@line 488 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $66=$1; //@line 489 "lib/lua-5.2.3/src/lparser.c"
 var $67=$bl; //@line 489 "lib/lua-5.2.3/src/lparser.c"
 _movegotosout($66,$67); //@line 489 "lib/lua-5.2.3/src/lparser.c"
 label=11;break; //@line 489 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $69=$bl; //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69+6)|0); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $71=HEAP16[(($70)>>1)]; //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71<<16)>>16); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $73=$ls; //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $74=(($73+64)|0); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $75=HEAP32[(($74)>>2)]; //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $76=(($75+12)|0); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $77=(($76+4)|0); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $78=HEAP32[(($77)>>2)]; //@line 490 "lib/lua-5.2.3/src/lparser.c"
 var $79=($72|0)<($78|0); //@line 490 "lib/lua-5.2.3/src/lparser.c"
 if($79){label=9;break;}else{label=10;break;} //@line 490 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $81=$ls; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $82=$bl; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $83=(($82+6)|0); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $84=HEAP16[(($83)>>1)]; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $85=(($84<<16)>>16); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $86=$ls; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $87=(($86+64)|0); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $88=HEAP32[(($87)>>2)]; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $89=(($88+12)|0); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $90=(($89)|0); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $91=HEAP32[(($90)>>2)]; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 var $92=(($91+($85<<4))|0); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 _undefgoto($81,$92); //@line 491 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 491 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 label=11;break;
 case 11: 
 STACKTOP=sp;return; //@line 492 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _anchor_token($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $ts;
 $1=$ls;
 var $2=$1; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+16)|0); //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3)|0); //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $6=($5|0)==288; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 if($6){label=3;break;}else{label=2;break;} //@line 63 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $8=$1; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+16)|0); //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 var $12=($11|0)==289; //@line 63 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=3;break;}else{label=4;break;} //@line 63 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $14=$1; //@line 64 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+16)|0); //@line 64 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+8)|0); //@line 64 "lib/lua-5.2.3/src/lparser.c"
 var $17=$16; //@line 64 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 64 "lib/lua-5.2.3/src/lparser.c"
 $ts=$18; //@line 64 "lib/lua-5.2.3/src/lparser.c"
 var $19=$1; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $20=$ts; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+16)|0); //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $22=$21; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $23=$ts; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $24=$23; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($24+12)|0); //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $26=HEAP32[(($25)>>2)]; //@line 65 "lib/lua-5.2.3/src/lparser.c"
 var $27=_luaX_newstring($19,$22,$26); //@line 65 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 66 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 STACKTOP=sp;return; //@line 67 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _breaklabel($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $n;
 var $l;
 $1=$ls;
 var $2=$1; //@line 454 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+52)|0); //@line 454 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 454 "lib/lua-5.2.3/src/lparser.c"
 var $5=_luaS_new($4,9216); //@line 454 "lib/lua-5.2.3/src/lparser.c"
 $n=$5; //@line 454 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+64)|0); //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+24)|0); //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $11=$n; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+48)|0); //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+20)|0); //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $17=_newlabelentry($6,$10,$11,0,$16); //@line 455 "lib/lua-5.2.3/src/lparser.c"
 $l=$17; //@line 455 "lib/lua-5.2.3/src/lparser.c"
 var $18=$1; //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $19=$l; //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+64)|0); //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $22=HEAP32[(($21)>>2)]; //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+24)|0); //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23)|0); //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 456 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+($19<<4))|0); //@line 456 "lib/lua-5.2.3/src/lparser.c"
 _findgotos($18,$26); //@line 456 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 457 "lib/lua-5.2.3/src/lparser.c"
}


function _removevars($fs,$tolevel){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$tolevel;
 var $3=$1; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+46)|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP8[($4)]; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $6=($5&255); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $7=$2; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $8=((($6)-($7))|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+12)|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+64)|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+4)|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 var $17=((($16)-($8))|0); //@line 215 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($15)>>2)]=$17; //@line 215 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 216 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $19=$1; //@line 216 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+46)|0); //@line 216 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP8[($20)]; //@line 216 "lib/lua-5.2.3/src/lparser.c"
 var $22=($21&255); //@line 216 "lib/lua-5.2.3/src/lparser.c"
 var $23=$2; //@line 216 "lib/lua-5.2.3/src/lparser.c"
 var $24=($22|0)>($23|0); //@line 216 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=3;break;}else{label=4;break;} //@line 216 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $26=$1; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+20)|0); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $29=$1; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $30=$1; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+46)|0); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP8[($31)]; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $33=((($32)-(1))&255); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($31)]=$33; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $34=($33&255); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $35=_getlocvar($29,$34); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+8)|0); //@line 217 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($36)>>2)]=$28; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 217 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 STACKTOP=sp;return; //@line 218 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _movegotosout($fs,$bl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $gl;
 var $gt;
 $1=$fs;
 $2=$bl;
 var $3=$2; //@line 421 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+6)|0); //@line 421 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP16[(($4)>>1)]; //@line 421 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5<<16)>>16); //@line 421 "lib/lua-5.2.3/src/lparser.c"
 $i=$6; //@line 421 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 422 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+12)|0); //@line 422 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 422 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+64)|0); //@line 422 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 422 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+12)|0); //@line 422 "lib/lua-5.2.3/src/lparser.c"
 $gl=$12; //@line 422 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 425 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $14=$i; //@line 425 "lib/lua-5.2.3/src/lparser.c"
 var $15=$gl; //@line 425 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+4)|0); //@line 425 "lib/lua-5.2.3/src/lparser.c"
 var $17=HEAP32[(($16)>>2)]; //@line 425 "lib/lua-5.2.3/src/lparser.c"
 var $18=($14|0)<($17|0); //@line 425 "lib/lua-5.2.3/src/lparser.c"
 if($18){label=3;break;}else{label=10;break;} //@line 425 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $20=$i; //@line 426 "lib/lua-5.2.3/src/lparser.c"
 var $21=$gl; //@line 426 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21)|0); //@line 426 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP32[(($22)>>2)]; //@line 426 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+($20<<4))|0); //@line 426 "lib/lua-5.2.3/src/lparser.c"
 $gt=$24; //@line 426 "lib/lua-5.2.3/src/lparser.c"
 var $25=$gt; //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+12)|0); //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP8[($26)]; //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $28=($27&255); //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $29=$2; //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+8)|0); //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $31=HEAP8[($30)]; //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $32=($31&255); //@line 427 "lib/lua-5.2.3/src/lparser.c"
 var $33=($28|0)>($32|0); //@line 427 "lib/lua-5.2.3/src/lparser.c"
 if($33){label=4;break;}else{label=7;break;} //@line 427 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $35=$2; //@line 428 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+9)|0); //@line 428 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP8[($36)]; //@line 428 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37<<24)>>24)!=0; //@line 428 "lib/lua-5.2.3/src/lparser.c"
 if($38){label=5;break;}else{label=6;break;} //@line 428 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $40=$1; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $41=$gt; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+4)|0); //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP32[(($42)>>2)]; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $44=$2; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+8)|0); //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $46=HEAP8[($45)]; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 var $47=($46&255); //@line 429 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchclose($40,$43,$47); //@line 429 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 429 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $49=$2; //@line 430 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+8)|0); //@line 430 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP8[($50)]; //@line 430 "lib/lua-5.2.3/src/lparser.c"
 var $52=$gt; //@line 430 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+12)|0); //@line 430 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($53)]=$51; //@line 430 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 431 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $55=$1; //@line 432 "lib/lua-5.2.3/src/lparser.c"
 var $56=(($55+12)|0); //@line 432 "lib/lua-5.2.3/src/lparser.c"
 var $57=HEAP32[(($56)>>2)]; //@line 432 "lib/lua-5.2.3/src/lparser.c"
 var $58=$i; //@line 432 "lib/lua-5.2.3/src/lparser.c"
 var $59=_findlabel($57,$58); //@line 432 "lib/lua-5.2.3/src/lparser.c"
 var $60=($59|0)!=0; //@line 432 "lib/lua-5.2.3/src/lparser.c"
 if($60){label=9;break;}else{label=8;break;} //@line 432 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $62=$i; //@line 433 "lib/lua-5.2.3/src/lparser.c"
 var $63=((($62)+(1))|0); //@line 433 "lib/lua-5.2.3/src/lparser.c"
 $i=$63; //@line 433 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 433 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 label=2;break; //@line 434 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 STACKTOP=sp;return; //@line 435 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _undefgoto($ls,$gt){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $msg;
 $1=$ls;
 $2=$gt;
 var $3=$2; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3)|0); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $6=$5; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+4)|0); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP8[($7)]; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $9=($8&255); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9|0)==4; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 if($10){label=2;break;}else{var $21=0;label=3;break;} //@line 466 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $12=$2; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12)|0); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $15=$14; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+6)|0); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $17=HEAP8[($16)]; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $18=($17&255); //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)>0; //@line 466 "lib/lua-5.2.3/src/lparser.c"
 var $21=$19;label=3;break;
 case 3: 
 var $21;
 var $22=($21?16152:15824);
 $msg=$22;
 var $23=$1; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+52)|0); //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $26=$msg; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $27=$2; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27)|0); //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $29=HEAP32[(($28)>>2)]; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+16)|0); //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $31=$30; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+8)|0); //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $34=HEAP32[(($33)>>2)]; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $35=_luaO_pushfstring($25,$26,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$31,HEAP32[(((tempVarArgs)+(8))>>2)]=$34,tempVarArgs)); STACKTOP=tempVarArgs; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 $msg=$35; //@line 467 "lib/lua-5.2.3/src/lparser.c"
 var $36=$1; //@line 468 "lib/lua-5.2.3/src/lparser.c"
 var $37=$msg; //@line 468 "lib/lua-5.2.3/src/lparser.c"
 _semerror($36,$37); //@line 468 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 468 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 469 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _semerror($ls,$msg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$msg;
 var $3=$1; //@line 72 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 72 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 72 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($5)>>2)]=0; //@line 72 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 73 "lib/lua-5.2.3/src/lparser.c"
 var $7=$2; //@line 73 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($6,$7); //@line 73 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 73 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 74 "lib/lua-5.2.3/src/lparser.c"
}


function _findlabel($ls,$g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $bl;
 var $dyd;
 var $gt;
 var $lb;
 $2=$ls;
 $3=$g;
 var $4=$2; //@line 366 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 366 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 366 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+16)|0); //@line 366 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 366 "lib/lua-5.2.3/src/lparser.c"
 $bl=$8; //@line 366 "lib/lua-5.2.3/src/lparser.c"
 var $9=$2; //@line 367 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+64)|0); //@line 367 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 367 "lib/lua-5.2.3/src/lparser.c"
 $dyd=$11; //@line 367 "lib/lua-5.2.3/src/lparser.c"
 var $12=$3; //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $13=$dyd; //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+12)|0); //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+($12<<4))|0); //@line 368 "lib/lua-5.2.3/src/lparser.c"
 $gt=$17; //@line 368 "lib/lua-5.2.3/src/lparser.c"
 var $18=$bl; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18+4)|0); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $20=HEAP16[(($19)>>1)]; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20<<16)>>16); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 $i=$21; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $23=$i; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $24=$dyd; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($24+24)|0); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+4)|0); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $28=($23|0)<($27|0); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 if($28){label=3;break;}else{label=11;break;} //@line 370 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $30=$i; //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $31=$dyd; //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+24)|0); //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32)|0); //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $34=HEAP32[(($33)>>2)]; //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+($30<<4))|0); //@line 371 "lib/lua-5.2.3/src/lparser.c"
 $lb=$35; //@line 371 "lib/lua-5.2.3/src/lparser.c"
 var $36=$lb; //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36)|0); //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $38=HEAP32[(($37)>>2)]; //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $39=$gt; //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39)|0); //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $42=_luaS_eqstr($38,$41); //@line 372 "lib/lua-5.2.3/src/lparser.c"
 var $43=($42|0)!=0; //@line 372 "lib/lua-5.2.3/src/lparser.c"
 if($43){label=4;break;}else{label=9;break;} //@line 372 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $45=$gt; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($45+12)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $47=HEAP8[($46)]; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $48=($47&255); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $49=$lb; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+12)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP8[($50)]; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $52=($51&255); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $53=($48|0)>($52|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 if($53){label=5;break;}else{label=8;break;} //@line 373 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $55=$bl; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $56=(($55+9)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $57=HEAP8[($56)]; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $58=($57&255); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $59=($58|0)!=0; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 if($59){label=7;break;}else{label=6;break;} //@line 373 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $61=$dyd; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $62=(($61+24)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62+4)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $64=HEAP32[(($63)>>2)]; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $65=$bl; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $66=(($65+4)|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $67=HEAP16[(($66)>>1)]; //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67<<16)>>16); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 var $69=($64|0)>($68|0); //@line 373 "lib/lua-5.2.3/src/lparser.c"
 if($69){label=7;break;}else{label=8;break;} //@line 373 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $71=$2; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71+48)|0); //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $73=HEAP32[(($72)>>2)]; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $74=$gt; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $75=(($74+4)|0); //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $76=HEAP32[(($75)>>2)]; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $77=$lb; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77+12)|0); //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $79=HEAP8[($78)]; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 var $80=($79&255); //@line 375 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchclose($73,$76,$80); //@line 375 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 375 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $82=$2; //@line 376 "lib/lua-5.2.3/src/lparser.c"
 var $83=$3; //@line 376 "lib/lua-5.2.3/src/lparser.c"
 var $84=$lb; //@line 376 "lib/lua-5.2.3/src/lparser.c"
 _closegoto($82,$83,$84); //@line 376 "lib/lua-5.2.3/src/lparser.c"
 $1=1; //@line 377 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 377 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 label=10;break; //@line 379 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $87=$i; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 var $88=((($87)+(1))|0); //@line 370 "lib/lua-5.2.3/src/lparser.c"
 $i=$88; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 370 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 $1=0; //@line 380 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 380 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $91=$1; //@line 381 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $91; //@line 381 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _closegoto($ls,$g,$label){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $fs;
 var $gl;
 var $gt;
 var $vname;
 var $msg;
 $1=$ls;
 $2=$g;
 $3=$label;
 var $4=$1; //@line 342 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 342 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 342 "lib/lua-5.2.3/src/lparser.c"
 $fs=$6; //@line 342 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 343 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+64)|0); //@line 343 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 343 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+12)|0); //@line 343 "lib/lua-5.2.3/src/lparser.c"
 $gl=$10; //@line 343 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 344 "lib/lua-5.2.3/src/lparser.c"
 var $12=$gl; //@line 344 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12)|0); //@line 344 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 344 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+($11<<4))|0); //@line 344 "lib/lua-5.2.3/src/lparser.c"
 $gt=$15; //@line 344 "lib/lua-5.2.3/src/lparser.c"
 var $16=$gt; //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+12)|0); //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP8[($17)]; //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18&255); //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $20=$3; //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+12)|0); //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $22=HEAP8[($21)]; //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $23=($22&255); //@line 346 "lib/lua-5.2.3/src/lparser.c"
 var $24=($19|0)<($23|0); //@line 346 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=2;break;}else{label=3;break;} //@line 346 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $26=$fs; //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $27=$gt; //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27+12)|0); //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $29=HEAP8[($28)]; //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $30=($29&255); //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $31=_getlocvar($26,$30); //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31)|0); //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 347 "lib/lua-5.2.3/src/lparser.c"
 $vname=$33; //@line 347 "lib/lua-5.2.3/src/lparser.c"
 var $34=$1; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+52)|0); //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $36=HEAP32[(($35)>>2)]; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $37=$gt; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37)|0); //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP32[(($38)>>2)]; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+16)|0); //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $41=$40; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $42=$gt; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42+8)|0); //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $44=HEAP32[(($43)>>2)]; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $45=$vname; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($45+16)|0); //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $47=$46; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $48=_luaO_pushfstring($36,12264,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$41,HEAP32[(((tempVarArgs)+(8))>>2)]=$44,HEAP32[(((tempVarArgs)+(16))>>2)]=$47,tempVarArgs)); STACKTOP=tempVarArgs; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 $msg=$48; //@line 348 "lib/lua-5.2.3/src/lparser.c"
 var $49=$1; //@line 351 "lib/lua-5.2.3/src/lparser.c"
 var $50=$msg; //@line 351 "lib/lua-5.2.3/src/lparser.c"
 _semerror($49,$50); //@line 351 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 351 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $52=$fs; //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $53=$gt; //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+4)|0); //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $55=HEAP32[(($54)>>2)]; //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $56=$3; //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+4)|0); //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP32[(($57)>>2)]; //@line 353 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchlist($52,$55,$58); //@line 353 "lib/lua-5.2.3/src/lparser.c"
 var $59=$2; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 $i=$59; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $61=$i; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $62=$gl; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62+4)|0); //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $64=HEAP32[(($63)>>2)]; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $65=((($64)-(1))|0); //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $66=($61|0)<($65|0); //@line 355 "lib/lua-5.2.3/src/lparser.c"
 if($66){label=5;break;}else{label=7;break;} //@line 355 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $68=$i; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $69=$gl; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69)|0); //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $71=HEAP32[(($70)>>2)]; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71+($68<<4))|0); //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $73=$i; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $74=((($73)+(1))|0); //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $75=$gl; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $76=(($75)|0); //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $77=HEAP32[(($76)>>2)]; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77+($74<<4))|0); //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $79=$72; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 var $80=$78; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 assert(16 % 1 === 0);HEAP32[(($79)>>2)]=HEAP32[(($80)>>2)];HEAP32[((($79)+(4))>>2)]=HEAP32[((($80)+(4))>>2)];HEAP32[((($79)+(8))>>2)]=HEAP32[((($80)+(8))>>2)];HEAP32[((($79)+(12))>>2)]=HEAP32[((($80)+(12))>>2)]; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 356 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $82=$i; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 var $83=((($82)+(1))|0); //@line 355 "lib/lua-5.2.3/src/lparser.c"
 $i=$83; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 355 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $85=$gl; //@line 357 "lib/lua-5.2.3/src/lparser.c"
 var $86=(($85+4)|0); //@line 357 "lib/lua-5.2.3/src/lparser.c"
 var $87=HEAP32[(($86)>>2)]; //@line 357 "lib/lua-5.2.3/src/lparser.c"
 var $88=((($87)-(1))|0); //@line 357 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($86)>>2)]=$88; //@line 357 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 358 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getlocvar($fs,$i){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $idx;
 $1=$fs;
 $2=$i;
 var $3=$1; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+40)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $6=$2; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $7=((($5)+($6))|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+12)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+64)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+($7<<1))|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP16[(($17)>>1)]; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18<<16)>>16); //@line 199 "lib/lua-5.2.3/src/lparser.c"
 $idx=$19; //@line 199 "lib/lua-5.2.3/src/lparser.c"
 var $20=$idx; //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21)|0); //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP32[(($22)>>2)]; //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+24)|0); //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 201 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+((($20)*(12))&-1))|0); //@line 201 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $26; //@line 201 "lib/lua-5.2.3/src/lparser.c"
}


function _newlabelentry($ls,$l,$name,$line,$pc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $n;
 $1=$ls;
 $2=$l;
 $3=$name;
 $4=$line;
 $5=$pc;
 var $6=$2; //@line 386 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+4)|0); //@line 386 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 386 "lib/lua-5.2.3/src/lparser.c"
 $n=$8; //@line 386 "lib/lua-5.2.3/src/lparser.c"
 var $9=$n; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $10=((($9)+(1))|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+8)|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $14=($10|0)>($13|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=2;break;}else{label=3;break;} //@line 387 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $16=$1; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+52)|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19)|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $22=$21; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $23=$2; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+8)|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $25=_luaM_growaux_($18,$22,$24,16,32767,7384); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $26=$25; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $27=$2; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27)|0); //@line 387 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($28)>>2)]=$26; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 387 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $30=$3; //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $31=$n; //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32)|0); //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $34=HEAP32[(($33)>>2)]; //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+($31<<4))|0); //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35)|0); //@line 389 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($36)>>2)]=$30; //@line 389 "lib/lua-5.2.3/src/lparser.c"
 var $37=$4; //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $38=$n; //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $39=$2; //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39)|0); //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+($38<<4))|0); //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42+8)|0); //@line 390 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($43)>>2)]=$37; //@line 390 "lib/lua-5.2.3/src/lparser.c"
 var $44=$1; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+48)|0); //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $46=HEAP32[(($45)>>2)]; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46+46)|0); //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP8[($47)]; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $49=$n; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $50=$2; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $51=(($50)|0); //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $52=HEAP32[(($51)>>2)]; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+($49<<4))|0); //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+12)|0); //@line 391 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($54)]=$48; //@line 391 "lib/lua-5.2.3/src/lparser.c"
 var $55=$5; //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $56=$n; //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $57=$2; //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $58=(($57)|0); //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $59=HEAP32[(($58)>>2)]; //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59+($56<<4))|0); //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60+4)|0); //@line 392 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($61)>>2)]=$55; //@line 392 "lib/lua-5.2.3/src/lparser.c"
 var $62=$2; //@line 393 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62+4)|0); //@line 393 "lib/lua-5.2.3/src/lparser.c"
 var $64=HEAP32[(($63)>>2)]; //@line 393 "lib/lua-5.2.3/src/lparser.c"
 var $65=((($64)+(1))|0); //@line 393 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($63)>>2)]=$65; //@line 393 "lib/lua-5.2.3/src/lparser.c"
 var $66=$n; //@line 394 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $66; //@line 394 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _findgotos($ls,$lb){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $gl;
 var $i;
 $1=$ls;
 $2=$lb;
 var $3=$1; //@line 403 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+64)|0); //@line 403 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 403 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+12)|0); //@line 403 "lib/lua-5.2.3/src/lparser.c"
 $gl=$6; //@line 403 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+48)|0); //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+16)|0); //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+6)|0); //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP16[(($12)>>1)]; //@line 404 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13<<16)>>16); //@line 404 "lib/lua-5.2.3/src/lparser.c"
 $i=$14; //@line 404 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 405 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $16=$i; //@line 405 "lib/lua-5.2.3/src/lparser.c"
 var $17=$gl; //@line 405 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17+4)|0); //@line 405 "lib/lua-5.2.3/src/lparser.c"
 var $19=HEAP32[(($18)>>2)]; //@line 405 "lib/lua-5.2.3/src/lparser.c"
 var $20=($16|0)<($19|0); //@line 405 "lib/lua-5.2.3/src/lparser.c"
 if($20){label=3;break;}else{label=7;break;} //@line 405 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $22=$i; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $23=$gl; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23)|0); //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+($22<<4))|0); //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26)|0); //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $29=$2; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29)|0); //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $31=HEAP32[(($30)>>2)]; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $32=_luaS_eqstr($28,$31); //@line 406 "lib/lua-5.2.3/src/lparser.c"
 var $33=($32|0)!=0; //@line 406 "lib/lua-5.2.3/src/lparser.c"
 if($33){label=4;break;}else{label=5;break;} //@line 406 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $35=$1; //@line 407 "lib/lua-5.2.3/src/lparser.c"
 var $36=$i; //@line 407 "lib/lua-5.2.3/src/lparser.c"
 var $37=$2; //@line 407 "lib/lua-5.2.3/src/lparser.c"
 _closegoto($35,$36,$37); //@line 407 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 407 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $39=$i; //@line 409 "lib/lua-5.2.3/src/lparser.c"
 var $40=((($39)+(1))|0); //@line 409 "lib/lua-5.2.3/src/lparser.c"
 $i=$40; //@line 409 "lib/lua-5.2.3/src/lparser.c"
 label=6;break;
 case 6: 
 label=2;break; //@line 410 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 STACKTOP=sp;return; //@line 411 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _error_expected($ls,$token){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$token;
 var $3=$1; //@line 78 "lib/lua-5.2.3/src/lparser.c"
 var $4=$1; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+52)|0); //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $8=$2; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $9=_luaX_token2str($7,$8); //@line 79 "lib/lua-5.2.3/src/lparser.c"
 var $10=_luaO_pushfstring($6,5944,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,tempVarArgs)); STACKTOP=tempVarArgs; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($3,$10); //@line 79 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 79 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 80 "lib/lua-5.2.3/src/lparser.c"
}


function _block_follow($ls,$withuntil){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ls;
 $3=$withuntil;
 var $4=$2; //@line 594 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+16)|0); //@line 594 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5)|0); //@line 594 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 594 "lib/lua-5.2.3/src/lparser.c"
 switch(($7|0)){case 260:case 261:case 262:case 286:{ label=2;break;}case 277:{ label=3;break;}default:{label=4;break;}}break;
 case 2: 
 $1=1; //@line 597 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 597 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $10=$3; //@line 598 "lib/lua-5.2.3/src/lparser.c"
 $1=$10; //@line 598 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 598 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 $1=0; //@line 599 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 599 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $13=$1; //@line 601 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $13; //@line 601 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _statement($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $line;
 $1=$ls;
 var $2=$1; //@line 1530 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+4)|0); //@line 1530 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1530 "lib/lua-5.2.3/src/lparser.c"
 $line=$4; //@line 1530 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 1531 "lib/lua-5.2.3/src/lparser.c"
 _enterlevel($5); //@line 1531 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1532 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+16)|0); //@line 1532 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7)|0); //@line 1532 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 1532 "lib/lua-5.2.3/src/lparser.c"
 switch(($9|0)){case 285:{ label=13;break;}case 274:{ label=14;break;}case 258:case 266:{ label=15;break;}case 59:{ label=2;break;}case 267:{ label=3;break;}case 278:{ label=4;break;}case 259:{ label=5;break;}case 264:{ label=6;break;}case 273:{ label=7;break;}case 265:{ label=8;break;}case 269:{ label=9;break;}default:{label=16;break;}}break;
 case 2: 
 var $11=$1; //@line 1534 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($11); //@line 1534 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1535 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $13=$1; //@line 1538 "lib/lua-5.2.3/src/lparser.c"
 var $14=$line; //@line 1538 "lib/lua-5.2.3/src/lparser.c"
 _ifstat($13,$14); //@line 1538 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1539 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $16=$1; //@line 1542 "lib/lua-5.2.3/src/lparser.c"
 var $17=$line; //@line 1542 "lib/lua-5.2.3/src/lparser.c"
 _whilestat($16,$17); //@line 1542 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1543 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $19=$1; //@line 1546 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($19); //@line 1546 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 1547 "lib/lua-5.2.3/src/lparser.c"
 _block($20); //@line 1547 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 1548 "lib/lua-5.2.3/src/lparser.c"
 var $22=$line; //@line 1548 "lib/lua-5.2.3/src/lparser.c"
 _check_match($21,262,259,$22); //@line 1548 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1549 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $24=$1; //@line 1552 "lib/lua-5.2.3/src/lparser.c"
 var $25=$line; //@line 1552 "lib/lua-5.2.3/src/lparser.c"
 _forstat($24,$25); //@line 1552 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1553 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $27=$1; //@line 1556 "lib/lua-5.2.3/src/lparser.c"
 var $28=$line; //@line 1556 "lib/lua-5.2.3/src/lparser.c"
 _repeatstat($27,$28); //@line 1556 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1557 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $30=$1; //@line 1560 "lib/lua-5.2.3/src/lparser.c"
 var $31=$line; //@line 1560 "lib/lua-5.2.3/src/lparser.c"
 _funcstat($30,$31); //@line 1560 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1561 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $33=$1; //@line 1564 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($33); //@line 1564 "lib/lua-5.2.3/src/lparser.c"
 var $34=$1; //@line 1565 "lib/lua-5.2.3/src/lparser.c"
 var $35=_testnext($34,265); //@line 1565 "lib/lua-5.2.3/src/lparser.c"
 var $36=($35|0)!=0; //@line 1565 "lib/lua-5.2.3/src/lparser.c"
 if($36){label=10;break;}else{label=11;break;} //@line 1565 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $38=$1; //@line 1566 "lib/lua-5.2.3/src/lparser.c"
 _localfunc($38); //@line 1566 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 1566 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $40=$1; //@line 1568 "lib/lua-5.2.3/src/lparser.c"
 _localstat($40); //@line 1568 "lib/lua-5.2.3/src/lparser.c"
 label=12;break;
 case 12: 
 label=17;break; //@line 1569 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 var $43=$1; //@line 1572 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($43); //@line 1572 "lib/lua-5.2.3/src/lparser.c"
 var $44=$1; //@line 1573 "lib/lua-5.2.3/src/lparser.c"
 var $45=$1; //@line 1573 "lib/lua-5.2.3/src/lparser.c"
 var $46=_str_checkname($45); //@line 1573 "lib/lua-5.2.3/src/lparser.c"
 var $47=$line; //@line 1573 "lib/lua-5.2.3/src/lparser.c"
 _labelstat($44,$46,$47); //@line 1573 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1574 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 var $49=$1; //@line 1577 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($49); //@line 1577 "lib/lua-5.2.3/src/lparser.c"
 var $50=$1; //@line 1578 "lib/lua-5.2.3/src/lparser.c"
 _retstat($50); //@line 1578 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1579 "lib/lua-5.2.3/src/lparser.c"
 case 15: 
 var $52=$1; //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 var $53=$1; //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+48)|0); //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 var $55=HEAP32[(($54)>>2)]; //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 var $56=_luaK_jump($55); //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 _gotostat($52,$56); //@line 1583 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1584 "lib/lua-5.2.3/src/lparser.c"
 case 16: 
 var $58=$1; //@line 1587 "lib/lua-5.2.3/src/lparser.c"
 _exprstat($58); //@line 1587 "lib/lua-5.2.3/src/lparser.c"
 label=17;break; //@line 1588 "lib/lua-5.2.3/src/lparser.c"
 case 17: 
 var $60=$1; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60+48)|0); //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $62=HEAP32[(($61)>>2)]; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62+46)|0); //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $64=HEAP8[($63)]; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $65=$1; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $66=(($65+48)|0); //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $67=HEAP32[(($66)>>2)]; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67+48)|0); //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($68)]=$64; //@line 1593 "lib/lua-5.2.3/src/lparser.c"
 var $69=$1; //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69+52)|0); //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 var $71=HEAP32[(($70)>>2)]; //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71+38)|0); //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 var $73=HEAP16[(($72)>>1)]; //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 var $74=((($73)-(1))&65535); //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($72)>>1)]=$74; //@line 1594 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1595 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _enterlevel($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $L;
 $1=$ls;
 var $2=$1; //@line 331 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+52)|0); //@line 331 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 331 "lib/lua-5.2.3/src/lparser.c"
 $L=$4; //@line 331 "lib/lua-5.2.3/src/lparser.c"
 var $5=$L; //@line 332 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+38)|0); //@line 332 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP16[(($6)>>1)]; //@line 332 "lib/lua-5.2.3/src/lparser.c"
 var $8=((($7)+(1))&65535); //@line 332 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($6)>>1)]=$8; //@line 332 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+48)|0); //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $12=$L; //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+38)|0); //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP16[(($13)>>1)]; //@line 333 "lib/lua-5.2.3/src/lparser.c"
 var $15=($14&65535); //@line 333 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($11,$15,200,4352); //@line 333 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 334 "lib/lua-5.2.3/src/lparser.c"
}


function _ifstat($ls,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $escapelist=sp;
 $1=$ls;
 $2=$line;
 var $3=$1; //@line 1411 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1411 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1411 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1411 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($escapelist)>>2)]=-1; //@line 1412 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1413 "lib/lua-5.2.3/src/lparser.c"
 _test_then_block($6,$escapelist); //@line 1413 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $8=$1; //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+16)|0); //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 var $12=($11|0)==261; //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=3;break;}else{label=4;break;} //@line 1414 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $14=$1; //@line 1415 "lib/lua-5.2.3/src/lparser.c"
 _test_then_block($14,$escapelist); //@line 1415 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1415 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $16=$1; //@line 1416 "lib/lua-5.2.3/src/lparser.c"
 var $17=_testnext($16,260); //@line 1416 "lib/lua-5.2.3/src/lparser.c"
 var $18=($17|0)!=0; //@line 1416 "lib/lua-5.2.3/src/lparser.c"
 if($18){label=5;break;}else{label=6;break;} //@line 1416 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $20=$1; //@line 1417 "lib/lua-5.2.3/src/lparser.c"
 _block($20); //@line 1417 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 1417 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $22=$1; //@line 1418 "lib/lua-5.2.3/src/lparser.c"
 var $23=$2; //@line 1418 "lib/lua-5.2.3/src/lparser.c"
 _check_match($22,262,267,$23); //@line 1418 "lib/lua-5.2.3/src/lparser.c"
 var $24=$fs; //@line 1419 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($escapelist)>>2)]; //@line 1419 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchtohere($24,$25); //@line 1419 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1420 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _whilestat($ls,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $fs;
 var $whileinit;
 var $condexit;
 var $bl=sp;
 $1=$ls;
 $2=$line;
 var $3=$1; //@line 1235 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1235 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1235 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1235 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1239 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($6); //@line 1239 "lib/lua-5.2.3/src/lparser.c"
 var $7=$fs; //@line 1240 "lib/lua-5.2.3/src/lparser.c"
 var $8=_luaK_getlabel($7); //@line 1240 "lib/lua-5.2.3/src/lparser.c"
 $whileinit=$8; //@line 1240 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1241 "lib/lua-5.2.3/src/lparser.c"
 var $10=_cond($9); //@line 1241 "lib/lua-5.2.3/src/lparser.c"
 $condexit=$10; //@line 1241 "lib/lua-5.2.3/src/lparser.c"
 var $11=$fs; //@line 1242 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($11,$bl,1); //@line 1242 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 1243 "lib/lua-5.2.3/src/lparser.c"
 _checknext($12,259); //@line 1243 "lib/lua-5.2.3/src/lparser.c"
 var $13=$1; //@line 1244 "lib/lua-5.2.3/src/lparser.c"
 _block($13); //@line 1244 "lib/lua-5.2.3/src/lparser.c"
 var $14=$fs; //@line 1245 "lib/lua-5.2.3/src/lparser.c"
 var $15=$fs; //@line 1245 "lib/lua-5.2.3/src/lparser.c"
 var $16=_luaK_jump($15); //@line 1245 "lib/lua-5.2.3/src/lparser.c"
 var $17=$whileinit; //@line 1245 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchlist($14,$16,$17); //@line 1245 "lib/lua-5.2.3/src/lparser.c"
 var $18=$1; //@line 1246 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 1246 "lib/lua-5.2.3/src/lparser.c"
 _check_match($18,262,278,$19); //@line 1246 "lib/lua-5.2.3/src/lparser.c"
 var $20=$fs; //@line 1247 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($20); //@line 1247 "lib/lua-5.2.3/src/lparser.c"
 var $21=$fs; //@line 1248 "lib/lua-5.2.3/src/lparser.c"
 var $22=$condexit; //@line 1248 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchtohere($21,$22); //@line 1248 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1249 "lib/lua-5.2.3/src/lparser.c"
}


function _block($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $fs;
 var $bl=sp;
 $1=$ls;
 var $2=$1; //@line 1084 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+48)|0); //@line 1084 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1084 "lib/lua-5.2.3/src/lparser.c"
 $fs=$4; //@line 1084 "lib/lua-5.2.3/src/lparser.c"
 var $5=$fs; //@line 1086 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($5,$bl,0); //@line 1086 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1087 "lib/lua-5.2.3/src/lparser.c"
 _statlist($6); //@line 1087 "lib/lua-5.2.3/src/lparser.c"
 var $7=$fs; //@line 1088 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($7); //@line 1088 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1089 "lib/lua-5.2.3/src/lparser.c"
}


function _check_match($ls,$what,$who,$where){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $1=$ls;
 $2=$what;
 $3=$who;
 $4=$where;
 var $5=$1; //@line 127 "lib/lua-5.2.3/src/lparser.c"
 var $6=$2; //@line 127 "lib/lua-5.2.3/src/lparser.c"
 var $7=_testnext($5,$6); //@line 127 "lib/lua-5.2.3/src/lparser.c"
 var $8=($7|0)!=0; //@line 127 "lib/lua-5.2.3/src/lparser.c"
 if($8){label=5;break;}else{label=2;break;} //@line 127 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$4; //@line 128 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 128 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+4)|0); //@line 128 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 128 "lib/lua-5.2.3/src/lparser.c"
 var $14=($10|0)==($13|0); //@line 128 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=3;break;}else{label=4;break;} //@line 128 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $16=$1; //@line 129 "lib/lua-5.2.3/src/lparser.c"
 var $17=$2; //@line 129 "lib/lua-5.2.3/src/lparser.c"
 _error_expected($16,$17); //@line 129 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 129 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $19=$1; //@line 131 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 131 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+52)|0); //@line 131 "lib/lua-5.2.3/src/lparser.c"
 var $22=HEAP32[(($21)>>2)]; //@line 131 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $24=$2; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $25=_luaX_token2str($23,$24); //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $26=$1; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $27=$3; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $28=_luaX_token2str($26,$27); //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $29=$4; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 var $30=_luaO_pushfstring($22,10080,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$25,HEAP32[(((tempVarArgs)+(8))>>2)]=$28,HEAP32[(((tempVarArgs)+(16))>>2)]=$29,tempVarArgs)); STACKTOP=tempVarArgs; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($19,$30); //@line 133 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 133 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 STACKTOP=sp;return; //@line 136 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _forstat($ls,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $varname;
 var $bl=sp;
 $1=$ls;
 $2=$line;
 var $3=$1; //@line 1358 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1358 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1358 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1358 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 1361 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($6,$bl,1); //@line 1361 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 1362 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($7); //@line 1362 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 1363 "lib/lua-5.2.3/src/lparser.c"
 var $9=_str_checkname($8); //@line 1363 "lib/lua-5.2.3/src/lparser.c"
 $varname=$9; //@line 1363 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1364 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+16)|0); //@line 1364 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)|0); //@line 1364 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 1364 "lib/lua-5.2.3/src/lparser.c"
 if(($13|0)==61){ label=2;break;}else if(($13|0)==44|($13|0)==268){ label=3;break;}else{label=4;break;}
 case 2: 
 var $15=$1; //@line 1365 "lib/lua-5.2.3/src/lparser.c"
 var $16=$varname; //@line 1365 "lib/lua-5.2.3/src/lparser.c"
 var $17=$2; //@line 1365 "lib/lua-5.2.3/src/lparser.c"
 _fornum($15,$16,$17); //@line 1365 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 1365 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $19=$1; //@line 1366 "lib/lua-5.2.3/src/lparser.c"
 var $20=$varname; //@line 1366 "lib/lua-5.2.3/src/lparser.c"
 _forlist($19,$20); //@line 1366 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 1366 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $22=$1; //@line 1367 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($22,12560); //@line 1367 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 1367 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $24=$1; //@line 1369 "lib/lua-5.2.3/src/lparser.c"
 var $25=$2; //@line 1369 "lib/lua-5.2.3/src/lparser.c"
 _check_match($24,262,264,$25); //@line 1369 "lib/lua-5.2.3/src/lparser.c"
 var $26=$fs; //@line 1370 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($26); //@line 1370 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1371 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _repeatstat($ls,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $condexit;
 var $fs;
 var $repeat_init;
 var $bl1=sp;
 var $bl2=(sp)+(16);
 $1=$ls;
 $2=$line;
 var $3=$1; //@line 1255 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1255 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1255 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1255 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 1256 "lib/lua-5.2.3/src/lparser.c"
 var $7=_luaK_getlabel($6); //@line 1256 "lib/lua-5.2.3/src/lparser.c"
 $repeat_init=$7; //@line 1256 "lib/lua-5.2.3/src/lparser.c"
 var $8=$fs; //@line 1258 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($8,$bl1,1); //@line 1258 "lib/lua-5.2.3/src/lparser.c"
 var $9=$fs; //@line 1259 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($9,$bl2,0); //@line 1259 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1260 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($10); //@line 1260 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 1261 "lib/lua-5.2.3/src/lparser.c"
 _statlist($11); //@line 1261 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 1262 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 1262 "lib/lua-5.2.3/src/lparser.c"
 _check_match($12,277,273,$13); //@line 1262 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 1263 "lib/lua-5.2.3/src/lparser.c"
 var $15=_cond($14); //@line 1263 "lib/lua-5.2.3/src/lparser.c"
 $condexit=$15; //@line 1263 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($bl2+9)|0); //@line 1264 "lib/lua-5.2.3/src/lparser.c"
 var $17=HEAP8[($16)]; //@line 1264 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17<<24)>>24)!=0; //@line 1264 "lib/lua-5.2.3/src/lparser.c"
 if($18){label=2;break;}else{label=3;break;} //@line 1264 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $20=$fs; //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 var $21=$condexit; //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($bl2+8)|0); //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP8[($22)]; //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 var $24=($23&255); //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchclose($20,$21,$24); //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 1265 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $26=$fs; //@line 1266 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($26); //@line 1266 "lib/lua-5.2.3/src/lparser.c"
 var $27=$fs; //@line 1267 "lib/lua-5.2.3/src/lparser.c"
 var $28=$condexit; //@line 1267 "lib/lua-5.2.3/src/lparser.c"
 var $29=$repeat_init; //@line 1267 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchlist($27,$28,$29); //@line 1267 "lib/lua-5.2.3/src/lparser.c"
 var $30=$fs; //@line 1268 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($30); //@line 1268 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1269 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _funcstat($ls,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $ismethod;
 var $v=sp;
 var $b=(sp)+(24);
 $1=$ls;
 $2=$line;
 var $3=$1; //@line 1472 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($3); //@line 1472 "lib/lua-5.2.3/src/lparser.c"
 var $4=$1; //@line 1473 "lib/lua-5.2.3/src/lparser.c"
 var $5=_funcname($4,$v); //@line 1473 "lib/lua-5.2.3/src/lparser.c"
 $ismethod=$5; //@line 1473 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1474 "lib/lua-5.2.3/src/lparser.c"
 var $7=$ismethod; //@line 1474 "lib/lua-5.2.3/src/lparser.c"
 var $8=$2; //@line 1474 "lib/lua-5.2.3/src/lparser.c"
 _body($6,$b,$7,$8); //@line 1474 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1475 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+48)|0); //@line 1475 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 1475 "lib/lua-5.2.3/src/lparser.c"
 _luaK_storevar($11,$v,$b); //@line 1475 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 1476 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+48)|0); //@line 1476 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 1476 "lib/lua-5.2.3/src/lparser.c"
 var $15=$2; //@line 1476 "lib/lua-5.2.3/src/lparser.c"
 _luaK_fixline($14,$15); //@line 1476 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1477 "lib/lua-5.2.3/src/lparser.c"
}


function _testnext($ls,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$ls;
 $3=$c;
 var $4=$2; //@line 102 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+16)|0); //@line 102 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5)|0); //@line 102 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 102 "lib/lua-5.2.3/src/lparser.c"
 var $8=$3; //@line 102 "lib/lua-5.2.3/src/lparser.c"
 var $9=($7|0)==($8|0); //@line 102 "lib/lua-5.2.3/src/lparser.c"
 if($9){label=2;break;}else{label=3;break;} //@line 102 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $11=$2; //@line 103 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($11); //@line 103 "lib/lua-5.2.3/src/lparser.c"
 $1=1; //@line 104 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 104 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 $1=0; //@line 106 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 106 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $14=$1; //@line 107 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $14; //@line 107 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _localfunc($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $b=sp;
 var $fs;
 $1=$ls;
 var $2=$1; //@line 1425 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+48)|0); //@line 1425 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1425 "lib/lua-5.2.3/src/lparser.c"
 $fs=$4; //@line 1425 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 1426 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1426 "lib/lua-5.2.3/src/lparser.c"
 var $7=_str_checkname($6); //@line 1426 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($5,$7); //@line 1426 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 1427 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($8,1); //@line 1427 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1428 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1428 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+4)|0); //@line 1428 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 1428 "lib/lua-5.2.3/src/lparser.c"
 _body($9,$b,0,$12); //@line 1428 "lib/lua-5.2.3/src/lparser.c"
 var $13=$fs; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+20)|0); //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $16=$fs; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($b+8)|0); //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $18=$17; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $19=HEAP32[(($18)>>2)]; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $20=_getlocvar($16,$19); //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+4)|0); //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($21)>>2)]=$15; //@line 1430 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1431 "lib/lua-5.2.3/src/lparser.c"
}


function _localstat($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $nvars;
 var $nexps;
 var $e=sp;
 $1=$ls;
 $nvars=0; //@line 1436 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1439 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $3=$1; //@line 1440 "lib/lua-5.2.3/src/lparser.c"
 var $4=$1; //@line 1440 "lib/lua-5.2.3/src/lparser.c"
 var $5=_str_checkname($4); //@line 1440 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($3,$5); //@line 1440 "lib/lua-5.2.3/src/lparser.c"
 var $6=$nvars; //@line 1441 "lib/lua-5.2.3/src/lparser.c"
 var $7=((($6)+(1))|0); //@line 1441 "lib/lua-5.2.3/src/lparser.c"
 $nvars=$7; //@line 1441 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 1442 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $9=$1; //@line 1442 "lib/lua-5.2.3/src/lparser.c"
 var $10=_testnext($9,44); //@line 1442 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10|0)!=0; //@line 1442 "lib/lua-5.2.3/src/lparser.c"
 if($11){label=2;break;}else{label=4;break;} //@line 1442 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $13=$1; //@line 1443 "lib/lua-5.2.3/src/lparser.c"
 var $14=_testnext($13,61); //@line 1443 "lib/lua-5.2.3/src/lparser.c"
 var $15=($14|0)!=0; //@line 1443 "lib/lua-5.2.3/src/lparser.c"
 if($15){label=5;break;}else{label=6;break;} //@line 1443 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $17=$1; //@line 1444 "lib/lua-5.2.3/src/lparser.c"
 var $18=_explist($17,$e); //@line 1444 "lib/lua-5.2.3/src/lparser.c"
 $nexps=$18; //@line 1444 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 1444 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $20=(($e)|0); //@line 1446 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($20)>>2)]=0; //@line 1446 "lib/lua-5.2.3/src/lparser.c"
 $nexps=0; //@line 1447 "lib/lua-5.2.3/src/lparser.c"
 label=7;break;
 case 7: 
 var $22=$1; //@line 1449 "lib/lua-5.2.3/src/lparser.c"
 var $23=$nvars; //@line 1449 "lib/lua-5.2.3/src/lparser.c"
 var $24=$nexps; //@line 1449 "lib/lua-5.2.3/src/lparser.c"
 _adjust_assign($22,$23,$24,$e); //@line 1449 "lib/lua-5.2.3/src/lparser.c"
 var $25=$1; //@line 1450 "lib/lua-5.2.3/src/lparser.c"
 var $26=$nvars; //@line 1450 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($25,$26); //@line 1450 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1451 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _labelstat($ls,$label,$line){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $fs;
 var $ll;
 var $l;
 $1=$ls;
 $2=$label;
 $3=$line;
 var $4=$1; //@line 1217 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 1217 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1217 "lib/lua-5.2.3/src/lparser.c"
 $fs=$6; //@line 1217 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 1218 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+64)|0); //@line 1218 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 1218 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+24)|0); //@line 1218 "lib/lua-5.2.3/src/lparser.c"
 $ll=$10; //@line 1218 "lib/lua-5.2.3/src/lparser.c"
 var $11=$fs; //@line 1220 "lib/lua-5.2.3/src/lparser.c"
 var $12=$ll; //@line 1220 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 1220 "lib/lua-5.2.3/src/lparser.c"
 _checkrepeated($11,$12,$13); //@line 1220 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 1221 "lib/lua-5.2.3/src/lparser.c"
 _checknext($14,285); //@line 1221 "lib/lua-5.2.3/src/lparser.c"
 var $15=$1; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $16=$ll; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $17=$2; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $18=$3; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $19=$fs; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+20)|0); //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $22=_newlabelentry($15,$16,$17,$18,$21); //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 $l=$22; //@line 1223 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 1224 "lib/lua-5.2.3/src/lparser.c"
 _skipnoopstat($23); //@line 1224 "lib/lua-5.2.3/src/lparser.c"
 var $24=$1; //@line 1225 "lib/lua-5.2.3/src/lparser.c"
 var $25=_block_follow($24,0); //@line 1225 "lib/lua-5.2.3/src/lparser.c"
 var $26=($25|0)!=0; //@line 1225 "lib/lua-5.2.3/src/lparser.c"
 if($26){label=2;break;}else{label=3;break;} //@line 1225 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $28=$fs; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+16)|0); //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+8)|0); //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP8[($31)]; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $33=$l; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $34=$ll; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34)|0); //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $36=HEAP32[(($35)>>2)]; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36+($33<<4))|0); //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37+12)|0); //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($38)]=$32; //@line 1227 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 1228 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $40=$1; //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 var $41=$l; //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 var $42=$ll; //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42)|0); //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 var $44=HEAP32[(($43)>>2)]; //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+($41<<4))|0); //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 _findgotos($40,$45); //@line 1229 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1230 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _str_checkname($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $ts;
 $1=$ls;
 var $2=$1; //@line 141 "lib/lua-5.2.3/src/lparser.c"
 _check($2,288); //@line 141 "lib/lua-5.2.3/src/lparser.c"
 var $3=$1; //@line 142 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 142 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+8)|0); //@line 142 "lib/lua-5.2.3/src/lparser.c"
 var $6=$5; //@line 142 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 142 "lib/lua-5.2.3/src/lparser.c"
 $ts=$7; //@line 142 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 143 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($8); //@line 143 "lib/lua-5.2.3/src/lparser.c"
 var $9=$ts; //@line 144 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $9; //@line 144 "lib/lua-5.2.3/src/lparser.c"
}


function _retstat($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $fs;
 var $e=sp;
 var $first;
 var $nret;
 $1=$ls;
 var $2=$1; //@line 1498 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+48)|0); //@line 1498 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1498 "lib/lua-5.2.3/src/lparser.c"
 $fs=$4; //@line 1498 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $6=_block_follow($5,1); //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $7=($6|0)!=0; //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 if($7){label=3;break;}else{label=2;break;} //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $9=$1; //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+16)|0); //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10)|0); //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 var $13=($12|0)==59; //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 if($13){label=3;break;}else{label=4;break;} //@line 1501 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 $nret=0; //@line 1502 "lib/lua-5.2.3/src/lparser.c"
 $first=0; //@line 1502 "lib/lua-5.2.3/src/lparser.c"
 label=15;break; //@line 1502 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $16=$1; //@line 1504 "lib/lua-5.2.3/src/lparser.c"
 var $17=_explist($16,$e); //@line 1504 "lib/lua-5.2.3/src/lparser.c"
 $nret=$17; //@line 1504 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($e)|0); //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 var $19=HEAP32[(($18)>>2)]; //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 var $20=($19|0)==12; //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 if($20){label=6;break;}else{label=5;break;} //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $22=(($e)|0); //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 var $24=($23|0)==13; //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=6;break;}else{label=10;break;} //@line 1505 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $26=$fs; //@line 1506 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setreturns($26,$e,-1); //@line 1506 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($e)|0); //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 var $29=($28|0)==12; //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 if($29){label=7;break;}else{label=9;break;} //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $31=$nret; //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 var $32=($31|0)==1; //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 if($32){label=8;break;}else{label=9;break;} //@line 1507 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $34=(($e+8)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $35=$34; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $36=HEAP32[(($35)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $37=$fs; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP32[(($38)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+12)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+($36<<2))|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP32[(($42)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $44=$43&-64; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $45=$44|30; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($e+8)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $47=$46; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP32[(($47)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $49=$fs; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP32[(($50)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $52=(($51+12)|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $53=HEAP32[(($52)>>2)]; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+($48<<2))|0); //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($54)>>2)]=$45; //@line 1508 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 1510 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $56=$fs; //@line 1511 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+46)|0); //@line 1511 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP8[($57)]; //@line 1511 "lib/lua-5.2.3/src/lparser.c"
 var $59=($58&255); //@line 1511 "lib/lua-5.2.3/src/lparser.c"
 $first=$59; //@line 1511 "lib/lua-5.2.3/src/lparser.c"
 $nret=-1; //@line 1512 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 1513 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $61=$nret; //@line 1515 "lib/lua-5.2.3/src/lparser.c"
 var $62=($61|0)==1; //@line 1515 "lib/lua-5.2.3/src/lparser.c"
 if($62){label=11;break;}else{label=12;break;} //@line 1515 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $64=$fs; //@line 1516 "lib/lua-5.2.3/src/lparser.c"
 var $65=_luaK_exp2anyreg($64,$e); //@line 1516 "lib/lua-5.2.3/src/lparser.c"
 $first=$65; //@line 1516 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 1516 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $67=$fs; //@line 1518 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($67,$e); //@line 1518 "lib/lua-5.2.3/src/lparser.c"
 var $68=$fs; //@line 1519 "lib/lua-5.2.3/src/lparser.c"
 var $69=(($68+46)|0); //@line 1519 "lib/lua-5.2.3/src/lparser.c"
 var $70=HEAP8[($69)]; //@line 1519 "lib/lua-5.2.3/src/lparser.c"
 var $71=($70&255); //@line 1519 "lib/lua-5.2.3/src/lparser.c"
 $first=$71; //@line 1519 "lib/lua-5.2.3/src/lparser.c"
 label=13;break;
 case 13: 
 label=14;break;
 case 14: 
 label=15;break;
 case 15: 
 var $75=$fs; //@line 1524 "lib/lua-5.2.3/src/lparser.c"
 var $76=$first; //@line 1524 "lib/lua-5.2.3/src/lparser.c"
 var $77=$nret; //@line 1524 "lib/lua-5.2.3/src/lparser.c"
 _luaK_ret($75,$76,$77); //@line 1524 "lib/lua-5.2.3/src/lparser.c"
 var $78=$1; //@line 1525 "lib/lua-5.2.3/src/lparser.c"
 var $79=_testnext($78,59); //@line 1525 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1526 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _gotostat($ls,$pc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $line;
 var $label;
 var $g;
 $1=$ls;
 $2=$pc;
 var $3=$1; //@line 1180 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+4)|0); //@line 1180 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1180 "lib/lua-5.2.3/src/lparser.c"
 $line=$5; //@line 1180 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1183 "lib/lua-5.2.3/src/lparser.c"
 var $7=_testnext($6,266); //@line 1183 "lib/lua-5.2.3/src/lparser.c"
 var $8=($7|0)!=0; //@line 1183 "lib/lua-5.2.3/src/lparser.c"
 if($8){label=2;break;}else{label=3;break;} //@line 1183 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$1; //@line 1184 "lib/lua-5.2.3/src/lparser.c"
 var $11=_str_checkname($10); //@line 1184 "lib/lua-5.2.3/src/lparser.c"
 $label=$11; //@line 1184 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 1184 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $13=$1; //@line 1186 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($13); //@line 1186 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 1187 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+52)|0); //@line 1187 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 1187 "lib/lua-5.2.3/src/lparser.c"
 var $17=_luaS_new($16,9216); //@line 1187 "lib/lua-5.2.3/src/lparser.c"
 $label=$17; //@line 1187 "lib/lua-5.2.3/src/lparser.c"
 label=4;break;
 case 4: 
 var $19=$1; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+64)|0); //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $22=HEAP32[(($21)>>2)]; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+12)|0); //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $24=$label; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $25=$line; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $26=$2; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $27=_newlabelentry($19,$23,$24,$25,$26); //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 $g=$27; //@line 1189 "lib/lua-5.2.3/src/lparser.c"
 var $28=$1; //@line 1190 "lib/lua-5.2.3/src/lparser.c"
 var $29=$g; //@line 1190 "lib/lua-5.2.3/src/lparser.c"
 var $30=_findlabel($28,$29); //@line 1190 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1191 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _exprstat($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $fs;
 var $v=sp;
 $1=$ls;
 var $2=$1; //@line 1482 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+48)|0); //@line 1482 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1482 "lib/lua-5.2.3/src/lparser.c"
 $fs=$4; //@line 1482 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 1484 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($v+8)|0); //@line 1484 "lib/lua-5.2.3/src/lparser.c"
 _suffixedexp($5,$6); //@line 1484 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+16)|0); //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8)|0); //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10|0)==61; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 if($11){label=3;break;}else{label=2;break;} //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $13=$1; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+16)|0); //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 var $17=($16|0)==44; //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=3;break;}else{label=4;break;} //@line 1485 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $19=(($v)|0); //@line 1486 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($19)>>2)]=0; //@line 1486 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 1487 "lib/lua-5.2.3/src/lparser.c"
 _assignment($20,$v,1); //@line 1487 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 1488 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $22=(($v+8)|0); //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22)|0); //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 var $25=($24|0)==12; //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 if($25){label=6;break;}else{label=5;break;} //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $27=$1; //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($27,5112); //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 1490 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $29=(($v+8)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+8)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $31=$30; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP32[(($31)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $33=$fs; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $34=(($33)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $35=HEAP32[(($34)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+12)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP32[(($36)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37+($32<<2))|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP32[(($38)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $40=$39&-8372225; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $41=$40|16384; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($v+8)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42+8)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $44=$43; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $45=HEAP32[(($44)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $46=$fs; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $48=HEAP32[(($47)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $49=(($48+12)|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $50=HEAP32[(($49)>>2)]; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 var $51=(($50+($45<<2))|0); //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($51)>>2)]=$41; //@line 1491 "lib/lua-5.2.3/src/lparser.c"
 label=7;break;
 case 7: 
 STACKTOP=sp;return; //@line 1493 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _suffixedexp($ls,$v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $line;
 var $key=sp;
 var $key1=(sp)+(24);
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 902 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 902 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 902 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 902 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 903 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+4)|0); //@line 903 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 903 "lib/lua-5.2.3/src/lparser.c"
 $line=$8; //@line 903 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 904 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 904 "lib/lua-5.2.3/src/lparser.c"
 _primaryexp($9,$10); //@line 904 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 905 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $12=$1; //@line 906 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+16)|0); //@line 906 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 906 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 906 "lib/lua-5.2.3/src/lparser.c"
 switch(($15|0)){case 46:{ label=3;break;}case 91:{ label=4;break;}case 58:{ label=5;break;}case 40:case 289:case 123:{ label=6;break;}default:{label=7;break;}}break;
 case 3: 
 var $17=$1; //@line 908 "lib/lua-5.2.3/src/lparser.c"
 var $18=$2; //@line 908 "lib/lua-5.2.3/src/lparser.c"
 _fieldsel($17,$18); //@line 908 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 909 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $20=$fs; //@line 913 "lib/lua-5.2.3/src/lparser.c"
 var $21=$2; //@line 913 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2anyregup($20,$21); //@line 913 "lib/lua-5.2.3/src/lparser.c"
 var $22=$1; //@line 914 "lib/lua-5.2.3/src/lparser.c"
 _yindex($22,$key); //@line 914 "lib/lua-5.2.3/src/lparser.c"
 var $23=$fs; //@line 915 "lib/lua-5.2.3/src/lparser.c"
 var $24=$2; //@line 915 "lib/lua-5.2.3/src/lparser.c"
 _luaK_indexed($23,$24,$key); //@line 915 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 916 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $26=$1; //@line 920 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($26); //@line 920 "lib/lua-5.2.3/src/lparser.c"
 var $27=$1; //@line 921 "lib/lua-5.2.3/src/lparser.c"
 _checkname($27,$key1); //@line 921 "lib/lua-5.2.3/src/lparser.c"
 var $28=$fs; //@line 922 "lib/lua-5.2.3/src/lparser.c"
 var $29=$2; //@line 922 "lib/lua-5.2.3/src/lparser.c"
 _luaK_self($28,$29,$key1); //@line 922 "lib/lua-5.2.3/src/lparser.c"
 var $30=$1; //@line 923 "lib/lua-5.2.3/src/lparser.c"
 var $31=$2; //@line 923 "lib/lua-5.2.3/src/lparser.c"
 var $32=$line; //@line 923 "lib/lua-5.2.3/src/lparser.c"
 _funcargs($30,$31,$32); //@line 923 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 924 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $34=$fs; //@line 927 "lib/lua-5.2.3/src/lparser.c"
 var $35=$2; //@line 927 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($34,$35); //@line 927 "lib/lua-5.2.3/src/lparser.c"
 var $36=$1; //@line 928 "lib/lua-5.2.3/src/lparser.c"
 var $37=$2; //@line 928 "lib/lua-5.2.3/src/lparser.c"
 var $38=$line; //@line 928 "lib/lua-5.2.3/src/lparser.c"
 _funcargs($36,$37,$38); //@line 928 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 929 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 STACKTOP=sp;return; //@line 931 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 label=2;break; //@line 933 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _assignment($ls,$lh,$nvars){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $e=sp;
 var $nv=(sp)+(24);
 var $nexps;
 $1=$ls;
 $2=$lh;
 $3=$nvars;
 var $4=$2; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+8)|0); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5)|0); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $8=7<=($7>>>0); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 if($8){label=2;break;}else{label=3;break;} //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$2; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+8)|0); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)|0); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13>>>0)<=9; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=4;break;}else{label=3;break;} //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $16=$1; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($16,5112); //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 1138 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $18=$1; //@line 1139 "lib/lua-5.2.3/src/lparser.c"
 var $19=_testnext($18,44); //@line 1139 "lib/lua-5.2.3/src/lparser.c"
 var $20=($19|0)!=0; //@line 1139 "lib/lua-5.2.3/src/lparser.c"
 if($20){label=5;break;}else{label=8;break;} //@line 1139 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $22=$2; //@line 1141 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($nv)|0); //@line 1141 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($23)>>2)]=$22; //@line 1141 "lib/lua-5.2.3/src/lparser.c"
 var $24=$1; //@line 1142 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($nv+8)|0); //@line 1142 "lib/lua-5.2.3/src/lparser.c"
 _suffixedexp($24,$25); //@line 1142 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($nv+8)|0); //@line 1143 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26)|0); //@line 1143 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 1143 "lib/lua-5.2.3/src/lparser.c"
 var $29=($28|0)!=9; //@line 1143 "lib/lua-5.2.3/src/lparser.c"
 if($29){label=6;break;}else{label=7;break;} //@line 1143 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $31=$1; //@line 1144 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 1144 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($nv+8)|0); //@line 1144 "lib/lua-5.2.3/src/lparser.c"
 _check_conflict($31,$32,$33); //@line 1144 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 1144 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $35=$1; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+48)|0); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP32[(($36)>>2)]; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $38=$3; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $39=$1; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+52)|0); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $42=(($41+38)|0); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP16[(($42)>>1)]; //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $44=($43&65535); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $45=((($38)+($44))|0); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($37,$45,200,4352); //@line 1145 "lib/lua-5.2.3/src/lparser.c"
 var $46=$1; //@line 1147 "lib/lua-5.2.3/src/lparser.c"
 var $47=$3; //@line 1147 "lib/lua-5.2.3/src/lparser.c"
 var $48=((($47)+(1))|0); //@line 1147 "lib/lua-5.2.3/src/lparser.c"
 _assignment($46,$nv,$48); //@line 1147 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 1148 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $50=$1; //@line 1151 "lib/lua-5.2.3/src/lparser.c"
 _checknext($50,61); //@line 1151 "lib/lua-5.2.3/src/lparser.c"
 var $51=$1; //@line 1152 "lib/lua-5.2.3/src/lparser.c"
 var $52=_explist($51,$e); //@line 1152 "lib/lua-5.2.3/src/lparser.c"
 $nexps=$52; //@line 1152 "lib/lua-5.2.3/src/lparser.c"
 var $53=$nexps; //@line 1153 "lib/lua-5.2.3/src/lparser.c"
 var $54=$3; //@line 1153 "lib/lua-5.2.3/src/lparser.c"
 var $55=($53|0)!=($54|0); //@line 1153 "lib/lua-5.2.3/src/lparser.c"
 if($55){label=9;break;}else{label=12;break;} //@line 1153 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $57=$1; //@line 1154 "lib/lua-5.2.3/src/lparser.c"
 var $58=$3; //@line 1154 "lib/lua-5.2.3/src/lparser.c"
 var $59=$nexps; //@line 1154 "lib/lua-5.2.3/src/lparser.c"
 _adjust_assign($57,$58,$59,$e); //@line 1154 "lib/lua-5.2.3/src/lparser.c"
 var $60=$nexps; //@line 1155 "lib/lua-5.2.3/src/lparser.c"
 var $61=$3; //@line 1155 "lib/lua-5.2.3/src/lparser.c"
 var $62=($60|0)>($61|0); //@line 1155 "lib/lua-5.2.3/src/lparser.c"
 if($62){label=10;break;}else{label=11;break;} //@line 1155 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $64=$nexps; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $65=$3; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $66=((($64)-($65))|0); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $67=$1; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67+48)|0); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $69=HEAP32[(($68)>>2)]; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69+48)|0); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $71=HEAP8[($70)]; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $72=($71&255); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $73=((($72)-($66))|0); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 var $74=(($73)&255); //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($70)]=$74; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 label=11;break; //@line 1156 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 label=13;break; //@line 1157 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $77=$1; //@line 1159 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77+48)|0); //@line 1159 "lib/lua-5.2.3/src/lparser.c"
 var $79=HEAP32[(($78)>>2)]; //@line 1159 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setoneret($79,$e); //@line 1159 "lib/lua-5.2.3/src/lparser.c"
 var $80=$1; //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 var $81=(($80+48)|0); //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 var $82=HEAP32[(($81)>>2)]; //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 var $83=$2; //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 var $84=(($83+8)|0); //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 _luaK_storevar($82,$84,$e); //@line 1160 "lib/lua-5.2.3/src/lparser.c"
 label=15;break; //@line 1161 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 label=14;break;
 case 14: 
 var $87=$1; //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $88=(($87+48)|0); //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $89=HEAP32[(($88)>>2)]; //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $90=(($89+48)|0); //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $91=HEAP8[($90)]; //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $92=($91&255); //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $93=((($92)-(1))|0); //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($e,6,$93); //@line 1164 "lib/lua-5.2.3/src/lparser.c"
 var $94=$1; //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 var $95=(($94+48)|0); //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 var $96=HEAP32[(($95)>>2)]; //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 var $97=$2; //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 var $98=(($97+8)|0); //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 _luaK_storevar($96,$98,$e); //@line 1165 "lib/lua-5.2.3/src/lparser.c"
 label=15;break; //@line 1166 "lib/lua-5.2.3/src/lparser.c"
 case 15: 
 STACKTOP=sp;return; //@line 1166 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _check_conflict($ls,$lh,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $fs;
 var $extra;
 var $conflict;
 var $op;
 $1=$ls;
 $2=$lh;
 $3=$v;
 var $4=$1; //@line 1109 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 1109 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1109 "lib/lua-5.2.3/src/lparser.c"
 $fs=$6; //@line 1109 "lib/lua-5.2.3/src/lparser.c"
 var $7=$fs; //@line 1110 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+48)|0); //@line 1110 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP8[($8)]; //@line 1110 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9&255); //@line 1110 "lib/lua-5.2.3/src/lparser.c"
 $extra=$10; //@line 1110 "lib/lua-5.2.3/src/lparser.c"
 $conflict=0; //@line 1111 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $12=$2; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 var $13=($12|0)!=0; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 if($13){label=3;break;}else{label=13;break;} //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $15=$2; //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+8)|0); //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==9; //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=4;break;}else{label=11;break;} //@line 1113 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $21=$2; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+8)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+8)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $24=$23; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($24+3)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $26=HEAP8[($25)]; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $27=($26&255); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $28=$3; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $31=($27|0)==($30|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 if($31){label=5;break;}else{label=7;break;} //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $33=$2; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $34=(($33+8)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+8)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $36=$35; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36+2)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $38=HEAP8[($37)]; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $39=($38&255); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $40=$3; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40+8)|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $42=$41; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP32[(($42)>>2)]; //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 var $44=($39|0)==($43|0); //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 if($44){label=6;break;}else{label=7;break;} //@line 1115 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 $conflict=1; //@line 1116 "lib/lua-5.2.3/src/lparser.c"
 var $46=$2; //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46+8)|0); //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 var $48=(($47+8)|0); //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 var $49=$48; //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+3)|0); //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($50)]=7; //@line 1117 "lib/lua-5.2.3/src/lparser.c"
 var $51=$extra; //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $52=(($51)&255); //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $53=$2; //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+8)|0); //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+8)|0); //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $56=$55; //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+2)|0); //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($57)]=$52; //@line 1118 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 1119 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $59=$3; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59)|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $61=HEAP32[(($60)>>2)]; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $62=($61|0)==7; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 if($62){label=8;break;}else{label=10;break;} //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $64=$2; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $65=(($64+8)|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $66=(($65+8)|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $67=$66; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $68=(($67)|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $69=HEAP16[(($68)>>1)]; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $70=(($69<<16)>>16); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $71=$3; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71+8)|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $73=$72; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $74=HEAP32[(($73)>>2)]; //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 var $75=($70|0)==($74|0); //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 if($75){label=9;break;}else{label=10;break;} //@line 1121 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 $conflict=1; //@line 1122 "lib/lua-5.2.3/src/lparser.c"
 var $77=$extra; //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $78=(($77)&65535); //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $79=$2; //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $80=(($79+8)|0); //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $81=(($80+8)|0); //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $82=$81; //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 var $83=(($82)|0); //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($83)>>1)]=$78; //@line 1123 "lib/lua-5.2.3/src/lparser.c"
 label=10;break; //@line 1124 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 label=11;break; //@line 1125 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 label=12;break; //@line 1126 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $87=$2; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 var $88=(($87)|0); //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 var $89=HEAP32[(($88)>>2)]; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 $2=$89; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1112 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 var $91=$conflict; //@line 1127 "lib/lua-5.2.3/src/lparser.c"
 var $92=($91|0)!=0; //@line 1127 "lib/lua-5.2.3/src/lparser.c"
 if($92){label=14;break;}else{label=15;break;} //@line 1127 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 var $94=$3; //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 var $95=(($94)|0); //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 var $96=HEAP32[(($95)>>2)]; //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 var $97=($96|0)==7; //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 var $98=($97?0:5); //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 $op=$98; //@line 1129 "lib/lua-5.2.3/src/lparser.c"
 var $99=$fs; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $100=$op; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $101=$extra; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $102=$3; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $103=(($102+8)|0); //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $104=$103; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $105=HEAP32[(($104)>>2)]; //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $106=_luaK_codeABC($99,$100,$101,$105,0); //@line 1130 "lib/lua-5.2.3/src/lparser.c"
 var $107=$fs; //@line 1131 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($107,1); //@line 1131 "lib/lua-5.2.3/src/lparser.c"
 label=15;break; //@line 1132 "lib/lua-5.2.3/src/lparser.c"
 case 15: 
 STACKTOP=sp;return; //@line 1133 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checklimit($fs,$v,$l,$what){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $1=$fs;
 $2=$v;
 $3=$l;
 $4=$what;
 var $5=$2; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 var $6=$3; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 var $7=($5|0)>($6|0); //@line 97 "lib/lua-5.2.3/src/lparser.c"
 if($7){label=2;break;}else{label=3;break;} //@line 97 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $9=$1; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 var $10=$3; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 var $11=$4; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 _errorlimit($9,$10,$11); //@line 97 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 97 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 STACKTOP=sp;return; //@line 98 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checknext($ls,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$c;
 var $3=$1; //@line 117 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 117 "lib/lua-5.2.3/src/lparser.c"
 _check($3,$4); //@line 117 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 118 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($5); //@line 118 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 119 "lib/lua-5.2.3/src/lparser.c"
}


function _explist($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $n;
 $1=$ls;
 $2=$v;
 $n=1; //@line 812 "lib/lua-5.2.3/src/lparser.c"
 var $3=$1; //@line 813 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 813 "lib/lua-5.2.3/src/lparser.c"
 _expr($3,$4); //@line 813 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 814 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $6=$1; //@line 814 "lib/lua-5.2.3/src/lparser.c"
 var $7=_testnext($6,44); //@line 814 "lib/lua-5.2.3/src/lparser.c"
 var $8=($7|0)!=0; //@line 814 "lib/lua-5.2.3/src/lparser.c"
 if($8){label=3;break;}else{label=4;break;} //@line 814 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $10=$1; //@line 815 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+48)|0); //@line 815 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 815 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 815 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($12,$13); //@line 815 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 816 "lib/lua-5.2.3/src/lparser.c"
 var $15=$2; //@line 816 "lib/lua-5.2.3/src/lparser.c"
 _expr($14,$15); //@line 816 "lib/lua-5.2.3/src/lparser.c"
 var $16=$n; //@line 817 "lib/lua-5.2.3/src/lparser.c"
 var $17=((($16)+(1))|0); //@line 817 "lib/lua-5.2.3/src/lparser.c"
 $n=$17; //@line 817 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 818 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $19=$n; //@line 819 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $19; //@line 819 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _adjust_assign($ls,$nvars,$nexps,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $fs;
 var $extra;
 var $reg;
 $1=$ls;
 $2=$nvars;
 $3=$nexps;
 $4=$e;
 var $5=$1; //@line 311 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+48)|0); //@line 311 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 311 "lib/lua-5.2.3/src/lparser.c"
 $fs=$7; //@line 311 "lib/lua-5.2.3/src/lparser.c"
 var $8=$2; //@line 312 "lib/lua-5.2.3/src/lparser.c"
 var $9=$3; //@line 312 "lib/lua-5.2.3/src/lparser.c"
 var $10=((($8)-($9))|0); //@line 312 "lib/lua-5.2.3/src/lparser.c"
 $extra=$10; //@line 312 "lib/lua-5.2.3/src/lparser.c"
 var $11=$4; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)|0); //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13|0)==12; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=3;break;}else{label=2;break;} //@line 313 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $16=$4; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==13; //@line 313 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=3;break;}else{label=8;break;} //@line 313 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $21=$extra; //@line 314 "lib/lua-5.2.3/src/lparser.c"
 var $22=((($21)+(1))|0); //@line 314 "lib/lua-5.2.3/src/lparser.c"
 $extra=$22; //@line 314 "lib/lua-5.2.3/src/lparser.c"
 var $23=$extra; //@line 315 "lib/lua-5.2.3/src/lparser.c"
 var $24=($23|0)<0; //@line 315 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=4;break;}else{label=5;break;} //@line 315 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 $extra=0; //@line 315 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 315 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $27=$fs; //@line 316 "lib/lua-5.2.3/src/lparser.c"
 var $28=$4; //@line 316 "lib/lua-5.2.3/src/lparser.c"
 var $29=$extra; //@line 316 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setreturns($27,$28,$29); //@line 316 "lib/lua-5.2.3/src/lparser.c"
 var $30=$extra; //@line 317 "lib/lua-5.2.3/src/lparser.c"
 var $31=($30|0)>1; //@line 317 "lib/lua-5.2.3/src/lparser.c"
 if($31){label=6;break;}else{label=7;break;} //@line 317 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $33=$fs; //@line 317 "lib/lua-5.2.3/src/lparser.c"
 var $34=$extra; //@line 317 "lib/lua-5.2.3/src/lparser.c"
 var $35=((($34)-(1))|0); //@line 317 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($33,$35); //@line 317 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 317 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 label=13;break; //@line 318 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $38=$4; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 var $39=(($38)|0); //@line 320 "lib/lua-5.2.3/src/lparser.c"
 var $40=HEAP32[(($39)>>2)]; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 var $41=($40|0)!=0; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 if($41){label=9;break;}else{label=10;break;} //@line 320 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $43=$fs; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 var $44=$4; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($43,$44); //@line 320 "lib/lua-5.2.3/src/lparser.c"
 label=10;break; //@line 320 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $46=$extra; //@line 321 "lib/lua-5.2.3/src/lparser.c"
 var $47=($46|0)>0; //@line 321 "lib/lua-5.2.3/src/lparser.c"
 if($47){label=11;break;}else{label=12;break;} //@line 321 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $49=$fs; //@line 322 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+48)|0); //@line 322 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP8[($50)]; //@line 322 "lib/lua-5.2.3/src/lparser.c"
 var $52=($51&255); //@line 322 "lib/lua-5.2.3/src/lparser.c"
 $reg=$52; //@line 322 "lib/lua-5.2.3/src/lparser.c"
 var $53=$fs; //@line 323 "lib/lua-5.2.3/src/lparser.c"
 var $54=$extra; //@line 323 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($53,$54); //@line 323 "lib/lua-5.2.3/src/lparser.c"
 var $55=$fs; //@line 324 "lib/lua-5.2.3/src/lparser.c"
 var $56=$reg; //@line 324 "lib/lua-5.2.3/src/lparser.c"
 var $57=$extra; //@line 324 "lib/lua-5.2.3/src/lparser.c"
 _luaK_nil($55,$56,$57); //@line 324 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 325 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 label=13;break;
 case 13: 
 STACKTOP=sp;return; //@line 327 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _expr($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 1068 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 1068 "lib/lua-5.2.3/src/lparser.c"
 var $5=_subexpr($3,$4,0); //@line 1068 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1069 "lib/lua-5.2.3/src/lparser.c"
}


function _subexpr($ls,$v,$limit){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $op;
 var $uop;
 var $line;
 var $v2=sp;
 var $nextop;
 var $line1;
 $1=$ls;
 $2=$v;
 $3=$limit;
 var $4=$1; //@line 1040 "lib/lua-5.2.3/src/lparser.c"
 _enterlevel($4); //@line 1040 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+16)|0); //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6)|0); //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 var $9=_getunopr($8); //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 $uop=$9; //@line 1041 "lib/lua-5.2.3/src/lparser.c"
 var $10=$uop; //@line 1042 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10|0)!=3; //@line 1042 "lib/lua-5.2.3/src/lparser.c"
 if($11){label=2;break;}else{label=3;break;} //@line 1042 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $13=$1; //@line 1043 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+4)|0); //@line 1043 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 1043 "lib/lua-5.2.3/src/lparser.c"
 $line=$15; //@line 1043 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 1044 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($16); //@line 1044 "lib/lua-5.2.3/src/lparser.c"
 var $17=$1; //@line 1045 "lib/lua-5.2.3/src/lparser.c"
 var $18=$2; //@line 1045 "lib/lua-5.2.3/src/lparser.c"
 var $19=_subexpr($17,$18,8); //@line 1045 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+48)|0); //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 var $22=HEAP32[(($21)>>2)]; //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 var $23=$uop; //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 var $24=$2; //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 var $25=$line; //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 _luaK_prefix($22,$23,$24,$25); //@line 1046 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 1047 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $27=$1; //@line 1048 "lib/lua-5.2.3/src/lparser.c"
 var $28=$2; //@line 1048 "lib/lua-5.2.3/src/lparser.c"
 _simpleexp($27,$28); //@line 1048 "lib/lua-5.2.3/src/lparser.c"
 label=4;break;
 case 4: 
 var $30=$1; //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+16)|0); //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31)|0); //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 var $34=_getbinopr($33); //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 $op=$34; //@line 1050 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $36=$op; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $37=($36|0)!=15; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 if($37){label=6;break;}else{var $47=0;label=7;break;} //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $39=$op; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $40=((408+($39<<1))|0); //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40)|0); //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $42=HEAP8[($41)]; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $43=($42&255); //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $44=$3; //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $45=($43|0)>($44|0); //@line 1051 "lib/lua-5.2.3/src/lparser.c"
 var $47=$45;label=7;break;
 case 7: 
 var $47;
 if($47){label=8;break;}else{label=9;break;}
 case 8: 
 var $49=$1; //@line 1054 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+4)|0); //@line 1054 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP32[(($50)>>2)]; //@line 1054 "lib/lua-5.2.3/src/lparser.c"
 $line1=$51; //@line 1054 "lib/lua-5.2.3/src/lparser.c"
 var $52=$1; //@line 1055 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($52); //@line 1055 "lib/lua-5.2.3/src/lparser.c"
 var $53=$1; //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+48)|0); //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 var $55=HEAP32[(($54)>>2)]; //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 var $56=$op; //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 var $57=$2; //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 _luaK_infix($55,$56,$57); //@line 1056 "lib/lua-5.2.3/src/lparser.c"
 var $58=$1; //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $59=$op; //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $60=((408+($59<<1))|0); //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60+1)|0); //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $62=HEAP8[($61)]; //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $63=($62&255); //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $64=_subexpr($58,$v2,$63); //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 $nextop=$64; //@line 1058 "lib/lua-5.2.3/src/lparser.c"
 var $65=$1; //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $66=(($65+48)|0); //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $67=HEAP32[(($66)>>2)]; //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $68=$op; //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $69=$2; //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $70=$line1; //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 _luaK_posfix($67,$68,$69,$v2,$70); //@line 1059 "lib/lua-5.2.3/src/lparser.c"
 var $71=$nextop; //@line 1060 "lib/lua-5.2.3/src/lparser.c"
 $op=$71; //@line 1060 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 1061 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $73=$1; //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $74=(($73+52)|0); //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $75=HEAP32[(($74)>>2)]; //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $76=(($75+38)|0); //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $77=HEAP16[(($76)>>1)]; //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $78=((($77)-(1))&65535); //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($76)>>1)]=$78; //@line 1062 "lib/lua-5.2.3/src/lparser.c"
 var $79=$op; //@line 1063 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $79; //@line 1063 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getunopr($op){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$op;
 var $3=$2; //@line 988 "lib/lua-5.2.3/src/lparser.c"
 if(($3|0)==271){ label=2;break;}else if(($3|0)==45){ label=3;break;}else if(($3|0)==35){ label=4;break;}else{label=5;break;}
 case 2: 
 $1=1; //@line 989 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 989 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 $1=0; //@line 990 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 990 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 $1=2; //@line 991 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 991 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 $1=3; //@line 992 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 992 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $9=$1; //@line 994 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $9; //@line 994 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _simpleexp($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 940 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 940 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 940 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 940 "lib/lua-5.2.3/src/lparser.c"
 switch(($6|0)){case 123:{ label=10;break;}case 265:{ label=11;break;}case 287:{ label=2;break;}case 289:{ label=3;break;}case 270:{ label=4;break;}case 276:{ label=5;break;}case 263:{ label=6;break;}case 280:{ label=7;break;}default:{label=12;break;}}break;
 case 2: 
 var $8=$2; //@line 942 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($8,5,0); //@line 942 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+16)|0); //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+8)|0); //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $12=$11; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAPF64[(($12)>>3)]; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $14=$2; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+8)|0); //@line 943 "lib/lua-5.2.3/src/lparser.c"
 var $16=$15; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 HEAPF64[(($16)>>3)]=$13; //@line 943 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 944 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $18=$1; //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $21=(($20+16)|0); //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+8)|0); //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $23=$22; //@line 947 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 947 "lib/lua-5.2.3/src/lparser.c"
 _codestring($18,$19,$24); //@line 947 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 948 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $26=$2; //@line 951 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($26,1,0); //@line 951 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 952 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $28=$2; //@line 955 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($28,2,0); //@line 955 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 956 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $30=$2; //@line 959 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($30,3,0); //@line 959 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 960 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $32=$1; //@line 963 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+48)|0); //@line 963 "lib/lua-5.2.3/src/lparser.c"
 var $34=HEAP32[(($33)>>2)]; //@line 963 "lib/lua-5.2.3/src/lparser.c"
 $fs=$34; //@line 963 "lib/lua-5.2.3/src/lparser.c"
 var $35=$fs; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35)|0); //@line 964 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP32[(($36)>>2)]; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37+77)|0); //@line 964 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP8[($38)]; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39<<24)>>24)!=0; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 if($40){label=9;break;}else{label=8;break;} //@line 964 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $42=$1; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($42,3512); //@line 964 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 964 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $44=$2; //@line 966 "lib/lua-5.2.3/src/lparser.c"
 var $45=$fs; //@line 966 "lib/lua-5.2.3/src/lparser.c"
 var $46=_luaK_codeABC($45,38,0,1,0); //@line 966 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($44,13,$46); //@line 966 "lib/lua-5.2.3/src/lparser.c"
 label=13;break; //@line 967 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $48=$1; //@line 970 "lib/lua-5.2.3/src/lparser.c"
 var $49=$2; //@line 970 "lib/lua-5.2.3/src/lparser.c"
 _constructor($48,$49); //@line 970 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 971 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $51=$1; //@line 974 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($51); //@line 974 "lib/lua-5.2.3/src/lparser.c"
 var $52=$1; //@line 975 "lib/lua-5.2.3/src/lparser.c"
 var $53=$2; //@line 975 "lib/lua-5.2.3/src/lparser.c"
 var $54=$1; //@line 975 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+4)|0); //@line 975 "lib/lua-5.2.3/src/lparser.c"
 var $56=HEAP32[(($55)>>2)]; //@line 975 "lib/lua-5.2.3/src/lparser.c"
 _body($52,$53,0,$56); //@line 975 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 976 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $58=$1; //@line 979 "lib/lua-5.2.3/src/lparser.c"
 var $59=$2; //@line 979 "lib/lua-5.2.3/src/lparser.c"
 _suffixedexp($58,$59); //@line 979 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 980 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 var $61=$1; //@line 983 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($61); //@line 983 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 984 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 STACKTOP=sp;return; //@line 984 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getbinopr($op){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$op;
 var $3=$2; //@line 998 "lib/lua-5.2.3/src/lparser.c"
 switch(($3|0)){case 281:{ label=10;break;}case 60:{ label=11;break;}case 283:{ label=12;break;}case 62:{ label=13;break;}case 282:{ label=14;break;}case 257:{ label=15;break;}case 272:{ label=16;break;}case 43:{ label=2;break;}case 45:{ label=3;break;}case 42:{ label=4;break;}case 47:{ label=5;break;}case 37:{ label=6;break;}case 94:{ label=7;break;}case 279:{ label=8;break;}case 284:{ label=9;break;}default:{label=17;break;}}break;
 case 2: 
 $1=0; //@line 999 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 999 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 $1=1; //@line 1000 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1000 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 $1=2; //@line 1001 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1001 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 $1=3; //@line 1002 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1002 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 $1=4; //@line 1003 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1003 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 $1=5; //@line 1004 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1004 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 $1=6; //@line 1005 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1005 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 $1=10; //@line 1006 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1006 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 $1=7; //@line 1007 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1007 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 $1=8; //@line 1008 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1008 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 $1=9; //@line 1009 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1009 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 $1=11; //@line 1010 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1010 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 $1=12; //@line 1011 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1011 "lib/lua-5.2.3/src/lparser.c"
 case 15: 
 $1=13; //@line 1012 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1012 "lib/lua-5.2.3/src/lparser.c"
 case 16: 
 $1=14; //@line 1013 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1013 "lib/lua-5.2.3/src/lparser.c"
 case 17: 
 $1=15; //@line 1014 "lib/lua-5.2.3/src/lparser.c"
 label=18;break; //@line 1014 "lib/lua-5.2.3/src/lparser.c"
 case 18: 
 var $21=$1; //@line 1016 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $21; //@line 1016 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codestring($ls,$e,$s){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$ls;
 $2=$e;
 $3=$s;
 var $4=$2; //@line 156 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 156 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+48)|0); //@line 156 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 156 "lib/lua-5.2.3/src/lparser.c"
 var $8=$3; //@line 156 "lib/lua-5.2.3/src/lparser.c"
 var $9=_luaK_stringK($7,$8); //@line 156 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($4,4,$9); //@line 156 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 157 "lib/lua-5.2.3/src/lparser.c"
}


function _constructor($ls,$t){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $line;
 var $pc;
 var $cc=sp;
 $1=$ls;
 $2=$t;
 var $3=$1; //@line 733 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 733 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 733 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 733 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 734 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+4)|0); //@line 734 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 734 "lib/lua-5.2.3/src/lparser.c"
 $line=$8; //@line 734 "lib/lua-5.2.3/src/lparser.c"
 var $9=$fs; //@line 735 "lib/lua-5.2.3/src/lparser.c"
 var $10=_luaK_codeABC($9,11,0,0,0); //@line 735 "lib/lua-5.2.3/src/lparser.c"
 $pc=$10; //@line 735 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($cc+36)|0); //@line 737 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($11)>>2)]=0; //@line 737 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($cc+28)|0); //@line 737 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($12)>>2)]=0; //@line 737 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($cc+32)|0); //@line 737 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($13)>>2)]=0; //@line 737 "lib/lua-5.2.3/src/lparser.c"
 var $14=$2; //@line 738 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($cc+24)|0); //@line 738 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($15)>>2)]=$14; //@line 738 "lib/lua-5.2.3/src/lparser.c"
 var $16=$2; //@line 739 "lib/lua-5.2.3/src/lparser.c"
 var $17=$pc; //@line 739 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($16,11,$17); //@line 739 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($cc)|0); //@line 740 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($18,0,0); //@line 740 "lib/lua-5.2.3/src/lparser.c"
 var $19=$1; //@line 741 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+48)|0); //@line 741 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 741 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 741 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($21,$22); //@line 741 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 742 "lib/lua-5.2.3/src/lparser.c"
 _checknext($23,123); //@line 742 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 743 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $25=$1; //@line 745 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+16)|0); //@line 745 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26)|0); //@line 745 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 745 "lib/lua-5.2.3/src/lparser.c"
 var $29=($28|0)==125; //@line 745 "lib/lua-5.2.3/src/lparser.c"
 if($29){label=3;break;}else{label=4;break;} //@line 745 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 label=8;break; //@line 745 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $32=$fs; //@line 746 "lib/lua-5.2.3/src/lparser.c"
 _closelistfield($32,$cc); //@line 746 "lib/lua-5.2.3/src/lparser.c"
 var $33=$1; //@line 747 "lib/lua-5.2.3/src/lparser.c"
 _field($33,$cc); //@line 747 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $35=$1; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 var $36=_testnext($35,44); //@line 748 "lib/lua-5.2.3/src/lparser.c"
 var $37=($36|0)!=0; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 if($37){var $43=1;label=7;break;}else{label=6;break;} //@line 748 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $39=$1; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 var $40=_testnext($39,59); //@line 748 "lib/lua-5.2.3/src/lparser.c"
 var $41=($40|0)!=0; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 var $43=$41;label=7;break; //@line 748 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $43;
 if($43){label=2;break;}else{label=8;break;} //@line 748 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $45=$1; //@line 749 "lib/lua-5.2.3/src/lparser.c"
 var $46=$line; //@line 749 "lib/lua-5.2.3/src/lparser.c"
 _check_match($45,125,123,$46); //@line 749 "lib/lua-5.2.3/src/lparser.c"
 var $47=$fs; //@line 750 "lib/lua-5.2.3/src/lparser.c"
 _lastlistfield($47,$cc); //@line 750 "lib/lua-5.2.3/src/lparser.c"
 var $48=$pc; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $49=$fs; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49)|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP32[(($50)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $52=(($51+12)|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $53=HEAP32[(($52)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53+($48<<2))|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $55=HEAP32[(($54)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $56=$55&8388607; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($cc+32)|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP32[(($57)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $59=_luaO_int2fb($58); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $60=$59<<23; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $61=$60&-8388608; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $62=$56|$61; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $63=$pc; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $64=$fs; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $65=(($64)|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $66=HEAP32[(($65)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $67=(($66+12)|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $68=HEAP32[(($67)>>2)]; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $69=(($68+($63<<2))|0); //@line 751 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($69)>>2)]=$62; //@line 751 "lib/lua-5.2.3/src/lparser.c"
 var $70=$pc; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $71=$fs; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $72=(($71)|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $73=HEAP32[(($72)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $74=(($73+12)|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $75=HEAP32[(($74)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $76=(($75+($70<<2))|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $77=HEAP32[(($76)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $78=$77&-8372225; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $79=(($cc+28)|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $80=HEAP32[(($79)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $81=_luaO_int2fb($80); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $82=$81<<14; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $83=$82&8372224; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $84=$78|$83; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $85=$pc; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $86=$fs; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $87=(($86)|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $88=HEAP32[(($87)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $89=(($88+12)|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $90=HEAP32[(($89)>>2)]; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 var $91=(($90+($85<<2))|0); //@line 752 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($91)>>2)]=$84; //@line 752 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 753 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _body($ls,$e,$ismethod,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $new_fs=sp;
 var $bl=(sp)+(56);
 $1=$ls;
 $2=$e;
 $3=$ismethod;
 $4=$line;
 var $5=$1; //@line 792 "lib/lua-5.2.3/src/lparser.c"
 var $6=_addprototype($5); //@line 792 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($new_fs)|0); //@line 792 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($7)>>2)]=$6; //@line 792 "lib/lua-5.2.3/src/lparser.c"
 var $8=$4; //@line 793 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($new_fs)|0); //@line 793 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 793 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+64)|0); //@line 793 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($11)>>2)]=$8; //@line 793 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 794 "lib/lua-5.2.3/src/lparser.c"
 _open_func($12,$new_fs,$bl); //@line 794 "lib/lua-5.2.3/src/lparser.c"
 var $13=$1; //@line 795 "lib/lua-5.2.3/src/lparser.c"
 _checknext($13,40); //@line 795 "lib/lua-5.2.3/src/lparser.c"
 var $14=$3; //@line 796 "lib/lua-5.2.3/src/lparser.c"
 var $15=($14|0)!=0; //@line 796 "lib/lua-5.2.3/src/lparser.c"
 if($15){label=2;break;}else{label=3;break;} //@line 796 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $17=$1; //@line 797 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($17,2840,4); //@line 797 "lib/lua-5.2.3/src/lparser.c"
 var $18=$1; //@line 798 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($18,1); //@line 798 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 799 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $20=$1; //@line 800 "lib/lua-5.2.3/src/lparser.c"
 _parlist($20); //@line 800 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 801 "lib/lua-5.2.3/src/lparser.c"
 _checknext($21,41); //@line 801 "lib/lua-5.2.3/src/lparser.c"
 var $22=$1; //@line 802 "lib/lua-5.2.3/src/lparser.c"
 _statlist($22); //@line 802 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+4)|0); //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($new_fs)|0); //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27+68)|0); //@line 803 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($28)>>2)]=$25; //@line 803 "lib/lua-5.2.3/src/lparser.c"
 var $29=$1; //@line 804 "lib/lua-5.2.3/src/lparser.c"
 var $30=$4; //@line 804 "lib/lua-5.2.3/src/lparser.c"
 _check_match($29,262,265,$30); //@line 804 "lib/lua-5.2.3/src/lparser.c"
 var $31=$1; //@line 805 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 805 "lib/lua-5.2.3/src/lparser.c"
 _codeclosure($31,$32); //@line 805 "lib/lua-5.2.3/src/lparser.c"
 var $33=$1; //@line 806 "lib/lua-5.2.3/src/lparser.c"
 _close_func($33); //@line 806 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 807 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _addprototype($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $clp;
 var $L;
 var $fs;
 var $f;
 var $oldsize;
 $1=$ls;
 var $2=$1; //@line 500 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+52)|0); //@line 500 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 500 "lib/lua-5.2.3/src/lparser.c"
 $L=$4; //@line 500 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 501 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+48)|0); //@line 501 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 501 "lib/lua-5.2.3/src/lparser.c"
 $fs=$7; //@line 501 "lib/lua-5.2.3/src/lparser.c"
 var $8=$fs; //@line 502 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8)|0); //@line 502 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 502 "lib/lua-5.2.3/src/lparser.c"
 $f=$10; //@line 502 "lib/lua-5.2.3/src/lparser.c"
 var $11=$fs; //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+36)|0); //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $14=$f; //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+56)|0); //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 503 "lib/lua-5.2.3/src/lparser.c"
 var $17=($13|0)>=($16|0); //@line 503 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=2;break;}else{label=8;break;} //@line 503 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $19=$f; //@line 504 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+56)|0); //@line 504 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 504 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$21; //@line 504 "lib/lua-5.2.3/src/lparser.c"
 var $22=$fs; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+36)|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $25=((($24)+(1))|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $26=$f; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+56)|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $29=($25|0)>($28|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 if($29){label=3;break;}else{label=4;break;} //@line 505 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $31=$L; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $32=$f; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+16)|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $34=HEAP32[(($33)>>2)]; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $35=$34; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $36=$f; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36+56)|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $38=_luaM_growaux_($31,$35,$37,4,262143,15280); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $39=$38; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $40=$f; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40+16)|0); //@line 505 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($41)>>2)]=$39; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 505 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 label=5;break; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $44=$oldsize; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $45=$f; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($45+56)|0); //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $47=HEAP32[(($46)>>2)]; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $48=($44|0)<($47|0); //@line 506 "lib/lua-5.2.3/src/lparser.c"
 if($48){label=6;break;}else{label=7;break;} //@line 506 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $50=$oldsize; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $51=((($50)+(1))|0); //@line 506 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$51; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $52=$f; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+16)|0); //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $54=HEAP32[(($53)>>2)]; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+($50<<2))|0); //@line 506 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($55)>>2)]=0; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 506 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 label=8;break; //@line 507 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $58=$L; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $59=_luaF_newproto($58); //@line 508 "lib/lua-5.2.3/src/lparser.c"
 $clp=$59; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $60=$fs; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $61=(($60+36)|0); //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $62=HEAP32[(($61)>>2)]; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $63=((($62)+(1))|0); //@line 508 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($61)>>2)]=$63; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $64=$f; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $65=(($64+16)|0); //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $66=HEAP32[(($65)>>2)]; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $67=(($66+($62<<2))|0); //@line 508 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($67)>>2)]=$59; //@line 508 "lib/lua-5.2.3/src/lparser.c"
 var $68=$clp; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $69=$68; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $70=$69; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $71=(($70+5)|0); //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $72=HEAP8[($71)]; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $73=($72&255); //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $74=$73&3; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $75=($74|0)!=0; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 if($75){label=9;break;}else{label=11;break;} //@line 509 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $77=$f; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $78=$77; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $79=$78; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $80=(($79+5)|0); //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $81=HEAP8[($80)]; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $82=($81&255); //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $83=$82&4; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $84=($83|0)!=0; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 if($84){label=10;break;}else{label=11;break;} //@line 509 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $86=$L; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $87=$f; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $88=$87; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $89=$clp; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 var $90=$89; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 _luaC_barrier_($86,$88,$90); //@line 509 "lib/lua-5.2.3/src/lparser.c"
 label=11;break; //@line 509 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $92=$clp; //@line 510 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $92; //@line 510 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _new_localvarliteral_($ls,$name,$sz){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$ls;
 $2=$name;
 $3=$sz;
 var $4=$1; //@line 191 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 191 "lib/lua-5.2.3/src/lparser.c"
 var $6=$2; //@line 191 "lib/lua-5.2.3/src/lparser.c"
 var $7=$3; //@line 191 "lib/lua-5.2.3/src/lparser.c"
 var $8=_luaX_newstring($5,$6,$7); //@line 191 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($4,$8); //@line 191 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 192 "lib/lua-5.2.3/src/lparser.c"
}


function _adjustlocalvars($ls,$nvars){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 $1=$ls;
 $2=$nvars;
 var $3=$1; //@line 206 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 206 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 206 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 206 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+46)|0); //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP8[($7)]; //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $9=($8&255); //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $11=((($9)+($10))|0); //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)&255); //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $13=$fs; //@line 207 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+46)|0); //@line 207 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($14)]=$12; //@line 207 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $16=$2; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 var $17=($16|0)!=0; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=3;break;}else{label=5;break;} //@line 208 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $19=$fs; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+20)|0); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $22=$fs; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $23=$fs; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+46)|0); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP8[($24)]; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $26=($25&255); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $27=$2; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $28=((($26)-($27))|0); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $29=_getlocvar($22,$28); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+4)|0); //@line 209 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($30)>>2)]=$21; //@line 209 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 210 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $32=$2; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 var $33=((($32)-(1))|0); //@line 208 "lib/lua-5.2.3/src/lparser.c"
 $2=$33; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 208 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 STACKTOP=sp;return; //@line 211 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _parlist($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $fs;
 var $f;
 var $nparams;
 $1=$ls;
 var $2=$1; //@line 761 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($2+48)|0); //@line 761 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 761 "lib/lua-5.2.3/src/lparser.c"
 $fs=$4; //@line 761 "lib/lua-5.2.3/src/lparser.c"
 var $5=$fs; //@line 762 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5)|0); //@line 762 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 762 "lib/lua-5.2.3/src/lparser.c"
 $f=$7; //@line 762 "lib/lua-5.2.3/src/lparser.c"
 $nparams=0; //@line 763 "lib/lua-5.2.3/src/lparser.c"
 var $8=$f; //@line 764 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+77)|0); //@line 764 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($9)]=0; //@line 764 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 765 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+16)|0); //@line 765 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)|0); //@line 765 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 765 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13|0)!=41; //@line 765 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=2;break;}else{label=12;break;} //@line 765 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 label=3;break; //@line 766 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $17=$1; //@line 767 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17+16)|0); //@line 767 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18)|0); //@line 767 "lib/lua-5.2.3/src/lparser.c"
 var $20=HEAP32[(($19)>>2)]; //@line 767 "lib/lua-5.2.3/src/lparser.c"
 if(($20|0)==288){ label=4;break;}else if(($20|0)==280){ label=5;break;}else{label=6;break;}
 case 4: 
 var $22=$1; //@line 769 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 769 "lib/lua-5.2.3/src/lparser.c"
 var $24=_str_checkname($23); //@line 769 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($22,$24); //@line 769 "lib/lua-5.2.3/src/lparser.c"
 var $25=$nparams; //@line 770 "lib/lua-5.2.3/src/lparser.c"
 var $26=((($25)+(1))|0); //@line 770 "lib/lua-5.2.3/src/lparser.c"
 $nparams=$26; //@line 770 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 771 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $28=$1; //@line 774 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($28); //@line 774 "lib/lua-5.2.3/src/lparser.c"
 var $29=$f; //@line 775 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+77)|0); //@line 775 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($30)]=1; //@line 775 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 776 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $32=$1; //@line 778 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($32,16352); //@line 778 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 778 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 label=8;break; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $35=$f; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+77)|0); //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP8[($36)]; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37<<24)>>24)!=0; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 if($38){var $44=0;label=10;break;}else{label=9;break;} //@line 780 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $40=$1; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $41=_testnext($40,44); //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $42=($41|0)!=0; //@line 780 "lib/lua-5.2.3/src/lparser.c"
 var $44=$42;label=10;break;
 case 10: 
 var $44;
 if($44){label=3;break;}else{label=11;break;}
 case 11: 
 label=12;break; //@line 781 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $47=$1; //@line 782 "lib/lua-5.2.3/src/lparser.c"
 var $48=$nparams; //@line 782 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($47,$48); //@line 782 "lib/lua-5.2.3/src/lparser.c"
 var $49=$fs; //@line 783 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49+46)|0); //@line 783 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP8[($50)]; //@line 783 "lib/lua-5.2.3/src/lparser.c"
 var $52=$f; //@line 783 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+76)|0); //@line 783 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($53)]=$51; //@line 783 "lib/lua-5.2.3/src/lparser.c"
 var $54=$fs; //@line 784 "lib/lua-5.2.3/src/lparser.c"
 var $55=$fs; //@line 784 "lib/lua-5.2.3/src/lparser.c"
 var $56=(($55+46)|0); //@line 784 "lib/lua-5.2.3/src/lparser.c"
 var $57=HEAP8[($56)]; //@line 784 "lib/lua-5.2.3/src/lparser.c"
 var $58=($57&255); //@line 784 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($54,$58); //@line 784 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 785 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codeclosure($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $fs;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 521 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 521 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 521 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+8)|0); //@line 521 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 521 "lib/lua-5.2.3/src/lparser.c"
 $fs=$7; //@line 521 "lib/lua-5.2.3/src/lparser.c"
 var $8=$2; //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $9=$fs; //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $10=$fs; //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+36)|0); //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $13=((($12)-(1))|0); //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $14=_luaK_codeABx($9,37,0,$13); //@line 522 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($8,11,$14); //@line 522 "lib/lua-5.2.3/src/lparser.c"
 var $15=$fs; //@line 523 "lib/lua-5.2.3/src/lparser.c"
 var $16=$2; //@line 523 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($15,$16); //@line 523 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 524 "lib/lua-5.2.3/src/lparser.c"
}


function _new_localvar($ls,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $dyd;
 var $reg;
 $1=$ls;
 $2=$name;
 var $3=$1; //@line 179 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 179 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 179 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 179 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 180 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+64)|0); //@line 180 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 180 "lib/lua-5.2.3/src/lparser.c"
 $dyd=$8; //@line 180 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 181 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 181 "lib/lua-5.2.3/src/lparser.c"
 var $11=_registerlocalvar($9,$10); //@line 181 "lib/lua-5.2.3/src/lparser.c"
 $reg=$11; //@line 181 "lib/lua-5.2.3/src/lparser.c"
 var $12=$fs; //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $13=$dyd; //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+4)|0); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $17=((($16)+(1))|0); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $18=$fs; //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18+40)|0); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $20=HEAP32[(($19)>>2)]; //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $21=((($17)-($20))|0); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($12,$21,200,15792); //@line 182 "lib/lua-5.2.3/src/lparser.c"
 var $22=$dyd; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+4)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $26=((($25)+(1))|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $27=((($26)+(1))|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $28=$dyd; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+8)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $31=HEAP32[(($30)>>2)]; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $32=($27|0)>($31|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 if($32){label=2;break;}else{label=3;break;} //@line 184 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $34=$1; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+52)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $36=HEAP32[(($35)>>2)]; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $37=$dyd; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $39=(($38)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $40=HEAP32[(($39)>>2)]; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $41=$40; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $42=$dyd; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $44=(($43+8)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $45=_luaM_growaux_($36,$41,$44,2,2147483645,15792); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $46=$45; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $47=$dyd; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $48=(($47)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 var $49=(($48)|0); //@line 184 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($49)>>2)]=$46; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 184 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $51=$reg; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $52=(($51)&65535); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $53=$dyd; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $54=(($53)|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+4)|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $56=HEAP32[(($55)>>2)]; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $57=((($56)+(1))|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($55)>>2)]=$57; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $58=$dyd; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58)|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59)|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $61=HEAP32[(($60)>>2)]; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $62=(($61+($56<<1))|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 var $63=(($62)|0); //@line 186 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($63)>>1)]=$52; //@line 186 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 187 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _registerlocalvar($ls,$varname){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $f;
 var $oldsize;
 $1=$ls;
 $2=$varname;
 var $3=$1; //@line 166 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 166 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 166 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 166 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 167 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6)|0); //@line 167 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 167 "lib/lua-5.2.3/src/lparser.c"
 $f=$8; //@line 167 "lib/lua-5.2.3/src/lparser.c"
 var $9=$f; //@line 168 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+60)|0); //@line 168 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 168 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$11; //@line 168 "lib/lua-5.2.3/src/lparser.c"
 var $12=$fs; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+44)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP16[(($13)>>1)]; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14<<16)>>16); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $16=((($15)+(1))|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $17=$f; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17+60)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $19=HEAP32[(($18)>>2)]; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $20=($16|0)>($19|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 if($20){label=2;break;}else{label=3;break;} //@line 169 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $22=$1; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+52)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $25=$f; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+24)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $28=$27; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $29=$f; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $30=(($29+60)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $31=_luaM_growaux_($24,$28,$30,12,32767,15792); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $32=$31; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $33=$f; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 var $34=(($33+24)|0); //@line 169 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($34)>>2)]=$32; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 169 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 label=4;break; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $37=$oldsize; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $38=$f; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $39=(($38+60)|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $40=HEAP32[(($39)>>2)]; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $41=($37|0)<($40|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 if($41){label=5;break;}else{label=6;break;} //@line 171 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $43=$oldsize; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $44=((($43)+(1))|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 $oldsize=$44; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $45=$f; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($45+24)|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $47=HEAP32[(($46)>>2)]; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $48=(($47+((($43)*(12))&-1))|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 var $49=(($48)|0); //@line 171 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($49)>>2)]=0; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 171 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $51=$2; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $52=$fs; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+44)|0); //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $54=HEAP16[(($53)>>1)]; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54<<16)>>16); //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $56=$f; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+24)|0); //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP32[(($57)>>2)]; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $59=(($58+((($55)*(12))&-1))|0); //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59)|0); //@line 172 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($60)>>2)]=$51; //@line 172 "lib/lua-5.2.3/src/lparser.c"
 var $61=$2; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $62=$61; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $63=$62; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $64=(($63+5)|0); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $65=HEAP8[($64)]; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $66=($65&255); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $67=$66&3; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $68=($67|0)!=0; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 if($68){label=7;break;}else{label=9;break;} //@line 173 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $70=$f; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $71=$70; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $72=$71; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $73=(($72+5)|0); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $74=HEAP8[($73)]; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $75=($74&255); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $76=$75&4; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $77=($76|0)!=0; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 if($77){label=8;break;}else{label=9;break;} //@line 173 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $79=$1; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $80=(($79+52)|0); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $81=HEAP32[(($80)>>2)]; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $82=$f; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $83=$82; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $84=$2; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 var $85=$84; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 _luaC_barrier_($81,$83,$85); //@line 173 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 173 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $87=$fs; //@line 174 "lib/lua-5.2.3/src/lparser.c"
 var $88=(($87+44)|0); //@line 174 "lib/lua-5.2.3/src/lparser.c"
 var $89=HEAP16[(($88)>>1)]; //@line 174 "lib/lua-5.2.3/src/lparser.c"
 var $90=((($89)+(1))&65535); //@line 174 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($88)>>1)]=$90; //@line 174 "lib/lua-5.2.3/src/lparser.c"
 var $91=(($89<<16)>>16); //@line 174 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $91; //@line 174 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _closelistfield($fs,$cc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$cc;
 var $3=$2; //@line 674 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3)|0); //@line 674 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 674 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 674 "lib/lua-5.2.3/src/lparser.c"
 var $7=($6|0)==0; //@line 674 "lib/lua-5.2.3/src/lparser.c"
 if($7){label=2;break;}else{label=3;break;} //@line 674 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 label=5;break; //@line 674 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $10=$1; //@line 675 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 675 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11)|0); //@line 675 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($10,$12); //@line 675 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 676 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 676 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 676 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($15)>>2)]=0; //@line 676 "lib/lua-5.2.3/src/lparser.c"
 var $16=$2; //@line 677 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+36)|0); //@line 677 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 677 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==50; //@line 677 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=4;break;}else{label=5;break;} //@line 677 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $21=$1; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22+24)|0); //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $25=(($24+8)|0); //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $26=$25; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $28=$2; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+32)|0); //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $31=$2; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+36)|0); //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 678 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setlist($21,$27,$30,$33); //@line 678 "lib/lua-5.2.3/src/lparser.c"
 var $34=$2; //@line 679 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+36)|0); //@line 679 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($35)>>2)]=0; //@line 679 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 680 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 STACKTOP=sp;return; //@line 681 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _field($ls,$cc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$ls;
 $2=$cc;
 var $3=$1; //@line 710 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 710 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 710 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 710 "lib/lua-5.2.3/src/lparser.c"
 if(($6|0)==288){ label=2;break;}else if(($6|0)==91){ label=6;break;}else{label=7;break;}
 case 2: 
 var $8=$1; //@line 712 "lib/lua-5.2.3/src/lparser.c"
 var $9=_luaX_lookahead($8); //@line 712 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9|0)!=61; //@line 712 "lib/lua-5.2.3/src/lparser.c"
 if($10){label=3;break;}else{label=4;break;} //@line 712 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $12=$1; //@line 713 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 713 "lib/lua-5.2.3/src/lparser.c"
 _listfield($12,$13); //@line 713 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 713 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $15=$1; //@line 715 "lib/lua-5.2.3/src/lparser.c"
 var $16=$2; //@line 715 "lib/lua-5.2.3/src/lparser.c"
 _recfield($15,$16); //@line 715 "lib/lua-5.2.3/src/lparser.c"
 label=5;break;
 case 5: 
 label=8;break; //@line 716 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $19=$1; //@line 719 "lib/lua-5.2.3/src/lparser.c"
 var $20=$2; //@line 719 "lib/lua-5.2.3/src/lparser.c"
 _recfield($19,$20); //@line 719 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 720 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $22=$1; //@line 723 "lib/lua-5.2.3/src/lparser.c"
 var $23=$2; //@line 723 "lib/lua-5.2.3/src/lparser.c"
 _listfield($22,$23); //@line 723 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 724 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 STACKTOP=sp;return; //@line 727 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lastlistfield($fs,$cc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$cc;
 var $3=$2; //@line 685 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+36)|0); //@line 685 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 685 "lib/lua-5.2.3/src/lparser.c"
 var $6=($5|0)==0; //@line 685 "lib/lua-5.2.3/src/lparser.c"
 if($6){label=2;break;}else{label=3;break;} //@line 685 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 label=9;break; //@line 685 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $9=$2; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10)|0); //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $13=($12|0)==12; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 if($13){label=5;break;}else{label=4;break;} //@line 686 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $15=$2; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15)|0); //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==13; //@line 686 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=5;break;}else{label=6;break;} //@line 686 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $21=$1; //@line 687 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 687 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22)|0); //@line 687 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setreturns($21,$23,-1); //@line 687 "lib/lua-5.2.3/src/lparser.c"
 var $24=$1; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $25=$2; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+24)|0); //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27+8)|0); //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $29=$28; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $31=$2; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+32)|0); //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 688 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setlist($24,$30,$33,-1); //@line 688 "lib/lua-5.2.3/src/lparser.c"
 var $34=$2; //@line 689 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+32)|0); //@line 689 "lib/lua-5.2.3/src/lparser.c"
 var $36=HEAP32[(($35)>>2)]; //@line 689 "lib/lua-5.2.3/src/lparser.c"
 var $37=((($36)-(1))|0); //@line 689 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($35)>>2)]=$37; //@line 689 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 690 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $39=$2; //@line 692 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39)|0); //@line 692 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40)|0); //@line 692 "lib/lua-5.2.3/src/lparser.c"
 var $42=HEAP32[(($41)>>2)]; //@line 692 "lib/lua-5.2.3/src/lparser.c"
 var $43=($42|0)!=0; //@line 692 "lib/lua-5.2.3/src/lparser.c"
 if($43){label=7;break;}else{label=8;break;} //@line 692 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $45=$1; //@line 693 "lib/lua-5.2.3/src/lparser.c"
 var $46=$2; //@line 693 "lib/lua-5.2.3/src/lparser.c"
 var $47=(($46)|0); //@line 693 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($45,$47); //@line 693 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 693 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $49=$1; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $50=$2; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $51=(($50+24)|0); //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $52=HEAP32[(($51)>>2)]; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $53=(($52+8)|0); //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $54=$53; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $55=HEAP32[(($54)>>2)]; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $56=$2; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $57=(($56+32)|0); //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $58=HEAP32[(($57)>>2)]; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $59=$2; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59+36)|0); //@line 694 "lib/lua-5.2.3/src/lparser.c"
 var $61=HEAP32[(($60)>>2)]; //@line 694 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setlist($49,$55,$58,$61); //@line 694 "lib/lua-5.2.3/src/lparser.c"
 label=9;break;
 case 9: 
 STACKTOP=sp;return; //@line 696 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _listfield($ls,$cc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$cc;
 var $3=$1; //@line 701 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 701 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 701 "lib/lua-5.2.3/src/lparser.c"
 _expr($3,$5); //@line 701 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+48)|0); //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $9=$2; //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+32)|0); //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 702 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($8,$11,2147483645,14712); //@line 702 "lib/lua-5.2.3/src/lparser.c"
 var $12=$2; //@line 703 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+32)|0); //@line 703 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 703 "lib/lua-5.2.3/src/lparser.c"
 var $15=((($14)+(1))|0); //@line 703 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($13)>>2)]=$15; //@line 703 "lib/lua-5.2.3/src/lparser.c"
 var $16=$2; //@line 704 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+36)|0); //@line 704 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 704 "lib/lua-5.2.3/src/lparser.c"
 var $19=((($18)+(1))|0); //@line 704 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($17)>>2)]=$19; //@line 704 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 705 "lib/lua-5.2.3/src/lparser.c"
}


function _recfield($ls,$cc){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $reg;
 var $key=sp;
 var $val=(sp)+(24);
 var $rkkey;
 $1=$ls;
 $2=$cc;
 var $3=$1; //@line 654 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 654 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 654 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 654 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+48)|0); //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+48)|0); //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP8[($9)]; //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10&255); //@line 655 "lib/lua-5.2.3/src/lparser.c"
 $reg=$11; //@line 655 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 658 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+16)|0); //@line 658 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13)|0); //@line 658 "lib/lua-5.2.3/src/lparser.c"
 var $15=HEAP32[(($14)>>2)]; //@line 658 "lib/lua-5.2.3/src/lparser.c"
 var $16=($15|0)==288; //@line 658 "lib/lua-5.2.3/src/lparser.c"
 if($16){label=2;break;}else{label=3;break;} //@line 658 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $18=$fs; //@line 659 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 659 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19+28)|0); //@line 659 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 659 "lib/lua-5.2.3/src/lparser.c"
 _checklimit($18,$21,2147483645,14712); //@line 659 "lib/lua-5.2.3/src/lparser.c"
 var $22=$1; //@line 660 "lib/lua-5.2.3/src/lparser.c"
 _checkname($22,$key); //@line 660 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 661 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $24=$1; //@line 663 "lib/lua-5.2.3/src/lparser.c"
 _yindex($24,$key); //@line 663 "lib/lua-5.2.3/src/lparser.c"
 label=4;break;
 case 4: 
 var $26=$2; //@line 664 "lib/lua-5.2.3/src/lparser.c"
 var $27=(($26+28)|0); //@line 664 "lib/lua-5.2.3/src/lparser.c"
 var $28=HEAP32[(($27)>>2)]; //@line 664 "lib/lua-5.2.3/src/lparser.c"
 var $29=((($28)+(1))|0); //@line 664 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($27)>>2)]=$29; //@line 664 "lib/lua-5.2.3/src/lparser.c"
 var $30=$1; //@line 665 "lib/lua-5.2.3/src/lparser.c"
 _checknext($30,61); //@line 665 "lib/lua-5.2.3/src/lparser.c"
 var $31=$fs; //@line 666 "lib/lua-5.2.3/src/lparser.c"
 var $32=_luaK_exp2RK($31,$key); //@line 666 "lib/lua-5.2.3/src/lparser.c"
 $rkkey=$32; //@line 666 "lib/lua-5.2.3/src/lparser.c"
 var $33=$1; //@line 667 "lib/lua-5.2.3/src/lparser.c"
 _expr($33,$val); //@line 667 "lib/lua-5.2.3/src/lparser.c"
 var $34=$fs; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $35=$2; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $36=(($35+24)|0); //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $37=HEAP32[(($36)>>2)]; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37+8)|0); //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $39=$38; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $40=HEAP32[(($39)>>2)]; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $41=$rkkey; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $42=$fs; //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $43=_luaK_exp2RK($42,$val); //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $44=_luaK_codeABC($34,10,$40,$41,$43); //@line 668 "lib/lua-5.2.3/src/lparser.c"
 var $45=$reg; //@line 669 "lib/lua-5.2.3/src/lparser.c"
 var $46=(($45)&255); //@line 669 "lib/lua-5.2.3/src/lparser.c"
 var $47=$fs; //@line 669 "lib/lua-5.2.3/src/lparser.c"
 var $48=(($47+48)|0); //@line 669 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($48)]=$46; //@line 669 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 670 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checkname($ls,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$e;
 var $3=$1; //@line 161 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 161 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 161 "lib/lua-5.2.3/src/lparser.c"
 var $6=_str_checkname($5); //@line 161 "lib/lua-5.2.3/src/lparser.c"
 _codestring($3,$4,$6); //@line 161 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 162 "lib/lua-5.2.3/src/lparser.c"
}


function _yindex($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 629 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($3); //@line 629 "lib/lua-5.2.3/src/lparser.c"
 var $4=$1; //@line 630 "lib/lua-5.2.3/src/lparser.c"
 var $5=$2; //@line 630 "lib/lua-5.2.3/src/lparser.c"
 _expr($4,$5); //@line 630 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 631 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+48)|0); //@line 631 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 631 "lib/lua-5.2.3/src/lparser.c"
 var $9=$2; //@line 631 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2val($8,$9); //@line 631 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 632 "lib/lua-5.2.3/src/lparser.c"
 _checknext($10,93); //@line 632 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 633 "lib/lua-5.2.3/src/lparser.c"
}


function _errorlimit($fs,$limit,$what){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $L;
 var $msg;
 var $line;
 var $where;
 $1=$fs;
 $2=$limit;
 $3=$what;
 var $4=$1; //@line 84 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+12)|0); //@line 84 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 84 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+52)|0); //@line 84 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 84 "lib/lua-5.2.3/src/lparser.c"
 $L=$8; //@line 84 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 86 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9)|0); //@line 86 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 86 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+64)|0); //@line 86 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 86 "lib/lua-5.2.3/src/lparser.c"
 $line=$13; //@line 86 "lib/lua-5.2.3/src/lparser.c"
 var $14=$line; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 var $15=($14|0)==0; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 if($15){label=2;break;}else{label=3;break;} //@line 89 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $22=14272;label=4;break; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $18=$L; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 var $19=$line; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 var $20=_luaO_pushfstring($18,13960,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$19,tempVarArgs)); STACKTOP=tempVarArgs; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 var $22=$20;label=4;break; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $22; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 $where=$22; //@line 89 "lib/lua-5.2.3/src/lparser.c"
 var $23=$L; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 var $24=$3; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 var $25=$2; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 var $26=$where; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 var $27=_luaO_pushfstring($23,13696,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$24,HEAP32[(((tempVarArgs)+(8))>>2)]=$25,HEAP32[(((tempVarArgs)+(16))>>2)]=$26,tempVarArgs)); STACKTOP=tempVarArgs; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 $msg=$27; //@line 90 "lib/lua-5.2.3/src/lparser.c"
 var $28=$1; //@line 92 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+12)|0); //@line 92 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 92 "lib/lua-5.2.3/src/lparser.c"
 var $31=$msg; //@line 92 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($30,$31); //@line 92 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 92 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 93 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _primaryexp($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $line;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 879 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 879 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 879 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 879 "lib/lua-5.2.3/src/lparser.c"
 if(($6|0)==40){ label=2;break;}else if(($6|0)==288){ label=3;break;}else{label=4;break;}
 case 2: 
 var $8=$1; //@line 881 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8+4)|0); //@line 881 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 881 "lib/lua-5.2.3/src/lparser.c"
 $line=$10; //@line 881 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 882 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($11); //@line 882 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 883 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 883 "lib/lua-5.2.3/src/lparser.c"
 _expr($12,$13); //@line 883 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 884 "lib/lua-5.2.3/src/lparser.c"
 var $15=$line; //@line 884 "lib/lua-5.2.3/src/lparser.c"
 _check_match($14,41,40,$15); //@line 884 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 885 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+48)|0); //@line 885 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 885 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 885 "lib/lua-5.2.3/src/lparser.c"
 _luaK_dischargevars($18,$19); //@line 885 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 886 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $21=$1; //@line 889 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 889 "lib/lua-5.2.3/src/lparser.c"
 _singlevar($21,$22); //@line 889 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 890 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $24=$1; //@line 893 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($24,13120); //@line 893 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 893 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 STACKTOP=sp;return; //@line 896 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _fieldsel($ls,$v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $fs;
 var $key=sp;
 $1=$ls;
 $2=$v;
 var $3=$1; //@line 618 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 618 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 618 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 618 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 620 "lib/lua-5.2.3/src/lparser.c"
 var $7=$2; //@line 620 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2anyregup($6,$7); //@line 620 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 621 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($8); //@line 621 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 622 "lib/lua-5.2.3/src/lparser.c"
 _checkname($9,$key); //@line 622 "lib/lua-5.2.3/src/lparser.c"
 var $10=$fs; //@line 623 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 623 "lib/lua-5.2.3/src/lparser.c"
 _luaK_indexed($10,$11,$key); //@line 623 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 624 "lib/lua-5.2.3/src/lparser.c"
}


function _funcargs($ls,$f,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $fs;
 var $args=sp;
 var $base;
 var $nparams;
 $1=$ls;
 $2=$f;
 $3=$line;
 var $4=$1; //@line 824 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 824 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 824 "lib/lua-5.2.3/src/lparser.c"
 $fs=$6; //@line 824 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 827 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+16)|0); //@line 827 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8)|0); //@line 827 "lib/lua-5.2.3/src/lparser.c"
 var $10=HEAP32[(($9)>>2)]; //@line 827 "lib/lua-5.2.3/src/lparser.c"
 if(($10|0)==40){ label=2;break;}else if(($10|0)==123){ label=6;break;}else if(($10|0)==289){ label=7;break;}else{label=8;break;}
 case 2: 
 var $12=$1; //@line 829 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($12); //@line 829 "lib/lua-5.2.3/src/lparser.c"
 var $13=$1; //@line 830 "lib/lua-5.2.3/src/lparser.c"
 var $14=(($13+16)|0); //@line 830 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 830 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 830 "lib/lua-5.2.3/src/lparser.c"
 var $17=($16|0)==41; //@line 830 "lib/lua-5.2.3/src/lparser.c"
 if($17){label=3;break;}else{label=4;break;} //@line 830 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $19=(($args)|0); //@line 831 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($19)>>2)]=0; //@line 831 "lib/lua-5.2.3/src/lparser.c"
 label=5;break; //@line 831 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $21=$1; //@line 833 "lib/lua-5.2.3/src/lparser.c"
 var $22=_explist($21,$args); //@line 833 "lib/lua-5.2.3/src/lparser.c"
 var $23=$fs; //@line 834 "lib/lua-5.2.3/src/lparser.c"
 _luaK_setreturns($23,$args,-1); //@line 834 "lib/lua-5.2.3/src/lparser.c"
 label=5;break;
 case 5: 
 var $25=$1; //@line 836 "lib/lua-5.2.3/src/lparser.c"
 var $26=$3; //@line 836 "lib/lua-5.2.3/src/lparser.c"
 _check_match($25,41,40,$26); //@line 836 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 837 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $28=$1; //@line 840 "lib/lua-5.2.3/src/lparser.c"
 _constructor($28,$args); //@line 840 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 841 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $30=$1; //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $31=$1; //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+16)|0); //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+8)|0); //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $34=$33; //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $35=HEAP32[(($34)>>2)]; //@line 844 "lib/lua-5.2.3/src/lparser.c"
 _codestring($30,$args,$35); //@line 844 "lib/lua-5.2.3/src/lparser.c"
 var $36=$1; //@line 845 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($36); //@line 845 "lib/lua-5.2.3/src/lparser.c"
 label=9;break; //@line 846 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $38=$1; //@line 849 "lib/lua-5.2.3/src/lparser.c"
 _luaX_syntaxerror($38,13392); //@line 849 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 849 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $40=$2; //@line 853 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40+8)|0); //@line 853 "lib/lua-5.2.3/src/lparser.c"
 var $42=$41; //@line 853 "lib/lua-5.2.3/src/lparser.c"
 var $43=HEAP32[(($42)>>2)]; //@line 853 "lib/lua-5.2.3/src/lparser.c"
 $base=$43; //@line 853 "lib/lua-5.2.3/src/lparser.c"
 var $44=(($args)|0); //@line 854 "lib/lua-5.2.3/src/lparser.c"
 var $45=HEAP32[(($44)>>2)]; //@line 854 "lib/lua-5.2.3/src/lparser.c"
 var $46=($45|0)==12; //@line 854 "lib/lua-5.2.3/src/lparser.c"
 if($46){label=11;break;}else{label=10;break;} //@line 854 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $48=(($args)|0); //@line 854 "lib/lua-5.2.3/src/lparser.c"
 var $49=HEAP32[(($48)>>2)]; //@line 854 "lib/lua-5.2.3/src/lparser.c"
 var $50=($49|0)==13; //@line 854 "lib/lua-5.2.3/src/lparser.c"
 if($50){label=11;break;}else{label=12;break;} //@line 854 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 $nparams=-1; //@line 855 "lib/lua-5.2.3/src/lparser.c"
 label=15;break; //@line 855 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $53=(($args)|0); //@line 857 "lib/lua-5.2.3/src/lparser.c"
 var $54=HEAP32[(($53)>>2)]; //@line 857 "lib/lua-5.2.3/src/lparser.c"
 var $55=($54|0)!=0; //@line 857 "lib/lua-5.2.3/src/lparser.c"
 if($55){label=13;break;}else{label=14;break;} //@line 857 "lib/lua-5.2.3/src/lparser.c"
 case 13: 
 var $57=$fs; //@line 858 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($57,$args); //@line 858 "lib/lua-5.2.3/src/lparser.c"
 label=14;break; //@line 858 "lib/lua-5.2.3/src/lparser.c"
 case 14: 
 var $59=$fs; //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $60=(($59+48)|0); //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $61=HEAP8[($60)]; //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $62=($61&255); //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $63=$base; //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $64=((($63)+(1))|0); //@line 859 "lib/lua-5.2.3/src/lparser.c"
 var $65=((($62)-($64))|0); //@line 859 "lib/lua-5.2.3/src/lparser.c"
 $nparams=$65; //@line 859 "lib/lua-5.2.3/src/lparser.c"
 label=15;break;
 case 15: 
 var $67=$2; //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $68=$fs; //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $69=$base; //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $70=$nparams; //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $71=((($70)+(1))|0); //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $72=_luaK_codeABC($68,29,$69,$71,2); //@line 861 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($67,12,$72); //@line 861 "lib/lua-5.2.3/src/lparser.c"
 var $73=$fs; //@line 862 "lib/lua-5.2.3/src/lparser.c"
 var $74=$3; //@line 862 "lib/lua-5.2.3/src/lparser.c"
 _luaK_fixline($73,$74); //@line 862 "lib/lua-5.2.3/src/lparser.c"
 var $75=$base; //@line 863 "lib/lua-5.2.3/src/lparser.c"
 var $76=((($75)+(1))|0); //@line 863 "lib/lua-5.2.3/src/lparser.c"
 var $77=(($76)&255); //@line 863 "lib/lua-5.2.3/src/lparser.c"
 var $78=$fs; //@line 863 "lib/lua-5.2.3/src/lparser.c"
 var $79=(($78+48)|0); //@line 863 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($79)]=$77; //@line 863 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 865 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _singlevar($ls,$var){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $varname;
 var $fs;
 var $key=sp;
 $1=$ls;
 $2=$var;
 var $3=$1; //@line 298 "lib/lua-5.2.3/src/lparser.c"
 var $4=_str_checkname($3); //@line 298 "lib/lua-5.2.3/src/lparser.c"
 $varname=$4; //@line 298 "lib/lua-5.2.3/src/lparser.c"
 var $5=$1; //@line 299 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+48)|0); //@line 299 "lib/lua-5.2.3/src/lparser.c"
 var $7=HEAP32[(($6)>>2)]; //@line 299 "lib/lua-5.2.3/src/lparser.c"
 $fs=$7; //@line 299 "lib/lua-5.2.3/src/lparser.c"
 var $8=$fs; //@line 300 "lib/lua-5.2.3/src/lparser.c"
 var $9=$varname; //@line 300 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 300 "lib/lua-5.2.3/src/lparser.c"
 var $11=_singlevaraux($8,$9,$10,1); //@line 300 "lib/lua-5.2.3/src/lparser.c"
 var $12=($11|0)==0; //@line 300 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=2;break;}else{label=3;break;} //@line 300 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $14=$fs; //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $15=$1; //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+72)|0); //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $17=HEAP32[(($16)>>2)]; //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $18=$2; //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $19=_singlevaraux($14,$17,$18,1); //@line 302 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 304 "lib/lua-5.2.3/src/lparser.c"
 var $21=$varname; //@line 304 "lib/lua-5.2.3/src/lparser.c"
 _codestring($20,$key,$21); //@line 304 "lib/lua-5.2.3/src/lparser.c"
 var $22=$fs; //@line 305 "lib/lua-5.2.3/src/lparser.c"
 var $23=$2; //@line 305 "lib/lua-5.2.3/src/lparser.c"
 _luaK_indexed($22,$23,$key); //@line 305 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 306 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 STACKTOP=sp;return; //@line 307 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _singlevaraux($fs,$n,$var,$base){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $v;
 var $idx;
 $2=$fs;
 $3=$n;
 $4=$var;
 $5=$base;
 var $6=$2; //@line 272 "lib/lua-5.2.3/src/lparser.c"
 var $7=($6|0)==0; //@line 272 "lib/lua-5.2.3/src/lparser.c"
 if($7){label=2;break;}else{label=3;break;} //@line 272 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 $1=0; //@line 273 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 273 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $10=$2; //@line 275 "lib/lua-5.2.3/src/lparser.c"
 var $11=$3; //@line 275 "lib/lua-5.2.3/src/lparser.c"
 var $12=_searchvar($10,$11); //@line 275 "lib/lua-5.2.3/src/lparser.c"
 $v=$12; //@line 275 "lib/lua-5.2.3/src/lparser.c"
 var $13=$v; //@line 276 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13|0)>=0; //@line 276 "lib/lua-5.2.3/src/lparser.c"
 if($14){label=4;break;}else{label=7;break;} //@line 276 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $16=$4; //@line 277 "lib/lua-5.2.3/src/lparser.c"
 var $17=$v; //@line 277 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($16,7,$17); //@line 277 "lib/lua-5.2.3/src/lparser.c"
 var $18=$5; //@line 278 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)!=0; //@line 278 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=6;break;}else{label=5;break;} //@line 278 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $21=$2; //@line 279 "lib/lua-5.2.3/src/lparser.c"
 var $22=$v; //@line 279 "lib/lua-5.2.3/src/lparser.c"
 _markupval($21,$22); //@line 279 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 279 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 $1=7; //@line 280 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 280 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $25=$2; //@line 283 "lib/lua-5.2.3/src/lparser.c"
 var $26=$3; //@line 283 "lib/lua-5.2.3/src/lparser.c"
 var $27=_searchupvalue($25,$26); //@line 283 "lib/lua-5.2.3/src/lparser.c"
 $idx=$27; //@line 283 "lib/lua-5.2.3/src/lparser.c"
 var $28=$idx; //@line 284 "lib/lua-5.2.3/src/lparser.c"
 var $29=($28|0)<0; //@line 284 "lib/lua-5.2.3/src/lparser.c"
 if($29){label=8;break;}else{label=11;break;} //@line 284 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $31=$2; //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $32=(($31+8)|0); //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $33=HEAP32[(($32)>>2)]; //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $34=$3; //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $35=$4; //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $36=_singlevaraux($33,$34,$35,0); //@line 285 "lib/lua-5.2.3/src/lparser.c"
 var $37=($36|0)==0; //@line 285 "lib/lua-5.2.3/src/lparser.c"
 if($37){label=9;break;}else{label=10;break;} //@line 285 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 $1=0; //@line 286 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 286 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $40=$2; //@line 288 "lib/lua-5.2.3/src/lparser.c"
 var $41=$3; //@line 288 "lib/lua-5.2.3/src/lparser.c"
 var $42=$4; //@line 288 "lib/lua-5.2.3/src/lparser.c"
 var $43=_newupvalue($40,$41,$42); //@line 288 "lib/lua-5.2.3/src/lparser.c"
 $idx=$43; //@line 288 "lib/lua-5.2.3/src/lparser.c"
 label=11;break; //@line 289 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $45=$4; //@line 290 "lib/lua-5.2.3/src/lparser.c"
 var $46=$idx; //@line 290 "lib/lua-5.2.3/src/lparser.c"
 _init_exp($45,8,$46); //@line 290 "lib/lua-5.2.3/src/lparser.c"
 $1=8; //@line 291 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 291 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 var $48=$1; //@line 294 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $48; //@line 294 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _searchvar($fs,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 $2=$fs;
 $3=$n;
 var $4=$2; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+46)|0); //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP8[($5)]; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $7=($6&255); //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $8=((($7)-(1))|0); //@line 248 "lib/lua-5.2.3/src/lparser.c"
 $i=$8; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$i; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $11=($10|0)>=0; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 if($11){label=3;break;}else{label=7;break;} //@line 248 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $13=$3; //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $14=$2; //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $15=$i; //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $16=_getlocvar($14,$15); //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $19=_luaS_eqstr($13,$18); //@line 249 "lib/lua-5.2.3/src/lparser.c"
 var $20=($19|0)!=0; //@line 249 "lib/lua-5.2.3/src/lparser.c"
 if($20){label=4;break;}else{label=5;break;} //@line 249 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $22=$i; //@line 250 "lib/lua-5.2.3/src/lparser.c"
 $1=$22; //@line 250 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 250 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 label=6;break; //@line 251 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $25=$i; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 var $26=((($25)-(1))|0); //@line 248 "lib/lua-5.2.3/src/lparser.c"
 $i=$26; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 248 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 $1=-1; //@line 252 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 252 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $29=$1; //@line 253 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $29; //@line 253 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _markupval($fs,$level){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $bl;
 $1=$fs;
 $2=$level;
 var $3=$1; //@line 261 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 261 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 261 "lib/lua-5.2.3/src/lparser.c"
 $bl=$5; //@line 261 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $7=$bl; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+8)|0); //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP8[($8)]; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9&255); //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $12=($10|0)>($11|0); //@line 262 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=3;break;}else{label=4;break;} //@line 262 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $14=$bl; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14)|0); //@line 262 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 $bl=$16; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 262 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $18=$bl; //@line 263 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18+9)|0); //@line 263 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($19)]=1; //@line 263 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 264 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _searchupvalue($fs,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $up;
 $2=$fs;
 $3=$name;
 var $4=$2; //@line 223 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 223 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 223 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+28)|0); //@line 223 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 223 "lib/lua-5.2.3/src/lparser.c"
 $up=$8; //@line 223 "lib/lua-5.2.3/src/lparser.c"
 $i=0; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $10=$i; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $11=$2; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($11+47)|0); //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP8[($12)]; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $14=($13&255); //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $15=($10|0)<($14|0); //@line 224 "lib/lua-5.2.3/src/lparser.c"
 if($15){label=3;break;}else{label=7;break;} //@line 224 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $17=$i; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $18=$up; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $19=(($18+($17<<3))|0); //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19)|0); //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $22=$3; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $23=_luaS_eqstr($21,$22); //@line 225 "lib/lua-5.2.3/src/lparser.c"
 var $24=($23|0)!=0; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=4;break;}else{label=5;break;} //@line 225 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $26=$i; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 $1=$26; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 225 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 label=6;break; //@line 226 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $29=$i; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 var $30=((($29)+(1))|0); //@line 224 "lib/lua-5.2.3/src/lparser.c"
 $i=$30; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 224 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 $1=-1; //@line 227 "lib/lua-5.2.3/src/lparser.c"
 label=8;break; //@line 227 "lib/lua-5.2.3/src/lparser.c"
 case 8: 
 var $33=$1; //@line 228 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $33; //@line 228 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checkrepeated($fs,$ll,$label){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $msg;
 $1=$fs;
 $2=$ll;
 $3=$label;
 var $4=$1; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+16)|0); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+4)|0); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP16[(($7)>>1)]; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $9=(($8<<16)>>16); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 $i=$9; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $11=$i; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $12=$2; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+4)|0); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $15=($11|0)<($14|0); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 if($15){label=3;break;}else{label=7;break;} //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $17=$3; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $18=$i; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $19=$2; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19)|0); //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $21=HEAP32[(($20)>>2)]; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+($18<<4))|0); //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $23=(($22)|0); //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $24=HEAP32[(($23)>>2)]; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $25=_luaS_eqstr($17,$24); //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 var $26=($25|0)!=0; //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 if($26){label=4;break;}else{label=5;break;} //@line 1198 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $28=$1; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+12)|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+52)|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP32[(($31)>>2)]; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $33=$3; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $34=(($33+16)|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $35=$34; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $36=$i; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $37=$2; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $38=(($37)|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $39=HEAP32[(($38)>>2)]; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+($36<<4))|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $41=(($40+8)|0); //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $42=HEAP32[(($41)>>2)]; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $43=_luaO_pushfstring($32,12832,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$35,HEAP32[(((tempVarArgs)+(8))>>2)]=$42,tempVarArgs)); STACKTOP=tempVarArgs; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 $msg=$43; //@line 1199 "lib/lua-5.2.3/src/lparser.c"
 var $44=$1; //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 var $45=(($44+12)|0); //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 var $46=HEAP32[(($45)>>2)]; //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 var $47=$msg; //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 _semerror($46,$47); //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 throw "Reached an unreachable!"; //@line 1202 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 label=6;break; //@line 1204 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $50=$i; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 var $51=((($50)+(1))|0); //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 $i=$51; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1197 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 STACKTOP=sp;return; //@line 1205 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _skipnoopstat($ls){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$ls;
 label=2;break; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $3=$1; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+16)|0); //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4)|0); //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $7=($6|0)==59; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 if($7){var $15=1;label=4;break;}else{label=3;break;} //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $9=$1; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+16)|0); //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10)|0); //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $13=($12|0)==285; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 var $15=$13;label=4;break; //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $15;
 if($15){label=5;break;}else{label=6;break;} //@line 1210 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $17=$1; //@line 1211 "lib/lua-5.2.3/src/lparser.c"
 _statement($17); //@line 1211 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1211 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 STACKTOP=sp;return; //@line 1212 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _funcname($ls,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ismethod;
 $1=$ls;
 $2=$v;
 $ismethod=0; //@line 1456 "lib/lua-5.2.3/src/lparser.c"
 var $3=$1; //@line 1457 "lib/lua-5.2.3/src/lparser.c"
 var $4=$2; //@line 1457 "lib/lua-5.2.3/src/lparser.c"
 _singlevar($3,$4); //@line 1457 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $6=$1; //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+16)|0); //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7)|0); //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP32[(($8)>>2)]; //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9|0)==46; //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 if($10){label=3;break;}else{label=4;break;} //@line 1458 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $12=$1; //@line 1459 "lib/lua-5.2.3/src/lparser.c"
 var $13=$2; //@line 1459 "lib/lua-5.2.3/src/lparser.c"
 _fieldsel($12,$13); //@line 1459 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1459 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $15=$1; //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+16)|0); //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==58; //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=5;break;}else{label=6;break;} //@line 1460 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 $ismethod=1; //@line 1461 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 1462 "lib/lua-5.2.3/src/lparser.c"
 var $22=$2; //@line 1462 "lib/lua-5.2.3/src/lparser.c"
 _fieldsel($21,$22); //@line 1462 "lib/lua-5.2.3/src/lparser.c"
 label=6;break; //@line 1463 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $24=$ismethod; //@line 1464 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $24; //@line 1464 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _enterblock($fs,$bl,$isloop){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$bl;
 $3=$isloop;
 var $4=$3; //@line 439 "lib/lua-5.2.3/src/lparser.c"
 var $5=$2; //@line 439 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($5+10)|0); //@line 439 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($6)]=$4; //@line 439 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 440 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+46)|0); //@line 440 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP8[($8)]; //@line 440 "lib/lua-5.2.3/src/lparser.c"
 var $10=$2; //@line 440 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10+8)|0); //@line 440 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($11)]=$9; //@line 440 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $13=(($12+12)|0); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $14=HEAP32[(($13)>>2)]; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $15=(($14+64)|0); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $16=HEAP32[(($15)>>2)]; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16+24)|0); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $18=(($17+4)|0); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $19=HEAP32[(($18)>>2)]; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $20=(($19)&65535); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $21=$2; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+4)|0); //@line 441 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($22)>>1)]=$20; //@line 441 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $24=(($23+12)|0); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $25=HEAP32[(($24)>>2)]; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($25+64)|0); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27+12)|0); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $29=(($28+4)|0); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $30=HEAP32[(($29)>>2)]; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30)&65535); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $32=$2; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $33=(($32+6)|0); //@line 442 "lib/lua-5.2.3/src/lparser.c"
 HEAP16[(($33)>>1)]=$31; //@line 442 "lib/lua-5.2.3/src/lparser.c"
 var $34=$2; //@line 443 "lib/lua-5.2.3/src/lparser.c"
 var $35=(($34+9)|0); //@line 443 "lib/lua-5.2.3/src/lparser.c"
 HEAP8[($35)]=0; //@line 443 "lib/lua-5.2.3/src/lparser.c"
 var $36=$1; //@line 444 "lib/lua-5.2.3/src/lparser.c"
 var $37=(($36+16)|0); //@line 444 "lib/lua-5.2.3/src/lparser.c"
 var $38=HEAP32[(($37)>>2)]; //@line 444 "lib/lua-5.2.3/src/lparser.c"
 var $39=$2; //@line 444 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39)|0); //@line 444 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($40)>>2)]=$38; //@line 444 "lib/lua-5.2.3/src/lparser.c"
 var $41=$2; //@line 445 "lib/lua-5.2.3/src/lparser.c"
 var $42=$1; //@line 445 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($42+16)|0); //@line 445 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($43)>>2)]=$41; //@line 445 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 447 "lib/lua-5.2.3/src/lparser.c"
}


function _cond($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $v=sp;
 $1=$ls;
 var $2=$1; //@line 1172 "lib/lua-5.2.3/src/lparser.c"
 _expr($2,$v); //@line 1172 "lib/lua-5.2.3/src/lparser.c"
 var $3=(($v)|0); //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 var $4=HEAP32[(($3)>>2)]; //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 var $5=($4|0)==1; //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 if($5){label=2;break;}else{label=3;break;} //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $7=(($v)|0); //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 HEAP32[(($7)>>2)]=3; //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 label=3;break; //@line 1173 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $9=$1; //@line 1174 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+48)|0); //@line 1174 "lib/lua-5.2.3/src/lparser.c"
 var $11=HEAP32[(($10)>>2)]; //@line 1174 "lib/lua-5.2.3/src/lparser.c"
 _luaK_goiftrue($11,$v); //@line 1174 "lib/lua-5.2.3/src/lparser.c"
 var $12=(($v+20)|0); //@line 1175 "lib/lua-5.2.3/src/lparser.c"
 var $13=HEAP32[(($12)>>2)]; //@line 1175 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $13; //@line 1175 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _fornum($ls,$varname,$line){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $fs;
 var $base;
 $1=$ls;
 $2=$varname;
 $3=$line;
 var $4=$1; //@line 1311 "lib/lua-5.2.3/src/lparser.c"
 var $5=(($4+48)|0); //@line 1311 "lib/lua-5.2.3/src/lparser.c"
 var $6=HEAP32[(($5)>>2)]; //@line 1311 "lib/lua-5.2.3/src/lparser.c"
 $fs=$6; //@line 1311 "lib/lua-5.2.3/src/lparser.c"
 var $7=$fs; //@line 1312 "lib/lua-5.2.3/src/lparser.c"
 var $8=(($7+48)|0); //@line 1312 "lib/lua-5.2.3/src/lparser.c"
 var $9=HEAP8[($8)]; //@line 1312 "lib/lua-5.2.3/src/lparser.c"
 var $10=($9&255); //@line 1312 "lib/lua-5.2.3/src/lparser.c"
 $base=$10; //@line 1312 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 1313 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($11,10920,11); //@line 1313 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 1314 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($12,10576,11); //@line 1314 "lib/lua-5.2.3/src/lparser.c"
 var $13=$1; //@line 1315 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($13,10304,10); //@line 1315 "lib/lua-5.2.3/src/lparser.c"
 var $14=$1; //@line 1316 "lib/lua-5.2.3/src/lparser.c"
 var $15=$2; //@line 1316 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($14,$15); //@line 1316 "lib/lua-5.2.3/src/lparser.c"
 var $16=$1; //@line 1317 "lib/lua-5.2.3/src/lparser.c"
 _checknext($16,61); //@line 1317 "lib/lua-5.2.3/src/lparser.c"
 var $17=$1; //@line 1318 "lib/lua-5.2.3/src/lparser.c"
 var $18=_exp1($17); //@line 1318 "lib/lua-5.2.3/src/lparser.c"
 var $19=$1; //@line 1319 "lib/lua-5.2.3/src/lparser.c"
 _checknext($19,44); //@line 1319 "lib/lua-5.2.3/src/lparser.c"
 var $20=$1; //@line 1320 "lib/lua-5.2.3/src/lparser.c"
 var $21=_exp1($20); //@line 1320 "lib/lua-5.2.3/src/lparser.c"
 var $22=$1; //@line 1321 "lib/lua-5.2.3/src/lparser.c"
 var $23=_testnext($22,44); //@line 1321 "lib/lua-5.2.3/src/lparser.c"
 var $24=($23|0)!=0; //@line 1321 "lib/lua-5.2.3/src/lparser.c"
 if($24){label=2;break;}else{label=3;break;} //@line 1321 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $26=$1; //@line 1322 "lib/lua-5.2.3/src/lparser.c"
 var $27=_exp1($26); //@line 1322 "lib/lua-5.2.3/src/lparser.c"
 label=4;break; //@line 1322 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $29=$fs; //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $30=$fs; //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $31=(($30+48)|0); //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $32=HEAP8[($31)]; //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $33=($32&255); //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $34=$fs; //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $35=_luaK_numberK($34,1); //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $36=_luaK_codek($29,$33,$35); //@line 1324 "lib/lua-5.2.3/src/lparser.c"
 var $37=$fs; //@line 1325 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($37,1); //@line 1325 "lib/lua-5.2.3/src/lparser.c"
 label=4;break;
 case 4: 
 var $39=$1; //@line 1327 "lib/lua-5.2.3/src/lparser.c"
 var $40=$base; //@line 1327 "lib/lua-5.2.3/src/lparser.c"
 var $41=$3; //@line 1327 "lib/lua-5.2.3/src/lparser.c"
 _forbody($39,$40,$41,1,1); //@line 1327 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1328 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _forlist($ls,$indexname){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $fs;
 var $e=sp;
 var $nvars;
 var $line;
 var $base;
 $1=$ls;
 $2=$indexname;
 var $3=$1; //@line 1333 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1333 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1333 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1333 "lib/lua-5.2.3/src/lparser.c"
 $nvars=4; //@line 1335 "lib/lua-5.2.3/src/lparser.c"
 var $6=$fs; //@line 1337 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+48)|0); //@line 1337 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP8[($7)]; //@line 1337 "lib/lua-5.2.3/src/lparser.c"
 var $9=($8&255); //@line 1337 "lib/lua-5.2.3/src/lparser.c"
 $base=$9; //@line 1337 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1339 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($10,12192,15); //@line 1339 "lib/lua-5.2.3/src/lparser.c"
 var $11=$1; //@line 1340 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($11,11840,11); //@line 1340 "lib/lua-5.2.3/src/lparser.c"
 var $12=$1; //@line 1341 "lib/lua-5.2.3/src/lparser.c"
 _new_localvarliteral_($12,11488,13); //@line 1341 "lib/lua-5.2.3/src/lparser.c"
 var $13=$1; //@line 1343 "lib/lua-5.2.3/src/lparser.c"
 var $14=$2; //@line 1343 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($13,$14); //@line 1343 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1344 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $16=$1; //@line 1344 "lib/lua-5.2.3/src/lparser.c"
 var $17=_testnext($16,44); //@line 1344 "lib/lua-5.2.3/src/lparser.c"
 var $18=($17|0)!=0; //@line 1344 "lib/lua-5.2.3/src/lparser.c"
 if($18){label=3;break;}else{label=4;break;} //@line 1344 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $20=$1; //@line 1345 "lib/lua-5.2.3/src/lparser.c"
 var $21=$1; //@line 1345 "lib/lua-5.2.3/src/lparser.c"
 var $22=_str_checkname($21); //@line 1345 "lib/lua-5.2.3/src/lparser.c"
 _new_localvar($20,$22); //@line 1345 "lib/lua-5.2.3/src/lparser.c"
 var $23=$nvars; //@line 1346 "lib/lua-5.2.3/src/lparser.c"
 var $24=((($23)+(1))|0); //@line 1346 "lib/lua-5.2.3/src/lparser.c"
 $nvars=$24; //@line 1346 "lib/lua-5.2.3/src/lparser.c"
 label=2;break; //@line 1347 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $26=$1; //@line 1348 "lib/lua-5.2.3/src/lparser.c"
 _checknext($26,268); //@line 1348 "lib/lua-5.2.3/src/lparser.c"
 var $27=$1; //@line 1349 "lib/lua-5.2.3/src/lparser.c"
 var $28=(($27+4)|0); //@line 1349 "lib/lua-5.2.3/src/lparser.c"
 var $29=HEAP32[(($28)>>2)]; //@line 1349 "lib/lua-5.2.3/src/lparser.c"
 $line=$29; //@line 1349 "lib/lua-5.2.3/src/lparser.c"
 var $30=$1; //@line 1350 "lib/lua-5.2.3/src/lparser.c"
 var $31=$1; //@line 1350 "lib/lua-5.2.3/src/lparser.c"
 var $32=_explist($31,$e); //@line 1350 "lib/lua-5.2.3/src/lparser.c"
 _adjust_assign($30,3,$32,$e); //@line 1350 "lib/lua-5.2.3/src/lparser.c"
 var $33=$fs; //@line 1351 "lib/lua-5.2.3/src/lparser.c"
 _luaK_checkstack($33,3); //@line 1351 "lib/lua-5.2.3/src/lparser.c"
 var $34=$1; //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 var $35=$base; //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 var $36=$line; //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 var $37=$nvars; //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 var $38=((($37)-(3))|0); //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 _forbody($34,$35,$36,$38,0); //@line 1352 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1353 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _forbody($ls,$base,$line,$nvars,$isnum){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $bl=sp;
 var $fs;
 var $prep;
 var $endfor;
 $1=$ls;
 $2=$base;
 $3=$line;
 $4=$nvars;
 $5=$isnum;
 var $6=$1; //@line 1286 "lib/lua-5.2.3/src/lparser.c"
 var $7=(($6+48)|0); //@line 1286 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 1286 "lib/lua-5.2.3/src/lparser.c"
 $fs=$8; //@line 1286 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1288 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($9,3); //@line 1288 "lib/lua-5.2.3/src/lparser.c"
 var $10=$1; //@line 1289 "lib/lua-5.2.3/src/lparser.c"
 _checknext($10,259); //@line 1289 "lib/lua-5.2.3/src/lparser.c"
 var $11=$5; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $12=($11|0)!=0; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 if($12){label=2;break;}else{label=3;break;} //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $14=$fs; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $15=$2; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $16=_luaK_codeABx($14,33,$15,131070); //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $21=$16;label=4;break; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $18=$fs; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $19=_luaK_jump($18); //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $21=$19;label=4;break; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $21; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 $prep=$21; //@line 1290 "lib/lua-5.2.3/src/lparser.c"
 var $22=$fs; //@line 1291 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($22,$bl,0); //@line 1291 "lib/lua-5.2.3/src/lparser.c"
 var $23=$1; //@line 1292 "lib/lua-5.2.3/src/lparser.c"
 var $24=$4; //@line 1292 "lib/lua-5.2.3/src/lparser.c"
 _adjustlocalvars($23,$24); //@line 1292 "lib/lua-5.2.3/src/lparser.c"
 var $25=$fs; //@line 1293 "lib/lua-5.2.3/src/lparser.c"
 var $26=$4; //@line 1293 "lib/lua-5.2.3/src/lparser.c"
 _luaK_reserveregs($25,$26); //@line 1293 "lib/lua-5.2.3/src/lparser.c"
 var $27=$1; //@line 1294 "lib/lua-5.2.3/src/lparser.c"
 _block($27); //@line 1294 "lib/lua-5.2.3/src/lparser.c"
 var $28=$fs; //@line 1295 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($28); //@line 1295 "lib/lua-5.2.3/src/lparser.c"
 var $29=$fs; //@line 1296 "lib/lua-5.2.3/src/lparser.c"
 var $30=$prep; //@line 1296 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchtohere($29,$30); //@line 1296 "lib/lua-5.2.3/src/lparser.c"
 var $31=$5; //@line 1297 "lib/lua-5.2.3/src/lparser.c"
 var $32=($31|0)!=0; //@line 1297 "lib/lua-5.2.3/src/lparser.c"
 if($32){label=5;break;}else{label=6;break;} //@line 1297 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $34=$fs; //@line 1298 "lib/lua-5.2.3/src/lparser.c"
 var $35=$2; //@line 1298 "lib/lua-5.2.3/src/lparser.c"
 var $36=_luaK_codeABx($34,32,$35,131070); //@line 1298 "lib/lua-5.2.3/src/lparser.c"
 $endfor=$36; //@line 1298 "lib/lua-5.2.3/src/lparser.c"
 label=7;break; //@line 1298 "lib/lua-5.2.3/src/lparser.c"
 case 6: 
 var $38=$fs; //@line 1300 "lib/lua-5.2.3/src/lparser.c"
 var $39=$2; //@line 1300 "lib/lua-5.2.3/src/lparser.c"
 var $40=$4; //@line 1300 "lib/lua-5.2.3/src/lparser.c"
 var $41=_luaK_codeABC($38,34,$39,0,$40); //@line 1300 "lib/lua-5.2.3/src/lparser.c"
 var $42=$fs; //@line 1301 "lib/lua-5.2.3/src/lparser.c"
 var $43=$3; //@line 1301 "lib/lua-5.2.3/src/lparser.c"
 _luaK_fixline($42,$43); //@line 1301 "lib/lua-5.2.3/src/lparser.c"
 var $44=$fs; //@line 1302 "lib/lua-5.2.3/src/lparser.c"
 var $45=$2; //@line 1302 "lib/lua-5.2.3/src/lparser.c"
 var $46=((($45)+(2))|0); //@line 1302 "lib/lua-5.2.3/src/lparser.c"
 var $47=_luaK_codeABx($44,35,$46,131070); //@line 1302 "lib/lua-5.2.3/src/lparser.c"
 $endfor=$47; //@line 1302 "lib/lua-5.2.3/src/lparser.c"
 label=7;break;
 case 7: 
 var $49=$fs; //@line 1304 "lib/lua-5.2.3/src/lparser.c"
 var $50=$endfor; //@line 1304 "lib/lua-5.2.3/src/lparser.c"
 var $51=$prep; //@line 1304 "lib/lua-5.2.3/src/lparser.c"
 var $52=((($51)+(1))|0); //@line 1304 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchlist($49,$50,$52); //@line 1304 "lib/lua-5.2.3/src/lparser.c"
 var $53=$fs; //@line 1305 "lib/lua-5.2.3/src/lparser.c"
 var $54=$3; //@line 1305 "lib/lua-5.2.3/src/lparser.c"
 _luaK_fixline($53,$54); //@line 1305 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return; //@line 1306 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _exp1($ls){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $e=sp;
 var $reg;
 $1=$ls;
 var $2=$1; //@line 1275 "lib/lua-5.2.3/src/lparser.c"
 _expr($2,$e); //@line 1275 "lib/lua-5.2.3/src/lparser.c"
 var $3=$1; //@line 1276 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1276 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1276 "lib/lua-5.2.3/src/lparser.c"
 _luaK_exp2nextreg($5,$e); //@line 1276 "lib/lua-5.2.3/src/lparser.c"
 var $6=(($e+8)|0); //@line 1278 "lib/lua-5.2.3/src/lparser.c"
 var $7=$6; //@line 1278 "lib/lua-5.2.3/src/lparser.c"
 var $8=HEAP32[(($7)>>2)]; //@line 1278 "lib/lua-5.2.3/src/lparser.c"
 $reg=$8; //@line 1278 "lib/lua-5.2.3/src/lparser.c"
 var $9=$reg; //@line 1279 "lib/lua-5.2.3/src/lparser.c"
 STACKTOP=sp;return $9; //@line 1279 "lib/lua-5.2.3/src/lparser.c"
}


function _test_then_block($ls,$escapelist){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $bl=sp;
 var $fs;
 var $v=(sp)+(16);
 var $jf;
 $1=$ls;
 $2=$escapelist;
 var $3=$1; //@line 1377 "lib/lua-5.2.3/src/lparser.c"
 var $4=(($3+48)|0); //@line 1377 "lib/lua-5.2.3/src/lparser.c"
 var $5=HEAP32[(($4)>>2)]; //@line 1377 "lib/lua-5.2.3/src/lparser.c"
 $fs=$5; //@line 1377 "lib/lua-5.2.3/src/lparser.c"
 var $6=$1; //@line 1380 "lib/lua-5.2.3/src/lparser.c"
 _luaX_next($6); //@line 1380 "lib/lua-5.2.3/src/lparser.c"
 var $7=$1; //@line 1381 "lib/lua-5.2.3/src/lparser.c"
 _expr($7,$v); //@line 1381 "lib/lua-5.2.3/src/lparser.c"
 var $8=$1; //@line 1382 "lib/lua-5.2.3/src/lparser.c"
 _checknext($8,275); //@line 1382 "lib/lua-5.2.3/src/lparser.c"
 var $9=$1; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $10=(($9+16)|0); //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $11=(($10)|0); //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $12=HEAP32[(($11)>>2)]; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $13=($12|0)==266; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 if($13){label=3;break;}else{label=2;break;} //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 case 2: 
 var $15=$1; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $16=(($15+16)|0); //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $17=(($16)|0); //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $18=HEAP32[(($17)>>2)]; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 var $19=($18|0)==258; //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 if($19){label=3;break;}else{label=7;break;} //@line 1383 "lib/lua-5.2.3/src/lparser.c"
 case 3: 
 var $21=$1; //@line 1384 "lib/lua-5.2.3/src/lparser.c"
 var $22=(($21+48)|0); //@line 1384 "lib/lua-5.2.3/src/lparser.c"
 var $23=HEAP32[(($22)>>2)]; //@line 1384 "lib/lua-5.2.3/src/lparser.c"
 _luaK_goiffalse($23,$v); //@line 1384 "lib/lua-5.2.3/src/lparser.c"
 var $24=$fs; //@line 1385 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($24,$bl,0); //@line 1385 "lib/lua-5.2.3/src/lparser.c"
 var $25=$1; //@line 1386 "lib/lua-5.2.3/src/lparser.c"
 var $26=(($v+16)|0); //@line 1386 "lib/lua-5.2.3/src/lparser.c"
 var $27=HEAP32[(($26)>>2)]; //@line 1386 "lib/lua-5.2.3/src/lparser.c"
 _gotostat($25,$27); //@line 1386 "lib/lua-5.2.3/src/lparser.c"
 var $28=$1; //@line 1387 "lib/lua-5.2.3/src/lparser.c"
 _skipnoopstat($28); //@line 1387 "lib/lua-5.2.3/src/lparser.c"
 var $29=$1; //@line 1388 "lib/lua-5.2.3/src/lparser.c"
 var $30=_block_follow($29,0); //@line 1388 "lib/lua-5.2.3/src/lparser.c"
 var $31=($30|0)!=0; //@line 1388 "lib/lua-5.2.3/src/lparser.c"
 if($31){label=4;break;}else{label=5;break;} //@line 1388 "lib/lua-5.2.3/src/lparser.c"
 case 4: 
 var $33=$fs; //@line 1389 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($33); //@line 1389 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 1390 "lib/lua-5.2.3/src/lparser.c"
 case 5: 
 var $35=$fs; //@line 1393 "lib/lua-5.2.3/src/lparser.c"
 var $36=_luaK_jump($35); //@line 1393 "lib/lua-5.2.3/src/lparser.c"
 $jf=$36; //@line 1393 "lib/lua-5.2.3/src/lparser.c"
 label=6;break;
 case 6: 
 label=8;break; //@line 1394 "lib/lua-5.2.3/src/lparser.c"
 case 7: 
 var $39=$1; //@line 1396 "lib/lua-5.2.3/src/lparser.c"
 var $40=(($39+48)|0); //@line 1396 "lib/lua-5.2.3/src/lparser.c"
 var $41=HEAP32[(($40)>>2)]; //@line 1396 "lib/lua-5.2.3/src/lparser.c"
 _luaK_goiftrue($41,$v); //@line 1396 "lib/lua-5.2.3/src/lparser.c"
 var $42=$fs; //@line 1397 "lib/lua-5.2.3/src/lparser.c"
 _enterblock($42,$bl,0); //@line 1397 "lib/lua-5.2.3/src/lparser.c"
 var $43=(($v+20)|0); //@line 1398 "lib/lua-5.2.3/src/lparser.c"
 var $44=HEAP32[(($43)>>2)]; //@line 1398 "lib/lua-5.2.3/src/lparser.c"
 $jf=$44; //@line 1398 "lib/lua-5.2.3/src/lparser.c"
 label=8;break;
 case 8: 
 var $46=$1; //@line 1400 "lib/lua-5.2.3/src/lparser.c"
 _statlist($46); //@line 1400 "lib/lua-5.2.3/src/lparser.c"
 var $47=$fs; //@line 1401 "lib/lua-5.2.3/src/lparser.c"
 _leaveblock($47); //@line 1401 "lib/lua-5.2.3/src/lparser.c"
 var $48=$1; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $49=(($48+16)|0); //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $50=(($49)|0); //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $51=HEAP32[(($50)>>2)]; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $52=($51|0)==260; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 if($52){label=10;break;}else{label=9;break;} //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 case 9: 
 var $54=$1; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $55=(($54+16)|0); //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $56=(($55)|0); //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $57=HEAP32[(($56)>>2)]; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 var $58=($57|0)==261; //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 if($58){label=10;break;}else{label=11;break;} //@line 1402 "lib/lua-5.2.3/src/lparser.c"
 case 10: 
 var $60=$fs; //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 var $61=$2; //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 var $62=$fs; //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 var $63=_luaK_jump($62); //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 _luaK_concat($60,$61,$63); //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 label=11;break; //@line 1404 "lib/lua-5.2.3/src/lparser.c"
 case 11: 
 var $65=$fs; //@line 1405 "lib/lua-5.2.3/src/lparser.c"
 var $66=$jf; //@line 1405 "lib/lua-5.2.3/src/lparser.c"
 _luaK_patchtohere($65,$66); //@line 1405 "lib/lua-5.2.3/src/lparser.c"
 label=12;break; //@line 1406 "lib/lua-5.2.3/src/lparser.c"
 case 12: 
 STACKTOP=sp;return; //@line 1406 "lib/lua-5.2.3/src/lparser.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaopen_table($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 275 "lib/lua-5.2.3/src/ltablib.c"
 _lua_createtable($2,0,6); //@line 275 "lib/lua-5.2.3/src/ltablib.c"
 var $3=$1; //@line 275 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_setfuncs($3,168,0); //@line 275 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return 1; //@line 281 "lib/lua-5.2.3/src/ltablib.c"
}


function _tconcat($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1048)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $b=sp;
 var $lsep=(sp)+(1040);
 var $i;
 var $last;
 var $sep;
 $1=$L;
 var $2=$1; //@line 97 "lib/lua-5.2.3/src/ltablib.c"
 var $3=_luaL_optlstring($2,2,19960,$lsep); //@line 97 "lib/lua-5.2.3/src/ltablib.c"
 $sep=$3; //@line 97 "lib/lua-5.2.3/src/ltablib.c"
 var $4=$1; //@line 98 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($4,1,5); //@line 98 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$1; //@line 99 "lib/lua-5.2.3/src/ltablib.c"
 var $6=_luaL_optinteger($5,3,1); //@line 99 "lib/lua-5.2.3/src/ltablib.c"
 $i=$6; //@line 99 "lib/lua-5.2.3/src/ltablib.c"
 var $7=$1; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $8=_lua_type($7,4); //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $9=($8|0)<=0; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 if($9){label=2;break;}else{label=3;break;} //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $11=$1; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $12=_luaL_len($11,1); //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $17=$12;label=4;break; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $14=$1; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $15=_luaL_checkinteger($14,4); //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $17=$15;label=4;break; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $17; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 $last=$17; //@line 100 "lib/lua-5.2.3/src/ltablib.c"
 var $18=$1; //@line 101 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_buffinit($18,$b); //@line 101 "lib/lua-5.2.3/src/ltablib.c"
 label=5;break; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 var $20=$i; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 var $21=$last; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 var $22=($20|0)<($21|0); //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 if($22){label=6;break;}else{label=8;break;} //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 case 6: 
 var $24=$1; //@line 103 "lib/lua-5.2.3/src/ltablib.c"
 var $25=$i; //@line 103 "lib/lua-5.2.3/src/ltablib.c"
 _addfield($24,$b,$25); //@line 103 "lib/lua-5.2.3/src/ltablib.c"
 var $26=$sep; //@line 104 "lib/lua-5.2.3/src/ltablib.c"
 var $27=HEAP32[(($lsep)>>2)]; //@line 104 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_addlstring($b,$26,$27); //@line 104 "lib/lua-5.2.3/src/ltablib.c"
 label=7;break; //@line 105 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 var $29=$i; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 var $30=((($29)+(1))|0); //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 $i=$30; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 label=5;break; //@line 102 "lib/lua-5.2.3/src/ltablib.c"
 case 8: 
 var $32=$i; //@line 106 "lib/lua-5.2.3/src/ltablib.c"
 var $33=$last; //@line 106 "lib/lua-5.2.3/src/ltablib.c"
 var $34=($32|0)==($33|0); //@line 106 "lib/lua-5.2.3/src/ltablib.c"
 if($34){label=9;break;}else{label=10;break;} //@line 106 "lib/lua-5.2.3/src/ltablib.c"
 case 9: 
 var $36=$1; //@line 107 "lib/lua-5.2.3/src/ltablib.c"
 var $37=$i; //@line 107 "lib/lua-5.2.3/src/ltablib.c"
 _addfield($36,$b,$37); //@line 107 "lib/lua-5.2.3/src/ltablib.c"
 label=10;break; //@line 107 "lib/lua-5.2.3/src/ltablib.c"
 case 10: 
 _luaL_pushresult($b); //@line 108 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return 1; //@line 109 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _tinsert($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $e;
 var $pos;
 var $i;
 $2=$L;
 var $3=$2; //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($3,1,5); //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 var $4=$2; //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 var $5=_luaL_len($4,1); //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 var $6=((($5)+(1))|0); //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 $e=$6; //@line 42 "lib/lua-5.2.3/src/ltablib.c"
 var $7=$2; //@line 44 "lib/lua-5.2.3/src/ltablib.c"
 var $8=_lua_gettop($7); //@line 44 "lib/lua-5.2.3/src/ltablib.c"
 if(($8|0)==2){ label=2;break;}else if(($8|0)==3){ label=3;break;}else{label=11;break;}
 case 2: 
 var $10=$e; //@line 46 "lib/lua-5.2.3/src/ltablib.c"
 $pos=$10; //@line 46 "lib/lua-5.2.3/src/ltablib.c"
 label=12;break; //@line 47 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $12=$2; //@line 51 "lib/lua-5.2.3/src/ltablib.c"
 var $13=_luaL_checkinteger($12,2); //@line 51 "lib/lua-5.2.3/src/ltablib.c"
 $pos=$13; //@line 51 "lib/lua-5.2.3/src/ltablib.c"
 var $14=$pos; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $15=1<=($14|0); //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 if($15){label=4;break;}else{label=5;break;} //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $17=$pos; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $18=$e; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $19=($17|0)<=($18|0); //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 if($19){var $25=1;label=6;break;}else{label=5;break;} //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 var $21=$2; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $22=_luaL_argerror($21,2,3488); //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $23=($22|0)!=0; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $25=$23;label=6;break; //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 case 6: 
 var $25;
 var $26=($25&1); //@line 52 "lib/lua-5.2.3/src/ltablib.c"
 var $27=$e; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 $i=$27; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 label=7;break; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 var $29=$i; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 var $30=$pos; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 var $31=($29|0)>($30|0); //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 if($31){label=8;break;}else{label=10;break;} //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 case 8: 
 var $33=$2; //@line 54 "lib/lua-5.2.3/src/ltablib.c"
 var $34=$i; //@line 54 "lib/lua-5.2.3/src/ltablib.c"
 var $35=((($34)-(1))|0); //@line 54 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($33,1,$35); //@line 54 "lib/lua-5.2.3/src/ltablib.c"
 var $36=$2; //@line 55 "lib/lua-5.2.3/src/ltablib.c"
 var $37=$i; //@line 55 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($36,1,$37); //@line 55 "lib/lua-5.2.3/src/ltablib.c"
 label=9;break; //@line 56 "lib/lua-5.2.3/src/ltablib.c"
 case 9: 
 var $39=$i; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 var $40=((($39)-(1))|0); //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 $i=$40; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 label=7;break; //@line 53 "lib/lua-5.2.3/src/ltablib.c"
 case 10: 
 label=12;break; //@line 57 "lib/lua-5.2.3/src/ltablib.c"
 case 11: 
 var $43=$2; //@line 60 "lib/lua-5.2.3/src/ltablib.c"
 var $44=_luaL_error($43,15752,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 60 "lib/lua-5.2.3/src/ltablib.c"
 $1=$44; //@line 60 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 60 "lib/lua-5.2.3/src/ltablib.c"
 case 12: 
 var $46=$2; //@line 63 "lib/lua-5.2.3/src/ltablib.c"
 var $47=$pos; //@line 63 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($46,1,$47); //@line 63 "lib/lua-5.2.3/src/ltablib.c"
 $1=0; //@line 64 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 64 "lib/lua-5.2.3/src/ltablib.c"
 case 13: 
 var $49=$1; //@line 65 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return $49; //@line 65 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _pack($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $n;
 var $i;
 $1=$L;
 var $2=$1; //@line 120 "lib/lua-5.2.3/src/ltablib.c"
 var $3=_lua_gettop($2); //@line 120 "lib/lua-5.2.3/src/ltablib.c"
 $n=$3; //@line 120 "lib/lua-5.2.3/src/ltablib.c"
 var $4=$1; //@line 121 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$n; //@line 121 "lib/lua-5.2.3/src/ltablib.c"
 _lua_createtable($4,$5,1); //@line 121 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$1; //@line 122 "lib/lua-5.2.3/src/ltablib.c"
 var $7=$n; //@line 122 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushinteger($6,$7); //@line 122 "lib/lua-5.2.3/src/ltablib.c"
 var $8=$1; //@line 123 "lib/lua-5.2.3/src/ltablib.c"
 _lua_setfield($8,-2,16344); //@line 123 "lib/lua-5.2.3/src/ltablib.c"
 var $9=$n; //@line 124 "lib/lua-5.2.3/src/ltablib.c"
 var $10=($9|0)>0; //@line 124 "lib/lua-5.2.3/src/ltablib.c"
 if($10){label=2;break;}else{label=7;break;} //@line 124 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $12=$1; //@line 126 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushvalue($12,1); //@line 126 "lib/lua-5.2.3/src/ltablib.c"
 var $13=$1; //@line 127 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($13,-2,1); //@line 127 "lib/lua-5.2.3/src/ltablib.c"
 var $14=$1; //@line 128 "lib/lua-5.2.3/src/ltablib.c"
 _lua_replace($14,1); //@line 128 "lib/lua-5.2.3/src/ltablib.c"
 var $15=$n; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 $i=$15; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 label=3;break; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $17=$i; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 var $18=($17|0)>=2; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 if($18){label=4;break;}else{label=6;break;} //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $20=$1; //@line 130 "lib/lua-5.2.3/src/ltablib.c"
 var $21=$i; //@line 130 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($20,1,$21); //@line 130 "lib/lua-5.2.3/src/ltablib.c"
 label=5;break; //@line 130 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 var $23=$i; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 var $24=((($23)-(1))|0); //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 $i=$24; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 label=3;break; //@line 129 "lib/lua-5.2.3/src/ltablib.c"
 case 6: 
 label=7;break; //@line 131 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 STACKTOP=sp;return 1; //@line 132 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _unpack($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $e;
 var $n;
 $2=$L;
 var $3=$2; //@line 138 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($3,1,5); //@line 138 "lib/lua-5.2.3/src/ltablib.c"
 var $4=$2; //@line 139 "lib/lua-5.2.3/src/ltablib.c"
 var $5=_luaL_optinteger($4,2,1); //@line 139 "lib/lua-5.2.3/src/ltablib.c"
 $i=$5; //@line 139 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$2; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $7=_lua_type($6,3); //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $8=($7|0)<=0; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 if($8){label=2;break;}else{label=3;break;} //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $10=$2; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $11=_luaL_len($10,1); //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $16=$11;label=4;break; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $13=$2; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $14=_luaL_checkinteger($13,3); //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $16=$14;label=4;break; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $16; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 $e=$16; //@line 140 "lib/lua-5.2.3/src/ltablib.c"
 var $17=$i; //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 var $18=$e; //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 var $19=($17|0)>($18|0); //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 if($19){label=5;break;}else{label=6;break;} //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 $1=0; //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 141 "lib/lua-5.2.3/src/ltablib.c"
 case 6: 
 var $22=$e; //@line 142 "lib/lua-5.2.3/src/ltablib.c"
 var $23=$i; //@line 142 "lib/lua-5.2.3/src/ltablib.c"
 var $24=((($22)-($23))|0); //@line 142 "lib/lua-5.2.3/src/ltablib.c"
 var $25=((($24)+(1))|0); //@line 142 "lib/lua-5.2.3/src/ltablib.c"
 $n=$25; //@line 142 "lib/lua-5.2.3/src/ltablib.c"
 var $26=$n; //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 var $27=($26|0)<=0; //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 if($27){label=8;break;}else{label=7;break;} //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 var $29=$2; //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 var $30=$n; //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 var $31=_lua_checkstack($29,$30); //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 var $32=($31|0)!=0; //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 if($32){label=9;break;}else{label=8;break;} //@line 143 "lib/lua-5.2.3/src/ltablib.c"
 case 8: 
 var $34=$2; //@line 144 "lib/lua-5.2.3/src/ltablib.c"
 var $35=_luaL_error($34,2808,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 144 "lib/lua-5.2.3/src/ltablib.c"
 $1=$35; //@line 144 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 144 "lib/lua-5.2.3/src/ltablib.c"
 case 9: 
 var $37=$2; //@line 145 "lib/lua-5.2.3/src/ltablib.c"
 var $38=$i; //@line 145 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($37,1,$38); //@line 145 "lib/lua-5.2.3/src/ltablib.c"
 label=10;break; //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 case 10: 
 var $40=$i; //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 var $41=((($40)+(1))|0); //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 $i=$41; //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 var $42=$e; //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 var $43=($40|0)<($42|0); //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 if($43){label=11;break;}else{label=12;break;} //@line 146 "lib/lua-5.2.3/src/ltablib.c"
 case 11: 
 var $45=$2; //@line 147 "lib/lua-5.2.3/src/ltablib.c"
 var $46=$i; //@line 147 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($45,1,$46); //@line 147 "lib/lua-5.2.3/src/ltablib.c"
 label=10;break; //@line 147 "lib/lua-5.2.3/src/ltablib.c"
 case 12: 
 var $48=$n; //@line 148 "lib/lua-5.2.3/src/ltablib.c"
 $1=$48; //@line 148 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 148 "lib/lua-5.2.3/src/ltablib.c"
 case 13: 
 var $50=$1; //@line 149 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return $50; //@line 149 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _tremove($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $size;
 var $pos;
 $1=$L;
 var $2=$1; //@line 69 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($2,1,5); //@line 69 "lib/lua-5.2.3/src/ltablib.c"
 var $3=$1; //@line 69 "lib/lua-5.2.3/src/ltablib.c"
 var $4=_luaL_len($3,1); //@line 69 "lib/lua-5.2.3/src/ltablib.c"
 $size=$4; //@line 69 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$1; //@line 70 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$size; //@line 70 "lib/lua-5.2.3/src/ltablib.c"
 var $7=_luaL_optinteger($5,2,$6); //@line 70 "lib/lua-5.2.3/src/ltablib.c"
 $pos=$7; //@line 70 "lib/lua-5.2.3/src/ltablib.c"
 var $8=$pos; //@line 71 "lib/lua-5.2.3/src/ltablib.c"
 var $9=$size; //@line 71 "lib/lua-5.2.3/src/ltablib.c"
 var $10=($8|0)!=($9|0); //@line 71 "lib/lua-5.2.3/src/ltablib.c"
 if($10){label=2;break;}else{label=6;break;} //@line 71 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $12=$pos; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $13=1<=($12|0); //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 if($13){label=3;break;}else{label=4;break;} //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $15=$pos; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $16=$size; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $17=((($16)+(1))|0); //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $18=($15|0)<=($17|0); //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 if($18){var $24=1;label=5;break;}else{label=4;break;} //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $20=$1; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $21=_luaL_argerror($20,1,3488); //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $22=($21|0)!=0; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 var $24=$22;label=5;break; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 var $24;
 var $25=($24&1); //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 label=6;break; //@line 72 "lib/lua-5.2.3/src/ltablib.c"
 case 6: 
 var $27=$1; //@line 73 "lib/lua-5.2.3/src/ltablib.c"
 var $28=$pos; //@line 73 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($27,1,$28); //@line 73 "lib/lua-5.2.3/src/ltablib.c"
 label=7;break; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 var $30=$pos; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 var $31=$size; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 var $32=($30|0)<($31|0); //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 if($32){label=8;break;}else{label=10;break;} //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 case 8: 
 var $34=$1; //@line 75 "lib/lua-5.2.3/src/ltablib.c"
 var $35=$pos; //@line 75 "lib/lua-5.2.3/src/ltablib.c"
 var $36=((($35)+(1))|0); //@line 75 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($34,1,$36); //@line 75 "lib/lua-5.2.3/src/ltablib.c"
 var $37=$1; //@line 76 "lib/lua-5.2.3/src/ltablib.c"
 var $38=$pos; //@line 76 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($37,1,$38); //@line 76 "lib/lua-5.2.3/src/ltablib.c"
 label=9;break; //@line 77 "lib/lua-5.2.3/src/ltablib.c"
 case 9: 
 var $40=$pos; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 var $41=((($40)+(1))|0); //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 $pos=$41; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 label=7;break; //@line 74 "lib/lua-5.2.3/src/ltablib.c"
 case 10: 
 var $43=$1; //@line 78 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushnil($43); //@line 78 "lib/lua-5.2.3/src/ltablib.c"
 var $44=$1; //@line 79 "lib/lua-5.2.3/src/ltablib.c"
 var $45=$pos; //@line 79 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($44,1,$45); //@line 79 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return 1; //@line 80 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _sort($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $n;
 $1=$L;
 var $2=$1; //@line 248 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($2,1,5); //@line 248 "lib/lua-5.2.3/src/ltablib.c"
 var $3=$1; //@line 248 "lib/lua-5.2.3/src/ltablib.c"
 var $4=_luaL_len($3,1); //@line 248 "lib/lua-5.2.3/src/ltablib.c"
 $n=$4; //@line 248 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$1; //@line 249 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checkstack($5,40,19960); //@line 249 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$1; //@line 250 "lib/lua-5.2.3/src/ltablib.c"
 var $7=_lua_type($6,2); //@line 250 "lib/lua-5.2.3/src/ltablib.c"
 var $8=($7|0)<=0; //@line 250 "lib/lua-5.2.3/src/ltablib.c"
 if($8){label=3;break;}else{label=2;break;} //@line 250 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $10=$1; //@line 251 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_checktype($10,2,6); //@line 251 "lib/lua-5.2.3/src/ltablib.c"
 label=3;break; //@line 251 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $12=$1; //@line 252 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($12,2); //@line 252 "lib/lua-5.2.3/src/ltablib.c"
 var $13=$1; //@line 253 "lib/lua-5.2.3/src/ltablib.c"
 var $14=$n; //@line 253 "lib/lua-5.2.3/src/ltablib.c"
 _auxsort($13,1,$14); //@line 253 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return 0; //@line 254 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _auxsort($L,$l,$u){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $j;
 $1=$L;
 $2=$l;
 $3=$u;
 label=2;break; //@line 185 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $5=$2; //@line 185 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$3; //@line 185 "lib/lua-5.2.3/src/ltablib.c"
 var $7=($5|0)<($6|0); //@line 185 "lib/lua-5.2.3/src/ltablib.c"
 if($7){label=3;break;}else{label=34;break;} //@line 185 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $9=$1; //@line 188 "lib/lua-5.2.3/src/ltablib.c"
 var $10=$2; //@line 188 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($9,1,$10); //@line 188 "lib/lua-5.2.3/src/ltablib.c"
 var $11=$1; //@line 189 "lib/lua-5.2.3/src/ltablib.c"
 var $12=$3; //@line 189 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($11,1,$12); //@line 189 "lib/lua-5.2.3/src/ltablib.c"
 var $13=$1; //@line 190 "lib/lua-5.2.3/src/ltablib.c"
 var $14=_sort_comp($13,-1,-2); //@line 190 "lib/lua-5.2.3/src/ltablib.c"
 var $15=($14|0)!=0; //@line 190 "lib/lua-5.2.3/src/ltablib.c"
 if($15){label=4;break;}else{label=5;break;} //@line 190 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $17=$1; //@line 191 "lib/lua-5.2.3/src/ltablib.c"
 var $18=$2; //@line 191 "lib/lua-5.2.3/src/ltablib.c"
 var $19=$3; //@line 191 "lib/lua-5.2.3/src/ltablib.c"
 _set2($17,$18,$19); //@line 191 "lib/lua-5.2.3/src/ltablib.c"
 label=6;break; //@line 191 "lib/lua-5.2.3/src/ltablib.c"
 case 5: 
 var $21=$1; //@line 193 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($21,-3); //@line 193 "lib/lua-5.2.3/src/ltablib.c"
 label=6;break;
 case 6: 
 var $23=$3; //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 var $24=$2; //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 var $25=((($23)-($24))|0); //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 var $26=($25|0)==1; //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 if($26){label=7;break;}else{label=8;break;} //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 case 7: 
 label=34;break; //@line 194 "lib/lua-5.2.3/src/ltablib.c"
 case 8: 
 var $29=$2; //@line 195 "lib/lua-5.2.3/src/ltablib.c"
 var $30=$3; //@line 195 "lib/lua-5.2.3/src/ltablib.c"
 var $31=((($29)+($30))|0); //@line 195 "lib/lua-5.2.3/src/ltablib.c"
 var $32=(((($31|0))/(2))&-1); //@line 195 "lib/lua-5.2.3/src/ltablib.c"
 $i=$32; //@line 195 "lib/lua-5.2.3/src/ltablib.c"
 var $33=$1; //@line 196 "lib/lua-5.2.3/src/ltablib.c"
 var $34=$i; //@line 196 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($33,1,$34); //@line 196 "lib/lua-5.2.3/src/ltablib.c"
 var $35=$1; //@line 197 "lib/lua-5.2.3/src/ltablib.c"
 var $36=$2; //@line 197 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($35,1,$36); //@line 197 "lib/lua-5.2.3/src/ltablib.c"
 var $37=$1; //@line 198 "lib/lua-5.2.3/src/ltablib.c"
 var $38=_sort_comp($37,-2,-1); //@line 198 "lib/lua-5.2.3/src/ltablib.c"
 var $39=($38|0)!=0; //@line 198 "lib/lua-5.2.3/src/ltablib.c"
 if($39){label=9;break;}else{label=10;break;} //@line 198 "lib/lua-5.2.3/src/ltablib.c"
 case 9: 
 var $41=$1; //@line 199 "lib/lua-5.2.3/src/ltablib.c"
 var $42=$i; //@line 199 "lib/lua-5.2.3/src/ltablib.c"
 var $43=$2; //@line 199 "lib/lua-5.2.3/src/ltablib.c"
 _set2($41,$42,$43); //@line 199 "lib/lua-5.2.3/src/ltablib.c"
 label=14;break; //@line 199 "lib/lua-5.2.3/src/ltablib.c"
 case 10: 
 var $45=$1; //@line 201 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($45,-2); //@line 201 "lib/lua-5.2.3/src/ltablib.c"
 var $46=$1; //@line 202 "lib/lua-5.2.3/src/ltablib.c"
 var $47=$3; //@line 202 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($46,1,$47); //@line 202 "lib/lua-5.2.3/src/ltablib.c"
 var $48=$1; //@line 203 "lib/lua-5.2.3/src/ltablib.c"
 var $49=_sort_comp($48,-1,-2); //@line 203 "lib/lua-5.2.3/src/ltablib.c"
 var $50=($49|0)!=0; //@line 203 "lib/lua-5.2.3/src/ltablib.c"
 if($50){label=11;break;}else{label=12;break;} //@line 203 "lib/lua-5.2.3/src/ltablib.c"
 case 11: 
 var $52=$1; //@line 204 "lib/lua-5.2.3/src/ltablib.c"
 var $53=$i; //@line 204 "lib/lua-5.2.3/src/ltablib.c"
 var $54=$3; //@line 204 "lib/lua-5.2.3/src/ltablib.c"
 _set2($52,$53,$54); //@line 204 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break; //@line 204 "lib/lua-5.2.3/src/ltablib.c"
 case 12: 
 var $56=$1; //@line 206 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($56,-3); //@line 206 "lib/lua-5.2.3/src/ltablib.c"
 label=13;break;
 case 13: 
 label=14;break;
 case 14: 
 var $59=$3; //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 var $60=$2; //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 var $61=((($59)-($60))|0); //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 var $62=($61|0)==2; //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 if($62){label=15;break;}else{label=16;break;} //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 case 15: 
 label=34;break; //@line 208 "lib/lua-5.2.3/src/ltablib.c"
 case 16: 
 var $65=$1; //@line 209 "lib/lua-5.2.3/src/ltablib.c"
 var $66=$i; //@line 209 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($65,1,$66); //@line 209 "lib/lua-5.2.3/src/ltablib.c"
 var $67=$1; //@line 210 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushvalue($67,-1); //@line 210 "lib/lua-5.2.3/src/ltablib.c"
 var $68=$1; //@line 211 "lib/lua-5.2.3/src/ltablib.c"
 var $69=$3; //@line 211 "lib/lua-5.2.3/src/ltablib.c"
 var $70=((($69)-(1))|0); //@line 211 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($68,1,$70); //@line 211 "lib/lua-5.2.3/src/ltablib.c"
 var $71=$1; //@line 212 "lib/lua-5.2.3/src/ltablib.c"
 var $72=$i; //@line 212 "lib/lua-5.2.3/src/ltablib.c"
 var $73=$3; //@line 212 "lib/lua-5.2.3/src/ltablib.c"
 var $74=((($73)-(1))|0); //@line 212 "lib/lua-5.2.3/src/ltablib.c"
 _set2($71,$72,$74); //@line 212 "lib/lua-5.2.3/src/ltablib.c"
 var $75=$2; //@line 214 "lib/lua-5.2.3/src/ltablib.c"
 $i=$75; //@line 214 "lib/lua-5.2.3/src/ltablib.c"
 var $76=$3; //@line 214 "lib/lua-5.2.3/src/ltablib.c"
 var $77=((($76)-(1))|0); //@line 214 "lib/lua-5.2.3/src/ltablib.c"
 $j=$77; //@line 214 "lib/lua-5.2.3/src/ltablib.c"
 label=17;break; //@line 215 "lib/lua-5.2.3/src/ltablib.c"
 case 17: 
 label=18;break; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 case 18: 
 var $80=$1; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 var $81=$i; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 var $82=((($81)+(1))|0); //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 $i=$82; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($80,1,$82); //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 var $83=$1; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 var $84=_sort_comp($83,-1,-2); //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 var $85=($84|0)!=0; //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 if($85){label=19;break;}else{label=22;break;} //@line 217 "lib/lua-5.2.3/src/ltablib.c"
 case 19: 
 var $87=$i; //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 var $88=$3; //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 var $89=($87|0)>=($88|0); //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 if($89){label=20;break;}else{label=21;break;} //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 case 20: 
 var $91=$1; //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 var $92=_luaL_error($91,4312,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 label=21;break; //@line 218 "lib/lua-5.2.3/src/ltablib.c"
 case 21: 
 var $94=$1; //@line 219 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($94,-2); //@line 219 "lib/lua-5.2.3/src/ltablib.c"
 label=18;break; //@line 220 "lib/lua-5.2.3/src/ltablib.c"
 case 22: 
 label=23;break; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 case 23: 
 var $97=$1; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 var $98=$j; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 var $99=((($98)-(1))|0); //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 $j=$99; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($97,1,$99); //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 var $100=$1; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 var $101=_sort_comp($100,-3,-1); //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 var $102=($101|0)!=0; //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 if($102){label=24;break;}else{label=27;break;} //@line 222 "lib/lua-5.2.3/src/ltablib.c"
 case 24: 
 var $104=$j; //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 var $105=$2; //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 var $106=($104|0)<=($105|0); //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 if($106){label=25;break;}else{label=26;break;} //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 case 25: 
 var $108=$1; //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 var $109=_luaL_error($108,4312,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 label=26;break; //@line 223 "lib/lua-5.2.3/src/ltablib.c"
 case 26: 
 var $111=$1; //@line 224 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($111,-2); //@line 224 "lib/lua-5.2.3/src/ltablib.c"
 label=23;break; //@line 225 "lib/lua-5.2.3/src/ltablib.c"
 case 27: 
 var $113=$j; //@line 226 "lib/lua-5.2.3/src/ltablib.c"
 var $114=$i; //@line 226 "lib/lua-5.2.3/src/ltablib.c"
 var $115=($113|0)<($114|0); //@line 226 "lib/lua-5.2.3/src/ltablib.c"
 if($115){label=28;break;}else{label=29;break;} //@line 226 "lib/lua-5.2.3/src/ltablib.c"
 case 28: 
 var $117=$1; //@line 227 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($117,-4); //@line 227 "lib/lua-5.2.3/src/ltablib.c"
 label=30;break; //@line 228 "lib/lua-5.2.3/src/ltablib.c"
 case 29: 
 var $119=$1; //@line 230 "lib/lua-5.2.3/src/ltablib.c"
 var $120=$i; //@line 230 "lib/lua-5.2.3/src/ltablib.c"
 var $121=$j; //@line 230 "lib/lua-5.2.3/src/ltablib.c"
 _set2($119,$120,$121); //@line 230 "lib/lua-5.2.3/src/ltablib.c"
 label=17;break; //@line 231 "lib/lua-5.2.3/src/ltablib.c"
 case 30: 
 var $123=$1; //@line 232 "lib/lua-5.2.3/src/ltablib.c"
 var $124=$3; //@line 232 "lib/lua-5.2.3/src/ltablib.c"
 var $125=((($124)-(1))|0); //@line 232 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($123,1,$125); //@line 232 "lib/lua-5.2.3/src/ltablib.c"
 var $126=$1; //@line 233 "lib/lua-5.2.3/src/ltablib.c"
 var $127=$i; //@line 233 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($126,1,$127); //@line 233 "lib/lua-5.2.3/src/ltablib.c"
 var $128=$1; //@line 234 "lib/lua-5.2.3/src/ltablib.c"
 var $129=$3; //@line 234 "lib/lua-5.2.3/src/ltablib.c"
 var $130=((($129)-(1))|0); //@line 234 "lib/lua-5.2.3/src/ltablib.c"
 var $131=$i; //@line 234 "lib/lua-5.2.3/src/ltablib.c"
 _set2($128,$130,$131); //@line 234 "lib/lua-5.2.3/src/ltablib.c"
 var $132=$i; //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $133=$2; //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $134=((($132)-($133))|0); //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $135=$3; //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $136=$i; //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $137=((($135)-($136))|0); //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 var $138=($134|0)<($137|0); //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 if($138){label=31;break;}else{label=32;break;} //@line 237 "lib/lua-5.2.3/src/ltablib.c"
 case 31: 
 var $140=$2; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 $j=$140; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 var $141=$i; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 var $142=((($141)-(1))|0); //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 $i=$142; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 var $143=$i; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 var $144=((($143)+(2))|0); //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 $2=$144; //@line 238 "lib/lua-5.2.3/src/ltablib.c"
 label=33;break; //@line 239 "lib/lua-5.2.3/src/ltablib.c"
 case 32: 
 var $146=$i; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 var $147=((($146)+(1))|0); //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 $j=$147; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 var $148=$3; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 $i=$148; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 var $149=$j; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 var $150=((($149)-(2))|0); //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 $3=$150; //@line 241 "lib/lua-5.2.3/src/ltablib.c"
 label=33;break;
 case 33: 
 var $152=$1; //@line 243 "lib/lua-5.2.3/src/ltablib.c"
 var $153=$j; //@line 243 "lib/lua-5.2.3/src/ltablib.c"
 var $154=$i; //@line 243 "lib/lua-5.2.3/src/ltablib.c"
 _auxsort($152,$153,$154); //@line 243 "lib/lua-5.2.3/src/ltablib.c"
 label=2;break; //@line 244 "lib/lua-5.2.3/src/ltablib.c"
 case 34: 
 STACKTOP=sp;return; //@line 245 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _sort_comp($L,$a,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $res;
 $2=$L;
 $3=$a;
 $4=$b;
 var $5=$2; //@line 170 "lib/lua-5.2.3/src/ltablib.c"
 var $6=_lua_type($5,2); //@line 170 "lib/lua-5.2.3/src/ltablib.c"
 var $7=($6|0)==0; //@line 170 "lib/lua-5.2.3/src/ltablib.c"
 if($7){label=3;break;}else{label=2;break;} //@line 170 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $9=$2; //@line 172 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushvalue($9,2); //@line 172 "lib/lua-5.2.3/src/ltablib.c"
 var $10=$2; //@line 173 "lib/lua-5.2.3/src/ltablib.c"
 var $11=$3; //@line 173 "lib/lua-5.2.3/src/ltablib.c"
 var $12=((($11)-(1))|0); //@line 173 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushvalue($10,$12); //@line 173 "lib/lua-5.2.3/src/ltablib.c"
 var $13=$2; //@line 174 "lib/lua-5.2.3/src/ltablib.c"
 var $14=$4; //@line 174 "lib/lua-5.2.3/src/ltablib.c"
 var $15=((($14)-(2))|0); //@line 174 "lib/lua-5.2.3/src/ltablib.c"
 _lua_pushvalue($13,$15); //@line 174 "lib/lua-5.2.3/src/ltablib.c"
 var $16=$2; //@line 175 "lib/lua-5.2.3/src/ltablib.c"
 _lua_callk($16,2,1,0,0); //@line 175 "lib/lua-5.2.3/src/ltablib.c"
 var $17=$2; //@line 176 "lib/lua-5.2.3/src/ltablib.c"
 var $18=_lua_toboolean($17,-1); //@line 176 "lib/lua-5.2.3/src/ltablib.c"
 $res=$18; //@line 176 "lib/lua-5.2.3/src/ltablib.c"
 var $19=$2; //@line 177 "lib/lua-5.2.3/src/ltablib.c"
 _lua_settop($19,-2); //@line 177 "lib/lua-5.2.3/src/ltablib.c"
 var $20=$res; //@line 178 "lib/lua-5.2.3/src/ltablib.c"
 $1=$20; //@line 178 "lib/lua-5.2.3/src/ltablib.c"
 label=4;break; //@line 178 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $22=$2; //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 var $23=$3; //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 var $24=$4; //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 var $25=_lua_compare($22,$23,$24,1); //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 $1=$25; //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 label=4;break; //@line 181 "lib/lua-5.2.3/src/ltablib.c"
 case 4: 
 var $27=$1; //@line 182 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return $27; //@line 182 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _set2($L,$i,$j){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$i;
 $3=$j;
 var $4=$1; //@line 165 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$2; //@line 165 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($4,1,$5); //@line 165 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$1; //@line 166 "lib/lua-5.2.3/src/ltablib.c"
 var $7=$3; //@line 166 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawseti($6,1,$7); //@line 166 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return; //@line 167 "lib/lua-5.2.3/src/ltablib.c"
}


function _addfield($L,$b,$i){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$b;
 $3=$i;
 var $4=$1; //@line 85 "lib/lua-5.2.3/src/ltablib.c"
 var $5=$3; //@line 85 "lib/lua-5.2.3/src/ltablib.c"
 _lua_rawgeti($4,1,$5); //@line 85 "lib/lua-5.2.3/src/ltablib.c"
 var $6=$1; //@line 86 "lib/lua-5.2.3/src/ltablib.c"
 var $7=_lua_isstring($6,-1); //@line 86 "lib/lua-5.2.3/src/ltablib.c"
 var $8=($7|0)!=0; //@line 86 "lib/lua-5.2.3/src/ltablib.c"
 if($8){label=3;break;}else{label=2;break;} //@line 86 "lib/lua-5.2.3/src/ltablib.c"
 case 2: 
 var $10=$1; //@line 87 "lib/lua-5.2.3/src/ltablib.c"
 var $11=$1; //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 var $12=$1; //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 var $13=_lua_type($12,-1); //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 var $14=_lua_typename($11,$13); //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 var $15=$3; //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 var $16=_luaL_error($10,15224,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAP32[(((tempVarArgs)+(8))>>2)]=$15,tempVarArgs)); STACKTOP=tempVarArgs; //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 label=3;break; //@line 88 "lib/lua-5.2.3/src/ltablib.c"
 case 3: 
 var $18=$2; //@line 89 "lib/lua-5.2.3/src/ltablib.c"
 _luaL_addvalue($18); //@line 89 "lib/lua-5.2.3/src/ltablib.c"
 STACKTOP=sp;return; //@line 90 "lib/lua-5.2.3/src/ltablib.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_tonumber($obj,$n){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $num=sp;
 var $io;
 $2=$obj;
 $3=$n;
 var $4=$2; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 var $5=(($4+8)|0); //@line 37 "lib/lua-5.2.3/src/lvm.c"
 var $6=HEAP32[(($5)>>2)]; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 var $7=($6|0)==3; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 if($7){label=2;break;}else{label=3;break;} //@line 37 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $9=$2; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 $1=$9; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 label=7;break; //@line 37 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $11=$2; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $12=(($11+8)|0); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $13=HEAP32[(($12)>>2)]; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $14=$13&15; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $15=($14|0)==4; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 if($15){label=4;break;}else{label=6;break;} //@line 38 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $17=$2; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $18=(($17)|0); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $19=$18; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $20=HEAP32[(($19)>>2)]; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $21=$20; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21+16)|0); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $23=$22; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $24=$2; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $25=(($24)|0); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $26=$25; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $27=HEAP32[(($26)>>2)]; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $28=$27; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $29=$28; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $30=(($29+12)|0); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $31=HEAP32[(($30)>>2)]; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $32=_luaO_str2d($23,$31,$num); //@line 38 "lib/lua-5.2.3/src/lvm.c"
 var $33=($32|0)!=0; //@line 38 "lib/lua-5.2.3/src/lvm.c"
 if($33){label=5;break;}else{label=6;break;} //@line 38 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $35=$3; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 $io=$35; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $36=HEAPF64[(($num)>>3)]; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $37=$io; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $38=(($37)|0); //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $39=$38; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($39)>>3)]=$36; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $40=$io; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $41=(($40+8)|0); //@line 39 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($41)>>2)]=3; //@line 39 "lib/lua-5.2.3/src/lvm.c"
 var $42=$3; //@line 40 "lib/lua-5.2.3/src/lvm.c"
 $1=$42; //@line 40 "lib/lua-5.2.3/src/lvm.c"
 label=7;break; //@line 40 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 $1=0; //@line 43 "lib/lua-5.2.3/src/lvm.c"
 label=7;break; //@line 43 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $45=$1; //@line 44 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $45; //@line 44 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_tostring($L,$obj){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $s=sp;
 var $n;
 var $l;
 var $io;
 var $x_;
 $2=$L;
 $3=$obj;
 var $4=$3; //@line 48 "lib/lua-5.2.3/src/lvm.c"
 var $5=(($4+8)|0); //@line 48 "lib/lua-5.2.3/src/lvm.c"
 var $6=HEAP32[(($5)>>2)]; //@line 48 "lib/lua-5.2.3/src/lvm.c"
 var $7=($6|0)==3; //@line 48 "lib/lua-5.2.3/src/lvm.c"
 if($7){label=3;break;}else{label=2;break;} //@line 48 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 $1=0; //@line 49 "lib/lua-5.2.3/src/lvm.c"
 label=4;break; //@line 49 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $10=$3; //@line 52 "lib/lua-5.2.3/src/lvm.c"
 var $11=(($10)|0); //@line 52 "lib/lua-5.2.3/src/lvm.c"
 var $12=$11; //@line 52 "lib/lua-5.2.3/src/lvm.c"
 var $13=HEAPF64[(($12)>>3)]; //@line 52 "lib/lua-5.2.3/src/lvm.c"
 $n=$13; //@line 52 "lib/lua-5.2.3/src/lvm.c"
 var $14=(($s)|0); //@line 53 "lib/lua-5.2.3/src/lvm.c"
 var $15=$n; //@line 53 "lib/lua-5.2.3/src/lvm.c"
 var $16=_sprintf($14,16032,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$15,tempVarArgs)); STACKTOP=tempVarArgs; //@line 53 "lib/lua-5.2.3/src/lvm.c"
 $l=$16; //@line 53 "lib/lua-5.2.3/src/lvm.c"
 var $17=$3; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 $io=$17; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $18=$2; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $19=(($s)|0); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $20=$l; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $21=_luaS_newlstr($18,$19,$20); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 $x_=$21; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $22=$x_; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $23=$22; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $24=$io; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $25=(($24)|0); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $26=$25; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($26)>>2)]=$23; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $27=$x_; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $28=$27; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $29=(($28+4)|0); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $30=HEAP8[($29)]; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $31=($30&255); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $32=$31|64; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $33=$io; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+8)|0); //@line 54 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($34)>>2)]=$32; //@line 54 "lib/lua-5.2.3/src/lvm.c"
 $1=1; //@line 55 "lib/lua-5.2.3/src/lvm.c"
 label=4;break; //@line 55 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $36=$1; //@line 57 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $36; //@line 57 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_gettable($L,$t,$key,$val){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $loop;
 var $tm;
 var $h;
 var $res;
 var $io2;
 var $io1;
 $1=$L;
 $2=$t;
 $3=$key;
 $4=$val;
 $loop=0; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $6=$loop; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 var $7=($6|0)<100; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 if($7){label=3;break;}else{label=21;break;} //@line 112 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $9=$2; //@line 114 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9+8)|0); //@line 114 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 114 "lib/lua-5.2.3/src/lvm.c"
 var $12=($11|0)==69; //@line 114 "lib/lua-5.2.3/src/lvm.c"
 if($12){label=4;break;}else{label=14;break;} //@line 114 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $14=$2; //@line 115 "lib/lua-5.2.3/src/lvm.c"
 var $15=(($14)|0); //@line 115 "lib/lua-5.2.3/src/lvm.c"
 var $16=$15; //@line 115 "lib/lua-5.2.3/src/lvm.c"
 var $17=HEAP32[(($16)>>2)]; //@line 115 "lib/lua-5.2.3/src/lvm.c"
 var $18=$17; //@line 115 "lib/lua-5.2.3/src/lvm.c"
 $h=$18; //@line 115 "lib/lua-5.2.3/src/lvm.c"
 var $19=$h; //@line 116 "lib/lua-5.2.3/src/lvm.c"
 var $20=$3; //@line 116 "lib/lua-5.2.3/src/lvm.c"
 var $21=_luaH_get($19,$20); //@line 116 "lib/lua-5.2.3/src/lvm.c"
 $res=$21; //@line 116 "lib/lua-5.2.3/src/lvm.c"
 var $22=$res; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $23=(($22+8)|0); //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $24=HEAP32[(($23)>>2)]; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $25=($24|0)==0; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 if($25){label=5;break;}else{label=12;break;} //@line 117 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $27=$h; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $28=(($27+8)|0); //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $29=HEAP32[(($28)>>2)]; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $30=($29|0)==0; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 if($30){label=6;break;}else{label=7;break;} //@line 117 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $56=0;label=11;break; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $33=$h; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+8)|0); //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $35=HEAP32[(($34)>>2)]; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $36=(($35+6)|0); //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $37=HEAP8[($36)]; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $38=($37&255); //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $39=$38&1; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 var $40=($39|0)!=0; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 if($40){label=8;break;}else{label=9;break;} //@line 117 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $54=0;label=10;break; //@line 117 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $43=$h; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43+8)|0); //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $45=HEAP32[(($44)>>2)]; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $46=$1; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $47=(($46+12)|0); //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $48=HEAP32[(($47)>>2)]; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $49=(($48+184)|0); //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $50=(($49)|0); //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $51=HEAP32[(($50)>>2)]; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $52=_luaT_gettm($45,0,$51); //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $54=$52;label=10;break; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $54; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $56=$54;label=11;break; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $56; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 $tm=$56; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 var $57=($56|0)==0; //@line 118 "lib/lua-5.2.3/src/lvm.c"
 if($57){label=12;break;}else{label=13;break;} //@line 118 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $59=$res; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 $io2=$59; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $60=$4; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 $io1=$60; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $61=$io1; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $62=(($61)|0); //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $63=$io2; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $64=(($63)|0); //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $65=$62; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $66=$64; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($65)>>2)]=HEAP32[(($66)>>2)];HEAP32[((($65)+(4))>>2)]=HEAP32[((($66)+(4))>>2)]; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $67=$io2; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $68=(($67+8)|0); //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $69=HEAP32[(($68)>>2)]; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $70=$io1; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 var $71=(($70+8)|0); //@line 119 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($71)>>2)]=$69; //@line 119 "lib/lua-5.2.3/src/lvm.c"
 label=22;break; //@line 120 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 label=17;break; //@line 123 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $74=$1; //@line 124 "lib/lua-5.2.3/src/lvm.c"
 var $75=$2; //@line 124 "lib/lua-5.2.3/src/lvm.c"
 var $76=_luaT_gettmbyobj($74,$75,0); //@line 124 "lib/lua-5.2.3/src/lvm.c"
 $tm=$76; //@line 124 "lib/lua-5.2.3/src/lvm.c"
 var $77=(($76+8)|0); //@line 124 "lib/lua-5.2.3/src/lvm.c"
 var $78=HEAP32[(($77)>>2)]; //@line 124 "lib/lua-5.2.3/src/lvm.c"
 var $79=($78|0)==0; //@line 124 "lib/lua-5.2.3/src/lvm.c"
 if($79){label=15;break;}else{label=16;break;} //@line 124 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $81=$1; //@line 125 "lib/lua-5.2.3/src/lvm.c"
 var $82=$2; //@line 125 "lib/lua-5.2.3/src/lvm.c"
 _luaG_typeerror($81,$82,15808); //@line 125 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 125 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 label=17;break;
 case 17: 
 var $85=$tm; //@line 126 "lib/lua-5.2.3/src/lvm.c"
 var $86=(($85+8)|0); //@line 126 "lib/lua-5.2.3/src/lvm.c"
 var $87=HEAP32[(($86)>>2)]; //@line 126 "lib/lua-5.2.3/src/lvm.c"
 var $88=$87&15; //@line 126 "lib/lua-5.2.3/src/lvm.c"
 var $89=($88|0)==6; //@line 126 "lib/lua-5.2.3/src/lvm.c"
 if($89){label=18;break;}else{label=19;break;} //@line 126 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 var $91=$1; //@line 127 "lib/lua-5.2.3/src/lvm.c"
 var $92=$tm; //@line 127 "lib/lua-5.2.3/src/lvm.c"
 var $93=$2; //@line 127 "lib/lua-5.2.3/src/lvm.c"
 var $94=$3; //@line 127 "lib/lua-5.2.3/src/lvm.c"
 var $95=$4; //@line 127 "lib/lua-5.2.3/src/lvm.c"
 _callTM($91,$92,$93,$94,$95,1); //@line 127 "lib/lua-5.2.3/src/lvm.c"
 label=22;break; //@line 128 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 var $97=$tm; //@line 130 "lib/lua-5.2.3/src/lvm.c"
 $2=$97; //@line 130 "lib/lua-5.2.3/src/lvm.c"
 label=20;break; //@line 131 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 var $99=$loop; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 var $100=((($99)+(1))|0); //@line 112 "lib/lua-5.2.3/src/lvm.c"
 $loop=$100; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 112 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $102=$1; //@line 132 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($102,12232,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 132 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 132 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 STACKTOP=sp;return; //@line 133 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _callTM($L,$f,$p1,$p2,$p3,$hasres){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $result;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 var $io23;
 var $io14;
 var $io25;
 var $io16;
 var $io27;
 var $io18;
 $1=$L;
 $2=$f;
 $3=$p1;
 $4=$p2;
 $5=$p3;
 $6=$hasres;
 var $7=$5; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $8=$7; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $9=$1; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9+28)|0); //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $12=$11; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $13=$8; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $14=$12; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $15=((($13)-($14))|0); //@line 95 "lib/lua-5.2.3/src/lvm.c"
 $result=$15; //@line 95 "lib/lua-5.2.3/src/lvm.c"
 var $16=$2; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 $io2=$16; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $17=$1; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $18=(($17+8)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $19=HEAP32[(($18)>>2)]; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $20=(($19+16)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($18)>>2)]=$20; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 $io1=$19; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $21=$io1; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $23=$io2; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $24=(($23)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $25=$22; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $26=$24; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($25)>>2)]=HEAP32[(($26)>>2)];HEAP32[((($25)+(4))>>2)]=HEAP32[((($26)+(4))>>2)]; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $27=$io2; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $28=(($27+8)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $29=HEAP32[(($28)>>2)]; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $30=$io1; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $31=(($30+8)|0); //@line 96 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($31)>>2)]=$29; //@line 96 "lib/lua-5.2.3/src/lvm.c"
 var $32=$3; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 $io21=$32; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $33=$1; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+8)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $35=HEAP32[(($34)>>2)]; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $36=(($35+16)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($34)>>2)]=$36; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 $io12=$35; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $37=$io12; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $38=(($37)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $39=$io21; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $40=(($39)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $41=$38; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $42=$40; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($41)>>2)]=HEAP32[(($42)>>2)];HEAP32[((($41)+(4))>>2)]=HEAP32[((($42)+(4))>>2)]; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $43=$io21; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43+8)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $45=HEAP32[(($44)>>2)]; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $46=$io12; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $47=(($46+8)|0); //@line 97 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($47)>>2)]=$45; //@line 97 "lib/lua-5.2.3/src/lvm.c"
 var $48=$4; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 $io23=$48; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $49=$1; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $50=(($49+8)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $51=HEAP32[(($50)>>2)]; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $52=(($51+16)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($50)>>2)]=$52; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 $io14=$51; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $53=$io14; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $54=(($53)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $55=$io23; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $57=$54; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $58=$56; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($57)>>2)]=HEAP32[(($58)>>2)];HEAP32[((($57)+(4))>>2)]=HEAP32[((($58)+(4))>>2)]; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $59=$io23; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $60=(($59+8)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $61=HEAP32[(($60)>>2)]; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $62=$io14; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $63=(($62+8)|0); //@line 98 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($63)>>2)]=$61; //@line 98 "lib/lua-5.2.3/src/lvm.c"
 var $64=$6; //@line 99 "lib/lua-5.2.3/src/lvm.c"
 var $65=($64|0)!=0; //@line 99 "lib/lua-5.2.3/src/lvm.c"
 if($65){label=3;break;}else{label=2;break;} //@line 99 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $67=$5; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 $io25=$67; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $68=$1; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $69=(($68+8)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $70=HEAP32[(($69)>>2)]; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $71=(($70+16)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($69)>>2)]=$71; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 $io16=$70; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $72=$io16; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $73=(($72)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $74=$io25; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $75=(($74)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $76=$73; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $77=$75; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($76)>>2)]=HEAP32[(($77)>>2)];HEAP32[((($76)+(4))>>2)]=HEAP32[((($77)+(4))>>2)]; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $78=$io25; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $79=(($78+8)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $80=HEAP32[(($79)>>2)]; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $81=$io16; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 var $82=(($81+8)|0); //@line 100 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($82)>>2)]=$80; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 label=3;break; //@line 100 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $84=$1; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $85=$1; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $86=(($85+8)|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $87=HEAP32[(($86)>>2)]; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $88=$6; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $89=(((4)-($88))|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $90=(((-$89))|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $91=(($87+($90<<4))|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $92=$6; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $93=$1; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $94=(($93+16)|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $95=HEAP32[(($94)>>2)]; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $96=(($95+18)|0); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $97=HEAP8[($96)]; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $98=($97&255); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $99=$98&1; //@line 102 "lib/lua-5.2.3/src/lvm.c"
 _luaD_call($84,$91,$92,$99); //@line 102 "lib/lua-5.2.3/src/lvm.c"
 var $100=$6; //@line 103 "lib/lua-5.2.3/src/lvm.c"
 var $101=($100|0)!=0; //@line 103 "lib/lua-5.2.3/src/lvm.c"
 if($101){label=4;break;}else{label=5;break;} //@line 103 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $103=$1; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $104=(($103+28)|0); //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $105=HEAP32[(($104)>>2)]; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $106=$105; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $107=$result; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $108=(($106+$107)|0); //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $109=$108; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 $5=$109; //@line 104 "lib/lua-5.2.3/src/lvm.c"
 var $110=$1; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $111=(($110+8)|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $112=HEAP32[(($111)>>2)]; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $113=((($112)-(16))|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($111)>>2)]=$113; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 $io27=$113; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $114=$5; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 $io18=$114; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $115=$io18; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $116=(($115)|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $117=$io27; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $118=(($117)|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $119=$116; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $120=$118; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($119)>>2)]=HEAP32[(($120)>>2)];HEAP32[((($119)+(4))>>2)]=HEAP32[((($120)+(4))>>2)]; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $121=$io27; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $122=(($121+8)|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $123=HEAP32[(($122)>>2)]; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $124=$io18; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 var $125=(($124+8)|0); //@line 105 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($125)>>2)]=$123; //@line 105 "lib/lua-5.2.3/src/lvm.c"
 label=5;break; //@line 106 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 STACKTOP=sp;return; //@line 107 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_settable($L,$t,$key,$val){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $loop;
 var $tm;
 var $h;
 var $oldval;
 var $io2;
 var $io1;
 $1=$L;
 $2=$t;
 $3=$key;
 $4=$val;
 $loop=0; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $6=$loop; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 var $7=($6|0)<100; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 if($7){label=3;break;}else{label=27;break;} //@line 138 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $9=$2; //@line 140 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9+8)|0); //@line 140 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 140 "lib/lua-5.2.3/src/lvm.c"
 var $12=($11|0)==69; //@line 140 "lib/lua-5.2.3/src/lvm.c"
 if($12){label=4;break;}else{label=20;break;} //@line 140 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $14=$2; //@line 141 "lib/lua-5.2.3/src/lvm.c"
 var $15=(($14)|0); //@line 141 "lib/lua-5.2.3/src/lvm.c"
 var $16=$15; //@line 141 "lib/lua-5.2.3/src/lvm.c"
 var $17=HEAP32[(($16)>>2)]; //@line 141 "lib/lua-5.2.3/src/lvm.c"
 var $18=$17; //@line 141 "lib/lua-5.2.3/src/lvm.c"
 $h=$18; //@line 141 "lib/lua-5.2.3/src/lvm.c"
 var $19=$h; //@line 142 "lib/lua-5.2.3/src/lvm.c"
 var $20=$3; //@line 142 "lib/lua-5.2.3/src/lvm.c"
 var $21=_luaH_get($19,$20); //@line 142 "lib/lua-5.2.3/src/lvm.c"
 $oldval=$21; //@line 142 "lib/lua-5.2.3/src/lvm.c"
 var $22=$oldval; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $23=(($22+8)|0); //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $24=HEAP32[(($23)>>2)]; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $25=($24|0)==0; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 if($25){label=5;break;}else{label=14;break;} //@line 145 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $27=$h; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $28=(($27+8)|0); //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $29=HEAP32[(($28)>>2)]; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $30=($29|0)==0; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 if($30){label=6;break;}else{label=7;break;} //@line 145 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $56=0;label=11;break; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $33=$h; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+8)|0); //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $35=HEAP32[(($34)>>2)]; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $36=(($35+6)|0); //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $37=HEAP8[($36)]; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $38=($37&255); //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $39=$38&2; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 var $40=($39|0)!=0; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 if($40){label=8;break;}else{label=9;break;} //@line 145 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $54=0;label=10;break; //@line 145 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $43=$h; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43+8)|0); //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $45=HEAP32[(($44)>>2)]; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $46=$1; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $47=(($46+12)|0); //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $48=HEAP32[(($47)>>2)]; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $49=(($48+184)|0); //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $50=(($49+4)|0); //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $51=HEAP32[(($50)>>2)]; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $52=_luaT_gettm($45,1,$51); //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $54=$52;label=10;break; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $54; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $56=$54;label=11;break; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $56; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 $tm=$56; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $57=($56|0)==0; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 if($57){label=12;break;}else{label=19;break;} //@line 147 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $59=$oldval; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 var $60=($59|0)!=1376; //@line 147 "lib/lua-5.2.3/src/lvm.c"
 if($60){label=14;break;}else{label=13;break;} //@line 147 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $62=$1; //@line 152 "lib/lua-5.2.3/src/lvm.c"
 var $63=$h; //@line 152 "lib/lua-5.2.3/src/lvm.c"
 var $64=$3; //@line 152 "lib/lua-5.2.3/src/lvm.c"
 var $65=_luaH_newkey($62,$63,$64); //@line 152 "lib/lua-5.2.3/src/lvm.c"
 $oldval=$65; //@line 152 "lib/lua-5.2.3/src/lvm.c"
 if(1){label=14;break;}else{label=19;break;} //@line 152 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $67=$4; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 $io2=$67; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $68=$oldval; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 $io1=$68; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $69=$io1; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $70=(($69)|0); //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $71=$io2; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $72=(($71)|0); //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $73=$70; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $74=$72; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($73)>>2)]=HEAP32[(($74)>>2)];HEAP32[((($73)+(4))>>2)]=HEAP32[((($74)+(4))>>2)]; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $75=$io2; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $76=(($75+8)|0); //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $77=HEAP32[(($76)>>2)]; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $78=$io1; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $79=(($78+8)|0); //@line 154 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($79)>>2)]=$77; //@line 154 "lib/lua-5.2.3/src/lvm.c"
 var $80=$h; //@line 155 "lib/lua-5.2.3/src/lvm.c"
 var $81=(($80+6)|0); //@line 155 "lib/lua-5.2.3/src/lvm.c"
 HEAP8[($81)]=0; //@line 155 "lib/lua-5.2.3/src/lvm.c"
 var $82=$4; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $83=(($82+8)|0); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $84=HEAP32[(($83)>>2)]; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $85=$84&64; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $86=($85|0)!=0; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 if($86){label=15;break;}else{label=18;break;} //@line 156 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $88=$4; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $89=(($88)|0); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $90=$89; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $91=HEAP32[(($90)>>2)]; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $92=$91; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $93=(($92+5)|0); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $94=HEAP8[($93)]; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $95=($94&255); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $96=$95&3; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $97=($96|0)!=0; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 if($97){label=16;break;}else{label=18;break;} //@line 156 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 var $99=$h; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $100=$99; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $101=$100; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $102=(($101+5)|0); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $103=HEAP8[($102)]; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $104=($103&255); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $105=$104&4; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $106=($105|0)!=0; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 if($106){label=17;break;}else{label=18;break;} //@line 156 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 var $108=$1; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $109=$h; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 var $110=$109; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 _luaC_barrierback_($108,$110); //@line 156 "lib/lua-5.2.3/src/lvm.c"
 label=18;break; //@line 156 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 label=28;break; //@line 157 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 label=23;break; //@line 160 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 var $114=$1; //@line 162 "lib/lua-5.2.3/src/lvm.c"
 var $115=$2; //@line 162 "lib/lua-5.2.3/src/lvm.c"
 var $116=_luaT_gettmbyobj($114,$115,1); //@line 162 "lib/lua-5.2.3/src/lvm.c"
 $tm=$116; //@line 162 "lib/lua-5.2.3/src/lvm.c"
 var $117=(($116+8)|0); //@line 162 "lib/lua-5.2.3/src/lvm.c"
 var $118=HEAP32[(($117)>>2)]; //@line 162 "lib/lua-5.2.3/src/lvm.c"
 var $119=($118|0)==0; //@line 162 "lib/lua-5.2.3/src/lvm.c"
 if($119){label=21;break;}else{label=22;break;} //@line 162 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $121=$1; //@line 163 "lib/lua-5.2.3/src/lvm.c"
 var $122=$2; //@line 163 "lib/lua-5.2.3/src/lvm.c"
 _luaG_typeerror($121,$122,15808); //@line 163 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 163 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 label=23;break;
 case 23: 
 var $125=$tm; //@line 165 "lib/lua-5.2.3/src/lvm.c"
 var $126=(($125+8)|0); //@line 165 "lib/lua-5.2.3/src/lvm.c"
 var $127=HEAP32[(($126)>>2)]; //@line 165 "lib/lua-5.2.3/src/lvm.c"
 var $128=$127&15; //@line 165 "lib/lua-5.2.3/src/lvm.c"
 var $129=($128|0)==6; //@line 165 "lib/lua-5.2.3/src/lvm.c"
 if($129){label=24;break;}else{label=25;break;} //@line 165 "lib/lua-5.2.3/src/lvm.c"
 case 24: 
 var $131=$1; //@line 166 "lib/lua-5.2.3/src/lvm.c"
 var $132=$tm; //@line 166 "lib/lua-5.2.3/src/lvm.c"
 var $133=$2; //@line 166 "lib/lua-5.2.3/src/lvm.c"
 var $134=$3; //@line 166 "lib/lua-5.2.3/src/lvm.c"
 var $135=$4; //@line 166 "lib/lua-5.2.3/src/lvm.c"
 _callTM($131,$132,$133,$134,$135,0); //@line 166 "lib/lua-5.2.3/src/lvm.c"
 label=28;break; //@line 167 "lib/lua-5.2.3/src/lvm.c"
 case 25: 
 var $137=$tm; //@line 169 "lib/lua-5.2.3/src/lvm.c"
 $2=$137; //@line 169 "lib/lua-5.2.3/src/lvm.c"
 label=26;break; //@line 170 "lib/lua-5.2.3/src/lvm.c"
 case 26: 
 var $139=$loop; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 var $140=((($139)+(1))|0); //@line 138 "lib/lua-5.2.3/src/lvm.c"
 $loop=$140; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 138 "lib/lua-5.2.3/src/lvm.c"
 case 27: 
 var $142=$1; //@line 171 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($142,9184,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 171 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 171 "lib/lua-5.2.3/src/lvm.c"
 case 28: 
 STACKTOP=sp;return; //@line 172 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_lessthan($L,$l,$r){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $res;
 $2=$L;
 $3=$l;
 $4=$r;
 var $5=$3; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $6=(($5+8)|0); //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $7=HEAP32[(($6)>>2)]; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $8=($7|0)==3; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 if($8){label=2;break;}else{label=4;break;} //@line 233 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $10=$4; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $11=(($10+8)|0); //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $12=HEAP32[(($11)>>2)]; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 var $13=($12|0)==3; //@line 233 "lib/lua-5.2.3/src/lvm.c"
 if($13){label=3;break;}else{label=4;break;} //@line 233 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $15=$3; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15)|0); //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $17=$16; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $18=HEAPF64[(($17)>>3)]; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $19=$4; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $20=(($19)|0); //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $21=$20; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $22=HEAPF64[(($21)>>3)]; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $23=$18<$22; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 var $24=($23&1); //@line 234 "lib/lua-5.2.3/src/lvm.c"
 $1=$24; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 label=12;break; //@line 234 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $26=$3; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26+8)|0); //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $28=HEAP32[(($27)>>2)]; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $29=$28&15; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $30=($29|0)==4; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 if($30){label=5;break;}else{label=7;break;} //@line 235 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $32=$4; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $33=(($32+8)|0); //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $34=HEAP32[(($33)>>2)]; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $35=$34&15; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 var $36=($35|0)==4; //@line 235 "lib/lua-5.2.3/src/lvm.c"
 if($36){label=6;break;}else{label=7;break;} //@line 235 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $38=$3; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $39=(($38)|0); //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $40=$39; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $41=HEAP32[(($40)>>2)]; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $42=$41; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $43=$4; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43)|0); //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $45=$44; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $46=HEAP32[(($45)>>2)]; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $47=$46; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $48=_l_strcmp($42,$47); //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $49=($48|0)<0; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 var $50=($49&1); //@line 236 "lib/lua-5.2.3/src/lvm.c"
 $1=$50; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 label=12;break; //@line 236 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $52=$2; //@line 237 "lib/lua-5.2.3/src/lvm.c"
 var $53=$3; //@line 237 "lib/lua-5.2.3/src/lvm.c"
 var $54=$4; //@line 237 "lib/lua-5.2.3/src/lvm.c"
 var $55=_call_orderTM($52,$53,$54,13); //@line 237 "lib/lua-5.2.3/src/lvm.c"
 $res=$55; //@line 237 "lib/lua-5.2.3/src/lvm.c"
 var $56=($55|0)<0; //@line 237 "lib/lua-5.2.3/src/lvm.c"
 if($56){label=8;break;}else{label=9;break;} //@line 237 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $58=$2; //@line 238 "lib/lua-5.2.3/src/lvm.c"
 var $59=$3; //@line 238 "lib/lua-5.2.3/src/lvm.c"
 var $60=$4; //@line 238 "lib/lua-5.2.3/src/lvm.c"
 _luaG_ordererror($58,$59,$60); //@line 238 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 238 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 label=10;break;
 case 10: 
 label=11;break;
 case 11: 
 var $64=$res; //@line 239 "lib/lua-5.2.3/src/lvm.c"
 $1=$64; //@line 239 "lib/lua-5.2.3/src/lvm.c"
 label=12;break; //@line 239 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $66=$1; //@line 240 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $66; //@line 240 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _l_strcmp($ls,$rs){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $l;
 var $ll;
 var $r;
 var $lr;
 var $temp;
 var $len;
 $2=$ls;
 $3=$rs;
 var $4=$2; //@line 210 "lib/lua-5.2.3/src/lvm.c"
 var $5=(($4+16)|0); //@line 210 "lib/lua-5.2.3/src/lvm.c"
 var $6=$5; //@line 210 "lib/lua-5.2.3/src/lvm.c"
 $l=$6; //@line 210 "lib/lua-5.2.3/src/lvm.c"
 var $7=$2; //@line 211 "lib/lua-5.2.3/src/lvm.c"
 var $8=$7; //@line 211 "lib/lua-5.2.3/src/lvm.c"
 var $9=(($8+12)|0); //@line 211 "lib/lua-5.2.3/src/lvm.c"
 var $10=HEAP32[(($9)>>2)]; //@line 211 "lib/lua-5.2.3/src/lvm.c"
 $ll=$10; //@line 211 "lib/lua-5.2.3/src/lvm.c"
 var $11=$3; //@line 212 "lib/lua-5.2.3/src/lvm.c"
 var $12=(($11+16)|0); //@line 212 "lib/lua-5.2.3/src/lvm.c"
 var $13=$12; //@line 212 "lib/lua-5.2.3/src/lvm.c"
 $r=$13; //@line 212 "lib/lua-5.2.3/src/lvm.c"
 var $14=$3; //@line 213 "lib/lua-5.2.3/src/lvm.c"
 var $15=$14; //@line 213 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15+12)|0); //@line 213 "lib/lua-5.2.3/src/lvm.c"
 var $17=HEAP32[(($16)>>2)]; //@line 213 "lib/lua-5.2.3/src/lvm.c"
 $lr=$17; //@line 213 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 214 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $19=$l; //@line 215 "lib/lua-5.2.3/src/lvm.c"
 var $20=$r; //@line 215 "lib/lua-5.2.3/src/lvm.c"
 var $21=_strcoll($19,$20); //@line 215 "lib/lua-5.2.3/src/lvm.c"
 $temp=$21; //@line 215 "lib/lua-5.2.3/src/lvm.c"
 var $22=$temp; //@line 216 "lib/lua-5.2.3/src/lvm.c"
 var $23=($22|0)!=0; //@line 216 "lib/lua-5.2.3/src/lvm.c"
 if($23){label=3;break;}else{label=4;break;} //@line 216 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $25=$temp; //@line 216 "lib/lua-5.2.3/src/lvm.c"
 $1=$25; //@line 216 "lib/lua-5.2.3/src/lvm.c"
 label=11;break; //@line 216 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $27=$l; //@line 218 "lib/lua-5.2.3/src/lvm.c"
 var $28=_strlen($27); //@line 218 "lib/lua-5.2.3/src/lvm.c"
 $len=$28; //@line 218 "lib/lua-5.2.3/src/lvm.c"
 var $29=$len; //@line 219 "lib/lua-5.2.3/src/lvm.c"
 var $30=$lr; //@line 219 "lib/lua-5.2.3/src/lvm.c"
 var $31=($29|0)==($30|0); //@line 219 "lib/lua-5.2.3/src/lvm.c"
 if($31){label=5;break;}else{label=6;break;} //@line 219 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $33=$len; //@line 220 "lib/lua-5.2.3/src/lvm.c"
 var $34=$ll; //@line 220 "lib/lua-5.2.3/src/lvm.c"
 var $35=($33|0)==($34|0); //@line 220 "lib/lua-5.2.3/src/lvm.c"
 var $36=($35?0:1); //@line 220 "lib/lua-5.2.3/src/lvm.c"
 $1=$36; //@line 220 "lib/lua-5.2.3/src/lvm.c"
 label=11;break; //@line 220 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $38=$len; //@line 221 "lib/lua-5.2.3/src/lvm.c"
 var $39=$ll; //@line 221 "lib/lua-5.2.3/src/lvm.c"
 var $40=($38|0)==($39|0); //@line 221 "lib/lua-5.2.3/src/lvm.c"
 if($40){label=7;break;}else{label=8;break;} //@line 221 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 $1=-1; //@line 222 "lib/lua-5.2.3/src/lvm.c"
 label=11;break; //@line 222 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 label=9;break;
 case 9: 
 var $44=$len; //@line 224 "lib/lua-5.2.3/src/lvm.c"
 var $45=((($44)+(1))|0); //@line 224 "lib/lua-5.2.3/src/lvm.c"
 $len=$45; //@line 224 "lib/lua-5.2.3/src/lvm.c"
 var $46=$len; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $47=$l; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $48=(($47+$46)|0); //@line 225 "lib/lua-5.2.3/src/lvm.c"
 $l=$48; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $49=$len; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $50=$ll; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $51=((($50)-($49))|0); //@line 225 "lib/lua-5.2.3/src/lvm.c"
 $ll=$51; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $52=$len; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $53=$r; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $54=(($53+$52)|0); //@line 225 "lib/lua-5.2.3/src/lvm.c"
 $r=$54; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $55=$len; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $56=$lr; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 var $57=((($56)-($55))|0); //@line 225 "lib/lua-5.2.3/src/lvm.c"
 $lr=$57; //@line 225 "lib/lua-5.2.3/src/lvm.c"
 label=10;break;
 case 10: 
 label=2;break; //@line 227 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $60=$1; //@line 228 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $60; //@line 228 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _call_orderTM($L,$p1,$p2,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $2=$L;
 $3=$p1;
 $4=$p2;
 $5=$event;
 var $6=$2; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $7=$3; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $8=$4; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $9=$2; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9+8)|0); //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $12=$5; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $13=_call_binTM($6,$7,$8,$11,$12); //@line 202 "lib/lua-5.2.3/src/lvm.c"
 var $14=($13|0)!=0; //@line 202 "lib/lua-5.2.3/src/lvm.c"
 if($14){label=3;break;}else{label=2;break;} //@line 202 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 $1=-1; //@line 203 "lib/lua-5.2.3/src/lvm.c"
 label=8;break; //@line 203 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $17=$2; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $18=(($17+8)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $19=HEAP32[(($18)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $20=(($19+8)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $21=HEAP32[(($20)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $22=($21|0)==0; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 if($22){var $41=1;label=7;break;}else{label=4;break;} //@line 205 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $24=$2; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $25=(($24+8)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $26=HEAP32[(($25)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26+8)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $28=HEAP32[(($27)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $29=($28|0)==1; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 if($29){label=5;break;}else{var $39=0;label=6;break;} //@line 205 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $31=$2; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $32=(($31+8)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $33=HEAP32[(($32)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33)|0); //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $35=$34; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $36=HEAP32[(($35)>>2)]; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $37=($36|0)==0; //@line 205 "lib/lua-5.2.3/src/lvm.c"
 var $39=$37;label=6;break;
 case 6: 
 var $39;
 var $41=$39;label=7;break;
 case 7: 
 var $41;
 var $42=$41^1;
 var $43=($42&1);
 $1=$43;
 label=8;break;
 case 8: 
 var $45=$1; //@line 206 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $45; //@line 206 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_lessequal($L,$l,$r){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $res;
 $2=$L;
 $3=$l;
 $4=$r;
 var $5=$3; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $6=(($5+8)|0); //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $7=HEAP32[(($6)>>2)]; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $8=($7|0)==3; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 if($8){label=2;break;}else{label=4;break;} //@line 245 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $10=$4; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $11=(($10+8)|0); //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $12=HEAP32[(($11)>>2)]; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 var $13=($12|0)==3; //@line 245 "lib/lua-5.2.3/src/lvm.c"
 if($13){label=3;break;}else{label=4;break;} //@line 245 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $15=$3; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15)|0); //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $17=$16; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $18=HEAPF64[(($17)>>3)]; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $19=$4; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $20=(($19)|0); //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $21=$20; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $22=HEAPF64[(($21)>>3)]; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $23=$18<=$22; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 var $24=($23&1); //@line 246 "lib/lua-5.2.3/src/lvm.c"
 $1=$24; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 label=15;break; //@line 246 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $26=$3; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26+8)|0); //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $28=HEAP32[(($27)>>2)]; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $29=$28&15; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $30=($29|0)==4; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 if($30){label=5;break;}else{label=7;break;} //@line 247 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $32=$4; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $33=(($32+8)|0); //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $34=HEAP32[(($33)>>2)]; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $35=$34&15; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 var $36=($35|0)==4; //@line 247 "lib/lua-5.2.3/src/lvm.c"
 if($36){label=6;break;}else{label=7;break;} //@line 247 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $38=$3; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $39=(($38)|0); //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $40=$39; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $41=HEAP32[(($40)>>2)]; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $42=$41; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $43=$4; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43)|0); //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $45=$44; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $46=HEAP32[(($45)>>2)]; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $47=$46; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $48=_l_strcmp($42,$47); //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $49=($48|0)<=0; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 var $50=($49&1); //@line 248 "lib/lua-5.2.3/src/lvm.c"
 $1=$50; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 label=15;break; //@line 248 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $52=$2; //@line 249 "lib/lua-5.2.3/src/lvm.c"
 var $53=$3; //@line 249 "lib/lua-5.2.3/src/lvm.c"
 var $54=$4; //@line 249 "lib/lua-5.2.3/src/lvm.c"
 var $55=_call_orderTM($52,$53,$54,14); //@line 249 "lib/lua-5.2.3/src/lvm.c"
 $res=$55; //@line 249 "lib/lua-5.2.3/src/lvm.c"
 var $56=($55|0)>=0; //@line 249 "lib/lua-5.2.3/src/lvm.c"
 if($56){label=8;break;}else{label=9;break;} //@line 249 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $58=$res; //@line 250 "lib/lua-5.2.3/src/lvm.c"
 $1=$58; //@line 250 "lib/lua-5.2.3/src/lvm.c"
 label=15;break; //@line 250 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $60=$2; //@line 251 "lib/lua-5.2.3/src/lvm.c"
 var $61=$4; //@line 251 "lib/lua-5.2.3/src/lvm.c"
 var $62=$3; //@line 251 "lib/lua-5.2.3/src/lvm.c"
 var $63=_call_orderTM($60,$61,$62,13); //@line 251 "lib/lua-5.2.3/src/lvm.c"
 $res=$63; //@line 251 "lib/lua-5.2.3/src/lvm.c"
 var $64=($63|0)<0; //@line 251 "lib/lua-5.2.3/src/lvm.c"
 if($64){label=10;break;}else{label=11;break;} //@line 251 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $66=$2; //@line 252 "lib/lua-5.2.3/src/lvm.c"
 var $67=$3; //@line 252 "lib/lua-5.2.3/src/lvm.c"
 var $68=$4; //@line 252 "lib/lua-5.2.3/src/lvm.c"
 _luaG_ordererror($66,$67,$68); //@line 252 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 252 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 label=12;break;
 case 12: 
 label=13;break;
 case 13: 
 label=14;break;
 case 14: 
 var $73=$res; //@line 253 "lib/lua-5.2.3/src/lvm.c"
 var $74=($73|0)!=0; //@line 253 "lib/lua-5.2.3/src/lvm.c"
 var $75=$74^1; //@line 253 "lib/lua-5.2.3/src/lvm.c"
 var $76=($75&1); //@line 253 "lib/lua-5.2.3/src/lvm.c"
 $1=$76; //@line 253 "lib/lua-5.2.3/src/lvm.c"
 label=15;break; //@line 253 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $78=$1; //@line 254 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $78; //@line 254 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_equalobj_($L,$t1,$t2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $tm;
 $2=$L;
 $3=$t1;
 $4=$t2;
 var $5=$3; //@line 263 "lib/lua-5.2.3/src/lvm.c"
 var $6=(($5+8)|0); //@line 263 "lib/lua-5.2.3/src/lvm.c"
 var $7=HEAP32[(($6)>>2)]; //@line 263 "lib/lua-5.2.3/src/lvm.c"
 var $8=$7&63; //@line 263 "lib/lua-5.2.3/src/lvm.c"
 switch(($8|0)){case 5:{ label=15;break;}case 0:{ label=2;break;}case 3:{ label=3;break;}case 1:{ label=4;break;}case 2:{ label=5;break;}case 22:{ label=6;break;}case 4:{ label=7;break;}case 20:{ label=8;break;}case 7:{ label=9;break;}default:{label=21;break;}}break;
 case 2: 
 $1=1; //@line 264 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 264 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $11=$3; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $12=(($11)|0); //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $13=$12; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $14=HEAPF64[(($13)>>3)]; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $15=$4; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15)|0); //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $17=$16; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $18=HEAPF64[(($17)>>3)]; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $19=$14==$18; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 var $20=($19&1); //@line 265 "lib/lua-5.2.3/src/lvm.c"
 $1=$20; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 265 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $22=$3; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $23=(($22)|0); //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $24=$23; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $25=HEAP32[(($24)>>2)]; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $26=$4; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26)|0); //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $28=$27; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $29=HEAP32[(($28)>>2)]; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $30=($25|0)==($29|0); //@line 266 "lib/lua-5.2.3/src/lvm.c"
 var $31=($30&1); //@line 266 "lib/lua-5.2.3/src/lvm.c"
 $1=$31; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 266 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $33=$3; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33)|0); //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $35=$34; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $36=HEAP32[(($35)>>2)]; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $37=$4; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $38=(($37)|0); //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $39=$38; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $40=HEAP32[(($39)>>2)]; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $41=($36|0)==($40|0); //@line 267 "lib/lua-5.2.3/src/lvm.c"
 var $42=($41&1); //@line 267 "lib/lua-5.2.3/src/lvm.c"
 $1=$42; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 267 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $44=$3; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $45=(($44)|0); //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $46=$45; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $47=HEAP32[(($46)>>2)]; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $48=$4; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $49=(($48)|0); //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $50=$49; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $51=HEAP32[(($50)>>2)]; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $52=($47|0)==($51|0); //@line 268 "lib/lua-5.2.3/src/lvm.c"
 var $53=($52&1); //@line 268 "lib/lua-5.2.3/src/lvm.c"
 $1=$53; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 268 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $55=$3; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55)|0); //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $57=$56; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $58=HEAP32[(($57)>>2)]; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $59=$58; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $60=$4; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $61=(($60)|0); //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $62=$61; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $63=HEAP32[(($62)>>2)]; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $64=$63; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $65=($59|0)==($64|0); //@line 269 "lib/lua-5.2.3/src/lvm.c"
 var $66=($65&1); //@line 269 "lib/lua-5.2.3/src/lvm.c"
 $1=$66; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 269 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $68=$3; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $69=(($68)|0); //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $70=$69; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $71=HEAP32[(($70)>>2)]; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $72=$71; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $73=$4; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $74=(($73)|0); //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $75=$74; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $76=HEAP32[(($75)>>2)]; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $77=$76; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 var $78=_luaS_eqlngstr($72,$77); //@line 270 "lib/lua-5.2.3/src/lvm.c"
 $1=$78; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 270 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $80=$3; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $81=(($80)|0); //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $82=$81; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $83=HEAP32[(($82)>>2)]; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $84=$83; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $85=$84; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $86=$4; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $87=(($86)|0); //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $88=$87; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $89=HEAP32[(($88)>>2)]; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $90=$89; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $91=$90; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 var $92=($85|0)==($91|0); //@line 272 "lib/lua-5.2.3/src/lvm.c"
 if($92){label=10;break;}else{label=11;break;} //@line 272 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 $1=1; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 272 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $95=$2; //@line 273 "lib/lua-5.2.3/src/lvm.c"
 var $96=($95|0)==0; //@line 273 "lib/lua-5.2.3/src/lvm.c"
 if($96){label=12;break;}else{label=13;break;} //@line 273 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 $1=0; //@line 273 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 273 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 label=14;break;
 case 14: 
 var $100=$2; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $101=$3; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $102=(($101)|0); //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $103=$102; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $104=HEAP32[(($103)>>2)]; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $105=$104; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $106=$105; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $107=(($106+8)|0); //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $108=HEAP32[(($107)>>2)]; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $109=$4; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $110=(($109)|0); //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $111=$110; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $112=HEAP32[(($111)>>2)]; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $113=$112; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $114=$113; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $115=(($114+8)|0); //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $116=HEAP32[(($115)>>2)]; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 var $117=_get_equalTM($100,$108,$116,5); //@line 274 "lib/lua-5.2.3/src/lvm.c"
 $tm=$117; //@line 274 "lib/lua-5.2.3/src/lvm.c"
 label=22;break; //@line 275 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $119=$3; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $120=(($119)|0); //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $121=$120; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $122=HEAP32[(($121)>>2)]; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $123=$122; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $124=$4; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $125=(($124)|0); //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $126=$125; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $127=HEAP32[(($126)>>2)]; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $128=$127; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 var $129=($123|0)==($128|0); //@line 278 "lib/lua-5.2.3/src/lvm.c"
 if($129){label=16;break;}else{label=17;break;} //@line 278 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 $1=1; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 278 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 var $132=$2; //@line 279 "lib/lua-5.2.3/src/lvm.c"
 var $133=($132|0)==0; //@line 279 "lib/lua-5.2.3/src/lvm.c"
 if($133){label=18;break;}else{label=19;break;} //@line 279 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 $1=0; //@line 279 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 279 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 label=20;break;
 case 20: 
 var $137=$2; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $138=$3; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $139=(($138)|0); //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $140=$139; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $141=HEAP32[(($140)>>2)]; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $142=$141; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $143=(($142+8)|0); //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $144=HEAP32[(($143)>>2)]; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $145=$4; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $146=(($145)|0); //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $147=$146; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $148=HEAP32[(($147)>>2)]; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $149=$148; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $150=(($149+8)|0); //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $151=HEAP32[(($150)>>2)]; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 var $152=_get_equalTM($137,$144,$151,5); //@line 280 "lib/lua-5.2.3/src/lvm.c"
 $tm=$152; //@line 280 "lib/lua-5.2.3/src/lvm.c"
 label=22;break; //@line 281 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $154=$3; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $155=(($154)|0); //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $156=$155; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $157=HEAP32[(($156)>>2)]; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $158=$4; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $159=(($158)|0); //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $160=$159; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $161=HEAP32[(($160)>>2)]; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $162=($157|0)==($161|0); //@line 285 "lib/lua-5.2.3/src/lvm.c"
 var $163=($162&1); //@line 285 "lib/lua-5.2.3/src/lvm.c"
 $1=$163; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 285 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 var $165=$tm; //@line 287 "lib/lua-5.2.3/src/lvm.c"
 var $166=($165|0)==0; //@line 287 "lib/lua-5.2.3/src/lvm.c"
 if($166){label=23;break;}else{label=24;break;} //@line 287 "lib/lua-5.2.3/src/lvm.c"
 case 23: 
 $1=0; //@line 287 "lib/lua-5.2.3/src/lvm.c"
 label=29;break; //@line 287 "lib/lua-5.2.3/src/lvm.c"
 case 24: 
 var $169=$2; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $170=$tm; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $171=$3; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $172=$4; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $173=$2; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $174=(($173+8)|0); //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $175=HEAP32[(($174)>>2)]; //@line 288 "lib/lua-5.2.3/src/lvm.c"
 _callTM($169,$170,$171,$172,$175,1); //@line 288 "lib/lua-5.2.3/src/lvm.c"
 var $176=$2; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $177=(($176+8)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $178=HEAP32[(($177)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $179=(($178+8)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $180=HEAP32[(($179)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $181=($180|0)==0; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 if($181){var $200=1;label=28;break;}else{label=25;break;} //@line 289 "lib/lua-5.2.3/src/lvm.c"
 case 25: 
 var $183=$2; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $184=(($183+8)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $185=HEAP32[(($184)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $186=(($185+8)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $187=HEAP32[(($186)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $188=($187|0)==1; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 if($188){label=26;break;}else{var $198=0;label=27;break;} //@line 289 "lib/lua-5.2.3/src/lvm.c"
 case 26: 
 var $190=$2; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $191=(($190+8)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $192=HEAP32[(($191)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $193=(($192)|0); //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $194=$193; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $195=HEAP32[(($194)>>2)]; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $196=($195|0)==0; //@line 289 "lib/lua-5.2.3/src/lvm.c"
 var $198=$196;label=27;break;
 case 27: 
 var $198;
 var $200=$198;label=28;break;
 case 28: 
 var $200;
 var $201=$200^1;
 var $202=($201&1);
 $1=$202;
 label=29;break;
 case 29: 
 var $204=$1; //@line 290 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $204; //@line 290 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _get_equalTM($L,$mt1,$mt2,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $tm1;
 var $tm2;
 $2=$L;
 $3=$mt1;
 $4=$mt2;
 $5=$event;
 var $6=$3; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $7=($6|0)==0; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 if($7){label=2;break;}else{label=3;break;} //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $33=0;label=7;break; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $10=$3; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $11=(($10+6)|0); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $12=HEAP8[($11)]; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $13=($12&255); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $14=$5; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $15=1<<$14; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $16=$13&$15; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $17=($16|0)!=0; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 if($17){label=4;break;}else{label=5;break;} //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $31=0;label=6;break; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $20=$3; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $21=$5; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $22=$5; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $23=$2; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $24=(($23+12)|0); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $25=HEAP32[(($24)>>2)]; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $26=(($25+184)|0); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26+($22<<2))|0); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $28=HEAP32[(($27)>>2)]; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $29=_luaT_gettm($20,$21,$28); //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $31=$29;label=6;break; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $31; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $33=$31;label=7;break; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $33; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 $tm1=$33; //@line 188 "lib/lua-5.2.3/src/lvm.c"
 var $34=$tm1; //@line 190 "lib/lua-5.2.3/src/lvm.c"
 var $35=($34|0)==0; //@line 190 "lib/lua-5.2.3/src/lvm.c"
 if($35){label=8;break;}else{label=9;break;} //@line 190 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 $1=0; //@line 190 "lib/lua-5.2.3/src/lvm.c"
 label=23;break; //@line 190 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $38=$3; //@line 191 "lib/lua-5.2.3/src/lvm.c"
 var $39=$4; //@line 191 "lib/lua-5.2.3/src/lvm.c"
 var $40=($38|0)==($39|0); //@line 191 "lib/lua-5.2.3/src/lvm.c"
 if($40){label=10;break;}else{label=11;break;} //@line 191 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $42=$tm1; //@line 191 "lib/lua-5.2.3/src/lvm.c"
 $1=$42; //@line 191 "lib/lua-5.2.3/src/lvm.c"
 label=23;break; //@line 191 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $44=$4; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $45=($44|0)==0; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 if($45){label=12;break;}else{label=13;break;} //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $71=0;label=17;break; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $48=$4; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $49=(($48+6)|0); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $50=HEAP8[($49)]; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $51=($50&255); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $52=$5; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $53=1<<$52; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $54=$51&$53; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $55=($54|0)!=0; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 if($55){label=14;break;}else{label=15;break;} //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $69=0;label=16;break; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $58=$4; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $59=$5; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $60=$5; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $61=$2; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $62=(($61+12)|0); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $63=HEAP32[(($62)>>2)]; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $64=(($63+184)|0); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $65=(($64+($60<<2))|0); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $66=HEAP32[(($65)>>2)]; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $67=_luaT_gettm($58,$59,$66); //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $69=$67;label=16;break; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 var $69; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $71=$69;label=17;break; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 var $71; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 $tm2=$71; //@line 192 "lib/lua-5.2.3/src/lvm.c"
 var $72=$tm2; //@line 193 "lib/lua-5.2.3/src/lvm.c"
 var $73=($72|0)==0; //@line 193 "lib/lua-5.2.3/src/lvm.c"
 if($73){label=18;break;}else{label=19;break;} //@line 193 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 $1=0; //@line 193 "lib/lua-5.2.3/src/lvm.c"
 label=23;break; //@line 193 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 var $76=$tm1; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $77=(($76+8)|0); //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $78=HEAP32[(($77)>>2)]; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $79=$tm2; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $80=(($79+8)|0); //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $81=HEAP32[(($80)>>2)]; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $82=($78|0)==($81|0); //@line 194 "lib/lua-5.2.3/src/lvm.c"
 if($82){label=20;break;}else{label=22;break;} //@line 194 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 var $84=$tm1; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $85=$tm2; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $86=_luaV_equalobj_(0,$84,$85); //@line 194 "lib/lua-5.2.3/src/lvm.c"
 var $87=($86|0)!=0; //@line 194 "lib/lua-5.2.3/src/lvm.c"
 if($87){label=21;break;}else{label=22;break;} //@line 194 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $89=$tm1; //@line 195 "lib/lua-5.2.3/src/lvm.c"
 $1=$89; //@line 195 "lib/lua-5.2.3/src/lvm.c"
 label=23;break; //@line 195 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 $1=0; //@line 196 "lib/lua-5.2.3/src/lvm.c"
 label=23;break; //@line 196 "lib/lua-5.2.3/src/lvm.c"
 case 23: 
 var $92=$1; //@line 197 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $92; //@line 197 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_concat($L,$total){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $top;
 var $n;
 var $io2;
 var $io1;
 var $tl;
 var $buffer;
 var $i;
 var $l;
 var $l1;
 var $io;
 var $x_;
 $1=$L;
 $2=$total;
 label=2;break; //@line 295 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $4=$1; //@line 296 "lib/lua-5.2.3/src/lvm.c"
 var $5=(($4+8)|0); //@line 296 "lib/lua-5.2.3/src/lvm.c"
 var $6=HEAP32[(($5)>>2)]; //@line 296 "lib/lua-5.2.3/src/lvm.c"
 $top=$6; //@line 296 "lib/lua-5.2.3/src/lvm.c"
 $n=2; //@line 297 "lib/lua-5.2.3/src/lvm.c"
 var $7=$top; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $8=((($7)-(32))|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $9=(($8+8)|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $10=HEAP32[(($9)>>2)]; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $11=$10&15; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $12=($11|0)==4; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 if($12){label=4;break;}else{label=3;break;} //@line 298 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $14=$top; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $15=((($14)-(32))|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15+8)|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $17=HEAP32[(($16)>>2)]; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $18=($17|0)==3; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 if($18){label=4;break;}else{label=6;break;} //@line 298 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $20=$top; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $21=((($20)-(16))|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21+8)|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $23=HEAP32[(($22)>>2)]; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $24=$23&15; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $25=($24|0)==4; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 if($25){label=9;break;}else{label=5;break;} //@line 298 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $27=$1; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $28=$top; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $29=((($28)-(16))|0); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $30=_luaV_tostring($27,$29); //@line 298 "lib/lua-5.2.3/src/lvm.c"
 var $31=($30|0)!=0; //@line 298 "lib/lua-5.2.3/src/lvm.c"
 if($31){label=9;break;}else{label=6;break;} //@line 298 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $33=$1; //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $34=$top; //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $35=((($34)-(32))|0); //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $36=$top; //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $37=((($36)-(16))|0); //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $38=$top; //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $39=((($38)-(32))|0); //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $40=_call_binTM($33,$35,$37,$39,15); //@line 299 "lib/lua-5.2.3/src/lvm.c"
 var $41=($40|0)!=0; //@line 299 "lib/lua-5.2.3/src/lvm.c"
 if($41){label=8;break;}else{label=7;break;} //@line 299 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $43=$1; //@line 300 "lib/lua-5.2.3/src/lvm.c"
 var $44=$top; //@line 300 "lib/lua-5.2.3/src/lvm.c"
 var $45=((($44)-(32))|0); //@line 300 "lib/lua-5.2.3/src/lvm.c"
 var $46=$top; //@line 300 "lib/lua-5.2.3/src/lvm.c"
 var $47=((($46)-(16))|0); //@line 300 "lib/lua-5.2.3/src/lvm.c"
 _luaG_concaterror($43,$45,$47); //@line 300 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 300 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 label=32;break; //@line 301 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $50=$top; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $51=((($50)-(16))|0); //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $52=(($51)|0); //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $53=$52; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $54=HEAP32[(($53)>>2)]; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $55=$54; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $56=$55; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $57=(($56+12)|0); //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $58=HEAP32[(($57)>>2)]; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 var $59=($58|0)==0; //@line 302 "lib/lua-5.2.3/src/lvm.c"
 if($59){label=10;break;}else{label=13;break;} //@line 302 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $61=$top; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $62=((($61)-(32))|0); //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $63=(($62+8)|0); //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $64=HEAP32[(($63)>>2)]; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $65=$64&15; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $66=($65|0)==4; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 if($66){var $74=1;label=12;break;}else{label=11;break;} //@line 303 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $68=$1; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $69=$top; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $70=((($69)-(32))|0); //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $71=_luaV_tostring($68,$70); //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $72=($71|0)!=0; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 var $74=$72;label=12;break; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $74;
 var $75=($74&1); //@line 303 "lib/lua-5.2.3/src/lvm.c"
 label=31;break; //@line 303 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $77=$top; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $78=((($77)-(32))|0); //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $79=(($78+8)|0); //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $80=HEAP32[(($79)>>2)]; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $81=$80&15; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $82=($81|0)==4; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 if($82){label=14;break;}else{label=16;break;} //@line 304 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $84=$top; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $85=((($84)-(32))|0); //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $86=(($85)|0); //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $87=$86; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $88=HEAP32[(($87)>>2)]; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $89=$88; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $90=$89; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $91=(($90+12)|0); //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $92=HEAP32[(($91)>>2)]; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 var $93=($92|0)==0; //@line 304 "lib/lua-5.2.3/src/lvm.c"
 if($93){label=15;break;}else{label=16;break;} //@line 304 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $95=$top; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $96=((($95)-(16))|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 $io2=$96; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $97=$top; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $98=((($97)-(32))|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 $io1=$98; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $99=$io1; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $100=(($99)|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $101=$io2; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $102=(($101)|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $103=$100; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $104=$102; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($103)>>2)]=HEAP32[(($104)>>2)];HEAP32[((($103)+(4))>>2)]=HEAP32[((($104)+(4))>>2)]; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $105=$io2; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $106=(($105+8)|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $107=HEAP32[(($106)>>2)]; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $108=$io1; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 var $109=(($108+8)|0); //@line 305 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($109)>>2)]=$107; //@line 305 "lib/lua-5.2.3/src/lvm.c"
 label=30;break; //@line 306 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 var $111=$top; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $112=((($111)-(16))|0); //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $113=(($112)|0); //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $114=$113; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $115=HEAP32[(($114)>>2)]; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $116=$115; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $117=$116; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $118=(($117+12)|0); //@line 309 "lib/lua-5.2.3/src/lvm.c"
 var $119=HEAP32[(($118)>>2)]; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 $tl=$119; //@line 309 "lib/lua-5.2.3/src/lvm.c"
 $i=1; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 label=17;break; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 var $121=$i; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $122=$2; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $123=($121|0)<($122|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 if($123){label=18;break;}else{var $146=0;label=21;break;} //@line 313 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 var $125=$top; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $126=$i; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $127=(((-$126))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $128=(($125+($127<<4))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $129=((($128)-(16))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $130=(($129+8)|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $131=HEAP32[(($130)>>2)]; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $132=$131&15; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $133=($132|0)==4; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 if($133){var $144=1;label=20;break;}else{label=19;break;} //@line 313 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 var $135=$1; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $136=$top; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $137=$i; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $138=(((-$137))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $139=(($136+($138<<4))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $140=((($139)-(16))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $141=_luaV_tostring($135,$140); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $142=($141|0)!=0; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $144=$142;label=20;break; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 var $144;
 var $146=$144;label=21;break;
 case 21: 
 var $146;
 if($146){label=22;break;}else{label=26;break;}
 case 22: 
 var $148=$top; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $149=$i; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $150=(((-$149))|0); //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $151=(($148+($150<<4))|0); //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $152=((($151)-(16))|0); //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $153=(($152)|0); //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $154=$153; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $155=HEAP32[(($154)>>2)]; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $156=$155; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $157=$156; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $158=(($157+12)|0); //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $159=HEAP32[(($158)>>2)]; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 $l=$159; //@line 314 "lib/lua-5.2.3/src/lvm.c"
 var $160=$l; //@line 315 "lib/lua-5.2.3/src/lvm.c"
 var $161=$tl; //@line 315 "lib/lua-5.2.3/src/lvm.c"
 var $162=(((-3)-($161))|0); //@line 315 "lib/lua-5.2.3/src/lvm.c"
 var $163=($160>>>0)>=($162>>>0); //@line 315 "lib/lua-5.2.3/src/lvm.c"
 if($163){label=23;break;}else{label=24;break;} //@line 315 "lib/lua-5.2.3/src/lvm.c"
 case 23: 
 var $165=$1; //@line 316 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($165,7352,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 316 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 316 "lib/lua-5.2.3/src/lvm.c"
 case 24: 
 var $167=$l; //@line 317 "lib/lua-5.2.3/src/lvm.c"
 var $168=$tl; //@line 317 "lib/lua-5.2.3/src/lvm.c"
 var $169=((($168)+($167))|0); //@line 317 "lib/lua-5.2.3/src/lvm.c"
 $tl=$169; //@line 317 "lib/lua-5.2.3/src/lvm.c"
 label=25;break; //@line 318 "lib/lua-5.2.3/src/lvm.c"
 case 25: 
 var $171=$i; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 var $172=((($171)+(1))|0); //@line 313 "lib/lua-5.2.3/src/lvm.c"
 $i=$172; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 label=17;break; //@line 313 "lib/lua-5.2.3/src/lvm.c"
 case 26: 
 var $174=$1; //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $175=$1; //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $176=(($175+12)|0); //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $177=HEAP32[(($176)>>2)]; //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $178=(($177+144)|0); //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $179=$tl; //@line 319 "lib/lua-5.2.3/src/lvm.c"
 var $180=_luaZ_openspace($174,$178,$179); //@line 319 "lib/lua-5.2.3/src/lvm.c"
 $buffer=$180; //@line 319 "lib/lua-5.2.3/src/lvm.c"
 $tl=0; //@line 320 "lib/lua-5.2.3/src/lvm.c"
 var $181=$i; //@line 321 "lib/lua-5.2.3/src/lvm.c"
 $n=$181; //@line 321 "lib/lua-5.2.3/src/lvm.c"
 label=27;break; //@line 322 "lib/lua-5.2.3/src/lvm.c"
 case 27: 
 var $183=$top; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $184=$i; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $185=(((-$184))|0); //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $186=(($183+($185<<4))|0); //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $187=(($186)|0); //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $188=$187; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $189=HEAP32[(($188)>>2)]; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $190=$189; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $191=$190; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $192=(($191+12)|0); //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $193=HEAP32[(($192)>>2)]; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 $l1=$193; //@line 323 "lib/lua-5.2.3/src/lvm.c"
 var $194=$buffer; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $195=$tl; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $196=(($194+$195)|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $197=$top; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $198=$i; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $199=(((-$198))|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $200=(($197+($199<<4))|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $201=(($200)|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $202=$201; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $203=HEAP32[(($202)>>2)]; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $204=$203; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $205=(($204+16)|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $206=$205; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $207=$l1; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $208=$207; //@line 324 "lib/lua-5.2.3/src/lvm.c"
 assert($208 % 1 === 0);(_memcpy($196, $206, $208)|0); //@line 324 "lib/lua-5.2.3/src/lvm.c"
 var $209=$l1; //@line 325 "lib/lua-5.2.3/src/lvm.c"
 var $210=$tl; //@line 325 "lib/lua-5.2.3/src/lvm.c"
 var $211=((($210)+($209))|0); //@line 325 "lib/lua-5.2.3/src/lvm.c"
 $tl=$211; //@line 325 "lib/lua-5.2.3/src/lvm.c"
 label=28;break; //@line 326 "lib/lua-5.2.3/src/lvm.c"
 case 28: 
 var $213=$i; //@line 326 "lib/lua-5.2.3/src/lvm.c"
 var $214=((($213)-(1))|0); //@line 326 "lib/lua-5.2.3/src/lvm.c"
 $i=$214; //@line 326 "lib/lua-5.2.3/src/lvm.c"
 var $215=($214|0)>0; //@line 326 "lib/lua-5.2.3/src/lvm.c"
 if($215){label=27;break;}else{label=29;break;} //@line 326 "lib/lua-5.2.3/src/lvm.c"
 case 29: 
 var $217=$top; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $218=$n; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $219=(((-$218))|0); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $220=(($217+($219<<4))|0); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 $io=$220; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $221=$1; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $222=$buffer; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $223=$tl; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $224=_luaS_newlstr($221,$222,$223); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 $x_=$224; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $225=$x_; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $226=$225; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $227=$io; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $228=(($227)|0); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $229=$228; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($229)>>2)]=$226; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $230=$x_; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $231=$230; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $232=(($231+4)|0); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $233=HEAP8[($232)]; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $234=($233&255); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $235=$234|64; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $236=$io; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 var $237=(($236+8)|0); //@line 327 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($237)>>2)]=$235; //@line 327 "lib/lua-5.2.3/src/lvm.c"
 label=30;break;
 case 30: 
 label=31;break;
 case 31: 
 label=32;break;
 case 32: 
 var $241=$n; //@line 329 "lib/lua-5.2.3/src/lvm.c"
 var $242=((($241)-(1))|0); //@line 329 "lib/lua-5.2.3/src/lvm.c"
 var $243=$2; //@line 329 "lib/lua-5.2.3/src/lvm.c"
 var $244=((($243)-($242))|0); //@line 329 "lib/lua-5.2.3/src/lvm.c"
 $2=$244; //@line 329 "lib/lua-5.2.3/src/lvm.c"
 var $245=$n; //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $246=((($245)-(1))|0); //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $247=$1; //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $248=(($247+8)|0); //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $249=HEAP32[(($248)>>2)]; //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $250=(((-$246))|0); //@line 330 "lib/lua-5.2.3/src/lvm.c"
 var $251=(($249+($250<<4))|0); //@line 330 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($248)>>2)]=$251; //@line 330 "lib/lua-5.2.3/src/lvm.c"
 label=33;break; //@line 331 "lib/lua-5.2.3/src/lvm.c"
 case 33: 
 var $253=$2; //@line 331 "lib/lua-5.2.3/src/lvm.c"
 var $254=($253|0)>1; //@line 331 "lib/lua-5.2.3/src/lvm.c"
 if($254){label=2;break;}else{label=34;break;} //@line 331 "lib/lua-5.2.3/src/lvm.c"
 case 34: 
 STACKTOP=sp;return; //@line 332 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _call_binTM($L,$p1,$p2,$res,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $tm;
 $2=$L;
 $3=$p1;
 $4=$p2;
 $5=$res;
 $6=$event;
 var $7=$2; //@line 177 "lib/lua-5.2.3/src/lvm.c"
 var $8=$3; //@line 177 "lib/lua-5.2.3/src/lvm.c"
 var $9=$6; //@line 177 "lib/lua-5.2.3/src/lvm.c"
 var $10=_luaT_gettmbyobj($7,$8,$9); //@line 177 "lib/lua-5.2.3/src/lvm.c"
 $tm=$10; //@line 177 "lib/lua-5.2.3/src/lvm.c"
 var $11=$tm; //@line 178 "lib/lua-5.2.3/src/lvm.c"
 var $12=(($11+8)|0); //@line 178 "lib/lua-5.2.3/src/lvm.c"
 var $13=HEAP32[(($12)>>2)]; //@line 178 "lib/lua-5.2.3/src/lvm.c"
 var $14=($13|0)==0; //@line 178 "lib/lua-5.2.3/src/lvm.c"
 if($14){label=2;break;}else{label=3;break;} //@line 178 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $16=$2; //@line 179 "lib/lua-5.2.3/src/lvm.c"
 var $17=$4; //@line 179 "lib/lua-5.2.3/src/lvm.c"
 var $18=$6; //@line 179 "lib/lua-5.2.3/src/lvm.c"
 var $19=_luaT_gettmbyobj($16,$17,$18); //@line 179 "lib/lua-5.2.3/src/lvm.c"
 $tm=$19; //@line 179 "lib/lua-5.2.3/src/lvm.c"
 label=3;break; //@line 179 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $21=$tm; //@line 180 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21+8)|0); //@line 180 "lib/lua-5.2.3/src/lvm.c"
 var $23=HEAP32[(($22)>>2)]; //@line 180 "lib/lua-5.2.3/src/lvm.c"
 var $24=($23|0)==0; //@line 180 "lib/lua-5.2.3/src/lvm.c"
 if($24){label=4;break;}else{label=5;break;} //@line 180 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 $1=0; //@line 180 "lib/lua-5.2.3/src/lvm.c"
 label=6;break; //@line 180 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $27=$2; //@line 181 "lib/lua-5.2.3/src/lvm.c"
 var $28=$tm; //@line 181 "lib/lua-5.2.3/src/lvm.c"
 var $29=$3; //@line 181 "lib/lua-5.2.3/src/lvm.c"
 var $30=$4; //@line 181 "lib/lua-5.2.3/src/lvm.c"
 var $31=$5; //@line 181 "lib/lua-5.2.3/src/lvm.c"
 _callTM($27,$28,$29,$30,$31,1); //@line 181 "lib/lua-5.2.3/src/lvm.c"
 $1=1; //@line 182 "lib/lua-5.2.3/src/lvm.c"
 label=6;break; //@line 182 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $33=$1; //@line 183 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $33; //@line 183 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_objlen($L,$ra,$rb){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $tm;
 var $h;
 var $io;
 var $io1;
 $1=$L;
 $2=$ra;
 $3=$rb;
 var $4=$3; //@line 337 "lib/lua-5.2.3/src/lvm.c"
 var $5=(($4+8)|0); //@line 337 "lib/lua-5.2.3/src/lvm.c"
 var $6=HEAP32[(($5)>>2)]; //@line 337 "lib/lua-5.2.3/src/lvm.c"
 var $7=$6&15; //@line 337 "lib/lua-5.2.3/src/lvm.c"
 if(($7|0)==4){ label=11;break;}else if(($7|0)==5){ label=2;break;}else{label=12;break;}
 case 2: 
 var $9=$3; //@line 339 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9)|0); //@line 339 "lib/lua-5.2.3/src/lvm.c"
 var $11=$10; //@line 339 "lib/lua-5.2.3/src/lvm.c"
 var $12=HEAP32[(($11)>>2)]; //@line 339 "lib/lua-5.2.3/src/lvm.c"
 var $13=$12; //@line 339 "lib/lua-5.2.3/src/lvm.c"
 $h=$13; //@line 339 "lib/lua-5.2.3/src/lvm.c"
 var $14=$h; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $15=(($14+8)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $16=HEAP32[(($15)>>2)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $17=($16|0)==0; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 if($17){label=3;break;}else{label=4;break;} //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $43=0;label=8;break; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $20=$h; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $21=(($20+8)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $22=HEAP32[(($21)>>2)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $23=(($22+6)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $24=HEAP8[($23)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $25=($24&255); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $26=$25&16; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $27=($26|0)!=0; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 if($27){label=5;break;}else{label=6;break;} //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $41=0;label=7;break; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $30=$h; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $31=(($30+8)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $32=HEAP32[(($31)>>2)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $33=$1; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+12)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $35=HEAP32[(($34)>>2)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $36=(($35+184)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $37=(($36+16)|0); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $38=HEAP32[(($37)>>2)]; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $39=_luaT_gettm($32,4,$38); //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $41=$39;label=7;break; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $41; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $43=$41;label=8;break; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $43; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 $tm=$43; //@line 340 "lib/lua-5.2.3/src/lvm.c"
 var $44=$tm; //@line 341 "lib/lua-5.2.3/src/lvm.c"
 var $45=($44|0)!=0; //@line 341 "lib/lua-5.2.3/src/lvm.c"
 if($45){label=9;break;}else{label=10;break;} //@line 341 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 label=15;break; //@line 341 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $48=$2; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 $io=$48; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $49=$h; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $50=_luaH_getn($49); //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $51=($50|0); //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $52=$io; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $53=(($52)|0); //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $54=$53; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($54)>>3)]=$51; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $55=$io; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55+8)|0); //@line 342 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($56)>>2)]=3; //@line 342 "lib/lua-5.2.3/src/lvm.c"
 label=16;break; //@line 343 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $58=$2; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 $io1=$58; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $59=$3; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $60=(($59)|0); //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $61=$60; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $62=HEAP32[(($61)>>2)]; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $63=$62; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $64=$63; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $65=(($64+12)|0); //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $66=HEAP32[(($65)>>2)]; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $67=($66>>>0); //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $68=$io1; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $69=(($68)|0); //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $70=$69; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($70)>>3)]=$67; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $71=$io1; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 var $72=(($71+8)|0); //@line 346 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($72)>>2)]=3; //@line 346 "lib/lua-5.2.3/src/lvm.c"
 label=16;break; //@line 347 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $74=$1; //@line 350 "lib/lua-5.2.3/src/lvm.c"
 var $75=$3; //@line 350 "lib/lua-5.2.3/src/lvm.c"
 var $76=_luaT_gettmbyobj($74,$75,4); //@line 350 "lib/lua-5.2.3/src/lvm.c"
 $tm=$76; //@line 350 "lib/lua-5.2.3/src/lvm.c"
 var $77=$tm; //@line 351 "lib/lua-5.2.3/src/lvm.c"
 var $78=(($77+8)|0); //@line 351 "lib/lua-5.2.3/src/lvm.c"
 var $79=HEAP32[(($78)>>2)]; //@line 351 "lib/lua-5.2.3/src/lvm.c"
 var $80=($79|0)==0; //@line 351 "lib/lua-5.2.3/src/lvm.c"
 if($80){label=13;break;}else{label=14;break;} //@line 351 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $82=$1; //@line 352 "lib/lua-5.2.3/src/lvm.c"
 var $83=$3; //@line 352 "lib/lua-5.2.3/src/lvm.c"
 _luaG_typeerror($82,$83,5920); //@line 352 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 352 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 label=15;break; //@line 353 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $86=$1; //@line 356 "lib/lua-5.2.3/src/lvm.c"
 var $87=$tm; //@line 356 "lib/lua-5.2.3/src/lvm.c"
 var $88=$3; //@line 356 "lib/lua-5.2.3/src/lvm.c"
 var $89=$3; //@line 356 "lib/lua-5.2.3/src/lvm.c"
 var $90=$2; //@line 356 "lib/lua-5.2.3/src/lvm.c"
 _callTM($86,$87,$88,$89,$90,1); //@line 356 "lib/lua-5.2.3/src/lvm.c"
 label=16;break; //@line 357 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 STACKTOP=sp;return; //@line 357 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_arith($L,$ra,$rb,$rc,$op){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $tempb=sp;
 var $tempc=(sp)+(16);
 var $b;
 var $c;
 var $res;
 var $io;
 $1=$L;
 $2=$ra;
 $3=$rb;
 $4=$rc;
 $5=$op;
 var $6=$3; //@line 364 "lib/lua-5.2.3/src/lvm.c"
 var $7=_luaV_tonumber($6,$tempb); //@line 364 "lib/lua-5.2.3/src/lvm.c"
 $b=$7; //@line 364 "lib/lua-5.2.3/src/lvm.c"
 var $8=($7|0)!=0; //@line 364 "lib/lua-5.2.3/src/lvm.c"
 if($8){label=2;break;}else{label=4;break;} //@line 364 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $10=$4; //@line 365 "lib/lua-5.2.3/src/lvm.c"
 var $11=_luaV_tonumber($10,$tempc); //@line 365 "lib/lua-5.2.3/src/lvm.c"
 $c=$11; //@line 365 "lib/lua-5.2.3/src/lvm.c"
 var $12=($11|0)!=0; //@line 365 "lib/lua-5.2.3/src/lvm.c"
 if($12){label=3;break;}else{label=4;break;} //@line 365 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $14=$5; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $15=((($14)-(6))|0); //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $16=(($15)|0); //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $17=$b; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $18=(($17)|0); //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $19=$18; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $20=HEAPF64[(($19)>>3)]; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $21=$c; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21)|0); //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $23=$22; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $24=HEAPF64[(($23)>>3)]; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $25=_luaO_arith($16,$20,$24); //@line 366 "lib/lua-5.2.3/src/lvm.c"
 $res=$25; //@line 366 "lib/lua-5.2.3/src/lvm.c"
 var $26=$2; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 $io=$26; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $27=$res; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $28=$io; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $29=(($28)|0); //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $30=$29; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($30)>>3)]=$27; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $31=$io; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 var $32=(($31+8)|0); //@line 367 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($32)>>2)]=3; //@line 367 "lib/lua-5.2.3/src/lvm.c"
 label=7;break; //@line 368 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $34=$1; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $35=$3; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $36=$4; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $37=$2; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $38=$5; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $39=_call_binTM($34,$35,$36,$37,$38); //@line 369 "lib/lua-5.2.3/src/lvm.c"
 var $40=($39|0)!=0; //@line 369 "lib/lua-5.2.3/src/lvm.c"
 if($40){label=6;break;}else{label=5;break;} //@line 369 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $42=$1; //@line 370 "lib/lua-5.2.3/src/lvm.c"
 var $43=$3; //@line 370 "lib/lua-5.2.3/src/lvm.c"
 var $44=$4; //@line 370 "lib/lua-5.2.3/src/lvm.c"
 _luaG_aritherror($42,$43,$44); //@line 370 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 370 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 label=7;break;
 case 7: 
 STACKTOP=sp;return; //@line 371 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaV_execute($L){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $ci;
 var $cl;
 var $k;
 var $base;
 var $i;
 var $ra;
 var $io2;
 var $io1;
 var $rb;
 var $io21;
 var $io12;
 var $rb3;
 var $io24;
 var $io15;
 var $io;
 var $b;
 var $b6;
 var $io27;
 var $io18;
 var $b9;
 var $a;
 var $uv;
 var $io210;
 var $io111;
 var $b12;
 var $c;
 var $t;
 var $io13;
 var $rb14;
 var $io215;
 var $io116;
 var $rb17;
 var $rc;
 var $nb;
 var $nc;
 var $io19;
 var $rb20;
 var $rc21;
 var $nb22;
 var $nc23;
 var $io25;
 var $rb26;
 var $rc27;
 var $nb28;
 var $nc29;
 var $io30;
 var $rb31;
 var $rc32;
 var $nb33;
 var $nc34;
 var $io35;
 var $rb36;
 var $rc37;
 var $nb38;
 var $nc39;
 var $io40;
 var $rb41;
 var $rc42;
 var $nb43;
 var $nc44;
 var $io45;
 var $rb46;
 var $nb47;
 var $io48;
 var $rb49;
 var $res;
 var $io50;
 var $b51;
 var $c52;
 var $rb53;
 var $io254;
 var $io155;
 var $a56;
 var $rb57;
 var $rc58;
 var $a59;
 var $a60;
 var $a61;
 var $a62;
 var $rb63;
 var $io264;
 var $io165;
 var $a66;
 var $b67;
 var $nresults;
 var $b68;
 var $nci;
 var $oci;
 var $nfunc;
 var $ofunc;
 var $lim;
 var $aux;
 var $io269;
 var $io170;
 var $b71;
 var $step;
 var $idx;
 var $limit;
 var $io72;
 var $io73;
 var $init;
 var $plimit;
 var $pstep;
 var $io74;
 var $cb;
 var $io275;
 var $io176;
 var $io277;
 var $io178;
 var $io279;
 var $io180;
 var $io281;
 var $io182;
 var $n;
 var $c83;
 var $last;
 var $h;
 var $val;
 var $p;
 var $ncl;
 var $io84;
 var $b85;
 var $j;
 var $n86;
 var $io287;
 var $io188;
 $1=$L;
 var $2=$1; //@line 535 "lib/lua-5.2.3/src/lvm.c"
 var $3=(($2+16)|0); //@line 535 "lib/lua-5.2.3/src/lvm.c"
 var $4=HEAP32[(($3)>>2)]; //@line 535 "lib/lua-5.2.3/src/lvm.c"
 $ci=$4; //@line 535 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 538 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $6=$ci; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $7=(($6)|0); //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $8=HEAP32[(($7)>>2)]; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $9=(($8)|0); //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $10=$9; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $12=$11; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $13=$12; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 $cl=$13; //@line 541 "lib/lua-5.2.3/src/lvm.c"
 var $14=$cl; //@line 542 "lib/lua-5.2.3/src/lvm.c"
 var $15=(($14+12)|0); //@line 542 "lib/lua-5.2.3/src/lvm.c"
 var $16=HEAP32[(($15)>>2)]; //@line 542 "lib/lua-5.2.3/src/lvm.c"
 var $17=(($16+8)|0); //@line 542 "lib/lua-5.2.3/src/lvm.c"
 var $18=HEAP32[(($17)>>2)]; //@line 542 "lib/lua-5.2.3/src/lvm.c"
 $k=$18; //@line 542 "lib/lua-5.2.3/src/lvm.c"
 var $19=$ci; //@line 543 "lib/lua-5.2.3/src/lvm.c"
 var $20=(($19+24)|0); //@line 543 "lib/lua-5.2.3/src/lvm.c"
 var $21=$20; //@line 543 "lib/lua-5.2.3/src/lvm.c"
 var $22=(($21)|0); //@line 543 "lib/lua-5.2.3/src/lvm.c"
 var $23=HEAP32[(($22)>>2)]; //@line 543 "lib/lua-5.2.3/src/lvm.c"
 $base=$23; //@line 543 "lib/lua-5.2.3/src/lvm.c"
 label=3;break; //@line 545 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $25=$ci; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $26=(($25+24)|0); //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $27=$26; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $28=(($27+4)|0); //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $29=HEAP32[(($28)>>2)]; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $30=(($29+4)|0); //@line 546 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($28)>>2)]=$30; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $31=HEAP32[(($29)>>2)]; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 $i=$31; //@line 546 "lib/lua-5.2.3/src/lvm.c"
 var $32=$1; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $33=(($32+40)|0); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $34=HEAP8[($33)]; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $35=($34&255); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $36=$35&12; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $37=($36|0)!=0; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 if($37){label=4;break;}else{label=7;break;} //@line 548 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $39=$1; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $40=(($39+48)|0); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $41=HEAP32[(($40)>>2)]; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $42=((($41)-(1))|0); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($40)>>2)]=$42; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $43=($42|0)==0; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 if($43){label=6;break;}else{label=5;break;} //@line 548 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $45=$1; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $46=(($45+40)|0); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $47=HEAP8[($46)]; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $48=($47&255); //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $49=$48&4; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 var $50=($49|0)!=0; //@line 548 "lib/lua-5.2.3/src/lvm.c"
 if($50){label=6;break;}else{label=7;break;} //@line 548 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $52=$1; //@line 550 "lib/lua-5.2.3/src/lvm.c"
 _traceexec($52); //@line 550 "lib/lua-5.2.3/src/lvm.c"
 var $53=$ci; //@line 550 "lib/lua-5.2.3/src/lvm.c"
 var $54=(($53+24)|0); //@line 550 "lib/lua-5.2.3/src/lvm.c"
 var $55=$54; //@line 550 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55)|0); //@line 550 "lib/lua-5.2.3/src/lvm.c"
 var $57=HEAP32[(($56)>>2)]; //@line 550 "lib/lua-5.2.3/src/lvm.c"
 $base=$57; //@line 550 "lib/lua-5.2.3/src/lvm.c"
 label=7;break; //@line 551 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $59=$base; //@line 553 "lib/lua-5.2.3/src/lvm.c"
 var $60=$i; //@line 553 "lib/lua-5.2.3/src/lvm.c"
 var $61=$60>>>6; //@line 553 "lib/lua-5.2.3/src/lvm.c"
 var $62=$61&255; //@line 553 "lib/lua-5.2.3/src/lvm.c"
 var $63=(($59+($62<<4))|0); //@line 553 "lib/lua-5.2.3/src/lvm.c"
 $ra=$63; //@line 553 "lib/lua-5.2.3/src/lvm.c"
 var $64=$i; //@line 556 "lib/lua-5.2.3/src/lvm.c"
 var $65=$64>>>0; //@line 556 "lib/lua-5.2.3/src/lvm.c"
 var $66=$65&63; //@line 556 "lib/lua-5.2.3/src/lvm.c"
 switch(($66|0)){case 2:{ label=10;break;}case 17:{ label=100;break;}case 3:{ label=11;break;}case 18:{ label=111;break;}case 19:{ label=122;break;}case 20:{ label=126;break;}case 21:{ label=131;break;}case 22:{ label=132;break;}case 23:{ label=138;break;}case 4:{ label=14;break;}case 24:{ label=141;break;}case 25:{ label=155;break;}case 26:{ label=167;break;}case 27:{ label=179;break;}case 5:{ label=18;break;}case 6:{ label=19;break;}case 28:{ label=191;break;}case 29:{ label=203;break;}case 30:{ label=211;break;}case 31:{ label=223;break;}case 7:{ label=23;break;}case 32:{ label=232;break;}case 33:{ label=237;break;}case 34:{ label=249;break;}case 35:{ label=250;break;}case 36:{ label=254;break;}case 37:{ label=269;break;}case 8:{ label=27;break;}case 38:{ label=275;break;}case 39:{ label=288;break;}case 9:{ label=34;break;}case 10:{ label=39;break;}case 11:{ label=46;break;}case 12:{ label=52;break;}case 13:{ label=56;break;}case 14:{ label=67;break;}case 15:{ label=78;break;}case 0:{ label=8;break;}case 16:{ label=89;break;}case 1:{ label=9;break;}default:{label=289;break;}}break;
 case 8: 
 var $68=$base; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $69=$i; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $70=$69>>>23; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $71=$70&511; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $72=(($68+($71<<4))|0); //@line 557 "lib/lua-5.2.3/src/lvm.c"
 $io2=$72; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $73=$ra; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 $io1=$73; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $74=$io1; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $75=(($74)|0); //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $76=$io2; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $77=(($76)|0); //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $78=$75; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $79=$77; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($78)>>2)]=HEAP32[(($79)>>2)];HEAP32[((($78)+(4))>>2)]=HEAP32[((($79)+(4))>>2)]; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $80=$io2; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $81=(($80+8)|0); //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $82=HEAP32[(($81)>>2)]; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $83=$io1; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 var $84=(($83+8)|0); //@line 557 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($84)>>2)]=$82; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 557 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $86=$k; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $87=$i; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $88=$87>>>14; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $89=$88&262143; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $90=(($86+($89<<4))|0); //@line 560 "lib/lua-5.2.3/src/lvm.c"
 $rb=$90; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $91=$rb; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 $io21=$91; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $92=$ra; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 $io12=$92; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $93=$io12; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $94=(($93)|0); //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $95=$io21; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $96=(($95)|0); //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $97=$94; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $98=$96; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($97)>>2)]=HEAP32[(($98)>>2)];HEAP32[((($97)+(4))>>2)]=HEAP32[((($98)+(4))>>2)]; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $99=$io21; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $100=(($99+8)|0); //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $101=HEAP32[(($100)>>2)]; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $102=$io12; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 var $103=(($102+8)|0); //@line 560 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($103)>>2)]=$101; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 560 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $105=$k; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $106=$ci; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $107=(($106+24)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $108=$107; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $109=(($108+4)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $110=HEAP32[(($109)>>2)]; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $111=(($110+4)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($109)>>2)]=$111; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $112=HEAP32[(($110)>>2)]; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $113=$112>>>6; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $114=$113&67108863; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $115=(($105+($114<<4))|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 $rb3=$115; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $116=$rb3; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 $io24=$116; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $117=$ra; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 $io15=$117; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $118=$io15; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $119=(($118)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $120=$io24; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $121=(($120)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $122=$119; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $123=$121; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($122)>>2)]=HEAP32[(($123)>>2)];HEAP32[((($122)+(4))>>2)]=HEAP32[((($123)+(4))>>2)]; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $124=$io24; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $125=(($124+8)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $126=HEAP32[(($125)>>2)]; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $127=$io15; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 var $128=(($127+8)|0); //@line 564 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($128)>>2)]=$126; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 564 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $130=$ra; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 $io=$130; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $131=$i; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $132=$131>>>23; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $133=$132&511; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $134=$io; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $135=(($134)|0); //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $136=$135; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($136)>>2)]=$133; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $137=$io; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $138=(($137+8)|0); //@line 570 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($138)>>2)]=1; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $139=$i; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $140=$139>>>14; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $141=$140&511; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $142=($141|0)!=0; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 if($142){label=12;break;}else{label=13;break;} //@line 570 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $144=$ci; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $145=(($144+24)|0); //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $146=$145; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $147=(($146+4)|0); //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $148=HEAP32[(($147)>>2)]; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 var $149=(($148+4)|0); //@line 570 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($147)>>2)]=$149; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 label=13;break; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 label=289;break; //@line 570 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $152=$i; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $153=$152>>>23; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $154=$153&511; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 $b=$154; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 label=15;break; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $156=$ra; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $157=(($156+16)|0); //@line 574 "lib/lua-5.2.3/src/lvm.c"
 $ra=$157; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $158=(($156+8)|0); //@line 574 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($158)>>2)]=0; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 label=16;break; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 var $160=$b; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $161=((($160)-(1))|0); //@line 574 "lib/lua-5.2.3/src/lvm.c"
 $b=$161; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 var $162=($160|0)!=0; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 if($162){label=15;break;}else{label=17;break;} //@line 574 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 label=289;break; //@line 574 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 var $165=$i; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $166=$165>>>23; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $167=$166&511; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 $b6=$167; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $168=$b6; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $169=$cl; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $170=(($169+16)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $171=(($170+($168<<2))|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $172=HEAP32[(($171)>>2)]; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $173=(($172+8)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $174=HEAP32[(($173)>>2)]; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 $io27=$174; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $175=$ra; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 $io18=$175; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $176=$io18; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $177=(($176)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $178=$io27; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $179=(($178)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $180=$177; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $181=$179; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($180)>>2)]=HEAP32[(($181)>>2)];HEAP32[((($180)+(4))>>2)]=HEAP32[((($181)+(4))>>2)]; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $182=$io27; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $183=(($182+8)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $184=HEAP32[(($183)>>2)]; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $185=$io18; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 var $186=(($185+8)|0); //@line 580 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($186)>>2)]=$184; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 580 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 var $188=$i; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $189=$188>>>23; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $190=$189&511; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 $b9=$190; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $191=$1; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $192=$b9; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $193=$cl; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $194=(($193+16)|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $195=(($194+($192<<2))|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $196=HEAP32[(($195)>>2)]; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $197=(($196+8)|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $198=HEAP32[(($197)>>2)]; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $199=$i; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $200=$199>>>14; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $201=$200&511; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $202=$201&256; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $203=($202|0)!=0; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 if($203){label=20;break;}else{label=21;break;} //@line 584 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 var $205=$k; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $206=$i; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $207=$206>>>14; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $208=$207&511; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $209=$208&-257; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $210=(($205+($209<<4))|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $218=$210;label=22;break; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $212=$base; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $213=$i; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $214=$213>>>14; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $215=$214&511; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $216=(($212+($215<<4))|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $218=$216;label=22;break; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 var $218; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $219=$ra; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 _luaV_gettable($191,$198,$218,$219); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $220=$ci; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $221=(($220+24)|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $222=$221; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $223=(($222)|0); //@line 584 "lib/lua-5.2.3/src/lvm.c"
 var $224=HEAP32[(($223)>>2)]; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 $base=$224; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 584 "lib/lua-5.2.3/src/lvm.c"
 case 23: 
 var $226=$1; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $227=$base; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $228=$i; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $229=$228>>>23; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $230=$229&511; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $231=(($227+($230<<4))|0); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $232=$i; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $233=$232>>>14; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $234=$233&511; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $235=$234&256; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $236=($235|0)!=0; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 if($236){label=24;break;}else{label=25;break;} //@line 588 "lib/lua-5.2.3/src/lvm.c"
 case 24: 
 var $238=$k; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $239=$i; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $240=$239>>>14; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $241=$240&511; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $242=$241&-257; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $243=(($238+($242<<4))|0); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $251=$243;label=26;break; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 case 25: 
 var $245=$base; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $246=$i; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $247=$246>>>14; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $248=$247&511; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $249=(($245+($248<<4))|0); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $251=$249;label=26;break; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 case 26: 
 var $251; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $252=$ra; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 _luaV_gettable($226,$231,$251,$252); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $253=$ci; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $254=(($253+24)|0); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $255=$254; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $256=(($255)|0); //@line 588 "lib/lua-5.2.3/src/lvm.c"
 var $257=HEAP32[(($256)>>2)]; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 $base=$257; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 588 "lib/lua-5.2.3/src/lvm.c"
 case 27: 
 var $259=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $260=$259>>>6; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $261=$260&255; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 $a=$261; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $262=$1; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $263=$a; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $264=$cl; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $265=(($264+16)|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $266=(($265+($263<<2))|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $267=HEAP32[(($266)>>2)]; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $268=(($267+8)|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $269=HEAP32[(($268)>>2)]; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $270=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $271=$270>>>23; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $272=$271&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $273=$272&256; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $274=($273|0)!=0; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 if($274){label=28;break;}else{label=29;break;} //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 28: 
 var $276=$k; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $277=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $278=$277>>>23; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $279=$278&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $280=$279&-257; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $281=(($276+($280<<4))|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $289=$281;label=30;break; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 29: 
 var $283=$base; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $284=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $285=$284>>>23; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $286=$285&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $287=(($283+($286<<4))|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $289=$287;label=30;break; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 30: 
 var $289; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $290=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $291=$290>>>14; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $292=$291&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $293=$292&256; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $294=($293|0)!=0; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 if($294){label=31;break;}else{label=32;break;} //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 31: 
 var $296=$k; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $297=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $298=$297>>>14; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $299=$298&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $300=$299&-257; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $301=(($296+($300<<4))|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $309=$301;label=33;break; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 32: 
 var $303=$base; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $304=$i; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $305=$304>>>14; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $306=$305&511; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $307=(($303+($306<<4))|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $309=$307;label=33;break; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 33: 
 var $309; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 _luaV_settable($262,$269,$289,$309); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $310=$ci; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $311=(($310+24)|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $312=$311; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $313=(($312)|0); //@line 591 "lib/lua-5.2.3/src/lvm.c"
 var $314=HEAP32[(($313)>>2)]; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 $base=$314; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 591 "lib/lua-5.2.3/src/lvm.c"
 case 34: 
 var $316=$i; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $317=$316>>>23; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $318=$317&511; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $319=$cl; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $320=(($319+16)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $321=(($320+($318<<2))|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $322=HEAP32[(($321)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 $uv=$322; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $323=$ra; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 $io210=$323; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $324=$uv; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $325=(($324+8)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $326=HEAP32[(($325)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 $io111=$326; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $327=$io111; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $328=(($327)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $329=$io210; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $330=(($329)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $331=$328; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $332=$330; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($331)>>2)]=HEAP32[(($332)>>2)];HEAP32[((($331)+(4))>>2)]=HEAP32[((($332)+(4))>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $333=$io210; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $334=(($333+8)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $335=HEAP32[(($334)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $336=$io111; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $337=(($336+8)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($337)>>2)]=$335; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $338=$ra; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $339=(($338+8)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $340=HEAP32[(($339)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $341=$340&64; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $342=($341|0)!=0; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 if($342){label=35;break;}else{label=38;break;} //@line 595 "lib/lua-5.2.3/src/lvm.c"
 case 35: 
 var $344=$ra; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $345=(($344)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $346=$345; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $347=HEAP32[(($346)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $348=$347; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $349=(($348+5)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $350=HEAP8[($349)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $351=($350&255); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $352=$351&3; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $353=($352|0)!=0; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 if($353){label=36;break;}else{label=38;break;} //@line 595 "lib/lua-5.2.3/src/lvm.c"
 case 36: 
 var $355=$uv; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $356=$355; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $357=$356; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $358=(($357+5)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $359=HEAP8[($358)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $360=($359&255); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $361=$360&4; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $362=($361|0)!=0; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 if($362){label=37;break;}else{label=38;break;} //@line 595 "lib/lua-5.2.3/src/lvm.c"
 case 37: 
 var $364=$1; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $365=$uv; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $366=$365; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $367=$ra; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $368=(($367)|0); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $369=$368; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 var $370=HEAP32[(($369)>>2)]; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 _luaC_barrier_($364,$366,$370); //@line 595 "lib/lua-5.2.3/src/lvm.c"
 label=38;break; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 case 38: 
 label=289;break; //@line 595 "lib/lua-5.2.3/src/lvm.c"
 case 39: 
 var $373=$1; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $374=$ra; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $375=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $376=$375>>>23; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $377=$376&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $378=$377&256; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $379=($378|0)!=0; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 if($379){label=40;break;}else{label=41;break;} //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 40: 
 var $381=$k; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $382=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $383=$382>>>23; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $384=$383&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $385=$384&-257; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $386=(($381+($385<<4))|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $394=$386;label=42;break; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 41: 
 var $388=$base; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $389=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $390=$389>>>23; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $391=$390&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $392=(($388+($391<<4))|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $394=$392;label=42;break; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 42: 
 var $394; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $395=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $396=$395>>>14; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $397=$396&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $398=$397&256; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $399=($398|0)!=0; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 if($399){label=43;break;}else{label=44;break;} //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 43: 
 var $401=$k; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $402=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $403=$402>>>14; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $404=$403&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $405=$404&-257; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $406=(($401+($405<<4))|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $414=$406;label=45;break; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 44: 
 var $408=$base; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $409=$i; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $410=$409>>>14; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $411=$410&511; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $412=(($408+($411<<4))|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $414=$412;label=45;break; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 45: 
 var $414; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 _luaV_settable($373,$374,$394,$414); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $415=$ci; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $416=(($415+24)|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $417=$416; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $418=(($417)|0); //@line 600 "lib/lua-5.2.3/src/lvm.c"
 var $419=HEAP32[(($418)>>2)]; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 $base=$419; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 600 "lib/lua-5.2.3/src/lvm.c"
 case 46: 
 var $421=$i; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $422=$421>>>23; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $423=$422&511; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 $b12=$423; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $424=$i; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $425=$424>>>14; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $426=$425&511; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 $c=$426; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $427=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $428=_luaH_new($427); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 $t=$428; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $429=$ra; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 $io13=$429; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $430=$t; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $431=$430; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $432=$io13; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $433=(($432)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $434=$433; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($434)>>2)]=$431; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $435=$io13; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $436=(($435+8)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($436)>>2)]=69; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $437=$b12; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $438=($437|0)!=0; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 if($438){label=48;break;}else{label=47;break;} //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 47: 
 var $440=$c; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $441=($440|0)!=0; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 if($441){label=48;break;}else{label=49;break;} //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 48: 
 var $443=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $444=$t; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $445=$b12; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $446=_luaO_fb2int($445); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $447=$c; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $448=_luaO_fb2int($447); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 _luaH_resize($443,$444,$446,$448); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 label=49;break; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 49: 
 var $450=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $451=(($450+12)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $452=HEAP32[(($451)>>2)]; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $453=(($452+12)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $454=HEAP32[(($453)>>2)]; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $455=($454|0)>0; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 if($455){label=50;break;}else{label=51;break;} //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 50: 
 var $457=$ra; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $458=(($457+16)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $459=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $460=(($459+8)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($460)>>2)]=$458; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $461=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 _luaC_step($461); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $462=$ci; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $463=(($462+4)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $464=HEAP32[(($463)>>2)]; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $465=$1; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $466=(($465+8)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($466)>>2)]=$464; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 label=51;break; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 51: 
 var $468=$ci; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $469=(($468+24)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $470=$469; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $471=(($470)|0); //@line 603 "lib/lua-5.2.3/src/lvm.c"
 var $472=HEAP32[(($471)>>2)]; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 $base=$472; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 603 "lib/lua-5.2.3/src/lvm.c"
 case 52: 
 var $474=$base; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $475=$i; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $476=$475>>>23; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $477=$476&511; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $478=(($474+($477<<4))|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 $rb14=$478; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $479=$rb14; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 $io215=$479; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $480=$ra; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $481=(($480+16)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 $io116=$481; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $482=$io116; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $483=(($482)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $484=$io215; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $485=(($484)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $486=$483; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $487=$485; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($486)>>2)]=HEAP32[(($487)>>2)];HEAP32[((($486)+(4))>>2)]=HEAP32[((($487)+(4))>>2)]; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $488=$io215; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $489=(($488+8)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $490=HEAP32[(($489)>>2)]; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $491=$io116; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $492=(($491+8)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($492)>>2)]=$490; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $493=$1; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $494=$rb14; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $495=$i; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $496=$495>>>14; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $497=$496&511; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $498=$497&256; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $499=($498|0)!=0; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 if($499){label=53;break;}else{label=54;break;} //@line 612 "lib/lua-5.2.3/src/lvm.c"
 case 53: 
 var $501=$k; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $502=$i; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $503=$502>>>14; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $504=$503&511; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $505=$504&-257; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $506=(($501+($505<<4))|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $514=$506;label=55;break; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 case 54: 
 var $508=$base; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $509=$i; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $510=$509>>>14; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $511=$510&511; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $512=(($508+($511<<4))|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $514=$512;label=55;break; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 case 55: 
 var $514; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $515=$ra; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 _luaV_gettable($493,$494,$514,$515); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $516=$ci; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $517=(($516+24)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $518=$517; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $519=(($518)|0); //@line 612 "lib/lua-5.2.3/src/lvm.c"
 var $520=HEAP32[(($519)>>2)]; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 $base=$520; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 612 "lib/lua-5.2.3/src/lvm.c"
 case 56: 
 var $522=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $523=$522>>>23; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $524=$523&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $525=$524&256; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $526=($525|0)!=0; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 if($526){label=57;break;}else{label=58;break;} //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 57: 
 var $528=$k; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $529=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $530=$529>>>23; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $531=$530&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $532=$531&-257; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $533=(($528+($532<<4))|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $541=$533;label=59;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 58: 
 var $535=$base; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $536=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $537=$536>>>23; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $538=$537&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $539=(($535+($538<<4))|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $541=$539;label=59;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 59: 
 var $541; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $rb17=$541; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $542=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $543=$542>>>14; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $544=$543&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $545=$544&256; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $546=($545|0)!=0; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 if($546){label=60;break;}else{label=61;break;} //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 60: 
 var $548=$k; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $549=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $550=$549>>>14; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $551=$550&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $552=$551&-257; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $553=(($548+($552<<4))|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $561=$553;label=62;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 61: 
 var $555=$base; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $556=$i; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $557=$556>>>14; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $558=$557&511; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $559=(($555+($558<<4))|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $561=$559;label=62;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 62: 
 var $561; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $rc=$561; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $562=$rb17; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $563=(($562+8)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $564=HEAP32[(($563)>>2)]; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $565=($564|0)==3; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 if($565){label=63;break;}else{label=65;break;} //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 63: 
 var $567=$rc; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $568=(($567+8)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $569=HEAP32[(($568)>>2)]; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $570=($569|0)==3; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 if($570){label=64;break;}else{label=65;break;} //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 64: 
 var $572=$rb17; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $573=(($572)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $574=$573; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $575=HEAPF64[(($574)>>3)]; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $nb=$575; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $576=$rc; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $577=(($576)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $578=$577; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $579=HEAPF64[(($578)>>3)]; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $nc=$579; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $580=$ra; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $io19=$580; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $581=$nb; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $582=$nc; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $583=($581)+($582); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $584=$io19; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $585=(($584)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $586=$585; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($586)>>3)]=$583; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $587=$io19; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $588=(($587+8)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($588)>>2)]=3; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 label=66;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 65: 
 var $590=$1; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $591=$ra; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $592=$rb17; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $593=$rc; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($590,$591,$592,$593,6); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $594=$ci; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $595=(($594+24)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $596=$595; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $597=(($596)|0); //@line 617 "lib/lua-5.2.3/src/lvm.c"
 var $598=HEAP32[(($597)>>2)]; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 $base=$598; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 label=66;break;
 case 66: 
 label=289;break; //@line 617 "lib/lua-5.2.3/src/lvm.c"
 case 67: 
 var $601=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $602=$601>>>23; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $603=$602&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $604=$603&256; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $605=($604|0)!=0; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 if($605){label=68;break;}else{label=69;break;} //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 68: 
 var $607=$k; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $608=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $609=$608>>>23; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $610=$609&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $611=$610&-257; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $612=(($607+($611<<4))|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $620=$612;label=70;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 69: 
 var $614=$base; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $615=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $616=$615>>>23; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $617=$616&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $618=(($614+($617<<4))|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $620=$618;label=70;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 70: 
 var $620; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $rb20=$620; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $621=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $622=$621>>>14; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $623=$622&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $624=$623&256; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $625=($624|0)!=0; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 if($625){label=71;break;}else{label=72;break;} //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 71: 
 var $627=$k; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $628=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $629=$628>>>14; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $630=$629&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $631=$630&-257; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $632=(($627+($631<<4))|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $640=$632;label=73;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 72: 
 var $634=$base; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $635=$i; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $636=$635>>>14; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $637=$636&511; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $638=(($634+($637<<4))|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $640=$638;label=73;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 73: 
 var $640; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $rc21=$640; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $641=$rb20; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $642=(($641+8)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $643=HEAP32[(($642)>>2)]; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $644=($643|0)==3; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 if($644){label=74;break;}else{label=76;break;} //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 74: 
 var $646=$rc21; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $647=(($646+8)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $648=HEAP32[(($647)>>2)]; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $649=($648|0)==3; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 if($649){label=75;break;}else{label=76;break;} //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 75: 
 var $651=$rb20; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $652=(($651)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $653=$652; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $654=HEAPF64[(($653)>>3)]; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $nb22=$654; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $655=$rc21; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $656=(($655)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $657=$656; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $658=HEAPF64[(($657)>>3)]; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $nc23=$658; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $659=$ra; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $io25=$659; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $660=$nb22; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $661=$nc23; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $662=($660)-($661); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $663=$io25; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $664=(($663)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $665=$664; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($665)>>3)]=$662; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $666=$io25; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $667=(($666+8)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($667)>>2)]=3; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 label=77;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 76: 
 var $669=$1; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $670=$ra; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $671=$rb20; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $672=$rc21; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($669,$670,$671,$672,7); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $673=$ci; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $674=(($673+24)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $675=$674; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $676=(($675)|0); //@line 620 "lib/lua-5.2.3/src/lvm.c"
 var $677=HEAP32[(($676)>>2)]; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 $base=$677; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 label=77;break;
 case 77: 
 label=289;break; //@line 620 "lib/lua-5.2.3/src/lvm.c"
 case 78: 
 var $680=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $681=$680>>>23; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $682=$681&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $683=$682&256; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $684=($683|0)!=0; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 if($684){label=79;break;}else{label=80;break;} //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 79: 
 var $686=$k; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $687=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $688=$687>>>23; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $689=$688&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $690=$689&-257; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $691=(($686+($690<<4))|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $699=$691;label=81;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 80: 
 var $693=$base; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $694=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $695=$694>>>23; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $696=$695&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $697=(($693+($696<<4))|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $699=$697;label=81;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 81: 
 var $699; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $rb26=$699; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $700=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $701=$700>>>14; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $702=$701&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $703=$702&256; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $704=($703|0)!=0; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 if($704){label=82;break;}else{label=83;break;} //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 82: 
 var $706=$k; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $707=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $708=$707>>>14; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $709=$708&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $710=$709&-257; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $711=(($706+($710<<4))|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $719=$711;label=84;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 83: 
 var $713=$base; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $714=$i; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $715=$714>>>14; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $716=$715&511; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $717=(($713+($716<<4))|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $719=$717;label=84;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 84: 
 var $719; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $rc27=$719; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $720=$rb26; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $721=(($720+8)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $722=HEAP32[(($721)>>2)]; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $723=($722|0)==3; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 if($723){label=85;break;}else{label=87;break;} //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 85: 
 var $725=$rc27; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $726=(($725+8)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $727=HEAP32[(($726)>>2)]; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $728=($727|0)==3; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 if($728){label=86;break;}else{label=87;break;} //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 86: 
 var $730=$rb26; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $731=(($730)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $732=$731; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $733=HEAPF64[(($732)>>3)]; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $nb28=$733; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $734=$rc27; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $735=(($734)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $736=$735; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $737=HEAPF64[(($736)>>3)]; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $nc29=$737; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $738=$ra; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $io30=$738; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $739=$nb28; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $740=$nc29; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $741=($739)*($740); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $742=$io30; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $743=(($742)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $744=$743; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($744)>>3)]=$741; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $745=$io30; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $746=(($745+8)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($746)>>2)]=3; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 label=88;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 87: 
 var $748=$1; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $749=$ra; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $750=$rb26; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $751=$rc27; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($748,$749,$750,$751,8); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $752=$ci; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $753=(($752+24)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $754=$753; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $755=(($754)|0); //@line 623 "lib/lua-5.2.3/src/lvm.c"
 var $756=HEAP32[(($755)>>2)]; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 $base=$756; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 label=88;break;
 case 88: 
 label=289;break; //@line 623 "lib/lua-5.2.3/src/lvm.c"
 case 89: 
 var $759=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $760=$759>>>23; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $761=$760&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $762=$761&256; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $763=($762|0)!=0; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 if($763){label=90;break;}else{label=91;break;} //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 90: 
 var $765=$k; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $766=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $767=$766>>>23; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $768=$767&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $769=$768&-257; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $770=(($765+($769<<4))|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $778=$770;label=92;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 91: 
 var $772=$base; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $773=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $774=$773>>>23; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $775=$774&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $776=(($772+($775<<4))|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $778=$776;label=92;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 92: 
 var $778; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $rb31=$778; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $779=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $780=$779>>>14; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $781=$780&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $782=$781&256; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $783=($782|0)!=0; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 if($783){label=93;break;}else{label=94;break;} //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 93: 
 var $785=$k; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $786=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $787=$786>>>14; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $788=$787&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $789=$788&-257; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $790=(($785+($789<<4))|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $798=$790;label=95;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 94: 
 var $792=$base; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $793=$i; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $794=$793>>>14; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $795=$794&511; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $796=(($792+($795<<4))|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $798=$796;label=95;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 95: 
 var $798; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $rc32=$798; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $799=$rb31; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $800=(($799+8)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $801=HEAP32[(($800)>>2)]; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $802=($801|0)==3; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 if($802){label=96;break;}else{label=98;break;} //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 96: 
 var $804=$rc32; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $805=(($804+8)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $806=HEAP32[(($805)>>2)]; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $807=($806|0)==3; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 if($807){label=97;break;}else{label=98;break;} //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 97: 
 var $809=$rb31; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $810=(($809)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $811=$810; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $812=HEAPF64[(($811)>>3)]; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $nb33=$812; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $813=$rc32; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $814=(($813)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $815=$814; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $816=HEAPF64[(($815)>>3)]; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $nc34=$816; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $817=$ra; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $io35=$817; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $818=$nb33; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $819=$nc34; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $820=($818)/($819); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $821=$io35; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $822=(($821)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $823=$822; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($823)>>3)]=$820; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $824=$io35; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $825=(($824+8)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($825)>>2)]=3; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 label=99;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 98: 
 var $827=$1; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $828=$ra; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $829=$rb31; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $830=$rc32; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($827,$828,$829,$830,9); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $831=$ci; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $832=(($831+24)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $833=$832; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $834=(($833)|0); //@line 626 "lib/lua-5.2.3/src/lvm.c"
 var $835=HEAP32[(($834)>>2)]; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 $base=$835; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 label=99;break;
 case 99: 
 label=289;break; //@line 626 "lib/lua-5.2.3/src/lvm.c"
 case 100: 
 var $838=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $839=$838>>>23; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $840=$839&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $841=$840&256; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $842=($841|0)!=0; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 if($842){label=101;break;}else{label=102;break;} //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 101: 
 var $844=$k; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $845=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $846=$845>>>23; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $847=$846&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $848=$847&-257; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $849=(($844+($848<<4))|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $857=$849;label=103;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 102: 
 var $851=$base; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $852=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $853=$852>>>23; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $854=$853&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $855=(($851+($854<<4))|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $857=$855;label=103;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 103: 
 var $857; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $rb36=$857; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $858=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $859=$858>>>14; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $860=$859&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $861=$860&256; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $862=($861|0)!=0; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 if($862){label=104;break;}else{label=105;break;} //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 104: 
 var $864=$k; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $865=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $866=$865>>>14; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $867=$866&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $868=$867&-257; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $869=(($864+($868<<4))|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $877=$869;label=106;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 105: 
 var $871=$base; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $872=$i; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $873=$872>>>14; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $874=$873&511; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $875=(($871+($874<<4))|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $877=$875;label=106;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 106: 
 var $877; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $rc37=$877; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $878=$rb36; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $879=(($878+8)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $880=HEAP32[(($879)>>2)]; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $881=($880|0)==3; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 if($881){label=107;break;}else{label=109;break;} //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 107: 
 var $883=$rc37; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $884=(($883+8)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $885=HEAP32[(($884)>>2)]; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $886=($885|0)==3; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 if($886){label=108;break;}else{label=109;break;} //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 108: 
 var $888=$rb36; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $889=(($888)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $890=$889; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $891=HEAPF64[(($890)>>3)]; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $nb38=$891; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $892=$rc37; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $893=(($892)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $894=$893; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $895=HEAPF64[(($894)>>3)]; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $nc39=$895; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $896=$ra; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $io40=$896; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $897=$nb38; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $898=$nb38; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $899=$nc39; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $900=($898)/($899); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $901=Math_floor($900); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $902=$nc39; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $903=($901)*($902); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $904=($897)-($903); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $905=$io40; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $906=(($905)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $907=$906; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($907)>>3)]=$904; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $908=$io40; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $909=(($908+8)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($909)>>2)]=3; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 label=110;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 109: 
 var $911=$1; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $912=$ra; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $913=$rb36; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $914=$rc37; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($911,$912,$913,$914,10); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $915=$ci; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $916=(($915+24)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $917=$916; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $918=(($917)|0); //@line 629 "lib/lua-5.2.3/src/lvm.c"
 var $919=HEAP32[(($918)>>2)]; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 $base=$919; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 label=110;break;
 case 110: 
 label=289;break; //@line 629 "lib/lua-5.2.3/src/lvm.c"
 case 111: 
 var $922=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $923=$922>>>23; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $924=$923&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $925=$924&256; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $926=($925|0)!=0; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 if($926){label=112;break;}else{label=113;break;} //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 112: 
 var $928=$k; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $929=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $930=$929>>>23; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $931=$930&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $932=$931&-257; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $933=(($928+($932<<4))|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $941=$933;label=114;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 113: 
 var $935=$base; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $936=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $937=$936>>>23; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $938=$937&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $939=(($935+($938<<4))|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $941=$939;label=114;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 114: 
 var $941; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $rb41=$941; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $942=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $943=$942>>>14; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $944=$943&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $945=$944&256; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $946=($945|0)!=0; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 if($946){label=115;break;}else{label=116;break;} //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 115: 
 var $948=$k; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $949=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $950=$949>>>14; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $951=$950&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $952=$951&-257; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $953=(($948+($952<<4))|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $961=$953;label=117;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 116: 
 var $955=$base; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $956=$i; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $957=$956>>>14; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $958=$957&511; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $959=(($955+($958<<4))|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $961=$959;label=117;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 117: 
 var $961; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $rc42=$961; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $962=$rb41; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $963=(($962+8)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $964=HEAP32[(($963)>>2)]; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $965=($964|0)==3; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 if($965){label=118;break;}else{label=120;break;} //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 118: 
 var $967=$rc42; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $968=(($967+8)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $969=HEAP32[(($968)>>2)]; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $970=($969|0)==3; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 if($970){label=119;break;}else{label=120;break;} //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 119: 
 var $972=$rb41; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $973=(($972)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $974=$973; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $975=HEAPF64[(($974)>>3)]; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $nb43=$975; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $976=$rc42; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $977=(($976)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $978=$977; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $979=HEAPF64[(($978)>>3)]; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $nc44=$979; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $980=$ra; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $io45=$980; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $981=$nb43; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $982=$nc44; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $983=Math_pow($981,$982); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $984=$io45; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $985=(($984)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $986=$985; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($986)>>3)]=$983; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $987=$io45; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $988=(($987+8)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($988)>>2)]=3; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 label=121;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 120: 
 var $990=$1; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $991=$ra; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $992=$rb41; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $993=$rc42; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($990,$991,$992,$993,11); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $994=$ci; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $995=(($994+24)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $996=$995; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $997=(($996)|0); //@line 632 "lib/lua-5.2.3/src/lvm.c"
 var $998=HEAP32[(($997)>>2)]; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 $base=$998; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 label=121;break;
 case 121: 
 label=289;break; //@line 632 "lib/lua-5.2.3/src/lvm.c"
 case 122: 
 var $1001=$base; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1002=$i; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1003=$1002>>>23; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1004=$1003&511; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1005=(($1001+($1004<<4))|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 $rb46=$1005; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1006=$rb46; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1007=(($1006+8)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1008=HEAP32[(($1007)>>2)]; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1009=($1008|0)==3; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 if($1009){label=123;break;}else{label=124;break;} //@line 635 "lib/lua-5.2.3/src/lvm.c"
 case 123: 
 var $1011=$rb46; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1012=(($1011)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1013=$1012; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1014=HEAPF64[(($1013)>>3)]; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 $nb47=$1014; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1015=$ra; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 $io48=$1015; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1016=$nb47; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1017=((-.0))-($1016); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1018=$io48; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1019=(($1018)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1020=$1019; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($1020)>>3)]=$1017; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1021=$io48; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1022=(($1021+8)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1022)>>2)]=3; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 label=125;break; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 case 124: 
 var $1024=$1; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1025=$ra; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1026=$rb46; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1027=$rb46; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 _luaV_arith($1024,$1025,$1026,$1027,12); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1028=$ci; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1029=(($1028+24)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1030=$1029; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1031=(($1030)|0); //@line 635 "lib/lua-5.2.3/src/lvm.c"
 var $1032=HEAP32[(($1031)>>2)]; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 $base=$1032; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 label=125;break;
 case 125: 
 label=289;break; //@line 635 "lib/lua-5.2.3/src/lvm.c"
 case 126: 
 var $1035=$base; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1036=$i; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1037=$1036>>>23; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1038=$1037&511; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1039=(($1035+($1038<<4))|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 $rb49=$1039; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1040=$rb49; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1041=(($1040+8)|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1042=HEAP32[(($1041)>>2)]; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1043=($1042|0)==0; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 if($1043){var $1058=1;label=130;break;}else{label=127;break;} //@line 645 "lib/lua-5.2.3/src/lvm.c"
 case 127: 
 var $1045=$rb49; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1046=(($1045+8)|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1047=HEAP32[(($1046)>>2)]; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1048=($1047|0)==1; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 if($1048){label=128;break;}else{var $1056=0;label=129;break;} //@line 645 "lib/lua-5.2.3/src/lvm.c"
 case 128: 
 var $1050=$rb49; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1051=(($1050)|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1052=$1051; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1053=HEAP32[(($1052)>>2)]; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1054=($1053|0)==0; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1056=$1054;label=129;break;
 case 129: 
 var $1056;
 var $1058=$1056;label=130;break;
 case 130: 
 var $1058;
 var $1059=($1058&1);
 $res=$1059;
 var $1060=$ra; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 $io50=$1060; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1061=$res; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1062=$io50; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1063=(($1062)|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1064=$1063; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1064)>>2)]=$1061; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1065=$io50; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 var $1066=(($1065+8)|0); //@line 645 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1066)>>2)]=1; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 645 "lib/lua-5.2.3/src/lvm.c"
 case 131: 
 var $1068=$1; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1069=$ra; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1070=$base; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1071=$i; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1072=$1071>>>23; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1073=$1072&511; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1074=(($1070+($1073<<4))|0); //@line 650 "lib/lua-5.2.3/src/lvm.c"
 _luaV_objlen($1068,$1069,$1074); //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1075=$ci; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1076=(($1075+24)|0); //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1077=$1076; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1078=(($1077)|0); //@line 650 "lib/lua-5.2.3/src/lvm.c"
 var $1079=HEAP32[(($1078)>>2)]; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 $base=$1079; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 650 "lib/lua-5.2.3/src/lvm.c"
 case 132: 
 var $1081=$i; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1082=$1081>>>23; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1083=$1082&511; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $b51=$1083; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1084=$i; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1085=$1084>>>14; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1086=$1085&511; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $c52=$1086; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1087=$base; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1088=$c52; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1089=(($1087+($1088<<4))|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1090=(($1089+16)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1091=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1092=(($1091+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1092)>>2)]=$1090; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1093=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1094=$c52; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1095=$b51; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1096=((($1094)-($1095))|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1097=((($1096)+(1))|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 _luaV_concat($1093,$1097); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1098=$ci; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1099=(($1098+24)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1100=$1099; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1101=(($1100)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1102=HEAP32[(($1101)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $base=$1102; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1103=$base; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1104=$i; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1105=$1104>>>6; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1106=$1105&255; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1107=(($1103+($1106<<4))|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $ra=$1107; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1108=$b51; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1109=$base; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1110=(($1109+($1108<<4))|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $rb53=$1110; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1111=$rb53; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $io254=$1111; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1112=$ra; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $io155=$1112; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1113=$io155; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1114=(($1113)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1115=$io254; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1116=(($1115)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1117=$1114; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1118=$1116; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($1117)>>2)]=HEAP32[(($1118)>>2)];HEAP32[((($1117)+(4))>>2)]=HEAP32[((($1118)+(4))>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1119=$io254; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1120=(($1119+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1121=HEAP32[(($1120)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1122=$io155; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1123=(($1122+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1123)>>2)]=$1121; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1124=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1125=(($1124+12)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1126=HEAP32[(($1125)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1127=(($1126+12)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1128=HEAP32[(($1127)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1129=($1128|0)>0; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 if($1129){label=133;break;}else{label=137;break;} //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 133: 
 var $1131=$ra; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1132=$rb53; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1133=($1131>>>0)>=($1132>>>0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 if($1133){label=134;break;}else{label=135;break;} //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 134: 
 var $1135=$ra; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1136=(($1135+16)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1140=$1136;label=136;break; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 135: 
 var $1138=$rb53; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1140=$1138;label=136;break; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 136: 
 var $1140; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1141=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1142=(($1141+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1142)>>2)]=$1140; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1143=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 _luaC_step($1143); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1144=$ci; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1145=(($1144+4)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1146=HEAP32[(($1145)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1147=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1148=(($1147+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1148)>>2)]=$1146; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 label=137;break; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 137: 
 var $1150=$ci; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1151=(($1150+24)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1152=$1151; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1153=(($1152)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1154=HEAP32[(($1153)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 $base=$1154; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1155=$ci; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1156=(($1155+4)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1157=HEAP32[(($1156)>>2)]; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1158=$1; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 var $1159=(($1158+8)|0); //@line 653 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1159)>>2)]=$1157; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 653 "lib/lua-5.2.3/src/lvm.c"
 case 138: 
 var $1161=$i; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1162=$1161>>>6; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1163=$1162&255; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 $a56=$1163; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1164=$a56; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1165=($1164|0)>0; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 if($1165){label=139;break;}else{label=140;break;} //@line 665 "lib/lua-5.2.3/src/lvm.c"
 case 139: 
 var $1167=$1; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1168=$ci; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1169=(($1168+24)|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1170=$1169; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1171=(($1170)|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1172=HEAP32[(($1171)>>2)]; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1173=$a56; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1174=(($1172+($1173<<4))|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1175=((($1174)-(16))|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1167,$1175); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 label=140;break; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 case 140: 
 var $1177=$i; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1178=$1177>>>14; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1179=$1178&262143; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1180=((($1179)-(131071))|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1181=(($1180)|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1182=$ci; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1183=(($1182+24)|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1184=$1183; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1185=(($1184+4)|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1186=HEAP32[(($1185)>>2)]; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 var $1187=(($1186+($1181<<2))|0); //@line 665 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1185)>>2)]=$1187; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 665 "lib/lua-5.2.3/src/lvm.c"
 case 141: 
 var $1189=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1190=$1189>>>23; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1191=$1190&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1192=$1191&256; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1193=($1192|0)!=0; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 if($1193){label=142;break;}else{label=143;break;} //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 142: 
 var $1195=$k; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1196=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1197=$1196>>>23; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1198=$1197&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1199=$1198&-257; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1200=(($1195+($1199<<4))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1208=$1200;label=144;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 143: 
 var $1202=$base; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1203=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1204=$1203>>>23; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1205=$1204&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1206=(($1202+($1205<<4))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1208=$1206;label=144;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 144: 
 var $1208; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 $rb57=$1208; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1209=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1210=$1209>>>14; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1211=$1210&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1212=$1211&256; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1213=($1212|0)!=0; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 if($1213){label=145;break;}else{label=146;break;} //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 145: 
 var $1215=$k; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1216=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1217=$1216>>>14; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1218=$1217&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1219=$1218&-257; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1220=(($1215+($1219<<4))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1228=$1220;label=147;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 146: 
 var $1222=$base; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1223=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1224=$1223>>>14; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1225=$1224&511; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1226=(($1222+($1225<<4))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1228=$1226;label=147;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 147: 
 var $1228; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 $rc58=$1228; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1229=$rb57; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1230=(($1229+8)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1231=HEAP32[(($1230)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1232=$rc58; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1233=(($1232+8)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1234=HEAP32[(($1233)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1235=($1231|0)==($1234|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 if($1235){label=148;break;}else{var $1243=0;label=149;break;} //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 148: 
 var $1237=$1; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1238=$rb57; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1239=$rc58; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1240=_luaV_equalobj_($1237,$1238,$1239); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1241=($1240|0)!=0; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1243=$1241;label=149;break;
 case 149: 
 var $1243;
 var $1244=($1243&1);
 var $1245=$i;
 var $1246=$1245>>>6;
 var $1247=$1246&255;
 var $1248=($1244|0)!=($1247|0);
 if($1248){label=150;break;}else{label=151;break;}
 case 150: 
 var $1250=$ci; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1251=(($1250+24)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1252=$1251; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1253=(($1252+4)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1254=HEAP32[(($1253)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1255=(($1254+4)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1253)>>2)]=$1255; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 label=154;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 151: 
 var $1257=$ci; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1258=(($1257+24)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1259=$1258; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1260=(($1259+4)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1261=HEAP32[(($1260)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1262=HEAP32[(($1261)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 $i=$1262; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1263=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1264=$1263>>>6; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1265=$1264&255; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 $a59=$1265; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1266=$a59; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1267=($1266|0)>0; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 if($1267){label=152;break;}else{label=153;break;} //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 152: 
 var $1269=$1; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1270=$ci; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1271=(($1270+24)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1272=$1271; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1273=(($1272)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1274=HEAP32[(($1273)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1275=$a59; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1276=(($1274+($1275<<4))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1277=((($1276)-(16))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1269,$1277); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 label=153;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 153: 
 var $1279=$i; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1280=$1279>>>14; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1281=$1280&262143; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1282=((($1281)-(131071))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1283=((($1282)+(1))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1284=$ci; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1285=(($1284+24)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1286=$1285; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1287=(($1286+4)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1288=HEAP32[(($1287)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1289=(($1288+($1283<<2))|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1287)>>2)]=$1289; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 label=154;break;
 case 154: 
 var $1291=$ci; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1292=(($1291+24)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1293=$1292; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1294=(($1293)|0); //@line 668 "lib/lua-5.2.3/src/lvm.c"
 var $1295=HEAP32[(($1294)>>2)]; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 $base=$1295; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 668 "lib/lua-5.2.3/src/lvm.c"
 case 155: 
 var $1297=$1; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1298=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1299=$1298>>>23; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1300=$1299&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1301=$1300&256; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1302=($1301|0)!=0; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 if($1302){label=156;break;}else{label=157;break;} //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 156: 
 var $1304=$k; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1305=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1306=$1305>>>23; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1307=$1306&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1308=$1307&-257; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1309=(($1304+($1308<<4))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1317=$1309;label=158;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 157: 
 var $1311=$base; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1312=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1313=$1312>>>23; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1314=$1313&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1315=(($1311+($1314<<4))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1317=$1315;label=158;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 158: 
 var $1317; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1318=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1319=$1318>>>14; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1320=$1319&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1321=$1320&256; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1322=($1321|0)!=0; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 if($1322){label=159;break;}else{label=160;break;} //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 159: 
 var $1324=$k; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1325=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1326=$1325>>>14; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1327=$1326&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1328=$1327&-257; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1329=(($1324+($1328<<4))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1337=$1329;label=161;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 160: 
 var $1331=$base; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1332=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1333=$1332>>>14; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1334=$1333&511; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1335=(($1331+($1334<<4))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1337=$1335;label=161;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 161: 
 var $1337; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1338=_luaV_lessthan($1297,$1317,$1337); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1339=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1340=$1339>>>6; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1341=$1340&255; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1342=($1338|0)!=($1341|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 if($1342){label=162;break;}else{label=163;break;} //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 162: 
 var $1344=$ci; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1345=(($1344+24)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1346=$1345; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1347=(($1346+4)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1348=HEAP32[(($1347)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1349=(($1348+4)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1347)>>2)]=$1349; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 label=166;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 163: 
 var $1351=$ci; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1352=(($1351+24)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1353=$1352; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1354=(($1353+4)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1355=HEAP32[(($1354)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1356=HEAP32[(($1355)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 $i=$1356; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1357=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1358=$1357>>>6; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1359=$1358&255; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 $a60=$1359; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1360=$a60; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1361=($1360|0)>0; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 if($1361){label=164;break;}else{label=165;break;} //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 164: 
 var $1363=$1; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1364=$ci; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1365=(($1364+24)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1366=$1365; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1367=(($1366)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1368=HEAP32[(($1367)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1369=$a60; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1370=(($1368+($1369<<4))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1371=((($1370)-(16))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1363,$1371); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 label=165;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 165: 
 var $1373=$i; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1374=$1373>>>14; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1375=$1374&262143; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1376=((($1375)-(131071))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1377=((($1376)+(1))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1378=$ci; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1379=(($1378+24)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1380=$1379; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1381=(($1380+4)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1382=HEAP32[(($1381)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1383=(($1382+($1377<<2))|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1381)>>2)]=$1383; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 label=166;break;
 case 166: 
 var $1385=$ci; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1386=(($1385+24)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1387=$1386; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1388=(($1387)|0); //@line 678 "lib/lua-5.2.3/src/lvm.c"
 var $1389=HEAP32[(($1388)>>2)]; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 $base=$1389; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 678 "lib/lua-5.2.3/src/lvm.c"
 case 167: 
 var $1391=$1; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1392=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1393=$1392>>>23; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1394=$1393&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1395=$1394&256; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1396=($1395|0)!=0; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 if($1396){label=168;break;}else{label=169;break;} //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 168: 
 var $1398=$k; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1399=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1400=$1399>>>23; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1401=$1400&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1402=$1401&-257; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1403=(($1398+($1402<<4))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1411=$1403;label=170;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 169: 
 var $1405=$base; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1406=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1407=$1406>>>23; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1408=$1407&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1409=(($1405+($1408<<4))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1411=$1409;label=170;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 170: 
 var $1411; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1412=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1413=$1412>>>14; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1414=$1413&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1415=$1414&256; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1416=($1415|0)!=0; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 if($1416){label=171;break;}else{label=172;break;} //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 171: 
 var $1418=$k; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1419=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1420=$1419>>>14; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1421=$1420&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1422=$1421&-257; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1423=(($1418+($1422<<4))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1431=$1423;label=173;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 172: 
 var $1425=$base; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1426=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1427=$1426>>>14; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1428=$1427&511; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1429=(($1425+($1428<<4))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1431=$1429;label=173;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 173: 
 var $1431; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1432=_luaV_lessequal($1391,$1411,$1431); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1433=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1434=$1433>>>6; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1435=$1434&255; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1436=($1432|0)!=($1435|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 if($1436){label=174;break;}else{label=175;break;} //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 174: 
 var $1438=$ci; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1439=(($1438+24)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1440=$1439; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1441=(($1440+4)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1442=HEAP32[(($1441)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1443=(($1442+4)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1441)>>2)]=$1443; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 label=178;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 175: 
 var $1445=$ci; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1446=(($1445+24)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1447=$1446; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1448=(($1447+4)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1449=HEAP32[(($1448)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1450=HEAP32[(($1449)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 $i=$1450; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1451=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1452=$1451>>>6; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1453=$1452&255; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 $a61=$1453; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1454=$a61; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1455=($1454|0)>0; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 if($1455){label=176;break;}else{label=177;break;} //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 176: 
 var $1457=$1; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1458=$ci; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1459=(($1458+24)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1460=$1459; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1461=(($1460)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1462=HEAP32[(($1461)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1463=$a61; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1464=(($1462+($1463<<4))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1465=((($1464)-(16))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1457,$1465); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 label=177;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 177: 
 var $1467=$i; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1468=$1467>>>14; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1469=$1468&262143; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1470=((($1469)-(131071))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1471=((($1470)+(1))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1472=$ci; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1473=(($1472+24)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1474=$1473; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1475=(($1474+4)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1476=HEAP32[(($1475)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1477=(($1476+($1471<<2))|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1475)>>2)]=$1477; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 label=178;break;
 case 178: 
 var $1479=$ci; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1480=(($1479+24)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1481=$1480; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1482=(($1481)|0); //@line 686 "lib/lua-5.2.3/src/lvm.c"
 var $1483=HEAP32[(($1482)>>2)]; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 $base=$1483; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 686 "lib/lua-5.2.3/src/lvm.c"
 case 179: 
 var $1485=$i; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1486=$1485>>>14; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1487=$1486&511; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1488=($1487|0)!=0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1488){label=180;break;}else{label=183;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 180: 
 var $1490=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1491=(($1490+8)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1492=HEAP32[(($1491)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1493=($1492|0)==0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1493){label=186;break;}else{label=181;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 181: 
 var $1495=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1496=(($1495+8)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1497=HEAP32[(($1496)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1498=($1497|0)==1; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1498){label=182;break;}else{label=187;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 182: 
 var $1500=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1501=(($1500)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1502=$1501; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1503=HEAP32[(($1502)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1504=($1503|0)==0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1504){label=186;break;}else{label=187;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 183: 
 var $1506=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1507=(($1506+8)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1508=HEAP32[(($1507)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1509=($1508|0)==0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1509){label=187;break;}else{label=184;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 184: 
 var $1511=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1512=(($1511+8)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1513=HEAP32[(($1512)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1514=($1513|0)==1; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1514){label=185;break;}else{label=186;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 185: 
 var $1516=$ra; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1517=(($1516)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1518=$1517; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1519=HEAP32[(($1518)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1520=($1519|0)==0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1520){label=187;break;}else{label=186;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 186: 
 var $1522=$ci; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1523=(($1522+24)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1524=$1523; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1525=(($1524+4)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1526=HEAP32[(($1525)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1527=(($1526+4)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1525)>>2)]=$1527; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 label=190;break; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 187: 
 var $1529=$ci; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1530=(($1529+24)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1531=$1530; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1532=(($1531+4)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1533=HEAP32[(($1532)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1534=HEAP32[(($1533)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 $i=$1534; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1535=$i; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1536=$1535>>>6; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1537=$1536&255; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 $a62=$1537; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1538=$a62; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1539=($1538|0)>0; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 if($1539){label=188;break;}else{label=189;break;} //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 188: 
 var $1541=$1; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1542=$ci; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1543=(($1542+24)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1544=$1543; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1545=(($1544)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1546=HEAP32[(($1545)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1547=$a62; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1548=(($1546+($1547<<4))|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1549=((($1548)-(16))|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1541,$1549); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 label=189;break; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 189: 
 var $1551=$i; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1552=$1551>>>14; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1553=$1552&262143; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1554=((($1553)-(131071))|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1555=((($1554)+(1))|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1556=$ci; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1557=(($1556+24)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1558=$1557; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1559=(($1558+4)|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1560=HEAP32[(($1559)>>2)]; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 var $1561=(($1560+($1555<<2))|0); //@line 694 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1559)>>2)]=$1561; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 label=190;break;
 case 190: 
 label=289;break; //@line 694 "lib/lua-5.2.3/src/lvm.c"
 case 191: 
 var $1564=$base; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1565=$i; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1566=$1565>>>23; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1567=$1566&511; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1568=(($1564+($1567<<4))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 $rb63=$1568; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1569=$i; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1570=$1569>>>14; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1571=$1570&511; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1572=($1571|0)!=0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1572){label=192;break;}else{label=195;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 192: 
 var $1574=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1575=(($1574+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1576=HEAP32[(($1575)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1577=($1576|0)==0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1577){label=198;break;}else{label=193;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 193: 
 var $1579=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1580=(($1579+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1581=HEAP32[(($1580)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1582=($1581|0)==1; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1582){label=194;break;}else{label=199;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 194: 
 var $1584=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1585=(($1584)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1586=$1585; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1587=HEAP32[(($1586)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1588=($1587|0)==0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1588){label=198;break;}else{label=199;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 195: 
 var $1590=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1591=(($1590+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1592=HEAP32[(($1591)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1593=($1592|0)==0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1593){label=199;break;}else{label=196;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 196: 
 var $1595=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1596=(($1595+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1597=HEAP32[(($1596)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1598=($1597|0)==1; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1598){label=197;break;}else{label=198;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 197: 
 var $1600=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1601=(($1600)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1602=$1601; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1603=HEAP32[(($1602)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1604=($1603|0)==0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1604){label=199;break;}else{label=198;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 198: 
 var $1606=$ci; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1607=(($1606+24)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1608=$1607; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1609=(($1608+4)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1610=HEAP32[(($1609)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1611=(($1610+4)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1609)>>2)]=$1611; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 label=202;break; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 199: 
 var $1613=$rb63; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 $io264=$1613; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1614=$ra; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 $io165=$1614; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1615=$io165; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1616=(($1615)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1617=$io264; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1618=(($1617)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1619=$1616; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1620=$1618; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($1619)>>2)]=HEAP32[(($1620)>>2)];HEAP32[((($1619)+(4))>>2)]=HEAP32[((($1620)+(4))>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1621=$io264; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1622=(($1621+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1623=HEAP32[(($1622)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1624=$io165; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1625=(($1624+8)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1625)>>2)]=$1623; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1626=$ci; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1627=(($1626+24)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1628=$1627; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1629=(($1628+4)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1630=HEAP32[(($1629)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1631=HEAP32[(($1630)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 $i=$1631; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1632=$i; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1633=$1632>>>6; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1634=$1633&255; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 $a66=$1634; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1635=$a66; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1636=($1635|0)>0; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 if($1636){label=200;break;}else{label=201;break;} //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 200: 
 var $1638=$1; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1639=$ci; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1640=(($1639+24)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1641=$1640; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1642=(($1641)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1643=HEAP32[(($1642)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1644=$a66; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1645=(($1643+($1644<<4))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1646=((($1645)-(16))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1638,$1646); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 label=201;break; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 201: 
 var $1648=$i; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1649=$1648>>>14; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1650=$1649&262143; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1651=((($1650)-(131071))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1652=((($1651)+(1))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1653=$ci; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1654=(($1653+24)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1655=$1654; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1656=(($1655+4)|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1657=HEAP32[(($1656)>>2)]; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 var $1658=(($1657+($1652<<2))|0); //@line 700 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1656)>>2)]=$1658; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 label=202;break;
 case 202: 
 label=289;break; //@line 700 "lib/lua-5.2.3/src/lvm.c"
 case 203: 
 var $1661=$i; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1662=$1661>>>23; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1663=$1662&511; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 $b67=$1663; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1664=$i; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1665=$1664>>>14; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1666=$1665&511; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1667=((($1666)-(1))|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 $nresults=$1667; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1668=$b67; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1669=($1668|0)!=0; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 if($1669){label=204;break;}else{label=205;break;} //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 204: 
 var $1671=$ra; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1672=$b67; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1673=(($1671+($1672<<4))|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1674=$1; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1675=(($1674+8)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1675)>>2)]=$1673; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 label=205;break; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 205: 
 var $1677=$1; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1678=$ra; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1679=$nresults; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1680=_luaD_precall($1677,$1678,$1679); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1681=($1680|0)!=0; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 if($1681){label=206;break;}else{label=209;break;} //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 206: 
 var $1683=$nresults; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1684=($1683|0)>=0; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 if($1684){label=207;break;}else{label=208;break;} //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 207: 
 var $1686=$ci; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1687=(($1686+4)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1688=HEAP32[(($1687)>>2)]; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1689=$1; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1690=(($1689+8)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1690)>>2)]=$1688; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 label=208;break; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 208: 
 var $1692=$ci; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1693=(($1692+24)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1694=$1693; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1695=(($1694)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1696=HEAP32[(($1695)>>2)]; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 $base=$1696; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 label=210;break; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 209: 
 var $1698=$1; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1699=(($1698+16)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1700=HEAP32[(($1699)>>2)]; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 $ci=$1700; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1701=$ci; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1702=(($1701+18)|0); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1703=HEAP8[($1702)]; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1704=($1703&255); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1705=$1704|4; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 var $1706=(($1705)&255); //@line 709 "lib/lua-5.2.3/src/lvm.c"
 HEAP8[($1702)]=$1706; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 210: 
 label=289;break; //@line 709 "lib/lua-5.2.3/src/lvm.c"
 case 211: 
 var $1709=$i; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1710=$1709>>>23; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1711=$1710&511; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $b68=$1711; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1712=$b68; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1713=($1712|0)!=0; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 if($1713){label=212;break;}else{label=213;break;} //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 212: 
 var $1715=$ra; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1716=$b68; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1717=(($1715+($1716<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1718=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1719=(($1718+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1719)>>2)]=$1717; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=213;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 213: 
 var $1721=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1722=$ra; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1723=_luaD_precall($1721,$1722,-1); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1724=($1723|0)!=0; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 if($1724){label=214;break;}else{label=215;break;} //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 214: 
 var $1726=$ci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1727=(($1726+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1728=$1727; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1729=(($1728)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1730=HEAP32[(($1729)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $base=$1730; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=222;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 215: 
 var $1732=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1733=(($1732+16)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1734=HEAP32[(($1733)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $nci=$1734; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1735=$nci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1736=(($1735+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1737=HEAP32[(($1736)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $oci=$1737; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1738=$nci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1739=(($1738)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1740=HEAP32[(($1739)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $nfunc=$1740; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1741=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1742=(($1741)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1743=HEAP32[(($1742)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $ofunc=$1743; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1744=$nci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1745=(($1744+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1746=$1745; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1747=(($1746)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1748=HEAP32[(($1747)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1749=$nfunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1750=(($1749)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1751=$1750; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1752=HEAP32[(($1751)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1753=$1752; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1754=$1753; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1755=(($1754+12)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1756=HEAP32[(($1755)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1757=(($1756+76)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1758=HEAP8[($1757)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1759=($1758&255); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1760=(($1748+($1759<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $lim=$1760; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1761=$cl; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1762=(($1761+12)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1763=HEAP32[(($1762)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1764=(($1763+56)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1765=HEAP32[(($1764)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1766=($1765|0)>0; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 if($1766){label=216;break;}else{label=217;break;} //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 216: 
 var $1768=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1769=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1770=(($1769+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1771=$1770; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1772=(($1771)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1773=HEAP32[(($1772)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1768,$1773); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=217;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 217: 
 $aux=0; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=218;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 218: 
 var $1776=$nfunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1777=$aux; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1778=(($1776+($1777<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1779=$lim; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1780=($1778>>>0)<($1779>>>0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 if($1780){label=219;break;}else{label=221;break;} //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 219: 
 var $1782=$nfunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1783=$aux; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1784=(($1782+($1783<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $io269=$1784; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1785=$ofunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1786=$aux; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1787=(($1785+($1786<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $io170=$1787; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1788=$io170; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1789=(($1788)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1790=$io269; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1791=(($1790)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1792=$1789; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1793=$1791; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($1792)>>2)]=HEAP32[(($1793)>>2)];HEAP32[((($1792)+(4))>>2)]=HEAP32[((($1793)+(4))>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1794=$io269; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1795=(($1794+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1796=HEAP32[(($1795)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1797=$io170; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1798=(($1797+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1798)>>2)]=$1796; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=220;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 220: 
 var $1800=$aux; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1801=((($1800)+(1))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $aux=$1801; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=218;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 221: 
 var $1803=$ofunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1804=$nci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1805=(($1804+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1806=$1805; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1807=(($1806)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1808=HEAP32[(($1807)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1809=$nfunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1810=$1808; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1811=$1809; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1812=((($1810)-($1811))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1813=(((($1812|0))/(16))&-1); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1814=(($1803+($1813<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1815=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1816=(($1815+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1817=$1816; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1818=(($1817)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1818)>>2)]=$1814; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1819=$ofunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1820=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1821=(($1820+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1822=HEAP32[(($1821)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1823=$nfunc; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1824=$1822; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1825=$1823; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1826=((($1824)-($1825))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1827=(((($1826|0))/(16))&-1); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1828=(($1819+($1827<<4))|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1829=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1830=(($1829+8)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1830)>>2)]=$1828; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1831=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1832=(($1831+4)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1832)>>2)]=$1828; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1833=$nci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1834=(($1833+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1835=$1834; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1836=(($1835+4)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1837=HEAP32[(($1836)>>2)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1838=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1839=(($1838+24)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1840=$1839; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1841=(($1840+4)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1841)>>2)]=$1837; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1842=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1843=(($1842+18)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1844=HEAP8[($1843)]; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1845=($1844&255); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1846=$1845|64; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1847=(($1846)&255); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP8[($1843)]=$1847; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1848=$oci; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1849=$1; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 var $1850=(($1849+16)|0); //@line 723 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1850)>>2)]=$1848; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 $ci=$1848; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 222: 
 label=289;break; //@line 723 "lib/lua-5.2.3/src/lvm.c"
 case 223: 
 var $1853=$i; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1854=$1853>>>23; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1855=$1854&511; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 $b71=$1855; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1856=$b71; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1857=($1856|0)!=0; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 if($1857){label=224;break;}else{label=225;break;} //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 224: 
 var $1859=$ra; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1860=$b71; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1861=(($1859+($1860<<4))|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1862=((($1861)-(16))|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1863=$1; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1864=(($1863+8)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1864)>>2)]=$1862; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 label=225;break; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 225: 
 var $1866=$cl; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1867=(($1866+12)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1868=HEAP32[(($1867)>>2)]; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1869=(($1868+56)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1870=HEAP32[(($1869)>>2)]; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1871=($1870|0)>0; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 if($1871){label=226;break;}else{label=227;break;} //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 226: 
 var $1873=$1; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1874=$base; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 _luaF_close($1873,$1874); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 label=227;break; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 227: 
 var $1876=$1; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1877=$ra; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1878=_luaD_poscall($1876,$1877); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 $b71=$1878; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1879=$ci; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1880=(($1879+18)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1881=HEAP8[($1880)]; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1882=($1881&255); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1883=$1882&4; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1884=($1883|0)!=0; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 if($1884){label=229;break;}else{label=228;break;} //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 228: 
 STACKTOP=sp;return; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 229: 
 var $1887=$1; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1888=(($1887+16)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1889=HEAP32[(($1888)>>2)]; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 $ci=$1889; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1890=$b71; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1891=($1890|0)!=0; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 if($1891){label=230;break;}else{label=231;break;} //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 230: 
 var $1893=$ci; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1894=(($1893+4)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1895=HEAP32[(($1894)>>2)]; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1896=$1; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 var $1897=(($1896+8)|0); //@line 752 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1897)>>2)]=$1895; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 label=231;break; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 231: 
 label=2;break; //@line 752 "lib/lua-5.2.3/src/lvm.c"
 case 232: 
 var $1900=$ra; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1901=(($1900+32)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1902=(($1901)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1903=$1902; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1904=HEAPF64[(($1903)>>3)]; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 $step=$1904; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1905=$ra; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1906=(($1905)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1907=$1906; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1908=HEAPF64[(($1907)>>3)]; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1909=$step; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1910=($1908)+($1909); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 $idx=$1910; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1911=$ra; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1912=(($1911+16)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1913=(($1912)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1914=$1913; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1915=HEAPF64[(($1914)>>3)]; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 $limit=$1915; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1916=$step; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1917=0<$1916; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 if($1917){label=233;break;}else{label=234;break;} //@line 767 "lib/lua-5.2.3/src/lvm.c"
 case 233: 
 var $1919=$idx; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1920=$limit; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1921=$1919<=$1920; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 if($1921){label=235;break;}else{label=236;break;} //@line 767 "lib/lua-5.2.3/src/lvm.c"
 case 234: 
 var $1923=$limit; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1924=$idx; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1925=$1923<=$1924; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 if($1925){label=235;break;}else{label=236;break;} //@line 767 "lib/lua-5.2.3/src/lvm.c"
 case 235: 
 var $1927=$i; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1928=$1927>>>14; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1929=$1928&262143; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1930=((($1929)-(131071))|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1931=$ci; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1932=(($1931+24)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1933=$1932; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1934=(($1933+4)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1935=HEAP32[(($1934)>>2)]; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1936=(($1935+($1930<<2))|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1934)>>2)]=$1936; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1937=$ra; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 $io72=$1937; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1938=$idx; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1939=$io72; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1940=(($1939)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1941=$1940; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($1941)>>3)]=$1938; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1942=$io72; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1943=(($1942+8)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1943)>>2)]=3; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1944=$ra; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1945=(($1944+48)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 $io73=$1945; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1946=$idx; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1947=$io73; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1948=(($1947)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1949=$1948; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($1949)>>3)]=$1946; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1950=$io73; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 var $1951=(($1950+8)|0); //@line 767 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($1951)>>2)]=3; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 label=236;break; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 case 236: 
 label=289;break; //@line 767 "lib/lua-5.2.3/src/lvm.c"
 case 237: 
 var $1954=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $init=$1954; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1955=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1956=(($1955+16)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $plimit=$1956; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1957=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1958=(($1957+32)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $pstep=$1958; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1959=$init; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1960=(($1959+8)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1961=HEAP32[(($1960)>>2)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1962=($1961|0)==3; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1962){label=240;break;}else{label=238;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 238: 
 var $1964=$init; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1965=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1966=_luaV_tonumber($1964,$1965); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $init=$1966; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1967=($1966|0)!=0; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1967){label=240;break;}else{label=239;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 239: 
 var $1969=$1; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($1969,5072,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 240: 
 var $1971=$plimit; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1972=(($1971+8)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1973=HEAP32[(($1972)>>2)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1974=($1973|0)==3; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1974){label=243;break;}else{label=241;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 241: 
 var $1976=$plimit; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1977=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1978=(($1977+16)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1979=_luaV_tonumber($1976,$1978); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $plimit=$1979; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1980=($1979|0)!=0; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1980){label=243;break;}else{label=242;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 242: 
 var $1982=$1; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($1982,4280,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 243: 
 var $1984=$pstep; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1985=(($1984+8)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1986=HEAP32[(($1985)>>2)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1987=($1986|0)==3; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1987){label=246;break;}else{label=244;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 244: 
 var $1989=$pstep; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1990=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1991=(($1990+32)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1992=_luaV_tonumber($1989,$1991); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $pstep=$1992; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $1993=($1992|0)!=0; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 if($1993){label=246;break;}else{label=245;break;} //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 245: 
 var $1995=$1; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 _luaG_runerror($1995,3456,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 246: 
 label=247;break;
 case 247: 
 label=248;break;
 case 248: 
 var $1999=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 $io74=$1999; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2000=$ra; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2001=(($2000)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2002=$2001; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2003=HEAPF64[(($2002)>>3)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2004=$pstep; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2005=(($2004)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2006=$2005; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2007=HEAPF64[(($2006)>>3)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2008=($2003)-($2007); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2009=$io74; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2010=(($2009)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2011=$2010; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 HEAPF64[(($2011)>>3)]=$2008; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2012=$io74; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2013=(($2012+8)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2013)>>2)]=3; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2014=$i; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2015=$2014>>>14; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2016=$2015&262143; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2017=((($2016)-(131071))|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2018=$ci; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2019=(($2018+24)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2020=$2019; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2021=(($2020+4)|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2022=HEAP32[(($2021)>>2)]; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 var $2023=(($2022+($2017<<2))|0); //@line 778 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2021)>>2)]=$2023; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 778 "lib/lua-5.2.3/src/lvm.c"
 case 249: 
 var $2025=$ra; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2026=(($2025+48)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $cb=$2026; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2027=$ra; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2028=(($2027+32)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io275=$2028; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2029=$cb; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2030=(($2029+32)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io176=$2030; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2031=$io176; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2032=(($2031)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2033=$io275; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2034=(($2033)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2035=$2032; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2036=$2034; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($2035)>>2)]=HEAP32[(($2036)>>2)];HEAP32[((($2035)+(4))>>2)]=HEAP32[((($2036)+(4))>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2037=$io275; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2038=(($2037+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2039=HEAP32[(($2038)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2040=$io176; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2041=(($2040+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2041)>>2)]=$2039; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2042=$ra; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2043=(($2042+16)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io277=$2043; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2044=$cb; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2045=(($2044+16)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io178=$2045; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2046=$io178; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2047=(($2046)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2048=$io277; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2049=(($2048)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2050=$2047; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2051=$2049; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($2050)>>2)]=HEAP32[(($2051)>>2)];HEAP32[((($2050)+(4))>>2)]=HEAP32[((($2051)+(4))>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2052=$io277; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2053=(($2052+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2054=HEAP32[(($2053)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2055=$io178; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2056=(($2055+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2056)>>2)]=$2054; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2057=$ra; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io279=$2057; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2058=$cb; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $io180=$2058; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2059=$io180; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2060=(($2059)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2061=$io279; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2062=(($2061)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2063=$2060; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2064=$2062; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($2063)>>2)]=HEAP32[(($2064)>>2)];HEAP32[((($2063)+(4))>>2)]=HEAP32[((($2064)+(4))>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2065=$io279; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2066=(($2065+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2067=HEAP32[(($2066)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2068=$io180; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2069=(($2068+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2069)>>2)]=$2067; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2070=$cb; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2071=(($2070+48)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2072=$1; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2073=(($2072+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2073)>>2)]=$2071; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2074=$1; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2075=$cb; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2076=$i; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2077=$2076>>>14; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2078=$2077&511; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 _luaD_call($2074,$2075,$2078,1); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2079=$ci; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2080=(($2079+24)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2081=$2080; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2082=(($2081)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2083=HEAP32[(($2082)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $base=$2083; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2084=$ci; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2085=(($2084+4)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2086=HEAP32[(($2085)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2087=$1; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2088=(($2087+8)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2088)>>2)]=$2086; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2089=$ci; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2090=(($2089+24)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2091=$2090; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2092=(($2091+4)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2093=HEAP32[(($2092)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2094=(($2093+4)|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2092)>>2)]=$2094; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2095=HEAP32[(($2093)>>2)]; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $i=$2095; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2096=$base; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2097=$i; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2098=$2097>>>6; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2099=$2098&255; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 var $2100=(($2096+($2099<<4))|0); //@line 791 "lib/lua-5.2.3/src/lvm.c"
 $ra=$2100; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 label=251;break; //@line 791 "lib/lua-5.2.3/src/lvm.c"
 case 250: 
 label=251;break; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 case 251: 
 var $2103=$ra; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2104=(($2103+16)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2105=(($2104+8)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2106=HEAP32[(($2105)>>2)]; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2107=($2106|0)==0; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 if($2107){label=253;break;}else{label=252;break;} //@line 804 "lib/lua-5.2.3/src/lvm.c"
 case 252: 
 var $2109=$ra; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2110=(($2109+16)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 $io281=$2110; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2111=$ra; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 $io182=$2111; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2112=$io182; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2113=(($2112)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2114=$io281; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2115=(($2114)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2116=$2113; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2117=$2115; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($2116)>>2)]=HEAP32[(($2117)>>2)];HEAP32[((($2116)+(4))>>2)]=HEAP32[((($2117)+(4))>>2)]; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2118=$io281; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2119=(($2118+8)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2120=HEAP32[(($2119)>>2)]; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2121=$io182; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2122=(($2121+8)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2122)>>2)]=$2120; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2123=$i; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2124=$2123>>>14; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2125=$2124&262143; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2126=((($2125)-(131071))|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2127=$ci; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2128=(($2127+24)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2129=$2128; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2130=(($2129+4)|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2131=HEAP32[(($2130)>>2)]; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 var $2132=(($2131+($2126<<2))|0); //@line 804 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2130)>>2)]=$2132; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 label=253;break; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 case 253: 
 label=289;break; //@line 804 "lib/lua-5.2.3/src/lvm.c"
 case 254: 
 var $2135=$i; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2136=$2135>>>23; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2137=$2136&511; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $n=$2137; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2138=$i; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2139=$2138>>>14; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2140=$2139&511; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $c83=$2140; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2141=$n; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2142=($2141|0)==0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2142){label=255;break;}else{label=256;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 255: 
 var $2144=$1; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2145=(($2144+8)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2146=HEAP32[(($2145)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2147=$ra; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2148=$2146; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2149=$2147; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2150=((($2148)-($2149))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2151=(((($2150|0))/(16))&-1); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2152=((($2151)-(1))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $n=$2152; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=256;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 256: 
 var $2154=$c83; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2155=($2154|0)==0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2155){label=257;break;}else{label=258;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 257: 
 var $2157=$ci; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2158=(($2157+24)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2159=$2158; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2160=(($2159+4)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2161=HEAP32[(($2160)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2162=(($2161+4)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2160)>>2)]=$2162; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2163=HEAP32[(($2161)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2164=$2163>>>6; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2165=$2164&67108863; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $c83=$2165; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=258;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 258: 
 var $2167=$ra; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2168=(($2167)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2169=$2168; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2170=HEAP32[(($2169)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2171=$2170; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $h=$2171; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2172=$c83; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2173=((($2172)-(1))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2174=((($2173)*(50))&-1); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2175=$n; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2176=((($2174)+($2175))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $last=$2176; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2177=$last; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2178=$h; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2179=(($2178+28)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2180=HEAP32[(($2179)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2181=($2177|0)>($2180|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2181){label=259;break;}else{label=260;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 259: 
 var $2183=$1; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2184=$h; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2185=$last; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 _luaH_resizearray($2183,$2184,$2185); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=260;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 260: 
 label=261;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 261: 
 var $2188=$n; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2189=($2188|0)>0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2189){label=262;break;}else{label=268;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 262: 
 var $2191=$ra; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2192=$n; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2193=(($2191+($2192<<4))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $val=$2193; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2194=$1; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2195=$h; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2196=$last; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2197=((($2196)-(1))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $last=$2197; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2198=$val; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 _luaH_setint($2194,$2195,$2196,$2198); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2199=$val; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2200=(($2199+8)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2201=HEAP32[(($2200)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2202=$2201&64; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2203=($2202|0)!=0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2203){label=263;break;}else{label=266;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 263: 
 var $2205=$val; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2206=(($2205)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2207=$2206; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2208=HEAP32[(($2207)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2209=$2208; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2210=(($2209+5)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2211=HEAP8[($2210)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2212=($2211&255); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2213=$2212&3; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2214=($2213|0)!=0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2214){label=264;break;}else{label=266;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 264: 
 var $2216=$h; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2217=$2216; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2218=$2217; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2219=(($2218+5)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2220=HEAP8[($2219)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2221=($2220&255); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2222=$2221&4; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2223=($2222|0)!=0; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 if($2223){label=265;break;}else{label=266;break;} //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 265: 
 var $2225=$1; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2226=$h; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2227=$2226; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 _luaC_barrierback_($2225,$2227); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=266;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 266: 
 label=267;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 267: 
 var $2230=$n; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2231=((($2230)-(1))|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 $n=$2231; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=261;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 268: 
 var $2233=$ci; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2234=(($2233+4)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2235=HEAP32[(($2234)>>2)]; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2236=$1; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 var $2237=(($2236+8)|0); //@line 811 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2237)>>2)]=$2235; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 811 "lib/lua-5.2.3/src/lvm.c"
 case 269: 
 var $2239=$i; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2240=$2239>>>14; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2241=$2240&262143; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2242=$cl; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2243=(($2242+12)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2244=HEAP32[(($2243)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2245=(($2244+16)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2246=HEAP32[(($2245)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2247=(($2246+($2241<<2))|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2248=HEAP32[(($2247)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 $p=$2248; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2249=$p; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2250=$cl; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2251=(($2250+16)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2252=(($2251)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2253=$base; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2254=_getcached($2249,$2252,$2253); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 $ncl=$2254; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2255=$ncl; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2256=($2255|0)==0; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 if($2256){label=270;break;}else{label=271;break;} //@line 833 "lib/lua-5.2.3/src/lvm.c"
 case 270: 
 var $2258=$1; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2259=$p; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2260=$cl; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2261=(($2260+16)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2262=(($2261)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2263=$base; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2264=$ra; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 _pushclosure($2258,$2259,$2262,$2263,$2264); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 label=272;break; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 case 271: 
 var $2266=$ra; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 $io84=$2266; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2267=$ncl; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2268=$2267; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2269=$io84; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2270=(($2269)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2271=$2270; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2271)>>2)]=$2268; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2272=$io84; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2273=(($2272+8)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2273)>>2)]=70; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 label=272;break;
 case 272: 
 var $2275=$1; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2276=(($2275+12)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2277=HEAP32[(($2276)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2278=(($2277+12)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2279=HEAP32[(($2278)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2280=($2279|0)>0; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 if($2280){label=273;break;}else{label=274;break;} //@line 833 "lib/lua-5.2.3/src/lvm.c"
 case 273: 
 var $2282=$ra; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2283=(($2282+16)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2284=$1; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2285=(($2284+8)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2285)>>2)]=$2283; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2286=$1; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 _luaC_step($2286); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2287=$ci; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2288=(($2287+4)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2289=HEAP32[(($2288)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2290=$1; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2291=(($2290+8)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2291)>>2)]=$2289; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 label=274;break; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 case 274: 
 var $2293=$ci; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2294=(($2293+24)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2295=$2294; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2296=(($2295)|0); //@line 833 "lib/lua-5.2.3/src/lvm.c"
 var $2297=HEAP32[(($2296)>>2)]; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 $base=$2297; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 label=289;break; //@line 833 "lib/lua-5.2.3/src/lvm.c"
 case 275: 
 var $2299=$i; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2300=$2299>>>23; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2301=$2300&511; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2302=((($2301)-(1))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $b85=$2302; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2303=$base; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2304=$ci; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2305=(($2304)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2306=HEAP32[(($2305)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2307=$2303; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2308=$2306; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2309=((($2307)-($2308))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2310=(((($2309|0))/(16))&-1); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2311=$cl; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2312=(($2311+12)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2313=HEAP32[(($2312)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2314=(($2313+76)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2315=HEAP8[($2314)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2316=($2315&255); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2317=((($2310)-($2316))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2318=((($2317)-(1))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $n86=$2318; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2319=$b85; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2320=($2319|0)<0; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 if($2320){label=276;break;}else{label=280;break;} //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 276: 
 var $2322=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $b85=$2322; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2323=$1; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2324=(($2323+24)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2325=HEAP32[(($2324)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2326=$1; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2327=(($2326+8)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2328=HEAP32[(($2327)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2329=$2325; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2330=$2328; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2331=((($2329)-($2330))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2332=(((($2331|0))/(16))&-1); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2333=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2334=($2332|0)<=($2333|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 if($2334){label=277;break;}else{label=278;break;} //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 277: 
 var $2336=$1; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2337=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 _luaD_growstack($2336,$2337); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=279;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 278: 
 label=279;break;
 case 279: 
 var $2340=$ci; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2341=(($2340+24)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2342=$2341; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2343=(($2342)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2344=HEAP32[(($2343)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $base=$2344; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2345=$base; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2346=$i; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2347=$2346>>>6; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2348=$2347&255; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2349=(($2345+($2348<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $ra=$2349; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2350=$ra; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2351=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2352=(($2350+($2351<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2353=$1; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2354=(($2353+8)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2354)>>2)]=$2352; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=280;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 280: 
 $j=0; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=281;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 281: 
 var $2357=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2358=$b85; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2359=($2357|0)<($2358|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 if($2359){label=282;break;}else{label=287;break;} //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 282: 
 var $2361=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2362=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2363=($2361|0)<($2362|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 if($2363){label=283;break;}else{label=284;break;} //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 283: 
 var $2365=$base; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2366=$n86; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2367=(((-$2366))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2368=(($2365+($2367<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2369=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2370=(($2368+($2369<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $io287=$2370; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2371=$ra; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2372=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2373=(($2371+($2372<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $io188=$2373; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2374=$io188; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2375=(($2374)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2376=$io287; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2377=(($2376)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2378=$2375; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2379=$2377; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 assert(8 % 1 === 0);HEAP32[(($2378)>>2)]=HEAP32[(($2379)>>2)];HEAP32[((($2378)+(4))>>2)]=HEAP32[((($2379)+(4))>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2380=$io287; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2381=(($2380+8)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2382=HEAP32[(($2381)>>2)]; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2383=$io188; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2384=(($2383+8)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2384)>>2)]=$2382; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=285;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 284: 
 var $2386=$ra; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2387=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2388=(($2386+($2387<<4))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2389=(($2388+8)|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($2389)>>2)]=0; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=285;break;
 case 285: 
 label=286;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 286: 
 var $2392=$j; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 var $2393=((($2392)+(1))|0); //@line 842 "lib/lua-5.2.3/src/lvm.c"
 $j=$2393; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 label=281;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 287: 
 label=289;break; //@line 842 "lib/lua-5.2.3/src/lvm.c"
 case 288: 
 label=289;break; //@line 861 "lib/lua-5.2.3/src/lvm.c"
 case 289: 
 label=3;break; //@line 865 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _traceexec($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $ci;
 var $mask;
 var $counthook;
 var $p;
 var $npc;
 var $newline;
 $1=$L;
 var $2=$1; //@line 61 "lib/lua-5.2.3/src/lvm.c"
 var $3=(($2+16)|0); //@line 61 "lib/lua-5.2.3/src/lvm.c"
 var $4=HEAP32[(($3)>>2)]; //@line 61 "lib/lua-5.2.3/src/lvm.c"
 $ci=$4; //@line 61 "lib/lua-5.2.3/src/lvm.c"
 var $5=$1; //@line 62 "lib/lua-5.2.3/src/lvm.c"
 var $6=(($5+40)|0); //@line 62 "lib/lua-5.2.3/src/lvm.c"
 var $7=HEAP8[($6)]; //@line 62 "lib/lua-5.2.3/src/lvm.c"
 $mask=$7; //@line 62 "lib/lua-5.2.3/src/lvm.c"
 var $8=$mask; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $9=($8&255); //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $10=$9&8; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $11=($10|0)!=0; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 if($11){label=2;break;}else{var $18=0;label=3;break;} //@line 63 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $13=$1; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $14=(($13+48)|0); //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $15=HEAP32[(($14)>>2)]; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $16=($15|0)==0; //@line 63 "lib/lua-5.2.3/src/lvm.c"
 var $18=$16;label=3;break;
 case 3: 
 var $18;
 var $19=($18&1);
 $counthook=$19;
 var $20=$counthook; //@line 64 "lib/lua-5.2.3/src/lvm.c"
 var $21=($20|0)!=0; //@line 64 "lib/lua-5.2.3/src/lvm.c"
 if($21){label=4;break;}else{label=5;break;} //@line 64 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $23=$1; //@line 65 "lib/lua-5.2.3/src/lvm.c"
 var $24=(($23+44)|0); //@line 65 "lib/lua-5.2.3/src/lvm.c"
 var $25=HEAP32[(($24)>>2)]; //@line 65 "lib/lua-5.2.3/src/lvm.c"
 var $26=$1; //@line 65 "lib/lua-5.2.3/src/lvm.c"
 var $27=(($26+48)|0); //@line 65 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($27)>>2)]=$25; //@line 65 "lib/lua-5.2.3/src/lvm.c"
 label=5;break; //@line 65 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $29=$ci; //@line 66 "lib/lua-5.2.3/src/lvm.c"
 var $30=(($29+18)|0); //@line 66 "lib/lua-5.2.3/src/lvm.c"
 var $31=HEAP8[($30)]; //@line 66 "lib/lua-5.2.3/src/lvm.c"
 var $32=($31&255); //@line 66 "lib/lua-5.2.3/src/lvm.c"
 var $33=$32&128; //@line 66 "lib/lua-5.2.3/src/lvm.c"
 var $34=($33|0)!=0; //@line 66 "lib/lua-5.2.3/src/lvm.c"
 if($34){label=6;break;}else{label=7;break;} //@line 66 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $36=$ci; //@line 67 "lib/lua-5.2.3/src/lvm.c"
 var $37=(($36+18)|0); //@line 67 "lib/lua-5.2.3/src/lvm.c"
 var $38=HEAP8[($37)]; //@line 67 "lib/lua-5.2.3/src/lvm.c"
 var $39=($38&255); //@line 67 "lib/lua-5.2.3/src/lvm.c"
 var $40=$39&-129; //@line 67 "lib/lua-5.2.3/src/lvm.c"
 var $41=(($40)&255); //@line 67 "lib/lua-5.2.3/src/lvm.c"
 HEAP8[($37)]=$41; //@line 67 "lib/lua-5.2.3/src/lvm.c"
 label=25;break; //@line 68 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $43=$counthook; //@line 70 "lib/lua-5.2.3/src/lvm.c"
 var $44=($43|0)!=0; //@line 70 "lib/lua-5.2.3/src/lvm.c"
 if($44){label=8;break;}else{label=9;break;} //@line 70 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $46=$1; //@line 71 "lib/lua-5.2.3/src/lvm.c"
 _luaD_hook($46,3,-1); //@line 71 "lib/lua-5.2.3/src/lvm.c"
 label=9;break; //@line 71 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $48=$mask; //@line 72 "lib/lua-5.2.3/src/lvm.c"
 var $49=($48&255); //@line 72 "lib/lua-5.2.3/src/lvm.c"
 var $50=$49&4; //@line 72 "lib/lua-5.2.3/src/lvm.c"
 var $51=($50|0)!=0; //@line 72 "lib/lua-5.2.3/src/lvm.c"
 if($51){label=10;break;}else{label=21;break;} //@line 72 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $53=$ci; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $54=(($53)|0); //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $55=HEAP32[(($54)>>2)]; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55)|0); //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $57=$56; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $58=HEAP32[(($57)>>2)]; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $59=$58; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $60=$59; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $61=(($60+12)|0); //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $62=HEAP32[(($61)>>2)]; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 $p=$62; //@line 73 "lib/lua-5.2.3/src/lvm.c"
 var $63=$ci; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $64=(($63+24)|0); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $65=$64; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $66=(($65+4)|0); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $67=HEAP32[(($66)>>2)]; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $68=$p; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $69=(($68+12)|0); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $70=HEAP32[(($69)>>2)]; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $71=$67; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $72=$70; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $73=((($71)-($72))|0); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $74=(((($73|0))/(4))&-1); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $75=((($74)-(1))|0); //@line 74 "lib/lua-5.2.3/src/lvm.c"
 $npc=$75; //@line 74 "lib/lua-5.2.3/src/lvm.c"
 var $76=$p; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $77=(($76+20)|0); //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $78=HEAP32[(($77)>>2)]; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $79=($78|0)!=0; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 if($79){label=11;break;}else{label=12;break;} //@line 75 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 var $81=$npc; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $82=$p; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $83=(($82+20)|0); //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $84=HEAP32[(($83)>>2)]; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $85=(($84+($81<<2))|0); //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $86=HEAP32[(($85)>>2)]; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $89=$86;label=13;break; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $89=0;label=13;break; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $89; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 $newline=$89; //@line 75 "lib/lua-5.2.3/src/lvm.c"
 var $90=$npc; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $91=($90|0)==0; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 if($91){label=19;break;}else{label=14;break;} //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 14: 
 var $93=$ci; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $94=(($93+24)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $95=$94; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $96=(($95+4)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $97=HEAP32[(($96)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $98=$1; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $99=(($98+20)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $100=HEAP32[(($99)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $101=($97>>>0)<=($100>>>0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 if($101){label=19;break;}else{label=15;break;} //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 15: 
 var $103=$newline; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $104=$p; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $105=(($104+20)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $106=HEAP32[(($105)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $107=($106|0)!=0; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 if($107){label=16;break;}else{label=17;break;} //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 16: 
 var $109=$1; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $110=(($109+20)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $111=HEAP32[(($110)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $112=$p; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $113=(($112+12)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $114=HEAP32[(($113)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $115=$111; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $116=$114; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $117=((($115)-($116))|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $118=(((($117|0))/(4))&-1); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $119=((($118)-(1))|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $120=$p; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $121=(($120+20)|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $122=HEAP32[(($121)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $123=(($122+($119<<2))|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $124=HEAP32[(($123)>>2)]; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $127=$124;label=18;break; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 17: 
 var $127=0;label=18;break; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 18: 
 var $127; //@line 76 "lib/lua-5.2.3/src/lvm.c"
 var $128=($103|0)!=($127|0); //@line 76 "lib/lua-5.2.3/src/lvm.c"
 if($128){label=19;break;}else{label=20;break;} //@line 76 "lib/lua-5.2.3/src/lvm.c"
 case 19: 
 var $130=$1; //@line 79 "lib/lua-5.2.3/src/lvm.c"
 var $131=$newline; //@line 79 "lib/lua-5.2.3/src/lvm.c"
 _luaD_hook($130,2,$131); //@line 79 "lib/lua-5.2.3/src/lvm.c"
 label=20;break; //@line 79 "lib/lua-5.2.3/src/lvm.c"
 case 20: 
 label=21;break; //@line 80 "lib/lua-5.2.3/src/lvm.c"
 case 21: 
 var $134=$ci; //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $135=(($134+24)|0); //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $136=$135; //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $137=(($136+4)|0); //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $138=HEAP32[(($137)>>2)]; //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $139=$1; //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $140=(($139+20)|0); //@line 81 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($140)>>2)]=$138; //@line 81 "lib/lua-5.2.3/src/lvm.c"
 var $141=$1; //@line 82 "lib/lua-5.2.3/src/lvm.c"
 var $142=(($141+6)|0); //@line 82 "lib/lua-5.2.3/src/lvm.c"
 var $143=HEAP8[($142)]; //@line 82 "lib/lua-5.2.3/src/lvm.c"
 var $144=($143&255); //@line 82 "lib/lua-5.2.3/src/lvm.c"
 var $145=($144|0)==1; //@line 82 "lib/lua-5.2.3/src/lvm.c"
 if($145){label=22;break;}else{label=25;break;} //@line 82 "lib/lua-5.2.3/src/lvm.c"
 case 22: 
 var $147=$counthook; //@line 83 "lib/lua-5.2.3/src/lvm.c"
 var $148=($147|0)!=0; //@line 83 "lib/lua-5.2.3/src/lvm.c"
 if($148){label=23;break;}else{label=24;break;} //@line 83 "lib/lua-5.2.3/src/lvm.c"
 case 23: 
 var $150=$1; //@line 84 "lib/lua-5.2.3/src/lvm.c"
 var $151=(($150+48)|0); //@line 84 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($151)>>2)]=1; //@line 84 "lib/lua-5.2.3/src/lvm.c"
 label=24;break; //@line 84 "lib/lua-5.2.3/src/lvm.c"
 case 24: 
 var $153=$ci; //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $154=(($153+24)|0); //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $155=$154; //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $156=(($155+4)|0); //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $157=HEAP32[(($156)>>2)]; //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $158=((($157)-(4))|0); //@line 85 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($156)>>2)]=$158; //@line 85 "lib/lua-5.2.3/src/lvm.c"
 var $159=$ci; //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $160=(($159+18)|0); //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $161=HEAP8[($160)]; //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $162=($161&255); //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $163=$162|128; //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $164=(($163)&255); //@line 86 "lib/lua-5.2.3/src/lvm.c"
 HEAP8[($160)]=$164; //@line 86 "lib/lua-5.2.3/src/lvm.c"
 var $165=$1; //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $166=(($165+8)|0); //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $167=HEAP32[(($166)>>2)]; //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $168=((($167)-(16))|0); //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $169=$ci; //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $170=(($169)|0); //@line 87 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($170)>>2)]=$168; //@line 87 "lib/lua-5.2.3/src/lvm.c"
 var $171=$1; //@line 88 "lib/lua-5.2.3/src/lvm.c"
 _luaD_throw($171,1); //@line 88 "lib/lua-5.2.3/src/lvm.c"
 throw "Reached an unreachable!"; //@line 88 "lib/lua-5.2.3/src/lvm.c"
 case 25: 
 STACKTOP=sp;return; //@line 90 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getcached($p,$encup,$base){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $c;
 var $nup;
 var $uv;
 var $i;
 var $v;
 $2=$p;
 $3=$encup;
 $4=$base;
 var $5=$2; //@line 380 "lib/lua-5.2.3/src/lvm.c"
 var $6=(($5+32)|0); //@line 380 "lib/lua-5.2.3/src/lvm.c"
 var $7=HEAP32[(($6)>>2)]; //@line 380 "lib/lua-5.2.3/src/lvm.c"
 $c=$7; //@line 380 "lib/lua-5.2.3/src/lvm.c"
 var $8=$c; //@line 381 "lib/lua-5.2.3/src/lvm.c"
 var $9=($8|0)!=0; //@line 381 "lib/lua-5.2.3/src/lvm.c"
 if($9){label=2;break;}else{label=12;break;} //@line 381 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $11=$2; //@line 382 "lib/lua-5.2.3/src/lvm.c"
 var $12=(($11+40)|0); //@line 382 "lib/lua-5.2.3/src/lvm.c"
 var $13=HEAP32[(($12)>>2)]; //@line 382 "lib/lua-5.2.3/src/lvm.c"
 $nup=$13; //@line 382 "lib/lua-5.2.3/src/lvm.c"
 var $14=$2; //@line 383 "lib/lua-5.2.3/src/lvm.c"
 var $15=(($14+28)|0); //@line 383 "lib/lua-5.2.3/src/lvm.c"
 var $16=HEAP32[(($15)>>2)]; //@line 383 "lib/lua-5.2.3/src/lvm.c"
 $uv=$16; //@line 383 "lib/lua-5.2.3/src/lvm.c"
 $i=0; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 label=3;break; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $18=$i; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 var $19=$nup; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 var $20=($18|0)<($19|0); //@line 385 "lib/lua-5.2.3/src/lvm.c"
 if($20){label=4;break;}else{label=11;break;} //@line 385 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $22=$i; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $23=$uv; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $24=(($23+($22<<3))|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $25=(($24+4)|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $26=HEAP8[($25)]; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $27=($26&255); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $28=($27|0)!=0; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 if($28){label=5;break;}else{label=6;break;} //@line 386 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $30=$4; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $31=$i; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $32=$uv; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $33=(($32+($31<<3))|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+5)|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $35=HEAP8[($34)]; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $36=($35&255); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $37=(($30+($36<<4))|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $51=$37;label=7;break; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 case 6: 
 var $39=$i; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $40=$uv; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $41=(($40+($39<<3))|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $42=(($41+5)|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $43=HEAP8[($42)]; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $44=($43&255); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $45=$3; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $46=(($45+($44<<2))|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $47=HEAP32[(($46)>>2)]; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $48=(($47+8)|0); //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $49=HEAP32[(($48)>>2)]; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $51=$49;label=7;break; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $51; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 $v=$51; //@line 386 "lib/lua-5.2.3/src/lvm.c"
 var $52=$i; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $53=$c; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $54=$53; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $55=(($54+16)|0); //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $56=(($55+($52<<2))|0); //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $57=HEAP32[(($56)>>2)]; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $58=(($57+8)|0); //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $59=HEAP32[(($58)>>2)]; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $60=$v; //@line 387 "lib/lua-5.2.3/src/lvm.c"
 var $61=($59|0)!=($60|0); //@line 387 "lib/lua-5.2.3/src/lvm.c"
 if($61){label=8;break;}else{label=9;break;} //@line 387 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 $1=0; //@line 388 "lib/lua-5.2.3/src/lvm.c"
 label=13;break; //@line 388 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 label=10;break; //@line 389 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $65=$i; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 var $66=((($65)+(1))|0); //@line 385 "lib/lua-5.2.3/src/lvm.c"
 $i=$66; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 label=3;break; //@line 385 "lib/lua-5.2.3/src/lvm.c"
 case 11: 
 label=12;break; //@line 390 "lib/lua-5.2.3/src/lvm.c"
 case 12: 
 var $69=$c; //@line 391 "lib/lua-5.2.3/src/lvm.c"
 $1=$69; //@line 391 "lib/lua-5.2.3/src/lvm.c"
 label=13;break; //@line 391 "lib/lua-5.2.3/src/lvm.c"
 case 13: 
 var $71=$1; //@line 392 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return $71; //@line 392 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _pushclosure($L,$p,$encup,$base,$ra){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $nup;
 var $uv;
 var $i;
 var $ncl;
 var $io;
 $1=$L;
 $2=$p;
 $3=$encup;
 $4=$base;
 $5=$ra;
 var $6=$2; //@line 403 "lib/lua-5.2.3/src/lvm.c"
 var $7=(($6+40)|0); //@line 403 "lib/lua-5.2.3/src/lvm.c"
 var $8=HEAP32[(($7)>>2)]; //@line 403 "lib/lua-5.2.3/src/lvm.c"
 $nup=$8; //@line 403 "lib/lua-5.2.3/src/lvm.c"
 var $9=$2; //@line 404 "lib/lua-5.2.3/src/lvm.c"
 var $10=(($9+28)|0); //@line 404 "lib/lua-5.2.3/src/lvm.c"
 var $11=HEAP32[(($10)>>2)]; //@line 404 "lib/lua-5.2.3/src/lvm.c"
 $uv=$11; //@line 404 "lib/lua-5.2.3/src/lvm.c"
 var $12=$1; //@line 406 "lib/lua-5.2.3/src/lvm.c"
 var $13=$nup; //@line 406 "lib/lua-5.2.3/src/lvm.c"
 var $14=_luaF_newLclosure($12,$13); //@line 406 "lib/lua-5.2.3/src/lvm.c"
 $ncl=$14; //@line 406 "lib/lua-5.2.3/src/lvm.c"
 var $15=$2; //@line 407 "lib/lua-5.2.3/src/lvm.c"
 var $16=$ncl; //@line 407 "lib/lua-5.2.3/src/lvm.c"
 var $17=$16; //@line 407 "lib/lua-5.2.3/src/lvm.c"
 var $18=(($17+12)|0); //@line 407 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($18)>>2)]=$15; //@line 407 "lib/lua-5.2.3/src/lvm.c"
 var $19=$5; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 $io=$19; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $20=$ncl; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $21=$20; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $22=$io; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $23=(($22)|0); //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $24=$23; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($24)>>2)]=$21; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $25=$io; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 var $26=(($25+8)|0); //@line 408 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($26)>>2)]=70; //@line 408 "lib/lua-5.2.3/src/lvm.c"
 $i=0; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 case 2: 
 var $28=$i; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 var $29=$nup; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 var $30=($28|0)<($29|0); //@line 409 "lib/lua-5.2.3/src/lvm.c"
 if($30){label=3;break;}else{label=8;break;} //@line 409 "lib/lua-5.2.3/src/lvm.c"
 case 3: 
 var $32=$i; //@line 410 "lib/lua-5.2.3/src/lvm.c"
 var $33=$uv; //@line 410 "lib/lua-5.2.3/src/lvm.c"
 var $34=(($33+($32<<3))|0); //@line 410 "lib/lua-5.2.3/src/lvm.c"
 var $35=(($34+4)|0); //@line 410 "lib/lua-5.2.3/src/lvm.c"
 var $36=HEAP8[($35)]; //@line 410 "lib/lua-5.2.3/src/lvm.c"
 var $37=(($36<<24)>>24)!=0; //@line 410 "lib/lua-5.2.3/src/lvm.c"
 if($37){label=4;break;}else{label=5;break;} //@line 410 "lib/lua-5.2.3/src/lvm.c"
 case 4: 
 var $39=$1; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $40=$4; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $41=$i; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $42=$uv; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $43=(($42+($41<<3))|0); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $44=(($43+5)|0); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $45=HEAP8[($44)]; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $46=($45&255); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $47=(($40+($46<<4))|0); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $48=_luaF_findupval($39,$47); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $49=$i; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $50=$ncl; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $51=$50; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $52=(($51+16)|0); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 var $53=(($52+($49<<2))|0); //@line 411 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($53)>>2)]=$48; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 label=6;break; //@line 411 "lib/lua-5.2.3/src/lvm.c"
 case 5: 
 var $55=$i; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $56=$uv; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $57=(($56+($55<<3))|0); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $58=(($57+5)|0); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $59=HEAP8[($58)]; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $60=($59&255); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $61=$3; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $62=(($61+($60<<2))|0); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $63=HEAP32[(($62)>>2)]; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $64=$i; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $65=$ncl; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $66=$65; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $67=(($66+16)|0); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 var $68=(($67+($64<<2))|0); //@line 413 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($68)>>2)]=$63; //@line 413 "lib/lua-5.2.3/src/lvm.c"
 label=6;break;
 case 6: 
 label=7;break; //@line 414 "lib/lua-5.2.3/src/lvm.c"
 case 7: 
 var $71=$i; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 var $72=((($71)+(1))|0); //@line 409 "lib/lua-5.2.3/src/lvm.c"
 $i=$72; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 label=2;break; //@line 409 "lib/lua-5.2.3/src/lvm.c"
 case 8: 
 var $74=$2; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $75=$74; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $76=$75; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $77=(($76+5)|0); //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $78=HEAP8[($77)]; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $79=($78&255); //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $80=$79&4; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $81=($80|0)!=0; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 if($81){label=9;break;}else{label=10;break;} //@line 415 "lib/lua-5.2.3/src/lvm.c"
 case 9: 
 var $83=$1; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $84=$2; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 var $85=$ncl; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 _luaC_barrierproto_($83,$84,$85); //@line 415 "lib/lua-5.2.3/src/lvm.c"
 label=10;break; //@line 415 "lib/lua-5.2.3/src/lvm.c"
 case 10: 
 var $87=$ncl; //@line 416 "lib/lua-5.2.3/src/lvm.c"
 var $88=$2; //@line 416 "lib/lua-5.2.3/src/lvm.c"
 var $89=(($88+32)|0); //@line 416 "lib/lua-5.2.3/src/lvm.c"
 HEAP32[(($89)>>2)]=$87; //@line 416 "lib/lua-5.2.3/src/lvm.c"
 STACKTOP=sp;return; //@line 417 "lib/lua-5.2.3/src/lvm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_getstack($L,$level,$ar){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $status;
 var $ci;
 $2=$L;
 $3=$level;
 $4=$ar;
 var $5=$3; //@line 86 "lib/lua-5.2.3/src/ldebug.c"
 var $6=($5|0)<0; //@line 86 "lib/lua-5.2.3/src/ldebug.c"
 if($6){label=2;break;}else{label=3;break;} //@line 86 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 $1=0; //@line 86 "lib/lua-5.2.3/src/ldebug.c"
 label=14;break; //@line 86 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $9=$2; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $10=(($9+16)|0); //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $11=HEAP32[(($10)>>2)]; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 $ci=$11; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $13=$3; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $14=($13|0)>0; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 if($14){label=5;break;}else{var $21=0;label=6;break;} //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $16=$ci; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$2; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $18=(($17+72)|0); //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $19=($16|0)!=($18|0); //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $21=$19;label=6;break;
 case 6: 
 var $21;
 if($21){label=7;break;}else{label=9;break;}
 case 7: 
 var $23=$3; //@line 89 "lib/lua-5.2.3/src/ldebug.c"
 var $24=((($23)-(1))|0); //@line 89 "lib/lua-5.2.3/src/ldebug.c"
 $3=$24; //@line 89 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 89 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $26=$ci; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $27=(($26+8)|0); //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 var $28=HEAP32[(($27)>>2)]; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 $ci=$28; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 88 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 var $30=$3; //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 var $31=($30|0)==0; //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 if($31){label=10;break;}else{label=12;break;} //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 var $33=$ci; //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 var $34=$2; //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 var $35=(($34+72)|0); //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 var $36=($33|0)!=($35|0); //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 if($36){label=11;break;}else{label=12;break;} //@line 90 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 $status=1; //@line 91 "lib/lua-5.2.3/src/ldebug.c"
 var $38=$ci; //@line 92 "lib/lua-5.2.3/src/ldebug.c"
 var $39=$4; //@line 92 "lib/lua-5.2.3/src/ldebug.c"
 var $40=(($39+96)|0); //@line 92 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($40)>>2)]=$38; //@line 92 "lib/lua-5.2.3/src/ldebug.c"
 label=13;break; //@line 93 "lib/lua-5.2.3/src/ldebug.c"
 case 12: 
 $status=0; //@line 94 "lib/lua-5.2.3/src/ldebug.c"
 label=13;break;
 case 13: 
 var $43=$status; //@line 96 "lib/lua-5.2.3/src/ldebug.c"
 $1=$43; //@line 96 "lib/lua-5.2.3/src/ldebug.c"
 label=14;break; //@line 96 "lib/lua-5.2.3/src/ldebug.c"
 case 14: 
 var $45=$1; //@line 97 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $45; //@line 97 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_getinfo($L,$what,$ar){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $status;
 var $cl;
 var $ci;
 var $func;
 var $io2;
 var $io1;
 $1=$L;
 $2=$what;
 $3=$ar;
 var $4=$2; //@line 272 "lib/lua-5.2.3/src/ldebug.c"
 var $5=HEAP8[($4)]; //@line 272 "lib/lua-5.2.3/src/ldebug.c"
 var $6=(($5<<24)>>24); //@line 272 "lib/lua-5.2.3/src/ldebug.c"
 var $7=($6|0)==62; //@line 272 "lib/lua-5.2.3/src/ldebug.c"
 if($7){label=2;break;}else{label=3;break;} //@line 272 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 $ci=0; //@line 273 "lib/lua-5.2.3/src/ldebug.c"
 var $9=$1; //@line 274 "lib/lua-5.2.3/src/ldebug.c"
 var $10=(($9+8)|0); //@line 274 "lib/lua-5.2.3/src/ldebug.c"
 var $11=HEAP32[(($10)>>2)]; //@line 274 "lib/lua-5.2.3/src/ldebug.c"
 var $12=((($11)-(16))|0); //@line 274 "lib/lua-5.2.3/src/ldebug.c"
 $func=$12; //@line 274 "lib/lua-5.2.3/src/ldebug.c"
 var $13=$2; //@line 276 "lib/lua-5.2.3/src/ldebug.c"
 var $14=(($13+1)|0); //@line 276 "lib/lua-5.2.3/src/ldebug.c"
 $2=$14; //@line 276 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$1; //@line 277 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+8)|0); //@line 277 "lib/lua-5.2.3/src/ldebug.c"
 var $17=HEAP32[(($16)>>2)]; //@line 277 "lib/lua-5.2.3/src/ldebug.c"
 var $18=((($17)-(16))|0); //@line 277 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($16)>>2)]=$18; //@line 277 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 278 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $20=$3; //@line 280 "lib/lua-5.2.3/src/ldebug.c"
 var $21=(($20+96)|0); //@line 280 "lib/lua-5.2.3/src/ldebug.c"
 var $22=HEAP32[(($21)>>2)]; //@line 280 "lib/lua-5.2.3/src/ldebug.c"
 $ci=$22; //@line 280 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$ci; //@line 281 "lib/lua-5.2.3/src/ldebug.c"
 var $24=(($23)|0); //@line 281 "lib/lua-5.2.3/src/ldebug.c"
 var $25=HEAP32[(($24)>>2)]; //@line 281 "lib/lua-5.2.3/src/ldebug.c"
 $func=$25; //@line 281 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break;
 case 4: 
 var $27=$func; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $28=(($27+8)|0); //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $29=HEAP32[(($28)>>2)]; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $30=$29&31; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $31=($30|0)==6; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 if($31){label=5;break;}else{label=6;break;} //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $33=$func; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $34=(($33)|0); //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $35=$34; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $36=HEAP32[(($35)>>2)]; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $37=$36; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $40=$37;label=7;break; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $40=0;label=7;break; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 var $40; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 $cl=$40; //@line 284 "lib/lua-5.2.3/src/ldebug.c"
 var $41=$1; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $42=$2; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $43=$3; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $44=$cl; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $45=$ci; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $46=_auxgetinfo($41,$42,$43,$44,$45); //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 $status=$46; //@line 285 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$2; //@line 286 "lib/lua-5.2.3/src/ldebug.c"
 var $48=_strchr($47,102); //@line 286 "lib/lua-5.2.3/src/ldebug.c"
 var $49=($48|0)!=0; //@line 286 "lib/lua-5.2.3/src/ldebug.c"
 if($49){label=8;break;}else{label=9;break;} //@line 286 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $51=$func; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 $io2=$51; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $52=$1; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $53=(($52+8)|0); //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $54=HEAP32[(($53)>>2)]; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 $io1=$54; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $55=$io1; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $56=(($55)|0); //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $57=$io2; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $58=(($57)|0); //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $59=$56; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $60=$58; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 assert(8 % 1 === 0);HEAP32[(($59)>>2)]=HEAP32[(($60)>>2)];HEAP32[((($59)+(4))>>2)]=HEAP32[((($60)+(4))>>2)]; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$io2; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $62=(($61+8)|0); //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $63=HEAP32[(($62)>>2)]; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $64=$io1; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $65=(($64+8)|0); //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($65)>>2)]=$63; //@line 287 "lib/lua-5.2.3/src/ldebug.c"
 var $66=$1; //@line 288 "lib/lua-5.2.3/src/ldebug.c"
 var $67=(($66+8)|0); //@line 288 "lib/lua-5.2.3/src/ldebug.c"
 var $68=HEAP32[(($67)>>2)]; //@line 288 "lib/lua-5.2.3/src/ldebug.c"
 var $69=(($68+16)|0); //@line 288 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($67)>>2)]=$69; //@line 288 "lib/lua-5.2.3/src/ldebug.c"
 label=9;break; //@line 289 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 var $71=$2; //@line 290 "lib/lua-5.2.3/src/ldebug.c"
 var $72=_strchr($71,76); //@line 290 "lib/lua-5.2.3/src/ldebug.c"
 var $73=($72|0)!=0; //@line 290 "lib/lua-5.2.3/src/ldebug.c"
 if($73){label=10;break;}else{label=11;break;} //@line 290 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 var $75=$1; //@line 291 "lib/lua-5.2.3/src/ldebug.c"
 var $76=$cl; //@line 291 "lib/lua-5.2.3/src/ldebug.c"
 _collectvalidlines($75,$76); //@line 291 "lib/lua-5.2.3/src/ldebug.c"
 label=11;break; //@line 291 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 var $78=$status; //@line 293 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $78; //@line 293 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _auxgetinfo($L,$what,$ar,$f,$ci){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $status;
 $1=$L;
 $2=$what;
 $3=$ar;
 $4=$f;
 $5=$ci;
 $status=1; //@line 217 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $7=$2; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 var $8=HEAP8[($7)]; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 var $9=(($8<<24)>>24)!=0; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 if($9){label=3;break;}else{label=34;break;} //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $11=$2; //@line 219 "lib/lua-5.2.3/src/ldebug.c"
 var $12=HEAP8[($11)]; //@line 219 "lib/lua-5.2.3/src/ldebug.c"
 var $13=(($12<<24)>>24); //@line 219 "lib/lua-5.2.3/src/ldebug.c"
 switch(($13|0)){case 117:{ label=10;break;}case 116:{ label=18;break;}case 110:{ label=22;break;}case 76:case 102:{ label=30;break;}case 83:{ label=4;break;}case 108:{ label=5;break;}default:{label=31;break;}}break;
 case 4: 
 var $15=$3; //@line 221 "lib/lua-5.2.3/src/ldebug.c"
 var $16=$4; //@line 221 "lib/lua-5.2.3/src/ldebug.c"
 _funcinfo($15,$16); //@line 221 "lib/lua-5.2.3/src/ldebug.c"
 label=32;break; //@line 222 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $18=$5; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $19=($18|0)!=0; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 if($19){label=6;break;}else{label=8;break;} //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $21=$5; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $22=(($21+18)|0); //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $23=HEAP8[($22)]; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $24=($23&255); //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$24&1; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $26=($25|0)!=0; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 if($26){label=7;break;}else{label=8;break;} //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 var $28=$5; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $29=_currentline($28); //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $32=$29;label=9;break; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $32=-1;label=9;break; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 var $32; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$3; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 var $34=(($33+20)|0); //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($34)>>2)]=$32; //@line 225 "lib/lua-5.2.3/src/ldebug.c"
 label=32;break; //@line 226 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 var $36=$4; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $37=($36|0)==0; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 if($37){label=11;break;}else{label=12;break;} //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 var $46=0;label=13;break; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 case 12: 
 var $40=$4; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $41=$40; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $42=(($41+6)|0); //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $43=HEAP8[($42)]; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $44=($43&255); //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $46=$44;label=13;break; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 case 13: 
 var $46; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $47=(($46)&255); //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $48=$3; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $49=(($48+32)|0); //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($49)]=$47; //@line 229 "lib/lua-5.2.3/src/ldebug.c"
 var $50=$4; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $51=($50|0)==0; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 if($51){label=15;break;}else{label=14;break;} //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 case 14: 
 var $53=$4; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $54=$53; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $55=(($54+4)|0); //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $56=HEAP8[($55)]; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $57=($56&255); //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 var $58=($57|0)==38; //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 if($58){label=15;break;}else{label=16;break;} //@line 230 "lib/lua-5.2.3/src/ldebug.c"
 case 15: 
 var $60=$3; //@line 231 "lib/lua-5.2.3/src/ldebug.c"
 var $61=(($60+34)|0); //@line 231 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($61)]=1; //@line 231 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$3; //@line 232 "lib/lua-5.2.3/src/ldebug.c"
 var $63=(($62+33)|0); //@line 232 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($63)]=0; //@line 232 "lib/lua-5.2.3/src/ldebug.c"
 label=17;break; //@line 233 "lib/lua-5.2.3/src/ldebug.c"
 case 16: 
 var $65=$4; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $66=$65; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $67=(($66+12)|0); //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $68=HEAP32[(($67)>>2)]; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $69=(($68+77)|0); //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $70=HEAP8[($69)]; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $71=$3; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $72=(($71+34)|0); //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($72)]=$70; //@line 235 "lib/lua-5.2.3/src/ldebug.c"
 var $73=$4; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $74=$73; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $75=(($74+12)|0); //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $76=HEAP32[(($75)>>2)]; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $77=(($76+76)|0); //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $78=HEAP8[($77)]; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $79=$3; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 var $80=(($79+33)|0); //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($80)]=$78; //@line 236 "lib/lua-5.2.3/src/ldebug.c"
 label=17;break;
 case 17: 
 label=32;break; //@line 238 "lib/lua-5.2.3/src/ldebug.c"
 case 18: 
 var $83=$5; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $84=($83|0)!=0; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 if($84){label=19;break;}else{label=20;break;} //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 case 19: 
 var $86=$5; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $87=(($86+18)|0); //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $88=HEAP8[($87)]; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $89=($88&255); //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $90=$89&64; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $93=$90;label=21;break; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 case 20: 
 var $93=0;label=21;break; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 case 21: 
 var $93; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $94=(($93)&255); //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $95=$3; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 var $96=(($95+35)|0); //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($96)]=$94; //@line 241 "lib/lua-5.2.3/src/ldebug.c"
 label=32;break; //@line 242 "lib/lua-5.2.3/src/ldebug.c"
 case 22: 
 var $98=$5; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $99=($98|0)!=0; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 if($99){label=23;break;}else{label=26;break;} //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 case 23: 
 var $101=$5; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $102=(($101+18)|0); //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $103=HEAP8[($102)]; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $104=($103&255); //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $105=$104&64; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $106=($105|0)!=0; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 if($106){label=26;break;}else{label=24;break;} //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 case 24: 
 var $108=$5; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $109=(($108+8)|0); //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $110=HEAP32[(($109)>>2)]; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $111=(($110+18)|0); //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $112=HEAP8[($111)]; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $113=($112&255); //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $114=$113&1; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 var $115=($114|0)!=0; //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 if($115){label=25;break;}else{label=26;break;} //@line 246 "lib/lua-5.2.3/src/ldebug.c"
 case 25: 
 var $117=$1; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $118=$5; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $119=(($118+8)|0); //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $120=HEAP32[(($119)>>2)]; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $121=$3; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $122=(($121+4)|0); //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $123=_getfuncname($117,$120,$122); //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $124=$3; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 var $125=(($124+8)|0); //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($125)>>2)]=$123; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 label=27;break; //@line 247 "lib/lua-5.2.3/src/ldebug.c"
 case 26: 
 var $127=$3; //@line 249 "lib/lua-5.2.3/src/ldebug.c"
 var $128=(($127+8)|0); //@line 249 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($128)>>2)]=0; //@line 249 "lib/lua-5.2.3/src/ldebug.c"
 label=27;break;
 case 27: 
 var $130=$3; //@line 250 "lib/lua-5.2.3/src/ldebug.c"
 var $131=(($130+8)|0); //@line 250 "lib/lua-5.2.3/src/ldebug.c"
 var $132=HEAP32[(($131)>>2)]; //@line 250 "lib/lua-5.2.3/src/ldebug.c"
 var $133=($132|0)==0; //@line 250 "lib/lua-5.2.3/src/ldebug.c"
 if($133){label=28;break;}else{label=29;break;} //@line 250 "lib/lua-5.2.3/src/ldebug.c"
 case 28: 
 var $135=$3; //@line 251 "lib/lua-5.2.3/src/ldebug.c"
 var $136=(($135+8)|0); //@line 251 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($136)>>2)]=19984; //@line 251 "lib/lua-5.2.3/src/ldebug.c"
 var $137=$3; //@line 252 "lib/lua-5.2.3/src/ldebug.c"
 var $138=(($137+4)|0); //@line 252 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($138)>>2)]=0; //@line 252 "lib/lua-5.2.3/src/ldebug.c"
 label=29;break; //@line 253 "lib/lua-5.2.3/src/ldebug.c"
 case 29: 
 label=32;break; //@line 254 "lib/lua-5.2.3/src/ldebug.c"
 case 30: 
 label=32;break; //@line 258 "lib/lua-5.2.3/src/ldebug.c"
 case 31: 
 $status=0; //@line 259 "lib/lua-5.2.3/src/ldebug.c"
 label=32;break; //@line 260 "lib/lua-5.2.3/src/ldebug.c"
 case 32: 
 label=33;break; //@line 261 "lib/lua-5.2.3/src/ldebug.c"
 case 33: 
 var $144=$2; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 var $145=(($144+1)|0); //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 $2=$145; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 218 "lib/lua-5.2.3/src/ldebug.c"
 case 34: 
 var $147=$status; //@line 262 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $147; //@line 262 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _collectvalidlines($L,$f){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $v=sp;
 var $lineinfo;
 var $t;
 var $io;
 var $io1;
 $1=$L;
 $2=$f;
 var $3=$2; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $4=($3|0)==0; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 if($4){label=3;break;}else{label=2;break;} //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $6=$2; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$6; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7+4)|0); //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $9=HEAP8[($8)]; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $10=($9&255); //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 var $11=($10|0)==38; //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 if($11){label=3;break;}else{label=4;break;} //@line 197 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $13=$1; //@line 198 "lib/lua-5.2.3/src/ldebug.c"
 var $14=(($13+8)|0); //@line 198 "lib/lua-5.2.3/src/ldebug.c"
 var $15=HEAP32[(($14)>>2)]; //@line 198 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+8)|0); //@line 198 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($16)>>2)]=0; //@line 198 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$1; //@line 199 "lib/lua-5.2.3/src/ldebug.c"
 var $18=(($17+8)|0); //@line 199 "lib/lua-5.2.3/src/ldebug.c"
 var $19=HEAP32[(($18)>>2)]; //@line 199 "lib/lua-5.2.3/src/ldebug.c"
 var $20=(($19+16)|0); //@line 199 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($18)>>2)]=$20; //@line 199 "lib/lua-5.2.3/src/ldebug.c"
 label=9;break; //@line 200 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $22=$2; //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$22; //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $24=(($23+12)|0); //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $25=HEAP32[(($24)>>2)]; //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $26=(($25+20)|0); //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $27=HEAP32[(($26)>>2)]; //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 $lineinfo=$27; //@line 204 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$1; //@line 205 "lib/lua-5.2.3/src/ldebug.c"
 var $29=_luaH_new($28); //@line 205 "lib/lua-5.2.3/src/ldebug.c"
 $t=$29; //@line 205 "lib/lua-5.2.3/src/ldebug.c"
 var $30=$1; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $31=(($30+8)|0); //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $32=HEAP32[(($31)>>2)]; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 $io=$32; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$t; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $34=$33; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $35=$io; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $36=(($35)|0); //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $37=$36; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($37)>>2)]=$34; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $38=$io; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $39=(($38+8)|0); //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($39)>>2)]=69; //@line 206 "lib/lua-5.2.3/src/ldebug.c"
 var $40=$1; //@line 207 "lib/lua-5.2.3/src/ldebug.c"
 var $41=(($40+8)|0); //@line 207 "lib/lua-5.2.3/src/ldebug.c"
 var $42=HEAP32[(($41)>>2)]; //@line 207 "lib/lua-5.2.3/src/ldebug.c"
 var $43=(($42+16)|0); //@line 207 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($41)>>2)]=$43; //@line 207 "lib/lua-5.2.3/src/ldebug.c"
 $io1=$v; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 var $44=$io1; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 var $45=(($44)|0); //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 var $46=$45; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($46)>>2)]=1; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$io1; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 var $48=(($47+8)|0); //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($48)>>2)]=1; //@line 208 "lib/lua-5.2.3/src/ldebug.c"
 $i=0; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $50=$i; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $51=$2; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $52=$51; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $53=(($52+12)|0); //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $54=HEAP32[(($53)>>2)]; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $55=(($54+52)|0); //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $56=HEAP32[(($55)>>2)]; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $57=($50|0)<($56|0); //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 if($57){label=6;break;}else{label=8;break;} //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $59=$1; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 var $60=$t; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$i; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$lineinfo; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 var $63=(($62+($61<<2))|0); //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 var $64=HEAP32[(($63)>>2)]; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 _luaH_setint($59,$60,$64,$v); //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 label=7;break; //@line 210 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 var $66=$i; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 var $67=((($66)+(1))|0); //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 $i=$67; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break; //@line 209 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 label=9;break;
 case 9: 
 STACKTOP=sp;return; //@line 212 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaG_typeerror($L,$o,$op){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $ci;
 var $name=sp;
 var $t;
 var $kind;
 $1=$L;
 $2=$o;
 $3=$op;
 var $4=$1; //@line 514 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4+16)|0); //@line 514 "lib/lua-5.2.3/src/ldebug.c"
 var $6=HEAP32[(($5)>>2)]; //@line 514 "lib/lua-5.2.3/src/ldebug.c"
 $ci=$6; //@line 514 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($name)>>2)]=0; //@line 515 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$2; //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7+8)|0); //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $9=HEAP32[(($8)>>2)]; //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $10=$9&15; //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $11=((($10)+(1))|0); //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $12=((1216+($11<<2))|0); //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 $t=$13; //@line 516 "lib/lua-5.2.3/src/ldebug.c"
 $kind=0; //@line 517 "lib/lua-5.2.3/src/ldebug.c"
 var $14=$ci; //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 var $15=(($14+18)|0); //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 var $16=HEAP8[($15)]; //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 var $17=($16&255); //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$17&1; //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 var $19=($18|0)!=0; //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 if($19){label=2;break;}else{label=6;break;} //@line 518 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $21=$ci; //@line 519 "lib/lua-5.2.3/src/ldebug.c"
 var $22=$2; //@line 519 "lib/lua-5.2.3/src/ldebug.c"
 var $23=_getupvalname($21,$22,$name); //@line 519 "lib/lua-5.2.3/src/ldebug.c"
 $kind=$23; //@line 519 "lib/lua-5.2.3/src/ldebug.c"
 var $24=$kind; //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 var $25=($24|0)!=0; //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 if($25){label=5;break;}else{label=3;break;} //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $27=$ci; //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$2; //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 var $29=_isinstack($27,$28); //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 var $30=($29|0)!=0; //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 if($30){label=4;break;}else{label=5;break;} //@line 520 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $32=$ci; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $33=(($32)|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $34=HEAP32[(($33)>>2)]; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $35=(($34)|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $36=$35; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $37=HEAP32[(($36)>>2)]; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $38=$37; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $39=$38; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $40=(($39+12)|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $41=HEAP32[(($40)>>2)]; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $42=$ci; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $43=_currentpc($42); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $44=$2; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $45=$ci; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $46=(($45+24)|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$46; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $48=(($47)|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $49=HEAP32[(($48)>>2)]; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $50=$44; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $51=$49; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $52=((($50)-($51))|0); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $53=(((($52|0))/(16))&-1); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 var $54=_getobjname($41,$43,$53,$name); //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 $kind=$54; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break; //@line 521 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 label=6;break; //@line 523 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $57=$kind; //@line 524 "lib/lua-5.2.3/src/ldebug.c"
 var $58=($57|0)!=0; //@line 524 "lib/lua-5.2.3/src/ldebug.c"
 if($58){label=7;break;}else{label=8;break;} //@line 524 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 var $60=$1; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$3; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$kind; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 var $63=HEAP32[(($name)>>2)]; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 var $64=$t; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_runerror($60,15648,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 32)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$61,HEAP32[(((tempVarArgs)+(8))>>2)]=$62,HEAP32[(((tempVarArgs)+(16))>>2)]=$63,HEAP32[(((tempVarArgs)+(24))>>2)]=$64,tempVarArgs)); STACKTOP=tempVarArgs; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 525 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $66=$1; //@line 528 "lib/lua-5.2.3/src/ldebug.c"
 var $67=$3; //@line 528 "lib/lua-5.2.3/src/ldebug.c"
 var $68=$t; //@line 528 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_runerror($66,15712,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$67,HEAP32[(((tempVarArgs)+(8))>>2)]=$68,tempVarArgs)); STACKTOP=tempVarArgs; //@line 528 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 528 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 529 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getupvalname($ci,$o,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $c;
 var $i;
 $2=$ci;
 $3=$o;
 $4=$name;
 var $5=$2; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $6=(($5)|0); //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $7=HEAP32[(($6)>>2)]; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7)|0); //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $9=$8; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $10=HEAP32[(($9)>>2)]; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$10; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 var $12=$11; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 $c=$12; //@line 501 "lib/lua-5.2.3/src/ldebug.c"
 $i=0; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $14=$i; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$c; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+6)|0); //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $17=HEAP8[($16)]; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $18=($17&255); //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $19=($14|0)<($18|0); //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 if($19){label=3;break;}else{label=7;break;} //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $21=$i; //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $22=$c; //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $23=(($22+16)|0); //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $24=(($23+($21<<2))|0); //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $25=HEAP32[(($24)>>2)]; //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $26=(($25+8)|0); //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $27=HEAP32[(($26)>>2)]; //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$3; //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 var $29=($27|0)==($28|0); //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 if($29){label=4;break;}else{label=5;break;} //@line 504 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $31=$c; //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 var $32=(($31+12)|0); //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 var $33=HEAP32[(($32)>>2)]; //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 var $34=$i; //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 var $35=_upvalname($33,$34); //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 var $36=$4; //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($36)>>2)]=$35; //@line 505 "lib/lua-5.2.3/src/ldebug.c"
 $1=15744; //@line 506 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 506 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 label=6;break; //@line 508 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $39=$i; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 var $40=((($39)+(1))|0); //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 $i=$40; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 503 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 $1=0; //@line 509 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 509 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $43=$1; //@line 510 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $43; //@line 510 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _isinstack($ci,$o){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $p;
 $2=$ci;
 $3=$o;
 var $4=$2; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4+24)|0); //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$5; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $7=(($6)|0); //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $8=HEAP32[(($7)>>2)]; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 $p=$8; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $10=$p; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$2; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $12=(($11+4)|0); //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $14=($10>>>0)<($13>>>0); //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 if($14){label=3;break;}else{label=7;break;} //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $16=$3; //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$p; //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 var $18=($16|0)==($17|0); //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 if($18){label=4;break;}else{label=5;break;} //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 $1=1; //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 label=6;break; //@line 494 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $22=$p; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 var $23=(($22+16)|0); //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 $p=$23; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 493 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 $1=0; //@line 495 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 495 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $26=$1; //@line 496 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $26; //@line 496 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getobjname($p,$lastpc,$reg,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $pc;
 var $i;
 var $op;
 var $b;
 var $k;
 var $t;
 var $vn;
 var $b1;
 var $k2;
 $2=$p;
 $3=$lastpc;
 $4=$reg;
 $5=$name;
 var $6=$2; //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$4; //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $8=((($7)+(1))|0); //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $9=$3; //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $10=_luaF_getlocalname($6,$8,$9); //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$5; //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($11)>>2)]=$10; //@line 394 "lib/lua-5.2.3/src/ldebug.c"
 var $12=$5; //@line 395 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 395 "lib/lua-5.2.3/src/ldebug.c"
 var $14=($13|0)!=0; //@line 395 "lib/lua-5.2.3/src/ldebug.c"
 if($14){label=2;break;}else{label=3;break;} //@line 395 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 $1=4272; //@line 396 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 396 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $17=$2; //@line 398 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$3; //@line 398 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$4; //@line 398 "lib/lua-5.2.3/src/ldebug.c"
 var $20=_findsetreg($17,$18,$19); //@line 398 "lib/lua-5.2.3/src/ldebug.c"
 $pc=$20; //@line 398 "lib/lua-5.2.3/src/ldebug.c"
 var $21=$pc; //@line 399 "lib/lua-5.2.3/src/ldebug.c"
 var $22=($21|0)!=-1; //@line 399 "lib/lua-5.2.3/src/ldebug.c"
 if($22){label=4;break;}else{label=24;break;} //@line 399 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $24=$pc; //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$2; //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $26=(($25+12)|0); //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $27=HEAP32[(($26)>>2)]; //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $28=(($27+($24<<2))|0); //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $29=HEAP32[(($28)>>2)]; //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 $i=$29; //@line 400 "lib/lua-5.2.3/src/ldebug.c"
 var $30=$i; //@line 401 "lib/lua-5.2.3/src/ldebug.c"
 var $31=$30>>>0; //@line 401 "lib/lua-5.2.3/src/ldebug.c"
 var $32=$31&63; //@line 401 "lib/lua-5.2.3/src/ldebug.c"
 $op=$32; //@line 401 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$op; //@line 402 "lib/lua-5.2.3/src/ldebug.c"
 switch(($33|0)){case 5:{ label=14;break;}case 1:case 2:{ label=15;break;}case 12:{ label=21;break;}case 0:{ label=5;break;}case 6:case 7:{ label=8;break;}default:{label=22;break;}}break;
 case 5: 
 var $35=$i; //@line 404 "lib/lua-5.2.3/src/ldebug.c"
 var $36=$35>>>23; //@line 404 "lib/lua-5.2.3/src/ldebug.c"
 var $37=$36&511; //@line 404 "lib/lua-5.2.3/src/ldebug.c"
 $b=$37; //@line 404 "lib/lua-5.2.3/src/ldebug.c"
 var $38=$b; //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 var $39=$i; //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 var $40=$39>>>6; //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 var $41=$40&255; //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 var $42=($38|0)<($41|0); //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 if($42){label=6;break;}else{label=7;break;} //@line 405 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $44=$2; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 var $45=$pc; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 var $46=$b; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$5; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 var $48=_getobjname($44,$45,$46,$47); //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 $1=$48; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 406 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 label=23;break; //@line 407 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $51=$i; //@line 411 "lib/lua-5.2.3/src/ldebug.c"
 var $52=$51>>>14; //@line 411 "lib/lua-5.2.3/src/ldebug.c"
 var $53=$52&511; //@line 411 "lib/lua-5.2.3/src/ldebug.c"
 $k=$53; //@line 411 "lib/lua-5.2.3/src/ldebug.c"
 var $54=$i; //@line 412 "lib/lua-5.2.3/src/ldebug.c"
 var $55=$54>>>23; //@line 412 "lib/lua-5.2.3/src/ldebug.c"
 var $56=$55&511; //@line 412 "lib/lua-5.2.3/src/ldebug.c"
 $t=$56; //@line 412 "lib/lua-5.2.3/src/ldebug.c"
 var $57=$op; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 var $58=($57|0)==7; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 if($58){label=9;break;}else{label=10;break;} //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 var $60=$2; //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$t; //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 var $62=((($61)+(1))|0); //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 var $63=$pc; //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 var $64=_luaF_getlocalname($60,$62,$63); //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 var $70=$64;label=11;break; //@line 414 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 var $66=$2; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 var $67=$t; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 var $68=_upvalname($66,$67); //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 var $70=$68;label=11;break; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 var $70; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 $vn=$70; //@line 415 "lib/lua-5.2.3/src/ldebug.c"
 var $71=$2; //@line 416 "lib/lua-5.2.3/src/ldebug.c"
 var $72=$pc; //@line 416 "lib/lua-5.2.3/src/ldebug.c"
 var $73=$k; //@line 416 "lib/lua-5.2.3/src/ldebug.c"
 var $74=$5; //@line 416 "lib/lua-5.2.3/src/ldebug.c"
 _kname($71,$72,$73,$74); //@line 416 "lib/lua-5.2.3/src/ldebug.c"
 var $75=$vn; //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 var $76=($75|0)!=0; //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 if($76){label=12;break;}else{var $82=0;label=13;break;} //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 case 12: 
 var $78=$vn; //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 var $79=_strcmp($78,3448); //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 var $80=($79|0)==0; //@line 417 "lib/lua-5.2.3/src/ldebug.c"
 var $82=$80;label=13;break;
 case 13: 
 var $82;
 var $83=($82?2800:16336);
 $1=$83;
 label=25;break;
 case 14: 
 var $85=$2; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 var $86=$i; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 var $87=$86>>>23; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 var $88=$87&511; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 var $89=_upvalname($85,$88); //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 var $90=$5; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($90)>>2)]=$89; //@line 420 "lib/lua-5.2.3/src/ldebug.c"
 $1=15744; //@line 421 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 421 "lib/lua-5.2.3/src/ldebug.c"
 case 15: 
 var $92=$op; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $93=($92|0)==1; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 if($93){label=16;break;}else{label=17;break;} //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 case 16: 
 var $95=$i; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $96=$95>>>14; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $97=$96&262143; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $109=$97;label=18;break; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 case 17: 
 var $99=$pc; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $100=((($99)+(1))|0); //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $101=$2; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $102=(($101+12)|0); //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $103=HEAP32[(($102)>>2)]; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $104=(($103+($100<<2))|0); //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $105=HEAP32[(($104)>>2)]; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $106=$105>>>6; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $107=$106&67108863; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $109=$107;label=18;break; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 case 18: 
 var $109; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 $b1=$109; //@line 426 "lib/lua-5.2.3/src/ldebug.c"
 var $110=$b1; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $111=$2; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $112=(($111+8)|0); //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $113=HEAP32[(($112)>>2)]; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $114=(($113+($110<<4))|0); //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $115=(($114+8)|0); //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $116=HEAP32[(($115)>>2)]; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $117=$116&15; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 var $118=($117|0)==4; //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 if($118){label=19;break;}else{label=20;break;} //@line 427 "lib/lua-5.2.3/src/ldebug.c"
 case 19: 
 var $120=$b1; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $121=$2; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $122=(($121+8)|0); //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $123=HEAP32[(($122)>>2)]; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $124=(($123+($120<<4))|0); //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $125=(($124)|0); //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $126=$125; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $127=HEAP32[(($126)>>2)]; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $128=$127; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $129=(($128+16)|0); //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $130=$129; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 var $131=$5; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($131)>>2)]=$130; //@line 428 "lib/lua-5.2.3/src/ldebug.c"
 $1=15208; //@line 429 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 429 "lib/lua-5.2.3/src/ldebug.c"
 case 20: 
 label=23;break; //@line 431 "lib/lua-5.2.3/src/ldebug.c"
 case 21: 
 var $134=$i; //@line 434 "lib/lua-5.2.3/src/ldebug.c"
 var $135=$134>>>14; //@line 434 "lib/lua-5.2.3/src/ldebug.c"
 var $136=$135&511; //@line 434 "lib/lua-5.2.3/src/ldebug.c"
 $k2=$136; //@line 434 "lib/lua-5.2.3/src/ldebug.c"
 var $137=$2; //@line 435 "lib/lua-5.2.3/src/ldebug.c"
 var $138=$pc; //@line 435 "lib/lua-5.2.3/src/ldebug.c"
 var $139=$k2; //@line 435 "lib/lua-5.2.3/src/ldebug.c"
 var $140=$5; //@line 435 "lib/lua-5.2.3/src/ldebug.c"
 _kname($137,$138,$139,$140); //@line 435 "lib/lua-5.2.3/src/ldebug.c"
 $1=14704; //@line 436 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 436 "lib/lua-5.2.3/src/ldebug.c"
 case 22: 
 label=23;break; //@line 438 "lib/lua-5.2.3/src/ldebug.c"
 case 23: 
 label=24;break; //@line 440 "lib/lua-5.2.3/src/ldebug.c"
 case 24: 
 $1=0; //@line 441 "lib/lua-5.2.3/src/ldebug.c"
 label=25;break; //@line 441 "lib/lua-5.2.3/src/ldebug.c"
 case 25: 
 var $145=$1; //@line 442 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $145; //@line 442 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _currentpc($ci){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$ci;
 var $2=$1; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $3=(($2+24)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $4=$3; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4+4)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $6=HEAP32[(($5)>>2)]; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$1; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $9=HEAP32[(($8)>>2)]; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $10=(($9)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$10; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $12=HEAP32[(($11)>>2)]; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $13=$12; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $14=$13; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $15=(($14+12)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $16=HEAP32[(($15)>>2)]; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $17=(($16+12)|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $18=HEAP32[(($17)>>2)]; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$6; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $20=$18; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $21=((($19)-($20))|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $22=(((($21|0))/(4))&-1); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 var $23=((($22)-(1))|0); //@line 41 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $23; //@line 41 "lib/lua-5.2.3/src/ldebug.c"
}


function _luaG_runerror($L,$fmt,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $argp=sp;
 $1=$L;
 $2=$fmt;
 var $3=(($argp)|0); //@line 588 "lib/lua-5.2.3/src/ldebug.c"
 var $4=$3; //@line 588 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($4)>>2)]=varrp;HEAP32[((($4)+(4))>>2)]=0; //@line 588 "lib/lua-5.2.3/src/ldebug.c"
 var $5=$1; //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$1; //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$2; //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($argp)|0); //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 var $9=_luaO_pushvfstring($6,$7,$8); //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 _addinfo($5,$9); //@line 589 "lib/lua-5.2.3/src/ldebug.c"
 var $10=(($argp)|0); //@line 590 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$10; //@line 590 "lib/lua-5.2.3/src/ldebug.c"
 //@line 590 "lib/lua-5.2.3/src/ldebug.c"
 var $12=$1; //@line 591 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_errormsg($12); //@line 591 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 591 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 592 "lib/lua-5.2.3/src/ldebug.c"
}


function _luaG_concaterror($L,$p1,$p2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$p1;
 $3=$p2;
 var $4=$2; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4+8)|0); //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $6=HEAP32[(($5)>>2)]; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$6&15; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $8=($7|0)==4; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 if($8){label=3;break;}else{label=2;break;} //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $10=$2; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $11=(($10+8)|0); //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $12=HEAP32[(($11)>>2)]; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 var $13=($12|0)==3; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 if($13){label=3;break;}else{label=4;break;} //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $15=$3; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 $2=$15; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 533 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $17=$1; //@line 535 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$2; //@line 535 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_typeerror($17,$18,12168); //@line 535 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 535 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 536 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaG_aritherror($L,$p1,$p2){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $temp=sp;
 $1=$L;
 $2=$p1;
 $3=$p2;
 var $4=$2; //@line 541 "lib/lua-5.2.3/src/ldebug.c"
 var $5=_luaV_tonumber($4,$temp); //@line 541 "lib/lua-5.2.3/src/ldebug.c"
 var $6=($5|0)==0; //@line 541 "lib/lua-5.2.3/src/ldebug.c"
 if($6){label=2;break;}else{label=3;break;} //@line 541 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $8=$2; //@line 542 "lib/lua-5.2.3/src/ldebug.c"
 $3=$8; //@line 542 "lib/lua-5.2.3/src/ldebug.c"
 label=3;break; //@line 542 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $10=$1; //@line 543 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$3; //@line 543 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_typeerror($10,$11,9160); //@line 543 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 543 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 544 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaG_ordererror($L,$p1,$p2){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $t1;
 var $t2;
 $1=$L;
 $2=$p1;
 $3=$p2;
 var $4=$2; //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4+8)|0); //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $6=HEAP32[(($5)>>2)]; //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$6&15; //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $8=((($7)+(1))|0); //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $9=((1216+($8<<2))|0); //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $10=HEAP32[(($9)>>2)]; //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 $t1=$10; //@line 548 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$3; //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $12=(($11+8)|0); //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $14=$13&15; //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $15=((($14)+(1))|0); //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $16=((1216+($15<<2))|0); //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $17=HEAP32[(($16)>>2)]; //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 $t2=$17; //@line 549 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$t1; //@line 550 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$t2; //@line 550 "lib/lua-5.2.3/src/ldebug.c"
 var $20=($18|0)==($19|0); //@line 550 "lib/lua-5.2.3/src/ldebug.c"
 if($20){label=2;break;}else{label=3;break;} //@line 550 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $22=$1; //@line 551 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$t1; //@line 551 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_runerror($22,7312,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$23,tempVarArgs)); STACKTOP=tempVarArgs; //@line 551 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 551 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $25=$1; //@line 553 "lib/lua-5.2.3/src/ldebug.c"
 var $26=$t1; //@line 553 "lib/lua-5.2.3/src/ldebug.c"
 var $27=$t2; //@line 553 "lib/lua-5.2.3/src/ldebug.c"
 _luaG_runerror($25,5856,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$26,HEAP32[(((tempVarArgs)+(8))>>2)]=$27,tempVarArgs)); STACKTOP=tempVarArgs; //@line 553 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 553 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 554 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaG_errormsg($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $errfunc;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 $1=$L;
 var $2=$1; //@line 574 "lib/lua-5.2.3/src/ldebug.c"
 var $3=(($2+68)|0); //@line 574 "lib/lua-5.2.3/src/ldebug.c"
 var $4=HEAP32[(($3)>>2)]; //@line 574 "lib/lua-5.2.3/src/ldebug.c"
 var $5=($4|0)!=0; //@line 574 "lib/lua-5.2.3/src/ldebug.c"
 if($5){label=2;break;}else{label=5;break;} //@line 574 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $7=$1; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7+28)|0); //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $9=HEAP32[(($8)>>2)]; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $10=$9; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$1; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $12=(($11+68)|0); //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $14=(($10+$13)|0); //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$14; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 $errfunc=$15; //@line 575 "lib/lua-5.2.3/src/ldebug.c"
 var $16=$errfunc; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 var $17=(($16+8)|0); //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 var $18=HEAP32[(($17)>>2)]; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$18&15; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 var $20=($19|0)==6; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 if($20){label=4;break;}else{label=3;break;} //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $22=$1; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 _luaD_throw($22,6); //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 576 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $24=$1; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $25=(($24+8)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $26=HEAP32[(($25)>>2)]; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $27=((($26)-(16))|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 $io2=$27; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$1; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $29=(($28+8)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $30=HEAP32[(($29)>>2)]; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 $io1=$30; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $31=$io1; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $32=(($31)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$io2; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $34=(($33)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $35=$32; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $36=$34; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 assert(8 % 1 === 0);HEAP32[(($35)>>2)]=HEAP32[(($36)>>2)];HEAP32[((($35)+(4))>>2)]=HEAP32[((($36)+(4))>>2)]; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $37=$io2; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $38=(($37+8)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $39=HEAP32[(($38)>>2)]; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $40=$io1; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $41=(($40+8)|0); //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($41)>>2)]=$39; //@line 577 "lib/lua-5.2.3/src/ldebug.c"
 var $42=$errfunc; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 $io21=$42; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $43=$1; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $44=(($43+8)|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $45=HEAP32[(($44)>>2)]; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $46=((($45)-(16))|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 $io12=$46; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$io12; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $48=(($47)|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $49=$io21; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $50=(($49)|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $51=$48; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $52=$50; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 assert(8 % 1 === 0);HEAP32[(($51)>>2)]=HEAP32[(($52)>>2)];HEAP32[((($51)+(4))>>2)]=HEAP32[((($52)+(4))>>2)]; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $53=$io21; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $54=(($53+8)|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $55=HEAP32[(($54)>>2)]; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $56=$io12; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $57=(($56+8)|0); //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($57)>>2)]=$55; //@line 578 "lib/lua-5.2.3/src/ldebug.c"
 var $58=$1; //@line 579 "lib/lua-5.2.3/src/ldebug.c"
 var $59=(($58+8)|0); //@line 579 "lib/lua-5.2.3/src/ldebug.c"
 var $60=HEAP32[(($59)>>2)]; //@line 579 "lib/lua-5.2.3/src/ldebug.c"
 var $61=(($60+16)|0); //@line 579 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($59)>>2)]=$61; //@line 579 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$1; //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 var $63=$1; //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 var $64=(($63+8)|0); //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 var $65=HEAP32[(($64)>>2)]; //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 var $66=((($65)-(32))|0); //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 _luaD_call($62,$66,1,0); //@line 580 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break; //@line 581 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $68=$1; //@line 582 "lib/lua-5.2.3/src/ldebug.c"
 _luaD_throw($68,2); //@line 582 "lib/lua-5.2.3/src/ldebug.c"
 throw "Reached an unreachable!"; //@line 582 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 583 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _addinfo($L,$msg){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ci;
 var $buff=sp;
 var $line;
 var $src;
 $1=$L;
 $2=$msg;
 var $3=$1; //@line 558 "lib/lua-5.2.3/src/ldebug.c"
 var $4=(($3+16)|0); //@line 558 "lib/lua-5.2.3/src/ldebug.c"
 var $5=HEAP32[(($4)>>2)]; //@line 558 "lib/lua-5.2.3/src/ldebug.c"
 $ci=$5; //@line 558 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$ci; //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 var $7=(($6+18)|0); //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 var $8=HEAP8[($7)]; //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 var $9=($8&255); //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 var $10=$9&1; //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 var $11=($10|0)!=0; //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 if($11){label=2;break;}else{label=6;break;} //@line 559 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $13=$ci; //@line 561 "lib/lua-5.2.3/src/ldebug.c"
 var $14=_currentline($13); //@line 561 "lib/lua-5.2.3/src/ldebug.c"
 $line=$14; //@line 561 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$ci; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15)|0); //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $17=HEAP32[(($16)>>2)]; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $18=(($17)|0); //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$18; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $20=HEAP32[(($19)>>2)]; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $21=$20; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $22=$21; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $23=(($22+12)|0); //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $24=HEAP32[(($23)>>2)]; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $25=(($24+36)|0); //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $26=HEAP32[(($25)>>2)]; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 $src=$26; //@line 562 "lib/lua-5.2.3/src/ldebug.c"
 var $27=$src; //@line 563 "lib/lua-5.2.3/src/ldebug.c"
 var $28=($27|0)!=0; //@line 563 "lib/lua-5.2.3/src/ldebug.c"
 if($28){label=3;break;}else{label=4;break;} //@line 563 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $30=(($buff)|0); //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 var $31=$src; //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 var $32=(($31+16)|0); //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$32; //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 _luaO_chunkid($30,$33,60); //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break; //@line 564 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $35=(($buff)|0); //@line 566 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($35)]=63; //@line 566 "lib/lua-5.2.3/src/ldebug.c"
 var $36=(($buff+1)|0); //@line 566 "lib/lua-5.2.3/src/ldebug.c"
 HEAP8[($36)]=0; //@line 566 "lib/lua-5.2.3/src/ldebug.c"
 label=5;break;
 case 5: 
 var $38=$1; //@line 568 "lib/lua-5.2.3/src/ldebug.c"
 var $39=(($buff)|0); //@line 568 "lib/lua-5.2.3/src/ldebug.c"
 var $40=$line; //@line 568 "lib/lua-5.2.3/src/ldebug.c"
 var $41=$2; //@line 568 "lib/lua-5.2.3/src/ldebug.c"
 var $42=_luaO_pushfstring($38,5056,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 24)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$39,HEAP32[(((tempVarArgs)+(8))>>2)]=$40,HEAP32[(((tempVarArgs)+(16))>>2)]=$41,tempVarArgs)); STACKTOP=tempVarArgs; //@line 568 "lib/lua-5.2.3/src/ldebug.c"
 label=6;break; //@line 569 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 STACKTOP=sp;return; //@line 570 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _currentline($ci){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$ci;
 var $2=$1; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $3=(($2)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $4=HEAP32[(($3)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $5=(($4)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$5; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $7=HEAP32[(($6)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $8=$7; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $9=$8; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $10=(($9+12)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $11=HEAP32[(($10)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $12=(($11+20)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $14=($13|0)!=0; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 if($14){label=2;break;}else{label=3;break;} //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $16=$1; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $17=_currentpc($16); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$1; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $19=(($18)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $20=HEAP32[(($19)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $21=(($20)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $22=$21; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $23=HEAP32[(($22)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $24=$23; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$24; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $26=(($25+12)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $27=HEAP32[(($26)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $28=(($27+20)|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $29=HEAP32[(($28)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $30=(($29+($17<<2))|0); //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $31=HEAP32[(($30)>>2)]; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 var $34=$31;label=4;break; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $34=0;label=4;break; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $34; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $34; //@line 46 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _findsetreg($p,$lastpc,$reg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $pc;
 var $setreg;
 var $jmptarget;
 var $i;
 var $op;
 var $a;
 var $b;
 var $b1;
 var $dest;
 $1=$p;
 $2=$lastpc;
 $3=$reg;
 $setreg=-1; //@line 342 "lib/lua-5.2.3/src/ldebug.c"
 $jmptarget=0; //@line 343 "lib/lua-5.2.3/src/ldebug.c"
 $pc=0; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $5=$pc; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$2; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 var $7=($5|0)<($6|0); //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 if($7){label=3;break;}else{label=29;break;} //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $9=$pc; //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $10=$1; //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $11=(($10+12)|0); //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $12=HEAP32[(($11)>>2)]; //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $13=(($12+($9<<2))|0); //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $14=HEAP32[(($13)>>2)]; //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 $i=$14; //@line 345 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$i; //@line 346 "lib/lua-5.2.3/src/ldebug.c"
 var $16=$15>>>0; //@line 346 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$16&63; //@line 346 "lib/lua-5.2.3/src/ldebug.c"
 $op=$17; //@line 346 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$i; //@line 347 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$18>>>6; //@line 347 "lib/lua-5.2.3/src/ldebug.c"
 var $20=$19&255; //@line 347 "lib/lua-5.2.3/src/ldebug.c"
 $a=$20; //@line 347 "lib/lua-5.2.3/src/ldebug.c"
 var $21=$op; //@line 348 "lib/lua-5.2.3/src/ldebug.c"
 switch(($21|0)){case 29:case 30:{ label=11;break;}case 23:{ label=14;break;}case 27:{ label=20;break;}case 4:{ label=4;break;}case 34:{ label=8;break;}default:{label=23;break;}}break;
 case 4: 
 var $23=$i; //@line 350 "lib/lua-5.2.3/src/ldebug.c"
 var $24=$23>>>23; //@line 350 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$24&511; //@line 350 "lib/lua-5.2.3/src/ldebug.c"
 $b=$25; //@line 350 "lib/lua-5.2.3/src/ldebug.c"
 var $26=$a; //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $27=$3; //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $28=($26|0)<=($27|0); //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 if($28){label=5;break;}else{label=7;break;} //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $30=$3; //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $31=$a; //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $32=$b; //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $33=((($31)+($32))|0); //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 var $34=($30|0)<=($33|0); //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 if($34){label=6;break;}else{label=7;break;} //@line 351 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $36=$pc; //@line 352 "lib/lua-5.2.3/src/ldebug.c"
 var $37=$jmptarget; //@line 352 "lib/lua-5.2.3/src/ldebug.c"
 var $38=_filterpc($36,$37); //@line 352 "lib/lua-5.2.3/src/ldebug.c"
 $setreg=$38; //@line 352 "lib/lua-5.2.3/src/ldebug.c"
 label=7;break; //@line 352 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 label=27;break; //@line 353 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 var $41=$3; //@line 356 "lib/lua-5.2.3/src/ldebug.c"
 var $42=$a; //@line 356 "lib/lua-5.2.3/src/ldebug.c"
 var $43=((($42)+(2))|0); //@line 356 "lib/lua-5.2.3/src/ldebug.c"
 var $44=($41|0)>=($43|0); //@line 356 "lib/lua-5.2.3/src/ldebug.c"
 if($44){label=9;break;}else{label=10;break;} //@line 356 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 var $46=$pc; //@line 357 "lib/lua-5.2.3/src/ldebug.c"
 var $47=$jmptarget; //@line 357 "lib/lua-5.2.3/src/ldebug.c"
 var $48=_filterpc($46,$47); //@line 357 "lib/lua-5.2.3/src/ldebug.c"
 $setreg=$48; //@line 357 "lib/lua-5.2.3/src/ldebug.c"
 label=10;break; //@line 357 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 label=27;break; //@line 358 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 var $51=$3; //@line 362 "lib/lua-5.2.3/src/ldebug.c"
 var $52=$a; //@line 362 "lib/lua-5.2.3/src/ldebug.c"
 var $53=($51|0)>=($52|0); //@line 362 "lib/lua-5.2.3/src/ldebug.c"
 if($53){label=12;break;}else{label=13;break;} //@line 362 "lib/lua-5.2.3/src/ldebug.c"
 case 12: 
 var $55=$pc; //@line 363 "lib/lua-5.2.3/src/ldebug.c"
 var $56=$jmptarget; //@line 363 "lib/lua-5.2.3/src/ldebug.c"
 var $57=_filterpc($55,$56); //@line 363 "lib/lua-5.2.3/src/ldebug.c"
 $setreg=$57; //@line 363 "lib/lua-5.2.3/src/ldebug.c"
 label=13;break; //@line 363 "lib/lua-5.2.3/src/ldebug.c"
 case 13: 
 label=27;break; //@line 364 "lib/lua-5.2.3/src/ldebug.c"
 case 14: 
 var $60=$i; //@line 367 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$60>>>14; //@line 367 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$61&262143; //@line 367 "lib/lua-5.2.3/src/ldebug.c"
 var $63=((($62)-(131071))|0); //@line 367 "lib/lua-5.2.3/src/ldebug.c"
 $b1=$63; //@line 367 "lib/lua-5.2.3/src/ldebug.c"
 var $64=$pc; //@line 368 "lib/lua-5.2.3/src/ldebug.c"
 var $65=((($64)+(1))|0); //@line 368 "lib/lua-5.2.3/src/ldebug.c"
 var $66=$b1; //@line 368 "lib/lua-5.2.3/src/ldebug.c"
 var $67=((($65)+($66))|0); //@line 368 "lib/lua-5.2.3/src/ldebug.c"
 $dest=$67; //@line 368 "lib/lua-5.2.3/src/ldebug.c"
 var $68=$pc; //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 var $69=$dest; //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 var $70=($68|0)<($69|0); //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 if($70){label=15;break;}else{label=19;break;} //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 case 15: 
 var $72=$dest; //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 var $73=$2; //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 var $74=($72|0)<=($73|0); //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 if($74){label=16;break;}else{label=19;break;} //@line 370 "lib/lua-5.2.3/src/ldebug.c"
 case 16: 
 var $76=$dest; //@line 371 "lib/lua-5.2.3/src/ldebug.c"
 var $77=$jmptarget; //@line 371 "lib/lua-5.2.3/src/ldebug.c"
 var $78=($76|0)>($77|0); //@line 371 "lib/lua-5.2.3/src/ldebug.c"
 if($78){label=17;break;}else{label=18;break;} //@line 371 "lib/lua-5.2.3/src/ldebug.c"
 case 17: 
 var $80=$dest; //@line 372 "lib/lua-5.2.3/src/ldebug.c"
 $jmptarget=$80; //@line 372 "lib/lua-5.2.3/src/ldebug.c"
 label=18;break; //@line 372 "lib/lua-5.2.3/src/ldebug.c"
 case 18: 
 label=19;break; //@line 373 "lib/lua-5.2.3/src/ldebug.c"
 case 19: 
 label=27;break; //@line 374 "lib/lua-5.2.3/src/ldebug.c"
 case 20: 
 var $84=$3; //@line 377 "lib/lua-5.2.3/src/ldebug.c"
 var $85=$a; //@line 377 "lib/lua-5.2.3/src/ldebug.c"
 var $86=($84|0)==($85|0); //@line 377 "lib/lua-5.2.3/src/ldebug.c"
 if($86){label=21;break;}else{label=22;break;} //@line 377 "lib/lua-5.2.3/src/ldebug.c"
 case 21: 
 var $88=$pc; //@line 378 "lib/lua-5.2.3/src/ldebug.c"
 var $89=$jmptarget; //@line 378 "lib/lua-5.2.3/src/ldebug.c"
 var $90=_filterpc($88,$89); //@line 378 "lib/lua-5.2.3/src/ldebug.c"
 $setreg=$90; //@line 378 "lib/lua-5.2.3/src/ldebug.c"
 label=22;break; //@line 378 "lib/lua-5.2.3/src/ldebug.c"
 case 22: 
 label=27;break; //@line 379 "lib/lua-5.2.3/src/ldebug.c"
 case 23: 
 var $93=$op; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $94=((1336+$93)|0); //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $95=HEAP8[($94)]; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $96=($95&255); //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $97=$96&64; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $98=($97|0)!=0; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 if($98){label=24;break;}else{label=26;break;} //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 case 24: 
 var $100=$3; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $101=$a; //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 var $102=($100|0)==($101|0); //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 if($102){label=25;break;}else{label=26;break;} //@line 382 "lib/lua-5.2.3/src/ldebug.c"
 case 25: 
 var $104=$pc; //@line 383 "lib/lua-5.2.3/src/ldebug.c"
 var $105=$jmptarget; //@line 383 "lib/lua-5.2.3/src/ldebug.c"
 var $106=_filterpc($104,$105); //@line 383 "lib/lua-5.2.3/src/ldebug.c"
 $setreg=$106; //@line 383 "lib/lua-5.2.3/src/ldebug.c"
 label=26;break; //@line 383 "lib/lua-5.2.3/src/ldebug.c"
 case 26: 
 label=27;break; //@line 384 "lib/lua-5.2.3/src/ldebug.c"
 case 27: 
 label=28;break; //@line 386 "lib/lua-5.2.3/src/ldebug.c"
 case 28: 
 var $110=$pc; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 var $111=((($110)+(1))|0); //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 $pc=$111; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 label=2;break; //@line 344 "lib/lua-5.2.3/src/ldebug.c"
 case 29: 
 var $113=$setreg; //@line 387 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $113; //@line 387 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _upvalname($p,$uv){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $s;
 $2=$p;
 $3=$uv;
 var $4=$3; //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $5=$2; //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $6=(($5+28)|0); //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $7=HEAP32[(($6)>>2)]; //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7+($4<<3))|0); //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $9=(($8)|0); //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $10=HEAP32[(($9)>>2)]; //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 $s=$10; //@line 101 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$s; //@line 102 "lib/lua-5.2.3/src/ldebug.c"
 var $12=($11|0)==0; //@line 102 "lib/lua-5.2.3/src/ldebug.c"
 if($12){label=2;break;}else{label=3;break;} //@line 102 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 $1=14264; //@line 102 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 102 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $15=$s; //@line 103 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+16)|0); //@line 103 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$16; //@line 103 "lib/lua-5.2.3/src/ldebug.c"
 $1=$17; //@line 103 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 103 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $19=$1; //@line 104 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $19; //@line 104 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _kname($p,$pc,$c,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $kvalue;
 var $what;
 $1=$p;
 $2=$pc;
 $3=$c;
 $4=$name;
 var $5=$3; //@line 311 "lib/lua-5.2.3/src/ldebug.c"
 var $6=$5&256; //@line 311 "lib/lua-5.2.3/src/ldebug.c"
 var $7=($6|0)!=0; //@line 311 "lib/lua-5.2.3/src/ldebug.c"
 if($7){label=2;break;}else{label=5;break;} //@line 311 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $9=$3; //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $10=$9&-257; //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$1; //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $12=(($11+8)|0); //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $13=HEAP32[(($12)>>2)]; //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $14=(($13+($10<<4))|0); //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 $kvalue=$14; //@line 312 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$kvalue; //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+8)|0); //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 var $17=HEAP32[(($16)>>2)]; //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$17&15; //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 var $19=($18|0)==4; //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 if($19){label=3;break;}else{label=4;break;} //@line 313 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $21=$kvalue; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $22=(($21)|0); //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$22; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $24=HEAP32[(($23)>>2)]; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$24; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $26=(($25+16)|0); //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $27=$26; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$4; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($28)>>2)]=$27; //@line 314 "lib/lua-5.2.3/src/ldebug.c"
 label=10;break; //@line 315 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 label=9;break; //@line 318 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $31=$1; //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 var $32=$2; //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 var $33=$3; //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 var $34=$4; //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 var $35=_getobjname($31,$32,$33,$34); //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 $what=$35; //@line 320 "lib/lua-5.2.3/src/ldebug.c"
 var $36=$what; //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 var $37=($36|0)!=0; //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 if($37){label=6;break;}else{label=8;break;} //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $39=$what; //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 var $40=HEAP8[($39)]; //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 var $41=(($40<<24)>>24); //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 var $42=($41|0)==99; //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 if($42){label=7;break;}else{label=8;break;} //@line 321 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 label=10;break; //@line 322 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 label=9;break;
 case 9: 
 var $46=$4; //@line 326 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($46)>>2)]=14264; //@line 326 "lib/lua-5.2.3/src/ldebug.c"
 label=10;break; //@line 327 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 STACKTOP=sp;return; //@line 327 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _filterpc($pc,$jmptarget){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$pc;
 $3=$jmptarget;
 var $4=$2; //@line 331 "lib/lua-5.2.3/src/ldebug.c"
 var $5=$3; //@line 331 "lib/lua-5.2.3/src/ldebug.c"
 var $6=($4|0)<($5|0); //@line 331 "lib/lua-5.2.3/src/ldebug.c"
 if($6){label=2;break;}else{label=3;break;} //@line 331 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 $1=-1; //@line 332 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 332 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $9=$2; //@line 333 "lib/lua-5.2.3/src/ldebug.c"
 $1=$9; //@line 333 "lib/lua-5.2.3/src/ldebug.c"
 label=4;break; //@line 333 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $11=$1; //@line 334 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $11; //@line 334 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _funcinfo($ar,$cl){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $p;
 $1=$ar;
 $2=$cl;
 var $3=$2; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $4=($3|0)==0; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 if($4){label=3;break;}else{label=2;break;} //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 case 2: 
 var $6=$2; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $7=$6; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7+4)|0); //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $9=HEAP8[($8)]; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $10=($9&255); //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 var $11=($10|0)==38; //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 if($11){label=3;break;}else{label=4;break;} //@line 179 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $13=$1; //@line 180 "lib/lua-5.2.3/src/ldebug.c"
 var $14=(($13+16)|0); //@line 180 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($14)>>2)]=13112; //@line 180 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$1; //@line 181 "lib/lua-5.2.3/src/ldebug.c"
 var $16=(($15+24)|0); //@line 181 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($16)>>2)]=-1; //@line 181 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$1; //@line 182 "lib/lua-5.2.3/src/ldebug.c"
 var $18=(($17+28)|0); //@line 182 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($18)>>2)]=-1; //@line 182 "lib/lua-5.2.3/src/ldebug.c"
 var $19=$1; //@line 183 "lib/lua-5.2.3/src/ldebug.c"
 var $20=(($19+12)|0); //@line 183 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($20)>>2)]=12824; //@line 183 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break; //@line 184 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 var $22=$2; //@line 186 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$22; //@line 186 "lib/lua-5.2.3/src/ldebug.c"
 var $24=(($23+12)|0); //@line 186 "lib/lua-5.2.3/src/ldebug.c"
 var $25=HEAP32[(($24)>>2)]; //@line 186 "lib/lua-5.2.3/src/ldebug.c"
 $p=$25; //@line 186 "lib/lua-5.2.3/src/ldebug.c"
 var $26=$p; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $27=(($26+36)|0); //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $28=HEAP32[(($27)>>2)]; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $29=($28|0)!=0; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 if($29){label=5;break;}else{label=6;break;} //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 var $31=$p; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $32=(($31+36)|0); //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $33=HEAP32[(($32)>>2)]; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $34=(($33+16)|0); //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $35=$34; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $38=$35;label=7;break; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 var $38=12552;label=7;break; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 var $38; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $39=$1; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $40=(($39+16)|0); //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($40)>>2)]=$38; //@line 187 "lib/lua-5.2.3/src/ldebug.c"
 var $41=$p; //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 var $42=(($41+64)|0); //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 var $43=HEAP32[(($42)>>2)]; //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 var $44=$1; //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 var $45=(($44+24)|0); //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($45)>>2)]=$43; //@line 188 "lib/lua-5.2.3/src/ldebug.c"
 var $46=$p; //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 var $47=(($46+68)|0); //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 var $48=HEAP32[(($47)>>2)]; //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 var $49=$1; //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 var $50=(($49+28)|0); //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($50)>>2)]=$48; //@line 189 "lib/lua-5.2.3/src/ldebug.c"
 var $51=$1; //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $52=(($51+24)|0); //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $53=HEAP32[(($52)>>2)]; //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $54=($53|0)==0; //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $55=($54?12184:11832); //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $56=$1; //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 var $57=(($56+12)|0); //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($57)>>2)]=$55; //@line 190 "lib/lua-5.2.3/src/ldebug.c"
 label=8;break;
 case 8: 
 var $59=$1; //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 var $60=(($59+36)|0); //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 var $61=(($60)|0); //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 var $62=$1; //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 var $63=(($62+16)|0); //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 var $64=HEAP32[(($63)>>2)]; //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 _luaO_chunkid($61,$64,60); //@line 192 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return; //@line 193 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getfuncname($L,$ci,$name){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $tm;
 var $p;
 var $pc;
 var $i;
 $2=$L;
 $3=$ci;
 $4=$name;
 var $5=$3; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $6=(($5)|0); //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $7=HEAP32[(($6)>>2)]; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $8=(($7)|0); //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $9=$8; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $10=HEAP32[(($9)>>2)]; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $11=$10; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $12=$11; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $13=(($12+12)|0); //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $14=HEAP32[(($13)>>2)]; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 $p=$14; //@line 447 "lib/lua-5.2.3/src/ldebug.c"
 var $15=$3; //@line 448 "lib/lua-5.2.3/src/ldebug.c"
 var $16=_currentpc($15); //@line 448 "lib/lua-5.2.3/src/ldebug.c"
 $pc=$16; //@line 448 "lib/lua-5.2.3/src/ldebug.c"
 var $17=$pc; //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $18=$p; //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $19=(($18+12)|0); //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $20=HEAP32[(($19)>>2)]; //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $21=(($20+($17<<2))|0); //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $22=HEAP32[(($21)>>2)]; //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 $i=$22; //@line 449 "lib/lua-5.2.3/src/ldebug.c"
 var $23=$i; //@line 450 "lib/lua-5.2.3/src/ldebug.c"
 var $24=$23>>>0; //@line 450 "lib/lua-5.2.3/src/ldebug.c"
 var $25=$24&63; //@line 450 "lib/lua-5.2.3/src/ldebug.c"
 switch(($25|0)){case 16:{ label=10;break;}case 17:{ label=11;break;}case 18:{ label=12;break;}case 19:{ label=13;break;}case 21:{ label=14;break;}case 25:{ label=15;break;}case 26:{ label=16;break;}case 22:{ label=17;break;}case 29:case 30:{ label=2;break;}case 34:{ label=3;break;}case 12:case 6:case 7:{ label=4;break;}case 8:case 10:{ label=5;break;}case 24:{ label=6;break;}case 13:{ label=7;break;}case 14:{ label=8;break;}case 15:{ label=9;break;}default:{label=18;break;}}break;
 case 2: 
 var $27=$p; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $28=$pc; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $29=$i; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $30=$29>>>6; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $31=$30&255; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $32=$4; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 var $33=_getobjname($27,$28,$31,$32); //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 $1=$33; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 label=20;break; //@line 453 "lib/lua-5.2.3/src/ldebug.c"
 case 3: 
 var $35=$4; //@line 455 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($35)>>2)]=13680; //@line 455 "lib/lua-5.2.3/src/ldebug.c"
 $1=13680; //@line 456 "lib/lua-5.2.3/src/ldebug.c"
 label=20;break; //@line 456 "lib/lua-5.2.3/src/ldebug.c"
 case 4: 
 $tm=0; //@line 461 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 461 "lib/lua-5.2.3/src/ldebug.c"
 case 5: 
 $tm=1; //@line 463 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 463 "lib/lua-5.2.3/src/ldebug.c"
 case 6: 
 $tm=5; //@line 464 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 464 "lib/lua-5.2.3/src/ldebug.c"
 case 7: 
 $tm=6; //@line 465 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 465 "lib/lua-5.2.3/src/ldebug.c"
 case 8: 
 $tm=7; //@line 466 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 466 "lib/lua-5.2.3/src/ldebug.c"
 case 9: 
 $tm=8; //@line 467 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 467 "lib/lua-5.2.3/src/ldebug.c"
 case 10: 
 $tm=9; //@line 468 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 468 "lib/lua-5.2.3/src/ldebug.c"
 case 11: 
 $tm=10; //@line 469 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 469 "lib/lua-5.2.3/src/ldebug.c"
 case 12: 
 $tm=11; //@line 470 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 470 "lib/lua-5.2.3/src/ldebug.c"
 case 13: 
 $tm=12; //@line 471 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 471 "lib/lua-5.2.3/src/ldebug.c"
 case 14: 
 $tm=4; //@line 472 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 472 "lib/lua-5.2.3/src/ldebug.c"
 case 15: 
 $tm=13; //@line 473 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 473 "lib/lua-5.2.3/src/ldebug.c"
 case 16: 
 $tm=14; //@line 474 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 474 "lib/lua-5.2.3/src/ldebug.c"
 case 17: 
 $tm=15; //@line 475 "lib/lua-5.2.3/src/ldebug.c"
 label=19;break; //@line 475 "lib/lua-5.2.3/src/ldebug.c"
 case 18: 
 $1=0; //@line 477 "lib/lua-5.2.3/src/ldebug.c"
 label=20;break; //@line 477 "lib/lua-5.2.3/src/ldebug.c"
 case 19: 
 var $52=$tm; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $53=$2; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $54=(($53+12)|0); //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $55=HEAP32[(($54)>>2)]; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $56=(($55+184)|0); //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $57=(($56+($52<<2))|0); //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $58=HEAP32[(($57)>>2)]; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $59=(($58+16)|0); //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $60=$59; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 var $61=$4; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 HEAP32[(($61)>>2)]=$60; //@line 479 "lib/lua-5.2.3/src/ldebug.c"
 $1=13376; //@line 480 "lib/lua-5.2.3/src/ldebug.c"
 label=20;break; //@line 480 "lib/lua-5.2.3/src/ldebug.c"
 case 20: 
 var $63=$1; //@line 481 "lib/lua-5.2.3/src/ldebug.c"
 STACKTOP=sp;return $63; //@line 481 "lib/lua-5.2.3/src/ldebug.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaE_setdebt($g,$debt){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$g;
 $2=$debt;
 var $3=$2; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $4=$1; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $5=(($4+12)|0); //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $6=HEAP32[(($5)>>2)]; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $7=((($3)-($6))|0); //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $8=$1; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+8)|0); //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $10=HEAP32[(($9)>>2)]; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $11=((($10)-($7))|0); //@line 107 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($9)>>2)]=$11; //@line 107 "lib/lua-5.2.3/src/lstate.c"
 var $12=$2; //@line 108 "lib/lua-5.2.3/src/lstate.c"
 var $13=$1; //@line 108 "lib/lua-5.2.3/src/lstate.c"
 var $14=(($13+12)|0); //@line 108 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($14)>>2)]=$12; //@line 108 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 109 "lib/lua-5.2.3/src/lstate.c"
}


function _luaE_extendCI($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $ci;
 $1=$L;
 var $2=$1; //@line 113 "lib/lua-5.2.3/src/lstate.c"
 var $3=_luaM_realloc_($2,0,0,40); //@line 113 "lib/lua-5.2.3/src/lstate.c"
 var $4=$3; //@line 113 "lib/lua-5.2.3/src/lstate.c"
 $ci=$4; //@line 113 "lib/lua-5.2.3/src/lstate.c"
 var $5=$ci; //@line 115 "lib/lua-5.2.3/src/lstate.c"
 var $6=$1; //@line 115 "lib/lua-5.2.3/src/lstate.c"
 var $7=(($6+16)|0); //@line 115 "lib/lua-5.2.3/src/lstate.c"
 var $8=HEAP32[(($7)>>2)]; //@line 115 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+12)|0); //@line 115 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($9)>>2)]=$5; //@line 115 "lib/lua-5.2.3/src/lstate.c"
 var $10=$1; //@line 116 "lib/lua-5.2.3/src/lstate.c"
 var $11=(($10+16)|0); //@line 116 "lib/lua-5.2.3/src/lstate.c"
 var $12=HEAP32[(($11)>>2)]; //@line 116 "lib/lua-5.2.3/src/lstate.c"
 var $13=$ci; //@line 116 "lib/lua-5.2.3/src/lstate.c"
 var $14=(($13+8)|0); //@line 116 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($14)>>2)]=$12; //@line 116 "lib/lua-5.2.3/src/lstate.c"
 var $15=$ci; //@line 117 "lib/lua-5.2.3/src/lstate.c"
 var $16=(($15+12)|0); //@line 117 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($16)>>2)]=0; //@line 117 "lib/lua-5.2.3/src/lstate.c"
 var $17=$ci; //@line 118 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return $17; //@line 118 "lib/lua-5.2.3/src/lstate.c"
}


function _luaE_freeCI($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $ci;
 var $next;
 $1=$L;
 var $2=$1; //@line 123 "lib/lua-5.2.3/src/lstate.c"
 var $3=(($2+16)|0); //@line 123 "lib/lua-5.2.3/src/lstate.c"
 var $4=HEAP32[(($3)>>2)]; //@line 123 "lib/lua-5.2.3/src/lstate.c"
 $ci=$4; //@line 123 "lib/lua-5.2.3/src/lstate.c"
 var $5=$ci; //@line 124 "lib/lua-5.2.3/src/lstate.c"
 var $6=(($5+12)|0); //@line 124 "lib/lua-5.2.3/src/lstate.c"
 var $7=HEAP32[(($6)>>2)]; //@line 124 "lib/lua-5.2.3/src/lstate.c"
 $next=$7; //@line 124 "lib/lua-5.2.3/src/lstate.c"
 var $8=$ci; //@line 125 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+12)|0); //@line 125 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($9)>>2)]=0; //@line 125 "lib/lua-5.2.3/src/lstate.c"
 label=2;break; //@line 126 "lib/lua-5.2.3/src/lstate.c"
 case 2: 
 var $11=$next; //@line 126 "lib/lua-5.2.3/src/lstate.c"
 $ci=$11; //@line 126 "lib/lua-5.2.3/src/lstate.c"
 var $12=($11|0)!=0; //@line 126 "lib/lua-5.2.3/src/lstate.c"
 if($12){label=3;break;}else{label=4;break;} //@line 126 "lib/lua-5.2.3/src/lstate.c"
 case 3: 
 var $14=$ci; //@line 127 "lib/lua-5.2.3/src/lstate.c"
 var $15=(($14+12)|0); //@line 127 "lib/lua-5.2.3/src/lstate.c"
 var $16=HEAP32[(($15)>>2)]; //@line 127 "lib/lua-5.2.3/src/lstate.c"
 $next=$16; //@line 127 "lib/lua-5.2.3/src/lstate.c"
 var $17=$1; //@line 128 "lib/lua-5.2.3/src/lstate.c"
 var $18=$ci; //@line 128 "lib/lua-5.2.3/src/lstate.c"
 var $19=$18; //@line 128 "lib/lua-5.2.3/src/lstate.c"
 var $20=_luaM_realloc_($17,$19,40,0); //@line 128 "lib/lua-5.2.3/src/lstate.c"
 label=2;break; //@line 129 "lib/lua-5.2.3/src/lstate.c"
 case 4: 
 STACKTOP=sp;return; //@line 130 "lib/lua-5.2.3/src/lstate.c"
  default: assert(0, "bad label: " + label);
 }

}


function _preinit_state($L,$g){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$g;
 var $3=$2; //@line 205 "lib/lua-5.2.3/src/lstate.c"
 var $4=$1; //@line 205 "lib/lua-5.2.3/src/lstate.c"
 var $5=(($4+12)|0); //@line 205 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($5)>>2)]=$3; //@line 205 "lib/lua-5.2.3/src/lstate.c"
 var $6=$1; //@line 206 "lib/lua-5.2.3/src/lstate.c"
 var $7=(($6+28)|0); //@line 206 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($7)>>2)]=0; //@line 206 "lib/lua-5.2.3/src/lstate.c"
 var $8=$1; //@line 207 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+16)|0); //@line 207 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($9)>>2)]=0; //@line 207 "lib/lua-5.2.3/src/lstate.c"
 var $10=$1; //@line 208 "lib/lua-5.2.3/src/lstate.c"
 var $11=(($10+32)|0); //@line 208 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($11)>>2)]=0; //@line 208 "lib/lua-5.2.3/src/lstate.c"
 var $12=$1; //@line 209 "lib/lua-5.2.3/src/lstate.c"
 var $13=(($12+64)|0); //@line 209 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($13)>>2)]=0; //@line 209 "lib/lua-5.2.3/src/lstate.c"
 var $14=$1; //@line 210 "lib/lua-5.2.3/src/lstate.c"
 var $15=(($14+38)|0); //@line 210 "lib/lua-5.2.3/src/lstate.c"
 HEAP16[(($15)>>1)]=0; //@line 210 "lib/lua-5.2.3/src/lstate.c"
 var $16=$1; //@line 211 "lib/lua-5.2.3/src/lstate.c"
 var $17=(($16+52)|0); //@line 211 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($17)>>2)]=0; //@line 211 "lib/lua-5.2.3/src/lstate.c"
 var $18=$1; //@line 212 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18+40)|0); //@line 212 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($19)]=0; //@line 212 "lib/lua-5.2.3/src/lstate.c"
 var $20=$1; //@line 213 "lib/lua-5.2.3/src/lstate.c"
 var $21=(($20+44)|0); //@line 213 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($21)>>2)]=0; //@line 213 "lib/lua-5.2.3/src/lstate.c"
 var $22=$1; //@line 214 "lib/lua-5.2.3/src/lstate.c"
 var $23=(($22+41)|0); //@line 214 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($23)]=1; //@line 214 "lib/lua-5.2.3/src/lstate.c"
 var $24=$1; //@line 215 "lib/lua-5.2.3/src/lstate.c"
 var $25=(($24+44)|0); //@line 215 "lib/lua-5.2.3/src/lstate.c"
 var $26=HEAP32[(($25)>>2)]; //@line 215 "lib/lua-5.2.3/src/lstate.c"
 var $27=$1; //@line 215 "lib/lua-5.2.3/src/lstate.c"
 var $28=(($27+48)|0); //@line 215 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($28)>>2)]=$26; //@line 215 "lib/lua-5.2.3/src/lstate.c"
 var $29=$1; //@line 216 "lib/lua-5.2.3/src/lstate.c"
 var $30=(($29+56)|0); //@line 216 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($30)>>2)]=0; //@line 216 "lib/lua-5.2.3/src/lstate.c"
 var $31=$1; //@line 217 "lib/lua-5.2.3/src/lstate.c"
 var $32=(($31+36)|0); //@line 217 "lib/lua-5.2.3/src/lstate.c"
 HEAP16[(($32)>>1)]=1; //@line 217 "lib/lua-5.2.3/src/lstate.c"
 var $33=$1; //@line 218 "lib/lua-5.2.3/src/lstate.c"
 var $34=(($33+6)|0); //@line 218 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($34)]=0; //@line 218 "lib/lua-5.2.3/src/lstate.c"
 var $35=$1; //@line 219 "lib/lua-5.2.3/src/lstate.c"
 var $36=(($35+68)|0); //@line 219 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($36)>>2)]=0; //@line 219 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 220 "lib/lua-5.2.3/src/lstate.c"
}


function _stack_init($L1,$L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $ci;
 $1=$L1;
 $2=$L;
 var $3=$2; //@line 136 "lib/lua-5.2.3/src/lstate.c"
 var $4=_luaM_realloc_($3,0,0,640); //@line 136 "lib/lua-5.2.3/src/lstate.c"
 var $5=$4; //@line 136 "lib/lua-5.2.3/src/lstate.c"
 var $6=$1; //@line 136 "lib/lua-5.2.3/src/lstate.c"
 var $7=(($6+28)|0); //@line 136 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($7)>>2)]=$5; //@line 136 "lib/lua-5.2.3/src/lstate.c"
 var $8=$1; //@line 137 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+32)|0); //@line 137 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($9)>>2)]=40; //@line 137 "lib/lua-5.2.3/src/lstate.c"
 $i=0; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 label=2;break; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 case 2: 
 var $11=$i; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 var $12=($11|0)<40; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 if($12){label=3;break;}else{label=5;break;} //@line 138 "lib/lua-5.2.3/src/lstate.c"
 case 3: 
 var $14=$1; //@line 139 "lib/lua-5.2.3/src/lstate.c"
 var $15=(($14+28)|0); //@line 139 "lib/lua-5.2.3/src/lstate.c"
 var $16=HEAP32[(($15)>>2)]; //@line 139 "lib/lua-5.2.3/src/lstate.c"
 var $17=$i; //@line 139 "lib/lua-5.2.3/src/lstate.c"
 var $18=(($16+($17<<4))|0); //@line 139 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18+8)|0); //@line 139 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($19)>>2)]=0; //@line 139 "lib/lua-5.2.3/src/lstate.c"
 label=4;break; //@line 139 "lib/lua-5.2.3/src/lstate.c"
 case 4: 
 var $21=$i; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 var $22=((($21)+(1))|0); //@line 138 "lib/lua-5.2.3/src/lstate.c"
 $i=$22; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 label=2;break; //@line 138 "lib/lua-5.2.3/src/lstate.c"
 case 5: 
 var $24=$1; //@line 140 "lib/lua-5.2.3/src/lstate.c"
 var $25=(($24+28)|0); //@line 140 "lib/lua-5.2.3/src/lstate.c"
 var $26=HEAP32[(($25)>>2)]; //@line 140 "lib/lua-5.2.3/src/lstate.c"
 var $27=$1; //@line 140 "lib/lua-5.2.3/src/lstate.c"
 var $28=(($27+8)|0); //@line 140 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($28)>>2)]=$26; //@line 140 "lib/lua-5.2.3/src/lstate.c"
 var $29=$1; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $30=(($29+28)|0); //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $31=HEAP32[(($30)>>2)]; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $32=$1; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $33=(($32+32)|0); //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $34=HEAP32[(($33)>>2)]; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $35=(($31+($34<<4))|0); //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $36=((($35)-(80))|0); //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $37=$1; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $38=(($37+24)|0); //@line 141 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($38)>>2)]=$36; //@line 141 "lib/lua-5.2.3/src/lstate.c"
 var $39=$1; //@line 143 "lib/lua-5.2.3/src/lstate.c"
 var $40=(($39+72)|0); //@line 143 "lib/lua-5.2.3/src/lstate.c"
 $ci=$40; //@line 143 "lib/lua-5.2.3/src/lstate.c"
 var $41=$ci; //@line 144 "lib/lua-5.2.3/src/lstate.c"
 var $42=(($41+8)|0); //@line 144 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($42)>>2)]=0; //@line 144 "lib/lua-5.2.3/src/lstate.c"
 var $43=$ci; //@line 144 "lib/lua-5.2.3/src/lstate.c"
 var $44=(($43+12)|0); //@line 144 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($44)>>2)]=0; //@line 144 "lib/lua-5.2.3/src/lstate.c"
 var $45=$ci; //@line 145 "lib/lua-5.2.3/src/lstate.c"
 var $46=(($45+18)|0); //@line 145 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($46)]=0; //@line 145 "lib/lua-5.2.3/src/lstate.c"
 var $47=$1; //@line 146 "lib/lua-5.2.3/src/lstate.c"
 var $48=(($47+8)|0); //@line 146 "lib/lua-5.2.3/src/lstate.c"
 var $49=HEAP32[(($48)>>2)]; //@line 146 "lib/lua-5.2.3/src/lstate.c"
 var $50=$ci; //@line 146 "lib/lua-5.2.3/src/lstate.c"
 var $51=(($50)|0); //@line 146 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($51)>>2)]=$49; //@line 146 "lib/lua-5.2.3/src/lstate.c"
 var $52=$1; //@line 147 "lib/lua-5.2.3/src/lstate.c"
 var $53=(($52+8)|0); //@line 147 "lib/lua-5.2.3/src/lstate.c"
 var $54=HEAP32[(($53)>>2)]; //@line 147 "lib/lua-5.2.3/src/lstate.c"
 var $55=(($54+16)|0); //@line 147 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($53)>>2)]=$55; //@line 147 "lib/lua-5.2.3/src/lstate.c"
 var $56=(($54+8)|0); //@line 147 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($56)>>2)]=0; //@line 147 "lib/lua-5.2.3/src/lstate.c"
 var $57=$1; //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $58=(($57+8)|0); //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $59=HEAP32[(($58)>>2)]; //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $60=(($59+320)|0); //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $61=$ci; //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $62=(($61+4)|0); //@line 148 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($62)>>2)]=$60; //@line 148 "lib/lua-5.2.3/src/lstate.c"
 var $63=$ci; //@line 149 "lib/lua-5.2.3/src/lstate.c"
 var $64=$1; //@line 149 "lib/lua-5.2.3/src/lstate.c"
 var $65=(($64+16)|0); //@line 149 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($65)>>2)]=$63; //@line 149 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 150 "lib/lua-5.2.3/src/lstate.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaE_freethread($L,$L1){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $l;
 $1=$L;
 $2=$L1;
 var $3=$2; //@line 257 "lib/lua-5.2.3/src/lstate.c"
 var $4=$3; //@line 257 "lib/lua-5.2.3/src/lstate.c"
 var $5=(($4)|0); //@line 257 "lib/lua-5.2.3/src/lstate.c"
 var $6=$5; //@line 257 "lib/lua-5.2.3/src/lstate.c"
 $l=$6; //@line 257 "lib/lua-5.2.3/src/lstate.c"
 var $7=$2; //@line 258 "lib/lua-5.2.3/src/lstate.c"
 var $8=$2; //@line 258 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+28)|0); //@line 258 "lib/lua-5.2.3/src/lstate.c"
 var $10=HEAP32[(($9)>>2)]; //@line 258 "lib/lua-5.2.3/src/lstate.c"
 _luaF_close($7,$10); //@line 258 "lib/lua-5.2.3/src/lstate.c"
 var $11=$1; //@line 260 "lib/lua-5.2.3/src/lstate.c"
 var $12=$2; //@line 261 "lib/lua-5.2.3/src/lstate.c"
 _freestack($12); //@line 261 "lib/lua-5.2.3/src/lstate.c"
 var $13=$1; //@line 262 "lib/lua-5.2.3/src/lstate.c"
 var $14=$l; //@line 262 "lib/lua-5.2.3/src/lstate.c"
 var $15=$14; //@line 262 "lib/lua-5.2.3/src/lstate.c"
 var $16=_luaM_realloc_($13,$15,112,0); //@line 262 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 263 "lib/lua-5.2.3/src/lstate.c"
}


function _freestack($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$L;
 var $2=$1; //@line 154 "lib/lua-5.2.3/src/lstate.c"
 var $3=(($2+28)|0); //@line 154 "lib/lua-5.2.3/src/lstate.c"
 var $4=HEAP32[(($3)>>2)]; //@line 154 "lib/lua-5.2.3/src/lstate.c"
 var $5=($4|0)==0; //@line 154 "lib/lua-5.2.3/src/lstate.c"
 if($5){label=2;break;}else{label=3;break;} //@line 154 "lib/lua-5.2.3/src/lstate.c"
 case 2: 
 label=4;break; //@line 155 "lib/lua-5.2.3/src/lstate.c"
 case 3: 
 var $8=$1; //@line 156 "lib/lua-5.2.3/src/lstate.c"
 var $9=(($8+72)|0); //@line 156 "lib/lua-5.2.3/src/lstate.c"
 var $10=$1; //@line 156 "lib/lua-5.2.3/src/lstate.c"
 var $11=(($10+16)|0); //@line 156 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($11)>>2)]=$9; //@line 156 "lib/lua-5.2.3/src/lstate.c"
 var $12=$1; //@line 157 "lib/lua-5.2.3/src/lstate.c"
 _luaE_freeCI($12); //@line 157 "lib/lua-5.2.3/src/lstate.c"
 var $13=$1; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $14=$1; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $15=(($14+28)|0); //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $16=HEAP32[(($15)>>2)]; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $17=$16; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $18=$1; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18+32)|0); //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $20=HEAP32[(($19)>>2)]; //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $21=($20<<4); //@line 158 "lib/lua-5.2.3/src/lstate.c"
 var $22=_luaM_realloc_($13,$17,$21,0); //@line 158 "lib/lua-5.2.3/src/lstate.c"
 label=4;break; //@line 159 "lib/lua-5.2.3/src/lstate.c"
 case 4: 
 STACKTOP=sp;return; //@line 159 "lib/lua-5.2.3/src/lstate.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_newstate($f,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $L;
 var $g;
 var $l;
 $2=$f;
 $3=$ud;
 var $4=$2; //@line 270 "lib/lua-5.2.3/src/lstate.c"
 var $5=$3; //@line 270 "lib/lua-5.2.3/src/lstate.c"
 var $6=FUNCTION_TABLE[$4]($5,0,8,400); //@line 270 "lib/lua-5.2.3/src/lstate.c"
 var $7=$6; //@line 270 "lib/lua-5.2.3/src/lstate.c"
 $l=$7; //@line 270 "lib/lua-5.2.3/src/lstate.c"
 var $8=$l; //@line 271 "lib/lua-5.2.3/src/lstate.c"
 var $9=($8|0)==0; //@line 271 "lib/lua-5.2.3/src/lstate.c"
 if($9){label=2;break;}else{label=3;break;} //@line 271 "lib/lua-5.2.3/src/lstate.c"
 case 2: 
 $1=0; //@line 271 "lib/lua-5.2.3/src/lstate.c"
 label=10;break; //@line 271 "lib/lua-5.2.3/src/lstate.c"
 case 3: 
 var $12=$l; //@line 272 "lib/lua-5.2.3/src/lstate.c"
 var $13=(($12)|0); //@line 272 "lib/lua-5.2.3/src/lstate.c"
 var $14=(($13)|0); //@line 272 "lib/lua-5.2.3/src/lstate.c"
 $L=$14; //@line 272 "lib/lua-5.2.3/src/lstate.c"
 var $15=$l; //@line 273 "lib/lua-5.2.3/src/lstate.c"
 var $16=(($15+112)|0); //@line 273 "lib/lua-5.2.3/src/lstate.c"
 $g=$16; //@line 273 "lib/lua-5.2.3/src/lstate.c"
 var $17=$L; //@line 274 "lib/lua-5.2.3/src/lstate.c"
 var $18=(($17)|0); //@line 274 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($18)>>2)]=0; //@line 274 "lib/lua-5.2.3/src/lstate.c"
 var $19=$L; //@line 275 "lib/lua-5.2.3/src/lstate.c"
 var $20=(($19+4)|0); //@line 275 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($20)]=8; //@line 275 "lib/lua-5.2.3/src/lstate.c"
 var $21=$g; //@line 276 "lib/lua-5.2.3/src/lstate.c"
 var $22=(($21+60)|0); //@line 276 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($22)]=33; //@line 276 "lib/lua-5.2.3/src/lstate.c"
 var $23=$g; //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $24=(($23+60)|0); //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $25=HEAP8[($24)]; //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $26=($25&255); //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $27=$26&3; //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $28=(($27)&255); //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $29=$L; //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $30=(($29+5)|0); //@line 277 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($30)]=$28; //@line 277 "lib/lua-5.2.3/src/lstate.c"
 var $31=$g; //@line 278 "lib/lua-5.2.3/src/lstate.c"
 var $32=(($31+62)|0); //@line 278 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($32)]=0; //@line 278 "lib/lua-5.2.3/src/lstate.c"
 var $33=$L; //@line 279 "lib/lua-5.2.3/src/lstate.c"
 var $34=$g; //@line 279 "lib/lua-5.2.3/src/lstate.c"
 _preinit_state($33,$34); //@line 279 "lib/lua-5.2.3/src/lstate.c"
 var $35=$2; //@line 280 "lib/lua-5.2.3/src/lstate.c"
 var $36=$g; //@line 280 "lib/lua-5.2.3/src/lstate.c"
 var $37=(($36)|0); //@line 280 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($37)>>2)]=$35; //@line 280 "lib/lua-5.2.3/src/lstate.c"
 var $38=$3; //@line 281 "lib/lua-5.2.3/src/lstate.c"
 var $39=$g; //@line 281 "lib/lua-5.2.3/src/lstate.c"
 var $40=(($39+4)|0); //@line 281 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($40)>>2)]=$38; //@line 281 "lib/lua-5.2.3/src/lstate.c"
 var $41=$L; //@line 282 "lib/lua-5.2.3/src/lstate.c"
 var $42=$g; //@line 282 "lib/lua-5.2.3/src/lstate.c"
 var $43=(($42+172)|0); //@line 282 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($43)>>2)]=$41; //@line 282 "lib/lua-5.2.3/src/lstate.c"
 var $44=$L; //@line 283 "lib/lua-5.2.3/src/lstate.c"
 var $45=_makeseed($44); //@line 283 "lib/lua-5.2.3/src/lstate.c"
 var $46=$g; //@line 283 "lib/lua-5.2.3/src/lstate.c"
 var $47=(($46+56)|0); //@line 283 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($47)>>2)]=$45; //@line 283 "lib/lua-5.2.3/src/lstate.c"
 var $48=$g; //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $49=(($48+112)|0); //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $50=$g; //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $51=(($50+112)|0); //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $52=(($51+16)|0); //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $53=$52; //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $54=(($53)|0); //@line 284 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($54)>>2)]=$49; //@line 284 "lib/lua-5.2.3/src/lstate.c"
 var $55=$g; //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $56=(($55+112)|0); //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $57=$g; //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $58=(($57+112)|0); //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $59=(($58+16)|0); //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $60=$59; //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $61=(($60+4)|0); //@line 285 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($61)>>2)]=$56; //@line 285 "lib/lua-5.2.3/src/lstate.c"
 var $62=$g; //@line 286 "lib/lua-5.2.3/src/lstate.c"
 var $63=(($62+63)|0); //@line 286 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($63)]=0; //@line 286 "lib/lua-5.2.3/src/lstate.c"
 var $64=$g; //@line 287 "lib/lua-5.2.3/src/lstate.c"
 var $65=(($64+20)|0); //@line 287 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($65)>>2)]=0; //@line 287 "lib/lua-5.2.3/src/lstate.c"
 var $66=$g; //@line 288 "lib/lua-5.2.3/src/lstate.c"
 var $67=(($66+24)|0); //@line 288 "lib/lua-5.2.3/src/lstate.c"
 var $68=(($67+8)|0); //@line 288 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($68)>>2)]=0; //@line 288 "lib/lua-5.2.3/src/lstate.c"
 var $69=$g; //@line 289 "lib/lua-5.2.3/src/lstate.c"
 var $70=(($69+24)|0); //@line 289 "lib/lua-5.2.3/src/lstate.c"
 var $71=(($70+4)|0); //@line 289 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($71)>>2)]=0; //@line 289 "lib/lua-5.2.3/src/lstate.c"
 var $72=$g; //@line 290 "lib/lua-5.2.3/src/lstate.c"
 var $73=(($72+24)|0); //@line 290 "lib/lua-5.2.3/src/lstate.c"
 var $74=(($73)|0); //@line 290 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($74)>>2)]=0; //@line 290 "lib/lua-5.2.3/src/lstate.c"
 var $75=$g; //@line 291 "lib/lua-5.2.3/src/lstate.c"
 var $76=(($75+40)|0); //@line 291 "lib/lua-5.2.3/src/lstate.c"
 var $77=(($76+8)|0); //@line 291 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($77)>>2)]=0; //@line 291 "lib/lua-5.2.3/src/lstate.c"
 var $78=$g; //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $79=(($78+144)|0); //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $80=(($79)|0); //@line 292 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($80)>>2)]=0; //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $81=$g; //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $82=(($81+144)|0); //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $83=(($82+8)|0); //@line 292 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($83)>>2)]=0; //@line 292 "lib/lua-5.2.3/src/lstate.c"
 var $84=$g; //@line 293 "lib/lua-5.2.3/src/lstate.c"
 var $85=(($84+168)|0); //@line 293 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($85)>>2)]=0; //@line 293 "lib/lua-5.2.3/src/lstate.c"
 var $86=$g; //@line 294 "lib/lua-5.2.3/src/lstate.c"
 var $87=(($86+176)|0); //@line 294 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($87)>>2)]=0; //@line 294 "lib/lua-5.2.3/src/lstate.c"
 var $88=$g; //@line 295 "lib/lua-5.2.3/src/lstate.c"
 var $89=(($88+61)|0); //@line 295 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($89)]=5; //@line 295 "lib/lua-5.2.3/src/lstate.c"
 var $90=$g; //@line 296 "lib/lua-5.2.3/src/lstate.c"
 var $91=(($90+68)|0); //@line 296 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($91)>>2)]=0; //@line 296 "lib/lua-5.2.3/src/lstate.c"
 var $92=$g; //@line 297 "lib/lua-5.2.3/src/lstate.c"
 var $93=(($92+72)|0); //@line 297 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($93)>>2)]=0; //@line 297 "lib/lua-5.2.3/src/lstate.c"
 var $94=$g; //@line 298 "lib/lua-5.2.3/src/lstate.c"
 var $95=(($94+104)|0); //@line 298 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($95)>>2)]=0; //@line 298 "lib/lua-5.2.3/src/lstate.c"
 var $96=$g; //@line 299 "lib/lua-5.2.3/src/lstate.c"
 var $97=(($96+80)|0); //@line 299 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($97)>>2)]=0; //@line 299 "lib/lua-5.2.3/src/lstate.c"
 var $98=$g; //@line 299 "lib/lua-5.2.3/src/lstate.c"
 var $99=(($98+76)|0); //@line 299 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($99)>>2)]=0; //@line 299 "lib/lua-5.2.3/src/lstate.c"
 var $100=$g; //@line 300 "lib/lua-5.2.3/src/lstate.c"
 var $101=(($100+88)|0); //@line 300 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($101)>>2)]=0; //@line 300 "lib/lua-5.2.3/src/lstate.c"
 var $102=$g; //@line 300 "lib/lua-5.2.3/src/lstate.c"
 var $103=(($102+84)|0); //@line 300 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($103)>>2)]=0; //@line 300 "lib/lua-5.2.3/src/lstate.c"
 var $104=$g; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $105=(($104+100)|0); //@line 301 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($105)>>2)]=0; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $106=$g; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $107=(($106+96)|0); //@line 301 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($107)>>2)]=0; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $108=$g; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $109=(($108+92)|0); //@line 301 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($109)>>2)]=0; //@line 301 "lib/lua-5.2.3/src/lstate.c"
 var $110=$g; //@line 302 "lib/lua-5.2.3/src/lstate.c"
 var $111=(($110+8)|0); //@line 302 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($111)>>2)]=400; //@line 302 "lib/lua-5.2.3/src/lstate.c"
 var $112=$g; //@line 303 "lib/lua-5.2.3/src/lstate.c"
 var $113=(($112+12)|0); //@line 303 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($113)>>2)]=0; //@line 303 "lib/lua-5.2.3/src/lstate.c"
 var $114=$g; //@line 304 "lib/lua-5.2.3/src/lstate.c"
 var $115=(($114+156)|0); //@line 304 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($115)>>2)]=200; //@line 304 "lib/lua-5.2.3/src/lstate.c"
 var $116=$g; //@line 305 "lib/lua-5.2.3/src/lstate.c"
 var $117=(($116+160)|0); //@line 305 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($117)>>2)]=200; //@line 305 "lib/lua-5.2.3/src/lstate.c"
 var $118=$g; //@line 306 "lib/lua-5.2.3/src/lstate.c"
 var $119=(($118+164)|0); //@line 306 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($119)>>2)]=200; //@line 306 "lib/lua-5.2.3/src/lstate.c"
 $i=0; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 label=4;break; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 case 4: 
 var $121=$i; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 var $122=($121|0)<9; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 if($122){label=5;break;}else{label=7;break;} //@line 307 "lib/lua-5.2.3/src/lstate.c"
 case 5: 
 var $124=$i; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 var $125=$g; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 var $126=(($125+252)|0); //@line 307 "lib/lua-5.2.3/src/lstate.c"
 var $127=(($126+($124<<2))|0); //@line 307 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($127)>>2)]=0; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 label=6;break; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 case 6: 
 var $129=$i; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 var $130=((($129)+(1))|0); //@line 307 "lib/lua-5.2.3/src/lstate.c"
 $i=$130; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 label=4;break; //@line 307 "lib/lua-5.2.3/src/lstate.c"
 case 7: 
 var $132=$L; //@line 308 "lib/lua-5.2.3/src/lstate.c"
 var $133=_luaD_rawrunprotected($132,306,0); //@line 308 "lib/lua-5.2.3/src/lstate.c"
 var $134=($133|0)!=0; //@line 308 "lib/lua-5.2.3/src/lstate.c"
 if($134){label=8;break;}else{label=9;break;} //@line 308 "lib/lua-5.2.3/src/lstate.c"
 case 8: 
 var $136=$L; //@line 310 "lib/lua-5.2.3/src/lstate.c"
 _close_state($136); //@line 310 "lib/lua-5.2.3/src/lstate.c"
 $L=0; //@line 311 "lib/lua-5.2.3/src/lstate.c"
 label=9;break; //@line 312 "lib/lua-5.2.3/src/lstate.c"
 case 9: 
 var $138=$L; //@line 313 "lib/lua-5.2.3/src/lstate.c"
 $1=$138; //@line 313 "lib/lua-5.2.3/src/lstate.c"
 label=10;break; //@line 313 "lib/lua-5.2.3/src/lstate.c"
 case 10: 
 var $140=$1; //@line 314 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return $140; //@line 314 "lib/lua-5.2.3/src/lstate.c"
  default: assert(0, "bad label: " + label);
 }

}


function _makeseed($L){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $buff=sp;
 var $h=(sp)+(16);
 var $p;
 var $t=(sp)+(24);
 var $t1=(sp)+(32);
 var $t2=(sp)+(40);
 var $t3=(sp)+(48);
 $1=$L;
 var $2=FUNCTION_TABLE[_time](0); //@line 91 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($h)>>2)]=$2; //@line 91 "lib/lua-5.2.3/src/lstate.c"
 $p=0; //@line 92 "lib/lua-5.2.3/src/lstate.c"
 var $3=$1; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $4=$3; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($t)>>2)]=$4; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $5=(($buff)|0); //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $6=$p; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $7=(($5+$6)|0); //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $8=$t; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 assert(4 % 1 === 0);HEAP8[($7)]=HEAP8[($8)];HEAP8[((($7)+(1))|0)]=HEAP8[((($8)+(1))|0)];HEAP8[((($7)+(2))|0)]=HEAP8[((($8)+(2))|0)];HEAP8[((($7)+(3))|0)]=HEAP8[((($8)+(3))|0)]; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $9=$p; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $10=((($9)+(4))|0); //@line 93 "lib/lua-5.2.3/src/lstate.c"
 $p=$10; //@line 93 "lib/lua-5.2.3/src/lstate.c"
 var $11=$h; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($t1)>>2)]=$11; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $12=(($buff)|0); //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $13=$p; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $14=(($12+$13)|0); //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $15=$t1; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 assert(4 % 1 === 0);HEAP8[($14)]=HEAP8[($15)];HEAP8[((($14)+(1))|0)]=HEAP8[((($15)+(1))|0)];HEAP8[((($14)+(2))|0)]=HEAP8[((($15)+(2))|0)];HEAP8[((($14)+(3))|0)]=HEAP8[((($15)+(3))|0)]; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $16=$p; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 var $17=((($16)+(4))|0); //@line 94 "lib/lua-5.2.3/src/lstate.c"
 $p=$17; //@line 94 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($t2)>>2)]=1376; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $18=(($buff)|0); //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $19=$p; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $20=(($18+$19)|0); //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $21=$t2; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 assert(4 % 1 === 0);HEAP8[($20)]=HEAP8[($21)];HEAP8[((($20)+(1))|0)]=HEAP8[((($21)+(1))|0)];HEAP8[((($20)+(2))|0)]=HEAP8[((($21)+(2))|0)];HEAP8[((($20)+(3))|0)]=HEAP8[((($21)+(3))|0)]; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $22=$p; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 var $23=((($22)+(4))|0); //@line 95 "lib/lua-5.2.3/src/lstate.c"
 $p=$23; //@line 95 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($t3)>>2)]=(292); //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $24=(($buff)|0); //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $25=$p; //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $26=(($24+$25)|0); //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $27=$t3; //@line 96 "lib/lua-5.2.3/src/lstate.c"
 assert(4 % 1 === 0);HEAP8[($26)]=HEAP8[($27)];HEAP8[((($26)+(1))|0)]=HEAP8[((($27)+(1))|0)];HEAP8[((($26)+(2))|0)]=HEAP8[((($27)+(2))|0)];HEAP8[((($26)+(3))|0)]=HEAP8[((($27)+(3))|0)]; //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $28=$p; //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $29=((($28)+(4))|0); //@line 96 "lib/lua-5.2.3/src/lstate.c"
 $p=$29; //@line 96 "lib/lua-5.2.3/src/lstate.c"
 var $30=(($buff)|0); //@line 98 "lib/lua-5.2.3/src/lstate.c"
 var $31=$p; //@line 98 "lib/lua-5.2.3/src/lstate.c"
 var $32=HEAP32[(($h)>>2)]; //@line 98 "lib/lua-5.2.3/src/lstate.c"
 var $33=_luaS_hash($30,$31,$32); //@line 98 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return $33; //@line 98 "lib/lua-5.2.3/src/lstate.c"
}


function _f_luaopen($L,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $g;
 $1=$L;
 $2=$ud;
 var $3=$1; //@line 184 "lib/lua-5.2.3/src/lstate.c"
 var $4=(($3+12)|0); //@line 184 "lib/lua-5.2.3/src/lstate.c"
 var $5=HEAP32[(($4)>>2)]; //@line 184 "lib/lua-5.2.3/src/lstate.c"
 $g=$5; //@line 184 "lib/lua-5.2.3/src/lstate.c"
 var $6=$2; //@line 185 "lib/lua-5.2.3/src/lstate.c"
 var $7=$1; //@line 186 "lib/lua-5.2.3/src/lstate.c"
 var $8=$1; //@line 186 "lib/lua-5.2.3/src/lstate.c"
 _stack_init($7,$8); //@line 186 "lib/lua-5.2.3/src/lstate.c"
 var $9=$1; //@line 187 "lib/lua-5.2.3/src/lstate.c"
 var $10=$g; //@line 187 "lib/lua-5.2.3/src/lstate.c"
 _init_registry($9,$10); //@line 187 "lib/lua-5.2.3/src/lstate.c"
 var $11=$1; //@line 188 "lib/lua-5.2.3/src/lstate.c"
 _luaS_resize($11,32); //@line 188 "lib/lua-5.2.3/src/lstate.c"
 var $12=$1; //@line 189 "lib/lua-5.2.3/src/lstate.c"
 _luaT_init($12); //@line 189 "lib/lua-5.2.3/src/lstate.c"
 var $13=$1; //@line 190 "lib/lua-5.2.3/src/lstate.c"
 _luaX_init($13); //@line 190 "lib/lua-5.2.3/src/lstate.c"
 var $14=$1; //@line 192 "lib/lua-5.2.3/src/lstate.c"
 var $15=_luaS_newlstr($14,15096,17); //@line 192 "lib/lua-5.2.3/src/lstate.c"
 var $16=$g; //@line 192 "lib/lua-5.2.3/src/lstate.c"
 var $17=(($16+180)|0); //@line 192 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($17)>>2)]=$15; //@line 192 "lib/lua-5.2.3/src/lstate.c"
 var $18=$g; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18+180)|0); //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $20=HEAP32[(($19)>>2)]; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $21=$20; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $22=(($21+5)|0); //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $23=HEAP8[($22)]; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $24=($23&255); //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $25=$24|32; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $26=(($25)&255); //@line 193 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($22)]=$26; //@line 193 "lib/lua-5.2.3/src/lstate.c"
 var $27=$g; //@line 194 "lib/lua-5.2.3/src/lstate.c"
 var $28=(($27+63)|0); //@line 194 "lib/lua-5.2.3/src/lstate.c"
 HEAP8[($28)]=1; //@line 194 "lib/lua-5.2.3/src/lstate.c"
 var $29=_lua_version(0); //@line 195 "lib/lua-5.2.3/src/lstate.c"
 var $30=$g; //@line 195 "lib/lua-5.2.3/src/lstate.c"
 var $31=(($30+176)|0); //@line 195 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($31)>>2)]=$29; //@line 195 "lib/lua-5.2.3/src/lstate.c"
 var $32=$1; //@line 196 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 197 "lib/lua-5.2.3/src/lstate.c"
}


function _close_state($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $g;
 $1=$L;
 var $2=$1; //@line 224 "lib/lua-5.2.3/src/lstate.c"
 var $3=(($2+12)|0); //@line 224 "lib/lua-5.2.3/src/lstate.c"
 var $4=HEAP32[(($3)>>2)]; //@line 224 "lib/lua-5.2.3/src/lstate.c"
 $g=$4; //@line 224 "lib/lua-5.2.3/src/lstate.c"
 var $5=$1; //@line 225 "lib/lua-5.2.3/src/lstate.c"
 var $6=$1; //@line 225 "lib/lua-5.2.3/src/lstate.c"
 var $7=(($6+28)|0); //@line 225 "lib/lua-5.2.3/src/lstate.c"
 var $8=HEAP32[(($7)>>2)]; //@line 225 "lib/lua-5.2.3/src/lstate.c"
 _luaF_close($5,$8); //@line 225 "lib/lua-5.2.3/src/lstate.c"
 var $9=$1; //@line 226 "lib/lua-5.2.3/src/lstate.c"
 _luaC_freeallobjects($9); //@line 226 "lib/lua-5.2.3/src/lstate.c"
 var $10=$g; //@line 227 "lib/lua-5.2.3/src/lstate.c"
 var $11=(($10+176)|0); //@line 227 "lib/lua-5.2.3/src/lstate.c"
 var $12=HEAP32[(($11)>>2)]; //@line 227 "lib/lua-5.2.3/src/lstate.c"
 var $13=($12|0)!=0; //@line 227 "lib/lua-5.2.3/src/lstate.c"
 if($13){label=2;break;}else{label=3;break;} //@line 227 "lib/lua-5.2.3/src/lstate.c"
 case 2: 
 var $15=$1; //@line 228 "lib/lua-5.2.3/src/lstate.c"
 label=3;break; //@line 228 "lib/lua-5.2.3/src/lstate.c"
 case 3: 
 var $17=$1; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $18=$1; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18+12)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $20=HEAP32[(($19)>>2)]; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $21=(($20+24)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $22=(($21)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $23=HEAP32[(($22)>>2)]; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $24=$23; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $25=$1; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $26=(($25+12)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $27=HEAP32[(($26)>>2)]; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $28=(($27+24)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $29=(($28+8)|0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $30=HEAP32[(($29)>>2)]; //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $31=($30<<2); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $32=_luaM_realloc_($17,$24,$31,0); //@line 229 "lib/lua-5.2.3/src/lstate.c"
 var $33=$1; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $34=$g; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $35=(($34+144)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $36=(($35)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $37=HEAP32[(($36)>>2)]; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $38=$g; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $39=(($38+144)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $40=(($39+8)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $41=HEAP32[(($40)>>2)]; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $42=$41; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $43=_luaM_realloc_($33,$37,$42,0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $44=$g; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $45=(($44+144)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $46=(($45)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($46)>>2)]=$43; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $47=$g; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $48=(($47+144)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $49=(($48+8)|0); //@line 230 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($49)>>2)]=0; //@line 230 "lib/lua-5.2.3/src/lstate.c"
 var $50=$1; //@line 231 "lib/lua-5.2.3/src/lstate.c"
 _freestack($50); //@line 231 "lib/lua-5.2.3/src/lstate.c"
 var $51=$g; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $52=(($51)|0); //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $53=HEAP32[(($52)>>2)]; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $54=$g; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $55=(($54+4)|0); //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $56=HEAP32[(($55)>>2)]; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $57=$1; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $58=$57; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $59=(($58)|0); //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $60=$59; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $61=$60; //@line 233 "lib/lua-5.2.3/src/lstate.c"
 var $62=FUNCTION_TABLE[$53]($56,$61,400,0); //@line 233 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 234 "lib/lua-5.2.3/src/lstate.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_close($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$L;
 var $2=$1; //@line 318 "lib/lua-5.2.3/src/lstate.c"
 var $3=(($2+12)|0); //@line 318 "lib/lua-5.2.3/src/lstate.c"
 var $4=HEAP32[(($3)>>2)]; //@line 318 "lib/lua-5.2.3/src/lstate.c"
 var $5=(($4+172)|0); //@line 318 "lib/lua-5.2.3/src/lstate.c"
 var $6=HEAP32[(($5)>>2)]; //@line 318 "lib/lua-5.2.3/src/lstate.c"
 $1=$6; //@line 318 "lib/lua-5.2.3/src/lstate.c"
 var $7=$1; //@line 320 "lib/lua-5.2.3/src/lstate.c"
 _close_state($7); //@line 320 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 321 "lib/lua-5.2.3/src/lstate.c"
}


function _init_registry($L,$g){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $mt=sp;
 var $registry;
 var $io;
 var $io1;
 var $io2;
 $1=$L;
 $2=$g;
 var $3=$1; //@line 168 "lib/lua-5.2.3/src/lstate.c"
 var $4=_luaH_new($3); //@line 168 "lib/lua-5.2.3/src/lstate.c"
 $registry=$4; //@line 168 "lib/lua-5.2.3/src/lstate.c"
 var $5=$2; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $6=(($5+40)|0); //@line 169 "lib/lua-5.2.3/src/lstate.c"
 $io=$6; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $7=$registry; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $8=$7; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $9=$io; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $10=(($9)|0); //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $11=$10; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($11)>>2)]=$8; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $12=$io; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $13=(($12+8)|0); //@line 169 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($13)>>2)]=69; //@line 169 "lib/lua-5.2.3/src/lstate.c"
 var $14=$1; //@line 170 "lib/lua-5.2.3/src/lstate.c"
 var $15=$registry; //@line 170 "lib/lua-5.2.3/src/lstate.c"
 _luaH_resize($14,$15,2,0); //@line 170 "lib/lua-5.2.3/src/lstate.c"
 $io1=$mt; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $16=$1; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $17=$16; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $18=$io1; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $19=(($18)|0); //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $20=$19; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($20)>>2)]=$17; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $21=$io1; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $22=(($21+8)|0); //@line 172 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($22)>>2)]=72; //@line 172 "lib/lua-5.2.3/src/lstate.c"
 var $23=$1; //@line 173 "lib/lua-5.2.3/src/lstate.c"
 var $24=$registry; //@line 173 "lib/lua-5.2.3/src/lstate.c"
 _luaH_setint($23,$24,1,$mt); //@line 173 "lib/lua-5.2.3/src/lstate.c"
 $io2=$mt; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $25=$1; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $26=_luaH_new($25); //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $27=$26; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $28=$io2; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $29=(($28)|0); //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $30=$29; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($30)>>2)]=$27; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $31=$io2; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $32=(($31+8)|0); //@line 175 "lib/lua-5.2.3/src/lstate.c"
 HEAP32[(($32)>>2)]=69; //@line 175 "lib/lua-5.2.3/src/lstate.c"
 var $33=$1; //@line 176 "lib/lua-5.2.3/src/lstate.c"
 var $34=$registry; //@line 176 "lib/lua-5.2.3/src/lstate.c"
 _luaH_setint($33,$34,2,$mt); //@line 176 "lib/lua-5.2.3/src/lstate.c"
 STACKTOP=sp;return; //@line 177 "lib/lua-5.2.3/src/lstate.c"
}


function _luaT_init($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $i;
 $1=$L;
 $i=0; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 label=2;break; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 case 2: 
 var $3=$i; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 var $4=($3|0)<17; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 if($4){label=3;break;}else{label=5;break;} //@line 41 "lib/lua-5.2.3/src/ltm.c"
 case 3: 
 var $6=$1; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $7=$i; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $8=((1264+($7<<2))|0); //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $9=HEAP32[(($8)>>2)]; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $10=_luaS_new($6,$9); //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $11=$i; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $12=$1; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $13=(($12+12)|0); //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $14=HEAP32[(($13)>>2)]; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $15=(($14+184)|0); //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $16=(($15+($11<<2))|0); //@line 42 "lib/lua-5.2.3/src/ltm.c"
 HEAP32[(($16)>>2)]=$10; //@line 42 "lib/lua-5.2.3/src/ltm.c"
 var $17=$i; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $18=$1; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $19=(($18+12)|0); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $20=HEAP32[(($19)>>2)]; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $21=(($20+184)|0); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $22=(($21+($17<<2))|0); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $23=HEAP32[(($22)>>2)]; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $24=$23; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $25=(($24+5)|0); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $26=HEAP8[($25)]; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $27=($26&255); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $28=$27|32; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 var $29=(($28)&255); //@line 43 "lib/lua-5.2.3/src/ltm.c"
 HEAP8[($25)]=$29; //@line 43 "lib/lua-5.2.3/src/ltm.c"
 label=4;break; //@line 44 "lib/lua-5.2.3/src/ltm.c"
 case 4: 
 var $31=$i; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 var $32=((($31)+(1))|0); //@line 41 "lib/lua-5.2.3/src/ltm.c"
 $i=$32; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 label=2;break; //@line 41 "lib/lua-5.2.3/src/ltm.c"
 case 5: 
 STACKTOP=sp;return; //@line 45 "lib/lua-5.2.3/src/ltm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaT_gettm($events,$event,$ename){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $tm;
 $2=$events;
 $3=$event;
 $4=$ename;
 var $5=$2; //@line 53 "lib/lua-5.2.3/src/ltm.c"
 var $6=$4; //@line 53 "lib/lua-5.2.3/src/ltm.c"
 var $7=_luaH_getstr($5,$6); //@line 53 "lib/lua-5.2.3/src/ltm.c"
 $tm=$7; //@line 53 "lib/lua-5.2.3/src/ltm.c"
 var $8=$tm; //@line 55 "lib/lua-5.2.3/src/ltm.c"
 var $9=(($8+8)|0); //@line 55 "lib/lua-5.2.3/src/ltm.c"
 var $10=HEAP32[(($9)>>2)]; //@line 55 "lib/lua-5.2.3/src/ltm.c"
 var $11=($10|0)==0; //@line 55 "lib/lua-5.2.3/src/ltm.c"
 if($11){label=2;break;}else{label=3;break;} //@line 55 "lib/lua-5.2.3/src/ltm.c"
 case 2: 
 var $13=$3; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $14=1<<$13; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $15=(($14)&255); //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $16=($15&255); //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $17=$2; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $18=(($17+6)|0); //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $19=HEAP8[($18)]; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $20=($19&255); //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $21=$20|$16; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 var $22=(($21)&255); //@line 56 "lib/lua-5.2.3/src/ltm.c"
 HEAP8[($18)]=$22; //@line 56 "lib/lua-5.2.3/src/ltm.c"
 $1=0; //@line 57 "lib/lua-5.2.3/src/ltm.c"
 label=4;break; //@line 57 "lib/lua-5.2.3/src/ltm.c"
 case 3: 
 var $24=$tm; //@line 59 "lib/lua-5.2.3/src/ltm.c"
 $1=$24; //@line 59 "lib/lua-5.2.3/src/ltm.c"
 label=4;break; //@line 59 "lib/lua-5.2.3/src/ltm.c"
 case 4: 
 var $26=$1; //@line 60 "lib/lua-5.2.3/src/ltm.c"
 STACKTOP=sp;return $26; //@line 60 "lib/lua-5.2.3/src/ltm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaT_gettmbyobj($L,$o,$event){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $mt;
 $1=$L;
 $2=$o;
 $3=$event;
 var $4=$2; //@line 65 "lib/lua-5.2.3/src/ltm.c"
 var $5=(($4+8)|0); //@line 65 "lib/lua-5.2.3/src/ltm.c"
 var $6=HEAP32[(($5)>>2)]; //@line 65 "lib/lua-5.2.3/src/ltm.c"
 var $7=$6&15; //@line 65 "lib/lua-5.2.3/src/ltm.c"
 if(($7|0)==5){ label=2;break;}else if(($7|0)==7){ label=3;break;}else{label=4;break;}
 case 2: 
 var $9=$2; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $10=(($9)|0); //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $11=$10; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $12=HEAP32[(($11)>>2)]; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $13=$12; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $14=(($13+8)|0); //@line 67 "lib/lua-5.2.3/src/ltm.c"
 var $15=HEAP32[(($14)>>2)]; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 $mt=$15; //@line 67 "lib/lua-5.2.3/src/ltm.c"
 label=5;break; //@line 68 "lib/lua-5.2.3/src/ltm.c"
 case 3: 
 var $17=$2; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $18=(($17)|0); //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $19=$18; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $20=HEAP32[(($19)>>2)]; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $21=$20; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $22=$21; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $23=(($22+8)|0); //@line 70 "lib/lua-5.2.3/src/ltm.c"
 var $24=HEAP32[(($23)>>2)]; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 $mt=$24; //@line 70 "lib/lua-5.2.3/src/ltm.c"
 label=5;break; //@line 71 "lib/lua-5.2.3/src/ltm.c"
 case 4: 
 var $26=$2; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $27=(($26+8)|0); //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $28=HEAP32[(($27)>>2)]; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $29=$28&15; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $30=$1; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $31=(($30+12)|0); //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $32=HEAP32[(($31)>>2)]; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $33=(($32+252)|0); //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $34=(($33+($29<<2))|0); //@line 73 "lib/lua-5.2.3/src/ltm.c"
 var $35=HEAP32[(($34)>>2)]; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 $mt=$35; //@line 73 "lib/lua-5.2.3/src/ltm.c"
 label=5;break; //@line 74 "lib/lua-5.2.3/src/ltm.c"
 case 5: 
 var $37=$mt; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $38=($37|0)!=0; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 if($38){label=6;break;}else{label=7;break;} //@line 75 "lib/lua-5.2.3/src/ltm.c"
 case 6: 
 var $40=$mt; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $41=$3; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $42=$1; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $43=(($42+12)|0); //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $44=HEAP32[(($43)>>2)]; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $45=(($44+184)|0); //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $46=(($45+($41<<2))|0); //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $47=HEAP32[(($46)>>2)]; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $48=_luaH_getstr($40,$47); //@line 75 "lib/lua-5.2.3/src/ltm.c"
 var $51=$48;label=8;break; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 case 7: 
 var $51=1376;label=8;break; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 case 8: 
 var $51; //@line 75 "lib/lua-5.2.3/src/ltm.c"
 STACKTOP=sp;return $51; //@line 75 "lib/lua-5.2.3/src/ltm.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaZ_fill($z){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $size=sp;
 var $L;
 var $buff;
 $2=$z;
 var $3=$2; //@line 23 "lib/lua-5.2.3/src/lzio.c"
 var $4=(($3+16)|0); //@line 23 "lib/lua-5.2.3/src/lzio.c"
 var $5=HEAP32[(($4)>>2)]; //@line 23 "lib/lua-5.2.3/src/lzio.c"
 $L=$5; //@line 23 "lib/lua-5.2.3/src/lzio.c"
 var $6=$2; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $7=(($6+8)|0); //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $8=HEAP32[(($7)>>2)]; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $9=$L; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $10=$2; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $11=(($10+12)|0); //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $12=HEAP32[(($11)>>2)]; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $13=FUNCTION_TABLE[$8]($9,$12,$size); //@line 26 "lib/lua-5.2.3/src/lzio.c"
 $buff=$13; //@line 26 "lib/lua-5.2.3/src/lzio.c"
 var $14=$buff; //@line 28 "lib/lua-5.2.3/src/lzio.c"
 var $15=($14|0)==0; //@line 28 "lib/lua-5.2.3/src/lzio.c"
 if($15){label=3;break;}else{label=2;break;} //@line 28 "lib/lua-5.2.3/src/lzio.c"
 case 2: 
 var $17=HEAP32[(($size)>>2)]; //@line 28 "lib/lua-5.2.3/src/lzio.c"
 var $18=($17|0)==0; //@line 28 "lib/lua-5.2.3/src/lzio.c"
 if($18){label=3;break;}else{label=4;break;} //@line 28 "lib/lua-5.2.3/src/lzio.c"
 case 3: 
 $1=-1; //@line 29 "lib/lua-5.2.3/src/lzio.c"
 label=5;break; //@line 29 "lib/lua-5.2.3/src/lzio.c"
 case 4: 
 var $21=HEAP32[(($size)>>2)]; //@line 30 "lib/lua-5.2.3/src/lzio.c"
 var $22=((($21)-(1))|0); //@line 30 "lib/lua-5.2.3/src/lzio.c"
 var $23=$2; //@line 30 "lib/lua-5.2.3/src/lzio.c"
 var $24=(($23)|0); //@line 30 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($24)>>2)]=$22; //@line 30 "lib/lua-5.2.3/src/lzio.c"
 var $25=$buff; //@line 31 "lib/lua-5.2.3/src/lzio.c"
 var $26=$2; //@line 31 "lib/lua-5.2.3/src/lzio.c"
 var $27=(($26+4)|0); //@line 31 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($27)>>2)]=$25; //@line 31 "lib/lua-5.2.3/src/lzio.c"
 var $28=$2; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 var $29=(($28+4)|0); //@line 32 "lib/lua-5.2.3/src/lzio.c"
 var $30=HEAP32[(($29)>>2)]; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 var $31=(($30+1)|0); //@line 32 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($29)>>2)]=$31; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 var $32=HEAP8[($30)]; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 var $33=($32&255); //@line 32 "lib/lua-5.2.3/src/lzio.c"
 $1=$33; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 label=5;break; //@line 32 "lib/lua-5.2.3/src/lzio.c"
 case 5: 
 var $35=$1; //@line 33 "lib/lua-5.2.3/src/lzio.c"
 STACKTOP=sp;return $35; //@line 33 "lib/lua-5.2.3/src/lzio.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaZ_init($L,$z,$reader,$data){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$L;
 $2=$z;
 $3=$reader;
 $4=$data;
 var $5=$1; //@line 37 "lib/lua-5.2.3/src/lzio.c"
 var $6=$2; //@line 37 "lib/lua-5.2.3/src/lzio.c"
 var $7=(($6+16)|0); //@line 37 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($7)>>2)]=$5; //@line 37 "lib/lua-5.2.3/src/lzio.c"
 var $8=$3; //@line 38 "lib/lua-5.2.3/src/lzio.c"
 var $9=$2; //@line 38 "lib/lua-5.2.3/src/lzio.c"
 var $10=(($9+8)|0); //@line 38 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($10)>>2)]=$8; //@line 38 "lib/lua-5.2.3/src/lzio.c"
 var $11=$4; //@line 39 "lib/lua-5.2.3/src/lzio.c"
 var $12=$2; //@line 39 "lib/lua-5.2.3/src/lzio.c"
 var $13=(($12+12)|0); //@line 39 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($13)>>2)]=$11; //@line 39 "lib/lua-5.2.3/src/lzio.c"
 var $14=$2; //@line 40 "lib/lua-5.2.3/src/lzio.c"
 var $15=(($14)|0); //@line 40 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($15)>>2)]=0; //@line 40 "lib/lua-5.2.3/src/lzio.c"
 var $16=$2; //@line 41 "lib/lua-5.2.3/src/lzio.c"
 var $17=(($16+4)|0); //@line 41 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($17)>>2)]=0; //@line 41 "lib/lua-5.2.3/src/lzio.c"
 STACKTOP=sp;return; //@line 42 "lib/lua-5.2.3/src/lzio.c"
}


function _luaZ_read($z,$b,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $m;
 $2=$z;
 $3=$b;
 $4=$n;
 label=2;break; //@line 47 "lib/lua-5.2.3/src/lzio.c"
 case 2: 
 var $6=$4; //@line 47 "lib/lua-5.2.3/src/lzio.c"
 var $7=($6|0)!=0; //@line 47 "lib/lua-5.2.3/src/lzio.c"
 if($7){label=3;break;}else{label=12;break;} //@line 47 "lib/lua-5.2.3/src/lzio.c"
 case 3: 
 var $9=$2; //@line 49 "lib/lua-5.2.3/src/lzio.c"
 var $10=(($9)|0); //@line 49 "lib/lua-5.2.3/src/lzio.c"
 var $11=HEAP32[(($10)>>2)]; //@line 49 "lib/lua-5.2.3/src/lzio.c"
 var $12=($11|0)==0; //@line 49 "lib/lua-5.2.3/src/lzio.c"
 if($12){label=4;break;}else{label=8;break;} //@line 49 "lib/lua-5.2.3/src/lzio.c"
 case 4: 
 var $14=$2; //@line 50 "lib/lua-5.2.3/src/lzio.c"
 var $15=_luaZ_fill($14); //@line 50 "lib/lua-5.2.3/src/lzio.c"
 var $16=($15|0)==-1; //@line 50 "lib/lua-5.2.3/src/lzio.c"
 if($16){label=5;break;}else{label=6;break;} //@line 50 "lib/lua-5.2.3/src/lzio.c"
 case 5: 
 var $18=$4; //@line 51 "lib/lua-5.2.3/src/lzio.c"
 $1=$18; //@line 51 "lib/lua-5.2.3/src/lzio.c"
 label=13;break; //@line 51 "lib/lua-5.2.3/src/lzio.c"
 case 6: 
 var $20=$2; //@line 53 "lib/lua-5.2.3/src/lzio.c"
 var $21=(($20)|0); //@line 53 "lib/lua-5.2.3/src/lzio.c"
 var $22=HEAP32[(($21)>>2)]; //@line 53 "lib/lua-5.2.3/src/lzio.c"
 var $23=((($22)+(1))|0); //@line 53 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($21)>>2)]=$23; //@line 53 "lib/lua-5.2.3/src/lzio.c"
 var $24=$2; //@line 54 "lib/lua-5.2.3/src/lzio.c"
 var $25=(($24+4)|0); //@line 54 "lib/lua-5.2.3/src/lzio.c"
 var $26=HEAP32[(($25)>>2)]; //@line 54 "lib/lua-5.2.3/src/lzio.c"
 var $27=((($26)-(1))|0); //@line 54 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($25)>>2)]=$27; //@line 54 "lib/lua-5.2.3/src/lzio.c"
 label=7;break;
 case 7: 
 label=8;break; //@line 56 "lib/lua-5.2.3/src/lzio.c"
 case 8: 
 var $30=$4; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $31=$2; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $32=(($31)|0); //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $33=HEAP32[(($32)>>2)]; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $34=($30>>>0)<=($33>>>0); //@line 57 "lib/lua-5.2.3/src/lzio.c"
 if($34){label=9;break;}else{label=10;break;} //@line 57 "lib/lua-5.2.3/src/lzio.c"
 case 9: 
 var $36=$4; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $42=$36;label=11;break; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 case 10: 
 var $38=$2; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $39=(($38)|0); //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $40=HEAP32[(($39)>>2)]; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $42=$40;label=11;break; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 case 11: 
 var $42; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 $m=$42; //@line 57 "lib/lua-5.2.3/src/lzio.c"
 var $43=$3; //@line 58 "lib/lua-5.2.3/src/lzio.c"
 var $44=$2; //@line 58 "lib/lua-5.2.3/src/lzio.c"
 var $45=(($44+4)|0); //@line 58 "lib/lua-5.2.3/src/lzio.c"
 var $46=HEAP32[(($45)>>2)]; //@line 58 "lib/lua-5.2.3/src/lzio.c"
 var $47=$m; //@line 58 "lib/lua-5.2.3/src/lzio.c"
 assert($47 % 1 === 0);(_memcpy($43, $46, $47)|0); //@line 58 "lib/lua-5.2.3/src/lzio.c"
 var $48=$m; //@line 59 "lib/lua-5.2.3/src/lzio.c"
 var $49=$2; //@line 59 "lib/lua-5.2.3/src/lzio.c"
 var $50=(($49)|0); //@line 59 "lib/lua-5.2.3/src/lzio.c"
 var $51=HEAP32[(($50)>>2)]; //@line 59 "lib/lua-5.2.3/src/lzio.c"
 var $52=((($51)-($48))|0); //@line 59 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($50)>>2)]=$52; //@line 59 "lib/lua-5.2.3/src/lzio.c"
 var $53=$m; //@line 60 "lib/lua-5.2.3/src/lzio.c"
 var $54=$2; //@line 60 "lib/lua-5.2.3/src/lzio.c"
 var $55=(($54+4)|0); //@line 60 "lib/lua-5.2.3/src/lzio.c"
 var $56=HEAP32[(($55)>>2)]; //@line 60 "lib/lua-5.2.3/src/lzio.c"
 var $57=(($56+$53)|0); //@line 60 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($55)>>2)]=$57; //@line 60 "lib/lua-5.2.3/src/lzio.c"
 var $58=$3; //@line 61 "lib/lua-5.2.3/src/lzio.c"
 var $59=$m; //@line 61 "lib/lua-5.2.3/src/lzio.c"
 var $60=(($58+$59)|0); //@line 61 "lib/lua-5.2.3/src/lzio.c"
 $3=$60; //@line 61 "lib/lua-5.2.3/src/lzio.c"
 var $61=$m; //@line 62 "lib/lua-5.2.3/src/lzio.c"
 var $62=$4; //@line 62 "lib/lua-5.2.3/src/lzio.c"
 var $63=((($62)-($61))|0); //@line 62 "lib/lua-5.2.3/src/lzio.c"
 $4=$63; //@line 62 "lib/lua-5.2.3/src/lzio.c"
 label=2;break; //@line 63 "lib/lua-5.2.3/src/lzio.c"
 case 12: 
 $1=0; //@line 64 "lib/lua-5.2.3/src/lzio.c"
 label=13;break; //@line 64 "lib/lua-5.2.3/src/lzio.c"
 case 13: 
 var $66=$1; //@line 65 "lib/lua-5.2.3/src/lzio.c"
 STACKTOP=sp;return $66; //@line 65 "lib/lua-5.2.3/src/lzio.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaZ_openspace($L,$buff,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$buff;
 $3=$n;
 var $4=$3; //@line 69 "lib/lua-5.2.3/src/lzio.c"
 var $5=$2; //@line 69 "lib/lua-5.2.3/src/lzio.c"
 var $6=(($5+8)|0); //@line 69 "lib/lua-5.2.3/src/lzio.c"
 var $7=HEAP32[(($6)>>2)]; //@line 69 "lib/lua-5.2.3/src/lzio.c"
 var $8=($4>>>0)>($7>>>0); //@line 69 "lib/lua-5.2.3/src/lzio.c"
 if($8){label=2;break;}else{label=8;break;} //@line 69 "lib/lua-5.2.3/src/lzio.c"
 case 2: 
 var $10=$3; //@line 70 "lib/lua-5.2.3/src/lzio.c"
 var $11=($10>>>0)<32; //@line 70 "lib/lua-5.2.3/src/lzio.c"
 if($11){label=3;break;}else{label=4;break;} //@line 70 "lib/lua-5.2.3/src/lzio.c"
 case 3: 
 $3=32; //@line 70 "lib/lua-5.2.3/src/lzio.c"
 label=4;break; //@line 70 "lib/lua-5.2.3/src/lzio.c"
 case 4: 
 var $14=$3; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $15=((($14)+(1))|0); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $16=($15>>>0)>4294967293; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 if($16){label=5;break;}else{label=6;break;} //@line 71 "lib/lua-5.2.3/src/lzio.c"
 case 5: 
 var $18=$1; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 _luaM_toobig($18); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 throw "Reached an unreachable!"; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 label=7;break; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 case 6: 
 var $22=0;label=7;break; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 case 7: 
 var $22; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $23=$1; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $24=$2; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $25=(($24)|0); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $26=HEAP32[(($25)>>2)]; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $27=$2; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $28=(($27+8)|0); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $29=HEAP32[(($28)>>2)]; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $30=$29; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $31=$3; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $32=$31; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $33=_luaM_realloc_($23,$26,$30,$32); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $34=$2; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $35=(($34)|0); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($35)>>2)]=$33; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $36=$3; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $37=$2; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 var $38=(($37+8)|0); //@line 71 "lib/lua-5.2.3/src/lzio.c"
 HEAP32[(($38)>>2)]=$36; //@line 71 "lib/lua-5.2.3/src/lzio.c"
 label=8;break; //@line 72 "lib/lua-5.2.3/src/lzio.c"
 case 8: 
 var $40=$2; //@line 73 "lib/lua-5.2.3/src/lzio.c"
 var $41=(($40)|0); //@line 73 "lib/lua-5.2.3/src/lzio.c"
 var $42=HEAP32[(($41)>>2)]; //@line 73 "lib/lua-5.2.3/src/lzio.c"
 STACKTOP=sp;return $42; //@line 73 "lib/lua-5.2.3/src/lzio.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_nil($fs,$from,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $previous;
 var $l;
 var $pfrom;
 var $pl;
 $1=$fs;
 $2=$from;
 $3=$n;
 var $4=$2; //@line 39 "lib/lua-5.2.3/src/lcode.c"
 var $5=$3; //@line 39 "lib/lua-5.2.3/src/lcode.c"
 var $6=((($4)+($5))|0); //@line 39 "lib/lua-5.2.3/src/lcode.c"
 var $7=((($6)-(1))|0); //@line 39 "lib/lua-5.2.3/src/lcode.c"
 $l=$7; //@line 39 "lib/lua-5.2.3/src/lcode.c"
 var $8=$1; //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $9=(($8+20)|0); //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP32[(($9)>>2)]; //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $11=$1; //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+24)|0); //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 40 "lib/lua-5.2.3/src/lcode.c"
 var $14=($10|0)>($13|0); //@line 40 "lib/lua-5.2.3/src/lcode.c"
 if($14){label=2;break;}else{label=14;break;} //@line 40 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $16=$1; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+20)|0); //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $19=((($18)-(1))|0); //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $20=$1; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $21=(($20)|0); //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $22=HEAP32[(($21)>>2)]; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $23=(($22+12)|0); //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $24=HEAP32[(($23)>>2)]; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+($19<<2))|0); //@line 41 "lib/lua-5.2.3/src/lcode.c"
 $previous=$25; //@line 41 "lib/lua-5.2.3/src/lcode.c"
 var $26=$previous; //@line 42 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAP32[(($26)>>2)]; //@line 42 "lib/lua-5.2.3/src/lcode.c"
 var $28=$27>>>0; //@line 42 "lib/lua-5.2.3/src/lcode.c"
 var $29=$28&63; //@line 42 "lib/lua-5.2.3/src/lcode.c"
 var $30=($29|0)==4; //@line 42 "lib/lua-5.2.3/src/lcode.c"
 if($30){label=3;break;}else{label=13;break;} //@line 42 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $32=$previous; //@line 43 "lib/lua-5.2.3/src/lcode.c"
 var $33=HEAP32[(($32)>>2)]; //@line 43 "lib/lua-5.2.3/src/lcode.c"
 var $34=$33>>>6; //@line 43 "lib/lua-5.2.3/src/lcode.c"
 var $35=$34&255; //@line 43 "lib/lua-5.2.3/src/lcode.c"
 $pfrom=$35; //@line 43 "lib/lua-5.2.3/src/lcode.c"
 var $36=$pfrom; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $37=$previous; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $39=$38>>>23; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $40=$39&511; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $41=((($36)+($40))|0); //@line 44 "lib/lua-5.2.3/src/lcode.c"
 $pl=$41; //@line 44 "lib/lua-5.2.3/src/lcode.c"
 var $42=$pfrom; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $43=$2; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $44=($42|0)<=($43|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 if($44){label=4;break;}else{label=5;break;} //@line 45 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $46=$2; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $47=$pl; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $48=((($47)+(1))|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $49=($46|0)<=($48|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 if($49){label=7;break;}else{label=5;break;} //@line 45 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $51=$2; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $52=$pfrom; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $53=($51|0)<=($52|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 if($53){label=6;break;}else{label=12;break;} //@line 45 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $55=$pfrom; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $56=$l; //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $57=((($56)+(1))|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 var $58=($55|0)<=($57|0); //@line 45 "lib/lua-5.2.3/src/lcode.c"
 if($58){label=7;break;}else{label=12;break;} //@line 45 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $60=$pfrom; //@line 47 "lib/lua-5.2.3/src/lcode.c"
 var $61=$2; //@line 47 "lib/lua-5.2.3/src/lcode.c"
 var $62=($60|0)<($61|0); //@line 47 "lib/lua-5.2.3/src/lcode.c"
 if($62){label=8;break;}else{label=9;break;} //@line 47 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $64=$pfrom; //@line 47 "lib/lua-5.2.3/src/lcode.c"
 $2=$64; //@line 47 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 47 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $66=$pl; //@line 48 "lib/lua-5.2.3/src/lcode.c"
 var $67=$l; //@line 48 "lib/lua-5.2.3/src/lcode.c"
 var $68=($66|0)>($67|0); //@line 48 "lib/lua-5.2.3/src/lcode.c"
 if($68){label=10;break;}else{label=11;break;} //@line 48 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 var $70=$pl; //@line 48 "lib/lua-5.2.3/src/lcode.c"
 $l=$70; //@line 48 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 48 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 var $72=$previous; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $73=HEAP32[(($72)>>2)]; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $74=$73&-16321; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $75=$2; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $76=$75<<6; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $77=$76&16320; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $78=$74|$77; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $79=$previous; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($79)>>2)]=$78; //@line 49 "lib/lua-5.2.3/src/lcode.c"
 var $80=$previous; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $81=HEAP32[(($80)>>2)]; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $82=$81&8388607; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $83=$l; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $84=$2; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $85=((($83)-($84))|0); //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $86=$85<<23; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $87=$86&-8388608; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $88=$82|$87; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 var $89=$previous; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($89)>>2)]=$88; //@line 50 "lib/lua-5.2.3/src/lcode.c"
 label=15;break; //@line 51 "lib/lua-5.2.3/src/lcode.c"
 case 12: 
 label=13;break; //@line 53 "lib/lua-5.2.3/src/lcode.c"
 case 13: 
 label=14;break; //@line 54 "lib/lua-5.2.3/src/lcode.c"
 case 14: 
 var $93=$1; //@line 55 "lib/lua-5.2.3/src/lcode.c"
 var $94=$2; //@line 55 "lib/lua-5.2.3/src/lcode.c"
 var $95=$3; //@line 55 "lib/lua-5.2.3/src/lcode.c"
 var $96=((($95)-(1))|0); //@line 55 "lib/lua-5.2.3/src/lcode.c"
 var $97=_luaK_codeABC($93,4,$94,$96,0); //@line 55 "lib/lua-5.2.3/src/lcode.c"
 label=15;break; //@line 56 "lib/lua-5.2.3/src/lcode.c"
 case 15: 
 STACKTOP=sp;return; //@line 56 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_codeABC($fs,$o,$a,$b,$c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$fs;
 $2=$o;
 $3=$a;
 $4=$b;
 $5=$c;
 var $6=$1; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $7=$2; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $8=$7<<0; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $9=$3; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $10=$9<<6; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $11=$8|$10; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $12=$4; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $13=$12<<23; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $14=$11|$13; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $15=$5; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $16=$15<<14; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $17=$14|$16; //@line 232 "lib/lua-5.2.3/src/lcode.c"
 var $18=_luaK_code($6,$17); //@line 232 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $18; //@line 232 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_jump($fs){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $jpc;
 var $j=sp;
 $1=$fs;
 var $2=$1; //@line 60 "lib/lua-5.2.3/src/lcode.c"
 var $3=(($2+28)|0); //@line 60 "lib/lua-5.2.3/src/lcode.c"
 var $4=HEAP32[(($3)>>2)]; //@line 60 "lib/lua-5.2.3/src/lcode.c"
 $jpc=$4; //@line 60 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 62 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5+28)|0); //@line 62 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($6)>>2)]=-1; //@line 62 "lib/lua-5.2.3/src/lcode.c"
 var $7=$1; //@line 63 "lib/lua-5.2.3/src/lcode.c"
 var $8=_luaK_codeABx($7,23,0,131070); //@line 63 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($j)>>2)]=$8; //@line 63 "lib/lua-5.2.3/src/lcode.c"
 var $9=$1; //@line 64 "lib/lua-5.2.3/src/lcode.c"
 var $10=$jpc; //@line 64 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($9,$j,$10); //@line 64 "lib/lua-5.2.3/src/lcode.c"
 var $11=HEAP32[(($j)>>2)]; //@line 65 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $11; //@line 65 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_codeABx($fs,$o,$a,$bc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$fs;
 $2=$o;
 $3=$a;
 $4=$bc;
 var $5=$1; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $6=$2; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $7=$6<<0; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $8=$3; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $9=$8<<6; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $10=$7|$9; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $11=$4; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $12=$11<<14; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $13=$10|$12; //@line 240 "lib/lua-5.2.3/src/lcode.c"
 var $14=_luaK_code($5,$13); //@line 240 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $14; //@line 240 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_concat($fs,$l1,$l2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $list;
 var $next;
 $1=$fs;
 $2=$l1;
 $3=$l2;
 var $4=$3; //@line 199 "lib/lua-5.2.3/src/lcode.c"
 var $5=($4|0)==-1; //@line 199 "lib/lua-5.2.3/src/lcode.c"
 if($5){label=2;break;}else{label=3;break;} //@line 199 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 label=10;break; //@line 199 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $8=$2; //@line 200 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 200 "lib/lua-5.2.3/src/lcode.c"
 var $10=($9|0)==-1; //@line 200 "lib/lua-5.2.3/src/lcode.c"
 if($10){label=4;break;}else{label=5;break;} //@line 200 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $12=$3; //@line 201 "lib/lua-5.2.3/src/lcode.c"
 var $13=$2; //@line 201 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($13)>>2)]=$12; //@line 201 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 201 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $15=$2; //@line 203 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 203 "lib/lua-5.2.3/src/lcode.c"
 $list=$16; //@line 203 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 205 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $18=$1; //@line 205 "lib/lua-5.2.3/src/lcode.c"
 var $19=$list; //@line 205 "lib/lua-5.2.3/src/lcode.c"
 var $20=_getjump($18,$19); //@line 205 "lib/lua-5.2.3/src/lcode.c"
 $next=$20; //@line 205 "lib/lua-5.2.3/src/lcode.c"
 var $21=($20|0)!=-1; //@line 205 "lib/lua-5.2.3/src/lcode.c"
 if($21){label=7;break;}else{label=8;break;} //@line 205 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $23=$next; //@line 206 "lib/lua-5.2.3/src/lcode.c"
 $list=$23; //@line 206 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 206 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $25=$1; //@line 207 "lib/lua-5.2.3/src/lcode.c"
 var $26=$list; //@line 207 "lib/lua-5.2.3/src/lcode.c"
 var $27=$3; //@line 207 "lib/lua-5.2.3/src/lcode.c"
 _fixjump($25,$26,$27); //@line 207 "lib/lua-5.2.3/src/lcode.c"
 label=9;break;
 case 9: 
 label=10;break;
 case 10: 
 STACKTOP=sp;return; //@line 209 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_ret($fs,$first,$nret){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$first;
 $3=$nret;
 var $4=$1; //@line 70 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 70 "lib/lua-5.2.3/src/lcode.c"
 var $6=$3; //@line 70 "lib/lua-5.2.3/src/lcode.c"
 var $7=((($6)+(1))|0); //@line 70 "lib/lua-5.2.3/src/lcode.c"
 var $8=_luaK_codeABC($4,31,$5,$7,0); //@line 70 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 71 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_getlabel($fs){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$fs;
 var $2=$1; //@line 95 "lib/lua-5.2.3/src/lcode.c"
 var $3=(($2+20)|0); //@line 95 "lib/lua-5.2.3/src/lcode.c"
 var $4=HEAP32[(($3)>>2)]; //@line 95 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 95 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5+24)|0); //@line 95 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($6)>>2)]=$4; //@line 95 "lib/lua-5.2.3/src/lcode.c"
 var $7=$1; //@line 96 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+20)|0); //@line 96 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 96 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $9; //@line 96 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_patchlist($fs,$list,$target){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$list;
 $3=$target;
 var $4=$3; //@line 170 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 170 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5+20)|0); //@line 170 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 170 "lib/lua-5.2.3/src/lcode.c"
 var $8=($4|0)==($7|0); //@line 170 "lib/lua-5.2.3/src/lcode.c"
 if($8){label=2;break;}else{label=3;break;} //@line 170 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $10=$1; //@line 171 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 171 "lib/lua-5.2.3/src/lcode.c"
 _luaK_patchtohere($10,$11); //@line 171 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 171 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $13=$1; //@line 174 "lib/lua-5.2.3/src/lcode.c"
 var $14=$2; //@line 174 "lib/lua-5.2.3/src/lcode.c"
 var $15=$3; //@line 174 "lib/lua-5.2.3/src/lcode.c"
 var $16=$3; //@line 174 "lib/lua-5.2.3/src/lcode.c"
 _patchlistaux($13,$14,$15,255,$16); //@line 174 "lib/lua-5.2.3/src/lcode.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 176 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_patchtohere($fs,$list){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$fs;
 $2=$list;
 var $3=$1; //@line 193 "lib/lua-5.2.3/src/lcode.c"
 var $4=_luaK_getlabel($3); //@line 193 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 194 "lib/lua-5.2.3/src/lcode.c"
 var $6=$1; //@line 194 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6+28)|0); //@line 194 "lib/lua-5.2.3/src/lcode.c"
 var $8=$2; //@line 194 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($5,$7,$8); //@line 194 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 195 "lib/lua-5.2.3/src/lcode.c"
}


function _patchlistaux($fs,$list,$vtarget,$reg,$dtarget){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $next;
 $1=$fs;
 $2=$list;
 $3=$vtarget;
 $4=$reg;
 $5=$dtarget;
 label=2;break; //@line 152 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $7=$2; //@line 152 "lib/lua-5.2.3/src/lcode.c"
 var $8=($7|0)!=-1; //@line 152 "lib/lua-5.2.3/src/lcode.c"
 if($8){label=3;break;}else{label=7;break;} //@line 152 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $10=$1; //@line 153 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 153 "lib/lua-5.2.3/src/lcode.c"
 var $12=_getjump($10,$11); //@line 153 "lib/lua-5.2.3/src/lcode.c"
 $next=$12; //@line 153 "lib/lua-5.2.3/src/lcode.c"
 var $13=$1; //@line 154 "lib/lua-5.2.3/src/lcode.c"
 var $14=$2; //@line 154 "lib/lua-5.2.3/src/lcode.c"
 var $15=$4; //@line 154 "lib/lua-5.2.3/src/lcode.c"
 var $16=_patchtestreg($13,$14,$15); //@line 154 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)!=0; //@line 154 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=4;break;}else{label=5;break;} //@line 154 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $19=$1; //@line 155 "lib/lua-5.2.3/src/lcode.c"
 var $20=$2; //@line 155 "lib/lua-5.2.3/src/lcode.c"
 var $21=$3; //@line 155 "lib/lua-5.2.3/src/lcode.c"
 _fixjump($19,$20,$21); //@line 155 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 155 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $23=$1; //@line 157 "lib/lua-5.2.3/src/lcode.c"
 var $24=$2; //@line 157 "lib/lua-5.2.3/src/lcode.c"
 var $25=$5; //@line 157 "lib/lua-5.2.3/src/lcode.c"
 _fixjump($23,$24,$25); //@line 157 "lib/lua-5.2.3/src/lcode.c"
 label=6;break;
 case 6: 
 var $27=$next; //@line 158 "lib/lua-5.2.3/src/lcode.c"
 $2=$27; //@line 158 "lib/lua-5.2.3/src/lcode.c"
 label=2;break; //@line 159 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 STACKTOP=sp;return; //@line 160 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_patchclose($fs,$list,$level){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $next;
 $1=$fs;
 $2=$list;
 $3=$level;
 var $4=$3; //@line 180 "lib/lua-5.2.3/src/lcode.c"
 var $5=((($4)+(1))|0); //@line 180 "lib/lua-5.2.3/src/lcode.c"
 $3=$5; //@line 180 "lib/lua-5.2.3/src/lcode.c"
 label=2;break; //@line 181 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $7=$2; //@line 181 "lib/lua-5.2.3/src/lcode.c"
 var $8=($7|0)!=-1; //@line 181 "lib/lua-5.2.3/src/lcode.c"
 if($8){label=3;break;}else{label=4;break;} //@line 181 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $10=$1; //@line 182 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 182 "lib/lua-5.2.3/src/lcode.c"
 var $12=_getjump($10,$11); //@line 182 "lib/lua-5.2.3/src/lcode.c"
 $next=$12; //@line 182 "lib/lua-5.2.3/src/lcode.c"
 var $13=$2; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $14=$1; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $15=(($14)|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+12)|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $19=(($18+($13<<2))|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP32[(($19)>>2)]; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $21=$20&-16321; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $22=$3; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $23=$22<<6; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $24=$23&16320; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $25=$21|$24; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $26=$2; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $27=$1; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27)|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $29=HEAP32[(($28)>>2)]; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+12)|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $31=HEAP32[(($30)>>2)]; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $32=(($31+($26<<2))|0); //@line 186 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($32)>>2)]=$25; //@line 186 "lib/lua-5.2.3/src/lcode.c"
 var $33=$next; //@line 187 "lib/lua-5.2.3/src/lcode.c"
 $2=$33; //@line 187 "lib/lua-5.2.3/src/lcode.c"
 label=2;break; //@line 188 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 STACKTOP=sp;return; //@line 189 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getjump($fs,$pc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $offset;
 $2=$fs;
 $3=$pc;
 var $4=$3; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+12)|0); //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+($4<<2))|0); //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $11=HEAP32[(($10)>>2)]; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $12=$11>>>14; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $13=$12&262143; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $14=((($13)-(131071))|0); //@line 101 "lib/lua-5.2.3/src/lcode.c"
 $offset=$14; //@line 101 "lib/lua-5.2.3/src/lcode.c"
 var $15=$offset; //@line 102 "lib/lua-5.2.3/src/lcode.c"
 var $16=($15|0)==-1; //@line 102 "lib/lua-5.2.3/src/lcode.c"
 if($16){label=2;break;}else{label=3;break;} //@line 102 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 $1=-1; //@line 103 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 103 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $19=$3; //@line 105 "lib/lua-5.2.3/src/lcode.c"
 var $20=((($19)+(1))|0); //@line 105 "lib/lua-5.2.3/src/lcode.c"
 var $21=$offset; //@line 105 "lib/lua-5.2.3/src/lcode.c"
 var $22=((($20)+($21))|0); //@line 105 "lib/lua-5.2.3/src/lcode.c"
 $1=$22; //@line 105 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 105 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $24=$1; //@line 106 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $24; //@line 106 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _fixjump($fs,$pc,$dest){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $jmp;
 var $offset;
 $1=$fs;
 $2=$pc;
 $3=$dest;
 var $4=$2; //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+12)|0); //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+($4<<2))|0); //@line 81 "lib/lua-5.2.3/src/lcode.c"
 $jmp=$10; //@line 81 "lib/lua-5.2.3/src/lcode.c"
 var $11=$3; //@line 82 "lib/lua-5.2.3/src/lcode.c"
 var $12=$2; //@line 82 "lib/lua-5.2.3/src/lcode.c"
 var $13=((($12)+(1))|0); //@line 82 "lib/lua-5.2.3/src/lcode.c"
 var $14=((($11)-($13))|0); //@line 82 "lib/lua-5.2.3/src/lcode.c"
 $offset=$14; //@line 82 "lib/lua-5.2.3/src/lcode.c"
 var $15=$offset; //@line 84 "lib/lua-5.2.3/src/lcode.c"
 var $16=Math_abs($15); //@line 84 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)>131071; //@line 84 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=2;break;}else{label=3;break;} //@line 84 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $19=$1; //@line 85 "lib/lua-5.2.3/src/lcode.c"
 var $20=(($19+12)|0); //@line 85 "lib/lua-5.2.3/src/lcode.c"
 var $21=HEAP32[(($20)>>2)]; //@line 85 "lib/lua-5.2.3/src/lcode.c"
 _luaX_syntaxerror($21,7272); //@line 85 "lib/lua-5.2.3/src/lcode.c"
 throw "Reached an unreachable!"; //@line 85 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $23=$jmp; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $24=HEAP32[(($23)>>2)]; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $25=$24&16383; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $26=$offset; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $27=((($26)+(131071))|0); //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $28=$27<<14; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $29=$28&-16384; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $30=$25|$29; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 var $31=$jmp; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($31)>>2)]=$30; //@line 86 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 87 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_code($fs,$i){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $f;
 $1=$fs;
 $2=$i;
 var $3=$1; //@line 213 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 213 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 213 "lib/lua-5.2.3/src/lcode.c"
 $f=$5; //@line 213 "lib/lua-5.2.3/src/lcode.c"
 var $6=$1; //@line 214 "lib/lua-5.2.3/src/lcode.c"
 _dischargejpc($6); //@line 214 "lib/lua-5.2.3/src/lcode.c"
 var $7=$1; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+20)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $10=((($9)+(1))|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $11=$f; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+48)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $14=($10|0)>($13|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 if($14){label=2;break;}else{label=3;break;} //@line 216 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $16=$1; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+12)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $19=(($18+52)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP32[(($19)>>2)]; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $21=$f; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $22=(($21+12)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $23=HEAP32[(($22)>>2)]; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $24=$23; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $25=$f; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $26=(($25+48)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $27=_luaM_growaux_($20,$24,$26,4,2147483645,9096); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $28=$27; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $29=$f; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+12)|0); //@line 216 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($30)>>2)]=$28; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 label=3;break; //@line 216 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $32=$2; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $33=$1; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $34=(($33+20)|0); //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $35=HEAP32[(($34)>>2)]; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $36=$f; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36+12)|0); //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $39=(($38+($35<<2))|0); //@line 218 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($39)>>2)]=$32; //@line 218 "lib/lua-5.2.3/src/lcode.c"
 var $40=$1; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+20)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $42=HEAP32[(($41)>>2)]; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $43=((($42)+(1))|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $44=$f; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $45=(($44+52)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $46=HEAP32[(($45)>>2)]; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $47=($43|0)>($46|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 if($47){label=4;break;}else{label=5;break;} //@line 220 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $49=$1; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $50=(($49+12)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP32[(($50)>>2)]; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $52=(($51+52)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $53=HEAP32[(($52)>>2)]; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $54=$f; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $55=(($54+20)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $56=HEAP32[(($55)>>2)]; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $57=$56; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $58=$f; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $59=(($58+52)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $60=_luaM_growaux_($53,$57,$59,4,2147483645,9096); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $61=$60; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $62=$f; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 var $63=(($62+20)|0); //@line 220 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($63)>>2)]=$61; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 220 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $65=$1; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $66=(($65+12)|0); //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $67=HEAP32[(($66)>>2)]; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $68=(($67+8)|0); //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $69=HEAP32[(($68)>>2)]; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $70=$1; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $71=(($70+20)|0); //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $72=HEAP32[(($71)>>2)]; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $73=$f; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $74=(($73+20)|0); //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $75=HEAP32[(($74)>>2)]; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $76=(($75+($72<<2))|0); //@line 222 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($76)>>2)]=$69; //@line 222 "lib/lua-5.2.3/src/lcode.c"
 var $77=$1; //@line 223 "lib/lua-5.2.3/src/lcode.c"
 var $78=(($77+20)|0); //@line 223 "lib/lua-5.2.3/src/lcode.c"
 var $79=HEAP32[(($78)>>2)]; //@line 223 "lib/lua-5.2.3/src/lcode.c"
 var $80=((($79)+(1))|0); //@line 223 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($78)>>2)]=$80; //@line 223 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $79; //@line 223 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_codek($fs,$reg,$k){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $p;
 $2=$fs;
 $3=$reg;
 $4=$k;
 var $5=$4; //@line 251 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)<=262143; //@line 251 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=2;break;}else{label=3;break;} //@line 251 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $8=$2; //@line 252 "lib/lua-5.2.3/src/lcode.c"
 var $9=$3; //@line 252 "lib/lua-5.2.3/src/lcode.c"
 var $10=$4; //@line 252 "lib/lua-5.2.3/src/lcode.c"
 var $11=_luaK_codeABx($8,1,$9,$10); //@line 252 "lib/lua-5.2.3/src/lcode.c"
 $1=$11; //@line 252 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 252 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $13=$2; //@line 254 "lib/lua-5.2.3/src/lcode.c"
 var $14=$3; //@line 254 "lib/lua-5.2.3/src/lcode.c"
 var $15=_luaK_codeABx($13,2,$14,0); //@line 254 "lib/lua-5.2.3/src/lcode.c"
 $p=$15; //@line 254 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 255 "lib/lua-5.2.3/src/lcode.c"
 var $17=$4; //@line 255 "lib/lua-5.2.3/src/lcode.c"
 var $18=_codeextraarg($16,$17); //@line 255 "lib/lua-5.2.3/src/lcode.c"
 var $19=$p; //@line 256 "lib/lua-5.2.3/src/lcode.c"
 $1=$19; //@line 256 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 256 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $21=$1; //@line 258 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $21; //@line 258 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codeextraarg($fs,$a){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$fs;
 $2=$a;
 var $3=$1; //@line 246 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 246 "lib/lua-5.2.3/src/lcode.c"
 var $5=$4<<6; //@line 246 "lib/lua-5.2.3/src/lcode.c"
 var $6=39|$5; //@line 246 "lib/lua-5.2.3/src/lcode.c"
 var $7=_luaK_code($3,$6); //@line 246 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $7; //@line 246 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_checkstack($fs,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $newstack;
 $1=$fs;
 $2=$n;
 var $3=$1; //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3+48)|0); //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP8[($4)]; //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5&255); //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $7=$2; //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $8=((($6)+($7))|0); //@line 262 "lib/lua-5.2.3/src/lcode.c"
 $newstack=$8; //@line 262 "lib/lua-5.2.3/src/lcode.c"
 var $9=$newstack; //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $10=$1; //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10)|0); //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+78)|0); //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $14=HEAP8[($13)]; //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $15=($14&255); //@line 263 "lib/lua-5.2.3/src/lcode.c"
 var $16=($9|0)>($15|0); //@line 263 "lib/lua-5.2.3/src/lcode.c"
 if($16){label=2;break;}else{label=5;break;} //@line 263 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $18=$newstack; //@line 264 "lib/lua-5.2.3/src/lcode.c"
 var $19=($18|0)>=250; //@line 264 "lib/lua-5.2.3/src/lcode.c"
 if($19){label=3;break;}else{label=4;break;} //@line 264 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $21=$1; //@line 265 "lib/lua-5.2.3/src/lcode.c"
 var $22=(($21+12)|0); //@line 265 "lib/lua-5.2.3/src/lcode.c"
 var $23=HEAP32[(($22)>>2)]; //@line 265 "lib/lua-5.2.3/src/lcode.c"
 _luaX_syntaxerror($23,14800); //@line 265 "lib/lua-5.2.3/src/lcode.c"
 throw "Reached an unreachable!"; //@line 265 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $25=$newstack; //@line 266 "lib/lua-5.2.3/src/lcode.c"
 var $26=(($25)&255); //@line 266 "lib/lua-5.2.3/src/lcode.c"
 var $27=$1; //@line 266 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27)|0); //@line 266 "lib/lua-5.2.3/src/lcode.c"
 var $29=HEAP32[(($28)>>2)]; //@line 266 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+78)|0); //@line 266 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($30)]=$26; //@line 266 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 267 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 STACKTOP=sp;return; //@line 268 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_reserveregs($fs,$n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$fs;
 $2=$n;
 var $3=$1; //@line 272 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 272 "lib/lua-5.2.3/src/lcode.c"
 _luaK_checkstack($3,$4); //@line 272 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $6=$1; //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6+48)|0); //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP8[($7)]; //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $9=($8&255); //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $10=((($9)+($5))|0); //@line 273 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10)&255); //@line 273 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($7)]=$11; //@line 273 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 274 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_stringK($fs,$s){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $o=sp;
 var $io;
 var $x_;
 $1=$fs;
 $2=$s;
 $io=$o; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $3=$2; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 $x_=$3; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $4=$x_; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $5=$4; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $6=$io; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6)|0); //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $8=$7; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($8)>>2)]=$5; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $9=$x_; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $10=$9; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+4)|0); //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP8[($11)]; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $13=($12&255); //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $14=$13|64; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $15=$io; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15+8)|0); //@line 321 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($16)>>2)]=$14; //@line 321 "lib/lua-5.2.3/src/lcode.c"
 var $17=$1; //@line 322 "lib/lua-5.2.3/src/lcode.c"
 var $18=_addk($17,$o,$o); //@line 322 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $18; //@line 322 "lib/lua-5.2.3/src/lcode.c"
}


function _addk($fs,$key,$v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $L;
 var $idx;
 var $f;
 var $k;
 var $oldsize;
 var $n;
 var $u=sp;
 var $io;
 var $io2;
 var $io1;
 $2=$fs;
 $3=$key;
 $4=$v;
 var $5=$2; //@line 292 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5+12)|0); //@line 292 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 292 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+52)|0); //@line 292 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 292 "lib/lua-5.2.3/src/lcode.c"
 $L=$9; //@line 292 "lib/lua-5.2.3/src/lcode.c"
 var $10=$L; //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+4)|0); //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $14=$3; //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $15=_luaH_set($10,$13,$14); //@line 293 "lib/lua-5.2.3/src/lcode.c"
 $idx=$15; //@line 293 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 294 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16)|0); //@line 294 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 294 "lib/lua-5.2.3/src/lcode.c"
 $f=$18; //@line 294 "lib/lua-5.2.3/src/lcode.c"
 var $19=$idx; //@line 296 "lib/lua-5.2.3/src/lcode.c"
 var $20=(($19+8)|0); //@line 296 "lib/lua-5.2.3/src/lcode.c"
 var $21=HEAP32[(($20)>>2)]; //@line 296 "lib/lua-5.2.3/src/lcode.c"
 var $22=($21|0)==3; //@line 296 "lib/lua-5.2.3/src/lcode.c"
 if($22){label=2;break;}else{label=6;break;} //@line 296 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $24=$idx; //@line 297 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24)|0); //@line 297 "lib/lua-5.2.3/src/lcode.c"
 var $26=$25; //@line 297 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAPF64[(($26)>>3)]; //@line 297 "lib/lua-5.2.3/src/lcode.c"
 $n=$27; //@line 297 "lib/lua-5.2.3/src/lcode.c"
 var $28=$n; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $29=($28)+(6755399441055744); //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $30=$u; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($30)>>3)]=$29; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $31=HEAP32[((2484)>>2)]; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $32=($31|0)==33; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $33=($32&1); //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $34=$u; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $35=(($34+($33<<2))|0); //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $36=HEAP32[(($35)>>2)]; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 $k=$36; //@line 298 "lib/lua-5.2.3/src/lcode.c"
 var $37=$k; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $38=$f; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $39=(($38+8)|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $40=HEAP32[(($39)>>2)]; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+($37<<4))|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $42=(($41+8)|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $43=HEAP32[(($42)>>2)]; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $44=$4; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $45=(($44+8)|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $46=HEAP32[(($45)>>2)]; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $47=($43|0)==($46|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 if($47){label=3;break;}else{label=5;break;} //@line 299 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $49=$k; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $50=$f; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $51=(($50+8)|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $52=HEAP32[(($51)>>2)]; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $53=(($52+($49<<4))|0); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $54=$4; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $55=_luaV_equalobj_(0,$53,$54); //@line 299 "lib/lua-5.2.3/src/lcode.c"
 var $56=($55|0)!=0; //@line 299 "lib/lua-5.2.3/src/lcode.c"
 if($56){label=4;break;}else{label=5;break;} //@line 299 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $58=$k; //@line 300 "lib/lua-5.2.3/src/lcode.c"
 $1=$58; //@line 300 "lib/lua-5.2.3/src/lcode.c"
 label=16;break; //@line 300 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 label=6;break; //@line 303 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $61=$f; //@line 305 "lib/lua-5.2.3/src/lcode.c"
 var $62=(($61+44)|0); //@line 305 "lib/lua-5.2.3/src/lcode.c"
 var $63=HEAP32[(($62)>>2)]; //@line 305 "lib/lua-5.2.3/src/lcode.c"
 $oldsize=$63; //@line 305 "lib/lua-5.2.3/src/lcode.c"
 var $64=$2; //@line 306 "lib/lua-5.2.3/src/lcode.c"
 var $65=(($64+32)|0); //@line 306 "lib/lua-5.2.3/src/lcode.c"
 var $66=HEAP32[(($65)>>2)]; //@line 306 "lib/lua-5.2.3/src/lcode.c"
 $k=$66; //@line 306 "lib/lua-5.2.3/src/lcode.c"
 var $67=$idx; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 $io=$67; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $68=$k; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $69=($68|0); //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $70=$io; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $71=(($70)|0); //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $72=$71; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($72)>>3)]=$69; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $73=$io; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $74=(($73+8)|0); //@line 309 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($74)>>2)]=3; //@line 309 "lib/lua-5.2.3/src/lcode.c"
 var $75=$k; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $76=((($75)+(1))|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $77=$f; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $78=(($77+44)|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $79=HEAP32[(($78)>>2)]; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $80=($76|0)>($79|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 if($80){label=7;break;}else{label=8;break;} //@line 310 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $82=$L; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $83=$f; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $84=(($83+8)|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $85=HEAP32[(($84)>>2)]; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $86=$85; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $87=$f; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $88=(($87+44)|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $89=_luaM_growaux_($82,$86,$88,16,67108863,12088); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $90=$89; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $91=$f; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 var $92=(($91+8)|0); //@line 310 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($92)>>2)]=$90; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 310 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 label=9;break; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $95=$oldsize; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $96=$f; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $97=(($96+44)|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $98=HEAP32[(($97)>>2)]; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $99=($95|0)<($98|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 if($99){label=10;break;}else{label=11;break;} //@line 311 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 var $101=$oldsize; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $102=((($101)+(1))|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 $oldsize=$102; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $103=$f; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $104=(($103+8)|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $105=HEAP32[(($104)>>2)]; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $106=(($105+($101<<4))|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 var $107=(($106+8)|0); //@line 311 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($107)>>2)]=0; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 311 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 var $109=$4; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 $io2=$109; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $110=$k; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $111=$f; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $112=(($111+8)|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $113=HEAP32[(($112)>>2)]; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $114=(($113+($110<<4))|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 $io1=$114; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $115=$io1; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $116=(($115)|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $117=$io2; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $118=(($117)|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $119=$116; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $120=$118; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 assert(8 % 1 === 0);HEAP32[(($119)>>2)]=HEAP32[(($120)>>2)];HEAP32[((($119)+(4))>>2)]=HEAP32[((($120)+(4))>>2)]; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $121=$io2; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $122=(($121+8)|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $123=HEAP32[(($122)>>2)]; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $124=$io1; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $125=(($124+8)|0); //@line 312 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($125)>>2)]=$123; //@line 312 "lib/lua-5.2.3/src/lcode.c"
 var $126=$2; //@line 313 "lib/lua-5.2.3/src/lcode.c"
 var $127=(($126+32)|0); //@line 313 "lib/lua-5.2.3/src/lcode.c"
 var $128=HEAP32[(($127)>>2)]; //@line 313 "lib/lua-5.2.3/src/lcode.c"
 var $129=((($128)+(1))|0); //@line 313 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($127)>>2)]=$129; //@line 313 "lib/lua-5.2.3/src/lcode.c"
 var $130=$4; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $131=(($130+8)|0); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $132=HEAP32[(($131)>>2)]; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $133=$132&64; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $134=($133|0)!=0; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 if($134){label=12;break;}else{label=15;break;} //@line 314 "lib/lua-5.2.3/src/lcode.c"
 case 12: 
 var $136=$4; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $137=(($136)|0); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $138=$137; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $139=HEAP32[(($138)>>2)]; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $140=$139; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $141=(($140+5)|0); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $142=HEAP8[($141)]; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $143=($142&255); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $144=$143&3; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $145=($144|0)!=0; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 if($145){label=13;break;}else{label=15;break;} //@line 314 "lib/lua-5.2.3/src/lcode.c"
 case 13: 
 var $147=$f; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $148=$147; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $149=$148; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $150=(($149+5)|0); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $151=HEAP8[($150)]; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $152=($151&255); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $153=$152&4; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $154=($153|0)!=0; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 if($154){label=14;break;}else{label=15;break;} //@line 314 "lib/lua-5.2.3/src/lcode.c"
 case 14: 
 var $156=$L; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $157=$f; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $158=$157; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $159=$4; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $160=(($159)|0); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $161=$160; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 var $162=HEAP32[(($161)>>2)]; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 _luaC_barrier_($156,$158,$162); //@line 314 "lib/lua-5.2.3/src/lcode.c"
 label=15;break; //@line 314 "lib/lua-5.2.3/src/lcode.c"
 case 15: 
 var $164=$k; //@line 315 "lib/lua-5.2.3/src/lcode.c"
 $1=$164; //@line 315 "lib/lua-5.2.3/src/lcode.c"
 label=16;break; //@line 315 "lib/lua-5.2.3/src/lcode.c"
 case 16: 
 var $166=$1; //@line 316 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $166; //@line 316 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_numberK($fs,$r){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=sp;
 var $n;
 var $L;
 var $o=(sp)+(8);
 var $io;
 var $io1;
 var $x_;
 $1=$fs;
 HEAPF64[(($2)>>3)]=$r;
 var $3=$1; //@line 328 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3+12)|0); //@line 328 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 328 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5+52)|0); //@line 328 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 328 "lib/lua-5.2.3/src/lcode.c"
 $L=$7; //@line 328 "lib/lua-5.2.3/src/lcode.c"
 $io=$o; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAPF64[(($2)>>3)]; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $9=$io; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9)|0); //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($11)>>3)]=$8; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $12=$io; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+8)|0); //@line 330 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($13)>>2)]=3; //@line 330 "lib/lua-5.2.3/src/lcode.c"
 var $14=HEAPF64[(($2)>>3)]; //@line 331 "lib/lua-5.2.3/src/lcode.c"
 var $15=$14==0; //@line 331 "lib/lua-5.2.3/src/lcode.c"
 if($15){label=3;break;}else{label=2;break;} //@line 331 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $17=HEAPF64[(($2)>>3)]; //@line 331 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAPF64[(($2)>>3)]; //@line 331 "lib/lua-5.2.3/src/lcode.c"
 var $19=$17==$18; //@line 331 "lib/lua-5.2.3/src/lcode.c"
 if($19){label=4;break;}else{label=3;break;} //@line 331 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $21=$L; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $22=(($21+8)|0); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $23=HEAP32[(($22)>>2)]; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $24=(($23+16)|0); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($22)>>2)]=$24; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 $io1=$23; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $25=$L; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $26=$2; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $27=_luaS_newlstr($25,$26,8); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 $x_=$27; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $28=$x_; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $29=$28; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $30=$io1; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $31=(($30)|0); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $32=$31; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($32)>>2)]=$29; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $33=$x_; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $34=$33; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $35=(($34+4)|0); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $36=HEAP8[($35)]; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $37=($36&255); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $38=$37|64; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $39=$io1; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $40=(($39+8)|0); //@line 333 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($40)>>2)]=$38; //@line 333 "lib/lua-5.2.3/src/lcode.c"
 var $41=$1; //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $42=$L; //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $43=(($42+8)|0); //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $44=HEAP32[(($43)>>2)]; //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $45=((($44)-(16))|0); //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $46=_addk($41,$45,$o); //@line 334 "lib/lua-5.2.3/src/lcode.c"
 $n=$46; //@line 334 "lib/lua-5.2.3/src/lcode.c"
 var $47=$L; //@line 335 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+8)|0); //@line 335 "lib/lua-5.2.3/src/lcode.c"
 var $49=HEAP32[(($48)>>2)]; //@line 335 "lib/lua-5.2.3/src/lcode.c"
 var $50=((($49)-(16))|0); //@line 335 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($48)>>2)]=$50; //@line 335 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 336 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $52=$1; //@line 338 "lib/lua-5.2.3/src/lcode.c"
 var $53=_addk($52,$o,$o); //@line 338 "lib/lua-5.2.3/src/lcode.c"
 $n=$53; //@line 338 "lib/lua-5.2.3/src/lcode.c"
 label=5;break;
 case 5: 
 var $55=$n; //@line 339 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $55; //@line 339 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_setreturns($fs,$e,$nresults){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$e;
 $3=$nresults;
 var $4=$2; //@line 360 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4)|0); //@line 360 "lib/lua-5.2.3/src/lcode.c"
 var $6=HEAP32[(($5)>>2)]; //@line 360 "lib/lua-5.2.3/src/lcode.c"
 var $7=($6|0)==12; //@line 360 "lib/lua-5.2.3/src/lcode.c"
 if($7){label=2;break;}else{label=3;break;} //@line 360 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $9=$2; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+8)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $13=$1; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $14=(($13)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $15=HEAP32[(($14)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15+12)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $17=HEAP32[(($16)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $18=(($17+($12<<2))|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $19=HEAP32[(($18)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $20=$19&-8372225; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $21=$3; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $22=((($21)+(1))|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $23=$22<<14; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $24=$23&8372224; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $25=$20|$24; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $26=$2; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $27=(($26+8)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $28=$27; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $29=HEAP32[(($28)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $30=$1; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $31=(($30)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $32=HEAP32[(($31)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $33=(($32+12)|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $34=HEAP32[(($33)>>2)]; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 var $35=(($34+($29<<2))|0); //@line 361 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($35)>>2)]=$25; //@line 361 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 362 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $37=$2; //@line 363 "lib/lua-5.2.3/src/lcode.c"
 var $38=(($37)|0); //@line 363 "lib/lua-5.2.3/src/lcode.c"
 var $39=HEAP32[(($38)>>2)]; //@line 363 "lib/lua-5.2.3/src/lcode.c"
 var $40=($39|0)==13; //@line 363 "lib/lua-5.2.3/src/lcode.c"
 if($40){label=4;break;}else{label=5;break;} //@line 363 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $42=$2; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $43=(($42+8)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $44=$43; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $45=HEAP32[(($44)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $46=$1; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $47=(($46)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $48=HEAP32[(($47)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $49=(($48+12)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $50=HEAP32[(($49)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $51=(($50+($45<<2))|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $52=HEAP32[(($51)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $53=$52&8388607; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $54=$3; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $55=((($54)+(1))|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $56=$55<<23; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $57=$56&-8388608; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $58=$53|$57; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $59=$2; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $60=(($59+8)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $61=$60; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $62=HEAP32[(($61)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $63=$1; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $64=(($63)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $65=HEAP32[(($64)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $66=(($65+12)|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $67=HEAP32[(($66)>>2)]; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $68=(($67+($62<<2))|0); //@line 364 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($68)>>2)]=$58; //@line 364 "lib/lua-5.2.3/src/lcode.c"
 var $69=$2; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $70=(($69+8)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $71=$70; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $72=HEAP32[(($71)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $73=$1; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $74=(($73)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $75=HEAP32[(($74)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $76=(($75+12)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $77=HEAP32[(($76)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $78=(($77+($72<<2))|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $79=HEAP32[(($78)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $80=$79&-16321; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $81=$1; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $82=(($81+48)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $83=HEAP8[($82)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $84=($83&255); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $85=$84<<6; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $86=$85&16320; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $87=$80|$86; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $88=$2; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $89=(($88+8)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $90=$89; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $91=HEAP32[(($90)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $92=$1; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $93=(($92)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $94=HEAP32[(($93)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $95=(($94+12)|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $96=HEAP32[(($95)>>2)]; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $97=(($96+($91<<2))|0); //@line 365 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($97)>>2)]=$87; //@line 365 "lib/lua-5.2.3/src/lcode.c"
 var $98=$1; //@line 366 "lib/lua-5.2.3/src/lcode.c"
 _luaK_reserveregs($98,1); //@line 366 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 367 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 label=6;break;
 case 6: 
 STACKTOP=sp;return; //@line 368 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_setoneret($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 372 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 372 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 372 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)==12; //@line 372 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=2;break;}else{label=3;break;} //@line 372 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $8=$2; //@line 373 "lib/lua-5.2.3/src/lcode.c"
 var $9=(($8)|0); //@line 373 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($9)>>2)]=6; //@line 373 "lib/lua-5.2.3/src/lcode.c"
 var $10=$2; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+8)|0); //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $12=$11; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $14=$1; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $15=(($14)|0); //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+12)|0); //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $19=(($18+($13<<2))|0); //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP32[(($19)>>2)]; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $21=$20>>>6; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $22=$21&255; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $23=$2; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $24=(($23+8)|0); //@line 374 "lib/lua-5.2.3/src/lcode.c"
 var $25=$24; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($25)>>2)]=$22; //@line 374 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 375 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $27=$2; //@line 376 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27)|0); //@line 376 "lib/lua-5.2.3/src/lcode.c"
 var $29=HEAP32[(($28)>>2)]; //@line 376 "lib/lua-5.2.3/src/lcode.c"
 var $30=($29|0)==13; //@line 376 "lib/lua-5.2.3/src/lcode.c"
 if($30){label=4;break;}else{label=5;break;} //@line 376 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $32=$2; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $33=(($32+8)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $34=$33; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $35=HEAP32[(($34)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $36=$1; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $39=(($38+12)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $40=HEAP32[(($39)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+($35<<2))|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $42=HEAP32[(($41)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $43=$42&8388607; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $44=$43|16777216; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $45=$2; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $46=(($45+8)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $47=$46; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $48=HEAP32[(($47)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $49=$1; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $50=(($49)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP32[(($50)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $52=(($51+12)|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $53=HEAP32[(($52)>>2)]; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $54=(($53+($48<<2))|0); //@line 377 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($54)>>2)]=$44; //@line 377 "lib/lua-5.2.3/src/lcode.c"
 var $55=$2; //@line 378 "lib/lua-5.2.3/src/lcode.c"
 var $56=(($55)|0); //@line 378 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($56)>>2)]=11; //@line 378 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 379 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 label=6;break;
 case 6: 
 STACKTOP=sp;return; //@line 380 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_dischargevars($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $op;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 384 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 384 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 384 "lib/lua-5.2.3/src/lcode.c"
 switch(($5|0)){case 7:{ label=2;break;}case 8:{ label=3;break;}case 9:{ label=4;break;}case 13:case 12:{ label=7;break;}default:{label=8;break;}}break;
 case 2: 
 var $7=$2; //@line 386 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7)|0); //@line 386 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($8)>>2)]=6; //@line 386 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 387 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $10=$1; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+8)|0); //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $13=$12; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $14=HEAP32[(($13)>>2)]; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $15=_luaK_codeABC($10,5,0,$14,0); //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+8)|0); //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $18=$17; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($18)>>2)]=$15; //@line 390 "lib/lua-5.2.3/src/lcode.c"
 var $19=$2; //@line 391 "lib/lua-5.2.3/src/lcode.c"
 var $20=(($19)|0); //@line 391 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($20)>>2)]=11; //@line 391 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 392 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 $op=6; //@line 395 "lib/lua-5.2.3/src/lcode.c"
 var $22=$1; //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $23=$2; //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $24=(($23+8)|0); //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $25=$24; //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $26=(($25)|0); //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAP16[(($26)>>1)]; //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27<<16)>>16); //@line 396 "lib/lua-5.2.3/src/lcode.c"
 _freereg($22,$28); //@line 396 "lib/lua-5.2.3/src/lcode.c"
 var $29=$2; //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+8)|0); //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $31=$30; //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $32=(($31+3)|0); //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $33=HEAP8[($32)]; //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $34=($33&255); //@line 397 "lib/lua-5.2.3/src/lcode.c"
 var $35=($34|0)==7; //@line 397 "lib/lua-5.2.3/src/lcode.c"
 if($35){label=5;break;}else{label=6;break;} //@line 397 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $37=$1; //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $38=$2; //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $39=(($38+8)|0); //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $40=$39; //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+2)|0); //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $42=HEAP8[($41)]; //@line 398 "lib/lua-5.2.3/src/lcode.c"
 var $43=($42&255); //@line 398 "lib/lua-5.2.3/src/lcode.c"
 _freereg($37,$43); //@line 398 "lib/lua-5.2.3/src/lcode.c"
 $op=7; //@line 399 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 400 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $45=$1; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $46=$op; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $47=$2; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+8)|0); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $49=$48; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $50=(($49+2)|0); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP8[($50)]; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $52=($51&255); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $53=$2; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $54=(($53+8)|0); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $55=$54; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $56=(($55)|0); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $57=HEAP16[(($56)>>1)]; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $58=(($57<<16)>>16); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $59=_luaK_codeABC($45,$46,0,$52,$58); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $60=$2; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $61=(($60+8)|0); //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $62=$61; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($62)>>2)]=$59; //@line 401 "lib/lua-5.2.3/src/lcode.c"
 var $63=$2; //@line 402 "lib/lua-5.2.3/src/lcode.c"
 var $64=(($63)|0); //@line 402 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($64)>>2)]=11; //@line 402 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 403 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $66=$1; //@line 407 "lib/lua-5.2.3/src/lcode.c"
 var $67=$2; //@line 407 "lib/lua-5.2.3/src/lcode.c"
 _luaK_setoneret($66,$67); //@line 407 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 408 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 label=9;break; //@line 410 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 STACKTOP=sp;return; //@line 412 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _freereg($fs,$reg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$reg;
 var $3=$2; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $4=$3&256; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $5=($4|0)!=0; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 if($5){label=4;break;}else{label=2;break;} //@line 278 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $7=$2; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $8=$1; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $9=(($8+46)|0); //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP8[($9)]; //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $11=($10&255); //@line 278 "lib/lua-5.2.3/src/lcode.c"
 var $12=($7|0)>=($11|0); //@line 278 "lib/lua-5.2.3/src/lcode.c"
 if($12){label=3;break;}else{label=4;break;} //@line 278 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $14=$1; //@line 279 "lib/lua-5.2.3/src/lcode.c"
 var $15=(($14+48)|0); //@line 279 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP8[($15)]; //@line 279 "lib/lua-5.2.3/src/lcode.c"
 var $17=((($16)-(1))&255); //@line 279 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($15)]=$17; //@line 279 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 281 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 STACKTOP=sp;return; //@line 282 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_exp2nextreg($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$1; //@line 493 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 493 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($3,$4); //@line 493 "lib/lua-5.2.3/src/lcode.c"
 var $5=$1; //@line 494 "lib/lua-5.2.3/src/lcode.c"
 var $6=$2; //@line 494 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($5,$6); //@line 494 "lib/lua-5.2.3/src/lcode.c"
 var $7=$1; //@line 495 "lib/lua-5.2.3/src/lcode.c"
 _luaK_reserveregs($7,1); //@line 495 "lib/lua-5.2.3/src/lcode.c"
 var $8=$1; //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $9=$2; //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $10=$1; //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+48)|0); //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP8[($11)]; //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $13=($12&255); //@line 496 "lib/lua-5.2.3/src/lcode.c"
 var $14=((($13)-(1))|0); //@line 496 "lib/lua-5.2.3/src/lcode.c"
 _exp2reg($8,$9,$14); //@line 496 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 497 "lib/lua-5.2.3/src/lcode.c"
}


function _freeexp($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 286 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 286 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 286 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)==6; //@line 286 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=2;break;}else{label=3;break;} //@line 286 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $8=$1; //@line 287 "lib/lua-5.2.3/src/lcode.c"
 var $9=$2; //@line 287 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+8)|0); //@line 287 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10; //@line 287 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 287 "lib/lua-5.2.3/src/lcode.c"
 _freereg($8,$12); //@line 287 "lib/lua-5.2.3/src/lcode.c"
 label=3;break; //@line 287 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 STACKTOP=sp;return; //@line 288 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _exp2reg($fs,$e,$reg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $final;
 var $p_f;
 var $p_t;
 var $fj;
 $1=$fs;
 $2=$e;
 $3=$reg;
 var $4=$1; //@line 469 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 469 "lib/lua-5.2.3/src/lcode.c"
 var $6=$3; //@line 469 "lib/lua-5.2.3/src/lcode.c"
 _discharge2reg($4,$5,$6); //@line 469 "lib/lua-5.2.3/src/lcode.c"
 var $7=$2; //@line 470 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7)|0); //@line 470 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 470 "lib/lua-5.2.3/src/lcode.c"
 var $10=($9|0)==10; //@line 470 "lib/lua-5.2.3/src/lcode.c"
 if($10){label=2;break;}else{label=3;break;} //@line 470 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $12=$1; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $13=$2; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $14=(($13+16)|0); //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $15=$2; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15+8)|0); //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $17=$16; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($12,$14,$18); //@line 471 "lib/lua-5.2.3/src/lcode.c"
 label=3;break; //@line 471 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $20=$2; //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $21=(($20+16)|0); //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $22=HEAP32[(($21)>>2)]; //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $23=$2; //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $24=(($23+20)|0); //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $25=HEAP32[(($24)>>2)]; //@line 472 "lib/lua-5.2.3/src/lcode.c"
 var $26=($22|0)!=($25|0); //@line 472 "lib/lua-5.2.3/src/lcode.c"
 if($26){label=4;break;}else{label=11;break;} //@line 472 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 $p_f=-1; //@line 474 "lib/lua-5.2.3/src/lcode.c"
 $p_t=-1; //@line 475 "lib/lua-5.2.3/src/lcode.c"
 var $28=$1; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $29=$2; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+16)|0); //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $31=HEAP32[(($30)>>2)]; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $32=_need_value($28,$31); //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $33=($32|0)!=0; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 if($33){label=6;break;}else{label=5;break;} //@line 476 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $35=$1; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $36=$2; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36+20)|0); //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $39=_need_value($35,$38); //@line 476 "lib/lua-5.2.3/src/lcode.c"
 var $40=($39|0)!=0; //@line 476 "lib/lua-5.2.3/src/lcode.c"
 if($40){label=6;break;}else{label=10;break;} //@line 476 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $42=$2; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $43=(($42)|0); //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $44=HEAP32[(($43)>>2)]; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $45=($44|0)==10; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 if($45){label=7;break;}else{label=8;break;} //@line 477 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $51=-1;label=9;break; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $48=$1; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $49=_luaK_jump($48); //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $51=$49;label=9;break; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $51; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 $fj=$51; //@line 477 "lib/lua-5.2.3/src/lcode.c"
 var $52=$1; //@line 478 "lib/lua-5.2.3/src/lcode.c"
 var $53=$3; //@line 478 "lib/lua-5.2.3/src/lcode.c"
 var $54=_code_label($52,$53,0,1); //@line 478 "lib/lua-5.2.3/src/lcode.c"
 $p_f=$54; //@line 478 "lib/lua-5.2.3/src/lcode.c"
 var $55=$1; //@line 479 "lib/lua-5.2.3/src/lcode.c"
 var $56=$3; //@line 479 "lib/lua-5.2.3/src/lcode.c"
 var $57=_code_label($55,$56,1,0); //@line 479 "lib/lua-5.2.3/src/lcode.c"
 $p_t=$57; //@line 479 "lib/lua-5.2.3/src/lcode.c"
 var $58=$1; //@line 480 "lib/lua-5.2.3/src/lcode.c"
 var $59=$fj; //@line 480 "lib/lua-5.2.3/src/lcode.c"
 _luaK_patchtohere($58,$59); //@line 480 "lib/lua-5.2.3/src/lcode.c"
 label=10;break; //@line 481 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 var $61=$1; //@line 482 "lib/lua-5.2.3/src/lcode.c"
 var $62=_luaK_getlabel($61); //@line 482 "lib/lua-5.2.3/src/lcode.c"
 $final=$62; //@line 482 "lib/lua-5.2.3/src/lcode.c"
 var $63=$1; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $64=$2; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $65=(($64+20)|0); //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $66=HEAP32[(($65)>>2)]; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $67=$final; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $68=$3; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $69=$p_f; //@line 483 "lib/lua-5.2.3/src/lcode.c"
 _patchlistaux($63,$66,$67,$68,$69); //@line 483 "lib/lua-5.2.3/src/lcode.c"
 var $70=$1; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $71=$2; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $72=(($71+16)|0); //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $73=HEAP32[(($72)>>2)]; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $74=$final; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $75=$3; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 var $76=$p_t; //@line 484 "lib/lua-5.2.3/src/lcode.c"
 _patchlistaux($70,$73,$74,$75,$76); //@line 484 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 485 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 var $78=$2; //@line 486 "lib/lua-5.2.3/src/lcode.c"
 var $79=(($78+16)|0); //@line 486 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($79)>>2)]=-1; //@line 486 "lib/lua-5.2.3/src/lcode.c"
 var $80=$2; //@line 486 "lib/lua-5.2.3/src/lcode.c"
 var $81=(($80+20)|0); //@line 486 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($81)>>2)]=-1; //@line 486 "lib/lua-5.2.3/src/lcode.c"
 var $82=$3; //@line 487 "lib/lua-5.2.3/src/lcode.c"
 var $83=$2; //@line 487 "lib/lua-5.2.3/src/lcode.c"
 var $84=(($83+8)|0); //@line 487 "lib/lua-5.2.3/src/lcode.c"
 var $85=$84; //@line 487 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($85)>>2)]=$82; //@line 487 "lib/lua-5.2.3/src/lcode.c"
 var $86=$2; //@line 488 "lib/lua-5.2.3/src/lcode.c"
 var $87=(($86)|0); //@line 488 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($87)>>2)]=6; //@line 488 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 489 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_exp2anyreg($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$fs;
 $3=$e;
 var $4=$2; //@line 501 "lib/lua-5.2.3/src/lcode.c"
 var $5=$3; //@line 501 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($4,$5); //@line 501 "lib/lua-5.2.3/src/lcode.c"
 var $6=$3; //@line 502 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6)|0); //@line 502 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP32[(($7)>>2)]; //@line 502 "lib/lua-5.2.3/src/lcode.c"
 var $9=($8|0)==6; //@line 502 "lib/lua-5.2.3/src/lcode.c"
 if($9){label=2;break;}else{label=7;break;} //@line 502 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $11=$3; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+16)|0); //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $14=$3; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $15=(($14+20)|0); //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $17=($13|0)!=($16|0); //@line 503 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=4;break;}else{label=3;break;} //@line 503 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $19=$3; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $20=(($19+8)|0); //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $21=$20; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 var $22=HEAP32[(($21)>>2)]; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 $1=$22; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 503 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $24=$3; //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+8)|0); //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $26=$25; //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAP32[(($26)>>2)]; //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $28=$2; //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $29=(($28+46)|0); //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $30=HEAP8[($29)]; //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $31=($30&255); //@line 504 "lib/lua-5.2.3/src/lcode.c"
 var $32=($27|0)>=($31|0); //@line 504 "lib/lua-5.2.3/src/lcode.c"
 if($32){label=5;break;}else{label=6;break;} //@line 504 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $34=$2; //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $35=$3; //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $36=$3; //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36+8)|0); //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $38=$37; //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $39=HEAP32[(($38)>>2)]; //@line 505 "lib/lua-5.2.3/src/lcode.c"
 _exp2reg($34,$35,$39); //@line 505 "lib/lua-5.2.3/src/lcode.c"
 var $40=$3; //@line 506 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+8)|0); //@line 506 "lib/lua-5.2.3/src/lcode.c"
 var $42=$41; //@line 506 "lib/lua-5.2.3/src/lcode.c"
 var $43=HEAP32[(($42)>>2)]; //@line 506 "lib/lua-5.2.3/src/lcode.c"
 $1=$43; //@line 506 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 506 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 label=7;break; //@line 508 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $46=$2; //@line 509 "lib/lua-5.2.3/src/lcode.c"
 var $47=$3; //@line 509 "lib/lua-5.2.3/src/lcode.c"
 _luaK_exp2nextreg($46,$47); //@line 509 "lib/lua-5.2.3/src/lcode.c"
 var $48=$3; //@line 510 "lib/lua-5.2.3/src/lcode.c"
 var $49=(($48+8)|0); //@line 510 "lib/lua-5.2.3/src/lcode.c"
 var $50=$49; //@line 510 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP32[(($50)>>2)]; //@line 510 "lib/lua-5.2.3/src/lcode.c"
 $1=$51; //@line 510 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 510 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $53=$1; //@line 511 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $53; //@line 511 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_exp2anyregup($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)!=8; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=3;break;}else{label=2;break;} //@line 515 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $8=$2; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $9=(($8+16)|0); //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP32[(($9)>>2)]; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+20)|0); //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 515 "lib/lua-5.2.3/src/lcode.c"
 var $14=($10|0)!=($13|0); //@line 515 "lib/lua-5.2.3/src/lcode.c"
 if($14){label=3;break;}else{label=4;break;} //@line 515 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $16=$1; //@line 516 "lib/lua-5.2.3/src/lcode.c"
 var $17=$2; //@line 516 "lib/lua-5.2.3/src/lcode.c"
 var $18=_luaK_exp2anyreg($16,$17); //@line 516 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 516 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 STACKTOP=sp;return; //@line 517 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_exp2val($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3+16)|0); //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $6=$2; //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6+20)|0); //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP32[(($7)>>2)]; //@line 521 "lib/lua-5.2.3/src/lcode.c"
 var $9=($5|0)!=($8|0); //@line 521 "lib/lua-5.2.3/src/lcode.c"
 if($9){label=2;break;}else{label=3;break;} //@line 521 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $11=$1; //@line 522 "lib/lua-5.2.3/src/lcode.c"
 var $12=$2; //@line 522 "lib/lua-5.2.3/src/lcode.c"
 var $13=_luaK_exp2anyreg($11,$12); //@line 522 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 522 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $15=$1; //@line 524 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 524 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($15,$16); //@line 524 "lib/lua-5.2.3/src/lcode.c"
 label=4;break;
 case 4: 
 STACKTOP=sp;return; //@line 525 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_exp2RK($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $2=$fs;
 $3=$e;
 var $4=$2; //@line 529 "lib/lua-5.2.3/src/lcode.c"
 var $5=$3; //@line 529 "lib/lua-5.2.3/src/lcode.c"
 _luaK_exp2val($4,$5); //@line 529 "lib/lua-5.2.3/src/lcode.c"
 var $6=$3; //@line 530 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6)|0); //@line 530 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP32[(($7)>>2)]; //@line 530 "lib/lua-5.2.3/src/lcode.c"
 switch(($8|0)){case 2:case 3:case 1:{ label=2;break;}case 5:{ label=8;break;}case 4:{ label=9;break;}default:{label=12;break;}}break;
 case 2: 
 var $10=$2; //@line 534 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+32)|0); //@line 534 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 534 "lib/lua-5.2.3/src/lcode.c"
 var $13=($12|0)<=255; //@line 534 "lib/lua-5.2.3/src/lcode.c"
 if($13){label=3;break;}else{label=7;break;} //@line 534 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $15=$3; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15)|0); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $17=HEAP32[(($16)>>2)]; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $18=($17|0)==1; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 if($18){label=4;break;}else{label=5;break;} //@line 535 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $20=$2; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $21=_nilK($20); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $31=$21;label=6;break; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $23=$2; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $24=$3; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24)|0); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $26=HEAP32[(($25)>>2)]; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $27=($26|0)==2; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $28=($27&1); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $29=_boolK($23,$28); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $31=$29;label=6;break; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $31; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $32=$3; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $33=(($32+8)|0); //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $34=$33; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($34)>>2)]=$31; //@line 535 "lib/lua-5.2.3/src/lcode.c"
 var $35=$3; //@line 536 "lib/lua-5.2.3/src/lcode.c"
 var $36=(($35)|0); //@line 536 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($36)>>2)]=4; //@line 536 "lib/lua-5.2.3/src/lcode.c"
 var $37=$3; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 var $38=(($37+8)|0); //@line 537 "lib/lua-5.2.3/src/lcode.c"
 var $39=$38; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 var $40=HEAP32[(($39)>>2)]; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 var $41=$40|256; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 $1=$41; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 label=14;break; //@line 537 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 label=13;break; //@line 539 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $44=$2; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $45=$3; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $46=(($45+8)|0); //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $47=$46; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $48=HEAPF64[(($47)>>3)]; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $49=_luaK_numberK($44,$48); //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $50=$3; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $51=(($50+8)|0); //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $52=$51; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($52)>>2)]=$49; //@line 542 "lib/lua-5.2.3/src/lcode.c"
 var $53=$3; //@line 543 "lib/lua-5.2.3/src/lcode.c"
 var $54=(($53)|0); //@line 543 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($54)>>2)]=4; //@line 543 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 545 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $56=$3; //@line 547 "lib/lua-5.2.3/src/lcode.c"
 var $57=(($56+8)|0); //@line 547 "lib/lua-5.2.3/src/lcode.c"
 var $58=$57; //@line 547 "lib/lua-5.2.3/src/lcode.c"
 var $59=HEAP32[(($58)>>2)]; //@line 547 "lib/lua-5.2.3/src/lcode.c"
 var $60=($59|0)<=255; //@line 547 "lib/lua-5.2.3/src/lcode.c"
 if($60){label=10;break;}else{label=11;break;} //@line 547 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 var $62=$3; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 var $63=(($62+8)|0); //@line 548 "lib/lua-5.2.3/src/lcode.c"
 var $64=$63; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 var $65=HEAP32[(($64)>>2)]; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 var $66=$65|256; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 $1=$66; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 label=14;break; //@line 548 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 label=13;break; //@line 549 "lib/lua-5.2.3/src/lcode.c"
 case 12: 
 label=13;break; //@line 551 "lib/lua-5.2.3/src/lcode.c"
 case 13: 
 var $70=$2; //@line 554 "lib/lua-5.2.3/src/lcode.c"
 var $71=$3; //@line 554 "lib/lua-5.2.3/src/lcode.c"
 var $72=_luaK_exp2anyreg($70,$71); //@line 554 "lib/lua-5.2.3/src/lcode.c"
 $1=$72; //@line 554 "lib/lua-5.2.3/src/lcode.c"
 label=14;break; //@line 554 "lib/lua-5.2.3/src/lcode.c"
 case 14: 
 var $74=$1; //@line 555 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $74; //@line 555 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _nilK($fs){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $k=sp;
 var $v=(sp)+(16);
 var $io;
 $1=$fs;
 var $2=(($v+8)|0); //@line 352 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($2)>>2)]=0; //@line 352 "lib/lua-5.2.3/src/lcode.c"
 $io=$k; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $3=$1; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3+4)|0); //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $6=$5; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $7=$io; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7)|0); //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $9=$8; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($9)>>2)]=$6; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $10=$io; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+8)|0); //@line 354 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($11)>>2)]=69; //@line 354 "lib/lua-5.2.3/src/lcode.c"
 var $12=$1; //@line 355 "lib/lua-5.2.3/src/lcode.c"
 var $13=_addk($12,$k,$v); //@line 355 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $13; //@line 355 "lib/lua-5.2.3/src/lcode.c"
}


function _boolK($fs,$b){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $o=sp;
 var $io;
 $1=$fs;
 $2=$b;
 $io=$o; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $3=$2; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $4=$io; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4)|0); //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $6=$5; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($6)>>2)]=$3; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $7=$io; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+8)|0); //@line 345 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($8)>>2)]=1; //@line 345 "lib/lua-5.2.3/src/lcode.c"
 var $9=$1; //@line 346 "lib/lua-5.2.3/src/lcode.c"
 var $10=_addk($9,$o,$o); //@line 346 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $10; //@line 346 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_storevar($fs,$var,$ex){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $e;
 var $op;
 var $e1;
 $1=$fs;
 $2=$var;
 $3=$ex;
 var $4=$2; //@line 559 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4)|0); //@line 559 "lib/lua-5.2.3/src/lcode.c"
 var $6=HEAP32[(($5)>>2)]; //@line 559 "lib/lua-5.2.3/src/lcode.c"
 if(($6|0)==7){ label=2;break;}else if(($6|0)==8){ label=3;break;}else if(($6|0)==9){ label=4;break;}else{label=5;break;}
 case 2: 
 var $8=$1; //@line 561 "lib/lua-5.2.3/src/lcode.c"
 var $9=$3; //@line 561 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($8,$9); //@line 561 "lib/lua-5.2.3/src/lcode.c"
 var $10=$1; //@line 562 "lib/lua-5.2.3/src/lcode.c"
 var $11=$3; //@line 562 "lib/lua-5.2.3/src/lcode.c"
 var $12=$2; //@line 562 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+8)|0); //@line 562 "lib/lua-5.2.3/src/lcode.c"
 var $14=$13; //@line 562 "lib/lua-5.2.3/src/lcode.c"
 var $15=HEAP32[(($14)>>2)]; //@line 562 "lib/lua-5.2.3/src/lcode.c"
 _exp2reg($10,$11,$15); //@line 562 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 563 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $17=$1; //@line 566 "lib/lua-5.2.3/src/lcode.c"
 var $18=$3; //@line 566 "lib/lua-5.2.3/src/lcode.c"
 var $19=_luaK_exp2anyreg($17,$18); //@line 566 "lib/lua-5.2.3/src/lcode.c"
 $e=$19; //@line 566 "lib/lua-5.2.3/src/lcode.c"
 var $20=$1; //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $21=$e; //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $22=$2; //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $23=(($22+8)|0); //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $24=$23; //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $25=HEAP32[(($24)>>2)]; //@line 567 "lib/lua-5.2.3/src/lcode.c"
 var $26=_luaK_codeABC($20,9,$21,$25,0); //@line 567 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 568 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $28=$2; //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $29=(($28+8)|0); //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $30=$29; //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $31=(($30+3)|0); //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $32=HEAP8[($31)]; //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $33=($32&255); //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $34=($33|0)==7; //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $35=($34?10:8); //@line 571 "lib/lua-5.2.3/src/lcode.c"
 $op=$35; //@line 571 "lib/lua-5.2.3/src/lcode.c"
 var $36=$1; //@line 572 "lib/lua-5.2.3/src/lcode.c"
 var $37=$3; //@line 572 "lib/lua-5.2.3/src/lcode.c"
 var $38=_luaK_exp2RK($36,$37); //@line 572 "lib/lua-5.2.3/src/lcode.c"
 $e1=$38; //@line 572 "lib/lua-5.2.3/src/lcode.c"
 var $39=$1; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $40=$op; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $41=$2; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $42=(($41+8)|0); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $43=$42; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $44=(($43+2)|0); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $45=HEAP8[($44)]; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $46=($45&255); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $47=$2; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+8)|0); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $49=$48; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $50=(($49)|0); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP16[(($50)>>1)]; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $52=(($51<<16)>>16); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $53=$e1; //@line 573 "lib/lua-5.2.3/src/lcode.c"
 var $54=_luaK_codeABC($39,$40,$46,$52,$53); //@line 573 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 574 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 label=6;break; //@line 578 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $57=$1; //@line 581 "lib/lua-5.2.3/src/lcode.c"
 var $58=$3; //@line 581 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($57,$58); //@line 581 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 582 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 STACKTOP=sp;return; //@line 582 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_self($fs,$e,$key){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $ereg;
 $1=$fs;
 $2=$e;
 $3=$key;
 var $4=$1; //@line 587 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 587 "lib/lua-5.2.3/src/lcode.c"
 var $6=_luaK_exp2anyreg($4,$5); //@line 587 "lib/lua-5.2.3/src/lcode.c"
 var $7=$2; //@line 588 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+8)|0); //@line 588 "lib/lua-5.2.3/src/lcode.c"
 var $9=$8; //@line 588 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP32[(($9)>>2)]; //@line 588 "lib/lua-5.2.3/src/lcode.c"
 $ereg=$10; //@line 588 "lib/lua-5.2.3/src/lcode.c"
 var $11=$1; //@line 589 "lib/lua-5.2.3/src/lcode.c"
 var $12=$2; //@line 589 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($11,$12); //@line 589 "lib/lua-5.2.3/src/lcode.c"
 var $13=$1; //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $14=(($13+48)|0); //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $15=HEAP8[($14)]; //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $16=($15&255); //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $17=$2; //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $18=(($17+8)|0); //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $19=$18; //@line 590 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($19)>>2)]=$16; //@line 590 "lib/lua-5.2.3/src/lcode.c"
 var $20=$2; //@line 591 "lib/lua-5.2.3/src/lcode.c"
 var $21=(($20)|0); //@line 591 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($21)>>2)]=6; //@line 591 "lib/lua-5.2.3/src/lcode.c"
 var $22=$1; //@line 592 "lib/lua-5.2.3/src/lcode.c"
 _luaK_reserveregs($22,2); //@line 592 "lib/lua-5.2.3/src/lcode.c"
 var $23=$1; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $24=$2; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+8)|0); //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $26=$25; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAP32[(($26)>>2)]; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $28=$ereg; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $29=$1; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $30=$3; //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $31=_luaK_exp2RK($29,$30); //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $32=_luaK_codeABC($23,12,$27,$28,$31); //@line 593 "lib/lua-5.2.3/src/lcode.c"
 var $33=$1; //@line 594 "lib/lua-5.2.3/src/lcode.c"
 var $34=$3; //@line 594 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($33,$34); //@line 594 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 595 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_goiftrue($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $pc;
 $1=$fs;
 $2=$e;
 var $3=$1; //@line 623 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 623 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($3,$4); //@line 623 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 624 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 624 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 624 "lib/lua-5.2.3/src/lcode.c"
 if(($7|0)==10){ label=2;break;}else if(($7|0)==4|($7|0)==5|($7|0)==2){ label=3;break;}else{label=4;break;}
 case 2: 
 var $9=$1; //@line 626 "lib/lua-5.2.3/src/lcode.c"
 var $10=$2; //@line 626 "lib/lua-5.2.3/src/lcode.c"
 _invertjump($9,$10); //@line 626 "lib/lua-5.2.3/src/lcode.c"
 var $11=$2; //@line 627 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+8)|0); //@line 627 "lib/lua-5.2.3/src/lcode.c"
 var $13=$12; //@line 627 "lib/lua-5.2.3/src/lcode.c"
 var $14=HEAP32[(($13)>>2)]; //@line 627 "lib/lua-5.2.3/src/lcode.c"
 $pc=$14; //@line 627 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 628 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 $pc=-1; //@line 631 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 632 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $17=$1; //@line 635 "lib/lua-5.2.3/src/lcode.c"
 var $18=$2; //@line 635 "lib/lua-5.2.3/src/lcode.c"
 var $19=_jumponcond($17,$18,0); //@line 635 "lib/lua-5.2.3/src/lcode.c"
 $pc=$19; //@line 635 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 636 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $21=$1; //@line 639 "lib/lua-5.2.3/src/lcode.c"
 var $22=$2; //@line 639 "lib/lua-5.2.3/src/lcode.c"
 var $23=(($22+20)|0); //@line 639 "lib/lua-5.2.3/src/lcode.c"
 var $24=$pc; //@line 639 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($21,$23,$24); //@line 639 "lib/lua-5.2.3/src/lcode.c"
 var $25=$1; //@line 640 "lib/lua-5.2.3/src/lcode.c"
 var $26=$2; //@line 640 "lib/lua-5.2.3/src/lcode.c"
 var $27=(($26+16)|0); //@line 640 "lib/lua-5.2.3/src/lcode.c"
 var $28=HEAP32[(($27)>>2)]; //@line 640 "lib/lua-5.2.3/src/lcode.c"
 _luaK_patchtohere($25,$28); //@line 640 "lib/lua-5.2.3/src/lcode.c"
 var $29=$2; //@line 641 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+16)|0); //@line 641 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($30)>>2)]=-1; //@line 641 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 642 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _invertjump($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $pc;
 $1=$fs;
 $2=$e;
 var $3=$1; //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4+8)|0); //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $6=$5; //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $8=_getjumpcontrol($3,$7); //@line 599 "lib/lua-5.2.3/src/lcode.c"
 $pc=$8; //@line 599 "lib/lua-5.2.3/src/lcode.c"
 var $9=$pc; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP32[(($9)>>2)]; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10&-16321; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $12=$pc; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $14=$13>>>6; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $15=$14&255; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $16=($15|0)!=0; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $17=$16^1; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $18=($17&1); //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $19=$18<<6; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $20=$19&16320; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $21=$11|$20; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 var $22=$pc; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($22)>>2)]=$21; //@line 602 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 603 "lib/lua-5.2.3/src/lcode.c"
}


function _jumponcond($fs,$e,$cond){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $ie;
 $2=$fs;
 $3=$e;
 $4=$cond;
 var $5=$3; //@line 607 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 607 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 607 "lib/lua-5.2.3/src/lcode.c"
 var $8=($7|0)==11; //@line 607 "lib/lua-5.2.3/src/lcode.c"
 if($8){label=2;break;}else{label=5;break;} //@line 607 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $10=$3; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+8)|0); //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $12=$11; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP32[(($12)>>2)]; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $14=$2; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $15=(($14)|0); //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+12)|0); //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $18=HEAP32[(($17)>>2)]; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $19=(($18+($13<<2))|0); //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP32[(($19)>>2)]; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 $ie=$20; //@line 608 "lib/lua-5.2.3/src/lcode.c"
 var $21=$ie; //@line 609 "lib/lua-5.2.3/src/lcode.c"
 var $22=$21>>>0; //@line 609 "lib/lua-5.2.3/src/lcode.c"
 var $23=$22&63; //@line 609 "lib/lua-5.2.3/src/lcode.c"
 var $24=($23|0)==20; //@line 609 "lib/lua-5.2.3/src/lcode.c"
 if($24){label=3;break;}else{label=4;break;} //@line 609 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $26=$2; //@line 610 "lib/lua-5.2.3/src/lcode.c"
 var $27=(($26+20)|0); //@line 610 "lib/lua-5.2.3/src/lcode.c"
 var $28=HEAP32[(($27)>>2)]; //@line 610 "lib/lua-5.2.3/src/lcode.c"
 var $29=((($28)-(1))|0); //@line 610 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($27)>>2)]=$29; //@line 610 "lib/lua-5.2.3/src/lcode.c"
 var $30=$2; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $31=$ie; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $32=$31>>>23; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $33=$32&511; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $34=$4; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $35=($34|0)!=0; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $36=$35^1; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $37=($36&1); //@line 611 "lib/lua-5.2.3/src/lcode.c"
 var $38=_condjump($30,27,$33,0,$37); //@line 611 "lib/lua-5.2.3/src/lcode.c"
 $1=$38; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 611 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 label=5;break; //@line 614 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $41=$2; //@line 615 "lib/lua-5.2.3/src/lcode.c"
 var $42=$3; //@line 615 "lib/lua-5.2.3/src/lcode.c"
 _discharge2anyreg($41,$42); //@line 615 "lib/lua-5.2.3/src/lcode.c"
 var $43=$2; //@line 616 "lib/lua-5.2.3/src/lcode.c"
 var $44=$3; //@line 616 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($43,$44); //@line 616 "lib/lua-5.2.3/src/lcode.c"
 var $45=$2; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $46=$3; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $47=(($46+8)|0); //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $48=$47; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $49=HEAP32[(($48)>>2)]; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $50=$4; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 var $51=_condjump($45,28,255,$49,$50); //@line 617 "lib/lua-5.2.3/src/lcode.c"
 $1=$51; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 label=6;break; //@line 617 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $53=$1; //@line 618 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $53; //@line 618 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_goiffalse($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $pc;
 $1=$fs;
 $2=$e;
 var $3=$1; //@line 647 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 647 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($3,$4); //@line 647 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 648 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 648 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 648 "lib/lua-5.2.3/src/lcode.c"
 if(($7|0)==10){ label=2;break;}else if(($7|0)==1|($7|0)==3){ label=3;break;}else{label=4;break;}
 case 2: 
 var $9=$2; //@line 650 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+8)|0); //@line 650 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10; //@line 650 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 650 "lib/lua-5.2.3/src/lcode.c"
 $pc=$12; //@line 650 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 651 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 $pc=-1; //@line 654 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 655 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $15=$1; //@line 658 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 658 "lib/lua-5.2.3/src/lcode.c"
 var $17=_jumponcond($15,$16,1); //@line 658 "lib/lua-5.2.3/src/lcode.c"
 $pc=$17; //@line 658 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 659 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $19=$1; //@line 662 "lib/lua-5.2.3/src/lcode.c"
 var $20=$2; //@line 662 "lib/lua-5.2.3/src/lcode.c"
 var $21=(($20+16)|0); //@line 662 "lib/lua-5.2.3/src/lcode.c"
 var $22=$pc; //@line 662 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($19,$21,$22); //@line 662 "lib/lua-5.2.3/src/lcode.c"
 var $23=$1; //@line 663 "lib/lua-5.2.3/src/lcode.c"
 var $24=$2; //@line 663 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+20)|0); //@line 663 "lib/lua-5.2.3/src/lcode.c"
 var $26=HEAP32[(($25)>>2)]; //@line 663 "lib/lua-5.2.3/src/lcode.c"
 _luaK_patchtohere($23,$26); //@line 663 "lib/lua-5.2.3/src/lcode.c"
 var $27=$2; //@line 664 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27+20)|0); //@line 664 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($28)>>2)]=-1; //@line 664 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 665 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_indexed($fs,$t,$k){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$t;
 $3=$k;
 var $4=$2; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4+8)|0); //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $6=$5; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7)&255); //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $9=$2; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+8)|0); //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+2)|0); //@line 705 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($12)]=$8; //@line 705 "lib/lua-5.2.3/src/lcode.c"
 var $13=$1; //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $14=$3; //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $15=_luaK_exp2RK($13,$14); //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15)&65535); //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $17=$2; //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $18=(($17+8)|0); //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $19=$18; //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $20=(($19)|0); //@line 706 "lib/lua-5.2.3/src/lcode.c"
 HEAP16[(($20)>>1)]=$16; //@line 706 "lib/lua-5.2.3/src/lcode.c"
 var $21=$2; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $22=(($21)|0); //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $23=HEAP32[(($22)>>2)]; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $24=($23|0)==8; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $25=($24?8:7); //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $26=(($25)&255); //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $27=$2; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $28=(($27+8)|0); //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $29=$28; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $30=(($29+3)|0); //@line 707 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($30)]=$26; //@line 707 "lib/lua-5.2.3/src/lcode.c"
 var $31=$2; //@line 709 "lib/lua-5.2.3/src/lcode.c"
 var $32=(($31)|0); //@line 709 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($32)>>2)]=9; //@line 709 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 710 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_prefix($fs,$op,$e,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $e2=sp;
 $1=$fs;
 $2=$op;
 $3=$e;
 $4=$line;
 var $5=(($e2+20)|0); //@line 764 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($5)>>2)]=-1; //@line 764 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($e2+16)|0); //@line 764 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($6)>>2)]=-1; //@line 764 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($e2)|0); //@line 764 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($7)>>2)]=5; //@line 764 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($e2+8)|0); //@line 764 "lib/lua-5.2.3/src/lcode.c"
 var $9=$8; //@line 764 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($9)>>3)]=0; //@line 764 "lib/lua-5.2.3/src/lcode.c"
 var $10=$2; //@line 765 "lib/lua-5.2.3/src/lcode.c"
 if(($10|0)==0){ label=2;break;}else if(($10|0)==1){ label=6;break;}else if(($10|0)==2){ label=7;break;}else{label=8;break;}
 case 2: 
 var $12=$3; //@line 767 "lib/lua-5.2.3/src/lcode.c"
 var $13=_isnumeral($12); //@line 767 "lib/lua-5.2.3/src/lcode.c"
 var $14=($13|0)!=0; //@line 767 "lib/lua-5.2.3/src/lcode.c"
 if($14){label=3;break;}else{label=4;break;} //@line 767 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $16=$3; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $17=(($16+8)|0); //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $18=$17; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $19=HEAPF64[(($18)>>3)]; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $20=((-.0))-($19); //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $21=$3; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $22=(($21+8)|0); //@line 768 "lib/lua-5.2.3/src/lcode.c"
 var $23=$22; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($23)>>3)]=$20; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 768 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $25=$1; //@line 770 "lib/lua-5.2.3/src/lcode.c"
 var $26=$3; //@line 770 "lib/lua-5.2.3/src/lcode.c"
 var $27=_luaK_exp2anyreg($25,$26); //@line 770 "lib/lua-5.2.3/src/lcode.c"
 var $28=$1; //@line 771 "lib/lua-5.2.3/src/lcode.c"
 var $29=$3; //@line 771 "lib/lua-5.2.3/src/lcode.c"
 var $30=$4; //@line 771 "lib/lua-5.2.3/src/lcode.c"
 _codearith($28,19,$29,$e2,$30); //@line 771 "lib/lua-5.2.3/src/lcode.c"
 label=5;break;
 case 5: 
 label=9;break; //@line 773 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $33=$1; //@line 775 "lib/lua-5.2.3/src/lcode.c"
 var $34=$3; //@line 775 "lib/lua-5.2.3/src/lcode.c"
 _codenot($33,$34); //@line 775 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 775 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $36=$1; //@line 777 "lib/lua-5.2.3/src/lcode.c"
 var $37=$3; //@line 777 "lib/lua-5.2.3/src/lcode.c"
 var $38=_luaK_exp2anyreg($36,$37); //@line 777 "lib/lua-5.2.3/src/lcode.c"
 var $39=$1; //@line 778 "lib/lua-5.2.3/src/lcode.c"
 var $40=$3; //@line 778 "lib/lua-5.2.3/src/lcode.c"
 var $41=$4; //@line 778 "lib/lua-5.2.3/src/lcode.c"
 _codearith($39,21,$40,$e2,$41); //@line 778 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 779 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 label=9;break; //@line 782 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 STACKTOP=sp;return; //@line 783 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _isnumeral($e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 $1=$e;
 var $2=$1; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $3=(($2)|0); //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $4=HEAP32[(($3)>>2)]; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $5=($4|0)==5; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 if($5){label=2;break;}else{var $17=0;label=4;break;} //@line 33 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $7=$1; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+16)|0); //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $10=($9|0)==-1; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 if($10){label=3;break;}else{var $17=0;label=4;break;} //@line 33 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $12=$1; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+20)|0); //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $14=HEAP32[(($13)>>2)]; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $15=($14|0)==-1; //@line 33 "lib/lua-5.2.3/src/lcode.c"
 var $17=$15;label=4;break;
 case 4: 
 var $17;
 var $18=($17&1);
 STACKTOP=sp;return $18; //@line 34 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codearith($fs,$op,$e1,$e2,$line){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $o2;
 var $o1;
 $1=$fs;
 $2=$op;
 $3=$e1;
 $4=$e2;
 $5=$line;
 var $6=$2; //@line 726 "lib/lua-5.2.3/src/lcode.c"
 var $7=$3; //@line 726 "lib/lua-5.2.3/src/lcode.c"
 var $8=$4; //@line 726 "lib/lua-5.2.3/src/lcode.c"
 var $9=_constfolding($6,$7,$8); //@line 726 "lib/lua-5.2.3/src/lcode.c"
 var $10=($9|0)!=0; //@line 726 "lib/lua-5.2.3/src/lcode.c"
 if($10){label=2;break;}else{label=3;break;} //@line 726 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 label=11;break; //@line 727 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $13=$2; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $14=($13|0)!=19; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 if($14){label=4;break;}else{label=6;break;} //@line 729 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $16=$2; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)!=21; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=5;break;}else{label=6;break;} //@line 729 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $19=$1; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $20=$4; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $21=_luaK_exp2RK($19,$20); //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $24=$21;label=7;break; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $24=0;label=7;break; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $24; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 $o2=$24; //@line 729 "lib/lua-5.2.3/src/lcode.c"
 var $25=$1; //@line 730 "lib/lua-5.2.3/src/lcode.c"
 var $26=$3; //@line 730 "lib/lua-5.2.3/src/lcode.c"
 var $27=_luaK_exp2RK($25,$26); //@line 730 "lib/lua-5.2.3/src/lcode.c"
 $o1=$27; //@line 730 "lib/lua-5.2.3/src/lcode.c"
 var $28=$o1; //@line 731 "lib/lua-5.2.3/src/lcode.c"
 var $29=$o2; //@line 731 "lib/lua-5.2.3/src/lcode.c"
 var $30=($28|0)>($29|0); //@line 731 "lib/lua-5.2.3/src/lcode.c"
 if($30){label=8;break;}else{label=9;break;} //@line 731 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $32=$1; //@line 732 "lib/lua-5.2.3/src/lcode.c"
 var $33=$3; //@line 732 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($32,$33); //@line 732 "lib/lua-5.2.3/src/lcode.c"
 var $34=$1; //@line 733 "lib/lua-5.2.3/src/lcode.c"
 var $35=$4; //@line 733 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($34,$35); //@line 733 "lib/lua-5.2.3/src/lcode.c"
 label=10;break; //@line 734 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $37=$1; //@line 736 "lib/lua-5.2.3/src/lcode.c"
 var $38=$4; //@line 736 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($37,$38); //@line 736 "lib/lua-5.2.3/src/lcode.c"
 var $39=$1; //@line 737 "lib/lua-5.2.3/src/lcode.c"
 var $40=$3; //@line 737 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($39,$40); //@line 737 "lib/lua-5.2.3/src/lcode.c"
 label=10;break;
 case 10: 
 var $42=$1; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $43=$2; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $44=$o1; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $45=$o2; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $46=_luaK_codeABC($42,$43,0,$44,$45); //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $47=$3; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+8)|0); //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $49=$48; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($49)>>2)]=$46; //@line 739 "lib/lua-5.2.3/src/lcode.c"
 var $50=$3; //@line 740 "lib/lua-5.2.3/src/lcode.c"
 var $51=(($50)|0); //@line 740 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($51)>>2)]=11; //@line 740 "lib/lua-5.2.3/src/lcode.c"
 var $52=$1; //@line 741 "lib/lua-5.2.3/src/lcode.c"
 var $53=$5; //@line 741 "lib/lua-5.2.3/src/lcode.c"
 _luaK_fixline($52,$53); //@line 741 "lib/lua-5.2.3/src/lcode.c"
 label=11;break;
 case 11: 
 STACKTOP=sp;return; //@line 743 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codenot($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $temp;
 $1=$fs;
 $2=$e;
 var $3=$1; //@line 669 "lib/lua-5.2.3/src/lcode.c"
 var $4=$2; //@line 669 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($3,$4); //@line 669 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 670 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 670 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 670 "lib/lua-5.2.3/src/lcode.c"
 switch(($7|0)){case 1:case 3:{ label=2;break;}case 4:case 5:case 2:{ label=3;break;}case 10:{ label=4;break;}case 11:case 6:{ label=5;break;}default:{label=6;break;}}break;
 case 2: 
 var $9=$2; //@line 672 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9)|0); //@line 672 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($10)>>2)]=2; //@line 672 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 673 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $12=$2; //@line 676 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12)|0); //@line 676 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($13)>>2)]=3; //@line 676 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 677 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $15=$1; //@line 680 "lib/lua-5.2.3/src/lcode.c"
 var $16=$2; //@line 680 "lib/lua-5.2.3/src/lcode.c"
 _invertjump($15,$16); //@line 680 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 681 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $18=$1; //@line 685 "lib/lua-5.2.3/src/lcode.c"
 var $19=$2; //@line 685 "lib/lua-5.2.3/src/lcode.c"
 _discharge2anyreg($18,$19); //@line 685 "lib/lua-5.2.3/src/lcode.c"
 var $20=$1; //@line 686 "lib/lua-5.2.3/src/lcode.c"
 var $21=$2; //@line 686 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($20,$21); //@line 686 "lib/lua-5.2.3/src/lcode.c"
 var $22=$1; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $23=$2; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $24=(($23+8)|0); //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $25=$24; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $26=HEAP32[(($25)>>2)]; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $27=_luaK_codeABC($22,20,0,$26,0); //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $28=$2; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $29=(($28+8)|0); //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $30=$29; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($30)>>2)]=$27; //@line 687 "lib/lua-5.2.3/src/lcode.c"
 var $31=$2; //@line 688 "lib/lua-5.2.3/src/lcode.c"
 var $32=(($31)|0); //@line 688 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($32)>>2)]=11; //@line 688 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 689 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 label=7;break; //@line 693 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $35=$2; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $36=(($35+20)|0); //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $37=HEAP32[(($36)>>2)]; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 $temp=$37; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $38=$2; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $39=(($38+16)|0); //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $40=HEAP32[(($39)>>2)]; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $41=$2; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $42=(($41+20)|0); //@line 697 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($42)>>2)]=$40; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $43=$temp; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $44=$2; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $45=(($44+16)|0); //@line 697 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($45)>>2)]=$43; //@line 697 "lib/lua-5.2.3/src/lcode.c"
 var $46=$1; //@line 698 "lib/lua-5.2.3/src/lcode.c"
 var $47=$2; //@line 698 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+20)|0); //@line 698 "lib/lua-5.2.3/src/lcode.c"
 var $49=HEAP32[(($48)>>2)]; //@line 698 "lib/lua-5.2.3/src/lcode.c"
 _removevalues($46,$49); //@line 698 "lib/lua-5.2.3/src/lcode.c"
 var $50=$1; //@line 699 "lib/lua-5.2.3/src/lcode.c"
 var $51=$2; //@line 699 "lib/lua-5.2.3/src/lcode.c"
 var $52=(($51+16)|0); //@line 699 "lib/lua-5.2.3/src/lcode.c"
 var $53=HEAP32[(($52)>>2)]; //@line 699 "lib/lua-5.2.3/src/lcode.c"
 _removevalues($50,$53); //@line 699 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 700 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_infix($fs,$op,$v){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$fs;
 $2=$op;
 $3=$v;
 var $4=$2; //@line 787 "lib/lua-5.2.3/src/lcode.c"
 switch(($4|0)){case 13:{ label=2;break;}case 14:{ label=3;break;}case 6:{ label=4;break;}case 0:case 1:case 2:case 3:case 4:case 5:{ label=5;break;}default:{label=8;break;}}break;
 case 2: 
 var $6=$1; //@line 789 "lib/lua-5.2.3/src/lcode.c"
 var $7=$3; //@line 789 "lib/lua-5.2.3/src/lcode.c"
 _luaK_goiftrue($6,$7); //@line 789 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 790 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $9=$1; //@line 793 "lib/lua-5.2.3/src/lcode.c"
 var $10=$3; //@line 793 "lib/lua-5.2.3/src/lcode.c"
 _luaK_goiffalse($9,$10); //@line 793 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 794 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $12=$1; //@line 797 "lib/lua-5.2.3/src/lcode.c"
 var $13=$3; //@line 797 "lib/lua-5.2.3/src/lcode.c"
 _luaK_exp2nextreg($12,$13); //@line 797 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 798 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $15=$3; //@line 802 "lib/lua-5.2.3/src/lcode.c"
 var $16=_isnumeral($15); //@line 802 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)!=0; //@line 802 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=7;break;}else{label=6;break;} //@line 802 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $19=$1; //@line 802 "lib/lua-5.2.3/src/lcode.c"
 var $20=$3; //@line 802 "lib/lua-5.2.3/src/lcode.c"
 var $21=_luaK_exp2RK($19,$20); //@line 802 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 802 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 label=9;break; //@line 803 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $24=$1; //@line 806 "lib/lua-5.2.3/src/lcode.c"
 var $25=$3; //@line 806 "lib/lua-5.2.3/src/lcode.c"
 var $26=_luaK_exp2RK($24,$25); //@line 806 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 807 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 STACKTOP=sp;return; //@line 810 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_posfix($fs,$op,$e1,$e2,$line){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$fs;
 $2=$op;
 $3=$e1;
 $4=$e2;
 $5=$line;
 var $6=$2; //@line 815 "lib/lua-5.2.3/src/lcode.c"
 switch(($6|0)){case 7:case 8:case 9:{ label=10;break;}case 10:case 11:case 12:{ label=11;break;}case 13:{ label=2;break;}case 14:{ label=3;break;}case 6:{ label=4;break;}case 0:case 1:case 2:case 3:case 4:case 5:{ label=9;break;}default:{label=12;break;}}break;
 case 2: 
 var $8=$1; //@line 818 "lib/lua-5.2.3/src/lcode.c"
 var $9=$4; //@line 818 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($8,$9); //@line 818 "lib/lua-5.2.3/src/lcode.c"
 var $10=$1; //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $11=$4; //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+20)|0); //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $13=$3; //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $14=(($13+20)|0); //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $15=HEAP32[(($14)>>2)]; //@line 819 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($10,$12,$15); //@line 819 "lib/lua-5.2.3/src/lcode.c"
 var $16=$3; //@line 820 "lib/lua-5.2.3/src/lcode.c"
 var $17=$4; //@line 820 "lib/lua-5.2.3/src/lcode.c"
 var $18=$16; //@line 820 "lib/lua-5.2.3/src/lcode.c"
 var $19=$17; //@line 820 "lib/lua-5.2.3/src/lcode.c"
 assert(24 % 1 === 0);HEAP32[(($18)>>2)]=HEAP32[(($19)>>2)];HEAP32[((($18)+(4))>>2)]=HEAP32[((($19)+(4))>>2)];HEAP32[((($18)+(8))>>2)]=HEAP32[((($19)+(8))>>2)];HEAP32[((($18)+(12))>>2)]=HEAP32[((($19)+(12))>>2)];HEAP32[((($18)+(16))>>2)]=HEAP32[((($19)+(16))>>2)];HEAP32[((($18)+(20))>>2)]=HEAP32[((($19)+(20))>>2)]; //@line 820 "lib/lua-5.2.3/src/lcode.c"
 label=13;break; //@line 821 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $21=$1; //@line 825 "lib/lua-5.2.3/src/lcode.c"
 var $22=$4; //@line 825 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($21,$22); //@line 825 "lib/lua-5.2.3/src/lcode.c"
 var $23=$1; //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $24=$4; //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+16)|0); //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $26=$3; //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $27=(($26+16)|0); //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $28=HEAP32[(($27)>>2)]; //@line 826 "lib/lua-5.2.3/src/lcode.c"
 _luaK_concat($23,$25,$28); //@line 826 "lib/lua-5.2.3/src/lcode.c"
 var $29=$3; //@line 827 "lib/lua-5.2.3/src/lcode.c"
 var $30=$4; //@line 827 "lib/lua-5.2.3/src/lcode.c"
 var $31=$29; //@line 827 "lib/lua-5.2.3/src/lcode.c"
 var $32=$30; //@line 827 "lib/lua-5.2.3/src/lcode.c"
 assert(24 % 1 === 0);HEAP32[(($31)>>2)]=HEAP32[(($32)>>2)];HEAP32[((($31)+(4))>>2)]=HEAP32[((($32)+(4))>>2)];HEAP32[((($31)+(8))>>2)]=HEAP32[((($32)+(8))>>2)];HEAP32[((($31)+(12))>>2)]=HEAP32[((($32)+(12))>>2)];HEAP32[((($31)+(16))>>2)]=HEAP32[((($32)+(16))>>2)];HEAP32[((($31)+(20))>>2)]=HEAP32[((($32)+(20))>>2)]; //@line 827 "lib/lua-5.2.3/src/lcode.c"
 label=13;break; //@line 828 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $34=$1; //@line 831 "lib/lua-5.2.3/src/lcode.c"
 var $35=$4; //@line 831 "lib/lua-5.2.3/src/lcode.c"
 _luaK_exp2val($34,$35); //@line 831 "lib/lua-5.2.3/src/lcode.c"
 var $36=$4; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36)|0); //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $39=($38|0)==11; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 if($39){label=5;break;}else{label=7;break;} //@line 832 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $41=$4; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $42=(($41+8)|0); //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $43=$42; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $44=HEAP32[(($43)>>2)]; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $45=$1; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $46=(($45)|0); //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $47=HEAP32[(($46)>>2)]; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $48=(($47+12)|0); //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $49=HEAP32[(($48)>>2)]; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $50=(($49+($44<<2))|0); //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP32[(($50)>>2)]; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $52=$51>>>0; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $53=$52&63; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 var $54=($53|0)==22; //@line 832 "lib/lua-5.2.3/src/lcode.c"
 if($54){label=6;break;}else{label=7;break;} //@line 832 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $56=$1; //@line 834 "lib/lua-5.2.3/src/lcode.c"
 var $57=$3; //@line 834 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($56,$57); //@line 834 "lib/lua-5.2.3/src/lcode.c"
 var $58=$4; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $59=(($58+8)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $60=$59; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $61=HEAP32[(($60)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $62=$1; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $63=(($62)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $64=HEAP32[(($63)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $65=(($64+12)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $66=HEAP32[(($65)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $67=(($66+($61<<2))|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $68=HEAP32[(($67)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $69=$68&8388607; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $70=$3; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $71=(($70+8)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $72=$71; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $73=HEAP32[(($72)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $74=$73<<23; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $75=$74&-8388608; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $76=$69|$75; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $77=$4; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $78=(($77+8)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $79=$78; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $80=HEAP32[(($79)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $81=$1; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $82=(($81)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $83=HEAP32[(($82)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $84=(($83+12)|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $85=HEAP32[(($84)>>2)]; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $86=(($85+($80<<2))|0); //@line 835 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($86)>>2)]=$76; //@line 835 "lib/lua-5.2.3/src/lcode.c"
 var $87=$3; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $88=(($87)|0); //@line 836 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($88)>>2)]=11; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $89=$4; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $90=(($89+8)|0); //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $91=$90; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $92=HEAP32[(($91)>>2)]; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $93=$3; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $94=(($93+8)|0); //@line 836 "lib/lua-5.2.3/src/lcode.c"
 var $95=$94; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($95)>>2)]=$92; //@line 836 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 837 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $97=$1; //@line 839 "lib/lua-5.2.3/src/lcode.c"
 var $98=$4; //@line 839 "lib/lua-5.2.3/src/lcode.c"
 _luaK_exp2nextreg($97,$98); //@line 839 "lib/lua-5.2.3/src/lcode.c"
 var $99=$1; //@line 840 "lib/lua-5.2.3/src/lcode.c"
 var $100=$3; //@line 840 "lib/lua-5.2.3/src/lcode.c"
 var $101=$4; //@line 840 "lib/lua-5.2.3/src/lcode.c"
 var $102=$5; //@line 840 "lib/lua-5.2.3/src/lcode.c"
 _codearith($99,22,$100,$101,$102); //@line 840 "lib/lua-5.2.3/src/lcode.c"
 label=8;break;
 case 8: 
 label=13;break; //@line 842 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $105=$1; //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $106=$2; //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $107=(($106)|0); //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $108=((($107)+(13))|0); //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $109=$3; //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $110=$4; //@line 846 "lib/lua-5.2.3/src/lcode.c"
 var $111=$5; //@line 846 "lib/lua-5.2.3/src/lcode.c"
 _codearith($105,$108,$109,$110,$111); //@line 846 "lib/lua-5.2.3/src/lcode.c"
 label=13;break; //@line 847 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 var $113=$1; //@line 850 "lib/lua-5.2.3/src/lcode.c"
 var $114=$2; //@line 850 "lib/lua-5.2.3/src/lcode.c"
 var $115=((($114)-(7))|0); //@line 850 "lib/lua-5.2.3/src/lcode.c"
 var $116=((($115)+(24))|0); //@line 850 "lib/lua-5.2.3/src/lcode.c"
 var $117=$3; //@line 850 "lib/lua-5.2.3/src/lcode.c"
 var $118=$4; //@line 850 "lib/lua-5.2.3/src/lcode.c"
 _codecomp($113,$116,1,$117,$118); //@line 850 "lib/lua-5.2.3/src/lcode.c"
 label=13;break; //@line 851 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 var $120=$1; //@line 854 "lib/lua-5.2.3/src/lcode.c"
 var $121=$2; //@line 854 "lib/lua-5.2.3/src/lcode.c"
 var $122=((($121)-(10))|0); //@line 854 "lib/lua-5.2.3/src/lcode.c"
 var $123=((($122)+(24))|0); //@line 854 "lib/lua-5.2.3/src/lcode.c"
 var $124=$3; //@line 854 "lib/lua-5.2.3/src/lcode.c"
 var $125=$4; //@line 854 "lib/lua-5.2.3/src/lcode.c"
 _codecomp($120,$123,0,$124,$125); //@line 854 "lib/lua-5.2.3/src/lcode.c"
 label=13;break; //@line 855 "lib/lua-5.2.3/src/lcode.c"
 case 12: 
 label=13;break; //@line 858 "lib/lua-5.2.3/src/lcode.c"
 case 13: 
 STACKTOP=sp;return; //@line 859 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _codecomp($fs,$op,$cond,$e1,$e2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $o1;
 var $o2;
 var $temp;
 $1=$fs;
 $2=$op;
 $3=$cond;
 $4=$e1;
 $5=$e2;
 var $6=$1; //@line 748 "lib/lua-5.2.3/src/lcode.c"
 var $7=$4; //@line 748 "lib/lua-5.2.3/src/lcode.c"
 var $8=_luaK_exp2RK($6,$7); //@line 748 "lib/lua-5.2.3/src/lcode.c"
 $o1=$8; //@line 748 "lib/lua-5.2.3/src/lcode.c"
 var $9=$1; //@line 749 "lib/lua-5.2.3/src/lcode.c"
 var $10=$5; //@line 749 "lib/lua-5.2.3/src/lcode.c"
 var $11=_luaK_exp2RK($9,$10); //@line 749 "lib/lua-5.2.3/src/lcode.c"
 $o2=$11; //@line 749 "lib/lua-5.2.3/src/lcode.c"
 var $12=$1; //@line 750 "lib/lua-5.2.3/src/lcode.c"
 var $13=$5; //@line 750 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($12,$13); //@line 750 "lib/lua-5.2.3/src/lcode.c"
 var $14=$1; //@line 751 "lib/lua-5.2.3/src/lcode.c"
 var $15=$4; //@line 751 "lib/lua-5.2.3/src/lcode.c"
 _freeexp($14,$15); //@line 751 "lib/lua-5.2.3/src/lcode.c"
 var $16=$3; //@line 752 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)==0; //@line 752 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=2;break;}else{label=4;break;} //@line 752 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $19=$2; //@line 752 "lib/lua-5.2.3/src/lcode.c"
 var $20=($19|0)!=24; //@line 752 "lib/lua-5.2.3/src/lcode.c"
 if($20){label=3;break;}else{label=4;break;} //@line 752 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $22=$o1; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 $temp=$22; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 var $23=$o2; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 $o1=$23; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 var $24=$temp; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 $o2=$24; //@line 754 "lib/lua-5.2.3/src/lcode.c"
 $3=1; //@line 755 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 756 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $26=$1; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $27=$2; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $28=$3; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $29=$o1; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $30=$o2; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $31=_condjump($26,$27,$28,$29,$30); //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $32=$4; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $33=(($32+8)|0); //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $34=$33; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($34)>>2)]=$31; //@line 757 "lib/lua-5.2.3/src/lcode.c"
 var $35=$4; //@line 758 "lib/lua-5.2.3/src/lcode.c"
 var $36=(($35)|0); //@line 758 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($36)>>2)]=10; //@line 758 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 759 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaK_fixline($fs,$line){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$fs;
 $2=$line;
 var $3=$2; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $4=$1; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $5=(($4+20)|0); //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $6=HEAP32[(($5)>>2)]; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $7=((($6)-(1))|0); //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $8=$1; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $9=(($8)|0); //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $10=HEAP32[(($9)>>2)]; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $11=(($10+20)|0); //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $12=HEAP32[(($11)>>2)]; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+($7<<2))|0); //@line 863 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($13)>>2)]=$3; //@line 863 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 864 "lib/lua-5.2.3/src/lcode.c"
}


function _luaK_setlist($fs,$base,$nelems,$tostore){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $c;
 var $b;
 $1=$fs;
 $2=$base;
 $3=$nelems;
 $4=$tostore;
 var $5=$3; //@line 868 "lib/lua-5.2.3/src/lcode.c"
 var $6=((($5)-(1))|0); //@line 868 "lib/lua-5.2.3/src/lcode.c"
 var $7=(((($6|0))/(50))&-1); //@line 868 "lib/lua-5.2.3/src/lcode.c"
 var $8=((($7)+(1))|0); //@line 868 "lib/lua-5.2.3/src/lcode.c"
 $c=$8; //@line 868 "lib/lua-5.2.3/src/lcode.c"
 var $9=$4; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 var $10=($9|0)==-1; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 if($10){label=2;break;}else{label=3;break;} //@line 869 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $15=0;label=4;break; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $13=$4; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 var $15=$13;label=4;break; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $15; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 $b=$15; //@line 869 "lib/lua-5.2.3/src/lcode.c"
 var $16=$c; //@line 871 "lib/lua-5.2.3/src/lcode.c"
 var $17=($16|0)<=511; //@line 871 "lib/lua-5.2.3/src/lcode.c"
 if($17){label=5;break;}else{label=6;break;} //@line 871 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $19=$1; //@line 872 "lib/lua-5.2.3/src/lcode.c"
 var $20=$2; //@line 872 "lib/lua-5.2.3/src/lcode.c"
 var $21=$b; //@line 872 "lib/lua-5.2.3/src/lcode.c"
 var $22=$c; //@line 872 "lib/lua-5.2.3/src/lcode.c"
 var $23=_luaK_codeABC($19,36,$20,$21,$22); //@line 872 "lib/lua-5.2.3/src/lcode.c"
 label=10;break; //@line 872 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $25=$c; //@line 873 "lib/lua-5.2.3/src/lcode.c"
 var $26=($25|0)<=67108863; //@line 873 "lib/lua-5.2.3/src/lcode.c"
 if($26){label=7;break;}else{label=8;break;} //@line 873 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $28=$1; //@line 874 "lib/lua-5.2.3/src/lcode.c"
 var $29=$2; //@line 874 "lib/lua-5.2.3/src/lcode.c"
 var $30=$b; //@line 874 "lib/lua-5.2.3/src/lcode.c"
 var $31=_luaK_codeABC($28,36,$29,$30,0); //@line 874 "lib/lua-5.2.3/src/lcode.c"
 var $32=$1; //@line 875 "lib/lua-5.2.3/src/lcode.c"
 var $33=$c; //@line 875 "lib/lua-5.2.3/src/lcode.c"
 var $34=_codeextraarg($32,$33); //@line 875 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 876 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $36=$1; //@line 878 "lib/lua-5.2.3/src/lcode.c"
 var $37=(($36+12)|0); //@line 878 "lib/lua-5.2.3/src/lcode.c"
 var $38=HEAP32[(($37)>>2)]; //@line 878 "lib/lua-5.2.3/src/lcode.c"
 _luaX_syntaxerror($38,15552); //@line 878 "lib/lua-5.2.3/src/lcode.c"
 throw "Reached an unreachable!"; //@line 878 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 label=10;break;
 case 10: 
 var $41=$2; //@line 879 "lib/lua-5.2.3/src/lcode.c"
 var $42=((($41)+(1))|0); //@line 879 "lib/lua-5.2.3/src/lcode.c"
 var $43=(($42)&255); //@line 879 "lib/lua-5.2.3/src/lcode.c"
 var $44=$1; //@line 879 "lib/lua-5.2.3/src/lcode.c"
 var $45=(($44+48)|0); //@line 879 "lib/lua-5.2.3/src/lcode.c"
 HEAP8[($45)]=$43; //@line 879 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 880 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _condjump($fs,$op,$A,$B,$C){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 $1=$fs;
 $2=$op;
 $3=$A;
 $4=$B;
 $5=$C;
 var $6=$1; //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $7=$2; //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $8=$3; //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $9=$4; //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $10=$5; //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $11=_luaK_codeABC($6,$7,$8,$9,$10); //@line 75 "lib/lua-5.2.3/src/lcode.c"
 var $12=$1; //@line 76 "lib/lua-5.2.3/src/lcode.c"
 var $13=_luaK_jump($12); //@line 76 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $13; //@line 76 "lib/lua-5.2.3/src/lcode.c"
}


function _discharge2anyreg($fs,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$e;
 var $3=$2; //@line 461 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3)|0); //@line 461 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 461 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)!=6; //@line 461 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=2;break;}else{label=3;break;} //@line 461 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $8=$1; //@line 462 "lib/lua-5.2.3/src/lcode.c"
 _luaK_reserveregs($8,1); //@line 462 "lib/lua-5.2.3/src/lcode.c"
 var $9=$1; //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $10=$2; //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $11=$1; //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $12=(($11+48)|0); //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $13=HEAP8[($12)]; //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $14=($13&255); //@line 463 "lib/lua-5.2.3/src/lcode.c"
 var $15=((($14)-(1))|0); //@line 463 "lib/lua-5.2.3/src/lcode.c"
 _discharge2reg($9,$10,$15); //@line 463 "lib/lua-5.2.3/src/lcode.c"
 label=3;break; //@line 464 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 STACKTOP=sp;return; //@line 465 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _removevalues($fs,$list){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$fs;
 $2=$list;
 label=2;break; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $4=$2; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 var $5=($4|0)!=-1; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 if($5){label=3;break;}else{label=5;break;} //@line 145 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $7=$1; //@line 146 "lib/lua-5.2.3/src/lcode.c"
 var $8=$2; //@line 146 "lib/lua-5.2.3/src/lcode.c"
 var $9=_patchtestreg($7,$8,255); //@line 146 "lib/lua-5.2.3/src/lcode.c"
 label=4;break; //@line 146 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $11=$1; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 var $12=$2; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 var $13=_getjump($11,$12); //@line 145 "lib/lua-5.2.3/src/lcode.c"
 $2=$13; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 label=2;break; //@line 145 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 STACKTOP=sp;return; //@line 147 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _patchtestreg($fs,$node,$reg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $i;
 $2=$fs;
 $3=$node;
 $4=$reg;
 var $5=$2; //@line 132 "lib/lua-5.2.3/src/lcode.c"
 var $6=$3; //@line 132 "lib/lua-5.2.3/src/lcode.c"
 var $7=_getjumpcontrol($5,$6); //@line 132 "lib/lua-5.2.3/src/lcode.c"
 $i=$7; //@line 132 "lib/lua-5.2.3/src/lcode.c"
 var $8=$i; //@line 133 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 133 "lib/lua-5.2.3/src/lcode.c"
 var $10=$9>>>0; //@line 133 "lib/lua-5.2.3/src/lcode.c"
 var $11=$10&63; //@line 133 "lib/lua-5.2.3/src/lcode.c"
 var $12=($11|0)!=28; //@line 133 "lib/lua-5.2.3/src/lcode.c"
 if($12){label=2;break;}else{label=3;break;} //@line 133 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 $1=0; //@line 134 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 134 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $15=$4; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $16=($15|0)!=255; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 if($16){label=4;break;}else{label=6;break;} //@line 135 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $18=$4; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $19=$i; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP32[(($19)>>2)]; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $21=$20>>>23; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $22=$21&511; //@line 135 "lib/lua-5.2.3/src/lcode.c"
 var $23=($18|0)!=($22|0); //@line 135 "lib/lua-5.2.3/src/lcode.c"
 if($23){label=5;break;}else{label=6;break;} //@line 135 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $25=$i; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $26=HEAP32[(($25)>>2)]; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $27=$26&-16321; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $28=$4; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $29=$28<<6; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $30=$29&16320; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $31=$27|$30; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 var $32=$i; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($32)>>2)]=$31; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 label=7;break; //@line 136 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $34=$i; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $35=HEAP32[(($34)>>2)]; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $36=$35>>>23; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $37=$36&511; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $38=$37<<6; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $39=27|$38; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $40=$i; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $41=HEAP32[(($40)>>2)]; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $42=$41>>>14; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $43=$42&511; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $44=$43<<14; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $45=$39|$44; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 var $46=$i; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($46)>>2)]=$45; //@line 138 "lib/lua-5.2.3/src/lcode.c"
 label=7;break;
 case 7: 
 $1=1; //@line 140 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 140 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $49=$1; //@line 141 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $49; //@line 141 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _getjumpcontrol($fs,$pc){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $pi;
 $2=$fs;
 $3=$pc;
 var $4=$3; //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $6=(($5)|0); //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $7=HEAP32[(($6)>>2)]; //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $8=(($7+12)|0); //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $9=HEAP32[(($8)>>2)]; //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+($4<<2))|0); //@line 110 "lib/lua-5.2.3/src/lcode.c"
 $pi=$10; //@line 110 "lib/lua-5.2.3/src/lcode.c"
 var $11=$3; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $12=($11|0)>=1; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 if($12){label=2;break;}else{label=4;break;} //@line 111 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $14=$pi; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $15=((($14)-(4))|0); //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $16=HEAP32[(($15)>>2)]; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $17=$16>>>0; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $18=$17&63; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $19=((1336+$18)|0); //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $20=HEAP8[($19)]; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $21=($20&255); //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $22=$21&128; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 var $23=($22|0)!=0; //@line 111 "lib/lua-5.2.3/src/lcode.c"
 if($23){label=3;break;}else{label=4;break;} //@line 111 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $25=$pi; //@line 112 "lib/lua-5.2.3/src/lcode.c"
 var $26=((($25)-(4))|0); //@line 112 "lib/lua-5.2.3/src/lcode.c"
 $1=$26; //@line 112 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 112 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $28=$pi; //@line 114 "lib/lua-5.2.3/src/lcode.c"
 $1=$28; //@line 114 "lib/lua-5.2.3/src/lcode.c"
 label=5;break; //@line 114 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $30=$1; //@line 115 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $30; //@line 115 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _discharge2reg($fs,$e,$reg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $pc;
 $1=$fs;
 $2=$e;
 $3=$reg;
 var $4=$1; //@line 422 "lib/lua-5.2.3/src/lcode.c"
 var $5=$2; //@line 422 "lib/lua-5.2.3/src/lcode.c"
 _luaK_dischargevars($4,$5); //@line 422 "lib/lua-5.2.3/src/lcode.c"
 var $6=$2; //@line 423 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6)|0); //@line 423 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP32[(($7)>>2)]; //@line 423 "lib/lua-5.2.3/src/lcode.c"
 switch(($8|0)){case 1:{ label=2;break;}case 3:case 2:{ label=3;break;}case 4:{ label=4;break;}case 5:{ label=5;break;}case 11:{ label=6;break;}case 6:{ label=7;break;}default:{label=10;break;}}break;
 case 2: 
 var $10=$1; //@line 425 "lib/lua-5.2.3/src/lcode.c"
 var $11=$3; //@line 425 "lib/lua-5.2.3/src/lcode.c"
 _luaK_nil($10,$11,1); //@line 425 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 426 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $13=$1; //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $14=$3; //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $15=$2; //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $16=(($15)|0); //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $17=HEAP32[(($16)>>2)]; //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $18=($17|0)==2; //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $19=($18&1); //@line 429 "lib/lua-5.2.3/src/lcode.c"
 var $20=_luaK_codeABC($13,3,$14,$19,0); //@line 429 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 430 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $22=$1; //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $23=$3; //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $24=$2; //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $25=(($24+8)|0); //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $26=$25; //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $27=HEAP32[(($26)>>2)]; //@line 433 "lib/lua-5.2.3/src/lcode.c"
 var $28=_luaK_codek($22,$23,$27); //@line 433 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 434 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $30=$1; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $31=$3; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $32=$1; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $33=$2; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $34=(($33+8)|0); //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $35=$34; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $36=HEAPF64[(($35)>>3)]; //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $37=_luaK_numberK($32,$36); //@line 437 "lib/lua-5.2.3/src/lcode.c"
 var $38=_luaK_codek($30,$31,$37); //@line 437 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 438 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $40=$2; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+8)|0); //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $42=$41; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $43=HEAP32[(($42)>>2)]; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $44=$1; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $45=(($44)|0); //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $46=HEAP32[(($45)>>2)]; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $47=(($46+12)|0); //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $48=HEAP32[(($47)>>2)]; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $49=(($48+($43<<2))|0); //@line 441 "lib/lua-5.2.3/src/lcode.c"
 $pc=$49; //@line 441 "lib/lua-5.2.3/src/lcode.c"
 var $50=$pc; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $51=HEAP32[(($50)>>2)]; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $52=$51&-16321; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $53=$3; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $54=$53<<6; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $55=$54&16320; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $56=$52|$55; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 var $57=$pc; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($57)>>2)]=$56; //@line 442 "lib/lua-5.2.3/src/lcode.c"
 label=11;break; //@line 443 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 var $59=$3; //@line 446 "lib/lua-5.2.3/src/lcode.c"
 var $60=$2; //@line 446 "lib/lua-5.2.3/src/lcode.c"
 var $61=(($60+8)|0); //@line 446 "lib/lua-5.2.3/src/lcode.c"
 var $62=$61; //@line 446 "lib/lua-5.2.3/src/lcode.c"
 var $63=HEAP32[(($62)>>2)]; //@line 446 "lib/lua-5.2.3/src/lcode.c"
 var $64=($59|0)!=($63|0); //@line 446 "lib/lua-5.2.3/src/lcode.c"
 if($64){label=8;break;}else{label=9;break;} //@line 446 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $66=$1; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $67=$3; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $68=$2; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $69=(($68+8)|0); //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $70=$69; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $71=HEAP32[(($70)>>2)]; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 var $72=_luaK_codeABC($66,0,$67,$71,0); //@line 447 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 447 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 label=11;break; //@line 448 "lib/lua-5.2.3/src/lcode.c"
 case 10: 
 label=12;break; //@line 452 "lib/lua-5.2.3/src/lcode.c"
 case 11: 
 var $76=$3; //@line 455 "lib/lua-5.2.3/src/lcode.c"
 var $77=$2; //@line 455 "lib/lua-5.2.3/src/lcode.c"
 var $78=(($77+8)|0); //@line 455 "lib/lua-5.2.3/src/lcode.c"
 var $79=$78; //@line 455 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($79)>>2)]=$76; //@line 455 "lib/lua-5.2.3/src/lcode.c"
 var $80=$2; //@line 456 "lib/lua-5.2.3/src/lcode.c"
 var $81=(($80)|0); //@line 456 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($81)>>2)]=6; //@line 456 "lib/lua-5.2.3/src/lcode.c"
 label=12;break; //@line 457 "lib/lua-5.2.3/src/lcode.c"
 case 12: 
 STACKTOP=sp;return; //@line 457 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _constfolding($op,$e1,$e2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $r;
 $2=$op;
 $3=$e1;
 $4=$e2;
 var $5=$3; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 var $6=_isnumeral($5); //@line 715 "lib/lua-5.2.3/src/lcode.c"
 var $7=($6|0)!=0; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 if($7){label=2;break;}else{label=3;break;} //@line 715 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $9=$4; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 var $10=_isnumeral($9); //@line 715 "lib/lua-5.2.3/src/lcode.c"
 var $11=($10|0)!=0; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 if($11){label=4;break;}else{label=3;break;} //@line 715 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 $1=0; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 715 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 var $14=$2; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $15=($14|0)==16; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 if($15){label=6;break;}else{label=5;break;} //@line 716 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 var $17=$2; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $18=($17|0)==17; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 if($18){label=6;break;}else{label=8;break;} //@line 716 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $20=$4; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $21=(($20+8)|0); //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $22=$21; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $23=HEAPF64[(($22)>>3)]; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 var $24=$23==0; //@line 716 "lib/lua-5.2.3/src/lcode.c"
 if($24){label=7;break;}else{label=8;break;} //@line 716 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 $1=0; //@line 717 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 717 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $27=$2; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $28=((($27)-(13))|0); //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $29=(($28)|0); //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $30=$3; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $31=(($30+8)|0); //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $32=$31; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $33=HEAPF64[(($32)>>3)]; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $34=$4; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $35=(($34+8)|0); //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $36=$35; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $37=HEAPF64[(($36)>>3)]; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $38=_luaO_arith($29,$33,$37); //@line 718 "lib/lua-5.2.3/src/lcode.c"
 $r=$38; //@line 718 "lib/lua-5.2.3/src/lcode.c"
 var $39=$r; //@line 719 "lib/lua-5.2.3/src/lcode.c"
 var $40=$3; //@line 719 "lib/lua-5.2.3/src/lcode.c"
 var $41=(($40+8)|0); //@line 719 "lib/lua-5.2.3/src/lcode.c"
 var $42=$41; //@line 719 "lib/lua-5.2.3/src/lcode.c"
 HEAPF64[(($42)>>3)]=$39; //@line 719 "lib/lua-5.2.3/src/lcode.c"
 $1=1; //@line 720 "lib/lua-5.2.3/src/lcode.c"
 label=9;break; //@line 720 "lib/lua-5.2.3/src/lcode.c"
 case 9: 
 var $44=$1; //@line 721 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $44; //@line 721 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _need_value($fs,$list){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 $2=$fs;
 $3=$list;
 label=2;break; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 case 2: 
 var $5=$3; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 var $6=($5|0)!=-1; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 if($6){label=3;break;}else{label=7;break;} //@line 123 "lib/lua-5.2.3/src/lcode.c"
 case 3: 
 var $8=$2; //@line 124 "lib/lua-5.2.3/src/lcode.c"
 var $9=$3; //@line 124 "lib/lua-5.2.3/src/lcode.c"
 var $10=_getjumpcontrol($8,$9); //@line 124 "lib/lua-5.2.3/src/lcode.c"
 var $11=HEAP32[(($10)>>2)]; //@line 124 "lib/lua-5.2.3/src/lcode.c"
 $i=$11; //@line 124 "lib/lua-5.2.3/src/lcode.c"
 var $12=$i; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 var $13=$12>>>0; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 var $14=$13&63; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 var $15=($14|0)!=28; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 if($15){label=4;break;}else{label=5;break;} //@line 125 "lib/lua-5.2.3/src/lcode.c"
 case 4: 
 $1=1; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 125 "lib/lua-5.2.3/src/lcode.c"
 case 5: 
 label=6;break; //@line 126 "lib/lua-5.2.3/src/lcode.c"
 case 6: 
 var $19=$2; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 var $20=$3; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 var $21=_getjump($19,$20); //@line 123 "lib/lua-5.2.3/src/lcode.c"
 $3=$21; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 label=2;break; //@line 123 "lib/lua-5.2.3/src/lcode.c"
 case 7: 
 $1=0; //@line 127 "lib/lua-5.2.3/src/lcode.c"
 label=8;break; //@line 127 "lib/lua-5.2.3/src/lcode.c"
 case 8: 
 var $24=$1; //@line 128 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $24; //@line 128 "lib/lua-5.2.3/src/lcode.c"
  default: assert(0, "bad label: " + label);
 }

}


function _code_label($fs,$A,$b,$jump){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 $1=$fs;
 $2=$A;
 $3=$b;
 $4=$jump;
 var $5=$1; //@line 416 "lib/lua-5.2.3/src/lcode.c"
 var $6=_luaK_getlabel($5); //@line 416 "lib/lua-5.2.3/src/lcode.c"
 var $7=$1; //@line 417 "lib/lua-5.2.3/src/lcode.c"
 var $8=$2; //@line 417 "lib/lua-5.2.3/src/lcode.c"
 var $9=$3; //@line 417 "lib/lua-5.2.3/src/lcode.c"
 var $10=$4; //@line 417 "lib/lua-5.2.3/src/lcode.c"
 var $11=_luaK_codeABC($7,3,$8,$9,$10); //@line 417 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return $11; //@line 417 "lib/lua-5.2.3/src/lcode.c"
}


function _dischargejpc($fs){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 $1=$fs;
 var $2=$1; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $3=$1; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $4=(($3+28)|0); //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $5=HEAP32[(($4)>>2)]; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $6=$1; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $7=(($6+20)|0); //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $8=HEAP32[(($7)>>2)]; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $9=$1; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $10=(($9+20)|0); //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $11=HEAP32[(($10)>>2)]; //@line 164 "lib/lua-5.2.3/src/lcode.c"
 _patchlistaux($2,$5,$8,255,$11); //@line 164 "lib/lua-5.2.3/src/lcode.c"
 var $12=$1; //@line 165 "lib/lua-5.2.3/src/lcode.c"
 var $13=(($12+28)|0); //@line 165 "lib/lua-5.2.3/src/lcode.c"
 HEAP32[(($13)>>2)]=-1; //@line 165 "lib/lua-5.2.3/src/lcode.c"
 STACKTOP=sp;return; //@line 166 "lib/lua-5.2.3/src/lcode.c"
}


function _luaD_throw($L,$errcode){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $io2;
 var $io1;
 $1=$L;
 $2=$errcode;
 var $3=$1; //@line 104 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+64)|0); //@line 104 "lib/lua-5.2.3/src/ldo.c"
 var $5=HEAP32[(($4)>>2)]; //@line 104 "lib/lua-5.2.3/src/ldo.c"
 var $6=($5|0)!=0; //@line 104 "lib/lua-5.2.3/src/ldo.c"
 if($6){label=2;break;}else{label=3;break;} //@line 104 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $8=$2; //@line 105 "lib/lua-5.2.3/src/ldo.c"
 var $9=$1; //@line 105 "lib/lua-5.2.3/src/ldo.c"
 var $10=(($9+64)|0); //@line 105 "lib/lua-5.2.3/src/ldo.c"
 var $11=HEAP32[(($10)>>2)]; //@line 105 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($11+160)|0); //@line 105 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($12)>>2)]=$8; //@line 105 "lib/lua-5.2.3/src/ldo.c"
 var $13=$1; //@line 106 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($13+64)|0); //@line 106 "lib/lua-5.2.3/src/ldo.c"
 var $15=HEAP32[(($14)>>2)]; //@line 106 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15+4)|0); //@line 106 "lib/lua-5.2.3/src/ldo.c"
 var $17=(($16)|0); //@line 106 "lib/lua-5.2.3/src/ldo.c"
 _longjmp($17,1); //@line 106 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 106 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $19=$2; //@line 109 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19)&255); //@line 109 "lib/lua-5.2.3/src/ldo.c"
 var $21=$1; //@line 109 "lib/lua-5.2.3/src/ldo.c"
 var $22=(($21+6)|0); //@line 109 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($22)]=$20; //@line 109 "lib/lua-5.2.3/src/ldo.c"
 var $23=$1; //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($23+12)|0); //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $25=HEAP32[(($24)>>2)]; //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $26=(($25+172)|0); //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $27=HEAP32[(($26)>>2)]; //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $28=(($27+64)|0); //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $29=HEAP32[(($28)>>2)]; //@line 110 "lib/lua-5.2.3/src/ldo.c"
 var $30=($29|0)!=0; //@line 110 "lib/lua-5.2.3/src/ldo.c"
 if($30){label=4;break;}else{label=5;break;} //@line 110 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $32=$1; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $33=(($32+8)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $34=HEAP32[(($33)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $35=((($34)-(16))|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 $io2=$35; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $36=$1; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $37=(($36+12)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $38=HEAP32[(($37)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $39=(($38+172)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $40=HEAP32[(($39)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $41=(($40+8)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $42=HEAP32[(($41)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $43=(($42+16)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($41)>>2)]=$43; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 $io1=$42; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $44=$io1; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $45=(($44)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $46=$io2; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $47=(($46)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $48=$45; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $49=$47; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($48)>>2)]=HEAP32[(($49)>>2)];HEAP32[((($48)+(4))>>2)]=HEAP32[((($49)+(4))>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $50=$io2; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+8)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $52=HEAP32[(($51)>>2)]; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $53=$io1; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $54=(($53+8)|0); //@line 111 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($54)>>2)]=$52; //@line 111 "lib/lua-5.2.3/src/ldo.c"
 var $55=$1; //@line 112 "lib/lua-5.2.3/src/ldo.c"
 var $56=(($55+12)|0); //@line 112 "lib/lua-5.2.3/src/ldo.c"
 var $57=HEAP32[(($56)>>2)]; //@line 112 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($57+172)|0); //@line 112 "lib/lua-5.2.3/src/ldo.c"
 var $59=HEAP32[(($58)>>2)]; //@line 112 "lib/lua-5.2.3/src/ldo.c"
 var $60=$2; //@line 112 "lib/lua-5.2.3/src/ldo.c"
 _luaD_throw($59,$60); //@line 112 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 112 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $62=$1; //@line 115 "lib/lua-5.2.3/src/ldo.c"
 var $63=(($62+12)|0); //@line 115 "lib/lua-5.2.3/src/ldo.c"
 var $64=HEAP32[(($63)>>2)]; //@line 115 "lib/lua-5.2.3/src/ldo.c"
 var $65=(($64+168)|0); //@line 115 "lib/lua-5.2.3/src/ldo.c"
 var $66=HEAP32[(($65)>>2)]; //@line 115 "lib/lua-5.2.3/src/ldo.c"
 var $67=($66|0)!=0; //@line 115 "lib/lua-5.2.3/src/ldo.c"
 if($67){label=6;break;}else{label=7;break;} //@line 115 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $69=$1; //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $70=(($69+12)|0); //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $71=HEAP32[(($70)>>2)]; //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $72=(($71+168)|0); //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $73=HEAP32[(($72)>>2)]; //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $74=$1; //@line 117 "lib/lua-5.2.3/src/ldo.c"
 var $75=FUNCTION_TABLE[$73]($74); //@line 117 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 118 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 _abort(); //@line 119 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 119 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return; //@line 122 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_rawrunprotected($L,$f,$ud){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+168)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 var mySetjmpIds = {};
 var setjmpTable = {"1": function(value) { label = 4; $16 = value },dummy: 0};
 while(1)try { switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $oldnCcalls;
 var $lj=sp;
 $1=$L;
 $2=$f;
 $3=$ud;
 var $4=$1; //@line 126 "lib/lua-5.2.3/src/ldo.c"
 var $5=(($4+38)|0); //@line 126 "lib/lua-5.2.3/src/ldo.c"
 var $6=HEAP16[(($5)>>1)]; //@line 126 "lib/lua-5.2.3/src/ldo.c"
 $oldnCcalls=$6; //@line 126 "lib/lua-5.2.3/src/ldo.c"
 var $7=(($lj+160)|0); //@line 128 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($7)>>2)]=0; //@line 128 "lib/lua-5.2.3/src/ldo.c"
 var $8=$1; //@line 129 "lib/lua-5.2.3/src/ldo.c"
 var $9=(($8+64)|0); //@line 129 "lib/lua-5.2.3/src/ldo.c"
 var $10=HEAP32[(($9)>>2)]; //@line 129 "lib/lua-5.2.3/src/ldo.c"
 var $11=(($lj)|0); //@line 129 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($11)>>2)]=$10; //@line 129 "lib/lua-5.2.3/src/ldo.c"
 var $12=$1; //@line 130 "lib/lua-5.2.3/src/ldo.c"
 var $13=(($12+64)|0); //@line 130 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($13)>>2)]=$lj; //@line 130 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($lj+4)|0); //@line 131 "lib/lua-5.2.3/src/ldo.c"
 var $15=(($14)|0); //@line 131 "lib/lua-5.2.3/src/ldo.c"
 var $16=(tempInt = setjmpId++, mySetjmpIds[tempInt] = 1, setjmpLabels[tempInt] = label,HEAP32[(($15)>>2)]=tempInt, 0); //@line 131 "lib/lua-5.2.3/src/ldo.c"
 label=4;break;
 case 4: 
 var $17=($16|0)==0; //@line 131 "lib/lua-5.2.3/src/ldo.c"
 if($17){label=2;break;}else{label=3;break;} //@line 131 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $19=$2; //@line 131 "lib/lua-5.2.3/src/ldo.c"
 var $20=$1; //@line 131 "lib/lua-5.2.3/src/ldo.c"
 var $21=$3; //@line 131 "lib/lua-5.2.3/src/ldo.c"
 FUNCTION_TABLE[$19]($20,$21); //@line 131 "lib/lua-5.2.3/src/ldo.c"
 label=3;break; //@line 131 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $23=(($lj)|0); //@line 134 "lib/lua-5.2.3/src/ldo.c"
 var $24=HEAP32[(($23)>>2)]; //@line 134 "lib/lua-5.2.3/src/ldo.c"
 var $25=$1; //@line 134 "lib/lua-5.2.3/src/ldo.c"
 var $26=(($25+64)|0); //@line 134 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($26)>>2)]=$24; //@line 134 "lib/lua-5.2.3/src/ldo.c"
 var $27=$oldnCcalls; //@line 135 "lib/lua-5.2.3/src/ldo.c"
 var $28=$1; //@line 135 "lib/lua-5.2.3/src/ldo.c"
 var $29=(($28+38)|0); //@line 135 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($29)>>1)]=$27; //@line 135 "lib/lua-5.2.3/src/ldo.c"
 var $30=(($lj+160)|0); //@line 136 "lib/lua-5.2.3/src/ldo.c"
 var $31=HEAP32[(($30)>>2)]; //@line 136 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $31; //@line 136 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }
 } catch(e) { if (!e.longjmp || !(e.id in mySetjmpIds)) throw(e); setjmpTable[setjmpLabels[e.id]](e.value) }
}


function _luaD_reallocstack($L,$newsize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $oldstack;
 var $lim;
 $1=$L;
 $2=$newsize;
 var $3=$1; //@line 162 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+28)|0); //@line 162 "lib/lua-5.2.3/src/ldo.c"
 var $5=HEAP32[(($4)>>2)]; //@line 162 "lib/lua-5.2.3/src/ldo.c"
 $oldstack=$5; //@line 162 "lib/lua-5.2.3/src/ldo.c"
 var $6=$1; //@line 163 "lib/lua-5.2.3/src/ldo.c"
 var $7=(($6+32)|0); //@line 163 "lib/lua-5.2.3/src/ldo.c"
 var $8=HEAP32[(($7)>>2)]; //@line 163 "lib/lua-5.2.3/src/ldo.c"
 $lim=$8; //@line 163 "lib/lua-5.2.3/src/ldo.c"
 var $9=$2; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $10=((($9)+(1))|0); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $11=($10>>>0)>268435455; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 if($11){label=2;break;}else{label=3;break;} //@line 166 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $13=$1; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 _luaM_toobig($13); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $17=0;label=4;break; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $17; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $18=$1; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $19=$1; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19+28)|0); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $21=HEAP32[(($20)>>2)]; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $22=$21; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $23=$1; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($23+32)|0); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $25=HEAP32[(($24)>>2)]; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $26=($25<<4); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $27=$2; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $28=($27<<4); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $29=_luaM_realloc_($18,$22,$26,$28); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $30=$29; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $31=$1; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 var $32=(($31+28)|0); //@line 166 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($32)>>2)]=$30; //@line 166 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $34=$lim; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 var $35=$2; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 var $36=($34|0)<($35|0); //@line 167 "lib/lua-5.2.3/src/ldo.c"
 if($36){label=6;break;}else{label=8;break;} //@line 167 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $38=$1; //@line 168 "lib/lua-5.2.3/src/ldo.c"
 var $39=(($38+28)|0); //@line 168 "lib/lua-5.2.3/src/ldo.c"
 var $40=HEAP32[(($39)>>2)]; //@line 168 "lib/lua-5.2.3/src/ldo.c"
 var $41=$lim; //@line 168 "lib/lua-5.2.3/src/ldo.c"
 var $42=(($40+($41<<4))|0); //@line 168 "lib/lua-5.2.3/src/ldo.c"
 var $43=(($42+8)|0); //@line 168 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($43)>>2)]=0; //@line 168 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 168 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $45=$lim; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 var $46=((($45)+(1))|0); //@line 167 "lib/lua-5.2.3/src/ldo.c"
 $lim=$46; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 167 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $48=$2; //@line 169 "lib/lua-5.2.3/src/ldo.c"
 var $49=$1; //@line 169 "lib/lua-5.2.3/src/ldo.c"
 var $50=(($49+32)|0); //@line 169 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($50)>>2)]=$48; //@line 169 "lib/lua-5.2.3/src/ldo.c"
 var $51=$1; //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $52=(($51+28)|0); //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $53=HEAP32[(($52)>>2)]; //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $54=$2; //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($53+($54<<4))|0); //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $56=((($55)-(80))|0); //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $57=$1; //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($57+24)|0); //@line 170 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($58)>>2)]=$56; //@line 170 "lib/lua-5.2.3/src/ldo.c"
 var $59=$1; //@line 171 "lib/lua-5.2.3/src/ldo.c"
 var $60=$oldstack; //@line 171 "lib/lua-5.2.3/src/ldo.c"
 _correctstack($59,$60); //@line 171 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return; //@line 172 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _correctstack($L,$oldstack){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $ci;
 var $up;
 $1=$L;
 $2=$oldstack;
 var $3=$1; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+8)|0); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $5=HEAP32[(($4)>>2)]; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $6=$2; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $7=$5; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $8=$6; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $9=((($7)-($8))|0); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $10=(((($9|0))/(16))&-1); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $11=$1; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($11+28)|0); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $13=HEAP32[(($12)>>2)]; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($13+($10<<4))|0); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $15=$1; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15+8)|0); //@line 145 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($16)>>2)]=$14; //@line 145 "lib/lua-5.2.3/src/ldo.c"
 var $17=$1; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $18=(($17+56)|0); //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $19=HEAP32[(($18)>>2)]; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 $up=$19; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 label=2;break; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $21=$up; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $22=($21|0)!=0; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 if($22){label=3;break;}else{label=5;break;} //@line 146 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $24=$up; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $25=$24; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $26=(($25+8)|0); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $27=HEAP32[(($26)>>2)]; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $28=$2; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $29=$27; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $30=$28; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $31=((($29)-($30))|0); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $32=(((($31|0))/(16))&-1); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $33=$1; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $34=(($33+28)|0); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $35=HEAP32[(($34)>>2)]; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($35+($32<<4))|0); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $37=$up; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $38=$37; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 var $39=(($38+8)|0); //@line 147 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($39)>>2)]=$36; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 147 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $41=$up; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $42=$41; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $43=(($42)|0); //@line 146 "lib/lua-5.2.3/src/ldo.c"
 var $44=HEAP32[(($43)>>2)]; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 $up=$44; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 label=2;break; //@line 146 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $46=$1; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 var $47=(($46+16)|0); //@line 148 "lib/lua-5.2.3/src/ldo.c"
 var $48=HEAP32[(($47)>>2)]; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 $ci=$48; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $50=$ci; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 var $51=($50|0)!=0; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 if($51){label=7;break;}else{label=11;break;} //@line 148 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $53=$ci; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $54=(($53+4)|0); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $55=HEAP32[(($54)>>2)]; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $56=$2; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $57=$55; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $58=$56; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $59=((($57)-($58))|0); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $60=(((($59|0))/(16))&-1); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $61=$1; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $62=(($61+28)|0); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $63=HEAP32[(($62)>>2)]; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $64=(($63+($60<<4))|0); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $65=$ci; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $66=(($65+4)|0); //@line 149 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($66)>>2)]=$64; //@line 149 "lib/lua-5.2.3/src/ldo.c"
 var $67=$ci; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $68=(($67)|0); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $69=HEAP32[(($68)>>2)]; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $70=$2; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $71=$69; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $72=$70; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $73=((($71)-($72))|0); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $74=(((($73|0))/(16))&-1); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $75=$1; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $76=(($75+28)|0); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $77=HEAP32[(($76)>>2)]; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $78=(($77+($74<<4))|0); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $79=$ci; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $80=(($79)|0); //@line 150 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($80)>>2)]=$78; //@line 150 "lib/lua-5.2.3/src/ldo.c"
 var $81=$ci; //@line 151 "lib/lua-5.2.3/src/ldo.c"
 var $82=(($81+18)|0); //@line 151 "lib/lua-5.2.3/src/ldo.c"
 var $83=HEAP8[($82)]; //@line 151 "lib/lua-5.2.3/src/ldo.c"
 var $84=($83&255); //@line 151 "lib/lua-5.2.3/src/ldo.c"
 var $85=$84&1; //@line 151 "lib/lua-5.2.3/src/ldo.c"
 var $86=($85|0)!=0; //@line 151 "lib/lua-5.2.3/src/ldo.c"
 if($86){label=8;break;}else{label=9;break;} //@line 151 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $88=$ci; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $89=(($88+24)|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $90=$89; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $91=(($90)|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $92=HEAP32[(($91)>>2)]; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $93=$2; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $94=$92; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $95=$93; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $96=((($94)-($95))|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $97=(((($96|0))/(16))&-1); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $98=$1; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $99=(($98+28)|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $100=HEAP32[(($99)>>2)]; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $101=(($100+($97<<4))|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $102=$ci; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $103=(($102+24)|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $104=$103; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 var $105=(($104)|0); //@line 152 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($105)>>2)]=$101; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 label=9;break; //@line 152 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 label=10;break; //@line 153 "lib/lua-5.2.3/src/ldo.c"
 case 10: 
 var $108=$ci; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 var $109=(($108+8)|0); //@line 148 "lib/lua-5.2.3/src/ldo.c"
 var $110=HEAP32[(($109)>>2)]; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 $ci=$110; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 148 "lib/lua-5.2.3/src/ldo.c"
 case 11: 
 STACKTOP=sp;return; //@line 154 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_growstack($L,$n){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $size;
 var $needed;
 var $newsize;
 $1=$L;
 $2=$n;
 var $3=$1; //@line 176 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+32)|0); //@line 176 "lib/lua-5.2.3/src/ldo.c"
 var $5=HEAP32[(($4)>>2)]; //@line 176 "lib/lua-5.2.3/src/ldo.c"
 $size=$5; //@line 176 "lib/lua-5.2.3/src/ldo.c"
 var $6=$size; //@line 177 "lib/lua-5.2.3/src/ldo.c"
 var $7=($6|0)>1000000; //@line 177 "lib/lua-5.2.3/src/ldo.c"
 if($7){label=2;break;}else{label=3;break;} //@line 177 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $9=$1; //@line 178 "lib/lua-5.2.3/src/ldo.c"
 _luaD_throw($9,6); //@line 178 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 178 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $11=$1; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($11+8)|0); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $13=HEAP32[(($12)>>2)]; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $14=$1; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $15=(($14+28)|0); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $16=HEAP32[(($15)>>2)]; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $17=$13; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $18=$16; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $19=((($17)-($18))|0); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $20=(((($19|0))/(16))&-1); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $21=$2; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $22=((($20)+($21))|0); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $23=((($22)+(5))|0); //@line 180 "lib/lua-5.2.3/src/ldo.c"
 $needed=$23; //@line 180 "lib/lua-5.2.3/src/ldo.c"
 var $24=$size; //@line 181 "lib/lua-5.2.3/src/ldo.c"
 var $25=($24<<1); //@line 181 "lib/lua-5.2.3/src/ldo.c"
 $newsize=$25; //@line 181 "lib/lua-5.2.3/src/ldo.c"
 var $26=$newsize; //@line 182 "lib/lua-5.2.3/src/ldo.c"
 var $27=($26|0)>1000000; //@line 182 "lib/lua-5.2.3/src/ldo.c"
 if($27){label=4;break;}else{label=5;break;} //@line 182 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 $newsize=1000000; //@line 182 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 182 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $30=$newsize; //@line 183 "lib/lua-5.2.3/src/ldo.c"
 var $31=$needed; //@line 183 "lib/lua-5.2.3/src/ldo.c"
 var $32=($30|0)<($31|0); //@line 183 "lib/lua-5.2.3/src/ldo.c"
 if($32){label=6;break;}else{label=7;break;} //@line 183 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $34=$needed; //@line 183 "lib/lua-5.2.3/src/ldo.c"
 $newsize=$34; //@line 183 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 183 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $36=$newsize; //@line 184 "lib/lua-5.2.3/src/ldo.c"
 var $37=($36|0)>1000000; //@line 184 "lib/lua-5.2.3/src/ldo.c"
 if($37){label=8;break;}else{label=9;break;} //@line 184 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $39=$1; //@line 185 "lib/lua-5.2.3/src/ldo.c"
 _luaD_reallocstack($39,1000200); //@line 185 "lib/lua-5.2.3/src/ldo.c"
 var $40=$1; //@line 186 "lib/lua-5.2.3/src/ldo.c"
 _luaG_runerror($40,14472,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 186 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 186 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 var $42=$1; //@line 189 "lib/lua-5.2.3/src/ldo.c"
 var $43=$newsize; //@line 189 "lib/lua-5.2.3/src/ldo.c"
 _luaD_reallocstack($42,$43); //@line 189 "lib/lua-5.2.3/src/ldo.c"
 label=10;break;
 case 10: 
 label=11;break;
 case 11: 
 STACKTOP=sp;return; //@line 191 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_shrinkstack($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $inuse;
 var $goodsize;
 $1=$L;
 var $2=$1; //@line 206 "lib/lua-5.2.3/src/ldo.c"
 var $3=_stackinuse($2); //@line 206 "lib/lua-5.2.3/src/ldo.c"
 $inuse=$3; //@line 206 "lib/lua-5.2.3/src/ldo.c"
 var $4=$inuse; //@line 207 "lib/lua-5.2.3/src/ldo.c"
 var $5=$inuse; //@line 207 "lib/lua-5.2.3/src/ldo.c"
 var $6=(((($5|0))/(8))&-1); //@line 207 "lib/lua-5.2.3/src/ldo.c"
 var $7=((($4)+($6))|0); //@line 207 "lib/lua-5.2.3/src/ldo.c"
 var $8=((($7)+(10))|0); //@line 207 "lib/lua-5.2.3/src/ldo.c"
 $goodsize=$8; //@line 207 "lib/lua-5.2.3/src/ldo.c"
 var $9=$goodsize; //@line 208 "lib/lua-5.2.3/src/ldo.c"
 var $10=($9|0)>1000000; //@line 208 "lib/lua-5.2.3/src/ldo.c"
 if($10){label=2;break;}else{label=3;break;} //@line 208 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 $goodsize=1000000; //@line 208 "lib/lua-5.2.3/src/ldo.c"
 label=3;break; //@line 208 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $13=$inuse; //@line 209 "lib/lua-5.2.3/src/ldo.c"
 var $14=($13|0)>1000000; //@line 209 "lib/lua-5.2.3/src/ldo.c"
 if($14){label=5;break;}else{label=4;break;} //@line 209 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $16=$goodsize; //@line 209 "lib/lua-5.2.3/src/ldo.c"
 var $17=$1; //@line 209 "lib/lua-5.2.3/src/ldo.c"
 var $18=(($17+32)|0); //@line 209 "lib/lua-5.2.3/src/ldo.c"
 var $19=HEAP32[(($18)>>2)]; //@line 209 "lib/lua-5.2.3/src/ldo.c"
 var $20=($16|0)>=($19|0); //@line 209 "lib/lua-5.2.3/src/ldo.c"
 if($20){label=5;break;}else{label=6;break;} //@line 209 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 label=7;break; //@line 211 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $23=$1; //@line 213 "lib/lua-5.2.3/src/ldo.c"
 var $24=$goodsize; //@line 213 "lib/lua-5.2.3/src/ldo.c"
 _luaD_reallocstack($23,$24); //@line 213 "lib/lua-5.2.3/src/ldo.c"
 label=7;break;
 case 7: 
 STACKTOP=sp;return; //@line 214 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _stackinuse($L){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $ci;
 var $lim;
 $1=$L;
 var $2=$1; //@line 196 "lib/lua-5.2.3/src/ldo.c"
 var $3=(($2+8)|0); //@line 196 "lib/lua-5.2.3/src/ldo.c"
 var $4=HEAP32[(($3)>>2)]; //@line 196 "lib/lua-5.2.3/src/ldo.c"
 $lim=$4; //@line 196 "lib/lua-5.2.3/src/ldo.c"
 var $5=$1; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 var $6=(($5+16)|0); //@line 197 "lib/lua-5.2.3/src/ldo.c"
 var $7=HEAP32[(($6)>>2)]; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 $ci=$7; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 label=2;break; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $9=$ci; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 var $10=($9|0)!=0; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 if($10){label=3;break;}else{label=7;break;} //@line 197 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $12=$lim; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $13=$ci; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($13+4)|0); //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $15=HEAP32[(($14)>>2)]; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $16=($12>>>0)<($15>>>0); //@line 199 "lib/lua-5.2.3/src/ldo.c"
 if($16){label=4;break;}else{label=5;break;} //@line 199 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $18=$ci; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $19=(($18+4)|0); //@line 199 "lib/lua-5.2.3/src/ldo.c"
 var $20=HEAP32[(($19)>>2)]; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 $lim=$20; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 199 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 label=6;break; //@line 200 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $23=$ci; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($23+8)|0); //@line 197 "lib/lua-5.2.3/src/ldo.c"
 var $25=HEAP32[(($24)>>2)]; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 $ci=$25; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 label=2;break; //@line 197 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $27=$lim; //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $28=$1; //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $29=(($28+28)|0); //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $30=HEAP32[(($29)>>2)]; //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $31=$27; //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $32=$30; //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $33=((($31)-($32))|0); //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $34=(((($33|0))/(16))&-1); //@line 201 "lib/lua-5.2.3/src/ldo.c"
 var $35=((($34)+(1))|0); //@line 201 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $35; //@line 201 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_hook($L,$event,$line){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $hook;
 var $ci;
 var $top;
 var $ci_top;
 var $ar=sp;
 $1=$L;
 $2=$event;
 $3=$line;
 var $4=$1; //@line 218 "lib/lua-5.2.3/src/ldo.c"
 var $5=(($4+52)|0); //@line 218 "lib/lua-5.2.3/src/ldo.c"
 var $6=HEAP32[(($5)>>2)]; //@line 218 "lib/lua-5.2.3/src/ldo.c"
 $hook=$6; //@line 218 "lib/lua-5.2.3/src/ldo.c"
 var $7=$hook; //@line 219 "lib/lua-5.2.3/src/ldo.c"
 var $8=($7|0)!=0; //@line 219 "lib/lua-5.2.3/src/ldo.c"
 if($8){label=2;break;}else{label=7;break;} //@line 219 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $10=$1; //@line 219 "lib/lua-5.2.3/src/ldo.c"
 var $11=(($10+41)|0); //@line 219 "lib/lua-5.2.3/src/ldo.c"
 var $12=HEAP8[($11)]; //@line 219 "lib/lua-5.2.3/src/ldo.c"
 var $13=($12&255); //@line 219 "lib/lua-5.2.3/src/ldo.c"
 var $14=($13|0)!=0; //@line 219 "lib/lua-5.2.3/src/ldo.c"
 if($14){label=3;break;}else{label=7;break;} //@line 219 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $16=$1; //@line 220 "lib/lua-5.2.3/src/ldo.c"
 var $17=(($16+16)|0); //@line 220 "lib/lua-5.2.3/src/ldo.c"
 var $18=HEAP32[(($17)>>2)]; //@line 220 "lib/lua-5.2.3/src/ldo.c"
 $ci=$18; //@line 220 "lib/lua-5.2.3/src/ldo.c"
 var $19=$1; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19+8)|0); //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $21=HEAP32[(($20)>>2)]; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $22=$21; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $23=$1; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($23+28)|0); //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $25=HEAP32[(($24)>>2)]; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $26=$25; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $27=$22; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $28=$26; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $29=((($27)-($28))|0); //@line 221 "lib/lua-5.2.3/src/ldo.c"
 $top=$29; //@line 221 "lib/lua-5.2.3/src/ldo.c"
 var $30=$ci; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $31=(($30+4)|0); //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $32=HEAP32[(($31)>>2)]; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $33=$32; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $34=$1; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $35=(($34+28)|0); //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $36=HEAP32[(($35)>>2)]; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $37=$36; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $38=$33; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $39=$37; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $40=((($38)-($39))|0); //@line 222 "lib/lua-5.2.3/src/ldo.c"
 $ci_top=$40; //@line 222 "lib/lua-5.2.3/src/ldo.c"
 var $41=$2; //@line 224 "lib/lua-5.2.3/src/ldo.c"
 var $42=(($ar)|0); //@line 224 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($42)>>2)]=$41; //@line 224 "lib/lua-5.2.3/src/ldo.c"
 var $43=$3; //@line 225 "lib/lua-5.2.3/src/ldo.c"
 var $44=(($ar+20)|0); //@line 225 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($44)>>2)]=$43; //@line 225 "lib/lua-5.2.3/src/ldo.c"
 var $45=$ci; //@line 226 "lib/lua-5.2.3/src/ldo.c"
 var $46=(($ar+96)|0); //@line 226 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($46)>>2)]=$45; //@line 226 "lib/lua-5.2.3/src/ldo.c"
 var $47=$1; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $48=(($47+24)|0); //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $49=HEAP32[(($48)>>2)]; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $50=$1; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+8)|0); //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $52=HEAP32[(($51)>>2)]; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $53=$49; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $54=$52; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $55=((($53)-($54))|0); //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $56=(((($55|0))/(16))&-1); //@line 227 "lib/lua-5.2.3/src/ldo.c"
 var $57=($56|0)<=20; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 if($57){label=4;break;}else{label=5;break;} //@line 227 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $59=$1; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 _luaD_growstack($59,20); //@line 227 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 227 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 label=6;break;
 case 6: 
 var $62=$1; //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $63=(($62+8)|0); //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $64=HEAP32[(($63)>>2)]; //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $65=(($64+320)|0); //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $66=$ci; //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $67=(($66+4)|0); //@line 228 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($67)>>2)]=$65; //@line 228 "lib/lua-5.2.3/src/ldo.c"
 var $68=$1; //@line 230 "lib/lua-5.2.3/src/ldo.c"
 var $69=(($68+41)|0); //@line 230 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($69)]=0; //@line 230 "lib/lua-5.2.3/src/ldo.c"
 var $70=$ci; //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $71=(($70+18)|0); //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $72=HEAP8[($71)]; //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $73=($72&255); //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $74=$73|2; //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $75=(($74)&255); //@line 231 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($71)]=$75; //@line 231 "lib/lua-5.2.3/src/ldo.c"
 var $76=$hook; //@line 233 "lib/lua-5.2.3/src/ldo.c"
 var $77=$1; //@line 233 "lib/lua-5.2.3/src/ldo.c"
 FUNCTION_TABLE[$76]($77,$ar); //@line 233 "lib/lua-5.2.3/src/ldo.c"
 var $78=$1; //@line 236 "lib/lua-5.2.3/src/ldo.c"
 var $79=(($78+41)|0); //@line 236 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($79)]=1; //@line 236 "lib/lua-5.2.3/src/ldo.c"
 var $80=$1; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $81=(($80+28)|0); //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $82=HEAP32[(($81)>>2)]; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $83=$82; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $84=$ci_top; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $85=(($83+$84)|0); //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $86=$85; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $87=$ci; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $88=(($87+4)|0); //@line 237 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($88)>>2)]=$86; //@line 237 "lib/lua-5.2.3/src/ldo.c"
 var $89=$1; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $90=(($89+28)|0); //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $91=HEAP32[(($90)>>2)]; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $92=$91; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $93=$top; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $94=(($92+$93)|0); //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $95=$94; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $96=$1; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $97=(($96+8)|0); //@line 238 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($97)>>2)]=$95; //@line 238 "lib/lua-5.2.3/src/ldo.c"
 var $98=$ci; //@line 239 "lib/lua-5.2.3/src/ldo.c"
 var $99=(($98+18)|0); //@line 239 "lib/lua-5.2.3/src/ldo.c"
 var $100=HEAP8[($99)]; //@line 239 "lib/lua-5.2.3/src/ldo.c"
 var $101=($100&255); //@line 239 "lib/lua-5.2.3/src/ldo.c"
 var $102=$101&-3; //@line 239 "lib/lua-5.2.3/src/ldo.c"
 var $103=(($102)&255); //@line 239 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($99)]=$103; //@line 239 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 240 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 STACKTOP=sp;return; //@line 241 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_precall($L,$func,$nresults){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $f;
 var $ci;
 var $n;
 var $funcr;
 var $base;
 var $p;
 $2=$L;
 $3=$func;
 $4=$nresults;
 var $5=$3; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $6=$5; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $7=$2; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $8=(($7+28)|0); //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $9=HEAP32[(($8)>>2)]; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $10=$9; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $11=$6; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $12=$10; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $13=((($11)-($12))|0); //@line 300 "lib/lua-5.2.3/src/ldo.c"
 $funcr=$13; //@line 300 "lib/lua-5.2.3/src/ldo.c"
 var $14=$3; //@line 301 "lib/lua-5.2.3/src/ldo.c"
 var $15=(($14+8)|0); //@line 301 "lib/lua-5.2.3/src/ldo.c"
 var $16=HEAP32[(($15)>>2)]; //@line 301 "lib/lua-5.2.3/src/ldo.c"
 var $17=$16&63; //@line 301 "lib/lua-5.2.3/src/ldo.c"
 if(($17|0)==6){ label=15;break;}else if(($17|0)==22){ label=2;break;}else if(($17|0)==38){ label=3;break;}else{label=33;break;}
 case 2: 
 var $19=$3; //@line 303 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19)|0); //@line 303 "lib/lua-5.2.3/src/ldo.c"
 var $21=$20; //@line 303 "lib/lua-5.2.3/src/ldo.c"
 var $22=HEAP32[(($21)>>2)]; //@line 303 "lib/lua-5.2.3/src/ldo.c"
 $f=$22; //@line 303 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 304 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $24=$3; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $25=(($24)|0); //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $26=$25; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $27=HEAP32[(($26)>>2)]; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $28=$27; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $29=$28; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $30=(($29+12)|0); //@line 306 "lib/lua-5.2.3/src/ldo.c"
 var $31=HEAP32[(($30)>>2)]; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 $f=$31; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 306 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $33=$2; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $34=(($33+24)|0); //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $35=HEAP32[(($34)>>2)]; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $36=$2; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $37=(($36+8)|0); //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $38=HEAP32[(($37)>>2)]; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $39=$35; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $40=$38; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $41=((($39)-($40))|0); //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $42=(((($41|0))/(16))&-1); //@line 308 "lib/lua-5.2.3/src/ldo.c"
 var $43=($42|0)<=20; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 if($43){label=5;break;}else{label=6;break;} //@line 308 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $45=$2; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 _luaD_growstack($45,20); //@line 308 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 308 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 label=7;break;
 case 7: 
 var $48=$2; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $49=(($48+16)|0); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $50=HEAP32[(($49)>>2)]; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+12)|0); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $52=HEAP32[(($51)>>2)]; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $53=($52|0)!=0; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 if($53){label=8;break;}else{label=9;break;} //@line 309 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $55=$2; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $56=(($55+16)|0); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $57=HEAP32[(($56)>>2)]; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($57+12)|0); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $59=HEAP32[(($58)>>2)]; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $64=$59;label=10;break; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 var $61=$2; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $62=_luaE_extendCI($61); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $64=$62;label=10;break; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 case 10: 
 var $64; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $65=$2; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $66=(($65+16)|0); //@line 309 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($66)>>2)]=$64; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 $ci=$64; //@line 309 "lib/lua-5.2.3/src/ldo.c"
 var $67=$4; //@line 310 "lib/lua-5.2.3/src/ldo.c"
 var $68=(($67)&65535); //@line 310 "lib/lua-5.2.3/src/ldo.c"
 var $69=$ci; //@line 310 "lib/lua-5.2.3/src/ldo.c"
 var $70=(($69+16)|0); //@line 310 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($70)>>1)]=$68; //@line 310 "lib/lua-5.2.3/src/ldo.c"
 var $71=$2; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $72=(($71+28)|0); //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $73=HEAP32[(($72)>>2)]; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $74=$73; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $75=$funcr; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $76=(($74+$75)|0); //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $77=$76; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $78=$ci; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $79=(($78)|0); //@line 311 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($79)>>2)]=$77; //@line 311 "lib/lua-5.2.3/src/ldo.c"
 var $80=$2; //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $81=(($80+8)|0); //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $82=HEAP32[(($81)>>2)]; //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $83=(($82+320)|0); //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $84=$ci; //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $85=(($84+4)|0); //@line 312 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($85)>>2)]=$83; //@line 312 "lib/lua-5.2.3/src/ldo.c"
 var $86=$ci; //@line 314 "lib/lua-5.2.3/src/ldo.c"
 var $87=(($86+18)|0); //@line 314 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($87)]=0; //@line 314 "lib/lua-5.2.3/src/ldo.c"
 var $88=$2; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 var $89=(($88+12)|0); //@line 315 "lib/lua-5.2.3/src/ldo.c"
 var $90=HEAP32[(($89)>>2)]; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 var $91=(($90+12)|0); //@line 315 "lib/lua-5.2.3/src/ldo.c"
 var $92=HEAP32[(($91)>>2)]; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 var $93=($92|0)>0; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 if($93){label=11;break;}else{label=12;break;} //@line 315 "lib/lua-5.2.3/src/ldo.c"
 case 11: 
 var $95=$2; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 _luaC_step($95); //@line 315 "lib/lua-5.2.3/src/ldo.c"
 label=12;break; //@line 315 "lib/lua-5.2.3/src/ldo.c"
 case 12: 
 var $97=$2; //@line 316 "lib/lua-5.2.3/src/ldo.c"
 var $98=(($97+40)|0); //@line 316 "lib/lua-5.2.3/src/ldo.c"
 var $99=HEAP8[($98)]; //@line 316 "lib/lua-5.2.3/src/ldo.c"
 var $100=($99&255); //@line 316 "lib/lua-5.2.3/src/ldo.c"
 var $101=$100&1; //@line 316 "lib/lua-5.2.3/src/ldo.c"
 var $102=($101|0)!=0; //@line 316 "lib/lua-5.2.3/src/ldo.c"
 if($102){label=13;break;}else{label=14;break;} //@line 316 "lib/lua-5.2.3/src/ldo.c"
 case 13: 
 var $104=$2; //@line 317 "lib/lua-5.2.3/src/ldo.c"
 _luaD_hook($104,0,-1); //@line 317 "lib/lua-5.2.3/src/ldo.c"
 label=14;break; //@line 317 "lib/lua-5.2.3/src/ldo.c"
 case 14: 
 var $106=$f; //@line 319 "lib/lua-5.2.3/src/ldo.c"
 var $107=$2; //@line 319 "lib/lua-5.2.3/src/ldo.c"
 var $108=FUNCTION_TABLE[$106]($107); //@line 319 "lib/lua-5.2.3/src/ldo.c"
 $n=$108; //@line 319 "lib/lua-5.2.3/src/ldo.c"
 var $109=$2; //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $110=$2; //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $111=(($110+8)|0); //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $112=HEAP32[(($111)>>2)]; //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $113=$n; //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $114=(((-$113))|0); //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $115=(($112+($114<<4))|0); //@line 322 "lib/lua-5.2.3/src/ldo.c"
 var $116=_luaD_poscall($109,$115); //@line 322 "lib/lua-5.2.3/src/ldo.c"
 $1=1; //@line 323 "lib/lua-5.2.3/src/ldo.c"
 label=34;break; //@line 323 "lib/lua-5.2.3/src/ldo.c"
 case 15: 
 var $118=$3; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $119=(($118)|0); //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $120=$119; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $121=HEAP32[(($120)>>2)]; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $122=$121; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $123=$122; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $124=(($123+12)|0); //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $125=HEAP32[(($124)>>2)]; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 $p=$125; //@line 327 "lib/lua-5.2.3/src/ldo.c"
 var $126=$2; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $127=(($126+8)|0); //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $128=HEAP32[(($127)>>2)]; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $129=$3; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $130=$128; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $131=$129; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $132=((($130)-($131))|0); //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $133=(((($132|0))/(16))&-1); //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $134=((($133)-(1))|0); //@line 328 "lib/lua-5.2.3/src/ldo.c"
 $n=$134; //@line 328 "lib/lua-5.2.3/src/ldo.c"
 var $135=$2; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $136=(($135+24)|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $137=HEAP32[(($136)>>2)]; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $138=$2; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $139=(($138+8)|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $140=HEAP32[(($139)>>2)]; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $141=$137; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $142=$140; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $143=((($141)-($142))|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $144=(((($143|0))/(16))&-1); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $145=$p; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $146=(($145+78)|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $147=HEAP8[($146)]; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $148=($147&255); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $149=($144|0)<=($148|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 if($149){label=16;break;}else{label=17;break;} //@line 329 "lib/lua-5.2.3/src/ldo.c"
 case 16: 
 var $151=$2; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $152=$p; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $153=(($152+78)|0); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $154=HEAP8[($153)]; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 var $155=($154&255); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 _luaD_growstack($151,$155); //@line 329 "lib/lua-5.2.3/src/ldo.c"
 label=18;break; //@line 329 "lib/lua-5.2.3/src/ldo.c"
 case 17: 
 label=18;break;
 case 18: 
 label=19;break; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 case 19: 
 var $159=$n; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $160=$p; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $161=(($160+76)|0); //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $162=HEAP8[($161)]; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $163=($162&255); //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $164=($159|0)<($163|0); //@line 330 "lib/lua-5.2.3/src/ldo.c"
 if($164){label=20;break;}else{label=22;break;} //@line 330 "lib/lua-5.2.3/src/ldo.c"
 case 20: 
 var $166=$2; //@line 331 "lib/lua-5.2.3/src/ldo.c"
 var $167=(($166+8)|0); //@line 331 "lib/lua-5.2.3/src/ldo.c"
 var $168=HEAP32[(($167)>>2)]; //@line 331 "lib/lua-5.2.3/src/ldo.c"
 var $169=(($168+16)|0); //@line 331 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($167)>>2)]=$169; //@line 331 "lib/lua-5.2.3/src/ldo.c"
 var $170=(($168+8)|0); //@line 331 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($170)>>2)]=0; //@line 331 "lib/lua-5.2.3/src/ldo.c"
 label=21;break; //@line 331 "lib/lua-5.2.3/src/ldo.c"
 case 21: 
 var $172=$n; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 var $173=((($172)+(1))|0); //@line 330 "lib/lua-5.2.3/src/ldo.c"
 $n=$173; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 label=19;break; //@line 330 "lib/lua-5.2.3/src/ldo.c"
 case 22: 
 var $175=$p; //@line 332 "lib/lua-5.2.3/src/ldo.c"
 var $176=(($175+77)|0); //@line 332 "lib/lua-5.2.3/src/ldo.c"
 var $177=HEAP8[($176)]; //@line 332 "lib/lua-5.2.3/src/ldo.c"
 var $178=(($177<<24)>>24)!=0; //@line 332 "lib/lua-5.2.3/src/ldo.c"
 if($178){label=24;break;}else{label=23;break;} //@line 332 "lib/lua-5.2.3/src/ldo.c"
 case 23: 
 var $180=$2; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $181=(($180+28)|0); //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $182=HEAP32[(($181)>>2)]; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $183=$182; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $184=$funcr; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $185=(($183+$184)|0); //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $186=$185; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 $3=$186; //@line 333 "lib/lua-5.2.3/src/ldo.c"
 var $187=$3; //@line 334 "lib/lua-5.2.3/src/ldo.c"
 var $188=(($187+16)|0); //@line 334 "lib/lua-5.2.3/src/ldo.c"
 $base=$188; //@line 334 "lib/lua-5.2.3/src/ldo.c"
 label=25;break; //@line 335 "lib/lua-5.2.3/src/ldo.c"
 case 24: 
 var $190=$2; //@line 337 "lib/lua-5.2.3/src/ldo.c"
 var $191=$p; //@line 337 "lib/lua-5.2.3/src/ldo.c"
 var $192=$n; //@line 337 "lib/lua-5.2.3/src/ldo.c"
 var $193=_adjust_varargs($190,$191,$192); //@line 337 "lib/lua-5.2.3/src/ldo.c"
 $base=$193; //@line 337 "lib/lua-5.2.3/src/ldo.c"
 var $194=$2; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $195=(($194+28)|0); //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $196=HEAP32[(($195)>>2)]; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $197=$196; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $198=$funcr; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $199=(($197+$198)|0); //@line 338 "lib/lua-5.2.3/src/ldo.c"
 var $200=$199; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 $3=$200; //@line 338 "lib/lua-5.2.3/src/ldo.c"
 label=25;break;
 case 25: 
 var $202=$2; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $203=(($202+16)|0); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $204=HEAP32[(($203)>>2)]; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $205=(($204+12)|0); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $206=HEAP32[(($205)>>2)]; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $207=($206|0)!=0; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 if($207){label=26;break;}else{label=27;break;} //@line 340 "lib/lua-5.2.3/src/ldo.c"
 case 26: 
 var $209=$2; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $210=(($209+16)|0); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $211=HEAP32[(($210)>>2)]; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $212=(($211+12)|0); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $213=HEAP32[(($212)>>2)]; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $218=$213;label=28;break; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 case 27: 
 var $215=$2; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $216=_luaE_extendCI($215); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $218=$216;label=28;break; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 case 28: 
 var $218; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $219=$2; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $220=(($219+16)|0); //@line 340 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($220)>>2)]=$218; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 $ci=$218; //@line 340 "lib/lua-5.2.3/src/ldo.c"
 var $221=$4; //@line 341 "lib/lua-5.2.3/src/ldo.c"
 var $222=(($221)&65535); //@line 341 "lib/lua-5.2.3/src/ldo.c"
 var $223=$ci; //@line 341 "lib/lua-5.2.3/src/ldo.c"
 var $224=(($223+16)|0); //@line 341 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($224)>>1)]=$222; //@line 341 "lib/lua-5.2.3/src/ldo.c"
 var $225=$3; //@line 342 "lib/lua-5.2.3/src/ldo.c"
 var $226=$ci; //@line 342 "lib/lua-5.2.3/src/ldo.c"
 var $227=(($226)|0); //@line 342 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($227)>>2)]=$225; //@line 342 "lib/lua-5.2.3/src/ldo.c"
 var $228=$base; //@line 343 "lib/lua-5.2.3/src/ldo.c"
 var $229=$ci; //@line 343 "lib/lua-5.2.3/src/ldo.c"
 var $230=(($229+24)|0); //@line 343 "lib/lua-5.2.3/src/ldo.c"
 var $231=$230; //@line 343 "lib/lua-5.2.3/src/ldo.c"
 var $232=(($231)|0); //@line 343 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($232)>>2)]=$228; //@line 343 "lib/lua-5.2.3/src/ldo.c"
 var $233=$base; //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $234=$p; //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $235=(($234+78)|0); //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $236=HEAP8[($235)]; //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $237=($236&255); //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $238=(($233+($237<<4))|0); //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $239=$ci; //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $240=(($239+4)|0); //@line 344 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($240)>>2)]=$238; //@line 344 "lib/lua-5.2.3/src/ldo.c"
 var $241=$p; //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $242=(($241+12)|0); //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $243=HEAP32[(($242)>>2)]; //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $244=$ci; //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $245=(($244+24)|0); //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $246=$245; //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $247=(($246+4)|0); //@line 346 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($247)>>2)]=$243; //@line 346 "lib/lua-5.2.3/src/ldo.c"
 var $248=$ci; //@line 347 "lib/lua-5.2.3/src/ldo.c"
 var $249=(($248+18)|0); //@line 347 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($249)]=1; //@line 347 "lib/lua-5.2.3/src/ldo.c"
 var $250=$ci; //@line 348 "lib/lua-5.2.3/src/ldo.c"
 var $251=(($250+4)|0); //@line 348 "lib/lua-5.2.3/src/ldo.c"
 var $252=HEAP32[(($251)>>2)]; //@line 348 "lib/lua-5.2.3/src/ldo.c"
 var $253=$2; //@line 348 "lib/lua-5.2.3/src/ldo.c"
 var $254=(($253+8)|0); //@line 348 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($254)>>2)]=$252; //@line 348 "lib/lua-5.2.3/src/ldo.c"
 var $255=$2; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 var $256=(($255+12)|0); //@line 349 "lib/lua-5.2.3/src/ldo.c"
 var $257=HEAP32[(($256)>>2)]; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 var $258=(($257+12)|0); //@line 349 "lib/lua-5.2.3/src/ldo.c"
 var $259=HEAP32[(($258)>>2)]; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 var $260=($259|0)>0; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 if($260){label=29;break;}else{label=30;break;} //@line 349 "lib/lua-5.2.3/src/ldo.c"
 case 29: 
 var $262=$2; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 _luaC_step($262); //@line 349 "lib/lua-5.2.3/src/ldo.c"
 label=30;break; //@line 349 "lib/lua-5.2.3/src/ldo.c"
 case 30: 
 var $264=$2; //@line 350 "lib/lua-5.2.3/src/ldo.c"
 var $265=(($264+40)|0); //@line 350 "lib/lua-5.2.3/src/ldo.c"
 var $266=HEAP8[($265)]; //@line 350 "lib/lua-5.2.3/src/ldo.c"
 var $267=($266&255); //@line 350 "lib/lua-5.2.3/src/ldo.c"
 var $268=$267&1; //@line 350 "lib/lua-5.2.3/src/ldo.c"
 var $269=($268|0)!=0; //@line 350 "lib/lua-5.2.3/src/ldo.c"
 if($269){label=31;break;}else{label=32;break;} //@line 350 "lib/lua-5.2.3/src/ldo.c"
 case 31: 
 var $271=$2; //@line 351 "lib/lua-5.2.3/src/ldo.c"
 var $272=$ci; //@line 351 "lib/lua-5.2.3/src/ldo.c"
 _callhook($271,$272); //@line 351 "lib/lua-5.2.3/src/ldo.c"
 label=32;break; //@line 351 "lib/lua-5.2.3/src/ldo.c"
 case 32: 
 $1=0; //@line 352 "lib/lua-5.2.3/src/ldo.c"
 label=34;break; //@line 352 "lib/lua-5.2.3/src/ldo.c"
 case 33: 
 var $275=$2; //@line 355 "lib/lua-5.2.3/src/ldo.c"
 var $276=$3; //@line 355 "lib/lua-5.2.3/src/ldo.c"
 var $277=_tryfuncTM($275,$276); //@line 355 "lib/lua-5.2.3/src/ldo.c"
 $3=$277; //@line 355 "lib/lua-5.2.3/src/ldo.c"
 var $278=$2; //@line 356 "lib/lua-5.2.3/src/ldo.c"
 var $279=$3; //@line 356 "lib/lua-5.2.3/src/ldo.c"
 var $280=$4; //@line 356 "lib/lua-5.2.3/src/ldo.c"
 var $281=_luaD_precall($278,$279,$280); //@line 356 "lib/lua-5.2.3/src/ldo.c"
 $1=$281; //@line 356 "lib/lua-5.2.3/src/ldo.c"
 label=34;break; //@line 356 "lib/lua-5.2.3/src/ldo.c"
 case 34: 
 var $283=$1; //@line 359 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $283; //@line 359 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_poscall($L,$firstResult){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $res;
 var $wanted;
 var $i;
 var $ci;
 var $fr;
 var $io2;
 var $io1;
 $1=$L;
 $2=$firstResult;
 var $3=$1; //@line 365 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+16)|0); //@line 365 "lib/lua-5.2.3/src/ldo.c"
 var $5=HEAP32[(($4)>>2)]; //@line 365 "lib/lua-5.2.3/src/ldo.c"
 $ci=$5; //@line 365 "lib/lua-5.2.3/src/ldo.c"
 var $6=$1; //@line 366 "lib/lua-5.2.3/src/ldo.c"
 var $7=(($6+40)|0); //@line 366 "lib/lua-5.2.3/src/ldo.c"
 var $8=HEAP8[($7)]; //@line 366 "lib/lua-5.2.3/src/ldo.c"
 var $9=($8&255); //@line 366 "lib/lua-5.2.3/src/ldo.c"
 var $10=$9&6; //@line 366 "lib/lua-5.2.3/src/ldo.c"
 var $11=($10|0)!=0; //@line 366 "lib/lua-5.2.3/src/ldo.c"
 if($11){label=2;break;}else{label=5;break;} //@line 366 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $13=$1; //@line 367 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($13+40)|0); //@line 367 "lib/lua-5.2.3/src/ldo.c"
 var $15=HEAP8[($14)]; //@line 367 "lib/lua-5.2.3/src/ldo.c"
 var $16=($15&255); //@line 367 "lib/lua-5.2.3/src/ldo.c"
 var $17=$16&2; //@line 367 "lib/lua-5.2.3/src/ldo.c"
 var $18=($17|0)!=0; //@line 367 "lib/lua-5.2.3/src/ldo.c"
 if($18){label=3;break;}else{label=4;break;} //@line 367 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $20=$2; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $21=$20; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $22=$1; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $23=(($22+28)|0); //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $24=HEAP32[(($23)>>2)]; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $25=$24; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $26=$21; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $27=$25; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $28=((($26)-($27))|0); //@line 368 "lib/lua-5.2.3/src/ldo.c"
 $fr=$28; //@line 368 "lib/lua-5.2.3/src/ldo.c"
 var $29=$1; //@line 369 "lib/lua-5.2.3/src/ldo.c"
 _luaD_hook($29,1,-1); //@line 369 "lib/lua-5.2.3/src/ldo.c"
 var $30=$1; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $31=(($30+28)|0); //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $32=HEAP32[(($31)>>2)]; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $33=$32; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $34=$fr; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $35=(($33+$34)|0); //@line 370 "lib/lua-5.2.3/src/ldo.c"
 var $36=$35; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 $2=$36; //@line 370 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 371 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $38=$ci; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $39=(($38+8)|0); //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $40=HEAP32[(($39)>>2)]; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $41=(($40+24)|0); //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $42=$41; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $43=(($42+4)|0); //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $44=HEAP32[(($43)>>2)]; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $45=$1; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 var $46=(($45+20)|0); //@line 372 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($46)>>2)]=$44; //@line 372 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 373 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $48=$ci; //@line 374 "lib/lua-5.2.3/src/ldo.c"
 var $49=(($48)|0); //@line 374 "lib/lua-5.2.3/src/ldo.c"
 var $50=HEAP32[(($49)>>2)]; //@line 374 "lib/lua-5.2.3/src/ldo.c"
 $res=$50; //@line 374 "lib/lua-5.2.3/src/ldo.c"
 var $51=$ci; //@line 375 "lib/lua-5.2.3/src/ldo.c"
 var $52=(($51+16)|0); //@line 375 "lib/lua-5.2.3/src/ldo.c"
 var $53=HEAP16[(($52)>>1)]; //@line 375 "lib/lua-5.2.3/src/ldo.c"
 var $54=(($53<<16)>>16); //@line 375 "lib/lua-5.2.3/src/ldo.c"
 $wanted=$54; //@line 375 "lib/lua-5.2.3/src/ldo.c"
 var $55=$ci; //@line 376 "lib/lua-5.2.3/src/ldo.c"
 var $56=(($55+8)|0); //@line 376 "lib/lua-5.2.3/src/ldo.c"
 var $57=HEAP32[(($56)>>2)]; //@line 376 "lib/lua-5.2.3/src/ldo.c"
 $ci=$57; //@line 376 "lib/lua-5.2.3/src/ldo.c"
 var $58=$1; //@line 376 "lib/lua-5.2.3/src/ldo.c"
 var $59=(($58+16)|0); //@line 376 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($59)>>2)]=$57; //@line 376 "lib/lua-5.2.3/src/ldo.c"
 var $60=$wanted; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 $i=$60; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $62=$i; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $63=($62|0)!=0; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 if($63){label=7;break;}else{var $71=0;label=8;break;} //@line 378 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $65=$2; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $66=$1; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $67=(($66+8)|0); //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $68=HEAP32[(($67)>>2)]; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $69=($65>>>0)<($68>>>0); //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $71=$69;label=8;break;
 case 8: 
 var $71;
 if($71){label=9;break;}else{label=11;break;}
 case 9: 
 var $73=$2; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $74=(($73+16)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 $2=$74; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 $io2=$73; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $75=$res; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $76=(($75+16)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 $res=$76; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 $io1=$75; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $77=$io1; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $78=(($77)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $79=$io2; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $80=(($79)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $81=$78; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $82=$80; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($81)>>2)]=HEAP32[(($82)>>2)];HEAP32[((($81)+(4))>>2)]=HEAP32[((($82)+(4))>>2)]; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $83=$io2; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $84=(($83+8)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $85=HEAP32[(($84)>>2)]; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $86=$io1; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 var $87=(($86+8)|0); //@line 379 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($87)>>2)]=$85; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 label=10;break; //@line 379 "lib/lua-5.2.3/src/ldo.c"
 case 10: 
 var $89=$i; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 var $90=((($89)-(1))|0); //@line 378 "lib/lua-5.2.3/src/ldo.c"
 $i=$90; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 378 "lib/lua-5.2.3/src/ldo.c"
 case 11: 
 label=12;break; //@line 380 "lib/lua-5.2.3/src/ldo.c"
 case 12: 
 var $93=$i; //@line 380 "lib/lua-5.2.3/src/ldo.c"
 var $94=((($93)-(1))|0); //@line 380 "lib/lua-5.2.3/src/ldo.c"
 $i=$94; //@line 380 "lib/lua-5.2.3/src/ldo.c"
 var $95=($93|0)>0; //@line 380 "lib/lua-5.2.3/src/ldo.c"
 if($95){label=13;break;}else{label=14;break;} //@line 380 "lib/lua-5.2.3/src/ldo.c"
 case 13: 
 var $97=$res; //@line 381 "lib/lua-5.2.3/src/ldo.c"
 var $98=(($97+16)|0); //@line 381 "lib/lua-5.2.3/src/ldo.c"
 $res=$98; //@line 381 "lib/lua-5.2.3/src/ldo.c"
 var $99=(($97+8)|0); //@line 381 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($99)>>2)]=0; //@line 381 "lib/lua-5.2.3/src/ldo.c"
 label=12;break; //@line 381 "lib/lua-5.2.3/src/ldo.c"
 case 14: 
 var $101=$res; //@line 382 "lib/lua-5.2.3/src/ldo.c"
 var $102=$1; //@line 382 "lib/lua-5.2.3/src/ldo.c"
 var $103=(($102+8)|0); //@line 382 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($103)>>2)]=$101; //@line 382 "lib/lua-5.2.3/src/ldo.c"
 var $104=$wanted; //@line 383 "lib/lua-5.2.3/src/ldo.c"
 var $105=((($104)+(1))|0); //@line 383 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $105; //@line 383 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _adjust_varargs($L,$p,$actual){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $i;
 var $nfixargs;
 var $base;
 var $fixed;
 var $io2;
 var $io1;
 $1=$L;
 $2=$p;
 $3=$actual;
 var $4=$2; //@line 259 "lib/lua-5.2.3/src/ldo.c"
 var $5=(($4+76)|0); //@line 259 "lib/lua-5.2.3/src/ldo.c"
 var $6=HEAP8[($5)]; //@line 259 "lib/lua-5.2.3/src/ldo.c"
 var $7=($6&255); //@line 259 "lib/lua-5.2.3/src/ldo.c"
 $nfixargs=$7; //@line 259 "lib/lua-5.2.3/src/ldo.c"
 var $8=$1; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $9=(($8+24)|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $10=HEAP32[(($9)>>2)]; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $11=$1; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($11+8)|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $13=HEAP32[(($12)>>2)]; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $14=$10; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $15=$13; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $16=((($14)-($15))|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $17=(((($16|0))/(16))&-1); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $18=$2; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $19=(($18+78)|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $20=HEAP8[($19)]; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $21=($20&255); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $22=($17|0)<=($21|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 if($22){label=2;break;}else{label=3;break;} //@line 263 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $24=$1; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $25=$2; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $26=(($25+78)|0); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $27=HEAP8[($26)]; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 var $28=($27&255); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 _luaD_growstack($24,$28); //@line 263 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 263 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 label=4;break;
 case 4: 
 var $31=$1; //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $32=(($31+8)|0); //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $33=HEAP32[(($32)>>2)]; //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $34=$3; //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $35=(((-$34))|0); //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($33+($35<<4))|0); //@line 264 "lib/lua-5.2.3/src/ldo.c"
 $fixed=$36; //@line 264 "lib/lua-5.2.3/src/ldo.c"
 var $37=$1; //@line 265 "lib/lua-5.2.3/src/ldo.c"
 var $38=(($37+8)|0); //@line 265 "lib/lua-5.2.3/src/ldo.c"
 var $39=HEAP32[(($38)>>2)]; //@line 265 "lib/lua-5.2.3/src/ldo.c"
 $base=$39; //@line 265 "lib/lua-5.2.3/src/ldo.c"
 $i=0; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $41=$i; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 var $42=$nfixargs; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 var $43=($41|0)<($42|0); //@line 266 "lib/lua-5.2.3/src/ldo.c"
 if($43){label=6;break;}else{label=8;break;} //@line 266 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $45=$fixed; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $46=$i; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $47=(($45+($46<<4))|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 $io2=$47; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $48=$1; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $49=(($48+8)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $50=HEAP32[(($49)>>2)]; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+16)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($49)>>2)]=$51; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 $io1=$50; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $52=$io1; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $53=(($52)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $54=$io2; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($54)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $56=$53; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $57=$55; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($56)>>2)]=HEAP32[(($57)>>2)];HEAP32[((($56)+(4))>>2)]=HEAP32[((($57)+(4))>>2)]; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $58=$io2; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $59=(($58+8)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $60=HEAP32[(($59)>>2)]; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $61=$io1; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $62=(($61+8)|0); //@line 267 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($62)>>2)]=$60; //@line 267 "lib/lua-5.2.3/src/ldo.c"
 var $63=$fixed; //@line 268 "lib/lua-5.2.3/src/ldo.c"
 var $64=$i; //@line 268 "lib/lua-5.2.3/src/ldo.c"
 var $65=(($63+($64<<4))|0); //@line 268 "lib/lua-5.2.3/src/ldo.c"
 var $66=(($65+8)|0); //@line 268 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($66)>>2)]=0; //@line 268 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 269 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $68=$i; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 var $69=((($68)+(1))|0); //@line 266 "lib/lua-5.2.3/src/ldo.c"
 $i=$69; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 266 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $71=$base; //@line 270 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $71; //@line 270 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _callhook($L,$ci){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $hook;
 $1=$L;
 $2=$ci;
 $hook=0; //@line 245 "lib/lua-5.2.3/src/ldo.c"
 var $3=$2; //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $4=(($3+24)|0); //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $5=$4; //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $6=(($5+4)|0); //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $7=HEAP32[(($6)>>2)]; //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $8=(($7+4)|0); //@line 246 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($6)>>2)]=$8; //@line 246 "lib/lua-5.2.3/src/ldo.c"
 var $9=$2; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $10=(($9+8)|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $11=HEAP32[(($10)>>2)]; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($11+18)|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $13=HEAP8[($12)]; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $14=($13&255); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $15=$14&1; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $16=($15|0)!=0; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 if($16){label=2;break;}else{label=4;break;} //@line 247 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $18=$2; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $19=(($18+8)|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $20=HEAP32[(($19)>>2)]; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $21=(($20+24)|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $22=$21; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $23=(($22+4)|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $24=HEAP32[(($23)>>2)]; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $25=((($24)-(4))|0); //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $26=HEAP32[(($25)>>2)]; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $27=$26>>>0; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $28=$27&63; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 var $29=($28|0)==30; //@line 247 "lib/lua-5.2.3/src/ldo.c"
 if($29){label=3;break;}else{label=4;break;} //@line 247 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $31=$2; //@line 249 "lib/lua-5.2.3/src/ldo.c"
 var $32=(($31+18)|0); //@line 249 "lib/lua-5.2.3/src/ldo.c"
 var $33=HEAP8[($32)]; //@line 249 "lib/lua-5.2.3/src/ldo.c"
 var $34=($33&255); //@line 249 "lib/lua-5.2.3/src/ldo.c"
 var $35=$34|64; //@line 249 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($35)&255); //@line 249 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($32)]=$36; //@line 249 "lib/lua-5.2.3/src/ldo.c"
 $hook=4; //@line 250 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 251 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $38=$1; //@line 252 "lib/lua-5.2.3/src/ldo.c"
 var $39=$hook; //@line 252 "lib/lua-5.2.3/src/ldo.c"
 _luaD_hook($38,$39,-1); //@line 252 "lib/lua-5.2.3/src/ldo.c"
 var $40=$2; //@line 253 "lib/lua-5.2.3/src/ldo.c"
 var $41=(($40+24)|0); //@line 253 "lib/lua-5.2.3/src/ldo.c"
 var $42=$41; //@line 253 "lib/lua-5.2.3/src/ldo.c"
 var $43=(($42+4)|0); //@line 253 "lib/lua-5.2.3/src/ldo.c"
 var $44=HEAP32[(($43)>>2)]; //@line 253 "lib/lua-5.2.3/src/ldo.c"
 var $45=((($44)-(4))|0); //@line 253 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($43)>>2)]=$45; //@line 253 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return; //@line 254 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _tryfuncTM($L,$func){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $tm;
 var $p;
 var $funcr;
 var $io2;
 var $io1;
 var $io21;
 var $io12;
 $1=$L;
 $2=$func;
 var $3=$1; //@line 275 "lib/lua-5.2.3/src/ldo.c"
 var $4=$2; //@line 275 "lib/lua-5.2.3/src/ldo.c"
 var $5=_luaT_gettmbyobj($3,$4,16); //@line 275 "lib/lua-5.2.3/src/ldo.c"
 $tm=$5; //@line 275 "lib/lua-5.2.3/src/ldo.c"
 var $6=$2; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $7=$6; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $8=$1; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $9=(($8+28)|0); //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $10=HEAP32[(($9)>>2)]; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $11=$10; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $12=$7; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $13=$11; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $14=((($12)-($13))|0); //@line 277 "lib/lua-5.2.3/src/ldo.c"
 $funcr=$14; //@line 277 "lib/lua-5.2.3/src/ldo.c"
 var $15=$tm; //@line 278 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15+8)|0); //@line 278 "lib/lua-5.2.3/src/ldo.c"
 var $17=HEAP32[(($16)>>2)]; //@line 278 "lib/lua-5.2.3/src/ldo.c"
 var $18=$17&15; //@line 278 "lib/lua-5.2.3/src/ldo.c"
 var $19=($18|0)==6; //@line 278 "lib/lua-5.2.3/src/ldo.c"
 if($19){label=3;break;}else{label=2;break;} //@line 278 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $21=$1; //@line 279 "lib/lua-5.2.3/src/ldo.c"
 var $22=$2; //@line 279 "lib/lua-5.2.3/src/ldo.c"
 _luaG_typeerror($21,$22,15688); //@line 279 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 279 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $24=$1; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $25=(($24+8)|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $26=HEAP32[(($25)>>2)]; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 $p=$26; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $28=$p; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $29=$2; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $30=($28>>>0)>($29>>>0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 if($30){label=5;break;}else{label=7;break;} //@line 281 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $32=$p; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $33=((($32)-(16))|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 $io2=$33; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $34=$p; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 $io1=$34; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $35=$io1; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($35)|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $37=$io2; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $38=(($37)|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $39=$36; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $40=$38; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($39)>>2)]=HEAP32[(($40)>>2)];HEAP32[((($39)+(4))>>2)]=HEAP32[((($40)+(4))>>2)]; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $41=$io2; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $42=(($41+8)|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $43=HEAP32[(($42)>>2)]; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $44=$io1; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $45=(($44+8)|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($45)>>2)]=$43; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 label=6;break; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $47=$p; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 var $48=((($47)-(16))|0); //@line 281 "lib/lua-5.2.3/src/ldo.c"
 $p=$48; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 label=4;break; //@line 281 "lib/lua-5.2.3/src/ldo.c"
 case 7: 
 var $50=$1; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+8)|0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $52=HEAP32[(($51)>>2)]; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $53=(($52+16)|0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($51)>>2)]=$53; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $54=$1; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($54+24)|0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $56=HEAP32[(($55)>>2)]; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $57=$1; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($57+8)|0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $59=HEAP32[(($58)>>2)]; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $60=$56; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $61=$59; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $62=((($60)-($61))|0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $63=(((($62|0))/(16))&-1); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 var $64=($63|0)<=0; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 if($64){label=8;break;}else{label=9;break;} //@line 282 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $66=$1; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 _luaD_growstack($66,0); //@line 282 "lib/lua-5.2.3/src/ldo.c"
 label=10;break; //@line 282 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 label=10;break;
 case 10: 
 var $69=$1; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $70=(($69+28)|0); //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $71=HEAP32[(($70)>>2)]; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $72=$71; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $73=$funcr; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $74=(($72+$73)|0); //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $75=$74; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 $2=$75; //@line 283 "lib/lua-5.2.3/src/ldo.c"
 var $76=$tm; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 $io21=$76; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $77=$2; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 $io12=$77; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $78=$io12; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $79=(($78)|0); //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $80=$io21; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $81=(($80)|0); //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $82=$79; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $83=$81; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($82)>>2)]=HEAP32[(($83)>>2)];HEAP32[((($82)+(4))>>2)]=HEAP32[((($83)+(4))>>2)]; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $84=$io21; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $85=(($84+8)|0); //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $86=HEAP32[(($85)>>2)]; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $87=$io12; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $88=(($87+8)|0); //@line 284 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($88)>>2)]=$86; //@line 284 "lib/lua-5.2.3/src/ldo.c"
 var $89=$2; //@line 285 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $89; //@line 285 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_call($L,$func,$nResults,$allowyield){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $1=$L;
 $2=$func;
 $3=$nResults;
 $4=$allowyield;
 var $5=$1; //@line 394 "lib/lua-5.2.3/src/ldo.c"
 var $6=(($5+38)|0); //@line 394 "lib/lua-5.2.3/src/ldo.c"
 var $7=HEAP16[(($6)>>1)]; //@line 394 "lib/lua-5.2.3/src/ldo.c"
 var $8=((($7)+(1))&65535); //@line 394 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($6)>>1)]=$8; //@line 394 "lib/lua-5.2.3/src/ldo.c"
 var $9=($8&65535); //@line 394 "lib/lua-5.2.3/src/ldo.c"
 var $10=($9|0)>=200; //@line 394 "lib/lua-5.2.3/src/ldo.c"
 if($10){label=2;break;}else{label=8;break;} //@line 394 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $12=$1; //@line 395 "lib/lua-5.2.3/src/ldo.c"
 var $13=(($12+38)|0); //@line 395 "lib/lua-5.2.3/src/ldo.c"
 var $14=HEAP16[(($13)>>1)]; //@line 395 "lib/lua-5.2.3/src/ldo.c"
 var $15=($14&65535); //@line 395 "lib/lua-5.2.3/src/ldo.c"
 var $16=($15|0)==200; //@line 395 "lib/lua-5.2.3/src/ldo.c"
 if($16){label=3;break;}else{label=4;break;} //@line 395 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $18=$1; //@line 396 "lib/lua-5.2.3/src/ldo.c"
 _luaG_runerror($18,15520,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs)); STACKTOP=tempVarArgs; //@line 396 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 396 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $20=$1; //@line 397 "lib/lua-5.2.3/src/ldo.c"
 var $21=(($20+38)|0); //@line 397 "lib/lua-5.2.3/src/ldo.c"
 var $22=HEAP16[(($21)>>1)]; //@line 397 "lib/lua-5.2.3/src/ldo.c"
 var $23=($22&65535); //@line 397 "lib/lua-5.2.3/src/ldo.c"
 var $24=($23|0)>=225; //@line 397 "lib/lua-5.2.3/src/ldo.c"
 if($24){label=5;break;}else{label=6;break;} //@line 397 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $26=$1; //@line 398 "lib/lua-5.2.3/src/ldo.c"
 _luaD_throw($26,6); //@line 398 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 398 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 label=7;break;
 case 7: 
 label=8;break; //@line 399 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $30=$4; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 var $31=($30|0)!=0; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 if($31){label=10;break;}else{label=9;break;} //@line 400 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 var $33=$1; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 var $34=(($33+36)|0); //@line 400 "lib/lua-5.2.3/src/ldo.c"
 var $35=HEAP16[(($34)>>1)]; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 var $36=((($35)+(1))&65535); //@line 400 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($34)>>1)]=$36; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 label=10;break; //@line 400 "lib/lua-5.2.3/src/ldo.c"
 case 10: 
 var $38=$1; //@line 401 "lib/lua-5.2.3/src/ldo.c"
 var $39=$2; //@line 401 "lib/lua-5.2.3/src/ldo.c"
 var $40=$3; //@line 401 "lib/lua-5.2.3/src/ldo.c"
 var $41=_luaD_precall($38,$39,$40); //@line 401 "lib/lua-5.2.3/src/ldo.c"
 var $42=($41|0)!=0; //@line 401 "lib/lua-5.2.3/src/ldo.c"
 if($42){label=12;break;}else{label=11;break;} //@line 401 "lib/lua-5.2.3/src/ldo.c"
 case 11: 
 var $44=$1; //@line 402 "lib/lua-5.2.3/src/ldo.c"
 _luaV_execute($44); //@line 402 "lib/lua-5.2.3/src/ldo.c"
 label=12;break; //@line 402 "lib/lua-5.2.3/src/ldo.c"
 case 12: 
 var $46=$4; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 var $47=($46|0)!=0; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 if($47){label=14;break;}else{label=13;break;} //@line 403 "lib/lua-5.2.3/src/ldo.c"
 case 13: 
 var $49=$1; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 var $50=(($49+36)|0); //@line 403 "lib/lua-5.2.3/src/ldo.c"
 var $51=HEAP16[(($50)>>1)]; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 var $52=((($51)-(1))&65535); //@line 403 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($50)>>1)]=$52; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 label=14;break; //@line 403 "lib/lua-5.2.3/src/ldo.c"
 case 14: 
 var $54=$1; //@line 404 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($54+38)|0); //@line 404 "lib/lua-5.2.3/src/ldo.c"
 var $56=HEAP16[(($55)>>1)]; //@line 404 "lib/lua-5.2.3/src/ldo.c"
 var $57=((($56)-(1))&65535); //@line 404 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($55)>>1)]=$57; //@line 404 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return; //@line 405 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _seterrorobj($L,$errcode,$oldtop){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $io;
 var $x_;
 var $io1;
 var $x_2;
 var $io2;
 var $io13;
 $1=$L;
 $2=$errcode;
 $3=$oldtop;
 var $4=$2; //@line 85 "lib/lua-5.2.3/src/ldo.c"
 if(($4|0)==4){ label=2;break;}else if(($4|0)==6){ label=3;break;}else{label=4;break;}
 case 2: 
 var $6=$3; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 $io=$6; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $7=$1; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $8=(($7+12)|0); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $9=HEAP32[(($8)>>2)]; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $10=(($9+180)|0); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $11=HEAP32[(($10)>>2)]; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 $x_=$11; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $12=$x_; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $13=$12; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $14=$io; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $15=(($14)|0); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $16=$15; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($16)>>2)]=$13; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $17=$x_; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $18=$17; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $19=(($18+4)|0); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $20=HEAP8[($19)]; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $21=($20&255); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $22=$21|64; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $23=$io; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($23+8)|0); //@line 87 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($24)>>2)]=$22; //@line 87 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 88 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $26=$3; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 $io1=$26; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $27=$1; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $28=_luaS_newlstr($27,3416,23); //@line 91 "lib/lua-5.2.3/src/ldo.c"
 $x_2=$28; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $29=$x_2; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $30=$29; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $31=$io1; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $32=(($31)|0); //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $33=$32; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($33)>>2)]=$30; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $34=$x_2; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $35=$34; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($35+4)|0); //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $37=HEAP8[($36)]; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $38=($37&255); //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $39=$38|64; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $40=$io1; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 var $41=(($40+8)|0); //@line 91 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($41)>>2)]=$39; //@line 91 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 92 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $43=$1; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $44=(($43+8)|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $45=HEAP32[(($44)>>2)]; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $46=((($45)-(16))|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 $io2=$46; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $47=$3; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 $io13=$47; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $48=$io13; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $49=(($48)|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $50=$io2; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50)|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $52=$49; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $53=$51; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 assert(8 % 1 === 0);HEAP32[(($52)>>2)]=HEAP32[(($53)>>2)];HEAP32[((($52)+(4))>>2)]=HEAP32[((($53)+(4))>>2)]; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $54=$io2; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($54+8)|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $56=HEAP32[(($55)>>2)]; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $57=$io13; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($57+8)|0); //@line 95 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($58)>>2)]=$56; //@line 95 "lib/lua-5.2.3/src/ldo.c"
 label=5;break; //@line 96 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $60=$3; //@line 99 "lib/lua-5.2.3/src/ldo.c"
 var $61=(($60+16)|0); //@line 99 "lib/lua-5.2.3/src/ldo.c"
 var $62=$1; //@line 99 "lib/lua-5.2.3/src/ldo.c"
 var $63=(($62+8)|0); //@line 99 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($63)>>2)]=$61; //@line 99 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return; //@line 100 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_pcall($L,$func,$u,$old_top,$ef){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $status;
 var $old_ci;
 var $old_allowhooks;
 var $old_nny;
 var $old_errfunc;
 var $oldtop;
 $1=$L;
 $2=$func;
 $3=$u;
 $4=$old_top;
 $5=$ef;
 var $6=$1; //@line 598 "lib/lua-5.2.3/src/ldo.c"
 var $7=(($6+16)|0); //@line 598 "lib/lua-5.2.3/src/ldo.c"
 var $8=HEAP32[(($7)>>2)]; //@line 598 "lib/lua-5.2.3/src/ldo.c"
 $old_ci=$8; //@line 598 "lib/lua-5.2.3/src/ldo.c"
 var $9=$1; //@line 599 "lib/lua-5.2.3/src/ldo.c"
 var $10=(($9+41)|0); //@line 599 "lib/lua-5.2.3/src/ldo.c"
 var $11=HEAP8[($10)]; //@line 599 "lib/lua-5.2.3/src/ldo.c"
 $old_allowhooks=$11; //@line 599 "lib/lua-5.2.3/src/ldo.c"
 var $12=$1; //@line 600 "lib/lua-5.2.3/src/ldo.c"
 var $13=(($12+36)|0); //@line 600 "lib/lua-5.2.3/src/ldo.c"
 var $14=HEAP16[(($13)>>1)]; //@line 600 "lib/lua-5.2.3/src/ldo.c"
 $old_nny=$14; //@line 600 "lib/lua-5.2.3/src/ldo.c"
 var $15=$1; //@line 601 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15+68)|0); //@line 601 "lib/lua-5.2.3/src/ldo.c"
 var $17=HEAP32[(($16)>>2)]; //@line 601 "lib/lua-5.2.3/src/ldo.c"
 $old_errfunc=$17; //@line 601 "lib/lua-5.2.3/src/ldo.c"
 var $18=$5; //@line 602 "lib/lua-5.2.3/src/ldo.c"
 var $19=$1; //@line 602 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19+68)|0); //@line 602 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($20)>>2)]=$18; //@line 602 "lib/lua-5.2.3/src/ldo.c"
 var $21=$1; //@line 603 "lib/lua-5.2.3/src/ldo.c"
 var $22=$2; //@line 603 "lib/lua-5.2.3/src/ldo.c"
 var $23=$3; //@line 603 "lib/lua-5.2.3/src/ldo.c"
 var $24=_luaD_rawrunprotected($21,$22,$23); //@line 603 "lib/lua-5.2.3/src/ldo.c"
 $status=$24; //@line 603 "lib/lua-5.2.3/src/ldo.c"
 var $25=$status; //@line 604 "lib/lua-5.2.3/src/ldo.c"
 var $26=($25|0)!=0; //@line 604 "lib/lua-5.2.3/src/ldo.c"
 if($26){label=2;break;}else{label=3;break;} //@line 604 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $28=$1; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $29=(($28+28)|0); //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $30=HEAP32[(($29)>>2)]; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $31=$30; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $32=$4; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $33=(($31+$32)|0); //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $34=$33; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 $oldtop=$34; //@line 605 "lib/lua-5.2.3/src/ldo.c"
 var $35=$1; //@line 606 "lib/lua-5.2.3/src/ldo.c"
 var $36=$oldtop; //@line 606 "lib/lua-5.2.3/src/ldo.c"
 _luaF_close($35,$36); //@line 606 "lib/lua-5.2.3/src/ldo.c"
 var $37=$1; //@line 607 "lib/lua-5.2.3/src/ldo.c"
 var $38=$status; //@line 607 "lib/lua-5.2.3/src/ldo.c"
 var $39=$oldtop; //@line 607 "lib/lua-5.2.3/src/ldo.c"
 _seterrorobj($37,$38,$39); //@line 607 "lib/lua-5.2.3/src/ldo.c"
 var $40=$old_ci; //@line 608 "lib/lua-5.2.3/src/ldo.c"
 var $41=$1; //@line 608 "lib/lua-5.2.3/src/ldo.c"
 var $42=(($41+16)|0); //@line 608 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($42)>>2)]=$40; //@line 608 "lib/lua-5.2.3/src/ldo.c"
 var $43=$old_allowhooks; //@line 609 "lib/lua-5.2.3/src/ldo.c"
 var $44=$1; //@line 609 "lib/lua-5.2.3/src/ldo.c"
 var $45=(($44+41)|0); //@line 609 "lib/lua-5.2.3/src/ldo.c"
 HEAP8[($45)]=$43; //@line 609 "lib/lua-5.2.3/src/ldo.c"
 var $46=$old_nny; //@line 610 "lib/lua-5.2.3/src/ldo.c"
 var $47=$1; //@line 610 "lib/lua-5.2.3/src/ldo.c"
 var $48=(($47+36)|0); //@line 610 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($48)>>1)]=$46; //@line 610 "lib/lua-5.2.3/src/ldo.c"
 var $49=$1; //@line 611 "lib/lua-5.2.3/src/ldo.c"
 _luaD_shrinkstack($49); //@line 611 "lib/lua-5.2.3/src/ldo.c"
 label=3;break; //@line 612 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $51=$old_errfunc; //@line 613 "lib/lua-5.2.3/src/ldo.c"
 var $52=$1; //@line 613 "lib/lua-5.2.3/src/ldo.c"
 var $53=(($52+68)|0); //@line 613 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($53)>>2)]=$51; //@line 613 "lib/lua-5.2.3/src/ldo.c"
 var $54=$status; //@line 614 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $54; //@line 614 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaD_protectedparser($L,$z,$name,$mode){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $p=sp;
 var $status;
 $1=$L;
 $2=$z;
 $3=$name;
 $4=$mode;
 var $5=$1; //@line 666 "lib/lua-5.2.3/src/ldo.c"
 var $6=(($5+36)|0); //@line 666 "lib/lua-5.2.3/src/ldo.c"
 var $7=HEAP16[(($6)>>1)]; //@line 666 "lib/lua-5.2.3/src/ldo.c"
 var $8=((($7)+(1))&65535); //@line 666 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($6)>>1)]=$8; //@line 666 "lib/lua-5.2.3/src/ldo.c"
 var $9=$2; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $10=(($p)|0); //@line 667 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($10)>>2)]=$9; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $11=$3; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $12=(($p+56)|0); //@line 667 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($12)>>2)]=$11; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $13=$4; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($p+52)|0); //@line 667 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($14)>>2)]=$13; //@line 667 "lib/lua-5.2.3/src/ldo.c"
 var $15=(($p+16)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $17=(($16)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($17)>>2)]=0; //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $18=(($p+16)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $19=(($18)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $20=(($19+8)|0); //@line 668 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($20)>>2)]=0; //@line 668 "lib/lua-5.2.3/src/ldo.c"
 var $21=(($p+16)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $22=(($21+12)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $23=(($22)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($23)>>2)]=0; //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $24=(($p+16)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $25=(($24+12)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $26=(($25+8)|0); //@line 669 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($26)>>2)]=0; //@line 669 "lib/lua-5.2.3/src/ldo.c"
 var $27=(($p+16)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $28=(($27+24)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $29=(($28)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($29)>>2)]=0; //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $30=(($p+16)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $31=(($30+24)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $32=(($31+8)|0); //@line 670 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($32)>>2)]=0; //@line 670 "lib/lua-5.2.3/src/ldo.c"
 var $33=(($p+4)|0); //@line 671 "lib/lua-5.2.3/src/ldo.c"
 var $34=(($33)|0); //@line 671 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($34)>>2)]=0; //@line 671 "lib/lua-5.2.3/src/ldo.c"
 var $35=(($p+4)|0); //@line 671 "lib/lua-5.2.3/src/ldo.c"
 var $36=(($35+8)|0); //@line 671 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($36)>>2)]=0; //@line 671 "lib/lua-5.2.3/src/ldo.c"
 var $37=$1; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $38=$p; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $39=$1; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $40=(($39+8)|0); //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $41=HEAP32[(($40)>>2)]; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $42=$41; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $43=$1; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $44=(($43+28)|0); //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $45=HEAP32[(($44)>>2)]; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $46=$45; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $47=$42; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $48=$46; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $49=((($47)-($48))|0); //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $50=$1; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $51=(($50+68)|0); //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $52=HEAP32[(($51)>>2)]; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $53=_luaD_pcall($37,154,$38,$49,$52); //@line 672 "lib/lua-5.2.3/src/ldo.c"
 $status=$53; //@line 672 "lib/lua-5.2.3/src/ldo.c"
 var $54=$1; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $55=(($p+4)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $56=(($55)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $57=HEAP32[(($56)>>2)]; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $58=(($p+4)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $59=(($58+8)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $60=HEAP32[(($59)>>2)]; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $61=$60; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $62=_luaM_realloc_($54,$57,$61,0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $63=(($p+4)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $64=(($63)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($64)>>2)]=$62; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $65=(($p+4)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $66=(($65+8)|0); //@line 673 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($66)>>2)]=0; //@line 673 "lib/lua-5.2.3/src/ldo.c"
 var $67=$1; //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $68=(($p+16)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $69=(($68)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $70=(($69)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $71=HEAP32[(($70)>>2)]; //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $72=$71; //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $73=(($p+16)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $74=(($73)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $75=(($74+8)|0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $76=HEAP32[(($75)>>2)]; //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $77=($76<<1); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $78=_luaM_realloc_($67,$72,$77,0); //@line 674 "lib/lua-5.2.3/src/ldo.c"
 var $79=$1; //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $80=(($p+16)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $81=(($80+12)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $82=(($81)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $83=HEAP32[(($82)>>2)]; //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $84=$83; //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $85=(($p+16)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $86=(($85+12)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $87=(($86+8)|0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $88=HEAP32[(($87)>>2)]; //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $89=($88<<4); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $90=_luaM_realloc_($79,$84,$89,0); //@line 675 "lib/lua-5.2.3/src/ldo.c"
 var $91=$1; //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $92=(($p+16)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $93=(($92+24)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $94=(($93)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $95=HEAP32[(($94)>>2)]; //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $96=$95; //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $97=(($p+16)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $98=(($97+24)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $99=(($98+8)|0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $100=HEAP32[(($99)>>2)]; //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $101=($100<<4); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $102=_luaM_realloc_($91,$96,$101,0); //@line 676 "lib/lua-5.2.3/src/ldo.c"
 var $103=$1; //@line 677 "lib/lua-5.2.3/src/ldo.c"
 var $104=(($103+36)|0); //@line 677 "lib/lua-5.2.3/src/ldo.c"
 var $105=HEAP16[(($104)>>1)]; //@line 677 "lib/lua-5.2.3/src/ldo.c"
 var $106=((($105)-(1))&65535); //@line 677 "lib/lua-5.2.3/src/ldo.c"
 HEAP16[(($104)>>1)]=$106; //@line 677 "lib/lua-5.2.3/src/ldo.c"
 var $107=$status; //@line 678 "lib/lua-5.2.3/src/ldo.c"
 STACKTOP=sp;return $107; //@line 678 "lib/lua-5.2.3/src/ldo.c"
}


function _f_parser($L,$ud){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $cl;
 var $p;
 var $c;
 var $up;
 $1=$L;
 $2=$ud;
 var $3=$2; //@line 643 "lib/lua-5.2.3/src/ldo.c"
 var $4=$3; //@line 643 "lib/lua-5.2.3/src/ldo.c"
 $p=$4; //@line 643 "lib/lua-5.2.3/src/ldo.c"
 var $5=$p; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $6=(($5)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $7=HEAP32[(($6)>>2)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $8=(($7)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $9=HEAP32[(($8)>>2)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $10=((($9)-(1))|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($8)>>2)]=$10; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $11=($9>>>0)>0; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 if($11){label=2;break;}else{label=3;break;} //@line 644 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $13=$p; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $14=(($13)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $15=HEAP32[(($14)>>2)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $16=(($15+4)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $17=HEAP32[(($16)>>2)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $18=(($17+1)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($16)>>2)]=$18; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $19=HEAP8[($17)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $20=($19&255); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $27=$20;label=4;break; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $22=$p; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $23=(($22)|0); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $24=HEAP32[(($23)>>2)]; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $25=_luaZ_fill($24); //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $27=$25;label=4;break; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 var $27; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 $c=$27; //@line 644 "lib/lua-5.2.3/src/ldo.c"
 var $28=$c; //@line 645 "lib/lua-5.2.3/src/ldo.c"
 var $29=HEAP8[(7264)]; //@line 645 "lib/lua-5.2.3/src/ldo.c"
 var $30=(($29<<24)>>24); //@line 645 "lib/lua-5.2.3/src/ldo.c"
 var $31=($28|0)==($30|0); //@line 645 "lib/lua-5.2.3/src/ldo.c"
 if($31){label=5;break;}else{label=6;break;} //@line 645 "lib/lua-5.2.3/src/ldo.c"
 case 5: 
 var $33=$1; //@line 646 "lib/lua-5.2.3/src/ldo.c"
 var $34=$p; //@line 646 "lib/lua-5.2.3/src/ldo.c"
 var $35=(($34+52)|0); //@line 646 "lib/lua-5.2.3/src/ldo.c"
 var $36=HEAP32[(($35)>>2)]; //@line 646 "lib/lua-5.2.3/src/ldo.c"
 _checkmode($33,$36,5840); //@line 646 "lib/lua-5.2.3/src/ldo.c"
 var $37=$1; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $38=$p; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $39=(($38)|0); //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $40=HEAP32[(($39)>>2)]; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $41=$p; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $42=(($41+4)|0); //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $43=$p; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $44=(($43+56)|0); //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $45=HEAP32[(($44)>>2)]; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 var $46=_luaU_undump($37,$40,$42,$45); //@line 647 "lib/lua-5.2.3/src/ldo.c"
 $cl=$46; //@line 647 "lib/lua-5.2.3/src/ldo.c"
 label=7;break; //@line 648 "lib/lua-5.2.3/src/ldo.c"
 case 6: 
 var $48=$1; //@line 650 "lib/lua-5.2.3/src/ldo.c"
 var $49=$p; //@line 650 "lib/lua-5.2.3/src/ldo.c"
 var $50=(($49+52)|0); //@line 650 "lib/lua-5.2.3/src/ldo.c"
 var $51=HEAP32[(($50)>>2)]; //@line 650 "lib/lua-5.2.3/src/ldo.c"
 _checkmode($48,$51,5000); //@line 650 "lib/lua-5.2.3/src/ldo.c"
 var $52=$1; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $53=$p; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $54=(($53)|0); //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $55=HEAP32[(($54)>>2)]; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $56=$p; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $57=(($56+4)|0); //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $58=$p; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $59=(($58+16)|0); //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $60=$p; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $61=(($60+56)|0); //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $62=HEAP32[(($61)>>2)]; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $63=$c; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 var $64=_luaY_parser($52,$55,$57,$59,$62,$63); //@line 651 "lib/lua-5.2.3/src/ldo.c"
 $cl=$64; //@line 651 "lib/lua-5.2.3/src/ldo.c"
 label=7;break;
 case 7: 
 $i=0; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 label=8;break; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 case 8: 
 var $67=$i; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $68=$cl; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $69=$68; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $70=(($69+6)|0); //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $71=HEAP8[($70)]; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $72=($71&255); //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $73=($67|0)<($72|0); //@line 654 "lib/lua-5.2.3/src/ldo.c"
 if($73){label=9;break;}else{label=14;break;} //@line 654 "lib/lua-5.2.3/src/ldo.c"
 case 9: 
 var $75=$1; //@line 655 "lib/lua-5.2.3/src/ldo.c"
 var $76=_luaF_newupval($75); //@line 655 "lib/lua-5.2.3/src/ldo.c"
 $up=$76; //@line 655 "lib/lua-5.2.3/src/ldo.c"
 var $77=$up; //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $78=$i; //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $79=$cl; //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $80=$79; //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $81=(($80+16)|0); //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $82=(($81+($78<<2))|0); //@line 656 "lib/lua-5.2.3/src/ldo.c"
 HEAP32[(($82)>>2)]=$77; //@line 656 "lib/lua-5.2.3/src/ldo.c"
 var $83=$up; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $84=$83; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $85=$84; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $86=(($85+5)|0); //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $87=HEAP8[($86)]; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $88=($87&255); //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $89=$88&3; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $90=($89|0)!=0; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 if($90){label=10;break;}else{label=12;break;} //@line 657 "lib/lua-5.2.3/src/ldo.c"
 case 10: 
 var $92=$cl; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $93=$92; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $94=$93; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $95=(($94+5)|0); //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $96=HEAP8[($95)]; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $97=($96&255); //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $98=$97&4; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $99=($98|0)!=0; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 if($99){label=11;break;}else{label=12;break;} //@line 657 "lib/lua-5.2.3/src/ldo.c"
 case 11: 
 var $101=$1; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $102=$cl; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $103=$102; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $104=$up; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 var $105=$104; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 _luaC_barrier_($101,$103,$105); //@line 657 "lib/lua-5.2.3/src/ldo.c"
 label=12;break; //@line 657 "lib/lua-5.2.3/src/ldo.c"
 case 12: 
 label=13;break; //@line 658 "lib/lua-5.2.3/src/ldo.c"
 case 13: 
 var $108=$i; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 var $109=((($108)+(1))|0); //@line 654 "lib/lua-5.2.3/src/ldo.c"
 $i=$109; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 label=8;break; //@line 654 "lib/lua-5.2.3/src/ldo.c"
 case 14: 
 STACKTOP=sp;return; //@line 659 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _checkmode($L,$mode,$x){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$L;
 $2=$mode;
 $3=$x;
 var $4=$2; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $5=($4|0)!=0; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 if($5){label=2;break;}else{label=4;break;} //@line 632 "lib/lua-5.2.3/src/ldo.c"
 case 2: 
 var $7=$2; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $8=$3; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $9=(($8)|0); //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $10=HEAP8[($9)]; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $11=(($10<<24)>>24); //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $12=_strchr($7,$11); //@line 632 "lib/lua-5.2.3/src/ldo.c"
 var $13=($12|0)==0; //@line 632 "lib/lua-5.2.3/src/ldo.c"
 if($13){label=3;break;}else{label=4;break;} //@line 632 "lib/lua-5.2.3/src/ldo.c"
 case 3: 
 var $15=$1; //@line 633 "lib/lua-5.2.3/src/ldo.c"
 var $16=$3; //@line 633 "lib/lua-5.2.3/src/ldo.c"
 var $17=$2; //@line 633 "lib/lua-5.2.3/src/ldo.c"
 var $18=_luaO_pushfstring($15,4216,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$16,HEAP32[(((tempVarArgs)+(8))>>2)]=$17,tempVarArgs)); STACKTOP=tempVarArgs; //@line 633 "lib/lua-5.2.3/src/ldo.c"
 var $19=$1; //@line 635 "lib/lua-5.2.3/src/ldo.c"
 _luaD_throw($19,3); //@line 635 "lib/lua-5.2.3/src/ldo.c"
 throw "Reached an unreachable!"; //@line 635 "lib/lua-5.2.3/src/ldo.c"
 case 4: 
 STACKTOP=sp;return; //@line 637 "lib/lua-5.2.3/src/ldo.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_int2fb($x){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $e;
 $2=$x;
 $e=0; //@line 37 "lib/lua-5.2.3/src/lobject.c"
 var $3=$2; //@line 38 "lib/lua-5.2.3/src/lobject.c"
 var $4=($3>>>0)<8; //@line 38 "lib/lua-5.2.3/src/lobject.c"
 if($4){label=2;break;}else{label=3;break;} //@line 38 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $6=$2; //@line 38 "lib/lua-5.2.3/src/lobject.c"
 $1=$6; //@line 38 "lib/lua-5.2.3/src/lobject.c"
 label=7;break; //@line 38 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 label=4;break; //@line 39 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $9=$2; //@line 39 "lib/lua-5.2.3/src/lobject.c"
 var $10=($9>>>0)>=16; //@line 39 "lib/lua-5.2.3/src/lobject.c"
 if($10){label=5;break;}else{label=6;break;} //@line 39 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $12=$2; //@line 40 "lib/lua-5.2.3/src/lobject.c"
 var $13=((($12)+(1))|0); //@line 40 "lib/lua-5.2.3/src/lobject.c"
 var $14=$13>>>1; //@line 40 "lib/lua-5.2.3/src/lobject.c"
 $2=$14; //@line 40 "lib/lua-5.2.3/src/lobject.c"
 var $15=$e; //@line 41 "lib/lua-5.2.3/src/lobject.c"
 var $16=((($15)+(1))|0); //@line 41 "lib/lua-5.2.3/src/lobject.c"
 $e=$16; //@line 41 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 42 "lib/lua-5.2.3/src/lobject.c"
 case 6: 
 var $18=$e; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 var $19=((($18)+(1))|0); //@line 43 "lib/lua-5.2.3/src/lobject.c"
 var $20=$19<<3; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 var $21=$2; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 var $22=((($21)-(8))|0); //@line 43 "lib/lua-5.2.3/src/lobject.c"
 var $23=$20|$22; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 $1=$23; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 label=7;break; //@line 43 "lib/lua-5.2.3/src/lobject.c"
 case 7: 
 var $25=$1; //@line 44 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $25; //@line 44 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_fb2int($x){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $e;
 $2=$x;
 var $3=$2; //@line 49 "lib/lua-5.2.3/src/lobject.c"
 var $4=$3>>3; //@line 49 "lib/lua-5.2.3/src/lobject.c"
 var $5=$4&31; //@line 49 "lib/lua-5.2.3/src/lobject.c"
 $e=$5; //@line 49 "lib/lua-5.2.3/src/lobject.c"
 var $6=$e; //@line 50 "lib/lua-5.2.3/src/lobject.c"
 var $7=($6|0)==0; //@line 50 "lib/lua-5.2.3/src/lobject.c"
 if($7){label=2;break;}else{label=3;break;} //@line 50 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $9=$2; //@line 50 "lib/lua-5.2.3/src/lobject.c"
 $1=$9; //@line 50 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 50 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $11=$2; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 var $12=$11&7; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 var $13=((($12)+(8))|0); //@line 51 "lib/lua-5.2.3/src/lobject.c"
 var $14=$e; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 var $15=((($14)-(1))|0); //@line 51 "lib/lua-5.2.3/src/lobject.c"
 var $16=$13<<$15; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 $1=$16; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 51 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $18=$1; //@line 52 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $18; //@line 52 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_ceillog2($x){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $l;
 $1=$x;
 $l=0; //@line 66 "lib/lua-5.2.3/src/lobject.c"
 var $2=$1; //@line 67 "lib/lua-5.2.3/src/lobject.c"
 var $3=((($2)-(1))|0); //@line 67 "lib/lua-5.2.3/src/lobject.c"
 $1=$3; //@line 67 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $5=$1; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 var $6=($5>>>0)>=256; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 if($6){label=3;break;}else{label=4;break;} //@line 68 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $8=$l; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 var $9=((($8)+(8))|0); //@line 68 "lib/lua-5.2.3/src/lobject.c"
 $l=$9; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 var $10=$1; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 var $11=$10>>>8; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 $1=$11; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 68 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $13=$l; //@line 69 "lib/lua-5.2.3/src/lobject.c"
 var $14=$1; //@line 69 "lib/lua-5.2.3/src/lobject.c"
 var $15=((1392+$14)|0); //@line 69 "lib/lua-5.2.3/src/lobject.c"
 var $16=HEAP8[($15)]; //@line 69 "lib/lua-5.2.3/src/lobject.c"
 var $17=($16&255); //@line 69 "lib/lua-5.2.3/src/lobject.c"
 var $18=((($13)+($17))|0); //@line 69 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $18; //@line 69 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_arith($op,$v1,$v2){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$op;
 $3=$v1;
 $4=$v2;
 var $5=$2; //@line 74 "lib/lua-5.2.3/src/lobject.c"
 switch(($5|0)){case 0:{ label=2;break;}case 1:{ label=3;break;}case 2:{ label=4;break;}case 3:{ label=5;break;}case 4:{ label=6;break;}case 5:{ label=7;break;}case 6:{ label=8;break;}default:{label=9;break;}}break;
 case 2: 
 var $7=$3; //@line 75 "lib/lua-5.2.3/src/lobject.c"
 var $8=$4; //@line 75 "lib/lua-5.2.3/src/lobject.c"
 var $9=($7)+($8); //@line 75 "lib/lua-5.2.3/src/lobject.c"
 $1=$9; //@line 75 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 75 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $11=$3; //@line 76 "lib/lua-5.2.3/src/lobject.c"
 var $12=$4; //@line 76 "lib/lua-5.2.3/src/lobject.c"
 var $13=($11)-($12); //@line 76 "lib/lua-5.2.3/src/lobject.c"
 $1=$13; //@line 76 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 76 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $15=$3; //@line 77 "lib/lua-5.2.3/src/lobject.c"
 var $16=$4; //@line 77 "lib/lua-5.2.3/src/lobject.c"
 var $17=($15)*($16); //@line 77 "lib/lua-5.2.3/src/lobject.c"
 $1=$17; //@line 77 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 77 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $19=$3; //@line 78 "lib/lua-5.2.3/src/lobject.c"
 var $20=$4; //@line 78 "lib/lua-5.2.3/src/lobject.c"
 var $21=($19)/($20); //@line 78 "lib/lua-5.2.3/src/lobject.c"
 $1=$21; //@line 78 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 78 "lib/lua-5.2.3/src/lobject.c"
 case 6: 
 var $23=$3; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $24=$3; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $25=$4; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $26=($24)/($25); //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $27=Math_floor($26); //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $28=$4; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $29=($27)*($28); //@line 79 "lib/lua-5.2.3/src/lobject.c"
 var $30=($23)-($29); //@line 79 "lib/lua-5.2.3/src/lobject.c"
 $1=$30; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 79 "lib/lua-5.2.3/src/lobject.c"
 case 7: 
 var $32=$3; //@line 80 "lib/lua-5.2.3/src/lobject.c"
 var $33=$4; //@line 80 "lib/lua-5.2.3/src/lobject.c"
 var $34=Math_pow($32,$33); //@line 80 "lib/lua-5.2.3/src/lobject.c"
 $1=$34; //@line 80 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 80 "lib/lua-5.2.3/src/lobject.c"
 case 8: 
 var $36=$3; //@line 81 "lib/lua-5.2.3/src/lobject.c"
 var $37=((-.0))-($36); //@line 81 "lib/lua-5.2.3/src/lobject.c"
 $1=$37; //@line 81 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 81 "lib/lua-5.2.3/src/lobject.c"
 case 9: 
 $1=0; //@line 82 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 82 "lib/lua-5.2.3/src/lobject.c"
 case 10: 
 var $40=$1; //@line 84 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $40; //@line 84 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_hexavalue($c){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$c;
 var $3=$2; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $4=((($3)+(1))|0); //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $5=((800+$4)|0); //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $6=HEAP8[($5)]; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $7=($6&255); //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $8=$7&2; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $9=($8|0)!=0; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 if($9){label=2;break;}else{label=3;break;} //@line 88 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $11=$2; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 var $12=((($11)-(48))|0); //@line 88 "lib/lua-5.2.3/src/lobject.c"
 $1=$12; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 88 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $14=$2; //@line 89 "lib/lua-5.2.3/src/lobject.c"
 var $15=$14|32; //@line 89 "lib/lua-5.2.3/src/lobject.c"
 var $16=((($15)-(97))|0); //@line 89 "lib/lua-5.2.3/src/lobject.c"
 var $17=((($16)+(10))|0); //@line 89 "lib/lua-5.2.3/src/lobject.c"
 $1=$17; //@line 89 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 89 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $19=$1; //@line 90 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $19; //@line 90 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_str2d($s,$len,$result){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $endptr=sp;
 $2=$s;
 $3=$len;
 $4=$result;
 var $5=$2; //@line 160 "lib/lua-5.2.3/src/lobject.c"
 var $6=_strpbrk($5,14144); //@line 160 "lib/lua-5.2.3/src/lobject.c"
 var $7=($6|0)!=0; //@line 160 "lib/lua-5.2.3/src/lobject.c"
 if($7){label=2;break;}else{label=3;break;} //@line 160 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 $1=0; //@line 161 "lib/lua-5.2.3/src/lobject.c"
 label=13;break; //@line 161 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $10=$2; //@line 162 "lib/lua-5.2.3/src/lobject.c"
 var $11=_strpbrk($10,15472); //@line 162 "lib/lua-5.2.3/src/lobject.c"
 var $12=($11|0)!=0; //@line 162 "lib/lua-5.2.3/src/lobject.c"
 if($12){label=4;break;}else{label=5;break;} //@line 162 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $14=$2; //@line 163 "lib/lua-5.2.3/src/lobject.c"
 var $15=_lua_strx2number($14,$endptr); //@line 163 "lib/lua-5.2.3/src/lobject.c"
 var $16=$4; //@line 163 "lib/lua-5.2.3/src/lobject.c"
 HEAPF64[(($16)>>3)]=$15; //@line 163 "lib/lua-5.2.3/src/lobject.c"
 label=6;break; //@line 163 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $18=$2; //@line 165 "lib/lua-5.2.3/src/lobject.c"
 var $19=_strtod($18,$endptr); //@line 165 "lib/lua-5.2.3/src/lobject.c"
 var $20=$4; //@line 165 "lib/lua-5.2.3/src/lobject.c"
 HEAPF64[(($20)>>3)]=$19; //@line 165 "lib/lua-5.2.3/src/lobject.c"
 label=6;break;
 case 6: 
 label=7;break;
 case 7: 
 var $23=HEAP32[(($endptr)>>2)]; //@line 166 "lib/lua-5.2.3/src/lobject.c"
 var $24=$2; //@line 166 "lib/lua-5.2.3/src/lobject.c"
 var $25=($23|0)==($24|0); //@line 166 "lib/lua-5.2.3/src/lobject.c"
 if($25){label=8;break;}else{label=9;break;} //@line 166 "lib/lua-5.2.3/src/lobject.c"
 case 8: 
 $1=0; //@line 166 "lib/lua-5.2.3/src/lobject.c"
 label=13;break; //@line 166 "lib/lua-5.2.3/src/lobject.c"
 case 9: 
 label=10;break; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 case 10: 
 var $29=HEAP32[(($endptr)>>2)]; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $30=HEAP8[($29)]; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $31=($30&255); //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $32=((($31)+(1))|0); //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $33=((800+$32)|0); //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $34=HEAP8[($33)]; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $35=($34&255); //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $36=$35&8; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $37=($36|0)!=0; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 if($37){label=11;break;}else{label=12;break;} //@line 167 "lib/lua-5.2.3/src/lobject.c"
 case 11: 
 var $39=HEAP32[(($endptr)>>2)]; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 var $40=(($39+1)|0); //@line 167 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($endptr)>>2)]=$40; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 167 "lib/lua-5.2.3/src/lobject.c"
 case 12: 
 var $42=HEAP32[(($endptr)>>2)]; //@line 168 "lib/lua-5.2.3/src/lobject.c"
 var $43=$2; //@line 168 "lib/lua-5.2.3/src/lobject.c"
 var $44=$3; //@line 168 "lib/lua-5.2.3/src/lobject.c"
 var $45=(($43+$44)|0); //@line 168 "lib/lua-5.2.3/src/lobject.c"
 var $46=($42|0)==($45|0); //@line 168 "lib/lua-5.2.3/src/lobject.c"
 var $47=($46&1); //@line 168 "lib/lua-5.2.3/src/lobject.c"
 $1=$47; //@line 168 "lib/lua-5.2.3/src/lobject.c"
 label=13;break; //@line 168 "lib/lua-5.2.3/src/lobject.c"
 case 13: 
 var $49=$1; //@line 169 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $49; //@line 169 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _lua_strx2number($s,$endptr){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2=sp;
 var $3;
 var $r;
 var $e=(sp)+(8);
 var $i=(sp)+(16);
 var $neg;
 var $exp1;
 var $neg1;
 HEAP32[(($2)>>2)]=$s;
 $3=$endptr;
 $r=0; //@line 119 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($e)>>2)]=0; //@line 120 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($i)>>2)]=0; //@line 120 "lib/lua-5.2.3/src/lobject.c"
 $neg=0; //@line 121 "lib/lua-5.2.3/src/lobject.c"
 var $4=HEAP32[(($2)>>2)]; //@line 122 "lib/lua-5.2.3/src/lobject.c"
 var $5=$3; //@line 122 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($5)>>2)]=$4; //@line 122 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $7=HEAP32[(($2)>>2)]; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $8=HEAP8[($7)]; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $9=($8&255); //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $10=((($9)+(1))|0); //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $11=((800+$10)|0); //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $12=HEAP8[($11)]; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $13=($12&255); //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $14=$13&8; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $15=($14|0)!=0; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 if($15){label=3;break;}else{label=4;break;} //@line 123 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $17=HEAP32[(($2)>>2)]; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 var $18=(($17+1)|0); //@line 123 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($2)>>2)]=$18; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 123 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $20=_isneg($2); //@line 124 "lib/lua-5.2.3/src/lobject.c"
 $neg=$20; //@line 124 "lib/lua-5.2.3/src/lobject.c"
 var $21=HEAP32[(($2)>>2)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $22=HEAP8[($21)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $23=(($22<<24)>>24); //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $24=($23|0)==48; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 if($24){label=5;break;}else{label=7;break;} //@line 125 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $26=HEAP32[(($2)>>2)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $27=(($26+1)|0); //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $28=HEAP8[($27)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $29=(($28<<24)>>24); //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $30=($29|0)==120; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 if($30){label=8;break;}else{label=6;break;} //@line 125 "lib/lua-5.2.3/src/lobject.c"
 case 6: 
 var $32=HEAP32[(($2)>>2)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $33=(($32+1)|0); //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $34=HEAP8[($33)]; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $35=(($34<<24)>>24); //@line 125 "lib/lua-5.2.3/src/lobject.c"
 var $36=($35|0)==88; //@line 125 "lib/lua-5.2.3/src/lobject.c"
 if($36){label=8;break;}else{label=7;break;} //@line 125 "lib/lua-5.2.3/src/lobject.c"
 case 7: 
 $1=0; //@line 126 "lib/lua-5.2.3/src/lobject.c"
 label=27;break; //@line 126 "lib/lua-5.2.3/src/lobject.c"
 case 8: 
 var $39=HEAP32[(($2)>>2)]; //@line 127 "lib/lua-5.2.3/src/lobject.c"
 var $40=(($39+2)|0); //@line 127 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($2)>>2)]=$40; //@line 127 "lib/lua-5.2.3/src/lobject.c"
 var $41=$r; //@line 128 "lib/lua-5.2.3/src/lobject.c"
 var $42=_readhexa($2,$41,$i); //@line 128 "lib/lua-5.2.3/src/lobject.c"
 $r=$42; //@line 128 "lib/lua-5.2.3/src/lobject.c"
 var $43=HEAP32[(($2)>>2)]; //@line 129 "lib/lua-5.2.3/src/lobject.c"
 var $44=HEAP8[($43)]; //@line 129 "lib/lua-5.2.3/src/lobject.c"
 var $45=(($44<<24)>>24); //@line 129 "lib/lua-5.2.3/src/lobject.c"
 var $46=($45|0)==46; //@line 129 "lib/lua-5.2.3/src/lobject.c"
 if($46){label=9;break;}else{label=10;break;} //@line 129 "lib/lua-5.2.3/src/lobject.c"
 case 9: 
 var $48=HEAP32[(($2)>>2)]; //@line 130 "lib/lua-5.2.3/src/lobject.c"
 var $49=(($48+1)|0); //@line 130 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($2)>>2)]=$49; //@line 130 "lib/lua-5.2.3/src/lobject.c"
 var $50=$r; //@line 131 "lib/lua-5.2.3/src/lobject.c"
 var $51=_readhexa($2,$50,$e); //@line 131 "lib/lua-5.2.3/src/lobject.c"
 $r=$51; //@line 131 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 132 "lib/lua-5.2.3/src/lobject.c"
 case 10: 
 var $53=HEAP32[(($i)>>2)]; //@line 133 "lib/lua-5.2.3/src/lobject.c"
 var $54=($53|0)==0; //@line 133 "lib/lua-5.2.3/src/lobject.c"
 if($54){label=11;break;}else{label=13;break;} //@line 133 "lib/lua-5.2.3/src/lobject.c"
 case 11: 
 var $56=HEAP32[(($e)>>2)]; //@line 133 "lib/lua-5.2.3/src/lobject.c"
 var $57=($56|0)==0; //@line 133 "lib/lua-5.2.3/src/lobject.c"
 if($57){label=12;break;}else{label=13;break;} //@line 133 "lib/lua-5.2.3/src/lobject.c"
 case 12: 
 $1=0; //@line 134 "lib/lua-5.2.3/src/lobject.c"
 label=27;break; //@line 134 "lib/lua-5.2.3/src/lobject.c"
 case 13: 
 var $60=HEAP32[(($e)>>2)]; //@line 135 "lib/lua-5.2.3/src/lobject.c"
 var $61=((($60)*(-4))&-1); //@line 135 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($e)>>2)]=$61; //@line 135 "lib/lua-5.2.3/src/lobject.c"
 var $62=HEAP32[(($2)>>2)]; //@line 136 "lib/lua-5.2.3/src/lobject.c"
 var $63=$3; //@line 136 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($63)>>2)]=$62; //@line 136 "lib/lua-5.2.3/src/lobject.c"
 var $64=HEAP32[(($2)>>2)]; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $65=HEAP8[($64)]; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $66=(($65<<24)>>24); //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $67=($66|0)==112; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 if($67){label=15;break;}else{label=14;break;} //@line 137 "lib/lua-5.2.3/src/lobject.c"
 case 14: 
 var $69=HEAP32[(($2)>>2)]; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $70=HEAP8[($69)]; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $71=(($70<<24)>>24); //@line 137 "lib/lua-5.2.3/src/lobject.c"
 var $72=($71|0)==80; //@line 137 "lib/lua-5.2.3/src/lobject.c"
 if($72){label=15;break;}else{label=23;break;} //@line 137 "lib/lua-5.2.3/src/lobject.c"
 case 15: 
 $exp1=0; //@line 138 "lib/lua-5.2.3/src/lobject.c"
 var $74=HEAP32[(($2)>>2)]; //@line 140 "lib/lua-5.2.3/src/lobject.c"
 var $75=(($74+1)|0); //@line 140 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($2)>>2)]=$75; //@line 140 "lib/lua-5.2.3/src/lobject.c"
 var $76=_isneg($2); //@line 141 "lib/lua-5.2.3/src/lobject.c"
 $neg1=$76; //@line 141 "lib/lua-5.2.3/src/lobject.c"
 var $77=HEAP32[(($2)>>2)]; //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $78=HEAP8[($77)]; //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $79=($78&255); //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $80=((($79)+(1))|0); //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $81=((800+$80)|0); //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $82=HEAP8[($81)]; //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $83=($82&255); //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $84=$83&2; //@line 142 "lib/lua-5.2.3/src/lobject.c"
 var $85=($84|0)!=0; //@line 142 "lib/lua-5.2.3/src/lobject.c"
 if($85){label=17;break;}else{label=16;break;} //@line 142 "lib/lua-5.2.3/src/lobject.c"
 case 16: 
 label=24;break; //@line 143 "lib/lua-5.2.3/src/lobject.c"
 case 17: 
 label=18;break; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 case 18: 
 var $89=HEAP32[(($2)>>2)]; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $90=HEAP8[($89)]; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $91=($90&255); //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $92=((($91)+(1))|0); //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $93=((800+$92)|0); //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $94=HEAP8[($93)]; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $95=($94&255); //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $96=$95&2; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 var $97=($96|0)!=0; //@line 144 "lib/lua-5.2.3/src/lobject.c"
 if($97){label=19;break;}else{label=20;break;} //@line 144 "lib/lua-5.2.3/src/lobject.c"
 case 19: 
 var $99=$exp1; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $100=((($99)*(10))&-1); //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $101=HEAP32[(($2)>>2)]; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $102=(($101+1)|0); //@line 145 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($2)>>2)]=$102; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $103=HEAP8[($101)]; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $104=(($103<<24)>>24); //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $105=((($100)+($104))|0); //@line 145 "lib/lua-5.2.3/src/lobject.c"
 var $106=((($105)-(48))|0); //@line 145 "lib/lua-5.2.3/src/lobject.c"
 $exp1=$106; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 label=18;break; //@line 145 "lib/lua-5.2.3/src/lobject.c"
 case 20: 
 var $108=$neg1; //@line 146 "lib/lua-5.2.3/src/lobject.c"
 var $109=($108|0)!=0; //@line 146 "lib/lua-5.2.3/src/lobject.c"
 if($109){label=21;break;}else{label=22;break;} //@line 146 "lib/lua-5.2.3/src/lobject.c"
 case 21: 
 var $111=$exp1; //@line 146 "lib/lua-5.2.3/src/lobject.c"
 var $112=(((-$111))|0); //@line 146 "lib/lua-5.2.3/src/lobject.c"
 $exp1=$112; //@line 146 "lib/lua-5.2.3/src/lobject.c"
 label=22;break; //@line 146 "lib/lua-5.2.3/src/lobject.c"
 case 22: 
 var $114=$exp1; //@line 147 "lib/lua-5.2.3/src/lobject.c"
 var $115=HEAP32[(($e)>>2)]; //@line 147 "lib/lua-5.2.3/src/lobject.c"
 var $116=((($115)+($114))|0); //@line 147 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($e)>>2)]=$116; //@line 147 "lib/lua-5.2.3/src/lobject.c"
 label=23;break; //@line 148 "lib/lua-5.2.3/src/lobject.c"
 case 23: 
 var $118=HEAP32[(($2)>>2)]; //@line 149 "lib/lua-5.2.3/src/lobject.c"
 var $119=$3; //@line 149 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($119)>>2)]=$118; //@line 149 "lib/lua-5.2.3/src/lobject.c"
 label=24;break; //@line 149 "lib/lua-5.2.3/src/lobject.c"
 case 24: 
 var $121=$neg; //@line 151 "lib/lua-5.2.3/src/lobject.c"
 var $122=($121|0)!=0; //@line 151 "lib/lua-5.2.3/src/lobject.c"
 if($122){label=25;break;}else{label=26;break;} //@line 151 "lib/lua-5.2.3/src/lobject.c"
 case 25: 
 var $124=$r; //@line 151 "lib/lua-5.2.3/src/lobject.c"
 var $125=((-.0))-($124); //@line 151 "lib/lua-5.2.3/src/lobject.c"
 $r=$125; //@line 151 "lib/lua-5.2.3/src/lobject.c"
 label=26;break; //@line 151 "lib/lua-5.2.3/src/lobject.c"
 case 26: 
 var $127=$r; //@line 152 "lib/lua-5.2.3/src/lobject.c"
 var $128=HEAP32[(($e)>>2)]; //@line 152 "lib/lua-5.2.3/src/lobject.c"
 var $129=_ldexp($127,$128); //@line 152 "lib/lua-5.2.3/src/lobject.c"
 $1=$129; //@line 152 "lib/lua-5.2.3/src/lobject.c"
 label=27;break; //@line 152 "lib/lua-5.2.3/src/lobject.c"
 case 27: 
 var $131=$1; //@line 153 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $131; //@line 153 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaO_pushvfstring($L,$fmt,$argp){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $n;
 var $e;
 var $s;
 var $buff=sp;
 var $io;
 var $io1;
 var $buff2=(sp)+(8);
 var $l;
 $1=$L;
 $2=$fmt;
 $3=$argp;
 $n=0; //@line 180 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 181 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $5=$2; //@line 182 "lib/lua-5.2.3/src/lobject.c"
 var $6=_strchr($5,37); //@line 182 "lib/lua-5.2.3/src/lobject.c"
 $e=$6; //@line 182 "lib/lua-5.2.3/src/lobject.c"
 var $7=$e; //@line 183 "lib/lua-5.2.3/src/lobject.c"
 var $8=($7|0)==0; //@line 183 "lib/lua-5.2.3/src/lobject.c"
 if($8){label=3;break;}else{label=4;break;} //@line 183 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 label=18;break; //@line 183 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $11=$1; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $12=(($11+24)|0); //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $13=HEAP32[(($12)>>2)]; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $14=$1; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $15=(($14+8)|0); //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $16=HEAP32[(($15)>>2)]; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $17=$13; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $18=$16; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $19=((($17)-($18))|0); //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $20=(((($19|0))/(16))&-1); //@line 184 "lib/lua-5.2.3/src/lobject.c"
 var $21=($20|0)<=2; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 if($21){label=5;break;}else{label=6;break;} //@line 184 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $23=$1; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 _luaD_growstack($23,2); //@line 184 "lib/lua-5.2.3/src/lobject.c"
 label=7;break; //@line 184 "lib/lua-5.2.3/src/lobject.c"
 case 6: 
 label=7;break;
 case 7: 
 var $26=$1; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $27=$2; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $28=$e; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $29=$2; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $30=$28; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $31=$29; //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $32=((($30)-($31))|0); //@line 185 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($26,$27,$32); //@line 185 "lib/lua-5.2.3/src/lobject.c"
 var $33=$e; //@line 186 "lib/lua-5.2.3/src/lobject.c"
 var $34=(($33+1)|0); //@line 186 "lib/lua-5.2.3/src/lobject.c"
 var $35=HEAP8[($34)]; //@line 186 "lib/lua-5.2.3/src/lobject.c"
 var $36=(($35<<24)>>24); //@line 186 "lib/lua-5.2.3/src/lobject.c"
 switch(($36|0)){case 99:{ label=11;break;}case 100:{ label=12;break;}case 102:{ label=13;break;}case 112:{ label=14;break;}case 37:{ label=15;break;}case 115:{ label=8;break;}default:{label=16;break;}}break;
 case 8: 
 var $38=$3; //@line 188 "lib/lua-5.2.3/src/lobject.c"
 var $39=(tempInt=HEAP32[((($38)+(4))>>2)],HEAP32[((($38)+(4))>>2)]=tempInt + 8,HEAP32[(((HEAP32[(($38)>>2)])+(tempInt))>>2)]); //@line 188 "lib/lua-5.2.3/src/lobject.c"
 $s=$39; //@line 188 "lib/lua-5.2.3/src/lobject.c"
 var $40=$s; //@line 189 "lib/lua-5.2.3/src/lobject.c"
 var $41=($40|0)==0; //@line 189 "lib/lua-5.2.3/src/lobject.c"
 if($41){label=9;break;}else{label=10;break;} //@line 189 "lib/lua-5.2.3/src/lobject.c"
 case 9: 
 $s=12040; //@line 189 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 189 "lib/lua-5.2.3/src/lobject.c"
 case 10: 
 var $44=$1; //@line 190 "lib/lua-5.2.3/src/lobject.c"
 var $45=$s; //@line 190 "lib/lua-5.2.3/src/lobject.c"
 var $46=$s; //@line 190 "lib/lua-5.2.3/src/lobject.c"
 var $47=_strlen($46); //@line 190 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($44,$45,$47); //@line 190 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 191 "lib/lua-5.2.3/src/lobject.c"
 case 11: 
 var $49=$3; //@line 195 "lib/lua-5.2.3/src/lobject.c"
 var $50=(tempInt=HEAP32[((($49)+(4))>>2)],HEAP32[((($49)+(4))>>2)]=tempInt + 8,HEAP32[(((HEAP32[(($49)>>2)])+(tempInt))>>2)]); //@line 195 "lib/lua-5.2.3/src/lobject.c"
 var $51=(($50)&255); //@line 195 "lib/lua-5.2.3/src/lobject.c"
 HEAP8[($buff)]=$51; //@line 195 "lib/lua-5.2.3/src/lobject.c"
 var $52=$1; //@line 196 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($52,$buff,1); //@line 196 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 197 "lib/lua-5.2.3/src/lobject.c"
 case 12: 
 var $54=$1; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $55=(($54+8)|0); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $56=HEAP32[(($55)>>2)]; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $57=(($56+16)|0); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($55)>>2)]=$57; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 $io=$56; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $58=$3; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $59=(tempInt=HEAP32[((($58)+(4))>>2)],HEAP32[((($58)+(4))>>2)]=tempInt + 8,HEAP32[(((HEAP32[(($58)>>2)])+(tempInt))>>2)]); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $60=($59|0); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $61=$io; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $62=(($61)|0); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $63=$62; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 HEAPF64[(($63)>>3)]=$60; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $64=$io; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 var $65=(($64+8)|0); //@line 200 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($65)>>2)]=3; //@line 200 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 201 "lib/lua-5.2.3/src/lobject.c"
 case 13: 
 var $67=$1; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $68=(($67+8)|0); //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $69=HEAP32[(($68)>>2)]; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $70=(($69+16)|0); //@line 204 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($68)>>2)]=$70; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 $io1=$69; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $71=$3; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $72=(tempInt=HEAP32[((($71)+(4))>>2)],HEAP32[((($71)+(4))>>2)]=tempInt + 8,HEAPF64[(((HEAP32[(($71)>>2)])+(tempInt))>>3)]); //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $73=$io1; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $74=(($73)|0); //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $75=$74; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 HEAPF64[(($75)>>3)]=$72; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $76=$io1; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 var $77=(($76+8)|0); //@line 204 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($77)>>2)]=3; //@line 204 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 205 "lib/lua-5.2.3/src/lobject.c"
 case 14: 
 var $79=(($buff2)|0); //@line 209 "lib/lua-5.2.3/src/lobject.c"
 var $80=$3; //@line 209 "lib/lua-5.2.3/src/lobject.c"
 var $81=(tempInt=HEAP32[((($80)+(4))>>2)],HEAP32[((($80)+(4))>>2)]=tempInt + 8,HEAP32[(((HEAP32[(($80)>>2)])+(tempInt))>>2)]); //@line 209 "lib/lua-5.2.3/src/lobject.c"
 var $82=_sprintf($79,9088,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$81,tempVarArgs)); STACKTOP=tempVarArgs; //@line 209 "lib/lua-5.2.3/src/lobject.c"
 $l=$82; //@line 209 "lib/lua-5.2.3/src/lobject.c"
 var $83=$1; //@line 210 "lib/lua-5.2.3/src/lobject.c"
 var $84=(($buff2)|0); //@line 210 "lib/lua-5.2.3/src/lobject.c"
 var $85=$l; //@line 210 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($83,$84,$85); //@line 210 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 211 "lib/lua-5.2.3/src/lobject.c"
 case 15: 
 var $87=$1; //@line 214 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($87,7256,1); //@line 214 "lib/lua-5.2.3/src/lobject.c"
 label=17;break; //@line 215 "lib/lua-5.2.3/src/lobject.c"
 case 16: 
 var $89=$1; //@line 218 "lib/lua-5.2.3/src/lobject.c"
 var $90=$e; //@line 218 "lib/lua-5.2.3/src/lobject.c"
 var $91=(($90+1)|0); //@line 218 "lib/lua-5.2.3/src/lobject.c"
 var $92=HEAP8[($91)]; //@line 218 "lib/lua-5.2.3/src/lobject.c"
 var $93=(($92<<24)>>24); //@line 218 "lib/lua-5.2.3/src/lobject.c"
 _luaG_runerror($89,5792,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$93,tempVarArgs)); STACKTOP=tempVarArgs; //@line 218 "lib/lua-5.2.3/src/lobject.c"
 throw "Reached an unreachable!"; //@line 218 "lib/lua-5.2.3/src/lobject.c"
 case 17: 
 var $95=$n; //@line 223 "lib/lua-5.2.3/src/lobject.c"
 var $96=((($95)+(2))|0); //@line 223 "lib/lua-5.2.3/src/lobject.c"
 $n=$96; //@line 223 "lib/lua-5.2.3/src/lobject.c"
 var $97=$e; //@line 224 "lib/lua-5.2.3/src/lobject.c"
 var $98=(($97+2)|0); //@line 224 "lib/lua-5.2.3/src/lobject.c"
 $2=$98; //@line 224 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 225 "lib/lua-5.2.3/src/lobject.c"
 case 18: 
 var $100=$1; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $101=(($100+24)|0); //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $102=HEAP32[(($101)>>2)]; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $103=$1; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $104=(($103+8)|0); //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $105=HEAP32[(($104)>>2)]; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $106=$102; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $107=$105; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $108=((($106)-($107))|0); //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $109=(((($108|0))/(16))&-1); //@line 226 "lib/lua-5.2.3/src/lobject.c"
 var $110=($109|0)<=1; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 if($110){label=19;break;}else{label=20;break;} //@line 226 "lib/lua-5.2.3/src/lobject.c"
 case 19: 
 var $112=$1; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 _luaD_growstack($112,1); //@line 226 "lib/lua-5.2.3/src/lobject.c"
 label=21;break; //@line 226 "lib/lua-5.2.3/src/lobject.c"
 case 20: 
 label=21;break;
 case 21: 
 var $115=$1; //@line 227 "lib/lua-5.2.3/src/lobject.c"
 var $116=$2; //@line 227 "lib/lua-5.2.3/src/lobject.c"
 var $117=$2; //@line 227 "lib/lua-5.2.3/src/lobject.c"
 var $118=_strlen($117); //@line 227 "lib/lua-5.2.3/src/lobject.c"
 _pushstr($115,$116,$118); //@line 227 "lib/lua-5.2.3/src/lobject.c"
 var $119=$n; //@line 228 "lib/lua-5.2.3/src/lobject.c"
 var $120=($119|0)>0; //@line 228 "lib/lua-5.2.3/src/lobject.c"
 if($120){label=22;break;}else{label=23;break;} //@line 228 "lib/lua-5.2.3/src/lobject.c"
 case 22: 
 var $122=$1; //@line 228 "lib/lua-5.2.3/src/lobject.c"
 var $123=$n; //@line 228 "lib/lua-5.2.3/src/lobject.c"
 var $124=((($123)+(1))|0); //@line 228 "lib/lua-5.2.3/src/lobject.c"
 _luaV_concat($122,$124); //@line 228 "lib/lua-5.2.3/src/lobject.c"
 label=23;break; //@line 228 "lib/lua-5.2.3/src/lobject.c"
 case 23: 
 var $126=$1; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $127=(($126+8)|0); //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $128=HEAP32[(($127)>>2)]; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $129=((($128)-(16))|0); //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $130=(($129)|0); //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $131=$130; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $132=HEAP32[(($131)>>2)]; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $133=$132; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $134=(($133+16)|0); //@line 229 "lib/lua-5.2.3/src/lobject.c"
 var $135=$134; //@line 229 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $135; //@line 229 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _pushstr($L,$str,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $io;
 var $x_;
 $1=$L;
 $2=$str;
 $3=$l;
 var $4=$1; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $5=(($4+8)|0); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $6=HEAP32[(($5)>>2)]; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $7=(($6+16)|0); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($5)>>2)]=$7; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 $io=$6; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $8=$1; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $9=$2; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $10=$3; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $11=_luaS_newlstr($8,$9,$10); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 $x_=$11; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $12=$x_; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $13=$12; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $14=$io; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $15=(($14)|0); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $16=$15; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($16)>>2)]=$13; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $17=$x_; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $18=$17; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $19=(($18+4)|0); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $20=HEAP8[($19)]; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $21=($20&255); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $22=$21|64; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $23=$io; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 var $24=(($23+8)|0); //@line 174 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($24)>>2)]=$22; //@line 174 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return; //@line 175 "lib/lua-5.2.3/src/lobject.c"
}


function _luaO_pushfstring($L,$fmt,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $msg;
 var $argp=sp;
 $1=$L;
 $2=$fmt;
 var $3=(($argp)|0); //@line 236 "lib/lua-5.2.3/src/lobject.c"
 var $4=$3; //@line 236 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($4)>>2)]=varrp;HEAP32[((($4)+(4))>>2)]=0; //@line 236 "lib/lua-5.2.3/src/lobject.c"
 var $5=$1; //@line 237 "lib/lua-5.2.3/src/lobject.c"
 var $6=$2; //@line 237 "lib/lua-5.2.3/src/lobject.c"
 var $7=(($argp)|0); //@line 237 "lib/lua-5.2.3/src/lobject.c"
 var $8=_luaO_pushvfstring($5,$6,$7); //@line 237 "lib/lua-5.2.3/src/lobject.c"
 $msg=$8; //@line 237 "lib/lua-5.2.3/src/lobject.c"
 var $9=(($argp)|0); //@line 238 "lib/lua-5.2.3/src/lobject.c"
 var $10=$9; //@line 238 "lib/lua-5.2.3/src/lobject.c"
 //@line 238 "lib/lua-5.2.3/src/lobject.c"
 var $11=$msg; //@line 239 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $11; //@line 239 "lib/lua-5.2.3/src/lobject.c"
}


function _luaO_chunkid($out,$source,$bufflen){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $l;
 var $nl;
 $1=$out;
 $2=$source;
 $3=$bufflen;
 var $4=$2; //@line 253 "lib/lua-5.2.3/src/lobject.c"
 var $5=_strlen($4); //@line 253 "lib/lua-5.2.3/src/lobject.c"
 $l=$5; //@line 253 "lib/lua-5.2.3/src/lobject.c"
 var $6=$2; //@line 254 "lib/lua-5.2.3/src/lobject.c"
 var $7=HEAP8[($6)]; //@line 254 "lib/lua-5.2.3/src/lobject.c"
 var $8=(($7<<24)>>24); //@line 254 "lib/lua-5.2.3/src/lobject.c"
 var $9=($8|0)==61; //@line 254 "lib/lua-5.2.3/src/lobject.c"
 if($9){label=2;break;}else{label=6;break;} //@line 254 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $11=$l; //@line 255 "lib/lua-5.2.3/src/lobject.c"
 var $12=$3; //@line 255 "lib/lua-5.2.3/src/lobject.c"
 var $13=($11>>>0)<=($12>>>0); //@line 255 "lib/lua-5.2.3/src/lobject.c"
 if($13){label=3;break;}else{label=4;break;} //@line 255 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $15=$1; //@line 256 "lib/lua-5.2.3/src/lobject.c"
 var $16=$2; //@line 256 "lib/lua-5.2.3/src/lobject.c"
 var $17=(($16+1)|0); //@line 256 "lib/lua-5.2.3/src/lobject.c"
 var $18=$l; //@line 256 "lib/lua-5.2.3/src/lobject.c"
 var $19=$18; //@line 256 "lib/lua-5.2.3/src/lobject.c"
 assert($19 % 1 === 0);(_memcpy($15, $17, $19)|0); //@line 256 "lib/lua-5.2.3/src/lobject.c"
 label=5;break; //@line 256 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $21=$1; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $22=$2; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $23=(($22+1)|0); //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $24=$3; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $25=((($24)-(1))|0); //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $26=$25; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 assert($26 % 1 === 0);(_memcpy($21, $23, $26)|0); //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $27=$3; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $28=((($27)-(1))|0); //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $29=$1; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $30=(($29+$28)|0); //@line 258 "lib/lua-5.2.3/src/lobject.c"
 $1=$30; //@line 258 "lib/lua-5.2.3/src/lobject.c"
 var $31=$1; //@line 259 "lib/lua-5.2.3/src/lobject.c"
 HEAP8[($31)]=0; //@line 259 "lib/lua-5.2.3/src/lobject.c"
 label=5;break;
 case 5: 
 label=21;break; //@line 261 "lib/lua-5.2.3/src/lobject.c"
 case 6: 
 var $34=$2; //@line 262 "lib/lua-5.2.3/src/lobject.c"
 var $35=HEAP8[($34)]; //@line 262 "lib/lua-5.2.3/src/lobject.c"
 var $36=(($35<<24)>>24); //@line 262 "lib/lua-5.2.3/src/lobject.c"
 var $37=($36|0)==64; //@line 262 "lib/lua-5.2.3/src/lobject.c"
 if($37){label=7;break;}else{label=11;break;} //@line 262 "lib/lua-5.2.3/src/lobject.c"
 case 7: 
 var $39=$l; //@line 263 "lib/lua-5.2.3/src/lobject.c"
 var $40=$3; //@line 263 "lib/lua-5.2.3/src/lobject.c"
 var $41=($39>>>0)<=($40>>>0); //@line 263 "lib/lua-5.2.3/src/lobject.c"
 if($41){label=8;break;}else{label=9;break;} //@line 263 "lib/lua-5.2.3/src/lobject.c"
 case 8: 
 var $43=$1; //@line 264 "lib/lua-5.2.3/src/lobject.c"
 var $44=$2; //@line 264 "lib/lua-5.2.3/src/lobject.c"
 var $45=(($44+1)|0); //@line 264 "lib/lua-5.2.3/src/lobject.c"
 var $46=$l; //@line 264 "lib/lua-5.2.3/src/lobject.c"
 var $47=$46; //@line 264 "lib/lua-5.2.3/src/lobject.c"
 assert($47 % 1 === 0);(_memcpy($43, $45, $47)|0); //@line 264 "lib/lua-5.2.3/src/lobject.c"
 label=10;break; //@line 264 "lib/lua-5.2.3/src/lobject.c"
 case 9: 
 var $49=$1; //@line 266 "lib/lua-5.2.3/src/lobject.c"
 assert(3 % 1 === 0);HEAP8[($49)]=HEAP8[(4992)];HEAP8[((($49)+(1))|0)]=HEAP8[(4993)];HEAP8[((($49)+(2))|0)]=HEAP8[(4994)]; //@line 266 "lib/lua-5.2.3/src/lobject.c"
 var $50=$1; //@line 266 "lib/lua-5.2.3/src/lobject.c"
 var $51=(($50+3)|0); //@line 266 "lib/lua-5.2.3/src/lobject.c"
 $1=$51; //@line 266 "lib/lua-5.2.3/src/lobject.c"
 var $52=$3; //@line 267 "lib/lua-5.2.3/src/lobject.c"
 var $53=((($52)-(3))|0); //@line 267 "lib/lua-5.2.3/src/lobject.c"
 $3=$53; //@line 267 "lib/lua-5.2.3/src/lobject.c"
 var $54=$1; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $55=$2; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $56=(($55+1)|0); //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $57=$l; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $58=(($56+$57)|0); //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $59=$3; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $60=(((-$59))|0); //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $61=(($58+$60)|0); //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $62=$3; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 var $63=$62; //@line 268 "lib/lua-5.2.3/src/lobject.c"
 assert($63 % 1 === 0);(_memcpy($54, $61, $63)|0); //@line 268 "lib/lua-5.2.3/src/lobject.c"
 label=10;break;
 case 10: 
 label=20;break; //@line 270 "lib/lua-5.2.3/src/lobject.c"
 case 11: 
 var $66=$2; //@line 272 "lib/lua-5.2.3/src/lobject.c"
 var $67=_strchr($66,10); //@line 272 "lib/lua-5.2.3/src/lobject.c"
 $nl=$67; //@line 272 "lib/lua-5.2.3/src/lobject.c"
 var $68=$1; //@line 273 "lib/lua-5.2.3/src/lobject.c"
 assert(9 % 1 === 0);(_memcpy($68, 4200, 9)|0); //@line 273 "lib/lua-5.2.3/src/lobject.c"
 var $69=$1; //@line 273 "lib/lua-5.2.3/src/lobject.c"
 var $70=(($69+9)|0); //@line 273 "lib/lua-5.2.3/src/lobject.c"
 $1=$70; //@line 273 "lib/lua-5.2.3/src/lobject.c"
 var $71=$3; //@line 274 "lib/lua-5.2.3/src/lobject.c"
 var $72=((($71)-(15))|0); //@line 274 "lib/lua-5.2.3/src/lobject.c"
 $3=$72; //@line 274 "lib/lua-5.2.3/src/lobject.c"
 var $73=$l; //@line 275 "lib/lua-5.2.3/src/lobject.c"
 var $74=$3; //@line 275 "lib/lua-5.2.3/src/lobject.c"
 var $75=($73>>>0)<($74>>>0); //@line 275 "lib/lua-5.2.3/src/lobject.c"
 if($75){label=12;break;}else{label=14;break;} //@line 275 "lib/lua-5.2.3/src/lobject.c"
 case 12: 
 var $77=$nl; //@line 275 "lib/lua-5.2.3/src/lobject.c"
 var $78=($77|0)==0; //@line 275 "lib/lua-5.2.3/src/lobject.c"
 if($78){label=13;break;}else{label=14;break;} //@line 275 "lib/lua-5.2.3/src/lobject.c"
 case 13: 
 var $80=$1; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $81=$2; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $82=$l; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $83=$82; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 assert($83 % 1 === 0);(_memcpy($80, $81, $83)|0); //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $84=$l; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $85=$1; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 var $86=(($85+$84)|0); //@line 276 "lib/lua-5.2.3/src/lobject.c"
 $1=$86; //@line 276 "lib/lua-5.2.3/src/lobject.c"
 label=19;break; //@line 277 "lib/lua-5.2.3/src/lobject.c"
 case 14: 
 var $88=$nl; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 var $89=($88|0)!=0; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 if($89){label=15;break;}else{label=16;break;} //@line 279 "lib/lua-5.2.3/src/lobject.c"
 case 15: 
 var $91=$nl; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 var $92=$2; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 var $93=$91; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 var $94=$92; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 var $95=((($93)-($94))|0); //@line 279 "lib/lua-5.2.3/src/lobject.c"
 $l=$95; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 label=16;break; //@line 279 "lib/lua-5.2.3/src/lobject.c"
 case 16: 
 var $97=$l; //@line 280 "lib/lua-5.2.3/src/lobject.c"
 var $98=$3; //@line 280 "lib/lua-5.2.3/src/lobject.c"
 var $99=($97>>>0)>($98>>>0); //@line 280 "lib/lua-5.2.3/src/lobject.c"
 if($99){label=17;break;}else{label=18;break;} //@line 280 "lib/lua-5.2.3/src/lobject.c"
 case 17: 
 var $101=$3; //@line 280 "lib/lua-5.2.3/src/lobject.c"
 $l=$101; //@line 280 "lib/lua-5.2.3/src/lobject.c"
 label=18;break; //@line 280 "lib/lua-5.2.3/src/lobject.c"
 case 18: 
 var $103=$1; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $104=$2; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $105=$l; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $106=$105; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 assert($106 % 1 === 0);(_memcpy($103, $104, $106)|0); //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $107=$l; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $108=$1; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $109=(($108+$107)|0); //@line 281 "lib/lua-5.2.3/src/lobject.c"
 $1=$109; //@line 281 "lib/lua-5.2.3/src/lobject.c"
 var $110=$1; //@line 282 "lib/lua-5.2.3/src/lobject.c"
 assert(3 % 1 === 0);HEAP8[($110)]=HEAP8[(4992)];HEAP8[((($110)+(1))|0)]=HEAP8[(4993)];HEAP8[((($110)+(2))|0)]=HEAP8[(4994)]; //@line 282 "lib/lua-5.2.3/src/lobject.c"
 var $111=$1; //@line 282 "lib/lua-5.2.3/src/lobject.c"
 var $112=(($111+3)|0); //@line 282 "lib/lua-5.2.3/src/lobject.c"
 $1=$112; //@line 282 "lib/lua-5.2.3/src/lobject.c"
 label=19;break;
 case 19: 
 var $114=$1; //@line 284 "lib/lua-5.2.3/src/lobject.c"
 assert(3 % 1 === 0);HEAP8[($114)]=HEAP8[(3408)];HEAP8[((($114)+(1))|0)]=HEAP8[(3409)];HEAP8[((($114)+(2))|0)]=HEAP8[(3410)]; //@line 284 "lib/lua-5.2.3/src/lobject.c"
 label=20;break;
 case 20: 
 label=21;break;
 case 21: 
 STACKTOP=sp;return; //@line 286 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _isneg($s){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $2=$s;
 var $3=$2; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $4=HEAP32[(($3)>>2)]; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $5=HEAP8[($4)]; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $6=(($5<<24)>>24); //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $7=($6|0)==45; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 if($7){label=2;break;}else{label=3;break;} //@line 99 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $9=$2; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $10=HEAP32[(($9)>>2)]; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 var $11=(($10+1)|0); //@line 99 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($9)>>2)]=$11; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 $1=1; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 label=7;break; //@line 99 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $13=$2; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $14=HEAP32[(($13)>>2)]; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $15=HEAP8[($14)]; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $16=(($15<<24)>>24); //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $17=($16|0)==43; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 if($17){label=4;break;}else{label=5;break;} //@line 100 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $19=$2; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $20=HEAP32[(($19)>>2)]; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 var $21=(($20+1)|0); //@line 100 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($19)>>2)]=$21; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 label=5;break; //@line 100 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 label=6;break;
 case 6: 
 $1=0; //@line 101 "lib/lua-5.2.3/src/lobject.c"
 label=7;break; //@line 101 "lib/lua-5.2.3/src/lobject.c"
 case 7: 
 var $25=$1; //@line 102 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $25; //@line 102 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _readhexa($s,$r,$count){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 $1=$s;
 $2=$r;
 $3=$count;
 label=2;break; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 case 2: 
 var $5=$1; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $6=HEAP32[(($5)>>2)]; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $7=HEAP8[($6)]; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $8=($7&255); //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $9=((($8)+(1))|0); //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $10=((800+$9)|0); //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $11=HEAP8[($10)]; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $12=($11&255); //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $13=$12&16; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $14=($13|0)!=0; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 if($14){label=3;break;}else{label=5;break;} //@line 106 "lib/lua-5.2.3/src/lobject.c"
 case 3: 
 var $16=$2; //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $17=($16)*(16); //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $18=$1; //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $19=HEAP32[(($18)>>2)]; //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $20=HEAP8[($19)]; //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $21=($20&255); //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $22=_luaO_hexavalue($21); //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $23=($22|0); //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $24=($17)+($23); //@line 107 "lib/lua-5.2.3/src/lobject.c"
 $2=$24; //@line 107 "lib/lua-5.2.3/src/lobject.c"
 var $25=$3; //@line 108 "lib/lua-5.2.3/src/lobject.c"
 var $26=HEAP32[(($25)>>2)]; //@line 108 "lib/lua-5.2.3/src/lobject.c"
 var $27=((($26)+(1))|0); //@line 108 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($25)>>2)]=$27; //@line 108 "lib/lua-5.2.3/src/lobject.c"
 label=4;break; //@line 109 "lib/lua-5.2.3/src/lobject.c"
 case 4: 
 var $29=$1; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $30=HEAP32[(($29)>>2)]; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 var $31=(($30+1)|0); //@line 106 "lib/lua-5.2.3/src/lobject.c"
 HEAP32[(($29)>>2)]=$31; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 label=2;break; //@line 106 "lib/lua-5.2.3/src/lobject.c"
 case 5: 
 var $33=$2; //@line 110 "lib/lua-5.2.3/src/lobject.c"
 STACKTOP=sp;return $33; //@line 110 "lib/lua-5.2.3/src/lobject.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaS_eqlngstr($a,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $len;
 $1=$a;
 $2=$b;
 var $3=$1; //@line 34 "lib/lua-5.2.3/src/lstring.c"
 var $4=$3; //@line 34 "lib/lua-5.2.3/src/lstring.c"
 var $5=(($4+12)|0); //@line 34 "lib/lua-5.2.3/src/lstring.c"
 var $6=HEAP32[(($5)>>2)]; //@line 34 "lib/lua-5.2.3/src/lstring.c"
 $len=$6; //@line 34 "lib/lua-5.2.3/src/lstring.c"
 var $7=$1; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $8=$2; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $9=($7|0)==($8|0); //@line 36 "lib/lua-5.2.3/src/lstring.c"
 if($9){var $30=1;label=5;break;}else{label=2;break;} //@line 36 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $11=$len; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $12=$2; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $13=$12; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $14=(($13+12)|0); //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $15=HEAP32[(($14)>>2)]; //@line 36 "lib/lua-5.2.3/src/lstring.c"
 var $16=($11|0)==($15|0); //@line 36 "lib/lua-5.2.3/src/lstring.c"
 if($16){label=3;break;}else{var $28=0;label=4;break;} //@line 36 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $18=$1; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $19=(($18+16)|0); //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $20=$19; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $21=$2; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $22=(($21+16)|0); //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $23=$22; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $24=$len; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $25=_memcmp($20,$23,$24); //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $26=($25|0)==0; //@line 38 "lib/lua-5.2.3/src/lstring.c"
 var $28=$26;label=4;break;
 case 4: 
 var $28;
 var $30=$28;label=5;break;
 case 5: 
 var $30;
 var $31=($30&1);
 STACKTOP=sp;return $31; //@line 39 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaS_eqstr($a,$b){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 $1=$a;
 $2=$b;
 var $3=$1; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $4=$3; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $5=(($4+4)|0); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $6=HEAP8[($5)]; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $7=($6&255); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $8=$2; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $9=$8; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $10=(($9+4)|0); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $11=HEAP8[($10)]; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $12=($11&255); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $13=($7|0)==($12|0); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 if($13){label=2;break;}else{var $34=0;label=6;break;} //@line 46 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $15=$1; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $16=$15; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $17=(($16+4)|0); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $18=HEAP8[($17)]; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $19=($18&255); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $20=($19|0)==4; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 if($20){label=3;break;}else{label=4;break;} //@line 46 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $22=$1; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $23=$2; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $24=($22|0)==($23|0); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $25=($24&1); //@line 46 "lib/lua-5.2.3/src/lstring.c"
 var $31=$25;label=5;break; //@line 46 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $27=$1; //@line 47 "lib/lua-5.2.3/src/lstring.c"
 var $28=$2; //@line 47 "lib/lua-5.2.3/src/lstring.c"
 var $29=_luaS_eqlngstr($27,$28); //@line 47 "lib/lua-5.2.3/src/lstring.c"
 var $31=$29;label=5;break; //@line 47 "lib/lua-5.2.3/src/lstring.c"
 case 5: 
 var $31; //@line 47 "lib/lua-5.2.3/src/lstring.c"
 var $32=($31|0)!=0; //@line 47 "lib/lua-5.2.3/src/lstring.c"
 var $34=$32;label=6;break;
 case 6: 
 var $34;
 var $35=($34&1);
 STACKTOP=sp;return $35; //@line 48 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaS_hash($str,$l,$seed){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $h;
 var $l1;
 var $step;
 $1=$str;
 $2=$l;
 $3=$seed;
 var $4=$3; //@line 52 "lib/lua-5.2.3/src/lstring.c"
 var $5=$2; //@line 52 "lib/lua-5.2.3/src/lstring.c"
 var $6=$4^$5; //@line 52 "lib/lua-5.2.3/src/lstring.c"
 $h=$6; //@line 52 "lib/lua-5.2.3/src/lstring.c"
 var $7=$2; //@line 54 "lib/lua-5.2.3/src/lstring.c"
 var $8=$7>>>5; //@line 54 "lib/lua-5.2.3/src/lstring.c"
 var $9=((($8)+(1))|0); //@line 54 "lib/lua-5.2.3/src/lstring.c"
 $step=$9; //@line 54 "lib/lua-5.2.3/src/lstring.c"
 var $10=$2; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 $l1=$10; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 label=2;break; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $12=$l1; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 var $13=$step; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 var $14=($12>>>0)>=($13>>>0); //@line 55 "lib/lua-5.2.3/src/lstring.c"
 if($14){label=3;break;}else{label=5;break;} //@line 55 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $16=$h; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $17=$h; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $18=$17<<5; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $19=$h; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $20=$19>>>2; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $21=((($18)+($20))|0); //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $22=$l1; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $23=((($22)-(1))|0); //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $24=$1; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $25=(($24+$23)|0); //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $26=HEAP8[($25)]; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $27=($26&255); //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $28=((($21)+($27))|0); //@line 56 "lib/lua-5.2.3/src/lstring.c"
 var $29=$16^$28; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 $h=$29; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 label=4;break; //@line 56 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $31=$step; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 var $32=$l1; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 var $33=((($32)-($31))|0); //@line 55 "lib/lua-5.2.3/src/lstring.c"
 $l1=$33; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 label=2;break; //@line 55 "lib/lua-5.2.3/src/lstring.c"
 case 5: 
 var $35=$h; //@line 57 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $35; //@line 57 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaS_resize($L,$newsize){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $i;
 var $tb;
 var $p;
 var $next;
 var $h;
 $1=$L;
 $2=$newsize;
 var $3=$1; //@line 66 "lib/lua-5.2.3/src/lstring.c"
 var $4=(($3+12)|0); //@line 66 "lib/lua-5.2.3/src/lstring.c"
 var $5=HEAP32[(($4)>>2)]; //@line 66 "lib/lua-5.2.3/src/lstring.c"
 var $6=(($5+24)|0); //@line 66 "lib/lua-5.2.3/src/lstring.c"
 $tb=$6; //@line 66 "lib/lua-5.2.3/src/lstring.c"
 var $7=$1; //@line 68 "lib/lua-5.2.3/src/lstring.c"
 _luaC_runtilstate($7,-5); //@line 68 "lib/lua-5.2.3/src/lstring.c"
 var $8=$2; //@line 69 "lib/lua-5.2.3/src/lstring.c"
 var $9=$tb; //@line 69 "lib/lua-5.2.3/src/lstring.c"
 var $10=(($9+8)|0); //@line 69 "lib/lua-5.2.3/src/lstring.c"
 var $11=HEAP32[(($10)>>2)]; //@line 69 "lib/lua-5.2.3/src/lstring.c"
 var $12=($8|0)>($11|0); //@line 69 "lib/lua-5.2.3/src/lstring.c"
 if($12){label=2;break;}else{label=10;break;} //@line 69 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $14=$2; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $15=((($14)+(1))|0); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $16=($15>>>0)>1073741823; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 if($16){label=3;break;}else{label=4;break;} //@line 70 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $18=$1; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 _luaM_toobig($18); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 throw "Reached an unreachable!"; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 label=5;break; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $22=0;label=5;break; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 case 5: 
 var $22; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $23=$1; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $24=$tb; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $25=(($24)|0); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $26=HEAP32[(($25)>>2)]; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $27=$26; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $28=$tb; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $29=(($28+8)|0); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $30=HEAP32[(($29)>>2)]; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $31=($30<<2); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $32=$2; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $33=($32<<2); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $34=_luaM_realloc_($23,$27,$31,$33); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $35=$34; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $36=$tb; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $37=(($36)|0); //@line 70 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($37)>>2)]=$35; //@line 70 "lib/lua-5.2.3/src/lstring.c"
 var $38=$tb; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $39=(($38+8)|0); //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $40=HEAP32[(($39)>>2)]; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 $i=$40; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 label=6;break; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 case 6: 
 var $42=$i; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $43=$2; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $44=($42|0)<($43|0); //@line 71 "lib/lua-5.2.3/src/lstring.c"
 if($44){label=7;break;}else{label=9;break;} //@line 71 "lib/lua-5.2.3/src/lstring.c"
 case 7: 
 var $46=$i; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $47=$tb; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $48=(($47)|0); //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $49=HEAP32[(($48)>>2)]; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $50=(($49+($46<<2))|0); //@line 71 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($50)>>2)]=0; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 label=8;break; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 case 8: 
 var $52=$i; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 var $53=((($52)+(1))|0); //@line 71 "lib/lua-5.2.3/src/lstring.c"
 $i=$53; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 label=6;break; //@line 71 "lib/lua-5.2.3/src/lstring.c"
 case 9: 
 label=10;break; //@line 72 "lib/lua-5.2.3/src/lstring.c"
 case 10: 
 $i=0; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 label=11;break; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 case 11: 
 var $57=$i; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 var $58=$tb; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 var $59=(($58+8)|0); //@line 74 "lib/lua-5.2.3/src/lstring.c"
 var $60=HEAP32[(($59)>>2)]; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 var $61=($57|0)<($60|0); //@line 74 "lib/lua-5.2.3/src/lstring.c"
 if($61){label=12;break;}else{label=17;break;} //@line 74 "lib/lua-5.2.3/src/lstring.c"
 case 12: 
 var $63=$i; //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $64=$tb; //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $65=(($64)|0); //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $66=HEAP32[(($65)>>2)]; //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $67=(($66+($63<<2))|0); //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $68=HEAP32[(($67)>>2)]; //@line 75 "lib/lua-5.2.3/src/lstring.c"
 $p=$68; //@line 75 "lib/lua-5.2.3/src/lstring.c"
 var $69=$i; //@line 76 "lib/lua-5.2.3/src/lstring.c"
 var $70=$tb; //@line 76 "lib/lua-5.2.3/src/lstring.c"
 var $71=(($70)|0); //@line 76 "lib/lua-5.2.3/src/lstring.c"
 var $72=HEAP32[(($71)>>2)]; //@line 76 "lib/lua-5.2.3/src/lstring.c"
 var $73=(($72+($69<<2))|0); //@line 76 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($73)>>2)]=0; //@line 76 "lib/lua-5.2.3/src/lstring.c"
 label=13;break; //@line 77 "lib/lua-5.2.3/src/lstring.c"
 case 13: 
 var $75=$p; //@line 77 "lib/lua-5.2.3/src/lstring.c"
 var $76=($75|0)!=0; //@line 77 "lib/lua-5.2.3/src/lstring.c"
 if($76){label=14;break;}else{label=15;break;} //@line 77 "lib/lua-5.2.3/src/lstring.c"
 case 14: 
 var $78=$p; //@line 78 "lib/lua-5.2.3/src/lstring.c"
 var $79=$78; //@line 78 "lib/lua-5.2.3/src/lstring.c"
 var $80=(($79)|0); //@line 78 "lib/lua-5.2.3/src/lstring.c"
 var $81=HEAP32[(($80)>>2)]; //@line 78 "lib/lua-5.2.3/src/lstring.c"
 $next=$81; //@line 78 "lib/lua-5.2.3/src/lstring.c"
 var $82=$p; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $83=$82; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $84=$83; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $85=(($84+8)|0); //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $86=HEAP32[(($85)>>2)]; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $87=$2; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $88=((($87)-(1))|0); //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $89=$86&$88; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 $h=$89; //@line 79 "lib/lua-5.2.3/src/lstring.c"
 var $90=$h; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $91=$tb; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $92=(($91)|0); //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $93=HEAP32[(($92)>>2)]; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $94=(($93+($90<<2))|0); //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $95=HEAP32[(($94)>>2)]; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $96=$p; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $97=$96; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $98=(($97)|0); //@line 80 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($98)>>2)]=$95; //@line 80 "lib/lua-5.2.3/src/lstring.c"
 var $99=$p; //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $100=$h; //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $101=$tb; //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $102=(($101)|0); //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $103=HEAP32[(($102)>>2)]; //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $104=(($103+($100<<2))|0); //@line 81 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($104)>>2)]=$99; //@line 81 "lib/lua-5.2.3/src/lstring.c"
 var $105=$p; //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $106=$105; //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $107=(($106+5)|0); //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $108=HEAP8[($107)]; //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $109=($108&255); //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $110=$109&191; //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $111=(($110)&255); //@line 82 "lib/lua-5.2.3/src/lstring.c"
 HEAP8[($107)]=$111; //@line 82 "lib/lua-5.2.3/src/lstring.c"
 var $112=$next; //@line 83 "lib/lua-5.2.3/src/lstring.c"
 $p=$112; //@line 83 "lib/lua-5.2.3/src/lstring.c"
 label=13;break; //@line 84 "lib/lua-5.2.3/src/lstring.c"
 case 15: 
 label=16;break; //@line 85 "lib/lua-5.2.3/src/lstring.c"
 case 16: 
 var $115=$i; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 var $116=((($115)+(1))|0); //@line 74 "lib/lua-5.2.3/src/lstring.c"
 $i=$116; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 label=11;break; //@line 74 "lib/lua-5.2.3/src/lstring.c"
 case 17: 
 var $118=$2; //@line 86 "lib/lua-5.2.3/src/lstring.c"
 var $119=$tb; //@line 86 "lib/lua-5.2.3/src/lstring.c"
 var $120=(($119+8)|0); //@line 86 "lib/lua-5.2.3/src/lstring.c"
 var $121=HEAP32[(($120)>>2)]; //@line 86 "lib/lua-5.2.3/src/lstring.c"
 var $122=($118|0)<($121|0); //@line 86 "lib/lua-5.2.3/src/lstring.c"
 if($122){label=18;break;}else{label=22;break;} //@line 86 "lib/lua-5.2.3/src/lstring.c"
 case 18: 
 var $124=$2; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $125=((($124)+(1))|0); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $126=($125>>>0)>1073741823; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 if($126){label=19;break;}else{label=20;break;} //@line 89 "lib/lua-5.2.3/src/lstring.c"
 case 19: 
 var $128=$1; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 _luaM_toobig($128); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 throw "Reached an unreachable!"; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 label=21;break; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 case 20: 
 var $132=0;label=21;break; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 case 21: 
 var $132; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $133=$1; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $134=$tb; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $135=(($134)|0); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $136=HEAP32[(($135)>>2)]; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $137=$136; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $138=$tb; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $139=(($138+8)|0); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $140=HEAP32[(($139)>>2)]; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $141=($140<<2); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $142=$2; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $143=($142<<2); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $144=_luaM_realloc_($133,$137,$141,$143); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $145=$144; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $146=$tb; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 var $147=(($146)|0); //@line 89 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($147)>>2)]=$145; //@line 89 "lib/lua-5.2.3/src/lstring.c"
 label=22;break; //@line 90 "lib/lua-5.2.3/src/lstring.c"
 case 22: 
 var $149=$2; //@line 91 "lib/lua-5.2.3/src/lstring.c"
 var $150=$tb; //@line 91 "lib/lua-5.2.3/src/lstring.c"
 var $151=(($150+8)|0); //@line 91 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($151)>>2)]=$149; //@line 91 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return; //@line 92 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _luaS_newlstr($L,$str,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 $2=$L;
 $3=$str;
 $4=$l;
 var $5=$4; //@line 157 "lib/lua-5.2.3/src/lstring.c"
 var $6=($5>>>0)<=40; //@line 157 "lib/lua-5.2.3/src/lstring.c"
 if($6){label=2;break;}else{label=3;break;} //@line 157 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $8=$2; //@line 158 "lib/lua-5.2.3/src/lstring.c"
 var $9=$3; //@line 158 "lib/lua-5.2.3/src/lstring.c"
 var $10=$4; //@line 158 "lib/lua-5.2.3/src/lstring.c"
 var $11=_internshrstr($8,$9,$10); //@line 158 "lib/lua-5.2.3/src/lstring.c"
 $1=$11; //@line 158 "lib/lua-5.2.3/src/lstring.c"
 label=6;break; //@line 158 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $13=$4; //@line 160 "lib/lua-5.2.3/src/lstring.c"
 var $14=((($13)+(1))|0); //@line 160 "lib/lua-5.2.3/src/lstring.c"
 var $15=($14>>>0)>4294967277; //@line 160 "lib/lua-5.2.3/src/lstring.c"
 if($15){label=4;break;}else{label=5;break;} //@line 160 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $17=$2; //@line 161 "lib/lua-5.2.3/src/lstring.c"
 _luaM_toobig($17); //@line 161 "lib/lua-5.2.3/src/lstring.c"
 throw "Reached an unreachable!"; //@line 161 "lib/lua-5.2.3/src/lstring.c"
 case 5: 
 var $19=$2; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $20=$3; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $21=$4; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $22=$2; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $23=(($22+12)|0); //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $24=HEAP32[(($23)>>2)]; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $25=(($24+56)|0); //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $26=HEAP32[(($25)>>2)]; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 var $27=_createstrobj($19,$20,$21,20,$26,0); //@line 162 "lib/lua-5.2.3/src/lstring.c"
 $1=$27; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 label=6;break; //@line 162 "lib/lua-5.2.3/src/lstring.c"
 case 6: 
 var $29=$1; //@line 164 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $29; //@line 164 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _internshrstr($L,$str,$l){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $o;
 var $g;
 var $h;
 var $ts;
 $2=$L;
 $3=$str;
 $4=$l;
 var $5=$2; //@line 135 "lib/lua-5.2.3/src/lstring.c"
 var $6=(($5+12)|0); //@line 135 "lib/lua-5.2.3/src/lstring.c"
 var $7=HEAP32[(($6)>>2)]; //@line 135 "lib/lua-5.2.3/src/lstring.c"
 $g=$7; //@line 135 "lib/lua-5.2.3/src/lstring.c"
 var $8=$3; //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $9=$4; //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $10=$g; //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $11=(($10+56)|0); //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $12=HEAP32[(($11)>>2)]; //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $13=_luaS_hash($8,$9,$12); //@line 136 "lib/lua-5.2.3/src/lstring.c"
 $h=$13; //@line 136 "lib/lua-5.2.3/src/lstring.c"
 var $14=$h; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $15=$g; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $16=(($15+24)|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $17=(($16+8)|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $18=HEAP32[(($17)>>2)]; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $19=((($18)-(1))|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $20=$14&$19; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $21=$g; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $22=(($21+24)|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $23=(($22)|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $24=HEAP32[(($23)>>2)]; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $25=(($24+($20<<2))|0); //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $26=HEAP32[(($25)>>2)]; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 $o=$26; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 label=2;break; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $28=$o; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 var $29=($28|0)!=0; //@line 137 "lib/lua-5.2.3/src/lstring.c"
 if($29){label=3;break;}else{label=11;break;} //@line 137 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $31=$o; //@line 140 "lib/lua-5.2.3/src/lstring.c"
 var $32=$31; //@line 140 "lib/lua-5.2.3/src/lstring.c"
 $ts=$32; //@line 140 "lib/lua-5.2.3/src/lstring.c"
 var $33=$h; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $34=$ts; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $35=$34; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $36=(($35+8)|0); //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $37=HEAP32[(($36)>>2)]; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $38=($33|0)==($37|0); //@line 141 "lib/lua-5.2.3/src/lstring.c"
 if($38){label=4;break;}else{label=9;break;} //@line 141 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $40=$4; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $41=$ts; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $42=$41; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $43=(($42+12)|0); //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $44=HEAP32[(($43)>>2)]; //@line 141 "lib/lua-5.2.3/src/lstring.c"
 var $45=($40|0)==($44|0); //@line 141 "lib/lua-5.2.3/src/lstring.c"
 if($45){label=5;break;}else{label=9;break;} //@line 141 "lib/lua-5.2.3/src/lstring.c"
 case 5: 
 var $47=$3; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $48=$ts; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $49=(($48+16)|0); //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $50=$49; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $51=$4; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $52=$51; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $53=_memcmp($47,$50,$52); //@line 143 "lib/lua-5.2.3/src/lstring.c"
 var $54=($53|0)==0; //@line 143 "lib/lua-5.2.3/src/lstring.c"
 if($54){label=6;break;}else{label=9;break;} //@line 143 "lib/lua-5.2.3/src/lstring.c"
 case 6: 
 var $56=$o; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $57=$56; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $58=(($57+5)|0); //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $59=HEAP8[($58)]; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $60=($59&255); //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $61=$60^3; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $62=$2; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $63=(($62+12)|0); //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $64=HEAP32[(($63)>>2)]; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $65=(($64+60)|0); //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $66=HEAP8[($65)]; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $67=($66&255); //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $68=$67^3; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $69=$61&$68; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 var $70=($69|0)!=0; //@line 144 "lib/lua-5.2.3/src/lstring.c"
 if($70){label=8;break;}else{label=7;break;} //@line 144 "lib/lua-5.2.3/src/lstring.c"
 case 7: 
 var $72=$o; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $73=$72; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $74=(($73+5)|0); //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $75=HEAP8[($74)]; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $76=($75&255); //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $77=$76^3; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 var $78=(($77)&255); //@line 145 "lib/lua-5.2.3/src/lstring.c"
 HEAP8[($74)]=$78; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 label=8;break; //@line 145 "lib/lua-5.2.3/src/lstring.c"
 case 8: 
 var $80=$ts; //@line 146 "lib/lua-5.2.3/src/lstring.c"
 $1=$80; //@line 146 "lib/lua-5.2.3/src/lstring.c"
 label=12;break; //@line 146 "lib/lua-5.2.3/src/lstring.c"
 case 9: 
 label=10;break; //@line 148 "lib/lua-5.2.3/src/lstring.c"
 case 10: 
 var $83=$o; //@line 139 "lib/lua-5.2.3/src/lstring.c"
 var $84=$83; //@line 139 "lib/lua-5.2.3/src/lstring.c"
 var $85=(($84)|0); //@line 139 "lib/lua-5.2.3/src/lstring.c"
 var $86=HEAP32[(($85)>>2)]; //@line 139 "lib/lua-5.2.3/src/lstring.c"
 $o=$86; //@line 139 "lib/lua-5.2.3/src/lstring.c"
 label=2;break; //@line 139 "lib/lua-5.2.3/src/lstring.c"
 case 11: 
 var $88=$2; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 var $89=$3; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 var $90=$4; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 var $91=$h; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 var $92=_newshrstr($88,$89,$90,$91); //@line 149 "lib/lua-5.2.3/src/lstring.c"
 $1=$92; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 label=12;break; //@line 149 "lib/lua-5.2.3/src/lstring.c"
 case 12: 
 var $94=$1; //@line 150 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $94; //@line 150 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _createstrobj($L,$str,$l,$tag,$h,$list){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 var $3;
 var $4;
 var $5;
 var $6;
 var $ts;
 var $totalsize;
 $1=$L;
 $2=$str;
 $3=$l;
 $4=$tag;
 $5=$h;
 $6=$list;
 var $7=$3; //@line 102 "lib/lua-5.2.3/src/lstring.c"
 var $8=((($7)+(1))|0); //@line 102 "lib/lua-5.2.3/src/lstring.c"
 var $9=$8; //@line 102 "lib/lua-5.2.3/src/lstring.c"
 var $10=((($9)+(16))|0); //@line 102 "lib/lua-5.2.3/src/lstring.c"
 $totalsize=$10; //@line 102 "lib/lua-5.2.3/src/lstring.c"
 var $11=$1; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $12=$4; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $13=$totalsize; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $14=$6; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $15=_luaC_newobj($11,$12,$13,$14,0); //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $16=$15; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 $ts=$16; //@line 103 "lib/lua-5.2.3/src/lstring.c"
 var $17=$3; //@line 104 "lib/lua-5.2.3/src/lstring.c"
 var $18=$ts; //@line 104 "lib/lua-5.2.3/src/lstring.c"
 var $19=$18; //@line 104 "lib/lua-5.2.3/src/lstring.c"
 var $20=(($19+12)|0); //@line 104 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($20)>>2)]=$17; //@line 104 "lib/lua-5.2.3/src/lstring.c"
 var $21=$5; //@line 105 "lib/lua-5.2.3/src/lstring.c"
 var $22=$ts; //@line 105 "lib/lua-5.2.3/src/lstring.c"
 var $23=$22; //@line 105 "lib/lua-5.2.3/src/lstring.c"
 var $24=(($23+8)|0); //@line 105 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($24)>>2)]=$21; //@line 105 "lib/lua-5.2.3/src/lstring.c"
 var $25=$ts; //@line 106 "lib/lua-5.2.3/src/lstring.c"
 var $26=$25; //@line 106 "lib/lua-5.2.3/src/lstring.c"
 var $27=(($26+6)|0); //@line 106 "lib/lua-5.2.3/src/lstring.c"
 HEAP8[($27)]=0; //@line 106 "lib/lua-5.2.3/src/lstring.c"
 var $28=$ts; //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $29=(($28+16)|0); //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $30=$29; //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $31=$2; //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $32=$3; //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $33=$32; //@line 107 "lib/lua-5.2.3/src/lstring.c"
 assert($33 % 1 === 0);(_memcpy($30, $31, $33)|0); //@line 107 "lib/lua-5.2.3/src/lstring.c"
 var $34=$3; //@line 108 "lib/lua-5.2.3/src/lstring.c"
 var $35=$ts; //@line 108 "lib/lua-5.2.3/src/lstring.c"
 var $36=(($35+16)|0); //@line 108 "lib/lua-5.2.3/src/lstring.c"
 var $37=$36; //@line 108 "lib/lua-5.2.3/src/lstring.c"
 var $38=(($37+$34)|0); //@line 108 "lib/lua-5.2.3/src/lstring.c"
 HEAP8[($38)]=0; //@line 108 "lib/lua-5.2.3/src/lstring.c"
 var $39=$ts; //@line 109 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $39; //@line 109 "lib/lua-5.2.3/src/lstring.c"
}


function _luaS_new($L,$str){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);

 var $1;
 var $2;
 $1=$L;
 $2=$str;
 var $3=$1; //@line 171 "lib/lua-5.2.3/src/lstring.c"
 var $4=$2; //@line 171 "lib/lua-5.2.3/src/lstring.c"
 var $5=$2; //@line 171 "lib/lua-5.2.3/src/lstring.c"
 var $6=_strlen($5); //@line 171 "lib/lua-5.2.3/src/lstring.c"
 var $7=_luaS_newlstr($3,$4,$6); //@line 171 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $7; //@line 171 "lib/lua-5.2.3/src/lstring.c"
}


function _luaS_newudata($L,$s,$e){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $u;
 $1=$L;
 $2=$s;
 $3=$e;
 var $4=$2; //@line 177 "lib/lua-5.2.3/src/lstring.c"
 var $5=($4>>>0)>4294967269; //@line 177 "lib/lua-5.2.3/src/lstring.c"
 if($5){label=2;break;}else{label=3;break;} //@line 177 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $7=$1; //@line 178 "lib/lua-5.2.3/src/lstring.c"
 _luaM_toobig($7); //@line 178 "lib/lua-5.2.3/src/lstring.c"
 throw "Reached an unreachable!"; //@line 178 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $9=$1; //@line 179 "lib/lua-5.2.3/src/lstring.c"
 var $10=$2; //@line 179 "lib/lua-5.2.3/src/lstring.c"
 var $11=((($10)+(24))|0); //@line 179 "lib/lua-5.2.3/src/lstring.c"
 var $12=_luaC_newobj($9,7,$11,0,0); //@line 179 "lib/lua-5.2.3/src/lstring.c"
 var $13=$12; //@line 179 "lib/lua-5.2.3/src/lstring.c"
 $u=$13; //@line 179 "lib/lua-5.2.3/src/lstring.c"
 var $14=$2; //@line 180 "lib/lua-5.2.3/src/lstring.c"
 var $15=$u; //@line 180 "lib/lua-5.2.3/src/lstring.c"
 var $16=$15; //@line 180 "lib/lua-5.2.3/src/lstring.c"
 var $17=(($16+16)|0); //@line 180 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($17)>>2)]=$14; //@line 180 "lib/lua-5.2.3/src/lstring.c"
 var $18=$u; //@line 181 "lib/lua-5.2.3/src/lstring.c"
 var $19=$18; //@line 181 "lib/lua-5.2.3/src/lstring.c"
 var $20=(($19+8)|0); //@line 181 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($20)>>2)]=0; //@line 181 "lib/lua-5.2.3/src/lstring.c"
 var $21=$3; //@line 182 "lib/lua-5.2.3/src/lstring.c"
 var $22=$u; //@line 182 "lib/lua-5.2.3/src/lstring.c"
 var $23=$22; //@line 182 "lib/lua-5.2.3/src/lstring.c"
 var $24=(($23+12)|0); //@line 182 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($24)>>2)]=$21; //@line 182 "lib/lua-5.2.3/src/lstring.c"
 var $25=$u; //@line 183 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $25; //@line 183 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _newshrstr($L,$str,$l,$h){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1;
 var $2;
 var $3;
 var $4;
 var $list;
 var $tb;
 var $s;
 $1=$L;
 $2=$str;
 $3=$l;
 $4=$h;
 var $5=$1; //@line 119 "lib/lua-5.2.3/src/lstring.c"
 var $6=(($5+12)|0); //@line 119 "lib/lua-5.2.3/src/lstring.c"
 var $7=HEAP32[(($6)>>2)]; //@line 119 "lib/lua-5.2.3/src/lstring.c"
 var $8=(($7+24)|0); //@line 119 "lib/lua-5.2.3/src/lstring.c"
 $tb=$8; //@line 119 "lib/lua-5.2.3/src/lstring.c"
 var $9=$tb; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $10=(($9+4)|0); //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $11=HEAP32[(($10)>>2)]; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $12=$tb; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $13=(($12+8)|0); //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $14=HEAP32[(($13)>>2)]; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $15=($11>>>0)>=($14>>>0); //@line 121 "lib/lua-5.2.3/src/lstring.c"
 if($15){label=2;break;}else{label=4;break;} //@line 121 "lib/lua-5.2.3/src/lstring.c"
 case 2: 
 var $17=$tb; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $18=(($17+8)|0); //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $19=HEAP32[(($18)>>2)]; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 var $20=($19|0)<=1073741822; //@line 121 "lib/lua-5.2.3/src/lstring.c"
 if($20){label=3;break;}else{label=4;break;} //@line 121 "lib/lua-5.2.3/src/lstring.c"
 case 3: 
 var $22=$1; //@line 122 "lib/lua-5.2.3/src/lstring.c"
 var $23=$tb; //@line 122 "lib/lua-5.2.3/src/lstring.c"
 var $24=(($23+8)|0); //@line 122 "lib/lua-5.2.3/src/lstring.c"
 var $25=HEAP32[(($24)>>2)]; //@line 122 "lib/lua-5.2.3/src/lstring.c"
 var $26=($25<<1); //@line 122 "lib/lua-5.2.3/src/lstring.c"
 _luaS_resize($22,$26); //@line 122 "lib/lua-5.2.3/src/lstring.c"
 label=4;break; //@line 122 "lib/lua-5.2.3/src/lstring.c"
 case 4: 
 var $28=$4; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $29=$tb; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $30=(($29+8)|0); //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $31=HEAP32[(($30)>>2)]; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $32=((($31)-(1))|0); //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $33=$28&$32; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $34=$tb; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $35=(($34)|0); //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $36=HEAP32[(($35)>>2)]; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $37=(($36+($33<<2))|0); //@line 123 "lib/lua-5.2.3/src/lstring.c"
 $list=$37; //@line 123 "lib/lua-5.2.3/src/lstring.c"
 var $38=$1; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $39=$2; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $40=$3; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $41=$4; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $42=$list; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $43=_createstrobj($38,$39,$40,4,$41,$42); //@line 124 "lib/lua-5.2.3/src/lstring.c"
 $s=$43; //@line 124 "lib/lua-5.2.3/src/lstring.c"
 var $44=$tb; //@line 125 "lib/lua-5.2.3/src/lstring.c"
 var $45=(($44+4)|0); //@line 125 "lib/lua-5.2.3/src/lstring.c"
 var $46=HEAP32[(($45)>>2)]; //@line 125 "lib/lua-5.2.3/src/lstring.c"
 var $47=((($46)+(1))|0); //@line 125 "lib/lua-5.2.3/src/lstring.c"
 HEAP32[(($45)>>2)]=$47; //@line 125 "lib/lua-5.2.3/src/lstring.c"
 var $48=$s; //@line 126 "lib/lua-5.2.3/src/lstring.c"
 STACKTOP=sp;return $48; //@line 126 "lib/lua-5.2.3/src/lstring.c"
  default: assert(0, "bad label: " + label);
 }

}


function _strcoll($l,$r){
 var label=0;


 var $1=_strcmp($l,$r);
 return $1;
}


function _ldexp($x,$n){
 var label=0;


 var $1=_scalbn($x,$n);
 return $1;
}


function __ZNSt9type_infoD2Ev($this){
 var label=0;


 return;
}


function __ZN10__cxxabiv116__shim_type_infoD2Ev($this){
 var label=0;


 var $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this){
 var label=0;


 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this){
 var label=0;


 return;
}


function __ZN10__cxxabiv117__class_type_infoD0Ev($this){
 var label=0;


 var $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 var $2=$this;
 __ZdlPv($2);
 return;
}


function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this){
 var label=0;


 var $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 var $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $info=sp;
 var $1=(($this)|0);
 var $2=(($thrown_type)|0);
 var $3=($1|0)==($2|0);
 if($3){var $_0=1;label=6;break;}else{label=2;break;}
 case 2: 
 var $5=($thrown_type|0)==0;
 if($5){var $_0=0;label=6;break;}else{label=3;break;}
 case 3: 
 var $7=$thrown_type;
 var $8=___dynamic_cast($7,18216,18200,-1);
 var $9=$8;
 var $10=($8|0)==0;
 if($10){var $_0=0;label=6;break;}else{label=4;break;}
 case 4: 
 var $12=$info;
 _memset($12, 0, 56)|0;
 var $13=(($info)|0);
 HEAP32[(($13)>>2)]=$9;
 var $14=(($info+8)|0);
 HEAP32[(($14)>>2)]=$this;
 var $15=(($info+12)|0);
 HEAP32[(($15)>>2)]=-1;
 var $16=(($info+48)|0);
 HEAP32[(($16)>>2)]=1;
 var $17=$8;
 var $18=HEAP32[(($17)>>2)];
 var $19=(($18+28)|0);
 var $20=HEAP32[(($19)>>2)];
 var $21=HEAP32[(($adjustedPtr)>>2)];
 FUNCTION_TABLE[$20]($9,$info,$21,1);
 var $22=(($info+24)|0);
 var $23=HEAP32[(($22)>>2)];
 var $24=($23|0)==1;
 if($24){label=5;break;}else{var $_0=0;label=6;break;}
 case 5: 
 var $26=(($info+16)|0);
 var $27=HEAP32[(($26)>>2)];
 HEAP32[(($adjustedPtr)>>2)]=$27;
 var $_0=1;label=6;break;
 case 6: 
 var $_0;
 STACKTOP=sp;return $_0;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($info+8)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=($2|0)==($this|0);
 if($3){label=2;break;}else{label=8;break;}
 case 2: 
 var $5=(($info+16)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=($6|0)==0;
 if($7){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($5)>>2)]=$adjustedPtr;
 var $9=(($info+24)|0);
 HEAP32[(($9)>>2)]=$path_below;
 var $10=(($info+36)|0);
 HEAP32[(($10)>>2)]=1;
 label=8;break;
 case 4: 
 var $12=($6|0)==($adjustedPtr|0);
 if($12){label=5;break;}else{label=7;break;}
 case 5: 
 var $14=(($info+24)|0);
 var $15=HEAP32[(($14)>>2)];
 var $16=($15|0)==2;
 if($16){label=6;break;}else{label=8;break;}
 case 6: 
 HEAP32[(($14)>>2)]=$path_below;
 label=8;break;
 case 7: 
 var $19=(($info+36)|0);
 var $20=HEAP32[(($19)>>2)];
 var $21=((($20)+(1))|0);
 HEAP32[(($19)>>2)]=$21;
 var $22=(($info+24)|0);
 HEAP32[(($22)>>2)]=2;
 var $23=(($info+54)|0);
 HEAP8[($23)]=1;
 label=8;break;
 case 8: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($this)|0);
 var $2=(($info+8)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($3)|0);
 var $5=($1|0)==($4|0);
 if($5){label=2;break;}else{label=8;break;}
 case 2: 
 var $7=(($info+16)|0);
 var $8=HEAP32[(($7)>>2)];
 var $9=($8|0)==0;
 if($9){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($7)>>2)]=$adjustedPtr;
 var $11=(($info+24)|0);
 HEAP32[(($11)>>2)]=$path_below;
 var $12=(($info+36)|0);
 HEAP32[(($12)>>2)]=1;
 label=9;break;
 case 4: 
 var $14=($8|0)==($adjustedPtr|0);
 if($14){label=5;break;}else{label=7;break;}
 case 5: 
 var $16=(($info+24)|0);
 var $17=HEAP32[(($16)>>2)];
 var $18=($17|0)==2;
 if($18){label=6;break;}else{label=9;break;}
 case 6: 
 HEAP32[(($16)>>2)]=$path_below;
 label=9;break;
 case 7: 
 var $21=(($info+36)|0);
 var $22=HEAP32[(($21)>>2)];
 var $23=((($22)+(1))|0);
 HEAP32[(($21)>>2)]=$23;
 var $24=(($info+24)|0);
 HEAP32[(($24)>>2)]=2;
 var $25=(($info+54)|0);
 HEAP8[($25)]=1;
 label=9;break;
 case 8: 
 var $27=(($this+8)|0);
 var $28=HEAP32[(($27)>>2)];
 var $29=$28;
 var $30=HEAP32[(($29)>>2)];
 var $31=(($30+28)|0);
 var $32=HEAP32[(($31)>>2)];
 FUNCTION_TABLE[$32]($28,$info,$adjustedPtr,$path_below);
 label=9;break;
 case 9: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $info=sp;
 var $1=$static_ptr;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(8))|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=$4;
 var $6=(($static_ptr+$5)|0);
 var $7=((($2)-(4))|0);
 var $8=HEAP32[(($7)>>2)];
 var $9=$8;
 var $10=(($info)|0);
 HEAP32[(($10)>>2)]=$dst_type;
 var $11=(($info+4)|0);
 HEAP32[(($11)>>2)]=$static_ptr;
 var $12=(($info+8)|0);
 HEAP32[(($12)>>2)]=$static_type;
 var $13=(($info+12)|0);
 HEAP32[(($13)>>2)]=$src2dst_offset;
 var $14=(($info+16)|0);
 var $15=(($info+20)|0);
 var $16=(($info+24)|0);
 var $17=(($info+28)|0);
 var $18=(($info+32)|0);
 var $19=(($info+40)|0);
 var $20=$8;
 var $21=(($dst_type)|0);
 var $22=($20|0)==($21|0);
 var $23=$14;
 _memset($23, 0, 39)|0;
 if($22){label=2;break;}else{label=3;break;}
 case 2: 
 var $25=(($info+48)|0);
 HEAP32[(($25)>>2)]=1;
 var $26=$8;
 var $27=HEAP32[(($26)>>2)];
 var $28=(($27+20)|0);
 var $29=HEAP32[(($28)>>2)];
 FUNCTION_TABLE[$29]($9,$info,$6,$6,1,0);
 var $30=HEAP32[(($16)>>2)];
 var $31=($30|0)==1;
 var $_=($31?$6:0);
 STACKTOP=sp;return $_;
 case 3: 
 var $33=(($info+36)|0);
 var $34=$8;
 var $35=HEAP32[(($34)>>2)];
 var $36=(($35+24)|0);
 var $37=HEAP32[(($36)>>2)];
 FUNCTION_TABLE[$37]($9,$info,$6,1,0);
 var $38=HEAP32[(($33)>>2)];
 if(($38|0)==0){ label=4;break;}else if(($38|0)==1){ label=7;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 4: 
 var $40=HEAP32[(($19)>>2)];
 var $41=($40|0)==1;
 if($41){label=5;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 5: 
 var $43=HEAP32[(($17)>>2)];
 var $44=($43|0)==1;
 if($44){label=6;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 6: 
 var $46=HEAP32[(($18)>>2)];
 var $47=($46|0)==1;
 var $48=HEAP32[(($15)>>2)];
 var $_13=($47?$48:0);
 var $dst_ptr_0=$_13;label=12;break;
 case 7: 
 var $50=HEAP32[(($16)>>2)];
 var $51=($50|0)==1;
 if($51){label=11;break;}else{label=8;break;}
 case 8: 
 var $53=HEAP32[(($19)>>2)];
 var $54=($53|0)==0;
 if($54){label=9;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 9: 
 var $56=HEAP32[(($17)>>2)];
 var $57=($56|0)==1;
 if($57){label=10;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 10: 
 var $59=HEAP32[(($18)>>2)];
 var $60=($59|0)==1;
 if($60){label=11;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 11: 
 var $62=HEAP32[(($14)>>2)];
 var $dst_ptr_0=$62;label=12;break;
 case 12: 
 var $dst_ptr_0;
 STACKTOP=sp;return $dst_ptr_0;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($this)|0);
 var $2=(($info+8)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($3)|0);
 var $5=($1|0)==($4|0);
 if($5){label=2;break;}else{label=5;break;}
 case 2: 
 var $7=(($info+4)|0);
 var $8=HEAP32[(($7)>>2)];
 var $9=($8|0)==($current_ptr|0);
 if($9){label=3;break;}else{label=20;break;}
 case 3: 
 var $11=(($info+28)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=($12|0)==1;
 if($13){label=20;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($11)>>2)]=$path_below;
 label=20;break;
 case 5: 
 var $16=(($info)|0);
 var $17=HEAP32[(($16)>>2)];
 var $18=(($17)|0);
 var $19=($1|0)==($18|0);
 if($19){label=6;break;}else{label=19;break;}
 case 6: 
 var $21=(($info+16)|0);
 var $22=HEAP32[(($21)>>2)];
 var $23=($22|0)==($current_ptr|0);
 if($23){label=8;break;}else{label=7;break;}
 case 7: 
 var $25=(($info+20)|0);
 var $26=HEAP32[(($25)>>2)];
 var $27=($26|0)==($current_ptr|0);
 if($27){label=8;break;}else{label=10;break;}
 case 8: 
 var $29=($path_below|0)==1;
 if($29){label=9;break;}else{label=20;break;}
 case 9: 
 var $31=(($info+32)|0);
 HEAP32[(($31)>>2)]=1;
 label=20;break;
 case 10: 
 var $33=(($info+32)|0);
 HEAP32[(($33)>>2)]=$path_below;
 var $34=(($info+44)|0);
 var $35=HEAP32[(($34)>>2)];
 var $36=($35|0)==4;
 if($36){label=20;break;}else{label=11;break;}
 case 11: 
 var $38=(($info+52)|0);
 HEAP8[($38)]=0;
 var $39=(($info+53)|0);
 HEAP8[($39)]=0;
 var $40=(($this+8)|0);
 var $41=HEAP32[(($40)>>2)];
 var $42=$41;
 var $43=HEAP32[(($42)>>2)];
 var $44=(($43+20)|0);
 var $45=HEAP32[(($44)>>2)];
 FUNCTION_TABLE[$45]($41,$info,$current_ptr,$current_ptr,1,$use_strcmp);
 var $46=HEAP8[($39)];
 var $47=(($46<<24)>>24)==0;
 if($47){var $is_dst_type_derived_from_static_type_0_off036=0;label=13;break;}else{label=12;break;}
 case 12: 
 var $49=HEAP8[($38)];
 var $not_=(($49<<24)>>24)==0;
 if($not_){var $is_dst_type_derived_from_static_type_0_off036=1;label=13;break;}else{label=17;break;}
 case 13: 
 var $is_dst_type_derived_from_static_type_0_off036;
 HEAP32[(($25)>>2)]=$current_ptr;
 var $50=(($info+40)|0);
 var $51=HEAP32[(($50)>>2)];
 var $52=((($51)+(1))|0);
 HEAP32[(($50)>>2)]=$52;
 var $53=(($info+36)|0);
 var $54=HEAP32[(($53)>>2)];
 var $55=($54|0)==1;
 if($55){label=14;break;}else{label=16;break;}
 case 14: 
 var $57=(($info+24)|0);
 var $58=HEAP32[(($57)>>2)];
 var $59=($58|0)==2;
 if($59){label=15;break;}else{label=16;break;}
 case 15: 
 var $61=(($info+54)|0);
 HEAP8[($61)]=1;
 if($is_dst_type_derived_from_static_type_0_off036){label=17;break;}else{label=18;break;}
 case 16: 
 if($is_dst_type_derived_from_static_type_0_off036){label=17;break;}else{label=18;break;}
 case 17: 
 HEAP32[(($34)>>2)]=3;
 label=20;break;
 case 18: 
 HEAP32[(($34)>>2)]=4;
 label=20;break;
 case 19: 
 var $65=(($this+8)|0);
 var $66=HEAP32[(($65)>>2)];
 var $67=$66;
 var $68=HEAP32[(($67)>>2)];
 var $69=(($68+24)|0);
 var $70=HEAP32[(($69)>>2)];
 FUNCTION_TABLE[$70]($66,$info,$current_ptr,$path_below,$use_strcmp);
 label=20;break;
 case 20: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($info+8)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=($2|0)==($this|0);
 if($3){label=2;break;}else{label=5;break;}
 case 2: 
 var $5=(($info+4)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=($6|0)==($current_ptr|0);
 if($7){label=3;break;}else{label=14;break;}
 case 3: 
 var $9=(($info+28)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=($10|0)==1;
 if($11){label=14;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($9)>>2)]=$path_below;
 label=14;break;
 case 5: 
 var $14=(($info)|0);
 var $15=HEAP32[(($14)>>2)];
 var $16=($15|0)==($this|0);
 if($16){label=6;break;}else{label=14;break;}
 case 6: 
 var $18=(($info+16)|0);
 var $19=HEAP32[(($18)>>2)];
 var $20=($19|0)==($current_ptr|0);
 if($20){label=8;break;}else{label=7;break;}
 case 7: 
 var $22=(($info+20)|0);
 var $23=HEAP32[(($22)>>2)];
 var $24=($23|0)==($current_ptr|0);
 if($24){label=8;break;}else{label=10;break;}
 case 8: 
 var $26=($path_below|0)==1;
 if($26){label=9;break;}else{label=14;break;}
 case 9: 
 var $28=(($info+32)|0);
 HEAP32[(($28)>>2)]=1;
 label=14;break;
 case 10: 
 var $30=(($info+32)|0);
 HEAP32[(($30)>>2)]=$path_below;
 HEAP32[(($22)>>2)]=$current_ptr;
 var $31=(($info+40)|0);
 var $32=HEAP32[(($31)>>2)];
 var $33=((($32)+(1))|0);
 HEAP32[(($31)>>2)]=$33;
 var $34=(($info+36)|0);
 var $35=HEAP32[(($34)>>2)];
 var $36=($35|0)==1;
 if($36){label=11;break;}else{label=13;break;}
 case 11: 
 var $38=(($info+24)|0);
 var $39=HEAP32[(($38)>>2)];
 var $40=($39|0)==2;
 if($40){label=12;break;}else{label=13;break;}
 case 12: 
 var $42=(($info+54)|0);
 HEAP8[($42)]=1;
 label=13;break;
 case 13: 
 var $44=(($info+44)|0);
 HEAP32[(($44)>>2)]=4;
 label=14;break;
 case 14: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($this)|0);
 var $2=(($info+8)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($3)|0);
 var $5=($1|0)==($4|0);
 if($5){label=2;break;}else{label=12;break;}
 case 2: 
 var $7=(($info+53)|0);
 HEAP8[($7)]=1;
 var $8=(($info+4)|0);
 var $9=HEAP32[(($8)>>2)];
 var $10=($9|0)==($current_ptr|0);
 if($10){label=3;break;}else{label=13;break;}
 case 3: 
 var $12=(($info+52)|0);
 HEAP8[($12)]=1;
 var $13=(($info+16)|0);
 var $14=HEAP32[(($13)>>2)];
 var $15=($14|0)==0;
 if($15){label=4;break;}else{label=6;break;}
 case 4: 
 HEAP32[(($13)>>2)]=$dst_ptr;
 var $17=(($info+24)|0);
 HEAP32[(($17)>>2)]=$path_below;
 var $18=(($info+36)|0);
 HEAP32[(($18)>>2)]=1;
 var $19=(($info+48)|0);
 var $20=HEAP32[(($19)>>2)];
 var $21=($20|0)==1;
 var $22=($path_below|0)==1;
 var $or_cond_i=$21&$22;
 if($or_cond_i){label=5;break;}else{label=13;break;}
 case 5: 
 var $24=(($info+54)|0);
 HEAP8[($24)]=1;
 label=13;break;
 case 6: 
 var $26=($14|0)==($dst_ptr|0);
 if($26){label=7;break;}else{label=11;break;}
 case 7: 
 var $28=(($info+24)|0);
 var $29=HEAP32[(($28)>>2)];
 var $30=($29|0)==2;
 if($30){label=8;break;}else{var $33=$29;label=9;break;}
 case 8: 
 HEAP32[(($28)>>2)]=$path_below;
 var $33=$path_below;label=9;break;
 case 9: 
 var $33;
 var $34=(($info+48)|0);
 var $35=HEAP32[(($34)>>2)];
 var $36=($35|0)==1;
 var $37=($33|0)==1;
 var $or_cond23_i=$36&$37;
 if($or_cond23_i){label=10;break;}else{label=13;break;}
 case 10: 
 var $39=(($info+54)|0);
 HEAP8[($39)]=1;
 label=13;break;
 case 11: 
 var $41=(($info+36)|0);
 var $42=HEAP32[(($41)>>2)];
 var $43=((($42)+(1))|0);
 HEAP32[(($41)>>2)]=$43;
 var $44=(($info+54)|0);
 HEAP8[($44)]=1;
 label=13;break;
 case 12: 
 var $46=(($this+8)|0);
 var $47=HEAP32[(($46)>>2)];
 var $48=$47;
 var $49=HEAP32[(($48)>>2)];
 var $50=(($49+20)|0);
 var $51=HEAP32[(($50)>>2)];
 FUNCTION_TABLE[$51]($47,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 label=13;break;
 case 13: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($info+8)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=($2|0)==($this|0);
 if($3){label=2;break;}else{label=12;break;}
 case 2: 
 var $5=(($info+53)|0);
 HEAP8[($5)]=1;
 var $6=(($info+4)|0);
 var $7=HEAP32[(($6)>>2)];
 var $8=($7|0)==($current_ptr|0);
 if($8){label=3;break;}else{label=12;break;}
 case 3: 
 var $10=(($info+52)|0);
 HEAP8[($10)]=1;
 var $11=(($info+16)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=($12|0)==0;
 if($13){label=4;break;}else{label=6;break;}
 case 4: 
 HEAP32[(($11)>>2)]=$dst_ptr;
 var $15=(($info+24)|0);
 HEAP32[(($15)>>2)]=$path_below;
 var $16=(($info+36)|0);
 HEAP32[(($16)>>2)]=1;
 var $17=(($info+48)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=($18|0)==1;
 var $20=($path_below|0)==1;
 var $or_cond_i=$19&$20;
 if($or_cond_i){label=5;break;}else{label=12;break;}
 case 5: 
 var $22=(($info+54)|0);
 HEAP8[($22)]=1;
 label=12;break;
 case 6: 
 var $24=($12|0)==($dst_ptr|0);
 if($24){label=7;break;}else{label=11;break;}
 case 7: 
 var $26=(($info+24)|0);
 var $27=HEAP32[(($26)>>2)];
 var $28=($27|0)==2;
 if($28){label=8;break;}else{var $31=$27;label=9;break;}
 case 8: 
 HEAP32[(($26)>>2)]=$path_below;
 var $31=$path_below;label=9;break;
 case 9: 
 var $31;
 var $32=(($info+48)|0);
 var $33=HEAP32[(($32)>>2)];
 var $34=($33|0)==1;
 var $35=($31|0)==1;
 var $or_cond23_i=$34&$35;
 if($or_cond23_i){label=10;break;}else{label=12;break;}
 case 10: 
 var $37=(($info+54)|0);
 HEAP8[($37)]=1;
 label=12;break;
 case 11: 
 var $39=(($info+36)|0);
 var $40=HEAP32[(($39)>>2)];
 var $41=((($40)+(1))|0);
 HEAP32[(($39)>>2)]=$41;
 var $42=(($info+54)|0);
 HEAP8[($42)]=1;
 label=12;break;
 case 12: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function _malloc($bytes){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($bytes>>>0)<245;
 if($1){label=2;break;}else{label=78;break;}
 case 2: 
 var $3=($bytes>>>0)<11;
 if($3){var $8=16;label=4;break;}else{label=3;break;}
 case 3: 
 var $5=((($bytes)+(11))|0);
 var $6=$5&-8;
 var $8=$6;label=4;break;
 case 4: 
 var $8;
 var $9=$8>>>3;
 var $10=HEAP32[((20000)>>2)];
 var $11=$10>>>($9>>>0);
 var $12=$11&3;
 var $13=($12|0)==0;
 if($13){label=12;break;}else{label=5;break;}
 case 5: 
 var $15=$11&1;
 var $16=$15^1;
 var $17=((($16)+($9))|0);
 var $18=$17<<1;
 var $19=((20040+($18<<2))|0);
 var $20=$19;
 var $_sum111=((($18)+(2))|0);
 var $21=((20040+($_sum111<<2))|0);
 var $22=HEAP32[(($21)>>2)];
 var $23=(($22+8)|0);
 var $24=HEAP32[(($23)>>2)];
 var $25=($20|0)==($24|0);
 if($25){label=6;break;}else{label=7;break;}
 case 6: 
 var $27=1<<$17;
 var $28=$27^-1;
 var $29=$10&$28;
 HEAP32[((20000)>>2)]=$29;
 label=11;break;
 case 7: 
 var $31=$24;
 var $32=HEAP32[((20016)>>2)];
 var $33=($31>>>0)<($32>>>0);
 if($33){label=10;break;}else{label=8;break;}
 case 8: 
 var $35=(($24+12)|0);
 var $36=HEAP32[(($35)>>2)];
 var $37=($36|0)==($22|0);
 if($37){label=9;break;}else{label=10;break;}
 case 9: 
 HEAP32[(($35)>>2)]=$20;
 HEAP32[(($21)>>2)]=$24;
 label=11;break;
 case 10: 
 _abort();
 throw "Reached an unreachable!";
 case 11: 
 var $40=$17<<3;
 var $41=$40|3;
 var $42=(($22+4)|0);
 HEAP32[(($42)>>2)]=$41;
 var $43=$22;
 var $_sum113114=$40|4;
 var $44=(($43+$_sum113114)|0);
 var $45=$44;
 var $46=HEAP32[(($45)>>2)];
 var $47=$46|1;
 HEAP32[(($45)>>2)]=$47;
 var $48=$23;
 var $mem_0=$48;label=341;break;
 case 12: 
 var $50=HEAP32[((20008)>>2)];
 var $51=($8>>>0)>($50>>>0);
 if($51){label=13;break;}else{var $nb_0=$8;label=160;break;}
 case 13: 
 var $53=($11|0)==0;
 if($53){label=27;break;}else{label=14;break;}
 case 14: 
 var $55=$11<<$9;
 var $56=2<<$9;
 var $57=(((-$56))|0);
 var $58=$56|$57;
 var $59=$55&$58;
 var $60=(((-$59))|0);
 var $61=$59&$60;
 var $62=((($61)-(1))|0);
 var $63=$62>>>12;
 var $64=$63&16;
 var $65=$62>>>($64>>>0);
 var $66=$65>>>5;
 var $67=$66&8;
 var $68=$67|$64;
 var $69=$65>>>($67>>>0);
 var $70=$69>>>2;
 var $71=$70&4;
 var $72=$68|$71;
 var $73=$69>>>($71>>>0);
 var $74=$73>>>1;
 var $75=$74&2;
 var $76=$72|$75;
 var $77=$73>>>($75>>>0);
 var $78=$77>>>1;
 var $79=$78&1;
 var $80=$76|$79;
 var $81=$77>>>($79>>>0);
 var $82=((($80)+($81))|0);
 var $83=$82<<1;
 var $84=((20040+($83<<2))|0);
 var $85=$84;
 var $_sum104=((($83)+(2))|0);
 var $86=((20040+($_sum104<<2))|0);
 var $87=HEAP32[(($86)>>2)];
 var $88=(($87+8)|0);
 var $89=HEAP32[(($88)>>2)];
 var $90=($85|0)==($89|0);
 if($90){label=15;break;}else{label=16;break;}
 case 15: 
 var $92=1<<$82;
 var $93=$92^-1;
 var $94=$10&$93;
 HEAP32[((20000)>>2)]=$94;
 label=20;break;
 case 16: 
 var $96=$89;
 var $97=HEAP32[((20016)>>2)];
 var $98=($96>>>0)<($97>>>0);
 if($98){label=19;break;}else{label=17;break;}
 case 17: 
 var $100=(($89+12)|0);
 var $101=HEAP32[(($100)>>2)];
 var $102=($101|0)==($87|0);
 if($102){label=18;break;}else{label=19;break;}
 case 18: 
 HEAP32[(($100)>>2)]=$85;
 HEAP32[(($86)>>2)]=$89;
 label=20;break;
 case 19: 
 _abort();
 throw "Reached an unreachable!";
 case 20: 
 var $105=$82<<3;
 var $106=((($105)-($8))|0);
 var $107=$8|3;
 var $108=(($87+4)|0);
 HEAP32[(($108)>>2)]=$107;
 var $109=$87;
 var $110=(($109+$8)|0);
 var $111=$110;
 var $112=$106|1;
 var $_sum106107=$8|4;
 var $113=(($109+$_sum106107)|0);
 var $114=$113;
 HEAP32[(($114)>>2)]=$112;
 var $115=(($109+$105)|0);
 var $116=$115;
 HEAP32[(($116)>>2)]=$106;
 var $117=HEAP32[((20008)>>2)];
 var $118=($117|0)==0;
 if($118){label=26;break;}else{label=21;break;}
 case 21: 
 var $120=HEAP32[((20020)>>2)];
 var $121=$117>>>3;
 var $122=$121<<1;
 var $123=((20040+($122<<2))|0);
 var $124=$123;
 var $125=HEAP32[((20000)>>2)];
 var $126=1<<$121;
 var $127=$125&$126;
 var $128=($127|0)==0;
 if($128){label=22;break;}else{label=23;break;}
 case 22: 
 var $130=$125|$126;
 HEAP32[((20000)>>2)]=$130;
 var $_sum109_pre=((($122)+(2))|0);
 var $_pre=((20040+($_sum109_pre<<2))|0);
 var $F4_0=$124;var $_pre_phi=$_pre;label=25;break;
 case 23: 
 var $_sum110=((($122)+(2))|0);
 var $132=((20040+($_sum110<<2))|0);
 var $133=HEAP32[(($132)>>2)];
 var $134=$133;
 var $135=HEAP32[((20016)>>2)];
 var $136=($134>>>0)<($135>>>0);
 if($136){label=24;break;}else{var $F4_0=$133;var $_pre_phi=$132;label=25;break;}
 case 24: 
 _abort();
 throw "Reached an unreachable!";
 case 25: 
 var $_pre_phi;
 var $F4_0;
 HEAP32[(($_pre_phi)>>2)]=$120;
 var $139=(($F4_0+12)|0);
 HEAP32[(($139)>>2)]=$120;
 var $140=(($120+8)|0);
 HEAP32[(($140)>>2)]=$F4_0;
 var $141=(($120+12)|0);
 HEAP32[(($141)>>2)]=$124;
 label=26;break;
 case 26: 
 HEAP32[((20008)>>2)]=$106;
 HEAP32[((20020)>>2)]=$111;
 var $143=$88;
 var $mem_0=$143;label=341;break;
 case 27: 
 var $145=HEAP32[((20004)>>2)];
 var $146=($145|0)==0;
 if($146){var $nb_0=$8;label=160;break;}else{label=28;break;}
 case 28: 
 var $148=(((-$145))|0);
 var $149=$145&$148;
 var $150=((($149)-(1))|0);
 var $151=$150>>>12;
 var $152=$151&16;
 var $153=$150>>>($152>>>0);
 var $154=$153>>>5;
 var $155=$154&8;
 var $156=$155|$152;
 var $157=$153>>>($155>>>0);
 var $158=$157>>>2;
 var $159=$158&4;
 var $160=$156|$159;
 var $161=$157>>>($159>>>0);
 var $162=$161>>>1;
 var $163=$162&2;
 var $164=$160|$163;
 var $165=$161>>>($163>>>0);
 var $166=$165>>>1;
 var $167=$166&1;
 var $168=$164|$167;
 var $169=$165>>>($167>>>0);
 var $170=((($168)+($169))|0);
 var $171=((20304+($170<<2))|0);
 var $172=HEAP32[(($171)>>2)];
 var $173=(($172+4)|0);
 var $174=HEAP32[(($173)>>2)];
 var $175=$174&-8;
 var $176=((($175)-($8))|0);
 var $t_0_i=$172;var $v_0_i=$172;var $rsize_0_i=$176;label=29;break;
 case 29: 
 var $rsize_0_i;
 var $v_0_i;
 var $t_0_i;
 var $178=(($t_0_i+16)|0);
 var $179=HEAP32[(($178)>>2)];
 var $180=($179|0)==0;
 if($180){label=30;break;}else{var $185=$179;label=31;break;}
 case 30: 
 var $182=(($t_0_i+20)|0);
 var $183=HEAP32[(($182)>>2)];
 var $184=($183|0)==0;
 if($184){label=32;break;}else{var $185=$183;label=31;break;}
 case 31: 
 var $185;
 var $186=(($185+4)|0);
 var $187=HEAP32[(($186)>>2)];
 var $188=$187&-8;
 var $189=((($188)-($8))|0);
 var $190=($189>>>0)<($rsize_0_i>>>0);
 var $_rsize_0_i=($190?$189:$rsize_0_i);
 var $_v_0_i=($190?$185:$v_0_i);
 var $t_0_i=$185;var $v_0_i=$_v_0_i;var $rsize_0_i=$_rsize_0_i;label=29;break;
 case 32: 
 var $192=$v_0_i;
 var $193=HEAP32[((20016)>>2)];
 var $194=($192>>>0)<($193>>>0);
 if($194){label=76;break;}else{label=33;break;}
 case 33: 
 var $196=(($192+$8)|0);
 var $197=$196;
 var $198=($192>>>0)<($196>>>0);
 if($198){label=34;break;}else{label=76;break;}
 case 34: 
 var $200=(($v_0_i+24)|0);
 var $201=HEAP32[(($200)>>2)];
 var $202=(($v_0_i+12)|0);
 var $203=HEAP32[(($202)>>2)];
 var $204=($203|0)==($v_0_i|0);
 if($204){label=40;break;}else{label=35;break;}
 case 35: 
 var $206=(($v_0_i+8)|0);
 var $207=HEAP32[(($206)>>2)];
 var $208=$207;
 var $209=($208>>>0)<($193>>>0);
 if($209){label=39;break;}else{label=36;break;}
 case 36: 
 var $211=(($207+12)|0);
 var $212=HEAP32[(($211)>>2)];
 var $213=($212|0)==($v_0_i|0);
 if($213){label=37;break;}else{label=39;break;}
 case 37: 
 var $215=(($203+8)|0);
 var $216=HEAP32[(($215)>>2)];
 var $217=($216|0)==($v_0_i|0);
 if($217){label=38;break;}else{label=39;break;}
 case 38: 
 HEAP32[(($211)>>2)]=$203;
 HEAP32[(($215)>>2)]=$207;
 var $R_1_i=$203;label=47;break;
 case 39: 
 _abort();
 throw "Reached an unreachable!";
 case 40: 
 var $220=(($v_0_i+20)|0);
 var $221=HEAP32[(($220)>>2)];
 var $222=($221|0)==0;
 if($222){label=41;break;}else{var $R_0_i=$221;var $RP_0_i=$220;label=42;break;}
 case 41: 
 var $224=(($v_0_i+16)|0);
 var $225=HEAP32[(($224)>>2)];
 var $226=($225|0)==0;
 if($226){var $R_1_i=0;label=47;break;}else{var $R_0_i=$225;var $RP_0_i=$224;label=42;break;}
 case 42: 
 var $RP_0_i;
 var $R_0_i;
 var $227=(($R_0_i+20)|0);
 var $228=HEAP32[(($227)>>2)];
 var $229=($228|0)==0;
 if($229){label=43;break;}else{var $R_0_i=$228;var $RP_0_i=$227;label=42;break;}
 case 43: 
 var $231=(($R_0_i+16)|0);
 var $232=HEAP32[(($231)>>2)];
 var $233=($232|0)==0;
 if($233){label=44;break;}else{var $R_0_i=$232;var $RP_0_i=$231;label=42;break;}
 case 44: 
 var $235=$RP_0_i;
 var $236=($235>>>0)<($193>>>0);
 if($236){label=46;break;}else{label=45;break;}
 case 45: 
 HEAP32[(($RP_0_i)>>2)]=0;
 var $R_1_i=$R_0_i;label=47;break;
 case 46: 
 _abort();
 throw "Reached an unreachable!";
 case 47: 
 var $R_1_i;
 var $240=($201|0)==0;
 if($240){label=67;break;}else{label=48;break;}
 case 48: 
 var $242=(($v_0_i+28)|0);
 var $243=HEAP32[(($242)>>2)];
 var $244=((20304+($243<<2))|0);
 var $245=HEAP32[(($244)>>2)];
 var $246=($v_0_i|0)==($245|0);
 if($246){label=49;break;}else{label=51;break;}
 case 49: 
 HEAP32[(($244)>>2)]=$R_1_i;
 var $cond_i=($R_1_i|0)==0;
 if($cond_i){label=50;break;}else{label=57;break;}
 case 50: 
 var $248=1<<$243;
 var $249=$248^-1;
 var $250=HEAP32[((20004)>>2)];
 var $251=$250&$249;
 HEAP32[((20004)>>2)]=$251;
 label=67;break;
 case 51: 
 var $253=$201;
 var $254=HEAP32[((20016)>>2)];
 var $255=($253>>>0)<($254>>>0);
 if($255){label=55;break;}else{label=52;break;}
 case 52: 
 var $257=(($201+16)|0);
 var $258=HEAP32[(($257)>>2)];
 var $259=($258|0)==($v_0_i|0);
 if($259){label=53;break;}else{label=54;break;}
 case 53: 
 HEAP32[(($257)>>2)]=$R_1_i;
 label=56;break;
 case 54: 
 var $262=(($201+20)|0);
 HEAP32[(($262)>>2)]=$R_1_i;
 label=56;break;
 case 55: 
 _abort();
 throw "Reached an unreachable!";
 case 56: 
 var $265=($R_1_i|0)==0;
 if($265){label=67;break;}else{label=57;break;}
 case 57: 
 var $267=$R_1_i;
 var $268=HEAP32[((20016)>>2)];
 var $269=($267>>>0)<($268>>>0);
 if($269){label=66;break;}else{label=58;break;}
 case 58: 
 var $271=(($R_1_i+24)|0);
 HEAP32[(($271)>>2)]=$201;
 var $272=(($v_0_i+16)|0);
 var $273=HEAP32[(($272)>>2)];
 var $274=($273|0)==0;
 if($274){label=62;break;}else{label=59;break;}
 case 59: 
 var $276=$273;
 var $277=HEAP32[((20016)>>2)];
 var $278=($276>>>0)<($277>>>0);
 if($278){label=61;break;}else{label=60;break;}
 case 60: 
 var $280=(($R_1_i+16)|0);
 HEAP32[(($280)>>2)]=$273;
 var $281=(($273+24)|0);
 HEAP32[(($281)>>2)]=$R_1_i;
 label=62;break;
 case 61: 
 _abort();
 throw "Reached an unreachable!";
 case 62: 
 var $284=(($v_0_i+20)|0);
 var $285=HEAP32[(($284)>>2)];
 var $286=($285|0)==0;
 if($286){label=67;break;}else{label=63;break;}
 case 63: 
 var $288=$285;
 var $289=HEAP32[((20016)>>2)];
 var $290=($288>>>0)<($289>>>0);
 if($290){label=65;break;}else{label=64;break;}
 case 64: 
 var $292=(($R_1_i+20)|0);
 HEAP32[(($292)>>2)]=$285;
 var $293=(($285+24)|0);
 HEAP32[(($293)>>2)]=$R_1_i;
 label=67;break;
 case 65: 
 _abort();
 throw "Reached an unreachable!";
 case 66: 
 _abort();
 throw "Reached an unreachable!";
 case 67: 
 var $297=($rsize_0_i>>>0)<16;
 if($297){label=68;break;}else{label=69;break;}
 case 68: 
 var $299=((($rsize_0_i)+($8))|0);
 var $300=$299|3;
 var $301=(($v_0_i+4)|0);
 HEAP32[(($301)>>2)]=$300;
 var $_sum4_i=((($299)+(4))|0);
 var $302=(($192+$_sum4_i)|0);
 var $303=$302;
 var $304=HEAP32[(($303)>>2)];
 var $305=$304|1;
 HEAP32[(($303)>>2)]=$305;
 label=77;break;
 case 69: 
 var $307=$8|3;
 var $308=(($v_0_i+4)|0);
 HEAP32[(($308)>>2)]=$307;
 var $309=$rsize_0_i|1;
 var $_sum_i137=$8|4;
 var $310=(($192+$_sum_i137)|0);
 var $311=$310;
 HEAP32[(($311)>>2)]=$309;
 var $_sum1_i=((($rsize_0_i)+($8))|0);
 var $312=(($192+$_sum1_i)|0);
 var $313=$312;
 HEAP32[(($313)>>2)]=$rsize_0_i;
 var $314=HEAP32[((20008)>>2)];
 var $315=($314|0)==0;
 if($315){label=75;break;}else{label=70;break;}
 case 70: 
 var $317=HEAP32[((20020)>>2)];
 var $318=$314>>>3;
 var $319=$318<<1;
 var $320=((20040+($319<<2))|0);
 var $321=$320;
 var $322=HEAP32[((20000)>>2)];
 var $323=1<<$318;
 var $324=$322&$323;
 var $325=($324|0)==0;
 if($325){label=71;break;}else{label=72;break;}
 case 71: 
 var $327=$322|$323;
 HEAP32[((20000)>>2)]=$327;
 var $_sum2_pre_i=((($319)+(2))|0);
 var $_pre_i=((20040+($_sum2_pre_i<<2))|0);
 var $F1_0_i=$321;var $_pre_phi_i=$_pre_i;label=74;break;
 case 72: 
 var $_sum3_i=((($319)+(2))|0);
 var $329=((20040+($_sum3_i<<2))|0);
 var $330=HEAP32[(($329)>>2)];
 var $331=$330;
 var $332=HEAP32[((20016)>>2)];
 var $333=($331>>>0)<($332>>>0);
 if($333){label=73;break;}else{var $F1_0_i=$330;var $_pre_phi_i=$329;label=74;break;}
 case 73: 
 _abort();
 throw "Reached an unreachable!";
 case 74: 
 var $_pre_phi_i;
 var $F1_0_i;
 HEAP32[(($_pre_phi_i)>>2)]=$317;
 var $336=(($F1_0_i+12)|0);
 HEAP32[(($336)>>2)]=$317;
 var $337=(($317+8)|0);
 HEAP32[(($337)>>2)]=$F1_0_i;
 var $338=(($317+12)|0);
 HEAP32[(($338)>>2)]=$321;
 label=75;break;
 case 75: 
 HEAP32[((20008)>>2)]=$rsize_0_i;
 HEAP32[((20020)>>2)]=$197;
 label=77;break;
 case 76: 
 _abort();
 throw "Reached an unreachable!";
 case 77: 
 var $341=(($v_0_i+8)|0);
 var $342=$341;
 var $343=($341|0)==0;
 if($343){var $nb_0=$8;label=160;break;}else{var $mem_0=$342;label=341;break;}
 case 78: 
 var $345=($bytes>>>0)>4294967231;
 if($345){var $nb_0=-1;label=160;break;}else{label=79;break;}
 case 79: 
 var $347=((($bytes)+(11))|0);
 var $348=$347&-8;
 var $349=HEAP32[((20004)>>2)];
 var $350=($349|0)==0;
 if($350){var $nb_0=$348;label=160;break;}else{label=80;break;}
 case 80: 
 var $352=(((-$348))|0);
 var $353=$347>>>8;
 var $354=($353|0)==0;
 if($354){var $idx_0_i=0;label=83;break;}else{label=81;break;}
 case 81: 
 var $356=($348>>>0)>16777215;
 if($356){var $idx_0_i=31;label=83;break;}else{label=82;break;}
 case 82: 
 var $358=((($353)+(1048320))|0);
 var $359=$358>>>16;
 var $360=$359&8;
 var $361=$353<<$360;
 var $362=((($361)+(520192))|0);
 var $363=$362>>>16;
 var $364=$363&4;
 var $365=$364|$360;
 var $366=$361<<$364;
 var $367=((($366)+(245760))|0);
 var $368=$367>>>16;
 var $369=$368&2;
 var $370=$365|$369;
 var $371=(((14)-($370))|0);
 var $372=$366<<$369;
 var $373=$372>>>15;
 var $374=((($371)+($373))|0);
 var $375=$374<<1;
 var $376=((($374)+(7))|0);
 var $377=$348>>>($376>>>0);
 var $378=$377&1;
 var $379=$378|$375;
 var $idx_0_i=$379;label=83;break;
 case 83: 
 var $idx_0_i;
 var $381=((20304+($idx_0_i<<2))|0);
 var $382=HEAP32[(($381)>>2)];
 var $383=($382|0)==0;
 if($383){var $v_2_i=0;var $rsize_2_i=$352;var $t_1_i=0;label=90;break;}else{label=84;break;}
 case 84: 
 var $385=($idx_0_i|0)==31;
 if($385){var $390=0;label=86;break;}else{label=85;break;}
 case 85: 
 var $387=$idx_0_i>>>1;
 var $388=(((25)-($387))|0);
 var $390=$388;label=86;break;
 case 86: 
 var $390;
 var $391=$348<<$390;
 var $v_0_i118=0;var $rsize_0_i117=$352;var $t_0_i116=$382;var $sizebits_0_i=$391;var $rst_0_i=0;label=87;break;
 case 87: 
 var $rst_0_i;
 var $sizebits_0_i;
 var $t_0_i116;
 var $rsize_0_i117;
 var $v_0_i118;
 var $393=(($t_0_i116+4)|0);
 var $394=HEAP32[(($393)>>2)];
 var $395=$394&-8;
 var $396=((($395)-($348))|0);
 var $397=($396>>>0)<($rsize_0_i117>>>0);
 if($397){label=88;break;}else{var $v_1_i=$v_0_i118;var $rsize_1_i=$rsize_0_i117;label=89;break;}
 case 88: 
 var $399=($395|0)==($348|0);
 if($399){var $v_2_i=$t_0_i116;var $rsize_2_i=$396;var $t_1_i=$t_0_i116;label=90;break;}else{var $v_1_i=$t_0_i116;var $rsize_1_i=$396;label=89;break;}
 case 89: 
 var $rsize_1_i;
 var $v_1_i;
 var $401=(($t_0_i116+20)|0);
 var $402=HEAP32[(($401)>>2)];
 var $403=$sizebits_0_i>>>31;
 var $404=(($t_0_i116+16+($403<<2))|0);
 var $405=HEAP32[(($404)>>2)];
 var $406=($402|0)==0;
 var $407=($402|0)==($405|0);
 var $or_cond_i=$406|$407;
 var $rst_1_i=($or_cond_i?$rst_0_i:$402);
 var $408=($405|0)==0;
 var $409=$sizebits_0_i<<1;
 if($408){var $v_2_i=$v_1_i;var $rsize_2_i=$rsize_1_i;var $t_1_i=$rst_1_i;label=90;break;}else{var $v_0_i118=$v_1_i;var $rsize_0_i117=$rsize_1_i;var $t_0_i116=$405;var $sizebits_0_i=$409;var $rst_0_i=$rst_1_i;label=87;break;}
 case 90: 
 var $t_1_i;
 var $rsize_2_i;
 var $v_2_i;
 var $410=($t_1_i|0)==0;
 var $411=($v_2_i|0)==0;
 var $or_cond21_i=$410&$411;
 if($or_cond21_i){label=91;break;}else{var $t_2_ph_i=$t_1_i;label=93;break;}
 case 91: 
 var $413=2<<$idx_0_i;
 var $414=(((-$413))|0);
 var $415=$413|$414;
 var $416=$349&$415;
 var $417=($416|0)==0;
 if($417){var $nb_0=$348;label=160;break;}else{label=92;break;}
 case 92: 
 var $419=(((-$416))|0);
 var $420=$416&$419;
 var $421=((($420)-(1))|0);
 var $422=$421>>>12;
 var $423=$422&16;
 var $424=$421>>>($423>>>0);
 var $425=$424>>>5;
 var $426=$425&8;
 var $427=$426|$423;
 var $428=$424>>>($426>>>0);
 var $429=$428>>>2;
 var $430=$429&4;
 var $431=$427|$430;
 var $432=$428>>>($430>>>0);
 var $433=$432>>>1;
 var $434=$433&2;
 var $435=$431|$434;
 var $436=$432>>>($434>>>0);
 var $437=$436>>>1;
 var $438=$437&1;
 var $439=$435|$438;
 var $440=$436>>>($438>>>0);
 var $441=((($439)+($440))|0);
 var $442=((20304+($441<<2))|0);
 var $443=HEAP32[(($442)>>2)];
 var $t_2_ph_i=$443;label=93;break;
 case 93: 
 var $t_2_ph_i;
 var $444=($t_2_ph_i|0)==0;
 if($444){var $rsize_3_lcssa_i=$rsize_2_i;var $v_3_lcssa_i=$v_2_i;label=96;break;}else{var $t_228_i=$t_2_ph_i;var $rsize_329_i=$rsize_2_i;var $v_330_i=$v_2_i;label=94;break;}
 case 94: 
 var $v_330_i;
 var $rsize_329_i;
 var $t_228_i;
 var $445=(($t_228_i+4)|0);
 var $446=HEAP32[(($445)>>2)];
 var $447=$446&-8;
 var $448=((($447)-($348))|0);
 var $449=($448>>>0)<($rsize_329_i>>>0);
 var $_rsize_3_i=($449?$448:$rsize_329_i);
 var $t_2_v_3_i=($449?$t_228_i:$v_330_i);
 var $450=(($t_228_i+16)|0);
 var $451=HEAP32[(($450)>>2)];
 var $452=($451|0)==0;
 if($452){label=95;break;}else{var $t_228_i=$451;var $rsize_329_i=$_rsize_3_i;var $v_330_i=$t_2_v_3_i;label=94;break;}
 case 95: 
 var $453=(($t_228_i+20)|0);
 var $454=HEAP32[(($453)>>2)];
 var $455=($454|0)==0;
 if($455){var $rsize_3_lcssa_i=$_rsize_3_i;var $v_3_lcssa_i=$t_2_v_3_i;label=96;break;}else{var $t_228_i=$454;var $rsize_329_i=$_rsize_3_i;var $v_330_i=$t_2_v_3_i;label=94;break;}
 case 96: 
 var $v_3_lcssa_i;
 var $rsize_3_lcssa_i;
 var $456=($v_3_lcssa_i|0)==0;
 if($456){var $nb_0=$348;label=160;break;}else{label=97;break;}
 case 97: 
 var $458=HEAP32[((20008)>>2)];
 var $459=((($458)-($348))|0);
 var $460=($rsize_3_lcssa_i>>>0)<($459>>>0);
 if($460){label=98;break;}else{var $nb_0=$348;label=160;break;}
 case 98: 
 var $462=$v_3_lcssa_i;
 var $463=HEAP32[((20016)>>2)];
 var $464=($462>>>0)<($463>>>0);
 if($464){label=158;break;}else{label=99;break;}
 case 99: 
 var $466=(($462+$348)|0);
 var $467=$466;
 var $468=($462>>>0)<($466>>>0);
 if($468){label=100;break;}else{label=158;break;}
 case 100: 
 var $470=(($v_3_lcssa_i+24)|0);
 var $471=HEAP32[(($470)>>2)];
 var $472=(($v_3_lcssa_i+12)|0);
 var $473=HEAP32[(($472)>>2)];
 var $474=($473|0)==($v_3_lcssa_i|0);
 if($474){label=106;break;}else{label=101;break;}
 case 101: 
 var $476=(($v_3_lcssa_i+8)|0);
 var $477=HEAP32[(($476)>>2)];
 var $478=$477;
 var $479=($478>>>0)<($463>>>0);
 if($479){label=105;break;}else{label=102;break;}
 case 102: 
 var $481=(($477+12)|0);
 var $482=HEAP32[(($481)>>2)];
 var $483=($482|0)==($v_3_lcssa_i|0);
 if($483){label=103;break;}else{label=105;break;}
 case 103: 
 var $485=(($473+8)|0);
 var $486=HEAP32[(($485)>>2)];
 var $487=($486|0)==($v_3_lcssa_i|0);
 if($487){label=104;break;}else{label=105;break;}
 case 104: 
 HEAP32[(($481)>>2)]=$473;
 HEAP32[(($485)>>2)]=$477;
 var $R_1_i122=$473;label=113;break;
 case 105: 
 _abort();
 throw "Reached an unreachable!";
 case 106: 
 var $490=(($v_3_lcssa_i+20)|0);
 var $491=HEAP32[(($490)>>2)];
 var $492=($491|0)==0;
 if($492){label=107;break;}else{var $R_0_i120=$491;var $RP_0_i119=$490;label=108;break;}
 case 107: 
 var $494=(($v_3_lcssa_i+16)|0);
 var $495=HEAP32[(($494)>>2)];
 var $496=($495|0)==0;
 if($496){var $R_1_i122=0;label=113;break;}else{var $R_0_i120=$495;var $RP_0_i119=$494;label=108;break;}
 case 108: 
 var $RP_0_i119;
 var $R_0_i120;
 var $497=(($R_0_i120+20)|0);
 var $498=HEAP32[(($497)>>2)];
 var $499=($498|0)==0;
 if($499){label=109;break;}else{var $R_0_i120=$498;var $RP_0_i119=$497;label=108;break;}
 case 109: 
 var $501=(($R_0_i120+16)|0);
 var $502=HEAP32[(($501)>>2)];
 var $503=($502|0)==0;
 if($503){label=110;break;}else{var $R_0_i120=$502;var $RP_0_i119=$501;label=108;break;}
 case 110: 
 var $505=$RP_0_i119;
 var $506=($505>>>0)<($463>>>0);
 if($506){label=112;break;}else{label=111;break;}
 case 111: 
 HEAP32[(($RP_0_i119)>>2)]=0;
 var $R_1_i122=$R_0_i120;label=113;break;
 case 112: 
 _abort();
 throw "Reached an unreachable!";
 case 113: 
 var $R_1_i122;
 var $510=($471|0)==0;
 if($510){label=133;break;}else{label=114;break;}
 case 114: 
 var $512=(($v_3_lcssa_i+28)|0);
 var $513=HEAP32[(($512)>>2)];
 var $514=((20304+($513<<2))|0);
 var $515=HEAP32[(($514)>>2)];
 var $516=($v_3_lcssa_i|0)==($515|0);
 if($516){label=115;break;}else{label=117;break;}
 case 115: 
 HEAP32[(($514)>>2)]=$R_1_i122;
 var $cond_i123=($R_1_i122|0)==0;
 if($cond_i123){label=116;break;}else{label=123;break;}
 case 116: 
 var $518=1<<$513;
 var $519=$518^-1;
 var $520=HEAP32[((20004)>>2)];
 var $521=$520&$519;
 HEAP32[((20004)>>2)]=$521;
 label=133;break;
 case 117: 
 var $523=$471;
 var $524=HEAP32[((20016)>>2)];
 var $525=($523>>>0)<($524>>>0);
 if($525){label=121;break;}else{label=118;break;}
 case 118: 
 var $527=(($471+16)|0);
 var $528=HEAP32[(($527)>>2)];
 var $529=($528|0)==($v_3_lcssa_i|0);
 if($529){label=119;break;}else{label=120;break;}
 case 119: 
 HEAP32[(($527)>>2)]=$R_1_i122;
 label=122;break;
 case 120: 
 var $532=(($471+20)|0);
 HEAP32[(($532)>>2)]=$R_1_i122;
 label=122;break;
 case 121: 
 _abort();
 throw "Reached an unreachable!";
 case 122: 
 var $535=($R_1_i122|0)==0;
 if($535){label=133;break;}else{label=123;break;}
 case 123: 
 var $537=$R_1_i122;
 var $538=HEAP32[((20016)>>2)];
 var $539=($537>>>0)<($538>>>0);
 if($539){label=132;break;}else{label=124;break;}
 case 124: 
 var $541=(($R_1_i122+24)|0);
 HEAP32[(($541)>>2)]=$471;
 var $542=(($v_3_lcssa_i+16)|0);
 var $543=HEAP32[(($542)>>2)];
 var $544=($543|0)==0;
 if($544){label=128;break;}else{label=125;break;}
 case 125: 
 var $546=$543;
 var $547=HEAP32[((20016)>>2)];
 var $548=($546>>>0)<($547>>>0);
 if($548){label=127;break;}else{label=126;break;}
 case 126: 
 var $550=(($R_1_i122+16)|0);
 HEAP32[(($550)>>2)]=$543;
 var $551=(($543+24)|0);
 HEAP32[(($551)>>2)]=$R_1_i122;
 label=128;break;
 case 127: 
 _abort();
 throw "Reached an unreachable!";
 case 128: 
 var $554=(($v_3_lcssa_i+20)|0);
 var $555=HEAP32[(($554)>>2)];
 var $556=($555|0)==0;
 if($556){label=133;break;}else{label=129;break;}
 case 129: 
 var $558=$555;
 var $559=HEAP32[((20016)>>2)];
 var $560=($558>>>0)<($559>>>0);
 if($560){label=131;break;}else{label=130;break;}
 case 130: 
 var $562=(($R_1_i122+20)|0);
 HEAP32[(($562)>>2)]=$555;
 var $563=(($555+24)|0);
 HEAP32[(($563)>>2)]=$R_1_i122;
 label=133;break;
 case 131: 
 _abort();
 throw "Reached an unreachable!";
 case 132: 
 _abort();
 throw "Reached an unreachable!";
 case 133: 
 var $567=($rsize_3_lcssa_i>>>0)<16;
 if($567){label=134;break;}else{label=135;break;}
 case 134: 
 var $569=((($rsize_3_lcssa_i)+($348))|0);
 var $570=$569|3;
 var $571=(($v_3_lcssa_i+4)|0);
 HEAP32[(($571)>>2)]=$570;
 var $_sum19_i=((($569)+(4))|0);
 var $572=(($462+$_sum19_i)|0);
 var $573=$572;
 var $574=HEAP32[(($573)>>2)];
 var $575=$574|1;
 HEAP32[(($573)>>2)]=$575;
 label=159;break;
 case 135: 
 var $577=$348|3;
 var $578=(($v_3_lcssa_i+4)|0);
 HEAP32[(($578)>>2)]=$577;
 var $579=$rsize_3_lcssa_i|1;
 var $_sum_i125136=$348|4;
 var $580=(($462+$_sum_i125136)|0);
 var $581=$580;
 HEAP32[(($581)>>2)]=$579;
 var $_sum1_i126=((($rsize_3_lcssa_i)+($348))|0);
 var $582=(($462+$_sum1_i126)|0);
 var $583=$582;
 HEAP32[(($583)>>2)]=$rsize_3_lcssa_i;
 var $584=$rsize_3_lcssa_i>>>3;
 var $585=($rsize_3_lcssa_i>>>0)<256;
 if($585){label=136;break;}else{label=141;break;}
 case 136: 
 var $587=$584<<1;
 var $588=((20040+($587<<2))|0);
 var $589=$588;
 var $590=HEAP32[((20000)>>2)];
 var $591=1<<$584;
 var $592=$590&$591;
 var $593=($592|0)==0;
 if($593){label=137;break;}else{label=138;break;}
 case 137: 
 var $595=$590|$591;
 HEAP32[((20000)>>2)]=$595;
 var $_sum15_pre_i=((($587)+(2))|0);
 var $_pre_i127=((20040+($_sum15_pre_i<<2))|0);
 var $F5_0_i=$589;var $_pre_phi_i128=$_pre_i127;label=140;break;
 case 138: 
 var $_sum18_i=((($587)+(2))|0);
 var $597=((20040+($_sum18_i<<2))|0);
 var $598=HEAP32[(($597)>>2)];
 var $599=$598;
 var $600=HEAP32[((20016)>>2)];
 var $601=($599>>>0)<($600>>>0);
 if($601){label=139;break;}else{var $F5_0_i=$598;var $_pre_phi_i128=$597;label=140;break;}
 case 139: 
 _abort();
 throw "Reached an unreachable!";
 case 140: 
 var $_pre_phi_i128;
 var $F5_0_i;
 HEAP32[(($_pre_phi_i128)>>2)]=$467;
 var $604=(($F5_0_i+12)|0);
 HEAP32[(($604)>>2)]=$467;
 var $_sum16_i=((($348)+(8))|0);
 var $605=(($462+$_sum16_i)|0);
 var $606=$605;
 HEAP32[(($606)>>2)]=$F5_0_i;
 var $_sum17_i=((($348)+(12))|0);
 var $607=(($462+$_sum17_i)|0);
 var $608=$607;
 HEAP32[(($608)>>2)]=$589;
 label=159;break;
 case 141: 
 var $610=$466;
 var $611=$rsize_3_lcssa_i>>>8;
 var $612=($611|0)==0;
 if($612){var $I7_0_i=0;label=144;break;}else{label=142;break;}
 case 142: 
 var $614=($rsize_3_lcssa_i>>>0)>16777215;
 if($614){var $I7_0_i=31;label=144;break;}else{label=143;break;}
 case 143: 
 var $616=((($611)+(1048320))|0);
 var $617=$616>>>16;
 var $618=$617&8;
 var $619=$611<<$618;
 var $620=((($619)+(520192))|0);
 var $621=$620>>>16;
 var $622=$621&4;
 var $623=$622|$618;
 var $624=$619<<$622;
 var $625=((($624)+(245760))|0);
 var $626=$625>>>16;
 var $627=$626&2;
 var $628=$623|$627;
 var $629=(((14)-($628))|0);
 var $630=$624<<$627;
 var $631=$630>>>15;
 var $632=((($629)+($631))|0);
 var $633=$632<<1;
 var $634=((($632)+(7))|0);
 var $635=$rsize_3_lcssa_i>>>($634>>>0);
 var $636=$635&1;
 var $637=$636|$633;
 var $I7_0_i=$637;label=144;break;
 case 144: 
 var $I7_0_i;
 var $639=((20304+($I7_0_i<<2))|0);
 var $_sum2_i=((($348)+(28))|0);
 var $640=(($462+$_sum2_i)|0);
 var $641=$640;
 HEAP32[(($641)>>2)]=$I7_0_i;
 var $_sum3_i129=((($348)+(16))|0);
 var $642=(($462+$_sum3_i129)|0);
 var $_sum4_i130=((($348)+(20))|0);
 var $643=(($462+$_sum4_i130)|0);
 var $644=$643;
 HEAP32[(($644)>>2)]=0;
 var $645=$642;
 HEAP32[(($645)>>2)]=0;
 var $646=HEAP32[((20004)>>2)];
 var $647=1<<$I7_0_i;
 var $648=$646&$647;
 var $649=($648|0)==0;
 if($649){label=145;break;}else{label=146;break;}
 case 145: 
 var $651=$646|$647;
 HEAP32[((20004)>>2)]=$651;
 HEAP32[(($639)>>2)]=$610;
 var $652=$639;
 var $_sum5_i=((($348)+(24))|0);
 var $653=(($462+$_sum5_i)|0);
 var $654=$653;
 HEAP32[(($654)>>2)]=$652;
 var $_sum6_i=((($348)+(12))|0);
 var $655=(($462+$_sum6_i)|0);
 var $656=$655;
 HEAP32[(($656)>>2)]=$610;
 var $_sum7_i=((($348)+(8))|0);
 var $657=(($462+$_sum7_i)|0);
 var $658=$657;
 HEAP32[(($658)>>2)]=$610;
 label=159;break;
 case 146: 
 var $660=HEAP32[(($639)>>2)];
 var $661=($I7_0_i|0)==31;
 if($661){var $666=0;label=148;break;}else{label=147;break;}
 case 147: 
 var $663=$I7_0_i>>>1;
 var $664=(((25)-($663))|0);
 var $666=$664;label=148;break;
 case 148: 
 var $666;
 var $667=$rsize_3_lcssa_i<<$666;
 var $K12_0_i=$667;var $T_0_i=$660;label=149;break;
 case 149: 
 var $T_0_i;
 var $K12_0_i;
 var $669=(($T_0_i+4)|0);
 var $670=HEAP32[(($669)>>2)];
 var $671=$670&-8;
 var $672=($671|0)==($rsize_3_lcssa_i|0);
 if($672){label=154;break;}else{label=150;break;}
 case 150: 
 var $674=$K12_0_i>>>31;
 var $675=(($T_0_i+16+($674<<2))|0);
 var $676=HEAP32[(($675)>>2)];
 var $677=($676|0)==0;
 var $678=$K12_0_i<<1;
 if($677){label=151;break;}else{var $K12_0_i=$678;var $T_0_i=$676;label=149;break;}
 case 151: 
 var $680=$675;
 var $681=HEAP32[((20016)>>2)];
 var $682=($680>>>0)<($681>>>0);
 if($682){label=153;break;}else{label=152;break;}
 case 152: 
 HEAP32[(($675)>>2)]=$610;
 var $_sum12_i=((($348)+(24))|0);
 var $684=(($462+$_sum12_i)|0);
 var $685=$684;
 HEAP32[(($685)>>2)]=$T_0_i;
 var $_sum13_i=((($348)+(12))|0);
 var $686=(($462+$_sum13_i)|0);
 var $687=$686;
 HEAP32[(($687)>>2)]=$610;
 var $_sum14_i=((($348)+(8))|0);
 var $688=(($462+$_sum14_i)|0);
 var $689=$688;
 HEAP32[(($689)>>2)]=$610;
 label=159;break;
 case 153: 
 _abort();
 throw "Reached an unreachable!";
 case 154: 
 var $692=(($T_0_i+8)|0);
 var $693=HEAP32[(($692)>>2)];
 var $694=$T_0_i;
 var $695=HEAP32[((20016)>>2)];
 var $696=($694>>>0)<($695>>>0);
 if($696){label=157;break;}else{label=155;break;}
 case 155: 
 var $698=$693;
 var $699=($698>>>0)<($695>>>0);
 if($699){label=157;break;}else{label=156;break;}
 case 156: 
 var $701=(($693+12)|0);
 HEAP32[(($701)>>2)]=$610;
 HEAP32[(($692)>>2)]=$610;
 var $_sum9_i=((($348)+(8))|0);
 var $702=(($462+$_sum9_i)|0);
 var $703=$702;
 HEAP32[(($703)>>2)]=$693;
 var $_sum10_i=((($348)+(12))|0);
 var $704=(($462+$_sum10_i)|0);
 var $705=$704;
 HEAP32[(($705)>>2)]=$T_0_i;
 var $_sum11_i=((($348)+(24))|0);
 var $706=(($462+$_sum11_i)|0);
 var $707=$706;
 HEAP32[(($707)>>2)]=0;
 label=159;break;
 case 157: 
 _abort();
 throw "Reached an unreachable!";
 case 158: 
 _abort();
 throw "Reached an unreachable!";
 case 159: 
 var $709=(($v_3_lcssa_i+8)|0);
 var $710=$709;
 var $711=($709|0)==0;
 if($711){var $nb_0=$348;label=160;break;}else{var $mem_0=$710;label=341;break;}
 case 160: 
 var $nb_0;
 var $712=HEAP32[((20008)>>2)];
 var $713=($nb_0>>>0)>($712>>>0);
 if($713){label=165;break;}else{label=161;break;}
 case 161: 
 var $715=((($712)-($nb_0))|0);
 var $716=HEAP32[((20020)>>2)];
 var $717=($715>>>0)>15;
 if($717){label=162;break;}else{label=163;break;}
 case 162: 
 var $719=$716;
 var $720=(($719+$nb_0)|0);
 var $721=$720;
 HEAP32[((20020)>>2)]=$721;
 HEAP32[((20008)>>2)]=$715;
 var $722=$715|1;
 var $_sum102=((($nb_0)+(4))|0);
 var $723=(($719+$_sum102)|0);
 var $724=$723;
 HEAP32[(($724)>>2)]=$722;
 var $725=(($719+$712)|0);
 var $726=$725;
 HEAP32[(($726)>>2)]=$715;
 var $727=$nb_0|3;
 var $728=(($716+4)|0);
 HEAP32[(($728)>>2)]=$727;
 label=164;break;
 case 163: 
 HEAP32[((20008)>>2)]=0;
 HEAP32[((20020)>>2)]=0;
 var $730=$712|3;
 var $731=(($716+4)|0);
 HEAP32[(($731)>>2)]=$730;
 var $732=$716;
 var $_sum101=((($712)+(4))|0);
 var $733=(($732+$_sum101)|0);
 var $734=$733;
 var $735=HEAP32[(($734)>>2)];
 var $736=$735|1;
 HEAP32[(($734)>>2)]=$736;
 label=164;break;
 case 164: 
 var $738=(($716+8)|0);
 var $739=$738;
 var $mem_0=$739;label=341;break;
 case 165: 
 var $741=HEAP32[((20012)>>2)];
 var $742=($nb_0>>>0)<($741>>>0);
 if($742){label=166;break;}else{label=167;break;}
 case 166: 
 var $744=((($741)-($nb_0))|0);
 HEAP32[((20012)>>2)]=$744;
 var $745=HEAP32[((20024)>>2)];
 var $746=$745;
 var $747=(($746+$nb_0)|0);
 var $748=$747;
 HEAP32[((20024)>>2)]=$748;
 var $749=$744|1;
 var $_sum=((($nb_0)+(4))|0);
 var $750=(($746+$_sum)|0);
 var $751=$750;
 HEAP32[(($751)>>2)]=$749;
 var $752=$nb_0|3;
 var $753=(($745+4)|0);
 HEAP32[(($753)>>2)]=$752;
 var $754=(($745+8)|0);
 var $755=$754;
 var $mem_0=$755;label=341;break;
 case 167: 
 var $757=HEAP32[((19304)>>2)];
 var $758=($757|0)==0;
 if($758){label=168;break;}else{label=171;break;}
 case 168: 
 var $760=_sysconf(30);
 var $761=((($760)-(1))|0);
 var $762=$761&$760;
 var $763=($762|0)==0;
 if($763){label=170;break;}else{label=169;break;}
 case 169: 
 _abort();
 throw "Reached an unreachable!";
 case 170: 
 HEAP32[((19312)>>2)]=$760;
 HEAP32[((19308)>>2)]=$760;
 HEAP32[((19316)>>2)]=-1;
 HEAP32[((19320)>>2)]=-1;
 HEAP32[((19324)>>2)]=0;
 HEAP32[((20444)>>2)]=0;
 var $765=FUNCTION_TABLE[_time](0);
 var $766=$765&-16;
 var $767=$766^1431655768;
 HEAP32[((19304)>>2)]=$767;
 label=171;break;
 case 171: 
 var $769=((($nb_0)+(48))|0);
 var $770=HEAP32[((19312)>>2)];
 var $771=((($nb_0)+(47))|0);
 var $772=((($770)+($771))|0);
 var $773=(((-$770))|0);
 var $774=$772&$773;
 var $775=($774>>>0)>($nb_0>>>0);
 if($775){label=172;break;}else{var $mem_0=0;label=341;break;}
 case 172: 
 var $777=HEAP32[((20440)>>2)];
 var $778=($777|0)==0;
 if($778){label=174;break;}else{label=173;break;}
 case 173: 
 var $780=HEAP32[((20432)>>2)];
 var $781=((($780)+($774))|0);
 var $782=($781>>>0)<=($780>>>0);
 var $783=($781>>>0)>($777>>>0);
 var $or_cond1_i=$782|$783;
 if($or_cond1_i){var $mem_0=0;label=341;break;}else{label=174;break;}
 case 174: 
 var $785=HEAP32[((20444)>>2)];
 var $786=$785&4;
 var $787=($786|0)==0;
 if($787){label=175;break;}else{var $tsize_1_i=0;label=198;break;}
 case 175: 
 var $789=HEAP32[((20024)>>2)];
 var $790=($789|0)==0;
 if($790){label=181;break;}else{label=176;break;}
 case 176: 
 var $792=$789;
 var $sp_0_i_i=20448;label=177;break;
 case 177: 
 var $sp_0_i_i;
 var $794=(($sp_0_i_i)|0);
 var $795=HEAP32[(($794)>>2)];
 var $796=($795>>>0)>($792>>>0);
 if($796){label=179;break;}else{label=178;break;}
 case 178: 
 var $798=(($sp_0_i_i+4)|0);
 var $799=HEAP32[(($798)>>2)];
 var $800=(($795+$799)|0);
 var $801=($800>>>0)>($792>>>0);
 if($801){label=180;break;}else{label=179;break;}
 case 179: 
 var $803=(($sp_0_i_i+8)|0);
 var $804=HEAP32[(($803)>>2)];
 var $805=($804|0)==0;
 if($805){label=181;break;}else{var $sp_0_i_i=$804;label=177;break;}
 case 180: 
 var $806=($sp_0_i_i|0)==0;
 if($806){label=181;break;}else{label=188;break;}
 case 181: 
 var $807=_sbrk(0);
 var $808=($807|0)==-1;
 if($808){var $tsize_0303639_i=0;label=197;break;}else{label=182;break;}
 case 182: 
 var $810=$807;
 var $811=HEAP32[((19308)>>2)];
 var $812=((($811)-(1))|0);
 var $813=$812&$810;
 var $814=($813|0)==0;
 if($814){var $ssize_0_i=$774;label=184;break;}else{label=183;break;}
 case 183: 
 var $816=((($812)+($810))|0);
 var $817=(((-$811))|0);
 var $818=$816&$817;
 var $819=((($774)-($810))|0);
 var $820=((($819)+($818))|0);
 var $ssize_0_i=$820;label=184;break;
 case 184: 
 var $ssize_0_i;
 var $822=HEAP32[((20432)>>2)];
 var $823=((($822)+($ssize_0_i))|0);
 var $824=($ssize_0_i>>>0)>($nb_0>>>0);
 var $825=($ssize_0_i>>>0)<2147483647;
 var $or_cond_i131=$824&$825;
 if($or_cond_i131){label=185;break;}else{var $tsize_0303639_i=0;label=197;break;}
 case 185: 
 var $827=HEAP32[((20440)>>2)];
 var $828=($827|0)==0;
 if($828){label=187;break;}else{label=186;break;}
 case 186: 
 var $830=($823>>>0)<=($822>>>0);
 var $831=($823>>>0)>($827>>>0);
 var $or_cond2_i=$830|$831;
 if($or_cond2_i){var $tsize_0303639_i=0;label=197;break;}else{label=187;break;}
 case 187: 
 var $833=_sbrk($ssize_0_i);
 var $834=($833|0)==($807|0);
 var $ssize_0__i=($834?$ssize_0_i:0);
 var $__i=($834?$807:-1);
 var $tbase_0_i=$__i;var $tsize_0_i=$ssize_0__i;var $br_0_i=$833;var $ssize_1_i=$ssize_0_i;label=190;break;
 case 188: 
 var $836=HEAP32[((20012)>>2)];
 var $837=((($772)-($836))|0);
 var $838=$837&$773;
 var $839=($838>>>0)<2147483647;
 if($839){label=189;break;}else{var $tsize_0303639_i=0;label=197;break;}
 case 189: 
 var $841=_sbrk($838);
 var $842=HEAP32[(($794)>>2)];
 var $843=HEAP32[(($798)>>2)];
 var $844=(($842+$843)|0);
 var $845=($841|0)==($844|0);
 var $_3_i=($845?$838:0);
 var $_4_i=($845?$841:-1);
 var $tbase_0_i=$_4_i;var $tsize_0_i=$_3_i;var $br_0_i=$841;var $ssize_1_i=$838;label=190;break;
 case 190: 
 var $ssize_1_i;
 var $br_0_i;
 var $tsize_0_i;
 var $tbase_0_i;
 var $847=(((-$ssize_1_i))|0);
 var $848=($tbase_0_i|0)==-1;
 if($848){label=191;break;}else{var $tsize_244_i=$tsize_0_i;var $tbase_245_i=$tbase_0_i;label=201;break;}
 case 191: 
 var $850=($br_0_i|0)!=-1;
 var $851=($ssize_1_i>>>0)<2147483647;
 var $or_cond5_i=$850&$851;
 var $852=($ssize_1_i>>>0)<($769>>>0);
 var $or_cond6_i=$or_cond5_i&$852;
 if($or_cond6_i){label=192;break;}else{var $ssize_2_i=$ssize_1_i;label=196;break;}
 case 192: 
 var $854=HEAP32[((19312)>>2)];
 var $855=((($771)-($ssize_1_i))|0);
 var $856=((($855)+($854))|0);
 var $857=(((-$854))|0);
 var $858=$856&$857;
 var $859=($858>>>0)<2147483647;
 if($859){label=193;break;}else{var $ssize_2_i=$ssize_1_i;label=196;break;}
 case 193: 
 var $861=_sbrk($858);
 var $862=($861|0)==-1;
 if($862){label=195;break;}else{label=194;break;}
 case 194: 
 var $864=((($858)+($ssize_1_i))|0);
 var $ssize_2_i=$864;label=196;break;
 case 195: 
 var $866=_sbrk($847);
 var $tsize_0303639_i=$tsize_0_i;label=197;break;
 case 196: 
 var $ssize_2_i;
 var $868=($br_0_i|0)==-1;
 if($868){var $tsize_0303639_i=$tsize_0_i;label=197;break;}else{var $tsize_244_i=$ssize_2_i;var $tbase_245_i=$br_0_i;label=201;break;}
 case 197: 
 var $tsize_0303639_i;
 var $869=HEAP32[((20444)>>2)];
 var $870=$869|4;
 HEAP32[((20444)>>2)]=$870;
 var $tsize_1_i=$tsize_0303639_i;label=198;break;
 case 198: 
 var $tsize_1_i;
 var $872=($774>>>0)<2147483647;
 if($872){label=199;break;}else{label=340;break;}
 case 199: 
 var $874=_sbrk($774);
 var $875=_sbrk(0);
 var $notlhs_i=($874|0)!=-1;
 var $notrhs_i=($875|0)!=-1;
 var $or_cond8_not_i=$notrhs_i&$notlhs_i;
 var $876=($874>>>0)<($875>>>0);
 var $or_cond9_i=$or_cond8_not_i&$876;
 if($or_cond9_i){label=200;break;}else{label=340;break;}
 case 200: 
 var $877=$875;
 var $878=$874;
 var $879=((($877)-($878))|0);
 var $880=((($nb_0)+(40))|0);
 var $881=($879>>>0)>($880>>>0);
 var $_tsize_1_i=($881?$879:$tsize_1_i);
 var $_tbase_1_i=($881?$874:-1);
 var $882=($_tbase_1_i|0)==-1;
 if($882){label=340;break;}else{var $tsize_244_i=$_tsize_1_i;var $tbase_245_i=$_tbase_1_i;label=201;break;}
 case 201: 
 var $tbase_245_i;
 var $tsize_244_i;
 var $883=HEAP32[((20432)>>2)];
 var $884=((($883)+($tsize_244_i))|0);
 HEAP32[((20432)>>2)]=$884;
 var $885=HEAP32[((20436)>>2)];
 var $886=($884>>>0)>($885>>>0);
 if($886){label=202;break;}else{label=203;break;}
 case 202: 
 HEAP32[((20436)>>2)]=$884;
 label=203;break;
 case 203: 
 var $888=HEAP32[((20024)>>2)];
 var $889=($888|0)==0;
 if($889){label=204;break;}else{var $sp_067_i=20448;label=211;break;}
 case 204: 
 var $891=HEAP32[((20016)>>2)];
 var $892=($891|0)==0;
 var $893=($tbase_245_i>>>0)<($891>>>0);
 var $or_cond10_i=$892|$893;
 if($or_cond10_i){label=205;break;}else{label=206;break;}
 case 205: 
 HEAP32[((20016)>>2)]=$tbase_245_i;
 label=206;break;
 case 206: 
 HEAP32[((20448)>>2)]=$tbase_245_i;
 HEAP32[((20452)>>2)]=$tsize_244_i;
 HEAP32[((20460)>>2)]=0;
 var $895=HEAP32[((19304)>>2)];
 HEAP32[((20036)>>2)]=$895;
 HEAP32[((20032)>>2)]=-1;
 var $i_02_i_i=0;label=207;break;
 case 207: 
 var $i_02_i_i;
 var $897=$i_02_i_i<<1;
 var $898=((20040+($897<<2))|0);
 var $899=$898;
 var $_sum_i_i=((($897)+(3))|0);
 var $900=((20040+($_sum_i_i<<2))|0);
 HEAP32[(($900)>>2)]=$899;
 var $_sum1_i_i=((($897)+(2))|0);
 var $901=((20040+($_sum1_i_i<<2))|0);
 HEAP32[(($901)>>2)]=$899;
 var $902=((($i_02_i_i)+(1))|0);
 var $903=($902>>>0)<32;
 if($903){var $i_02_i_i=$902;label=207;break;}else{label=208;break;}
 case 208: 
 var $904=((($tsize_244_i)-(40))|0);
 var $905=(($tbase_245_i+8)|0);
 var $906=$905;
 var $907=$906&7;
 var $908=($907|0)==0;
 if($908){var $912=0;label=210;break;}else{label=209;break;}
 case 209: 
 var $910=(((-$906))|0);
 var $911=$910&7;
 var $912=$911;label=210;break;
 case 210: 
 var $912;
 var $913=(($tbase_245_i+$912)|0);
 var $914=$913;
 var $915=((($904)-($912))|0);
 HEAP32[((20024)>>2)]=$914;
 HEAP32[((20012)>>2)]=$915;
 var $916=$915|1;
 var $_sum_i14_i=((($912)+(4))|0);
 var $917=(($tbase_245_i+$_sum_i14_i)|0);
 var $918=$917;
 HEAP32[(($918)>>2)]=$916;
 var $_sum2_i_i=((($tsize_244_i)-(36))|0);
 var $919=(($tbase_245_i+$_sum2_i_i)|0);
 var $920=$919;
 HEAP32[(($920)>>2)]=40;
 var $921=HEAP32[((19320)>>2)];
 HEAP32[((20028)>>2)]=$921;
 label=338;break;
 case 211: 
 var $sp_067_i;
 var $922=(($sp_067_i)|0);
 var $923=HEAP32[(($922)>>2)];
 var $924=(($sp_067_i+4)|0);
 var $925=HEAP32[(($924)>>2)];
 var $926=(($923+$925)|0);
 var $927=($tbase_245_i|0)==($926|0);
 if($927){label=213;break;}else{label=212;break;}
 case 212: 
 var $929=(($sp_067_i+8)|0);
 var $930=HEAP32[(($929)>>2)];
 var $931=($930|0)==0;
 if($931){label=218;break;}else{var $sp_067_i=$930;label=211;break;}
 case 213: 
 var $932=(($sp_067_i+12)|0);
 var $933=HEAP32[(($932)>>2)];
 var $934=$933&8;
 var $935=($934|0)==0;
 if($935){label=214;break;}else{label=218;break;}
 case 214: 
 var $937=$888;
 var $938=($937>>>0)>=($923>>>0);
 var $939=($937>>>0)<($tbase_245_i>>>0);
 var $or_cond47_i=$938&$939;
 if($or_cond47_i){label=215;break;}else{label=218;break;}
 case 215: 
 var $941=((($925)+($tsize_244_i))|0);
 HEAP32[(($924)>>2)]=$941;
 var $942=HEAP32[((20012)>>2)];
 var $943=((($942)+($tsize_244_i))|0);
 var $944=(($888+8)|0);
 var $945=$944;
 var $946=$945&7;
 var $947=($946|0)==0;
 if($947){var $951=0;label=217;break;}else{label=216;break;}
 case 216: 
 var $949=(((-$945))|0);
 var $950=$949&7;
 var $951=$950;label=217;break;
 case 217: 
 var $951;
 var $952=(($937+$951)|0);
 var $953=$952;
 var $954=((($943)-($951))|0);
 HEAP32[((20024)>>2)]=$953;
 HEAP32[((20012)>>2)]=$954;
 var $955=$954|1;
 var $_sum_i18_i=((($951)+(4))|0);
 var $956=(($937+$_sum_i18_i)|0);
 var $957=$956;
 HEAP32[(($957)>>2)]=$955;
 var $_sum2_i19_i=((($943)+(4))|0);
 var $958=(($937+$_sum2_i19_i)|0);
 var $959=$958;
 HEAP32[(($959)>>2)]=40;
 var $960=HEAP32[((19320)>>2)];
 HEAP32[((20028)>>2)]=$960;
 label=338;break;
 case 218: 
 var $961=HEAP32[((20016)>>2)];
 var $962=($tbase_245_i>>>0)<($961>>>0);
 if($962){label=219;break;}else{label=220;break;}
 case 219: 
 HEAP32[((20016)>>2)]=$tbase_245_i;
 label=220;break;
 case 220: 
 var $964=(($tbase_245_i+$tsize_244_i)|0);
 var $sp_160_i=20448;label=221;break;
 case 221: 
 var $sp_160_i;
 var $966=(($sp_160_i)|0);
 var $967=HEAP32[(($966)>>2)];
 var $968=($967|0)==($964|0);
 if($968){label=223;break;}else{label=222;break;}
 case 222: 
 var $970=(($sp_160_i+8)|0);
 var $971=HEAP32[(($970)>>2)];
 var $972=($971|0)==0;
 if($972){label=304;break;}else{var $sp_160_i=$971;label=221;break;}
 case 223: 
 var $973=(($sp_160_i+12)|0);
 var $974=HEAP32[(($973)>>2)];
 var $975=$974&8;
 var $976=($975|0)==0;
 if($976){label=224;break;}else{label=304;break;}
 case 224: 
 HEAP32[(($966)>>2)]=$tbase_245_i;
 var $978=(($sp_160_i+4)|0);
 var $979=HEAP32[(($978)>>2)];
 var $980=((($979)+($tsize_244_i))|0);
 HEAP32[(($978)>>2)]=$980;
 var $981=(($tbase_245_i+8)|0);
 var $982=$981;
 var $983=$982&7;
 var $984=($983|0)==0;
 if($984){var $989=0;label=226;break;}else{label=225;break;}
 case 225: 
 var $986=(((-$982))|0);
 var $987=$986&7;
 var $989=$987;label=226;break;
 case 226: 
 var $989;
 var $990=(($tbase_245_i+$989)|0);
 var $_sum93_i=((($tsize_244_i)+(8))|0);
 var $991=(($tbase_245_i+$_sum93_i)|0);
 var $992=$991;
 var $993=$992&7;
 var $994=($993|0)==0;
 if($994){var $999=0;label=228;break;}else{label=227;break;}
 case 227: 
 var $996=(((-$992))|0);
 var $997=$996&7;
 var $999=$997;label=228;break;
 case 228: 
 var $999;
 var $_sum94_i=((($999)+($tsize_244_i))|0);
 var $1000=(($tbase_245_i+$_sum94_i)|0);
 var $1001=$1000;
 var $1002=$1000;
 var $1003=$990;
 var $1004=((($1002)-($1003))|0);
 var $_sum_i21_i=((($989)+($nb_0))|0);
 var $1005=(($tbase_245_i+$_sum_i21_i)|0);
 var $1006=$1005;
 var $1007=((($1004)-($nb_0))|0);
 var $1008=$nb_0|3;
 var $_sum1_i22_i=((($989)+(4))|0);
 var $1009=(($tbase_245_i+$_sum1_i22_i)|0);
 var $1010=$1009;
 HEAP32[(($1010)>>2)]=$1008;
 var $1011=HEAP32[((20024)>>2)];
 var $1012=($1001|0)==($1011|0);
 if($1012){label=229;break;}else{label=230;break;}
 case 229: 
 var $1014=HEAP32[((20012)>>2)];
 var $1015=((($1014)+($1007))|0);
 HEAP32[((20012)>>2)]=$1015;
 HEAP32[((20024)>>2)]=$1006;
 var $1016=$1015|1;
 var $_sum46_i_i=((($_sum_i21_i)+(4))|0);
 var $1017=(($tbase_245_i+$_sum46_i_i)|0);
 var $1018=$1017;
 HEAP32[(($1018)>>2)]=$1016;
 label=303;break;
 case 230: 
 var $1020=HEAP32[((20020)>>2)];
 var $1021=($1001|0)==($1020|0);
 if($1021){label=231;break;}else{label=232;break;}
 case 231: 
 var $1023=HEAP32[((20008)>>2)];
 var $1024=((($1023)+($1007))|0);
 HEAP32[((20008)>>2)]=$1024;
 HEAP32[((20020)>>2)]=$1006;
 var $1025=$1024|1;
 var $_sum44_i_i=((($_sum_i21_i)+(4))|0);
 var $1026=(($tbase_245_i+$_sum44_i_i)|0);
 var $1027=$1026;
 HEAP32[(($1027)>>2)]=$1025;
 var $_sum45_i_i=((($1024)+($_sum_i21_i))|0);
 var $1028=(($tbase_245_i+$_sum45_i_i)|0);
 var $1029=$1028;
 HEAP32[(($1029)>>2)]=$1024;
 label=303;break;
 case 232: 
 var $_sum2_i23_i=((($tsize_244_i)+(4))|0);
 var $_sum95_i=((($_sum2_i23_i)+($999))|0);
 var $1031=(($tbase_245_i+$_sum95_i)|0);
 var $1032=$1031;
 var $1033=HEAP32[(($1032)>>2)];
 var $1034=$1033&3;
 var $1035=($1034|0)==1;
 if($1035){label=233;break;}else{var $oldfirst_0_i_i=$1001;var $qsize_0_i_i=$1007;label=280;break;}
 case 233: 
 var $1037=$1033&-8;
 var $1038=$1033>>>3;
 var $1039=($1033>>>0)<256;
 if($1039){label=234;break;}else{label=246;break;}
 case 234: 
 var $_sum3940_i_i=$999|8;
 var $_sum105_i=((($_sum3940_i_i)+($tsize_244_i))|0);
 var $1041=(($tbase_245_i+$_sum105_i)|0);
 var $1042=$1041;
 var $1043=HEAP32[(($1042)>>2)];
 var $_sum41_i_i=((($tsize_244_i)+(12))|0);
 var $_sum106_i=((($_sum41_i_i)+($999))|0);
 var $1044=(($tbase_245_i+$_sum106_i)|0);
 var $1045=$1044;
 var $1046=HEAP32[(($1045)>>2)];
 var $1047=$1038<<1;
 var $1048=((20040+($1047<<2))|0);
 var $1049=$1048;
 var $1050=($1043|0)==($1049|0);
 if($1050){label=237;break;}else{label=235;break;}
 case 235: 
 var $1052=$1043;
 var $1053=HEAP32[((20016)>>2)];
 var $1054=($1052>>>0)<($1053>>>0);
 if($1054){label=245;break;}else{label=236;break;}
 case 236: 
 var $1056=(($1043+12)|0);
 var $1057=HEAP32[(($1056)>>2)];
 var $1058=($1057|0)==($1001|0);
 if($1058){label=237;break;}else{label=245;break;}
 case 237: 
 var $1059=($1046|0)==($1043|0);
 if($1059){label=238;break;}else{label=239;break;}
 case 238: 
 var $1061=1<<$1038;
 var $1062=$1061^-1;
 var $1063=HEAP32[((20000)>>2)];
 var $1064=$1063&$1062;
 HEAP32[((20000)>>2)]=$1064;
 label=279;break;
 case 239: 
 var $1066=($1046|0)==($1049|0);
 if($1066){label=240;break;}else{label=241;break;}
 case 240: 
 var $_pre56_i_i=(($1046+8)|0);
 var $_pre_phi57_i_i=$_pre56_i_i;label=243;break;
 case 241: 
 var $1068=$1046;
 var $1069=HEAP32[((20016)>>2)];
 var $1070=($1068>>>0)<($1069>>>0);
 if($1070){label=244;break;}else{label=242;break;}
 case 242: 
 var $1072=(($1046+8)|0);
 var $1073=HEAP32[(($1072)>>2)];
 var $1074=($1073|0)==($1001|0);
 if($1074){var $_pre_phi57_i_i=$1072;label=243;break;}else{label=244;break;}
 case 243: 
 var $_pre_phi57_i_i;
 var $1075=(($1043+12)|0);
 HEAP32[(($1075)>>2)]=$1046;
 HEAP32[(($_pre_phi57_i_i)>>2)]=$1043;
 label=279;break;
 case 244: 
 _abort();
 throw "Reached an unreachable!";
 case 245: 
 _abort();
 throw "Reached an unreachable!";
 case 246: 
 var $1077=$1000;
 var $_sum34_i_i=$999|24;
 var $_sum96_i=((($_sum34_i_i)+($tsize_244_i))|0);
 var $1078=(($tbase_245_i+$_sum96_i)|0);
 var $1079=$1078;
 var $1080=HEAP32[(($1079)>>2)];
 var $_sum5_i_i=((($tsize_244_i)+(12))|0);
 var $_sum97_i=((($_sum5_i_i)+($999))|0);
 var $1081=(($tbase_245_i+$_sum97_i)|0);
 var $1082=$1081;
 var $1083=HEAP32[(($1082)>>2)];
 var $1084=($1083|0)==($1077|0);
 if($1084){label=252;break;}else{label=247;break;}
 case 247: 
 var $_sum3637_i_i=$999|8;
 var $_sum98_i=((($_sum3637_i_i)+($tsize_244_i))|0);
 var $1086=(($tbase_245_i+$_sum98_i)|0);
 var $1087=$1086;
 var $1088=HEAP32[(($1087)>>2)];
 var $1089=$1088;
 var $1090=HEAP32[((20016)>>2)];
 var $1091=($1089>>>0)<($1090>>>0);
 if($1091){label=251;break;}else{label=248;break;}
 case 248: 
 var $1093=(($1088+12)|0);
 var $1094=HEAP32[(($1093)>>2)];
 var $1095=($1094|0)==($1077|0);
 if($1095){label=249;break;}else{label=251;break;}
 case 249: 
 var $1097=(($1083+8)|0);
 var $1098=HEAP32[(($1097)>>2)];
 var $1099=($1098|0)==($1077|0);
 if($1099){label=250;break;}else{label=251;break;}
 case 250: 
 HEAP32[(($1093)>>2)]=$1083;
 HEAP32[(($1097)>>2)]=$1088;
 var $R_1_i_i=$1083;label=259;break;
 case 251: 
 _abort();
 throw "Reached an unreachable!";
 case 252: 
 var $_sum67_i_i=$999|16;
 var $_sum103_i=((($_sum2_i23_i)+($_sum67_i_i))|0);
 var $1102=(($tbase_245_i+$_sum103_i)|0);
 var $1103=$1102;
 var $1104=HEAP32[(($1103)>>2)];
 var $1105=($1104|0)==0;
 if($1105){label=253;break;}else{var $R_0_i_i=$1104;var $RP_0_i_i=$1103;label=254;break;}
 case 253: 
 var $_sum104_i=((($_sum67_i_i)+($tsize_244_i))|0);
 var $1107=(($tbase_245_i+$_sum104_i)|0);
 var $1108=$1107;
 var $1109=HEAP32[(($1108)>>2)];
 var $1110=($1109|0)==0;
 if($1110){var $R_1_i_i=0;label=259;break;}else{var $R_0_i_i=$1109;var $RP_0_i_i=$1108;label=254;break;}
 case 254: 
 var $RP_0_i_i;
 var $R_0_i_i;
 var $1111=(($R_0_i_i+20)|0);
 var $1112=HEAP32[(($1111)>>2)];
 var $1113=($1112|0)==0;
 if($1113){label=255;break;}else{var $R_0_i_i=$1112;var $RP_0_i_i=$1111;label=254;break;}
 case 255: 
 var $1115=(($R_0_i_i+16)|0);
 var $1116=HEAP32[(($1115)>>2)];
 var $1117=($1116|0)==0;
 if($1117){label=256;break;}else{var $R_0_i_i=$1116;var $RP_0_i_i=$1115;label=254;break;}
 case 256: 
 var $1119=$RP_0_i_i;
 var $1120=HEAP32[((20016)>>2)];
 var $1121=($1119>>>0)<($1120>>>0);
 if($1121){label=258;break;}else{label=257;break;}
 case 257: 
 HEAP32[(($RP_0_i_i)>>2)]=0;
 var $R_1_i_i=$R_0_i_i;label=259;break;
 case 258: 
 _abort();
 throw "Reached an unreachable!";
 case 259: 
 var $R_1_i_i;
 var $1125=($1080|0)==0;
 if($1125){label=279;break;}else{label=260;break;}
 case 260: 
 var $_sum31_i_i=((($tsize_244_i)+(28))|0);
 var $_sum99_i=((($_sum31_i_i)+($999))|0);
 var $1127=(($tbase_245_i+$_sum99_i)|0);
 var $1128=$1127;
 var $1129=HEAP32[(($1128)>>2)];
 var $1130=((20304+($1129<<2))|0);
 var $1131=HEAP32[(($1130)>>2)];
 var $1132=($1077|0)==($1131|0);
 if($1132){label=261;break;}else{label=263;break;}
 case 261: 
 HEAP32[(($1130)>>2)]=$R_1_i_i;
 var $cond_i_i=($R_1_i_i|0)==0;
 if($cond_i_i){label=262;break;}else{label=269;break;}
 case 262: 
 var $1134=1<<$1129;
 var $1135=$1134^-1;
 var $1136=HEAP32[((20004)>>2)];
 var $1137=$1136&$1135;
 HEAP32[((20004)>>2)]=$1137;
 label=279;break;
 case 263: 
 var $1139=$1080;
 var $1140=HEAP32[((20016)>>2)];
 var $1141=($1139>>>0)<($1140>>>0);
 if($1141){label=267;break;}else{label=264;break;}
 case 264: 
 var $1143=(($1080+16)|0);
 var $1144=HEAP32[(($1143)>>2)];
 var $1145=($1144|0)==($1077|0);
 if($1145){label=265;break;}else{label=266;break;}
 case 265: 
 HEAP32[(($1143)>>2)]=$R_1_i_i;
 label=268;break;
 case 266: 
 var $1148=(($1080+20)|0);
 HEAP32[(($1148)>>2)]=$R_1_i_i;
 label=268;break;
 case 267: 
 _abort();
 throw "Reached an unreachable!";
 case 268: 
 var $1151=($R_1_i_i|0)==0;
 if($1151){label=279;break;}else{label=269;break;}
 case 269: 
 var $1153=$R_1_i_i;
 var $1154=HEAP32[((20016)>>2)];
 var $1155=($1153>>>0)<($1154>>>0);
 if($1155){label=278;break;}else{label=270;break;}
 case 270: 
 var $1157=(($R_1_i_i+24)|0);
 HEAP32[(($1157)>>2)]=$1080;
 var $_sum3233_i_i=$999|16;
 var $_sum100_i=((($_sum3233_i_i)+($tsize_244_i))|0);
 var $1158=(($tbase_245_i+$_sum100_i)|0);
 var $1159=$1158;
 var $1160=HEAP32[(($1159)>>2)];
 var $1161=($1160|0)==0;
 if($1161){label=274;break;}else{label=271;break;}
 case 271: 
 var $1163=$1160;
 var $1164=HEAP32[((20016)>>2)];
 var $1165=($1163>>>0)<($1164>>>0);
 if($1165){label=273;break;}else{label=272;break;}
 case 272: 
 var $1167=(($R_1_i_i+16)|0);
 HEAP32[(($1167)>>2)]=$1160;
 var $1168=(($1160+24)|0);
 HEAP32[(($1168)>>2)]=$R_1_i_i;
 label=274;break;
 case 273: 
 _abort();
 throw "Reached an unreachable!";
 case 274: 
 var $_sum101_i=((($_sum2_i23_i)+($_sum3233_i_i))|0);
 var $1171=(($tbase_245_i+$_sum101_i)|0);
 var $1172=$1171;
 var $1173=HEAP32[(($1172)>>2)];
 var $1174=($1173|0)==0;
 if($1174){label=279;break;}else{label=275;break;}
 case 275: 
 var $1176=$1173;
 var $1177=HEAP32[((20016)>>2)];
 var $1178=($1176>>>0)<($1177>>>0);
 if($1178){label=277;break;}else{label=276;break;}
 case 276: 
 var $1180=(($R_1_i_i+20)|0);
 HEAP32[(($1180)>>2)]=$1173;
 var $1181=(($1173+24)|0);
 HEAP32[(($1181)>>2)]=$R_1_i_i;
 label=279;break;
 case 277: 
 _abort();
 throw "Reached an unreachable!";
 case 278: 
 _abort();
 throw "Reached an unreachable!";
 case 279: 
 var $_sum9_i_i=$1037|$999;
 var $_sum102_i=((($_sum9_i_i)+($tsize_244_i))|0);
 var $1185=(($tbase_245_i+$_sum102_i)|0);
 var $1186=$1185;
 var $1187=((($1037)+($1007))|0);
 var $oldfirst_0_i_i=$1186;var $qsize_0_i_i=$1187;label=280;break;
 case 280: 
 var $qsize_0_i_i;
 var $oldfirst_0_i_i;
 var $1189=(($oldfirst_0_i_i+4)|0);
 var $1190=HEAP32[(($1189)>>2)];
 var $1191=$1190&-2;
 HEAP32[(($1189)>>2)]=$1191;
 var $1192=$qsize_0_i_i|1;
 var $_sum10_i_i=((($_sum_i21_i)+(4))|0);
 var $1193=(($tbase_245_i+$_sum10_i_i)|0);
 var $1194=$1193;
 HEAP32[(($1194)>>2)]=$1192;
 var $_sum11_i_i=((($qsize_0_i_i)+($_sum_i21_i))|0);
 var $1195=(($tbase_245_i+$_sum11_i_i)|0);
 var $1196=$1195;
 HEAP32[(($1196)>>2)]=$qsize_0_i_i;
 var $1197=$qsize_0_i_i>>>3;
 var $1198=($qsize_0_i_i>>>0)<256;
 if($1198){label=281;break;}else{label=286;break;}
 case 281: 
 var $1200=$1197<<1;
 var $1201=((20040+($1200<<2))|0);
 var $1202=$1201;
 var $1203=HEAP32[((20000)>>2)];
 var $1204=1<<$1197;
 var $1205=$1203&$1204;
 var $1206=($1205|0)==0;
 if($1206){label=282;break;}else{label=283;break;}
 case 282: 
 var $1208=$1203|$1204;
 HEAP32[((20000)>>2)]=$1208;
 var $_sum27_pre_i_i=((($1200)+(2))|0);
 var $_pre_i24_i=((20040+($_sum27_pre_i_i<<2))|0);
 var $F4_0_i_i=$1202;var $_pre_phi_i25_i=$_pre_i24_i;label=285;break;
 case 283: 
 var $_sum30_i_i=((($1200)+(2))|0);
 var $1210=((20040+($_sum30_i_i<<2))|0);
 var $1211=HEAP32[(($1210)>>2)];
 var $1212=$1211;
 var $1213=HEAP32[((20016)>>2)];
 var $1214=($1212>>>0)<($1213>>>0);
 if($1214){label=284;break;}else{var $F4_0_i_i=$1211;var $_pre_phi_i25_i=$1210;label=285;break;}
 case 284: 
 _abort();
 throw "Reached an unreachable!";
 case 285: 
 var $_pre_phi_i25_i;
 var $F4_0_i_i;
 HEAP32[(($_pre_phi_i25_i)>>2)]=$1006;
 var $1217=(($F4_0_i_i+12)|0);
 HEAP32[(($1217)>>2)]=$1006;
 var $_sum28_i_i=((($_sum_i21_i)+(8))|0);
 var $1218=(($tbase_245_i+$_sum28_i_i)|0);
 var $1219=$1218;
 HEAP32[(($1219)>>2)]=$F4_0_i_i;
 var $_sum29_i_i=((($_sum_i21_i)+(12))|0);
 var $1220=(($tbase_245_i+$_sum29_i_i)|0);
 var $1221=$1220;
 HEAP32[(($1221)>>2)]=$1202;
 label=303;break;
 case 286: 
 var $1223=$1005;
 var $1224=$qsize_0_i_i>>>8;
 var $1225=($1224|0)==0;
 if($1225){var $I7_0_i_i=0;label=289;break;}else{label=287;break;}
 case 287: 
 var $1227=($qsize_0_i_i>>>0)>16777215;
 if($1227){var $I7_0_i_i=31;label=289;break;}else{label=288;break;}
 case 288: 
 var $1229=((($1224)+(1048320))|0);
 var $1230=$1229>>>16;
 var $1231=$1230&8;
 var $1232=$1224<<$1231;
 var $1233=((($1232)+(520192))|0);
 var $1234=$1233>>>16;
 var $1235=$1234&4;
 var $1236=$1235|$1231;
 var $1237=$1232<<$1235;
 var $1238=((($1237)+(245760))|0);
 var $1239=$1238>>>16;
 var $1240=$1239&2;
 var $1241=$1236|$1240;
 var $1242=(((14)-($1241))|0);
 var $1243=$1237<<$1240;
 var $1244=$1243>>>15;
 var $1245=((($1242)+($1244))|0);
 var $1246=$1245<<1;
 var $1247=((($1245)+(7))|0);
 var $1248=$qsize_0_i_i>>>($1247>>>0);
 var $1249=$1248&1;
 var $1250=$1249|$1246;
 var $I7_0_i_i=$1250;label=289;break;
 case 289: 
 var $I7_0_i_i;
 var $1252=((20304+($I7_0_i_i<<2))|0);
 var $_sum12_i26_i=((($_sum_i21_i)+(28))|0);
 var $1253=(($tbase_245_i+$_sum12_i26_i)|0);
 var $1254=$1253;
 HEAP32[(($1254)>>2)]=$I7_0_i_i;
 var $_sum13_i_i=((($_sum_i21_i)+(16))|0);
 var $1255=(($tbase_245_i+$_sum13_i_i)|0);
 var $_sum14_i_i=((($_sum_i21_i)+(20))|0);
 var $1256=(($tbase_245_i+$_sum14_i_i)|0);
 var $1257=$1256;
 HEAP32[(($1257)>>2)]=0;
 var $1258=$1255;
 HEAP32[(($1258)>>2)]=0;
 var $1259=HEAP32[((20004)>>2)];
 var $1260=1<<$I7_0_i_i;
 var $1261=$1259&$1260;
 var $1262=($1261|0)==0;
 if($1262){label=290;break;}else{label=291;break;}
 case 290: 
 var $1264=$1259|$1260;
 HEAP32[((20004)>>2)]=$1264;
 HEAP32[(($1252)>>2)]=$1223;
 var $1265=$1252;
 var $_sum15_i_i=((($_sum_i21_i)+(24))|0);
 var $1266=(($tbase_245_i+$_sum15_i_i)|0);
 var $1267=$1266;
 HEAP32[(($1267)>>2)]=$1265;
 var $_sum16_i_i=((($_sum_i21_i)+(12))|0);
 var $1268=(($tbase_245_i+$_sum16_i_i)|0);
 var $1269=$1268;
 HEAP32[(($1269)>>2)]=$1223;
 var $_sum17_i_i=((($_sum_i21_i)+(8))|0);
 var $1270=(($tbase_245_i+$_sum17_i_i)|0);
 var $1271=$1270;
 HEAP32[(($1271)>>2)]=$1223;
 label=303;break;
 case 291: 
 var $1273=HEAP32[(($1252)>>2)];
 var $1274=($I7_0_i_i|0)==31;
 if($1274){var $1279=0;label=293;break;}else{label=292;break;}
 case 292: 
 var $1276=$I7_0_i_i>>>1;
 var $1277=(((25)-($1276))|0);
 var $1279=$1277;label=293;break;
 case 293: 
 var $1279;
 var $1280=$qsize_0_i_i<<$1279;
 var $K8_0_i_i=$1280;var $T_0_i27_i=$1273;label=294;break;
 case 294: 
 var $T_0_i27_i;
 var $K8_0_i_i;
 var $1282=(($T_0_i27_i+4)|0);
 var $1283=HEAP32[(($1282)>>2)];
 var $1284=$1283&-8;
 var $1285=($1284|0)==($qsize_0_i_i|0);
 if($1285){label=299;break;}else{label=295;break;}
 case 295: 
 var $1287=$K8_0_i_i>>>31;
 var $1288=(($T_0_i27_i+16+($1287<<2))|0);
 var $1289=HEAP32[(($1288)>>2)];
 var $1290=($1289|0)==0;
 var $1291=$K8_0_i_i<<1;
 if($1290){label=296;break;}else{var $K8_0_i_i=$1291;var $T_0_i27_i=$1289;label=294;break;}
 case 296: 
 var $1293=$1288;
 var $1294=HEAP32[((20016)>>2)];
 var $1295=($1293>>>0)<($1294>>>0);
 if($1295){label=298;break;}else{label=297;break;}
 case 297: 
 HEAP32[(($1288)>>2)]=$1223;
 var $_sum24_i_i=((($_sum_i21_i)+(24))|0);
 var $1297=(($tbase_245_i+$_sum24_i_i)|0);
 var $1298=$1297;
 HEAP32[(($1298)>>2)]=$T_0_i27_i;
 var $_sum25_i_i=((($_sum_i21_i)+(12))|0);
 var $1299=(($tbase_245_i+$_sum25_i_i)|0);
 var $1300=$1299;
 HEAP32[(($1300)>>2)]=$1223;
 var $_sum26_i_i=((($_sum_i21_i)+(8))|0);
 var $1301=(($tbase_245_i+$_sum26_i_i)|0);
 var $1302=$1301;
 HEAP32[(($1302)>>2)]=$1223;
 label=303;break;
 case 298: 
 _abort();
 throw "Reached an unreachable!";
 case 299: 
 var $1305=(($T_0_i27_i+8)|0);
 var $1306=HEAP32[(($1305)>>2)];
 var $1307=$T_0_i27_i;
 var $1308=HEAP32[((20016)>>2)];
 var $1309=($1307>>>0)<($1308>>>0);
 if($1309){label=302;break;}else{label=300;break;}
 case 300: 
 var $1311=$1306;
 var $1312=($1311>>>0)<($1308>>>0);
 if($1312){label=302;break;}else{label=301;break;}
 case 301: 
 var $1314=(($1306+12)|0);
 HEAP32[(($1314)>>2)]=$1223;
 HEAP32[(($1305)>>2)]=$1223;
 var $_sum21_i_i=((($_sum_i21_i)+(8))|0);
 var $1315=(($tbase_245_i+$_sum21_i_i)|0);
 var $1316=$1315;
 HEAP32[(($1316)>>2)]=$1306;
 var $_sum22_i_i=((($_sum_i21_i)+(12))|0);
 var $1317=(($tbase_245_i+$_sum22_i_i)|0);
 var $1318=$1317;
 HEAP32[(($1318)>>2)]=$T_0_i27_i;
 var $_sum23_i_i=((($_sum_i21_i)+(24))|0);
 var $1319=(($tbase_245_i+$_sum23_i_i)|0);
 var $1320=$1319;
 HEAP32[(($1320)>>2)]=0;
 label=303;break;
 case 302: 
 _abort();
 throw "Reached an unreachable!";
 case 303: 
 var $_sum1819_i_i=$989|8;
 var $1321=(($tbase_245_i+$_sum1819_i_i)|0);
 var $mem_0=$1321;label=341;break;
 case 304: 
 var $1322=$888;
 var $sp_0_i_i_i=20448;label=305;break;
 case 305: 
 var $sp_0_i_i_i;
 var $1324=(($sp_0_i_i_i)|0);
 var $1325=HEAP32[(($1324)>>2)];
 var $1326=($1325>>>0)>($1322>>>0);
 if($1326){label=307;break;}else{label=306;break;}
 case 306: 
 var $1328=(($sp_0_i_i_i+4)|0);
 var $1329=HEAP32[(($1328)>>2)];
 var $1330=(($1325+$1329)|0);
 var $1331=($1330>>>0)>($1322>>>0);
 if($1331){label=308;break;}else{label=307;break;}
 case 307: 
 var $1333=(($sp_0_i_i_i+8)|0);
 var $1334=HEAP32[(($1333)>>2)];
 var $sp_0_i_i_i=$1334;label=305;break;
 case 308: 
 var $_sum_i15_i=((($1329)-(47))|0);
 var $_sum1_i16_i=((($1329)-(39))|0);
 var $1335=(($1325+$_sum1_i16_i)|0);
 var $1336=$1335;
 var $1337=$1336&7;
 var $1338=($1337|0)==0;
 if($1338){var $1343=0;label=310;break;}else{label=309;break;}
 case 309: 
 var $1340=(((-$1336))|0);
 var $1341=$1340&7;
 var $1343=$1341;label=310;break;
 case 310: 
 var $1343;
 var $_sum2_i17_i=((($_sum_i15_i)+($1343))|0);
 var $1344=(($1325+$_sum2_i17_i)|0);
 var $1345=(($888+16)|0);
 var $1346=$1345;
 var $1347=($1344>>>0)<($1346>>>0);
 var $1348=($1347?$1322:$1344);
 var $1349=(($1348+8)|0);
 var $1350=$1349;
 var $1351=((($tsize_244_i)-(40))|0);
 var $1352=(($tbase_245_i+8)|0);
 var $1353=$1352;
 var $1354=$1353&7;
 var $1355=($1354|0)==0;
 if($1355){var $1359=0;label=312;break;}else{label=311;break;}
 case 311: 
 var $1357=(((-$1353))|0);
 var $1358=$1357&7;
 var $1359=$1358;label=312;break;
 case 312: 
 var $1359;
 var $1360=(($tbase_245_i+$1359)|0);
 var $1361=$1360;
 var $1362=((($1351)-($1359))|0);
 HEAP32[((20024)>>2)]=$1361;
 HEAP32[((20012)>>2)]=$1362;
 var $1363=$1362|1;
 var $_sum_i_i_i=((($1359)+(4))|0);
 var $1364=(($tbase_245_i+$_sum_i_i_i)|0);
 var $1365=$1364;
 HEAP32[(($1365)>>2)]=$1363;
 var $_sum2_i_i_i=((($tsize_244_i)-(36))|0);
 var $1366=(($tbase_245_i+$_sum2_i_i_i)|0);
 var $1367=$1366;
 HEAP32[(($1367)>>2)]=40;
 var $1368=HEAP32[((19320)>>2)];
 HEAP32[((20028)>>2)]=$1368;
 var $1369=(($1348+4)|0);
 var $1370=$1369;
 HEAP32[(($1370)>>2)]=27;
 assert(16 % 1 === 0);HEAP32[(($1349)>>2)]=HEAP32[((20448)>>2)];HEAP32[((($1349)+(4))>>2)]=HEAP32[((20452)>>2)];HEAP32[((($1349)+(8))>>2)]=HEAP32[((20456)>>2)];HEAP32[((($1349)+(12))>>2)]=HEAP32[((20460)>>2)];
 HEAP32[((20448)>>2)]=$tbase_245_i;
 HEAP32[((20452)>>2)]=$tsize_244_i;
 HEAP32[((20460)>>2)]=0;
 HEAP32[((20456)>>2)]=$1350;
 var $1371=(($1348+28)|0);
 var $1372=$1371;
 HEAP32[(($1372)>>2)]=7;
 var $1373=(($1348+32)|0);
 var $1374=($1373>>>0)<($1330>>>0);
 if($1374){var $1375=$1372;label=313;break;}else{label=314;break;}
 case 313: 
 var $1375;
 var $1376=(($1375+4)|0);
 HEAP32[(($1376)>>2)]=7;
 var $1377=(($1375+8)|0);
 var $1378=$1377;
 var $1379=($1378>>>0)<($1330>>>0);
 if($1379){var $1375=$1376;label=313;break;}else{label=314;break;}
 case 314: 
 var $1380=($1348|0)==($1322|0);
 if($1380){label=338;break;}else{label=315;break;}
 case 315: 
 var $1382=$1348;
 var $1383=$888;
 var $1384=((($1382)-($1383))|0);
 var $1385=(($1322+$1384)|0);
 var $_sum3_i_i=((($1384)+(4))|0);
 var $1386=(($1322+$_sum3_i_i)|0);
 var $1387=$1386;
 var $1388=HEAP32[(($1387)>>2)];
 var $1389=$1388&-2;
 HEAP32[(($1387)>>2)]=$1389;
 var $1390=$1384|1;
 var $1391=(($888+4)|0);
 HEAP32[(($1391)>>2)]=$1390;
 var $1392=$1385;
 HEAP32[(($1392)>>2)]=$1384;
 var $1393=$1384>>>3;
 var $1394=($1384>>>0)<256;
 if($1394){label=316;break;}else{label=321;break;}
 case 316: 
 var $1396=$1393<<1;
 var $1397=((20040+($1396<<2))|0);
 var $1398=$1397;
 var $1399=HEAP32[((20000)>>2)];
 var $1400=1<<$1393;
 var $1401=$1399&$1400;
 var $1402=($1401|0)==0;
 if($1402){label=317;break;}else{label=318;break;}
 case 317: 
 var $1404=$1399|$1400;
 HEAP32[((20000)>>2)]=$1404;
 var $_sum11_pre_i_i=((($1396)+(2))|0);
 var $_pre_i_i=((20040+($_sum11_pre_i_i<<2))|0);
 var $F_0_i_i=$1398;var $_pre_phi_i_i=$_pre_i_i;label=320;break;
 case 318: 
 var $_sum12_i_i=((($1396)+(2))|0);
 var $1406=((20040+($_sum12_i_i<<2))|0);
 var $1407=HEAP32[(($1406)>>2)];
 var $1408=$1407;
 var $1409=HEAP32[((20016)>>2)];
 var $1410=($1408>>>0)<($1409>>>0);
 if($1410){label=319;break;}else{var $F_0_i_i=$1407;var $_pre_phi_i_i=$1406;label=320;break;}
 case 319: 
 _abort();
 throw "Reached an unreachable!";
 case 320: 
 var $_pre_phi_i_i;
 var $F_0_i_i;
 HEAP32[(($_pre_phi_i_i)>>2)]=$888;
 var $1413=(($F_0_i_i+12)|0);
 HEAP32[(($1413)>>2)]=$888;
 var $1414=(($888+8)|0);
 HEAP32[(($1414)>>2)]=$F_0_i_i;
 var $1415=(($888+12)|0);
 HEAP32[(($1415)>>2)]=$1398;
 label=338;break;
 case 321: 
 var $1417=$888;
 var $1418=$1384>>>8;
 var $1419=($1418|0)==0;
 if($1419){var $I1_0_i_i=0;label=324;break;}else{label=322;break;}
 case 322: 
 var $1421=($1384>>>0)>16777215;
 if($1421){var $I1_0_i_i=31;label=324;break;}else{label=323;break;}
 case 323: 
 var $1423=((($1418)+(1048320))|0);
 var $1424=$1423>>>16;
 var $1425=$1424&8;
 var $1426=$1418<<$1425;
 var $1427=((($1426)+(520192))|0);
 var $1428=$1427>>>16;
 var $1429=$1428&4;
 var $1430=$1429|$1425;
 var $1431=$1426<<$1429;
 var $1432=((($1431)+(245760))|0);
 var $1433=$1432>>>16;
 var $1434=$1433&2;
 var $1435=$1430|$1434;
 var $1436=(((14)-($1435))|0);
 var $1437=$1431<<$1434;
 var $1438=$1437>>>15;
 var $1439=((($1436)+($1438))|0);
 var $1440=$1439<<1;
 var $1441=((($1439)+(7))|0);
 var $1442=$1384>>>($1441>>>0);
 var $1443=$1442&1;
 var $1444=$1443|$1440;
 var $I1_0_i_i=$1444;label=324;break;
 case 324: 
 var $I1_0_i_i;
 var $1446=((20304+($I1_0_i_i<<2))|0);
 var $1447=(($888+28)|0);
 var $I1_0_c_i_i=$I1_0_i_i;
 HEAP32[(($1447)>>2)]=$I1_0_c_i_i;
 var $1448=(($888+20)|0);
 HEAP32[(($1448)>>2)]=0;
 var $1449=(($888+16)|0);
 HEAP32[(($1449)>>2)]=0;
 var $1450=HEAP32[((20004)>>2)];
 var $1451=1<<$I1_0_i_i;
 var $1452=$1450&$1451;
 var $1453=($1452|0)==0;
 if($1453){label=325;break;}else{label=326;break;}
 case 325: 
 var $1455=$1450|$1451;
 HEAP32[((20004)>>2)]=$1455;
 HEAP32[(($1446)>>2)]=$1417;
 var $1456=(($888+24)|0);
 var $_c_i_i=$1446;
 HEAP32[(($1456)>>2)]=$_c_i_i;
 var $1457=(($888+12)|0);
 HEAP32[(($1457)>>2)]=$888;
 var $1458=(($888+8)|0);
 HEAP32[(($1458)>>2)]=$888;
 label=338;break;
 case 326: 
 var $1460=HEAP32[(($1446)>>2)];
 var $1461=($I1_0_i_i|0)==31;
 if($1461){var $1466=0;label=328;break;}else{label=327;break;}
 case 327: 
 var $1463=$I1_0_i_i>>>1;
 var $1464=(((25)-($1463))|0);
 var $1466=$1464;label=328;break;
 case 328: 
 var $1466;
 var $1467=$1384<<$1466;
 var $K2_0_i_i=$1467;var $T_0_i_i=$1460;label=329;break;
 case 329: 
 var $T_0_i_i;
 var $K2_0_i_i;
 var $1469=(($T_0_i_i+4)|0);
 var $1470=HEAP32[(($1469)>>2)];
 var $1471=$1470&-8;
 var $1472=($1471|0)==($1384|0);
 if($1472){label=334;break;}else{label=330;break;}
 case 330: 
 var $1474=$K2_0_i_i>>>31;
 var $1475=(($T_0_i_i+16+($1474<<2))|0);
 var $1476=HEAP32[(($1475)>>2)];
 var $1477=($1476|0)==0;
 var $1478=$K2_0_i_i<<1;
 if($1477){label=331;break;}else{var $K2_0_i_i=$1478;var $T_0_i_i=$1476;label=329;break;}
 case 331: 
 var $1480=$1475;
 var $1481=HEAP32[((20016)>>2)];
 var $1482=($1480>>>0)<($1481>>>0);
 if($1482){label=333;break;}else{label=332;break;}
 case 332: 
 HEAP32[(($1475)>>2)]=$1417;
 var $1484=(($888+24)|0);
 var $T_0_c8_i_i=$T_0_i_i;
 HEAP32[(($1484)>>2)]=$T_0_c8_i_i;
 var $1485=(($888+12)|0);
 HEAP32[(($1485)>>2)]=$888;
 var $1486=(($888+8)|0);
 HEAP32[(($1486)>>2)]=$888;
 label=338;break;
 case 333: 
 _abort();
 throw "Reached an unreachable!";
 case 334: 
 var $1489=(($T_0_i_i+8)|0);
 var $1490=HEAP32[(($1489)>>2)];
 var $1491=$T_0_i_i;
 var $1492=HEAP32[((20016)>>2)];
 var $1493=($1491>>>0)<($1492>>>0);
 if($1493){label=337;break;}else{label=335;break;}
 case 335: 
 var $1495=$1490;
 var $1496=($1495>>>0)<($1492>>>0);
 if($1496){label=337;break;}else{label=336;break;}
 case 336: 
 var $1498=(($1490+12)|0);
 HEAP32[(($1498)>>2)]=$1417;
 HEAP32[(($1489)>>2)]=$1417;
 var $1499=(($888+8)|0);
 var $_c7_i_i=$1490;
 HEAP32[(($1499)>>2)]=$_c7_i_i;
 var $1500=(($888+12)|0);
 var $T_0_c_i_i=$T_0_i_i;
 HEAP32[(($1500)>>2)]=$T_0_c_i_i;
 var $1501=(($888+24)|0);
 HEAP32[(($1501)>>2)]=0;
 label=338;break;
 case 337: 
 _abort();
 throw "Reached an unreachable!";
 case 338: 
 var $1502=HEAP32[((20012)>>2)];
 var $1503=($1502>>>0)>($nb_0>>>0);
 if($1503){label=339;break;}else{label=340;break;}
 case 339: 
 var $1505=((($1502)-($nb_0))|0);
 HEAP32[((20012)>>2)]=$1505;
 var $1506=HEAP32[((20024)>>2)];
 var $1507=$1506;
 var $1508=(($1507+$nb_0)|0);
 var $1509=$1508;
 HEAP32[((20024)>>2)]=$1509;
 var $1510=$1505|1;
 var $_sum_i134=((($nb_0)+(4))|0);
 var $1511=(($1507+$_sum_i134)|0);
 var $1512=$1511;
 HEAP32[(($1512)>>2)]=$1510;
 var $1513=$nb_0|3;
 var $1514=(($1506+4)|0);
 HEAP32[(($1514)>>2)]=$1513;
 var $1515=(($1506+8)|0);
 var $1516=$1515;
 var $mem_0=$1516;label=341;break;
 case 340: 
 var $1517=___errno_location();
 HEAP32[(($1517)>>2)]=12;
 var $mem_0=0;label=341;break;
 case 341: 
 var $mem_0;
 return $mem_0;
  default: assert(0, "bad label: " + label);
 }

}
Module["_malloc"] = _malloc;

function _free($mem){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($mem|0)==0;
 if($1){label=140;break;}else{label=2;break;}
 case 2: 
 var $3=((($mem)-(8))|0);
 var $4=$3;
 var $5=HEAP32[((20016)>>2)];
 var $6=($3>>>0)<($5>>>0);
 if($6){label=139;break;}else{label=3;break;}
 case 3: 
 var $8=((($mem)-(4))|0);
 var $9=$8;
 var $10=HEAP32[(($9)>>2)];
 var $11=$10&3;
 var $12=($11|0)==1;
 if($12){label=139;break;}else{label=4;break;}
 case 4: 
 var $14=$10&-8;
 var $_sum=((($14)-(8))|0);
 var $15=(($mem+$_sum)|0);
 var $16=$15;
 var $17=$10&1;
 var $18=($17|0)==0;
 if($18){label=5;break;}else{var $p_0=$4;var $psize_0=$14;label=56;break;}
 case 5: 
 var $20=$3;
 var $21=HEAP32[(($20)>>2)];
 var $22=($11|0)==0;
 if($22){label=140;break;}else{label=6;break;}
 case 6: 
 var $_sum232=(((-8)-($21))|0);
 var $24=(($mem+$_sum232)|0);
 var $25=$24;
 var $26=((($21)+($14))|0);
 var $27=($24>>>0)<($5>>>0);
 if($27){label=139;break;}else{label=7;break;}
 case 7: 
 var $29=HEAP32[((20020)>>2)];
 var $30=($25|0)==($29|0);
 if($30){label=54;break;}else{label=8;break;}
 case 8: 
 var $32=$21>>>3;
 var $33=($21>>>0)<256;
 if($33){label=9;break;}else{label=21;break;}
 case 9: 
 var $_sum276=((($_sum232)+(8))|0);
 var $35=(($mem+$_sum276)|0);
 var $36=$35;
 var $37=HEAP32[(($36)>>2)];
 var $_sum277=((($_sum232)+(12))|0);
 var $38=(($mem+$_sum277)|0);
 var $39=$38;
 var $40=HEAP32[(($39)>>2)];
 var $41=$32<<1;
 var $42=((20040+($41<<2))|0);
 var $43=$42;
 var $44=($37|0)==($43|0);
 if($44){label=12;break;}else{label=10;break;}
 case 10: 
 var $46=$37;
 var $47=($46>>>0)<($5>>>0);
 if($47){label=20;break;}else{label=11;break;}
 case 11: 
 var $49=(($37+12)|0);
 var $50=HEAP32[(($49)>>2)];
 var $51=($50|0)==($25|0);
 if($51){label=12;break;}else{label=20;break;}
 case 12: 
 var $52=($40|0)==($37|0);
 if($52){label=13;break;}else{label=14;break;}
 case 13: 
 var $54=1<<$32;
 var $55=$54^-1;
 var $56=HEAP32[((20000)>>2)];
 var $57=$56&$55;
 HEAP32[((20000)>>2)]=$57;
 var $p_0=$25;var $psize_0=$26;label=56;break;
 case 14: 
 var $59=($40|0)==($43|0);
 if($59){label=15;break;}else{label=16;break;}
 case 15: 
 var $_pre307=(($40+8)|0);
 var $_pre_phi308=$_pre307;label=18;break;
 case 16: 
 var $61=$40;
 var $62=($61>>>0)<($5>>>0);
 if($62){label=19;break;}else{label=17;break;}
 case 17: 
 var $64=(($40+8)|0);
 var $65=HEAP32[(($64)>>2)];
 var $66=($65|0)==($25|0);
 if($66){var $_pre_phi308=$64;label=18;break;}else{label=19;break;}
 case 18: 
 var $_pre_phi308;
 var $67=(($37+12)|0);
 HEAP32[(($67)>>2)]=$40;
 HEAP32[(($_pre_phi308)>>2)]=$37;
 var $p_0=$25;var $psize_0=$26;label=56;break;
 case 19: 
 _abort();
 throw "Reached an unreachable!";
 case 20: 
 _abort();
 throw "Reached an unreachable!";
 case 21: 
 var $69=$24;
 var $_sum266=((($_sum232)+(24))|0);
 var $70=(($mem+$_sum266)|0);
 var $71=$70;
 var $72=HEAP32[(($71)>>2)];
 var $_sum267=((($_sum232)+(12))|0);
 var $73=(($mem+$_sum267)|0);
 var $74=$73;
 var $75=HEAP32[(($74)>>2)];
 var $76=($75|0)==($69|0);
 if($76){label=27;break;}else{label=22;break;}
 case 22: 
 var $_sum273=((($_sum232)+(8))|0);
 var $78=(($mem+$_sum273)|0);
 var $79=$78;
 var $80=HEAP32[(($79)>>2)];
 var $81=$80;
 var $82=($81>>>0)<($5>>>0);
 if($82){label=26;break;}else{label=23;break;}
 case 23: 
 var $84=(($80+12)|0);
 var $85=HEAP32[(($84)>>2)];
 var $86=($85|0)==($69|0);
 if($86){label=24;break;}else{label=26;break;}
 case 24: 
 var $88=(($75+8)|0);
 var $89=HEAP32[(($88)>>2)];
 var $90=($89|0)==($69|0);
 if($90){label=25;break;}else{label=26;break;}
 case 25: 
 HEAP32[(($84)>>2)]=$75;
 HEAP32[(($88)>>2)]=$80;
 var $R_1=$75;label=34;break;
 case 26: 
 _abort();
 throw "Reached an unreachable!";
 case 27: 
 var $_sum269=((($_sum232)+(20))|0);
 var $93=(($mem+$_sum269)|0);
 var $94=$93;
 var $95=HEAP32[(($94)>>2)];
 var $96=($95|0)==0;
 if($96){label=28;break;}else{var $R_0=$95;var $RP_0=$94;label=29;break;}
 case 28: 
 var $_sum268=((($_sum232)+(16))|0);
 var $98=(($mem+$_sum268)|0);
 var $99=$98;
 var $100=HEAP32[(($99)>>2)];
 var $101=($100|0)==0;
 if($101){var $R_1=0;label=34;break;}else{var $R_0=$100;var $RP_0=$99;label=29;break;}
 case 29: 
 var $RP_0;
 var $R_0;
 var $102=(($R_0+20)|0);
 var $103=HEAP32[(($102)>>2)];
 var $104=($103|0)==0;
 if($104){label=30;break;}else{var $R_0=$103;var $RP_0=$102;label=29;break;}
 case 30: 
 var $106=(($R_0+16)|0);
 var $107=HEAP32[(($106)>>2)];
 var $108=($107|0)==0;
 if($108){label=31;break;}else{var $R_0=$107;var $RP_0=$106;label=29;break;}
 case 31: 
 var $110=$RP_0;
 var $111=($110>>>0)<($5>>>0);
 if($111){label=33;break;}else{label=32;break;}
 case 32: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=34;break;
 case 33: 
 _abort();
 throw "Reached an unreachable!";
 case 34: 
 var $R_1;
 var $115=($72|0)==0;
 if($115){var $p_0=$25;var $psize_0=$26;label=56;break;}else{label=35;break;}
 case 35: 
 var $_sum270=((($_sum232)+(28))|0);
 var $117=(($mem+$_sum270)|0);
 var $118=$117;
 var $119=HEAP32[(($118)>>2)];
 var $120=((20304+($119<<2))|0);
 var $121=HEAP32[(($120)>>2)];
 var $122=($69|0)==($121|0);
 if($122){label=36;break;}else{label=38;break;}
 case 36: 
 HEAP32[(($120)>>2)]=$R_1;
 var $cond=($R_1|0)==0;
 if($cond){label=37;break;}else{label=44;break;}
 case 37: 
 var $124=1<<$119;
 var $125=$124^-1;
 var $126=HEAP32[((20004)>>2)];
 var $127=$126&$125;
 HEAP32[((20004)>>2)]=$127;
 var $p_0=$25;var $psize_0=$26;label=56;break;
 case 38: 
 var $129=$72;
 var $130=HEAP32[((20016)>>2)];
 var $131=($129>>>0)<($130>>>0);
 if($131){label=42;break;}else{label=39;break;}
 case 39: 
 var $133=(($72+16)|0);
 var $134=HEAP32[(($133)>>2)];
 var $135=($134|0)==($69|0);
 if($135){label=40;break;}else{label=41;break;}
 case 40: 
 HEAP32[(($133)>>2)]=$R_1;
 label=43;break;
 case 41: 
 var $138=(($72+20)|0);
 HEAP32[(($138)>>2)]=$R_1;
 label=43;break;
 case 42: 
 _abort();
 throw "Reached an unreachable!";
 case 43: 
 var $141=($R_1|0)==0;
 if($141){var $p_0=$25;var $psize_0=$26;label=56;break;}else{label=44;break;}
 case 44: 
 var $143=$R_1;
 var $144=HEAP32[((20016)>>2)];
 var $145=($143>>>0)<($144>>>0);
 if($145){label=53;break;}else{label=45;break;}
 case 45: 
 var $147=(($R_1+24)|0);
 HEAP32[(($147)>>2)]=$72;
 var $_sum271=((($_sum232)+(16))|0);
 var $148=(($mem+$_sum271)|0);
 var $149=$148;
 var $150=HEAP32[(($149)>>2)];
 var $151=($150|0)==0;
 if($151){label=49;break;}else{label=46;break;}
 case 46: 
 var $153=$150;
 var $154=HEAP32[((20016)>>2)];
 var $155=($153>>>0)<($154>>>0);
 if($155){label=48;break;}else{label=47;break;}
 case 47: 
 var $157=(($R_1+16)|0);
 HEAP32[(($157)>>2)]=$150;
 var $158=(($150+24)|0);
 HEAP32[(($158)>>2)]=$R_1;
 label=49;break;
 case 48: 
 _abort();
 throw "Reached an unreachable!";
 case 49: 
 var $_sum272=((($_sum232)+(20))|0);
 var $161=(($mem+$_sum272)|0);
 var $162=$161;
 var $163=HEAP32[(($162)>>2)];
 var $164=($163|0)==0;
 if($164){var $p_0=$25;var $psize_0=$26;label=56;break;}else{label=50;break;}
 case 50: 
 var $166=$163;
 var $167=HEAP32[((20016)>>2)];
 var $168=($166>>>0)<($167>>>0);
 if($168){label=52;break;}else{label=51;break;}
 case 51: 
 var $170=(($R_1+20)|0);
 HEAP32[(($170)>>2)]=$163;
 var $171=(($163+24)|0);
 HEAP32[(($171)>>2)]=$R_1;
 var $p_0=$25;var $psize_0=$26;label=56;break;
 case 52: 
 _abort();
 throw "Reached an unreachable!";
 case 53: 
 _abort();
 throw "Reached an unreachable!";
 case 54: 
 var $_sum233=((($14)-(4))|0);
 var $175=(($mem+$_sum233)|0);
 var $176=$175;
 var $177=HEAP32[(($176)>>2)];
 var $178=$177&3;
 var $179=($178|0)==3;
 if($179){label=55;break;}else{var $p_0=$25;var $psize_0=$26;label=56;break;}
 case 55: 
 HEAP32[((20008)>>2)]=$26;
 var $181=HEAP32[(($176)>>2)];
 var $182=$181&-2;
 HEAP32[(($176)>>2)]=$182;
 var $183=$26|1;
 var $_sum264=((($_sum232)+(4))|0);
 var $184=(($mem+$_sum264)|0);
 var $185=$184;
 HEAP32[(($185)>>2)]=$183;
 var $186=$15;
 HEAP32[(($186)>>2)]=$26;
 label=140;break;
 case 56: 
 var $psize_0;
 var $p_0;
 var $188=$p_0;
 var $189=($188>>>0)<($15>>>0);
 if($189){label=57;break;}else{label=139;break;}
 case 57: 
 var $_sum263=((($14)-(4))|0);
 var $191=(($mem+$_sum263)|0);
 var $192=$191;
 var $193=HEAP32[(($192)>>2)];
 var $194=$193&1;
 var $phitmp=($194|0)==0;
 if($phitmp){label=139;break;}else{label=58;break;}
 case 58: 
 var $196=$193&2;
 var $197=($196|0)==0;
 if($197){label=59;break;}else{label=112;break;}
 case 59: 
 var $199=HEAP32[((20024)>>2)];
 var $200=($16|0)==($199|0);
 if($200){label=60;break;}else{label=62;break;}
 case 60: 
 var $202=HEAP32[((20012)>>2)];
 var $203=((($202)+($psize_0))|0);
 HEAP32[((20012)>>2)]=$203;
 HEAP32[((20024)>>2)]=$p_0;
 var $204=$203|1;
 var $205=(($p_0+4)|0);
 HEAP32[(($205)>>2)]=$204;
 var $206=HEAP32[((20020)>>2)];
 var $207=($p_0|0)==($206|0);
 if($207){label=61;break;}else{label=140;break;}
 case 61: 
 HEAP32[((20020)>>2)]=0;
 HEAP32[((20008)>>2)]=0;
 label=140;break;
 case 62: 
 var $210=HEAP32[((20020)>>2)];
 var $211=($16|0)==($210|0);
 if($211){label=63;break;}else{label=64;break;}
 case 63: 
 var $213=HEAP32[((20008)>>2)];
 var $214=((($213)+($psize_0))|0);
 HEAP32[((20008)>>2)]=$214;
 HEAP32[((20020)>>2)]=$p_0;
 var $215=$214|1;
 var $216=(($p_0+4)|0);
 HEAP32[(($216)>>2)]=$215;
 var $217=(($188+$214)|0);
 var $218=$217;
 HEAP32[(($218)>>2)]=$214;
 label=140;break;
 case 64: 
 var $220=$193&-8;
 var $221=((($220)+($psize_0))|0);
 var $222=$193>>>3;
 var $223=($193>>>0)<256;
 if($223){label=65;break;}else{label=77;break;}
 case 65: 
 var $225=(($mem+$14)|0);
 var $226=$225;
 var $227=HEAP32[(($226)>>2)];
 var $_sum257258=$14|4;
 var $228=(($mem+$_sum257258)|0);
 var $229=$228;
 var $230=HEAP32[(($229)>>2)];
 var $231=$222<<1;
 var $232=((20040+($231<<2))|0);
 var $233=$232;
 var $234=($227|0)==($233|0);
 if($234){label=68;break;}else{label=66;break;}
 case 66: 
 var $236=$227;
 var $237=HEAP32[((20016)>>2)];
 var $238=($236>>>0)<($237>>>0);
 if($238){label=76;break;}else{label=67;break;}
 case 67: 
 var $240=(($227+12)|0);
 var $241=HEAP32[(($240)>>2)];
 var $242=($241|0)==($16|0);
 if($242){label=68;break;}else{label=76;break;}
 case 68: 
 var $243=($230|0)==($227|0);
 if($243){label=69;break;}else{label=70;break;}
 case 69: 
 var $245=1<<$222;
 var $246=$245^-1;
 var $247=HEAP32[((20000)>>2)];
 var $248=$247&$246;
 HEAP32[((20000)>>2)]=$248;
 label=110;break;
 case 70: 
 var $250=($230|0)==($233|0);
 if($250){label=71;break;}else{label=72;break;}
 case 71: 
 var $_pre305=(($230+8)|0);
 var $_pre_phi306=$_pre305;label=74;break;
 case 72: 
 var $252=$230;
 var $253=HEAP32[((20016)>>2)];
 var $254=($252>>>0)<($253>>>0);
 if($254){label=75;break;}else{label=73;break;}
 case 73: 
 var $256=(($230+8)|0);
 var $257=HEAP32[(($256)>>2)];
 var $258=($257|0)==($16|0);
 if($258){var $_pre_phi306=$256;label=74;break;}else{label=75;break;}
 case 74: 
 var $_pre_phi306;
 var $259=(($227+12)|0);
 HEAP32[(($259)>>2)]=$230;
 HEAP32[(($_pre_phi306)>>2)]=$227;
 label=110;break;
 case 75: 
 _abort();
 throw "Reached an unreachable!";
 case 76: 
 _abort();
 throw "Reached an unreachable!";
 case 77: 
 var $261=$15;
 var $_sum235=((($14)+(16))|0);
 var $262=(($mem+$_sum235)|0);
 var $263=$262;
 var $264=HEAP32[(($263)>>2)];
 var $_sum236237=$14|4;
 var $265=(($mem+$_sum236237)|0);
 var $266=$265;
 var $267=HEAP32[(($266)>>2)];
 var $268=($267|0)==($261|0);
 if($268){label=83;break;}else{label=78;break;}
 case 78: 
 var $270=(($mem+$14)|0);
 var $271=$270;
 var $272=HEAP32[(($271)>>2)];
 var $273=$272;
 var $274=HEAP32[((20016)>>2)];
 var $275=($273>>>0)<($274>>>0);
 if($275){label=82;break;}else{label=79;break;}
 case 79: 
 var $277=(($272+12)|0);
 var $278=HEAP32[(($277)>>2)];
 var $279=($278|0)==($261|0);
 if($279){label=80;break;}else{label=82;break;}
 case 80: 
 var $281=(($267+8)|0);
 var $282=HEAP32[(($281)>>2)];
 var $283=($282|0)==($261|0);
 if($283){label=81;break;}else{label=82;break;}
 case 81: 
 HEAP32[(($277)>>2)]=$267;
 HEAP32[(($281)>>2)]=$272;
 var $R7_1=$267;label=90;break;
 case 82: 
 _abort();
 throw "Reached an unreachable!";
 case 83: 
 var $_sum239=((($14)+(12))|0);
 var $286=(($mem+$_sum239)|0);
 var $287=$286;
 var $288=HEAP32[(($287)>>2)];
 var $289=($288|0)==0;
 if($289){label=84;break;}else{var $R7_0=$288;var $RP9_0=$287;label=85;break;}
 case 84: 
 var $_sum238=((($14)+(8))|0);
 var $291=(($mem+$_sum238)|0);
 var $292=$291;
 var $293=HEAP32[(($292)>>2)];
 var $294=($293|0)==0;
 if($294){var $R7_1=0;label=90;break;}else{var $R7_0=$293;var $RP9_0=$292;label=85;break;}
 case 85: 
 var $RP9_0;
 var $R7_0;
 var $295=(($R7_0+20)|0);
 var $296=HEAP32[(($295)>>2)];
 var $297=($296|0)==0;
 if($297){label=86;break;}else{var $R7_0=$296;var $RP9_0=$295;label=85;break;}
 case 86: 
 var $299=(($R7_0+16)|0);
 var $300=HEAP32[(($299)>>2)];
 var $301=($300|0)==0;
 if($301){label=87;break;}else{var $R7_0=$300;var $RP9_0=$299;label=85;break;}
 case 87: 
 var $303=$RP9_0;
 var $304=HEAP32[((20016)>>2)];
 var $305=($303>>>0)<($304>>>0);
 if($305){label=89;break;}else{label=88;break;}
 case 88: 
 HEAP32[(($RP9_0)>>2)]=0;
 var $R7_1=$R7_0;label=90;break;
 case 89: 
 _abort();
 throw "Reached an unreachable!";
 case 90: 
 var $R7_1;
 var $309=($264|0)==0;
 if($309){label=110;break;}else{label=91;break;}
 case 91: 
 var $_sum250=((($14)+(20))|0);
 var $311=(($mem+$_sum250)|0);
 var $312=$311;
 var $313=HEAP32[(($312)>>2)];
 var $314=((20304+($313<<2))|0);
 var $315=HEAP32[(($314)>>2)];
 var $316=($261|0)==($315|0);
 if($316){label=92;break;}else{label=94;break;}
 case 92: 
 HEAP32[(($314)>>2)]=$R7_1;
 var $cond298=($R7_1|0)==0;
 if($cond298){label=93;break;}else{label=100;break;}
 case 93: 
 var $318=1<<$313;
 var $319=$318^-1;
 var $320=HEAP32[((20004)>>2)];
 var $321=$320&$319;
 HEAP32[((20004)>>2)]=$321;
 label=110;break;
 case 94: 
 var $323=$264;
 var $324=HEAP32[((20016)>>2)];
 var $325=($323>>>0)<($324>>>0);
 if($325){label=98;break;}else{label=95;break;}
 case 95: 
 var $327=(($264+16)|0);
 var $328=HEAP32[(($327)>>2)];
 var $329=($328|0)==($261|0);
 if($329){label=96;break;}else{label=97;break;}
 case 96: 
 HEAP32[(($327)>>2)]=$R7_1;
 label=99;break;
 case 97: 
 var $332=(($264+20)|0);
 HEAP32[(($332)>>2)]=$R7_1;
 label=99;break;
 case 98: 
 _abort();
 throw "Reached an unreachable!";
 case 99: 
 var $335=($R7_1|0)==0;
 if($335){label=110;break;}else{label=100;break;}
 case 100: 
 var $337=$R7_1;
 var $338=HEAP32[((20016)>>2)];
 var $339=($337>>>0)<($338>>>0);
 if($339){label=109;break;}else{label=101;break;}
 case 101: 
 var $341=(($R7_1+24)|0);
 HEAP32[(($341)>>2)]=$264;
 var $_sum251=((($14)+(8))|0);
 var $342=(($mem+$_sum251)|0);
 var $343=$342;
 var $344=HEAP32[(($343)>>2)];
 var $345=($344|0)==0;
 if($345){label=105;break;}else{label=102;break;}
 case 102: 
 var $347=$344;
 var $348=HEAP32[((20016)>>2)];
 var $349=($347>>>0)<($348>>>0);
 if($349){label=104;break;}else{label=103;break;}
 case 103: 
 var $351=(($R7_1+16)|0);
 HEAP32[(($351)>>2)]=$344;
 var $352=(($344+24)|0);
 HEAP32[(($352)>>2)]=$R7_1;
 label=105;break;
 case 104: 
 _abort();
 throw "Reached an unreachable!";
 case 105: 
 var $_sum252=((($14)+(12))|0);
 var $355=(($mem+$_sum252)|0);
 var $356=$355;
 var $357=HEAP32[(($356)>>2)];
 var $358=($357|0)==0;
 if($358){label=110;break;}else{label=106;break;}
 case 106: 
 var $360=$357;
 var $361=HEAP32[((20016)>>2)];
 var $362=($360>>>0)<($361>>>0);
 if($362){label=108;break;}else{label=107;break;}
 case 107: 
 var $364=(($R7_1+20)|0);
 HEAP32[(($364)>>2)]=$357;
 var $365=(($357+24)|0);
 HEAP32[(($365)>>2)]=$R7_1;
 label=110;break;
 case 108: 
 _abort();
 throw "Reached an unreachable!";
 case 109: 
 _abort();
 throw "Reached an unreachable!";
 case 110: 
 var $368=$221|1;
 var $369=(($p_0+4)|0);
 HEAP32[(($369)>>2)]=$368;
 var $370=(($188+$221)|0);
 var $371=$370;
 HEAP32[(($371)>>2)]=$221;
 var $372=HEAP32[((20020)>>2)];
 var $373=($p_0|0)==($372|0);
 if($373){label=111;break;}else{var $psize_1=$221;label=113;break;}
 case 111: 
 HEAP32[((20008)>>2)]=$221;
 label=140;break;
 case 112: 
 var $376=$193&-2;
 HEAP32[(($192)>>2)]=$376;
 var $377=$psize_0|1;
 var $378=(($p_0+4)|0);
 HEAP32[(($378)>>2)]=$377;
 var $379=(($188+$psize_0)|0);
 var $380=$379;
 HEAP32[(($380)>>2)]=$psize_0;
 var $psize_1=$psize_0;label=113;break;
 case 113: 
 var $psize_1;
 var $382=$psize_1>>>3;
 var $383=($psize_1>>>0)<256;
 if($383){label=114;break;}else{label=119;break;}
 case 114: 
 var $385=$382<<1;
 var $386=((20040+($385<<2))|0);
 var $387=$386;
 var $388=HEAP32[((20000)>>2)];
 var $389=1<<$382;
 var $390=$388&$389;
 var $391=($390|0)==0;
 if($391){label=115;break;}else{label=116;break;}
 case 115: 
 var $393=$388|$389;
 HEAP32[((20000)>>2)]=$393;
 var $_sum248_pre=((($385)+(2))|0);
 var $_pre=((20040+($_sum248_pre<<2))|0);
 var $F16_0=$387;var $_pre_phi=$_pre;label=118;break;
 case 116: 
 var $_sum249=((($385)+(2))|0);
 var $395=((20040+($_sum249<<2))|0);
 var $396=HEAP32[(($395)>>2)];
 var $397=$396;
 var $398=HEAP32[((20016)>>2)];
 var $399=($397>>>0)<($398>>>0);
 if($399){label=117;break;}else{var $F16_0=$396;var $_pre_phi=$395;label=118;break;}
 case 117: 
 _abort();
 throw "Reached an unreachable!";
 case 118: 
 var $_pre_phi;
 var $F16_0;
 HEAP32[(($_pre_phi)>>2)]=$p_0;
 var $402=(($F16_0+12)|0);
 HEAP32[(($402)>>2)]=$p_0;
 var $403=(($p_0+8)|0);
 HEAP32[(($403)>>2)]=$F16_0;
 var $404=(($p_0+12)|0);
 HEAP32[(($404)>>2)]=$387;
 label=140;break;
 case 119: 
 var $406=$p_0;
 var $407=$psize_1>>>8;
 var $408=($407|0)==0;
 if($408){var $I18_0=0;label=122;break;}else{label=120;break;}
 case 120: 
 var $410=($psize_1>>>0)>16777215;
 if($410){var $I18_0=31;label=122;break;}else{label=121;break;}
 case 121: 
 var $412=((($407)+(1048320))|0);
 var $413=$412>>>16;
 var $414=$413&8;
 var $415=$407<<$414;
 var $416=((($415)+(520192))|0);
 var $417=$416>>>16;
 var $418=$417&4;
 var $419=$418|$414;
 var $420=$415<<$418;
 var $421=((($420)+(245760))|0);
 var $422=$421>>>16;
 var $423=$422&2;
 var $424=$419|$423;
 var $425=(((14)-($424))|0);
 var $426=$420<<$423;
 var $427=$426>>>15;
 var $428=((($425)+($427))|0);
 var $429=$428<<1;
 var $430=((($428)+(7))|0);
 var $431=$psize_1>>>($430>>>0);
 var $432=$431&1;
 var $433=$432|$429;
 var $I18_0=$433;label=122;break;
 case 122: 
 var $I18_0;
 var $435=((20304+($I18_0<<2))|0);
 var $436=(($p_0+28)|0);
 var $I18_0_c=$I18_0;
 HEAP32[(($436)>>2)]=$I18_0_c;
 var $437=(($p_0+20)|0);
 HEAP32[(($437)>>2)]=0;
 var $438=(($p_0+16)|0);
 HEAP32[(($438)>>2)]=0;
 var $439=HEAP32[((20004)>>2)];
 var $440=1<<$I18_0;
 var $441=$439&$440;
 var $442=($441|0)==0;
 if($442){label=123;break;}else{label=124;break;}
 case 123: 
 var $444=$439|$440;
 HEAP32[((20004)>>2)]=$444;
 HEAP32[(($435)>>2)]=$406;
 var $445=(($p_0+24)|0);
 var $_c=$435;
 HEAP32[(($445)>>2)]=$_c;
 var $446=(($p_0+12)|0);
 HEAP32[(($446)>>2)]=$p_0;
 var $447=(($p_0+8)|0);
 HEAP32[(($447)>>2)]=$p_0;
 label=136;break;
 case 124: 
 var $449=HEAP32[(($435)>>2)];
 var $450=($I18_0|0)==31;
 if($450){var $455=0;label=126;break;}else{label=125;break;}
 case 125: 
 var $452=$I18_0>>>1;
 var $453=(((25)-($452))|0);
 var $455=$453;label=126;break;
 case 126: 
 var $455;
 var $456=$psize_1<<$455;
 var $K19_0=$456;var $T_0=$449;label=127;break;
 case 127: 
 var $T_0;
 var $K19_0;
 var $458=(($T_0+4)|0);
 var $459=HEAP32[(($458)>>2)];
 var $460=$459&-8;
 var $461=($460|0)==($psize_1|0);
 if($461){label=132;break;}else{label=128;break;}
 case 128: 
 var $463=$K19_0>>>31;
 var $464=(($T_0+16+($463<<2))|0);
 var $465=HEAP32[(($464)>>2)];
 var $466=($465|0)==0;
 var $467=$K19_0<<1;
 if($466){label=129;break;}else{var $K19_0=$467;var $T_0=$465;label=127;break;}
 case 129: 
 var $469=$464;
 var $470=HEAP32[((20016)>>2)];
 var $471=($469>>>0)<($470>>>0);
 if($471){label=131;break;}else{label=130;break;}
 case 130: 
 HEAP32[(($464)>>2)]=$406;
 var $473=(($p_0+24)|0);
 var $T_0_c245=$T_0;
 HEAP32[(($473)>>2)]=$T_0_c245;
 var $474=(($p_0+12)|0);
 HEAP32[(($474)>>2)]=$p_0;
 var $475=(($p_0+8)|0);
 HEAP32[(($475)>>2)]=$p_0;
 label=136;break;
 case 131: 
 _abort();
 throw "Reached an unreachable!";
 case 132: 
 var $478=(($T_0+8)|0);
 var $479=HEAP32[(($478)>>2)];
 var $480=$T_0;
 var $481=HEAP32[((20016)>>2)];
 var $482=($480>>>0)<($481>>>0);
 if($482){label=135;break;}else{label=133;break;}
 case 133: 
 var $484=$479;
 var $485=($484>>>0)<($481>>>0);
 if($485){label=135;break;}else{label=134;break;}
 case 134: 
 var $487=(($479+12)|0);
 HEAP32[(($487)>>2)]=$406;
 HEAP32[(($478)>>2)]=$406;
 var $488=(($p_0+8)|0);
 var $_c244=$479;
 HEAP32[(($488)>>2)]=$_c244;
 var $489=(($p_0+12)|0);
 var $T_0_c=$T_0;
 HEAP32[(($489)>>2)]=$T_0_c;
 var $490=(($p_0+24)|0);
 HEAP32[(($490)>>2)]=0;
 label=136;break;
 case 135: 
 _abort();
 throw "Reached an unreachable!";
 case 136: 
 var $492=HEAP32[((20032)>>2)];
 var $493=((($492)-(1))|0);
 HEAP32[((20032)>>2)]=$493;
 var $494=($493|0)==0;
 if($494){var $sp_0_in_i=20456;label=137;break;}else{label=140;break;}
 case 137: 
 var $sp_0_in_i;
 var $sp_0_i=HEAP32[(($sp_0_in_i)>>2)];
 var $495=($sp_0_i|0)==0;
 var $496=(($sp_0_i+8)|0);
 if($495){label=138;break;}else{var $sp_0_in_i=$496;label=137;break;}
 case 138: 
 HEAP32[((20032)>>2)]=-1;
 label=140;break;
 case 139: 
 _abort();
 throw "Reached an unreachable!";
 case 140: 
 return;
  default: assert(0, "bad label: " + label);
 }

}
Module["_free"] = _free;

function _realloc($oldmem,$bytes){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($oldmem|0)==0;
 if($1){label=2;break;}else{label=3;break;}
 case 2: 
 var $3=_malloc($bytes);
 var $mem_0=$3;label=11;break;
 case 3: 
 var $5=($bytes>>>0)>4294967231;
 if($5){label=4;break;}else{label=5;break;}
 case 4: 
 var $7=___errno_location();
 HEAP32[(($7)>>2)]=12;
 var $mem_0=0;label=11;break;
 case 5: 
 var $9=($bytes>>>0)<11;
 if($9){var $14=16;label=7;break;}else{label=6;break;}
 case 6: 
 var $11=((($bytes)+(11))|0);
 var $12=$11&-8;
 var $14=$12;label=7;break;
 case 7: 
 var $14;
 var $15=((($oldmem)-(8))|0);
 var $16=$15;
 var $17=_try_realloc_chunk($16,$14);
 var $18=($17|0)==0;
 if($18){label=9;break;}else{label=8;break;}
 case 8: 
 var $20=(($17+8)|0);
 var $21=$20;
 var $mem_0=$21;label=11;break;
 case 9: 
 var $23=_malloc($bytes);
 var $24=($23|0)==0;
 if($24){var $mem_0=0;label=11;break;}else{label=10;break;}
 case 10: 
 var $26=((($oldmem)-(4))|0);
 var $27=$26;
 var $28=HEAP32[(($27)>>2)];
 var $29=$28&-8;
 var $30=$28&3;
 var $31=($30|0)==0;
 var $32=($31?8:4);
 var $33=((($29)-($32))|0);
 var $34=($33>>>0)<($bytes>>>0);
 var $35=($34?$33:$bytes);
 assert($35 % 1 === 0);(_memcpy($23, $oldmem, $35)|0);
 _free($oldmem);
 var $mem_0=$23;label=11;break;
 case 11: 
 var $mem_0;
 return $mem_0;
  default: assert(0, "bad label: " + label);
 }

}
Module["_realloc"] = _realloc;

function _try_realloc_chunk($p,$nb){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($p+4)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=$2&-8;
 var $4=$p;
 var $5=(($4+$3)|0);
 var $6=$5;
 var $7=HEAP32[((20016)>>2)];
 var $8=($4>>>0)<($7>>>0);
 if($8){label=72;break;}else{label=2;break;}
 case 2: 
 var $10=$2&3;
 var $11=($10|0)!=1;
 var $12=($4>>>0)<($5>>>0);
 var $or_cond=$11&$12;
 if($or_cond){label=3;break;}else{label=72;break;}
 case 3: 
 var $_sum3334=$3|4;
 var $14=(($4+$_sum3334)|0);
 var $15=$14;
 var $16=HEAP32[(($15)>>2)];
 var $17=$16&1;
 var $phitmp=($17|0)==0;
 if($phitmp){label=72;break;}else{label=4;break;}
 case 4: 
 var $19=($10|0)==0;
 if($19){label=5;break;}else{label=9;break;}
 case 5: 
 var $21=($nb>>>0)<256;
 if($21){var $newp_0=0;label=73;break;}else{label=6;break;}
 case 6: 
 var $23=((($nb)+(4))|0);
 var $24=($3>>>0)<($23>>>0);
 if($24){label=8;break;}else{label=7;break;}
 case 7: 
 var $26=((($3)-($nb))|0);
 var $27=HEAP32[((19312)>>2)];
 var $28=$27<<1;
 var $29=($26>>>0)>($28>>>0);
 if($29){label=8;break;}else{var $newp_0=$p;label=73;break;}
 case 8: 
 var $newp_0=0;label=73;break;
 case 9: 
 var $32=($3>>>0)<($nb>>>0);
 if($32){label=12;break;}else{label=10;break;}
 case 10: 
 var $34=((($3)-($nb))|0);
 var $35=($34>>>0)>15;
 if($35){label=11;break;}else{var $newp_0=$p;label=73;break;}
 case 11: 
 var $37=(($4+$nb)|0);
 var $38=$37;
 var $39=$2&1;
 var $40=$39|$nb;
 var $41=$40|2;
 HEAP32[(($1)>>2)]=$41;
 var $_sum29=((($nb)+(4))|0);
 var $42=(($4+$_sum29)|0);
 var $43=$42;
 var $44=$34|3;
 HEAP32[(($43)>>2)]=$44;
 var $45=HEAP32[(($15)>>2)];
 var $46=$45|1;
 HEAP32[(($15)>>2)]=$46;
 _dispose_chunk($38,$34);
 var $newp_0=$p;label=73;break;
 case 12: 
 var $48=HEAP32[((20024)>>2)];
 var $49=($6|0)==($48|0);
 if($49){label=13;break;}else{label=15;break;}
 case 13: 
 var $51=HEAP32[((20012)>>2)];
 var $52=((($51)+($3))|0);
 var $53=($52>>>0)>($nb>>>0);
 if($53){label=14;break;}else{var $newp_0=0;label=73;break;}
 case 14: 
 var $55=((($52)-($nb))|0);
 var $56=(($4+$nb)|0);
 var $57=$56;
 var $58=$2&1;
 var $59=$58|$nb;
 var $60=$59|2;
 HEAP32[(($1)>>2)]=$60;
 var $_sum28=((($nb)+(4))|0);
 var $61=(($4+$_sum28)|0);
 var $62=$61;
 var $63=$55|1;
 HEAP32[(($62)>>2)]=$63;
 HEAP32[((20024)>>2)]=$57;
 HEAP32[((20012)>>2)]=$55;
 var $newp_0=$p;label=73;break;
 case 15: 
 var $65=HEAP32[((20020)>>2)];
 var $66=($6|0)==($65|0);
 if($66){label=16;break;}else{label=21;break;}
 case 16: 
 var $68=HEAP32[((20008)>>2)];
 var $69=((($68)+($3))|0);
 var $70=($69>>>0)<($nb>>>0);
 if($70){var $newp_0=0;label=73;break;}else{label=17;break;}
 case 17: 
 var $72=((($69)-($nb))|0);
 var $73=($72>>>0)>15;
 if($73){label=18;break;}else{label=19;break;}
 case 18: 
 var $75=(($4+$nb)|0);
 var $76=$75;
 var $77=(($4+$69)|0);
 var $78=$2&1;
 var $79=$78|$nb;
 var $80=$79|2;
 HEAP32[(($1)>>2)]=$80;
 var $_sum25=((($nb)+(4))|0);
 var $81=(($4+$_sum25)|0);
 var $82=$81;
 var $83=$72|1;
 HEAP32[(($82)>>2)]=$83;
 var $84=$77;
 HEAP32[(($84)>>2)]=$72;
 var $_sum26=((($69)+(4))|0);
 var $85=(($4+$_sum26)|0);
 var $86=$85;
 var $87=HEAP32[(($86)>>2)];
 var $88=$87&-2;
 HEAP32[(($86)>>2)]=$88;
 var $storemerge=$76;var $storemerge27=$72;label=20;break;
 case 19: 
 var $90=$2&1;
 var $91=$90|$69;
 var $92=$91|2;
 HEAP32[(($1)>>2)]=$92;
 var $_sum23=((($69)+(4))|0);
 var $93=(($4+$_sum23)|0);
 var $94=$93;
 var $95=HEAP32[(($94)>>2)];
 var $96=$95|1;
 HEAP32[(($94)>>2)]=$96;
 var $storemerge=0;var $storemerge27=0;label=20;break;
 case 20: 
 var $storemerge27;
 var $storemerge;
 HEAP32[((20008)>>2)]=$storemerge27;
 HEAP32[((20020)>>2)]=$storemerge;
 var $newp_0=$p;label=73;break;
 case 21: 
 var $99=$16&2;
 var $100=($99|0)==0;
 if($100){label=22;break;}else{var $newp_0=0;label=73;break;}
 case 22: 
 var $102=$16&-8;
 var $103=((($102)+($3))|0);
 var $104=($103>>>0)<($nb>>>0);
 if($104){var $newp_0=0;label=73;break;}else{label=23;break;}
 case 23: 
 var $106=((($103)-($nb))|0);
 var $107=$16>>>3;
 var $108=($16>>>0)<256;
 if($108){label=24;break;}else{label=36;break;}
 case 24: 
 var $_sum17=((($3)+(8))|0);
 var $110=(($4+$_sum17)|0);
 var $111=$110;
 var $112=HEAP32[(($111)>>2)];
 var $_sum18=((($3)+(12))|0);
 var $113=(($4+$_sum18)|0);
 var $114=$113;
 var $115=HEAP32[(($114)>>2)];
 var $116=$107<<1;
 var $117=((20040+($116<<2))|0);
 var $118=$117;
 var $119=($112|0)==($118|0);
 if($119){label=27;break;}else{label=25;break;}
 case 25: 
 var $121=$112;
 var $122=($121>>>0)<($7>>>0);
 if($122){label=35;break;}else{label=26;break;}
 case 26: 
 var $124=(($112+12)|0);
 var $125=HEAP32[(($124)>>2)];
 var $126=($125|0)==($6|0);
 if($126){label=27;break;}else{label=35;break;}
 case 27: 
 var $127=($115|0)==($112|0);
 if($127){label=28;break;}else{label=29;break;}
 case 28: 
 var $129=1<<$107;
 var $130=$129^-1;
 var $131=HEAP32[((20000)>>2)];
 var $132=$131&$130;
 HEAP32[((20000)>>2)]=$132;
 label=69;break;
 case 29: 
 var $134=($115|0)==($118|0);
 if($134){label=30;break;}else{label=31;break;}
 case 30: 
 var $_pre=(($115+8)|0);
 var $_pre_phi=$_pre;label=33;break;
 case 31: 
 var $136=$115;
 var $137=($136>>>0)<($7>>>0);
 if($137){label=34;break;}else{label=32;break;}
 case 32: 
 var $139=(($115+8)|0);
 var $140=HEAP32[(($139)>>2)];
 var $141=($140|0)==($6|0);
 if($141){var $_pre_phi=$139;label=33;break;}else{label=34;break;}
 case 33: 
 var $_pre_phi;
 var $142=(($112+12)|0);
 HEAP32[(($142)>>2)]=$115;
 HEAP32[(($_pre_phi)>>2)]=$112;
 label=69;break;
 case 34: 
 _abort();
 throw "Reached an unreachable!";
 case 35: 
 _abort();
 throw "Reached an unreachable!";
 case 36: 
 var $144=$5;
 var $_sum=((($3)+(24))|0);
 var $145=(($4+$_sum)|0);
 var $146=$145;
 var $147=HEAP32[(($146)>>2)];
 var $_sum2=((($3)+(12))|0);
 var $148=(($4+$_sum2)|0);
 var $149=$148;
 var $150=HEAP32[(($149)>>2)];
 var $151=($150|0)==($144|0);
 if($151){label=42;break;}else{label=37;break;}
 case 37: 
 var $_sum14=((($3)+(8))|0);
 var $153=(($4+$_sum14)|0);
 var $154=$153;
 var $155=HEAP32[(($154)>>2)];
 var $156=$155;
 var $157=($156>>>0)<($7>>>0);
 if($157){label=41;break;}else{label=38;break;}
 case 38: 
 var $159=(($155+12)|0);
 var $160=HEAP32[(($159)>>2)];
 var $161=($160|0)==($144|0);
 if($161){label=39;break;}else{label=41;break;}
 case 39: 
 var $163=(($150+8)|0);
 var $164=HEAP32[(($163)>>2)];
 var $165=($164|0)==($144|0);
 if($165){label=40;break;}else{label=41;break;}
 case 40: 
 HEAP32[(($159)>>2)]=$150;
 HEAP32[(($163)>>2)]=$155;
 var $R_1=$150;label=49;break;
 case 41: 
 _abort();
 throw "Reached an unreachable!";
 case 42: 
 var $_sum4=((($3)+(20))|0);
 var $168=(($4+$_sum4)|0);
 var $169=$168;
 var $170=HEAP32[(($169)>>2)];
 var $171=($170|0)==0;
 if($171){label=43;break;}else{var $R_0=$170;var $RP_0=$169;label=44;break;}
 case 43: 
 var $_sum3=((($3)+(16))|0);
 var $173=(($4+$_sum3)|0);
 var $174=$173;
 var $175=HEAP32[(($174)>>2)];
 var $176=($175|0)==0;
 if($176){var $R_1=0;label=49;break;}else{var $R_0=$175;var $RP_0=$174;label=44;break;}
 case 44: 
 var $RP_0;
 var $R_0;
 var $177=(($R_0+20)|0);
 var $178=HEAP32[(($177)>>2)];
 var $179=($178|0)==0;
 if($179){label=45;break;}else{var $R_0=$178;var $RP_0=$177;label=44;break;}
 case 45: 
 var $181=(($R_0+16)|0);
 var $182=HEAP32[(($181)>>2)];
 var $183=($182|0)==0;
 if($183){label=46;break;}else{var $R_0=$182;var $RP_0=$181;label=44;break;}
 case 46: 
 var $185=$RP_0;
 var $186=($185>>>0)<($7>>>0);
 if($186){label=48;break;}else{label=47;break;}
 case 47: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=49;break;
 case 48: 
 _abort();
 throw "Reached an unreachable!";
 case 49: 
 var $R_1;
 var $190=($147|0)==0;
 if($190){label=69;break;}else{label=50;break;}
 case 50: 
 var $_sum11=((($3)+(28))|0);
 var $192=(($4+$_sum11)|0);
 var $193=$192;
 var $194=HEAP32[(($193)>>2)];
 var $195=((20304+($194<<2))|0);
 var $196=HEAP32[(($195)>>2)];
 var $197=($144|0)==($196|0);
 if($197){label=51;break;}else{label=53;break;}
 case 51: 
 HEAP32[(($195)>>2)]=$R_1;
 var $cond=($R_1|0)==0;
 if($cond){label=52;break;}else{label=59;break;}
 case 52: 
 var $199=1<<$194;
 var $200=$199^-1;
 var $201=HEAP32[((20004)>>2)];
 var $202=$201&$200;
 HEAP32[((20004)>>2)]=$202;
 label=69;break;
 case 53: 
 var $204=$147;
 var $205=HEAP32[((20016)>>2)];
 var $206=($204>>>0)<($205>>>0);
 if($206){label=57;break;}else{label=54;break;}
 case 54: 
 var $208=(($147+16)|0);
 var $209=HEAP32[(($208)>>2)];
 var $210=($209|0)==($144|0);
 if($210){label=55;break;}else{label=56;break;}
 case 55: 
 HEAP32[(($208)>>2)]=$R_1;
 label=58;break;
 case 56: 
 var $213=(($147+20)|0);
 HEAP32[(($213)>>2)]=$R_1;
 label=58;break;
 case 57: 
 _abort();
 throw "Reached an unreachable!";
 case 58: 
 var $216=($R_1|0)==0;
 if($216){label=69;break;}else{label=59;break;}
 case 59: 
 var $218=$R_1;
 var $219=HEAP32[((20016)>>2)];
 var $220=($218>>>0)<($219>>>0);
 if($220){label=68;break;}else{label=60;break;}
 case 60: 
 var $222=(($R_1+24)|0);
 HEAP32[(($222)>>2)]=$147;
 var $_sum12=((($3)+(16))|0);
 var $223=(($4+$_sum12)|0);
 var $224=$223;
 var $225=HEAP32[(($224)>>2)];
 var $226=($225|0)==0;
 if($226){label=64;break;}else{label=61;break;}
 case 61: 
 var $228=$225;
 var $229=HEAP32[((20016)>>2)];
 var $230=($228>>>0)<($229>>>0);
 if($230){label=63;break;}else{label=62;break;}
 case 62: 
 var $232=(($R_1+16)|0);
 HEAP32[(($232)>>2)]=$225;
 var $233=(($225+24)|0);
 HEAP32[(($233)>>2)]=$R_1;
 label=64;break;
 case 63: 
 _abort();
 throw "Reached an unreachable!";
 case 64: 
 var $_sum13=((($3)+(20))|0);
 var $236=(($4+$_sum13)|0);
 var $237=$236;
 var $238=HEAP32[(($237)>>2)];
 var $239=($238|0)==0;
 if($239){label=69;break;}else{label=65;break;}
 case 65: 
 var $241=$238;
 var $242=HEAP32[((20016)>>2)];
 var $243=($241>>>0)<($242>>>0);
 if($243){label=67;break;}else{label=66;break;}
 case 66: 
 var $245=(($R_1+20)|0);
 HEAP32[(($245)>>2)]=$238;
 var $246=(($238+24)|0);
 HEAP32[(($246)>>2)]=$R_1;
 label=69;break;
 case 67: 
 _abort();
 throw "Reached an unreachable!";
 case 68: 
 _abort();
 throw "Reached an unreachable!";
 case 69: 
 var $250=($106>>>0)<16;
 if($250){label=70;break;}else{label=71;break;}
 case 70: 
 var $252=HEAP32[(($1)>>2)];
 var $253=$252&1;
 var $254=$103|$253;
 var $255=$254|2;
 HEAP32[(($1)>>2)]=$255;
 var $_sum910=$103|4;
 var $256=(($4+$_sum910)|0);
 var $257=$256;
 var $258=HEAP32[(($257)>>2)];
 var $259=$258|1;
 HEAP32[(($257)>>2)]=$259;
 var $newp_0=$p;label=73;break;
 case 71: 
 var $261=(($4+$nb)|0);
 var $262=$261;
 var $263=HEAP32[(($1)>>2)];
 var $264=$263&1;
 var $265=$264|$nb;
 var $266=$265|2;
 HEAP32[(($1)>>2)]=$266;
 var $_sum5=((($nb)+(4))|0);
 var $267=(($4+$_sum5)|0);
 var $268=$267;
 var $269=$106|3;
 HEAP32[(($268)>>2)]=$269;
 var $_sum78=$103|4;
 var $270=(($4+$_sum78)|0);
 var $271=$270;
 var $272=HEAP32[(($271)>>2)];
 var $273=$272|1;
 HEAP32[(($271)>>2)]=$273;
 _dispose_chunk($262,$106);
 var $newp_0=$p;label=73;break;
 case 72: 
 _abort();
 throw "Reached an unreachable!";
 case 73: 
 var $newp_0;
 return $newp_0;
  default: assert(0, "bad label: " + label);
 }

}


function _dispose_chunk($p,$psize){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=$p;
 var $2=(($1+$psize)|0);
 var $3=$2;
 var $4=(($p+4)|0);
 var $5=HEAP32[(($4)>>2)];
 var $6=$5&1;
 var $7=($6|0)==0;
 if($7){label=2;break;}else{var $_0=$p;var $_0277=$psize;label=54;break;}
 case 2: 
 var $9=(($p)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=$5&3;
 var $12=($11|0)==0;
 if($12){label=134;break;}else{label=3;break;}
 case 3: 
 var $14=(((-$10))|0);
 var $15=(($1+$14)|0);
 var $16=$15;
 var $17=((($10)+($psize))|0);
 var $18=HEAP32[((20016)>>2)];
 var $19=($15>>>0)<($18>>>0);
 if($19){label=53;break;}else{label=4;break;}
 case 4: 
 var $21=HEAP32[((20020)>>2)];
 var $22=($16|0)==($21|0);
 if($22){label=51;break;}else{label=5;break;}
 case 5: 
 var $24=$10>>>3;
 var $25=($10>>>0)<256;
 if($25){label=6;break;}else{label=18;break;}
 case 6: 
 var $_sum35=(((8)-($10))|0);
 var $27=(($1+$_sum35)|0);
 var $28=$27;
 var $29=HEAP32[(($28)>>2)];
 var $_sum36=(((12)-($10))|0);
 var $30=(($1+$_sum36)|0);
 var $31=$30;
 var $32=HEAP32[(($31)>>2)];
 var $33=$24<<1;
 var $34=((20040+($33<<2))|0);
 var $35=$34;
 var $36=($29|0)==($35|0);
 if($36){label=9;break;}else{label=7;break;}
 case 7: 
 var $38=$29;
 var $39=($38>>>0)<($18>>>0);
 if($39){label=17;break;}else{label=8;break;}
 case 8: 
 var $41=(($29+12)|0);
 var $42=HEAP32[(($41)>>2)];
 var $43=($42|0)==($16|0);
 if($43){label=9;break;}else{label=17;break;}
 case 9: 
 var $44=($32|0)==($29|0);
 if($44){label=10;break;}else{label=11;break;}
 case 10: 
 var $46=1<<$24;
 var $47=$46^-1;
 var $48=HEAP32[((20000)>>2)];
 var $49=$48&$47;
 HEAP32[((20000)>>2)]=$49;
 var $_0=$16;var $_0277=$17;label=54;break;
 case 11: 
 var $51=($32|0)==($35|0);
 if($51){label=12;break;}else{label=13;break;}
 case 12: 
 var $_pre65=(($32+8)|0);
 var $_pre_phi66=$_pre65;label=15;break;
 case 13: 
 var $53=$32;
 var $54=($53>>>0)<($18>>>0);
 if($54){label=16;break;}else{label=14;break;}
 case 14: 
 var $56=(($32+8)|0);
 var $57=HEAP32[(($56)>>2)];
 var $58=($57|0)==($16|0);
 if($58){var $_pre_phi66=$56;label=15;break;}else{label=16;break;}
 case 15: 
 var $_pre_phi66;
 var $59=(($29+12)|0);
 HEAP32[(($59)>>2)]=$32;
 HEAP32[(($_pre_phi66)>>2)]=$29;
 var $_0=$16;var $_0277=$17;label=54;break;
 case 16: 
 _abort();
 throw "Reached an unreachable!";
 case 17: 
 _abort();
 throw "Reached an unreachable!";
 case 18: 
 var $61=$15;
 var $_sum26=(((24)-($10))|0);
 var $62=(($1+$_sum26)|0);
 var $63=$62;
 var $64=HEAP32[(($63)>>2)];
 var $_sum27=(((12)-($10))|0);
 var $65=(($1+$_sum27)|0);
 var $66=$65;
 var $67=HEAP32[(($66)>>2)];
 var $68=($67|0)==($61|0);
 if($68){label=24;break;}else{label=19;break;}
 case 19: 
 var $_sum33=(((8)-($10))|0);
 var $70=(($1+$_sum33)|0);
 var $71=$70;
 var $72=HEAP32[(($71)>>2)];
 var $73=$72;
 var $74=($73>>>0)<($18>>>0);
 if($74){label=23;break;}else{label=20;break;}
 case 20: 
 var $76=(($72+12)|0);
 var $77=HEAP32[(($76)>>2)];
 var $78=($77|0)==($61|0);
 if($78){label=21;break;}else{label=23;break;}
 case 21: 
 var $80=(($67+8)|0);
 var $81=HEAP32[(($80)>>2)];
 var $82=($81|0)==($61|0);
 if($82){label=22;break;}else{label=23;break;}
 case 22: 
 HEAP32[(($76)>>2)]=$67;
 HEAP32[(($80)>>2)]=$72;
 var $R_1=$67;label=31;break;
 case 23: 
 _abort();
 throw "Reached an unreachable!";
 case 24: 
 var $_sum28=(((16)-($10))|0);
 var $_sum29=((($_sum28)+(4))|0);
 var $85=(($1+$_sum29)|0);
 var $86=$85;
 var $87=HEAP32[(($86)>>2)];
 var $88=($87|0)==0;
 if($88){label=25;break;}else{var $R_0=$87;var $RP_0=$86;label=26;break;}
 case 25: 
 var $90=(($1+$_sum28)|0);
 var $91=$90;
 var $92=HEAP32[(($91)>>2)];
 var $93=($92|0)==0;
 if($93){var $R_1=0;label=31;break;}else{var $R_0=$92;var $RP_0=$91;label=26;break;}
 case 26: 
 var $RP_0;
 var $R_0;
 var $94=(($R_0+20)|0);
 var $95=HEAP32[(($94)>>2)];
 var $96=($95|0)==0;
 if($96){label=27;break;}else{var $R_0=$95;var $RP_0=$94;label=26;break;}
 case 27: 
 var $98=(($R_0+16)|0);
 var $99=HEAP32[(($98)>>2)];
 var $100=($99|0)==0;
 if($100){label=28;break;}else{var $R_0=$99;var $RP_0=$98;label=26;break;}
 case 28: 
 var $102=$RP_0;
 var $103=($102>>>0)<($18>>>0);
 if($103){label=30;break;}else{label=29;break;}
 case 29: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=31;break;
 case 30: 
 _abort();
 throw "Reached an unreachable!";
 case 31: 
 var $R_1;
 var $107=($64|0)==0;
 if($107){var $_0=$16;var $_0277=$17;label=54;break;}else{label=32;break;}
 case 32: 
 var $_sum30=(((28)-($10))|0);
 var $109=(($1+$_sum30)|0);
 var $110=$109;
 var $111=HEAP32[(($110)>>2)];
 var $112=((20304+($111<<2))|0);
 var $113=HEAP32[(($112)>>2)];
 var $114=($61|0)==($113|0);
 if($114){label=33;break;}else{label=35;break;}
 case 33: 
 HEAP32[(($112)>>2)]=$R_1;
 var $cond=($R_1|0)==0;
 if($cond){label=34;break;}else{label=41;break;}
 case 34: 
 var $116=1<<$111;
 var $117=$116^-1;
 var $118=HEAP32[((20004)>>2)];
 var $119=$118&$117;
 HEAP32[((20004)>>2)]=$119;
 var $_0=$16;var $_0277=$17;label=54;break;
 case 35: 
 var $121=$64;
 var $122=HEAP32[((20016)>>2)];
 var $123=($121>>>0)<($122>>>0);
 if($123){label=39;break;}else{label=36;break;}
 case 36: 
 var $125=(($64+16)|0);
 var $126=HEAP32[(($125)>>2)];
 var $127=($126|0)==($61|0);
 if($127){label=37;break;}else{label=38;break;}
 case 37: 
 HEAP32[(($125)>>2)]=$R_1;
 label=40;break;
 case 38: 
 var $130=(($64+20)|0);
 HEAP32[(($130)>>2)]=$R_1;
 label=40;break;
 case 39: 
 _abort();
 throw "Reached an unreachable!";
 case 40: 
 var $133=($R_1|0)==0;
 if($133){var $_0=$16;var $_0277=$17;label=54;break;}else{label=41;break;}
 case 41: 
 var $135=$R_1;
 var $136=HEAP32[((20016)>>2)];
 var $137=($135>>>0)<($136>>>0);
 if($137){label=50;break;}else{label=42;break;}
 case 42: 
 var $139=(($R_1+24)|0);
 HEAP32[(($139)>>2)]=$64;
 var $_sum31=(((16)-($10))|0);
 var $140=(($1+$_sum31)|0);
 var $141=$140;
 var $142=HEAP32[(($141)>>2)];
 var $143=($142|0)==0;
 if($143){label=46;break;}else{label=43;break;}
 case 43: 
 var $145=$142;
 var $146=HEAP32[((20016)>>2)];
 var $147=($145>>>0)<($146>>>0);
 if($147){label=45;break;}else{label=44;break;}
 case 44: 
 var $149=(($R_1+16)|0);
 HEAP32[(($149)>>2)]=$142;
 var $150=(($142+24)|0);
 HEAP32[(($150)>>2)]=$R_1;
 label=46;break;
 case 45: 
 _abort();
 throw "Reached an unreachable!";
 case 46: 
 var $_sum32=((($_sum31)+(4))|0);
 var $153=(($1+$_sum32)|0);
 var $154=$153;
 var $155=HEAP32[(($154)>>2)];
 var $156=($155|0)==0;
 if($156){var $_0=$16;var $_0277=$17;label=54;break;}else{label=47;break;}
 case 47: 
 var $158=$155;
 var $159=HEAP32[((20016)>>2)];
 var $160=($158>>>0)<($159>>>0);
 if($160){label=49;break;}else{label=48;break;}
 case 48: 
 var $162=(($R_1+20)|0);
 HEAP32[(($162)>>2)]=$155;
 var $163=(($155+24)|0);
 HEAP32[(($163)>>2)]=$R_1;
 var $_0=$16;var $_0277=$17;label=54;break;
 case 49: 
 _abort();
 throw "Reached an unreachable!";
 case 50: 
 _abort();
 throw "Reached an unreachable!";
 case 51: 
 var $_sum=((($psize)+(4))|0);
 var $167=(($1+$_sum)|0);
 var $168=$167;
 var $169=HEAP32[(($168)>>2)];
 var $170=$169&3;
 var $171=($170|0)==3;
 if($171){label=52;break;}else{var $_0=$16;var $_0277=$17;label=54;break;}
 case 52: 
 HEAP32[((20008)>>2)]=$17;
 var $173=HEAP32[(($168)>>2)];
 var $174=$173&-2;
 HEAP32[(($168)>>2)]=$174;
 var $175=$17|1;
 var $_sum24=(((4)-($10))|0);
 var $176=(($1+$_sum24)|0);
 var $177=$176;
 HEAP32[(($177)>>2)]=$175;
 var $178=$2;
 HEAP32[(($178)>>2)]=$17;
 label=134;break;
 case 53: 
 _abort();
 throw "Reached an unreachable!";
 case 54: 
 var $_0277;
 var $_0;
 var $180=HEAP32[((20016)>>2)];
 var $181=($2>>>0)<($180>>>0);
 if($181){label=133;break;}else{label=55;break;}
 case 55: 
 var $_sum1=((($psize)+(4))|0);
 var $183=(($1+$_sum1)|0);
 var $184=$183;
 var $185=HEAP32[(($184)>>2)];
 var $186=$185&2;
 var $187=($186|0)==0;
 if($187){label=56;break;}else{label=109;break;}
 case 56: 
 var $189=HEAP32[((20024)>>2)];
 var $190=($3|0)==($189|0);
 if($190){label=57;break;}else{label=59;break;}
 case 57: 
 var $192=HEAP32[((20012)>>2)];
 var $193=((($192)+($_0277))|0);
 HEAP32[((20012)>>2)]=$193;
 HEAP32[((20024)>>2)]=$_0;
 var $194=$193|1;
 var $195=(($_0+4)|0);
 HEAP32[(($195)>>2)]=$194;
 var $196=HEAP32[((20020)>>2)];
 var $197=($_0|0)==($196|0);
 if($197){label=58;break;}else{label=134;break;}
 case 58: 
 HEAP32[((20020)>>2)]=0;
 HEAP32[((20008)>>2)]=0;
 label=134;break;
 case 59: 
 var $200=HEAP32[((20020)>>2)];
 var $201=($3|0)==($200|0);
 if($201){label=60;break;}else{label=61;break;}
 case 60: 
 var $203=HEAP32[((20008)>>2)];
 var $204=((($203)+($_0277))|0);
 HEAP32[((20008)>>2)]=$204;
 HEAP32[((20020)>>2)]=$_0;
 var $205=$204|1;
 var $206=(($_0+4)|0);
 HEAP32[(($206)>>2)]=$205;
 var $207=$_0;
 var $208=(($207+$204)|0);
 var $209=$208;
 HEAP32[(($209)>>2)]=$204;
 label=134;break;
 case 61: 
 var $211=$185&-8;
 var $212=((($211)+($_0277))|0);
 var $213=$185>>>3;
 var $214=($185>>>0)<256;
 if($214){label=62;break;}else{label=74;break;}
 case 62: 
 var $_sum20=((($psize)+(8))|0);
 var $216=(($1+$_sum20)|0);
 var $217=$216;
 var $218=HEAP32[(($217)>>2)];
 var $_sum21=((($psize)+(12))|0);
 var $219=(($1+$_sum21)|0);
 var $220=$219;
 var $221=HEAP32[(($220)>>2)];
 var $222=$213<<1;
 var $223=((20040+($222<<2))|0);
 var $224=$223;
 var $225=($218|0)==($224|0);
 if($225){label=65;break;}else{label=63;break;}
 case 63: 
 var $227=$218;
 var $228=($227>>>0)<($180>>>0);
 if($228){label=73;break;}else{label=64;break;}
 case 64: 
 var $230=(($218+12)|0);
 var $231=HEAP32[(($230)>>2)];
 var $232=($231|0)==($3|0);
 if($232){label=65;break;}else{label=73;break;}
 case 65: 
 var $233=($221|0)==($218|0);
 if($233){label=66;break;}else{label=67;break;}
 case 66: 
 var $235=1<<$213;
 var $236=$235^-1;
 var $237=HEAP32[((20000)>>2)];
 var $238=$237&$236;
 HEAP32[((20000)>>2)]=$238;
 label=107;break;
 case 67: 
 var $240=($221|0)==($224|0);
 if($240){label=68;break;}else{label=69;break;}
 case 68: 
 var $_pre63=(($221+8)|0);
 var $_pre_phi64=$_pre63;label=71;break;
 case 69: 
 var $242=$221;
 var $243=($242>>>0)<($180>>>0);
 if($243){label=72;break;}else{label=70;break;}
 case 70: 
 var $245=(($221+8)|0);
 var $246=HEAP32[(($245)>>2)];
 var $247=($246|0)==($3|0);
 if($247){var $_pre_phi64=$245;label=71;break;}else{label=72;break;}
 case 71: 
 var $_pre_phi64;
 var $248=(($218+12)|0);
 HEAP32[(($248)>>2)]=$221;
 HEAP32[(($_pre_phi64)>>2)]=$218;
 label=107;break;
 case 72: 
 _abort();
 throw "Reached an unreachable!";
 case 73: 
 _abort();
 throw "Reached an unreachable!";
 case 74: 
 var $250=$2;
 var $_sum2=((($psize)+(24))|0);
 var $251=(($1+$_sum2)|0);
 var $252=$251;
 var $253=HEAP32[(($252)>>2)];
 var $_sum3=((($psize)+(12))|0);
 var $254=(($1+$_sum3)|0);
 var $255=$254;
 var $256=HEAP32[(($255)>>2)];
 var $257=($256|0)==($250|0);
 if($257){label=80;break;}else{label=75;break;}
 case 75: 
 var $_sum18=((($psize)+(8))|0);
 var $259=(($1+$_sum18)|0);
 var $260=$259;
 var $261=HEAP32[(($260)>>2)];
 var $262=$261;
 var $263=($262>>>0)<($180>>>0);
 if($263){label=79;break;}else{label=76;break;}
 case 76: 
 var $265=(($261+12)|0);
 var $266=HEAP32[(($265)>>2)];
 var $267=($266|0)==($250|0);
 if($267){label=77;break;}else{label=79;break;}
 case 77: 
 var $269=(($256+8)|0);
 var $270=HEAP32[(($269)>>2)];
 var $271=($270|0)==($250|0);
 if($271){label=78;break;}else{label=79;break;}
 case 78: 
 HEAP32[(($265)>>2)]=$256;
 HEAP32[(($269)>>2)]=$261;
 var $R7_1=$256;label=87;break;
 case 79: 
 _abort();
 throw "Reached an unreachable!";
 case 80: 
 var $_sum5=((($psize)+(20))|0);
 var $274=(($1+$_sum5)|0);
 var $275=$274;
 var $276=HEAP32[(($275)>>2)];
 var $277=($276|0)==0;
 if($277){label=81;break;}else{var $R7_0=$276;var $RP9_0=$275;label=82;break;}
 case 81: 
 var $_sum4=((($psize)+(16))|0);
 var $279=(($1+$_sum4)|0);
 var $280=$279;
 var $281=HEAP32[(($280)>>2)];
 var $282=($281|0)==0;
 if($282){var $R7_1=0;label=87;break;}else{var $R7_0=$281;var $RP9_0=$280;label=82;break;}
 case 82: 
 var $RP9_0;
 var $R7_0;
 var $283=(($R7_0+20)|0);
 var $284=HEAP32[(($283)>>2)];
 var $285=($284|0)==0;
 if($285){label=83;break;}else{var $R7_0=$284;var $RP9_0=$283;label=82;break;}
 case 83: 
 var $287=(($R7_0+16)|0);
 var $288=HEAP32[(($287)>>2)];
 var $289=($288|0)==0;
 if($289){label=84;break;}else{var $R7_0=$288;var $RP9_0=$287;label=82;break;}
 case 84: 
 var $291=$RP9_0;
 var $292=($291>>>0)<($180>>>0);
 if($292){label=86;break;}else{label=85;break;}
 case 85: 
 HEAP32[(($RP9_0)>>2)]=0;
 var $R7_1=$R7_0;label=87;break;
 case 86: 
 _abort();
 throw "Reached an unreachable!";
 case 87: 
 var $R7_1;
 var $296=($253|0)==0;
 if($296){label=107;break;}else{label=88;break;}
 case 88: 
 var $_sum15=((($psize)+(28))|0);
 var $298=(($1+$_sum15)|0);
 var $299=$298;
 var $300=HEAP32[(($299)>>2)];
 var $301=((20304+($300<<2))|0);
 var $302=HEAP32[(($301)>>2)];
 var $303=($250|0)==($302|0);
 if($303){label=89;break;}else{label=91;break;}
 case 89: 
 HEAP32[(($301)>>2)]=$R7_1;
 var $cond53=($R7_1|0)==0;
 if($cond53){label=90;break;}else{label=97;break;}
 case 90: 
 var $305=1<<$300;
 var $306=$305^-1;
 var $307=HEAP32[((20004)>>2)];
 var $308=$307&$306;
 HEAP32[((20004)>>2)]=$308;
 label=107;break;
 case 91: 
 var $310=$253;
 var $311=HEAP32[((20016)>>2)];
 var $312=($310>>>0)<($311>>>0);
 if($312){label=95;break;}else{label=92;break;}
 case 92: 
 var $314=(($253+16)|0);
 var $315=HEAP32[(($314)>>2)];
 var $316=($315|0)==($250|0);
 if($316){label=93;break;}else{label=94;break;}
 case 93: 
 HEAP32[(($314)>>2)]=$R7_1;
 label=96;break;
 case 94: 
 var $319=(($253+20)|0);
 HEAP32[(($319)>>2)]=$R7_1;
 label=96;break;
 case 95: 
 _abort();
 throw "Reached an unreachable!";
 case 96: 
 var $322=($R7_1|0)==0;
 if($322){label=107;break;}else{label=97;break;}
 case 97: 
 var $324=$R7_1;
 var $325=HEAP32[((20016)>>2)];
 var $326=($324>>>0)<($325>>>0);
 if($326){label=106;break;}else{label=98;break;}
 case 98: 
 var $328=(($R7_1+24)|0);
 HEAP32[(($328)>>2)]=$253;
 var $_sum16=((($psize)+(16))|0);
 var $329=(($1+$_sum16)|0);
 var $330=$329;
 var $331=HEAP32[(($330)>>2)];
 var $332=($331|0)==0;
 if($332){label=102;break;}else{label=99;break;}
 case 99: 
 var $334=$331;
 var $335=HEAP32[((20016)>>2)];
 var $336=($334>>>0)<($335>>>0);
 if($336){label=101;break;}else{label=100;break;}
 case 100: 
 var $338=(($R7_1+16)|0);
 HEAP32[(($338)>>2)]=$331;
 var $339=(($331+24)|0);
 HEAP32[(($339)>>2)]=$R7_1;
 label=102;break;
 case 101: 
 _abort();
 throw "Reached an unreachable!";
 case 102: 
 var $_sum17=((($psize)+(20))|0);
 var $342=(($1+$_sum17)|0);
 var $343=$342;
 var $344=HEAP32[(($343)>>2)];
 var $345=($344|0)==0;
 if($345){label=107;break;}else{label=103;break;}
 case 103: 
 var $347=$344;
 var $348=HEAP32[((20016)>>2)];
 var $349=($347>>>0)<($348>>>0);
 if($349){label=105;break;}else{label=104;break;}
 case 104: 
 var $351=(($R7_1+20)|0);
 HEAP32[(($351)>>2)]=$344;
 var $352=(($344+24)|0);
 HEAP32[(($352)>>2)]=$R7_1;
 label=107;break;
 case 105: 
 _abort();
 throw "Reached an unreachable!";
 case 106: 
 _abort();
 throw "Reached an unreachable!";
 case 107: 
 var $355=$212|1;
 var $356=(($_0+4)|0);
 HEAP32[(($356)>>2)]=$355;
 var $357=$_0;
 var $358=(($357+$212)|0);
 var $359=$358;
 HEAP32[(($359)>>2)]=$212;
 var $360=HEAP32[((20020)>>2)];
 var $361=($_0|0)==($360|0);
 if($361){label=108;break;}else{var $_1=$212;label=110;break;}
 case 108: 
 HEAP32[((20008)>>2)]=$212;
 label=134;break;
 case 109: 
 var $364=$185&-2;
 HEAP32[(($184)>>2)]=$364;
 var $365=$_0277|1;
 var $366=(($_0+4)|0);
 HEAP32[(($366)>>2)]=$365;
 var $367=$_0;
 var $368=(($367+$_0277)|0);
 var $369=$368;
 HEAP32[(($369)>>2)]=$_0277;
 var $_1=$_0277;label=110;break;
 case 110: 
 var $_1;
 var $371=$_1>>>3;
 var $372=($_1>>>0)<256;
 if($372){label=111;break;}else{label=116;break;}
 case 111: 
 var $374=$371<<1;
 var $375=((20040+($374<<2))|0);
 var $376=$375;
 var $377=HEAP32[((20000)>>2)];
 var $378=1<<$371;
 var $379=$377&$378;
 var $380=($379|0)==0;
 if($380){label=112;break;}else{label=113;break;}
 case 112: 
 var $382=$377|$378;
 HEAP32[((20000)>>2)]=$382;
 var $_sum13_pre=((($374)+(2))|0);
 var $_pre=((20040+($_sum13_pre<<2))|0);
 var $F16_0=$376;var $_pre_phi=$_pre;label=115;break;
 case 113: 
 var $_sum14=((($374)+(2))|0);
 var $384=((20040+($_sum14<<2))|0);
 var $385=HEAP32[(($384)>>2)];
 var $386=$385;
 var $387=HEAP32[((20016)>>2)];
 var $388=($386>>>0)<($387>>>0);
 if($388){label=114;break;}else{var $F16_0=$385;var $_pre_phi=$384;label=115;break;}
 case 114: 
 _abort();
 throw "Reached an unreachable!";
 case 115: 
 var $_pre_phi;
 var $F16_0;
 HEAP32[(($_pre_phi)>>2)]=$_0;
 var $391=(($F16_0+12)|0);
 HEAP32[(($391)>>2)]=$_0;
 var $392=(($_0+8)|0);
 HEAP32[(($392)>>2)]=$F16_0;
 var $393=(($_0+12)|0);
 HEAP32[(($393)>>2)]=$376;
 label=134;break;
 case 116: 
 var $395=$_0;
 var $396=$_1>>>8;
 var $397=($396|0)==0;
 if($397){var $I19_0=0;label=119;break;}else{label=117;break;}
 case 117: 
 var $399=($_1>>>0)>16777215;
 if($399){var $I19_0=31;label=119;break;}else{label=118;break;}
 case 118: 
 var $401=((($396)+(1048320))|0);
 var $402=$401>>>16;
 var $403=$402&8;
 var $404=$396<<$403;
 var $405=((($404)+(520192))|0);
 var $406=$405>>>16;
 var $407=$406&4;
 var $408=$407|$403;
 var $409=$404<<$407;
 var $410=((($409)+(245760))|0);
 var $411=$410>>>16;
 var $412=$411&2;
 var $413=$408|$412;
 var $414=(((14)-($413))|0);
 var $415=$409<<$412;
 var $416=$415>>>15;
 var $417=((($414)+($416))|0);
 var $418=$417<<1;
 var $419=((($417)+(7))|0);
 var $420=$_1>>>($419>>>0);
 var $421=$420&1;
 var $422=$421|$418;
 var $I19_0=$422;label=119;break;
 case 119: 
 var $I19_0;
 var $424=((20304+($I19_0<<2))|0);
 var $425=(($_0+28)|0);
 var $I19_0_c=$I19_0;
 HEAP32[(($425)>>2)]=$I19_0_c;
 var $426=(($_0+20)|0);
 HEAP32[(($426)>>2)]=0;
 var $427=(($_0+16)|0);
 HEAP32[(($427)>>2)]=0;
 var $428=HEAP32[((20004)>>2)];
 var $429=1<<$I19_0;
 var $430=$428&$429;
 var $431=($430|0)==0;
 if($431){label=120;break;}else{label=121;break;}
 case 120: 
 var $433=$428|$429;
 HEAP32[((20004)>>2)]=$433;
 HEAP32[(($424)>>2)]=$395;
 var $434=(($_0+24)|0);
 var $_c=$424;
 HEAP32[(($434)>>2)]=$_c;
 var $435=(($_0+12)|0);
 HEAP32[(($435)>>2)]=$_0;
 var $436=(($_0+8)|0);
 HEAP32[(($436)>>2)]=$_0;
 label=134;break;
 case 121: 
 var $438=HEAP32[(($424)>>2)];
 var $439=($I19_0|0)==31;
 if($439){var $444=0;label=123;break;}else{label=122;break;}
 case 122: 
 var $441=$I19_0>>>1;
 var $442=(((25)-($441))|0);
 var $444=$442;label=123;break;
 case 123: 
 var $444;
 var $445=$_1<<$444;
 var $K20_0=$445;var $T_0=$438;label=124;break;
 case 124: 
 var $T_0;
 var $K20_0;
 var $447=(($T_0+4)|0);
 var $448=HEAP32[(($447)>>2)];
 var $449=$448&-8;
 var $450=($449|0)==($_1|0);
 if($450){label=129;break;}else{label=125;break;}
 case 125: 
 var $452=$K20_0>>>31;
 var $453=(($T_0+16+($452<<2))|0);
 var $454=HEAP32[(($453)>>2)];
 var $455=($454|0)==0;
 var $456=$K20_0<<1;
 if($455){label=126;break;}else{var $K20_0=$456;var $T_0=$454;label=124;break;}
 case 126: 
 var $458=$453;
 var $459=HEAP32[((20016)>>2)];
 var $460=($458>>>0)<($459>>>0);
 if($460){label=128;break;}else{label=127;break;}
 case 127: 
 HEAP32[(($453)>>2)]=$395;
 var $462=(($_0+24)|0);
 var $T_0_c10=$T_0;
 HEAP32[(($462)>>2)]=$T_0_c10;
 var $463=(($_0+12)|0);
 HEAP32[(($463)>>2)]=$_0;
 var $464=(($_0+8)|0);
 HEAP32[(($464)>>2)]=$_0;
 label=134;break;
 case 128: 
 _abort();
 throw "Reached an unreachable!";
 case 129: 
 var $467=(($T_0+8)|0);
 var $468=HEAP32[(($467)>>2)];
 var $469=$T_0;
 var $470=HEAP32[((20016)>>2)];
 var $471=($469>>>0)<($470>>>0);
 if($471){label=132;break;}else{label=130;break;}
 case 130: 
 var $473=$468;
 var $474=($473>>>0)<($470>>>0);
 if($474){label=132;break;}else{label=131;break;}
 case 131: 
 var $476=(($468+12)|0);
 HEAP32[(($476)>>2)]=$395;
 HEAP32[(($467)>>2)]=$395;
 var $477=(($_0+8)|0);
 var $_c9=$468;
 HEAP32[(($477)>>2)]=$_c9;
 var $478=(($_0+12)|0);
 var $T_0_c=$T_0;
 HEAP32[(($478)>>2)]=$T_0_c;
 var $479=(($_0+24)|0);
 HEAP32[(($479)>>2)]=0;
 label=134;break;
 case 132: 
 _abort();
 throw "Reached an unreachable!";
 case 133: 
 _abort();
 throw "Reached an unreachable!";
 case 134: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __Znwj($size){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($size|0)==0;
 var $_size=($1?1:$size);
 label=2;break;
 case 2: 
 var $3=_malloc($_size);
 var $4=($3|0)==0;
 if($4){label=3;break;}else{label=10;break;}
 case 3: 
 var $6=(tempValue=HEAP32[((20624)>>2)],HEAP32[((20624)>>2)]=tempValue+0,tempValue);
 var $7=($6|0)==0;
 if($7){label=9;break;}else{label=4;break;}
 case 4: 
 var $9=$6;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=5;break; }
 case 5: 
 var $lpad_loopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit$1;var $lpad_phi$0=$lpad_loopexit$0;label=7;break;
 case 6: 
 var $lpad_nonloopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit$1;var $lpad_phi$0=$lpad_nonloopexit$0;label=7;break;
 case 7: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 var $11=$lpad_phi$1;
 var $12=($11|0)<0;
 if($12){label=8;break;}else{label=11;break;}
 case 8: 
 var $14=$lpad_phi$0;
 ___cxa_call_unexpected($14);
 throw "Reached an unreachable!";
 case 9: 
 var $16=___cxa_allocate_exception(4);
 var $17=$16;
 HEAP32[(($17)>>2)]=16504;
 (function() { try { __THREW__ = 0; return ___cxa_throw($16,18168,(158)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=6;break; }
 case 10: 
 return $3;
 case 11: 
 ___resumeException($lpad_phi$0)
 case 12: 
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }

}


function __Znaj($size){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(function() { try { __THREW__ = 0; return __Znwj($size) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 return $1;
 case 3: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 var $5=$4$1;
 var $6=($5|0)<0;
 if($6){label=4;break;}else{label=5;break;}
 case 4: 
 var $8=$4$0;
 ___cxa_call_unexpected($8);
 throw "Reached an unreachable!";
 case 5: 
 ___resumeException($4$0)
  default: assert(0, "bad label: " + label);
 }

}


function __ZdlPv($ptr){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($ptr|0)==0;
 if($1){label=3;break;}else{label=2;break;}
 case 2: 
 _free($ptr);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function __ZdaPv($ptr){
 var label=0;


 __ZdlPv($ptr);
 return;
}


function __ZNSt9bad_allocD0Ev($this){
 var label=0;


 var $1=(($this)|0);

 var $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNSt9bad_allocD2Ev($this){
 var label=0;


 var $1=(($this)|0);

 return;
}


function __ZNKSt9bad_alloc4whatEv($this){
 var label=0;


 return 9064;
}


function ___floatscan($f,$prec,$pok){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+512)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $x_i=sp;
 if(($prec|0)==1){ label=2;break;}else if(($prec|0)==2){ label=3;break;}else if(($prec|0)==0){ var $emin_0_ph=-149;var $bits_0_ph=24;label=4;break;}else{var $_0=0;label=271;break;}
 case 2: 
 var $emin_0_ph=-1074;var $bits_0_ph=53;label=4;break;
 case 3: 
 var $emin_0_ph=-1074;var $bits_0_ph=53;label=4;break;
 case 4: 
 var $bits_0_ph;
 var $emin_0_ph;
 var $3=(($f+4)|0);
 var $4=(($f+100)|0);
 label=5;break;
 case 5: 
 var $6=HEAP32[(($3)>>2)];
 var $7=HEAP32[(($4)>>2)];
 var $8=($6>>>0)<($7>>>0);
 if($8){label=6;break;}else{label=7;break;}
 case 6: 
 var $10=(($6+1)|0);
 HEAP32[(($3)>>2)]=$10;
 var $11=HEAP8[($6)];
 var $12=($11&255);
 var $16=$12;label=8;break;
 case 7: 
 var $14=___shgetc($f);
 var $16=$14;label=8;break;
 case 8: 
 var $16;
 var $17=_isspace($16);
 var $18=($17|0)==0;
 if($18){label=9;break;}else{label=5;break;}
 case 9: 
 var $20=($16|0)==45;
 if(($16|0)==45|($16|0)==43){ label=10;break;}else{var $c_0=$16;var $sign_0=1;label=13;break;}
 case 10: 
 var $22=($20&1);
 var $23=$22<<1;
 var $24=(((1)-($23))|0);
 var $25=HEAP32[(($3)>>2)];
 var $26=HEAP32[(($4)>>2)];
 var $27=($25>>>0)<($26>>>0);
 if($27){label=11;break;}else{label=12;break;}
 case 11: 
 var $29=(($25+1)|0);
 HEAP32[(($3)>>2)]=$29;
 var $30=HEAP8[($25)];
 var $31=($30&255);
 var $c_0=$31;var $sign_0=$24;label=13;break;
 case 12: 
 var $33=___shgetc($f);
 var $c_0=$33;var $sign_0=$24;label=13;break;
 case 13: 
 var $sign_0;
 var $c_0;
 var $i_0148=0;var $c_1149=$c_0;label=14;break;
 case 14: 
 var $c_1149;
 var $i_0148;
 var $36=$c_1149|32;
 var $37=((4976+$i_0148)|0);
 var $38=HEAP8[($37)];
 var $39=(($38<<24)>>24);
 var $40=($36|0)==($39|0);
 if($40){label=15;break;}else{var $i_0_lcssa=$i_0148;var $c_1_lcssa=$c_1149;label=20;break;}
 case 15: 
 var $42=($i_0148>>>0)<7;
 if($42){label=16;break;}else{var $c_2=$c_1149;label=19;break;}
 case 16: 
 var $44=HEAP32[(($3)>>2)];
 var $45=HEAP32[(($4)>>2)];
 var $46=($44>>>0)<($45>>>0);
 if($46){label=17;break;}else{label=18;break;}
 case 17: 
 var $48=(($44+1)|0);
 HEAP32[(($3)>>2)]=$48;
 var $49=HEAP8[($44)];
 var $50=($49&255);
 var $c_2=$50;label=19;break;
 case 18: 
 var $52=___shgetc($f);
 var $c_2=$52;label=19;break;
 case 19: 
 var $c_2;
 var $54=((($i_0148)+(1))|0);
 var $55=($54>>>0)<8;
 if($55){var $i_0148=$54;var $c_1149=$c_2;label=14;break;}else{var $i_0_lcssa=$54;var $c_1_lcssa=$c_2;label=20;break;}
 case 20: 
 var $c_1_lcssa;
 var $i_0_lcssa;
 if(($i_0_lcssa|0)==3){ label=23;break;}else if(($i_0_lcssa|0)==8){ label=27;break;}else{label=21;break;}
 case 21: 
 var $57=($i_0_lcssa>>>0)<4;
 var $58=($pok|0)==0;
 var $or_cond=$57|$58;
 if($or_cond){label=28;break;}else{label=22;break;}
 case 22: 
 var $60=($i_0_lcssa|0)==8;
 if($60){label=27;break;}else{label=23;break;}
 case 23: 
 var $61=HEAP32[(($4)>>2)];
 var $62=($61|0)==0;
 if($62){label=25;break;}else{label=24;break;}
 case 24: 
 var $64=HEAP32[(($3)>>2)];
 var $65=((($64)-(1))|0);
 HEAP32[(($3)>>2)]=$65;
 label=25;break;
 case 25: 
 var $notlhs=($pok|0)==0;
 var $notrhs=($i_0_lcssa>>>0)<4;
 var $or_cond189_not=$notrhs|$notlhs;
 var $brmerge=$or_cond189_not|$62;
 if($brmerge){label=27;break;}else{var $i_1146=$i_0_lcssa;label=26;break;}
 case 26: 
 var $i_1146;
 var $68=HEAP32[(($3)>>2)];
 var $69=((($68)-(1))|0);
 HEAP32[(($3)>>2)]=$69;
 var $70=((($i_1146)-(1))|0);
 var $71=($70>>>0)>3;
 if($71){var $i_1146=$70;label=26;break;}else{label=27;break;}
 case 27: 
 var $72=($sign_0|0);
 var $73=($72)*(Infinity);
 var $74=$73;
 var $_0=$74;label=271;break;
 case 28: 
 var $76=($i_0_lcssa|0)==0;
 if($76){label=29;break;}else{label=53;break;}
 case 29: 
 var $77=$c_1_lcssa|32;
 var $78=($77|0)==110;
 if($78){label=30;break;}else{label=56;break;}
 case 30: 
 var $80=HEAP32[(($3)>>2)];
 var $81=HEAP32[(($4)>>2)];
 var $82=($80>>>0)<($81>>>0);
 if($82){label=31;break;}else{label=32;break;}
 case 31: 
 var $84=(($80+1)|0);
 HEAP32[(($3)>>2)]=$84;
 var $85=HEAP8[($80)];
 var $86=($85&255);
 var $c_4=$86;label=33;break;
 case 32: 
 var $88=___shgetc($f);
 var $c_4=$88;label=33;break;
 case 33: 
 var $c_4;
 var $90=$c_4|32;
 var $91=($90|0)==97;
 if($91){label=272;break;}else{label=53;break;}
 case 34: 
 var $92=HEAP32[(($3)>>2)];
 var $93=HEAP32[(($4)>>2)];
 var $94=($92>>>0)<($93>>>0);
 if($94){label=35;break;}else{label=36;break;}
 case 35: 
 var $96=(($92+1)|0);
 HEAP32[(($3)>>2)]=$96;
 var $97=HEAP8[($92)];
 var $98=($97&255);
 var $102=$98;label=37;break;
 case 36: 
 var $100=___shgetc($f);
 var $102=$100;label=37;break;
 case 37: 
 var $102;
 var $103=($102|0)==40;
 if($103){var $i_4=1;label=40;break;}else{label=38;break;}
 case 38: 
 var $105=HEAP32[(($4)>>2)];
 var $106=($105|0)==0;
 if($106){var $_0=NaN;label=271;break;}else{label=39;break;}
 case 39: 
 var $108=HEAP32[(($3)>>2)];
 var $109=((($108)-(1))|0);
 HEAP32[(($3)>>2)]=$109;
 var $_0=NaN;label=271;break;
 case 40: 
 var $i_4;
 var $110=HEAP32[(($3)>>2)];
 var $111=HEAP32[(($4)>>2)];
 var $112=($110>>>0)<($111>>>0);
 if($112){label=41;break;}else{label=42;break;}
 case 41: 
 var $114=(($110+1)|0);
 HEAP32[(($3)>>2)]=$114;
 var $115=HEAP8[($110)];
 var $116=($115&255);
 var $120=$116;label=43;break;
 case 42: 
 var $118=___shgetc($f);
 var $120=$118;label=43;break;
 case 43: 
 var $120;
 var $121=((($120)-(48))|0);
 var $122=($121>>>0)<10;
 var $123=((($120)-(65))|0);
 var $124=($123>>>0)<26;
 var $or_cond89=$122|$124;
 if($or_cond89){label=52;break;}else{label=44;break;}
 case 44: 
 var $126=((($120)-(97))|0);
 var $127=($126>>>0)<26;
 var $128=($120|0)==95;
 var $or_cond5=$127|$128;
 if($or_cond5){label=52;break;}else{label=45;break;}
 case 45: 
 var $130=($120|0)==41;
 if($130){var $_0=NaN;label=271;break;}else{label=46;break;}
 case 46: 
 var $132=HEAP32[(($4)>>2)];
 var $133=($132|0)==0;
 if($133){label=48;break;}else{label=47;break;}
 case 47: 
 var $135=HEAP32[(($3)>>2)];
 var $136=((($135)-(1))|0);
 HEAP32[(($3)>>2)]=$136;
 label=48;break;
 case 48: 
 if($58){label=50;break;}else{label=49;break;}
 case 49: 
 var $138=($i_4|0)==0;
 var $brmerge190=$138|$133;
 if($brmerge190){var $_0=NaN;label=271;break;}else{var $_in=$i_4;label=51;break;}
 case 50: 
 var $140=___errno_location();
 HEAP32[(($140)>>2)]=22;
 ___shlim($f,0);
 var $_0=0;label=271;break;
 case 51: 
 var $_in;
 var $141=((($_in)-(1))|0);
 var $142=HEAP32[(($3)>>2)];
 var $143=((($142)-(1))|0);
 HEAP32[(($3)>>2)]=$143;
 var $144=($141|0)==0;
 if($144){var $_0=NaN;label=271;break;}else{var $_in=$141;label=51;break;}
 case 52: 
 var $146=((($i_4)+(1))|0);
 var $i_4=$146;label=40;break;
 case 53: 
 var $147=HEAP32[(($4)>>2)];
 var $148=($147|0)==0;
 if($148){label=55;break;}else{label=54;break;}
 case 54: 
 var $150=HEAP32[(($3)>>2)];
 var $151=((($150)-(1))|0);
 HEAP32[(($3)>>2)]=$151;
 label=55;break;
 case 55: 
 var $153=___errno_location();
 HEAP32[(($153)>>2)]=22;
 ___shlim($f,0);
 var $_0=0;label=271;break;
 case 56: 
 var $154=($c_1_lcssa|0)==48;
 if($154){label=57;break;}else{var $c_6=$c_1_lcssa;label=132;break;}
 case 57: 
 var $156=HEAP32[(($3)>>2)];
 var $157=HEAP32[(($4)>>2)];
 var $158=($156>>>0)<($157>>>0);
 if($158){label=58;break;}else{label=59;break;}
 case 58: 
 var $160=(($156+1)|0);
 HEAP32[(($3)>>2)]=$160;
 var $161=HEAP8[($156)];
 var $162=($161&255);
 var $166=$162;label=60;break;
 case 59: 
 var $164=___shgetc($f);
 var $166=$164;label=60;break;
 case 60: 
 var $166;
 var $167=$166|32;
 var $168=($167|0)==120;
 if($168){label=61;break;}else{label=130;break;}
 case 61: 
 var $170=HEAP32[(($3)>>2)];
 var $171=HEAP32[(($4)>>2)];
 var $172=($170>>>0)<($171>>>0);
 if($172){label=62;break;}else{label=63;break;}
 case 62: 
 var $174=(($170+1)|0);
 HEAP32[(($3)>>2)]=$174;
 var $175=HEAP8[($170)];
 var $176=($175&255);
 var $c_0_i=$176;var $gotdig_0_i=0;label=64;break;
 case 63: 
 var $178=___shgetc($f);
 var $c_0_i=$178;var $gotdig_0_i=0;label=64;break;
 case 64: 
 var $gotdig_0_i;
 var $c_0_i;
 if(($c_0_i|0)==48){ label=65;break;}else if(($c_0_i|0)==46){ label=68;break;}else{var $c_2_i=$c_0_i;var $dc_0_i$1=0;var $dc_0_i$0=0;var $rp_1_i$1=0;var $rp_1_i$0=0;var $gotdig_2_i=$gotdig_0_i;var $gotrad_0_i=0;var $gottail_0_i=0;var $scale_0_i=1;var $y_0_i=0;var $x_0_i=0;label=77;break;}
 case 65: 
 var $180=HEAP32[(($3)>>2)];
 var $181=HEAP32[(($4)>>2)];
 var $182=($180>>>0)<($181>>>0);
 if($182){label=66;break;}else{label=67;break;}
 case 66: 
 var $184=(($180+1)|0);
 HEAP32[(($3)>>2)]=$184;
 var $185=HEAP8[($180)];
 var $186=($185&255);
 var $c_0_i=$186;var $gotdig_0_i=1;label=64;break;
 case 67: 
 var $188=___shgetc($f);
 var $c_0_i=$188;var $gotdig_0_i=1;label=64;break;
 case 68: 
 var $190=HEAP32[(($3)>>2)];
 var $191=HEAP32[(($4)>>2)];
 var $192=($190>>>0)<($191>>>0);
 if($192){label=69;break;}else{label=70;break;}
 case 69: 
 var $194=(($190+1)|0);
 HEAP32[(($3)>>2)]=$194;
 var $195=HEAP8[($190)];
 var $196=($195&255);
 var $c_1_ph_i=$196;label=71;break;
 case 70: 
 var $198=___shgetc($f);
 var $c_1_ph_i=$198;label=71;break;
 case 71: 
 var $c_1_ph_i;
 var $199=($c_1_ph_i|0)==48;
 if($199){var $rp_0113_i$1=-1;var $rp_0113_i$0=-1;label=72;break;}else{var $c_2_i=$c_1_ph_i;var $dc_0_i$1=0;var $dc_0_i$0=0;var $rp_1_i$1=0;var $rp_1_i$0=0;var $gotdig_2_i=$gotdig_0_i;var $gotrad_0_i=1;var $gottail_0_i=0;var $scale_0_i=1;var $y_0_i=0;var $x_0_i=0;label=77;break;}
 case 72: 
 var $rp_0113_i$0;
 var $rp_0113_i$1;
 var $200=HEAP32[(($3)>>2)];
 var $201=HEAP32[(($4)>>2)];
 var $202=($200>>>0)<($201>>>0);
 if($202){label=73;break;}else{label=74;break;}
 case 73: 
 var $204=(($200+1)|0);
 HEAP32[(($3)>>2)]=$204;
 var $205=HEAP8[($200)];
 var $206=($205&255);
 var $210=$206;label=75;break;
 case 74: 
 var $208=___shgetc($f);
 var $210=$208;label=75;break;
 case 75: 
 var $210;
 var $211=($210|0)==48;
 if($211){label=76;break;}else{var $c_2_i=$210;var $dc_0_i$1=0;var $dc_0_i$0=0;var $rp_1_i$1=$rp_0113_i$1;var $rp_1_i$0=$rp_0113_i$0;var $gotdig_2_i=1;var $gotrad_0_i=1;var $gottail_0_i=0;var $scale_0_i=1;var $y_0_i=0;var $x_0_i=0;label=77;break;}
 case 76: 
 var $$etemp$0$0=-1;
 var $$etemp$0$1=-1;
 var $phitmp_i$0=_i64Add($rp_0113_i$0,$rp_0113_i$1,$$etemp$0$0,$$etemp$0$1);var $phitmp_i$1=tempRet0;
 var $rp_0113_i$1=$phitmp_i$1;var $rp_0113_i$0=$phitmp_i$0;label=72;break;
 case 77: 
 var $x_0_i;
 var $y_0_i;
 var $scale_0_i;
 var $gottail_0_i;
 var $gotrad_0_i;
 var $gotdig_2_i;
 var $rp_1_i$0;
 var $rp_1_i$1;
 var $dc_0_i$0;
 var $dc_0_i$1;
 var $c_2_i;
 var $212=((($c_2_i)-(48))|0);
 var $213=($212>>>0)<10;
 if($213){var $d_0_i=$212;label=82;break;}else{label=78;break;}
 case 78: 
 var $215=$c_2_i|32;
 var $216=((($215)-(97))|0);
 var $217=($216>>>0)<6;
 var $218=($c_2_i|0)==46;
 var $or_cond_i=$217|$218;
 if($or_cond_i){label=79;break;}else{var $c_2_lcssa_i=$c_2_i;label=92;break;}
 case 79: 
 if($218){label=80;break;}else{label=81;break;}
 case 80: 
 var $220=($gotrad_0_i|0)==0;
 if($220){var $dc_1_i$1=$dc_0_i$1;var $dc_1_i$0=$dc_0_i$0;var $rp_2_i$1=$dc_0_i$1;var $rp_2_i$0=$dc_0_i$0;var $gotdig_3_i=$gotdig_2_i;var $gotrad_1_i=1;var $gottail_2_i=$gottail_0_i;var $scale_2_i=$scale_0_i;var $y_2_i=$y_0_i;var $x_2_i=$x_0_i;label=89;break;}else{var $c_2_lcssa_i=46;label=92;break;}
 case 81: 
 var $222=($c_2_i|0)>57;
 var $223=((($215)-(87))|0);
 var $_130_i=($222?$223:$212);
 var $d_0_i=$_130_i;label=82;break;
 case 82: 
 var $d_0_i;
 var $$etemp$1$0=8;
 var $$etemp$1$1=0;
 var $224=(($dc_0_i$1|0) < ($$etemp$1$1|0)) | (((($dc_0_i$1|0) == ($$etemp$1$1|0) & ($dc_0_i$0>>>0) <  ($$etemp$1$0>>>0))));
 if($224){label=83;break;}else{label=84;break;}
 case 83: 
 var $226=$x_0_i<<4;
 var $227=((($d_0_i)+($226))|0);
 var $gottail_1_i=$gottail_0_i;var $scale_1_i=$scale_0_i;var $y_1_i=$y_0_i;var $x_1_i=$227;label=88;break;
 case 84: 
 var $$etemp$2$0=14;
 var $$etemp$2$1=0;
 var $229=(($dc_0_i$1|0) < ($$etemp$2$1|0)) | (((($dc_0_i$1|0) == ($$etemp$2$1|0) & ($dc_0_i$0>>>0) <  ($$etemp$2$0>>>0))));
 if($229){label=85;break;}else{label=86;break;}
 case 85: 
 var $231=($d_0_i|0);
 var $232=($scale_0_i)*((0.0625));
 var $233=($232)*($231);
 var $234=($y_0_i)+($233);
 var $gottail_1_i=$gottail_0_i;var $scale_1_i=$232;var $y_1_i=$234;var $x_1_i=$x_0_i;label=88;break;
 case 86: 
 var $236=($d_0_i|0)!=0;
 var $237=($gottail_0_i|0)==0;
 var $or_cond95_i=$236&$237;
 if($or_cond95_i){label=87;break;}else{var $gottail_1_i=$gottail_0_i;var $scale_1_i=$scale_0_i;var $y_1_i=$y_0_i;var $x_1_i=$x_0_i;label=88;break;}
 case 87: 
 var $239=($scale_0_i)*((0.5));
 var $240=($y_0_i)+($239);
 var $gottail_1_i=1;var $scale_1_i=$scale_0_i;var $y_1_i=$240;var $x_1_i=$x_0_i;label=88;break;
 case 88: 
 var $x_1_i;
 var $y_1_i;
 var $scale_1_i;
 var $gottail_1_i;
 var $$etemp$3$0=1;
 var $$etemp$3$1=0;
 var $242$0=_i64Add($dc_0_i$0,$dc_0_i$1,$$etemp$3$0,$$etemp$3$1);var $242$1=tempRet0;
 var $dc_1_i$1=$242$1;var $dc_1_i$0=$242$0;var $rp_2_i$1=$rp_1_i$1;var $rp_2_i$0=$rp_1_i$0;var $gotdig_3_i=1;var $gotrad_1_i=$gotrad_0_i;var $gottail_2_i=$gottail_1_i;var $scale_2_i=$scale_1_i;var $y_2_i=$y_1_i;var $x_2_i=$x_1_i;label=89;break;
 case 89: 
 var $x_2_i;
 var $y_2_i;
 var $scale_2_i;
 var $gottail_2_i;
 var $gotrad_1_i;
 var $gotdig_3_i;
 var $rp_2_i$0;
 var $rp_2_i$1;
 var $dc_1_i$0;
 var $dc_1_i$1;
 var $243=HEAP32[(($3)>>2)];
 var $244=HEAP32[(($4)>>2)];
 var $245=($243>>>0)<($244>>>0);
 if($245){label=90;break;}else{label=91;break;}
 case 90: 
 var $247=(($243+1)|0);
 HEAP32[(($3)>>2)]=$247;
 var $248=HEAP8[($243)];
 var $249=($248&255);
 var $c_2_i=$249;var $dc_0_i$1=$dc_1_i$1;var $dc_0_i$0=$dc_1_i$0;var $rp_1_i$1=$rp_2_i$1;var $rp_1_i$0=$rp_2_i$0;var $gotdig_2_i=$gotdig_3_i;var $gotrad_0_i=$gotrad_1_i;var $gottail_0_i=$gottail_2_i;var $scale_0_i=$scale_2_i;var $y_0_i=$y_2_i;var $x_0_i=$x_2_i;label=77;break;
 case 91: 
 var $251=___shgetc($f);
 var $c_2_i=$251;var $dc_0_i$1=$dc_1_i$1;var $dc_0_i$0=$dc_1_i$0;var $rp_1_i$1=$rp_2_i$1;var $rp_1_i$0=$rp_2_i$0;var $gotdig_2_i=$gotdig_3_i;var $gotrad_0_i=$gotrad_1_i;var $gottail_0_i=$gottail_2_i;var $scale_0_i=$scale_2_i;var $y_0_i=$y_2_i;var $x_0_i=$x_2_i;label=77;break;
 case 92: 
 var $c_2_lcssa_i;
 var $253=($gotdig_2_i|0)==0;
 if($253){label=93;break;}else{label=101;break;}
 case 93: 
 var $255=HEAP32[(($4)>>2)];
 var $256=($255|0)==0;
 if($256){label=95;break;}else{label=94;break;}
 case 94: 
 var $258=HEAP32[(($3)>>2)];
 var $259=((($258)-(1))|0);
 HEAP32[(($3)>>2)]=$259;
 label=95;break;
 case 95: 
 if($58){label=99;break;}else{label=96;break;}
 case 96: 
 if($256){label=100;break;}else{label=97;break;}
 case 97: 
 var $263=HEAP32[(($3)>>2)];
 var $264=((($263)-(1))|0);
 HEAP32[(($3)>>2)]=$264;
 var $265=($gotrad_0_i|0)==0;
 if($265){label=100;break;}else{label=98;break;}
 case 98: 
 var $267=((($263)-(2))|0);
 HEAP32[(($3)>>2)]=$267;
 label=100;break;
 case 99: 
 ___shlim($f,0);
 label=100;break;
 case 100: 
 var $269=($sign_0|0);
 var $270=($269)*(0);
 var $_0=$270;label=271;break;
 case 101: 
 var $272=($gotrad_0_i|0)==0;
 var $dc_0_rp_1_i$0=($272?$dc_0_i$0:$rp_1_i$0);
 var $dc_0_rp_1_i$1=($272?$dc_0_i$1:$rp_1_i$1);
 var $$etemp$4$0=8;
 var $$etemp$4$1=0;
 var $273=(($dc_0_i$1|0) < ($$etemp$4$1|0)) | (((($dc_0_i$1|0) == ($$etemp$4$1|0) & ($dc_0_i$0>>>0) <  ($$etemp$4$0>>>0))));
 if($273){var $x_3105_i=$x_0_i;var $dc_2106_i$1=$dc_0_i$1;var $dc_2106_i$0=$dc_0_i$0;label=102;break;}else{var $x_3_lcssa_i=$x_0_i;label=103;break;}
 case 102: 
 var $dc_2106_i$0;
 var $dc_2106_i$1;
 var $x_3105_i;
 var $274=$x_3105_i<<4;
 var $$etemp$5$0=1;
 var $$etemp$5$1=0;
 var $275$0=_i64Add($dc_2106_i$0,$dc_2106_i$1,$$etemp$5$0,$$etemp$5$1);var $275$1=tempRet0;
 var $$etemp$6$0=8;
 var $$etemp$6$1=0;
 var $276=(($275$1|0) < ($$etemp$6$1|0)) | (((($275$1|0) == ($$etemp$6$1|0) & ($275$0>>>0) <  ($$etemp$6$0>>>0))));
 if($276){var $x_3105_i=$274;var $dc_2106_i$1=$275$1;var $dc_2106_i$0=$275$0;label=102;break;}else{var $x_3_lcssa_i=$274;label=103;break;}
 case 103: 
 var $x_3_lcssa_i;
 var $277=$c_2_lcssa_i|32;
 var $278=($277|0)==112;
 if($278){label=104;break;}else{label=109;break;}
 case 104: 
 var $280$0=_scanexp($f,$pok);
 var $280$1=tempRet0;
 var $$etemp$7$0=0;
 var $$etemp$7$1=-2147483648;
 var $281=(($280$0|0) == ($$etemp$7$0|0)) & (($280$1|0) == ($$etemp$7$1|0));
 if($281){label=105;break;}else{var $e2_0_i$1=$280$1;var $e2_0_i$0=$280$0;label=111;break;}
 case 105: 
 if($58){label=108;break;}else{label=106;break;}
 case 106: 
 var $284=HEAP32[(($4)>>2)];
 var $285=($284|0)==0;
 if($285){var $e2_0_i$1=0;var $e2_0_i$0=0;label=111;break;}else{label=107;break;}
 case 107: 
 var $287=HEAP32[(($3)>>2)];
 var $288=((($287)-(1))|0);
 HEAP32[(($3)>>2)]=$288;
 var $e2_0_i$1=0;var $e2_0_i$0=0;label=111;break;
 case 108: 
 ___shlim($f,0);
 var $_0=0;label=271;break;
 case 109: 
 var $291=HEAP32[(($4)>>2)];
 var $292=($291|0)==0;
 if($292){var $e2_0_i$1=0;var $e2_0_i$0=0;label=111;break;}else{label=110;break;}
 case 110: 
 var $294=HEAP32[(($3)>>2)];
 var $295=((($294)-(1))|0);
 HEAP32[(($3)>>2)]=$295;
 var $e2_0_i$1=0;var $e2_0_i$0=0;label=111;break;
 case 111: 
 var $e2_0_i$0;
 var $e2_0_i$1;
 var $297$0=($dc_0_rp_1_i$0<<2)|(0>>>30);
 var $297$1=($dc_0_rp_1_i$1<<2)|($dc_0_rp_1_i$0>>>30);
 var $$etemp$8$0=-32;
 var $$etemp$8$1=-1;
 var $298$0=_i64Add($297$0,$297$1,$$etemp$8$0,$$etemp$8$1);var $298$1=tempRet0;
 var $299$0=_i64Add($298$0,$298$1,$e2_0_i$0,$e2_0_i$1);var $299$1=tempRet0;
 var $300=($x_3_lcssa_i|0)==0;
 if($300){label=112;break;}else{label=113;break;}
 case 112: 
 var $302=($sign_0|0);
 var $303=($302)*(0);
 var $_0=$303;label=271;break;
 case 113: 
 var $305=(((-$emin_0_ph))|0);
 var $306$0=$305;
 var $306$1=0;
 var $307=(($299$1|0) > ($306$1|0)) | (((($299$1|0) == ($306$1|0) & ($299$0>>>0) >  ($306$0>>>0))));
 if($307){label=114;break;}else{label=115;break;}
 case 114: 
 var $309=___errno_location();
 HEAP32[(($309)>>2)]=34;
 var $310=($sign_0|0);
 var $311=($310)*((1.7976931348623157e+308));
 var $312=($311)*((1.7976931348623157e+308));
 var $_0=$312;label=271;break;
 case 115: 
 var $314=((($emin_0_ph)-(106))|0);
 var $315$0=$314;
 var $315$1=((((($314|0)<0))|0)?-1:0);
 var $316=(($299$1|0) < ($315$1|0)) | (((($299$1|0) == ($315$1|0) & ($299$0>>>0) <  ($315$0>>>0))));
 if($316){label=117;break;}else{label=116;break;}
 case 116: 
 var $317=($x_3_lcssa_i|0)>-1;
 if($317){var $x_4100_i=$x_3_lcssa_i;var $y_3101_i=$y_0_i;var $e2_1102_i$1=$299$1;var $e2_1102_i$0=$299$0;label=118;break;}else{var $x_4_lcssa_i=$x_3_lcssa_i;var $y_3_lcssa_i=$y_0_i;var $e2_1_lcssa_i$1=$299$1;var $e2_1_lcssa_i$0=$299$0;label=121;break;}
 case 117: 
 var $319=___errno_location();
 HEAP32[(($319)>>2)]=34;
 var $320=($sign_0|0);
 var $321=($320)*((2.2250738585072014e-308));
 var $322=($321)*((2.2250738585072014e-308));
 var $_0=$322;label=271;break;
 case 118: 
 var $e2_1102_i$0;
 var $e2_1102_i$1;
 var $y_3101_i;
 var $x_4100_i;
 var $323=$y_3101_i<(0.5);
 var $324=$x_4100_i<<1;
 if($323){var $_pn_i=$y_3101_i;var $x_5_i=$324;label=120;break;}else{label=119;break;}
 case 119: 
 var $326=$324|1;
 var $327=($y_3101_i)-(1);
 var $_pn_i=$327;var $x_5_i=$326;label=120;break;
 case 120: 
 var $x_5_i;
 var $_pn_i;
 var $y_4_i=($y_3101_i)+($_pn_i);
 var $$etemp$9$0=-1;
 var $$etemp$9$1=-1;
 var $329$0=_i64Add($e2_1102_i$0,$e2_1102_i$1,$$etemp$9$0,$$etemp$9$1);var $329$1=tempRet0;
 var $330=($x_5_i|0)>-1;
 if($330){var $x_4100_i=$x_5_i;var $y_3101_i=$y_4_i;var $e2_1102_i$1=$329$1;var $e2_1102_i$0=$329$0;label=118;break;}else{var $x_4_lcssa_i=$x_5_i;var $y_3_lcssa_i=$y_4_i;var $e2_1_lcssa_i$1=$329$1;var $e2_1_lcssa_i$0=$329$0;label=121;break;}
 case 121: 
 var $e2_1_lcssa_i$0;
 var $e2_1_lcssa_i$1;
 var $y_3_lcssa_i;
 var $x_4_lcssa_i;
 var $331$0=$bits_0_ph;
 var $331$1=0;
 var $332$0=$emin_0_ph;
 var $332$1=((((($emin_0_ph|0)<0))|0)?-1:0);
 var $$etemp$10$0=32;
 var $$etemp$10$1=0;
 var $333$0=_i64Subtract($$etemp$10$0,$$etemp$10$1,$332$0,$332$1);var $333$1=tempRet0;
 var $334$0=_i64Add($e2_1_lcssa_i$0,$e2_1_lcssa_i$1,$333$0,$333$1);var $334$1=tempRet0;
 var $335=(($331$1|0) > ($334$1|0)) | (((($331$1|0) == ($334$1|0) & ($331$0>>>0) >  ($334$0>>>0))));
 if($335){label=122;break;}else{var $_094_i=$bits_0_ph;label=123;break;}
 case 122: 
 var $337$0=$334$0;
 var $337=$337$0;
 var $338=($337|0)<0;
 var $__i=($338?0:$337);
 var $_094_i=$__i;label=123;break;
 case 123: 
 var $_094_i;
 var $340=($_094_i|0)<53;
 if($340){label=125;break;}else{label=124;break;}
 case 124: 
 var $_pre_i=($sign_0|0);
 var $y_5_i=$y_3_lcssa_i;var $x_6_i=$x_4_lcssa_i;var $bias_099_i=0;var $_pre_phi_i=$_pre_i;label=127;break;
 case 125: 
 var $342=(((84)-($_094_i))|0);
 var $343=_scalbn(1,$342);
 var $344=($sign_0|0);
 var $345=_copysign($343,$344);
 var $346=($_094_i|0)<32;
 var $347=$y_3_lcssa_i!=0;
 var $or_cond96_i=$346&$347;
 if($or_cond96_i){label=126;break;}else{var $y_5_i=$y_3_lcssa_i;var $x_6_i=$x_4_lcssa_i;var $bias_099_i=$345;var $_pre_phi_i=$344;label=127;break;}
 case 126: 
 var $349=$x_4_lcssa_i&1;
 var $350=($349|0)==0;
 var $351=$349^1;
 var $_x_4_i=((($351)+($x_4_lcssa_i))|0);
 var $_y_3_i=($350?0:$y_3_lcssa_i);
 var $y_5_i=$_y_3_i;var $x_6_i=$_x_4_i;var $bias_099_i=$345;var $_pre_phi_i=$344;label=127;break;
 case 127: 
 var $_pre_phi_i;
 var $bias_099_i;
 var $x_6_i;
 var $y_5_i;
 var $352=($x_6_i>>>0);
 var $353=($_pre_phi_i)*($352);
 var $354=($bias_099_i)+($353);
 var $355=($_pre_phi_i)*($y_5_i);
 var $356=($355)+($354);
 var $357=($356)-($bias_099_i);
 var $358=$357!=0;
 if($358){label=129;break;}else{label=128;break;}
 case 128: 
 var $360=___errno_location();
 HEAP32[(($360)>>2)]=34;
 label=129;break;
 case 129: 
 var $362$0=$e2_1_lcssa_i$0;
 var $362=$362$0;
 var $363=_scalbnl($357,$362);
 var $_0=$363;label=271;break;
 case 130: 
 var $365=HEAP32[(($4)>>2)];
 var $366=($365|0)==0;
 if($366){var $c_6=48;label=132;break;}else{label=131;break;}
 case 131: 
 var $368=HEAP32[(($3)>>2)];
 var $369=((($368)-(1))|0);
 HEAP32[(($3)>>2)]=$369;
 var $c_6=48;label=132;break;
 case 132: 
 var $c_6;
 var $371=$x_i;
 var $sum_i=((($emin_0_ph)+($bits_0_ph))|0);
 var $372=(((3)-($sum_i))|0);
 var $_0234_i=$c_6;var $gotdig_0_i90=0;label=133;break;
 case 133: 
 var $gotdig_0_i90;
 var $_0234_i;
 if(($_0234_i|0)==48){ label=134;break;}else if(($_0234_i|0)==46){ label=137;break;}else{var $_2_i=$_0234_i;var $gotrad_0_i93=0;var $gotdig_2_i92=$gotdig_0_i90;var $lrp_1_i$1=0;var $lrp_1_i$0=0;label=146;break;}
 case 134: 
 var $374=HEAP32[(($3)>>2)];
 var $375=HEAP32[(($4)>>2)];
 var $376=($374>>>0)<($375>>>0);
 if($376){label=135;break;}else{label=136;break;}
 case 135: 
 var $378=(($374+1)|0);
 HEAP32[(($3)>>2)]=$378;
 var $379=HEAP8[($374)];
 var $380=($379&255);
 var $_0234_i=$380;var $gotdig_0_i90=1;label=133;break;
 case 136: 
 var $382=___shgetc($f);
 var $_0234_i=$382;var $gotdig_0_i90=1;label=133;break;
 case 137: 
 var $384=HEAP32[(($3)>>2)];
 var $385=HEAP32[(($4)>>2)];
 var $386=($384>>>0)<($385>>>0);
 if($386){label=138;break;}else{label=139;break;}
 case 138: 
 var $388=(($384+1)|0);
 HEAP32[(($3)>>2)]=$388;
 var $389=HEAP8[($384)];
 var $390=($389&255);
 var $_1_ph_i=$390;label=140;break;
 case 139: 
 var $392=___shgetc($f);
 var $_1_ph_i=$392;label=140;break;
 case 140: 
 var $_1_ph_i;
 var $393=($_1_ph_i|0)==48;
 if($393){var $lrp_0336_i$1=-1;var $lrp_0336_i$0=-1;label=141;break;}else{var $_2_i=$_1_ph_i;var $gotrad_0_i93=1;var $gotdig_2_i92=$gotdig_0_i90;var $lrp_1_i$1=0;var $lrp_1_i$0=0;label=146;break;}
 case 141: 
 var $lrp_0336_i$0;
 var $lrp_0336_i$1;
 var $394=HEAP32[(($3)>>2)];
 var $395=HEAP32[(($4)>>2)];
 var $396=($394>>>0)<($395>>>0);
 if($396){label=142;break;}else{label=143;break;}
 case 142: 
 var $398=(($394+1)|0);
 HEAP32[(($3)>>2)]=$398;
 var $399=HEAP8[($394)];
 var $400=($399&255);
 var $_1_be_i=$400;label=144;break;
 case 143: 
 var $402=___shgetc($f);
 var $_1_be_i=$402;label=144;break;
 case 144: 
 var $_1_be_i;
 var $403=($_1_be_i|0)==48;
 if($403){label=145;break;}else{var $_2_i=$_1_be_i;var $gotrad_0_i93=1;var $gotdig_2_i92=1;var $lrp_1_i$1=$lrp_0336_i$1;var $lrp_1_i$0=$lrp_0336_i$0;label=146;break;}
 case 145: 
 var $$etemp$11$0=-1;
 var $$etemp$11$1=-1;
 var $phitmp_i91$0=_i64Add($lrp_0336_i$0,$lrp_0336_i$1,$$etemp$11$0,$$etemp$11$1);var $phitmp_i91$1=tempRet0;
 var $lrp_0336_i$1=$phitmp_i91$1;var $lrp_0336_i$0=$phitmp_i91$0;label=141;break;
 case 146: 
 var $lrp_1_i$0;
 var $lrp_1_i$1;
 var $gotdig_2_i92;
 var $gotrad_0_i93;
 var $_2_i;
 var $404=(($x_i)|0);
 HEAP32[(($404)>>2)]=0;
 var $405=((($_2_i)-(48))|0);
 var $406=($405>>>0)<10;
 var $407=($_2_i|0)==46;
 var $or_cond7315_i=$406|$407;
 if($or_cond7315_i){label=147;break;}else{var $lrp_2_lcssa_i$1=$lrp_1_i$1;var $lrp_2_lcssa_i$0=$lrp_1_i$0;var $dc_0_lcssa_i$1=0;var $dc_0_lcssa_i$0=0;var $lnz_0_lcssa_i=0;var $gotdig_3_lcssa_i=$gotdig_2_i92;var $gotrad_1_lcssa_i=$gotrad_0_i93;var $k_0_lcssa_i=0;var $j_0_lcssa_i=0;var $_3_lcssa_i=$_2_i;label=160;break;}
 case 147: 
 var $408=(($x_i+496)|0);
 var $lrp_2316_i$1=$lrp_1_i$1;var $lrp_2316_i$0=$lrp_1_i$0;var $dc_0317_i$1=0;var $dc_0317_i$0=0;var $lnz_0318_i=0;var $gotdig_3319_i=$gotdig_2_i92;var $gotrad_1320_i=$gotrad_0_i93;var $k_0321_i=0;var $j_0322_i=0;var $_3323_i=$_2_i;var $410=$405;var $409=$407;label=148;break;
 case 148: 
 var $409;
 var $410;
 var $_3323_i;
 var $j_0322_i;
 var $k_0321_i;
 var $gotrad_1320_i;
 var $gotdig_3319_i;
 var $lnz_0318_i;
 var $dc_0317_i$0;
 var $dc_0317_i$1;
 var $lrp_2316_i$0;
 var $lrp_2316_i$1;
 if($409){label=149;break;}else{label=150;break;}
 case 149: 
 var $cond_i=($gotrad_1320_i|0)==0;
 if($cond_i){var $j_2_i=$j_0322_i;var $k_2_i=$k_0321_i;var $gotrad_2_i=1;var $gotdig_4_i=$gotdig_3319_i;var $lnz_2_i=$lnz_0318_i;var $dc_1_i96$1=$dc_0317_i$1;var $dc_1_i96$0=$dc_0317_i$0;var $lrp_3_i$1=$dc_0317_i$1;var $lrp_3_i$0=$dc_0317_i$0;label=156;break;}else{var $lrp_4_i$1=$lrp_2316_i$1;var $lrp_4_i$0=$lrp_2316_i$0;var $dc_0303_i$1=$dc_0317_i$1;var $dc_0303_i$0=$dc_0317_i$0;var $lnz_0305_i=$lnz_0318_i;var $gotdig_3307_i=$gotdig_3319_i;var $k_0310_i=$k_0321_i;var $j_0312_i=$j_0322_i;var $_3314_i=$_3323_i;label=161;break;}
 case 150: 
 var $413=($k_0321_i|0)<125;
 var $$etemp$12$0=1;
 var $$etemp$12$1=0;
 var $414$0=_i64Add($dc_0317_i$0,$dc_0317_i$1,$$etemp$12$0,$$etemp$12$1);var $414$1=tempRet0;
 var $415=($_3323_i|0)!=48;
 if($413){label=151;break;}else{label=154;break;}
 case 151: 
 var $417$0=$414$0;
 var $417=$417$0;
 var $_lnz_0_i=($415?$417:$lnz_0318_i);
 var $418=($j_0322_i|0)==0;
 var $419=(($x_i+($k_0321_i<<2))|0);
 if($418){var $storemerge_i=$410;label=153;break;}else{label=152;break;}
 case 152: 
 var $421=HEAP32[(($419)>>2)];
 var $422=((($421)*(10))&-1);
 var $423=((($_3323_i)-(48))|0);
 var $424=((($423)+($422))|0);
 var $storemerge_i=$424;label=153;break;
 case 153: 
 var $storemerge_i;
 HEAP32[(($419)>>2)]=$storemerge_i;
 var $426=((($j_0322_i)+(1))|0);
 var $427=($426|0)==9;
 var $428=($427&1);
 var $_k_0_i=((($428)+($k_0321_i))|0);
 var $__i95=($427?0:$426);
 var $j_2_i=$__i95;var $k_2_i=$_k_0_i;var $gotrad_2_i=$gotrad_1320_i;var $gotdig_4_i=1;var $lnz_2_i=$_lnz_0_i;var $dc_1_i96$1=$414$1;var $dc_1_i96$0=$414$0;var $lrp_3_i$1=$lrp_2316_i$1;var $lrp_3_i$0=$lrp_2316_i$0;label=156;break;
 case 154: 
 if($415){label=155;break;}else{var $j_2_i=$j_0322_i;var $k_2_i=$k_0321_i;var $gotrad_2_i=$gotrad_1320_i;var $gotdig_4_i=$gotdig_3319_i;var $lnz_2_i=$lnz_0318_i;var $dc_1_i96$1=$414$1;var $dc_1_i96$0=$414$0;var $lrp_3_i$1=$lrp_2316_i$1;var $lrp_3_i$0=$lrp_2316_i$0;label=156;break;}
 case 155: 
 var $431=HEAP32[(($408)>>2)];
 var $432=$431|1;
 HEAP32[(($408)>>2)]=$432;
 var $j_2_i=$j_0322_i;var $k_2_i=$k_0321_i;var $gotrad_2_i=$gotrad_1320_i;var $gotdig_4_i=$gotdig_3319_i;var $lnz_2_i=$lnz_0318_i;var $dc_1_i96$1=$414$1;var $dc_1_i96$0=$414$0;var $lrp_3_i$1=$lrp_2316_i$1;var $lrp_3_i$0=$lrp_2316_i$0;label=156;break;
 case 156: 
 var $lrp_3_i$0;
 var $lrp_3_i$1;
 var $dc_1_i96$0;
 var $dc_1_i96$1;
 var $lnz_2_i;
 var $gotdig_4_i;
 var $gotrad_2_i;
 var $k_2_i;
 var $j_2_i;
 var $433=HEAP32[(($3)>>2)];
 var $434=HEAP32[(($4)>>2)];
 var $435=($433>>>0)<($434>>>0);
 if($435){label=157;break;}else{label=158;break;}
 case 157: 
 var $437=(($433+1)|0);
 HEAP32[(($3)>>2)]=$437;
 var $438=HEAP8[($433)];
 var $439=($438&255);
 var $_3_be_i=$439;label=159;break;
 case 158: 
 var $441=___shgetc($f);
 var $_3_be_i=$441;label=159;break;
 case 159: 
 var $_3_be_i;
 var $442=((($_3_be_i)-(48))|0);
 var $443=($442>>>0)<10;
 var $444=($_3_be_i|0)==46;
 var $or_cond7_i=$443|$444;
 if($or_cond7_i){var $lrp_2316_i$1=$lrp_3_i$1;var $lrp_2316_i$0=$lrp_3_i$0;var $dc_0317_i$1=$dc_1_i96$1;var $dc_0317_i$0=$dc_1_i96$0;var $lnz_0318_i=$lnz_2_i;var $gotdig_3319_i=$gotdig_4_i;var $gotrad_1320_i=$gotrad_2_i;var $k_0321_i=$k_2_i;var $j_0322_i=$j_2_i;var $_3323_i=$_3_be_i;var $410=$442;var $409=$444;label=148;break;}else{var $lrp_2_lcssa_i$1=$lrp_3_i$1;var $lrp_2_lcssa_i$0=$lrp_3_i$0;var $dc_0_lcssa_i$1=$dc_1_i96$1;var $dc_0_lcssa_i$0=$dc_1_i96$0;var $lnz_0_lcssa_i=$lnz_2_i;var $gotdig_3_lcssa_i=$gotdig_4_i;var $gotrad_1_lcssa_i=$gotrad_2_i;var $k_0_lcssa_i=$k_2_i;var $j_0_lcssa_i=$j_2_i;var $_3_lcssa_i=$_3_be_i;label=160;break;}
 case 160: 
 var $_3_lcssa_i;
 var $j_0_lcssa_i;
 var $k_0_lcssa_i;
 var $gotrad_1_lcssa_i;
 var $gotdig_3_lcssa_i;
 var $lnz_0_lcssa_i;
 var $dc_0_lcssa_i$0;
 var $dc_0_lcssa_i$1;
 var $lrp_2_lcssa_i$0;
 var $lrp_2_lcssa_i$1;
 var $445=($gotrad_1_lcssa_i|0)==0;
 var $dc_0_lrp_2_i$0=($445?$dc_0_lcssa_i$0:$lrp_2_lcssa_i$0);
 var $dc_0_lrp_2_i$1=($445?$dc_0_lcssa_i$1:$lrp_2_lcssa_i$1);
 var $lrp_4_i$1=$dc_0_lrp_2_i$1;var $lrp_4_i$0=$dc_0_lrp_2_i$0;var $dc_0303_i$1=$dc_0_lcssa_i$1;var $dc_0303_i$0=$dc_0_lcssa_i$0;var $lnz_0305_i=$lnz_0_lcssa_i;var $gotdig_3307_i=$gotdig_3_lcssa_i;var $k_0310_i=$k_0_lcssa_i;var $j_0312_i=$j_0_lcssa_i;var $_3314_i=$_3_lcssa_i;label=161;break;
 case 161: 
 var $_3314_i;
 var $j_0312_i;
 var $k_0310_i;
 var $gotdig_3307_i;
 var $lnz_0305_i;
 var $dc_0303_i$0;
 var $dc_0303_i$1;
 var $lrp_4_i$0;
 var $lrp_4_i$1;
 var $446=($gotdig_3307_i|0)!=0;
 if($446){label=162;break;}else{label=169;break;}
 case 162: 
 var $448=$_3314_i|32;
 var $449=($448|0)==101;
 if($449){label=163;break;}else{label=169;break;}
 case 163: 
 var $451$0=_scanexp($f,$pok);
 var $451$1=tempRet0;
 var $$etemp$13$0=0;
 var $$etemp$13$1=-2147483648;
 var $452=(($451$0|0) == ($$etemp$13$0|0)) & (($451$1|0) == ($$etemp$13$1|0));
 if($452){label=164;break;}else{var $e10_0_i$1=$451$1;var $e10_0_i$0=$451$0;label=168;break;}
 case 164: 
 if($58){label=167;break;}else{label=165;break;}
 case 165: 
 var $455=HEAP32[(($4)>>2)];
 var $456=($455|0)==0;
 if($456){var $e10_0_i$1=0;var $e10_0_i$0=0;label=168;break;}else{label=166;break;}
 case 166: 
 var $458=HEAP32[(($3)>>2)];
 var $459=((($458)-(1))|0);
 HEAP32[(($3)>>2)]=$459;
 var $e10_0_i$1=0;var $e10_0_i$0=0;label=168;break;
 case 167: 
 ___shlim($f,0);
 var $_0=0;label=271;break;
 case 168: 
 var $e10_0_i$0;
 var $e10_0_i$1;
 var $462$0=_i64Add($e10_0_i$0,$e10_0_i$1,$lrp_4_i$0,$lrp_4_i$1);var $462$1=tempRet0;
 var $lrp_5_i$1=$462$1;var $lrp_5_i$0=$462$0;label=172;break;
 case 169: 
 var $464=($_3314_i|0)>-1;
 if($464){label=170;break;}else{var $lrp_5_i$1=$lrp_4_i$1;var $lrp_5_i$0=$lrp_4_i$0;label=172;break;}
 case 170: 
 var $466=HEAP32[(($4)>>2)];
 var $467=($466|0)==0;
 if($467){var $lrp_5_i$1=$lrp_4_i$1;var $lrp_5_i$0=$lrp_4_i$0;label=172;break;}else{label=171;break;}
 case 171: 
 var $469=HEAP32[(($3)>>2)];
 var $470=((($469)-(1))|0);
 HEAP32[(($3)>>2)]=$470;
 var $lrp_5_i$1=$lrp_4_i$1;var $lrp_5_i$0=$lrp_4_i$0;label=172;break;
 case 172: 
 var $lrp_5_i$0;
 var $lrp_5_i$1;
 if($446){label=174;break;}else{label=173;break;}
 case 173: 
 var $473=___errno_location();
 HEAP32[(($473)>>2)]=22;
 ___shlim($f,0);
 var $_0=0;label=271;break;
 case 174: 
 var $475=HEAP32[(($404)>>2)];
 var $476=($475|0)==0;
 if($476){label=175;break;}else{label=176;break;}
 case 175: 
 var $478=($sign_0|0);
 var $479=($478)*(0);
 var $_0=$479;label=271;break;
 case 176: 
 var $481=(($lrp_5_i$0|0) == ($dc_0303_i$0|0)) & (($lrp_5_i$1|0) == ($dc_0303_i$1|0));
 var $$etemp$14$0=10;
 var $$etemp$14$1=0;
 var $482=(($dc_0303_i$1|0) < ($$etemp$14$1|0)) | (((($dc_0303_i$1|0) == ($$etemp$14$1|0) & ($dc_0303_i$0>>>0) <  ($$etemp$14$0>>>0))));
 var $or_cond_i97=$481&$482;
 if($or_cond_i97){label=177;break;}else{label=180;break;}
 case 177: 
 var $484=($bits_0_ph>>>0)>30;
 if($484){label=179;break;}else{label=178;break;}
 case 178: 
 var $486=$475>>>($bits_0_ph>>>0);
 var $487=($486|0)==0;
 if($487){label=179;break;}else{label=180;break;}
 case 179: 
 var $489=($sign_0|0);
 var $490=($475>>>0);
 var $491=($489)*($490);
 var $_0=$491;label=271;break;
 case 180: 
 var $493=(((($emin_0_ph|0))/(-2))&-1);
 var $494$0=$493;
 var $494$1=((((($493|0)<0))|0)?-1:0);
 var $495=(($lrp_5_i$1|0) > ($494$1|0)) | (((($lrp_5_i$1|0) == ($494$1|0) & ($lrp_5_i$0>>>0) >  ($494$0>>>0))));
 if($495){label=181;break;}else{label=182;break;}
 case 181: 
 var $497=___errno_location();
 HEAP32[(($497)>>2)]=34;
 var $498=($sign_0|0);
 var $499=($498)*((1.7976931348623157e+308));
 var $500=($499)*((1.7976931348623157e+308));
 var $_0=$500;label=271;break;
 case 182: 
 var $502=((($emin_0_ph)-(106))|0);
 var $503$0=$502;
 var $503$1=((((($502|0)<0))|0)?-1:0);
 var $504=(($lrp_5_i$1|0) < ($503$1|0)) | (((($lrp_5_i$1|0) == ($503$1|0) & ($lrp_5_i$0>>>0) <  ($503$0>>>0))));
 if($504){label=183;break;}else{label=184;break;}
 case 183: 
 var $506=___errno_location();
 HEAP32[(($506)>>2)]=34;
 var $507=($sign_0|0);
 var $508=($507)*((2.2250738585072014e-308));
 var $509=($508)*((2.2250738585072014e-308));
 var $_0=$509;label=271;break;
 case 184: 
 var $511=($j_0312_i|0)==0;
 if($511){var $k_3_i=$k_0310_i;label=190;break;}else{label=185;break;}
 case 185: 
 var $512=($j_0312_i|0)<9;
 if($512){label=186;break;}else{label=189;break;}
 case 186: 
 var $513=(($x_i+($k_0310_i<<2))|0);
 var $_promoted_i=HEAP32[(($513)>>2)];
 var $j_3297_i=$j_0312_i;var $515=$_promoted_i;label=187;break;
 case 187: 
 var $515;
 var $j_3297_i;
 var $516=((($515)*(10))&-1);
 var $517=((($j_3297_i)+(1))|0);
 var $518=($517|0)<9;
 if($518){var $j_3297_i=$517;var $515=$516;label=187;break;}else{label=188;break;}
 case 188: 
 HEAP32[(($513)>>2)]=$516;
 label=189;break;
 case 189: 
 var $520=((($k_0310_i)+(1))|0);
 var $k_3_i=$520;label=190;break;
 case 190: 
 var $k_3_i;
 var $522$0=$lrp_5_i$0;
 var $522=$522$0;
 var $523=($lnz_0305_i|0)<9;
 if($523){label=191;break;}else{label=199;break;}
 case 191: 
 var $525=($lnz_0305_i|0)<=($522|0);
 var $526=($522|0)<18;
 var $or_cond3_i=$525&$526;
 if($or_cond3_i){label=192;break;}else{label=199;break;}
 case 192: 
 var $528=($522|0)==9;
 if($528){label=193;break;}else{label=194;break;}
 case 193: 
 var $530=($sign_0|0);
 var $531=HEAP32[(($404)>>2)];
 var $532=($531>>>0);
 var $533=($530)*($532);
 var $_0=$533;label=271;break;
 case 194: 
 var $535=($522|0)<9;
 if($535){label=195;break;}else{label=196;break;}
 case 195: 
 var $537=($sign_0|0);
 var $538=HEAP32[(($404)>>2)];
 var $539=($538>>>0);
 var $540=($537)*($539);
 var $541=(((8)-($522))|0);
 var $542=((2152+($541<<2))|0);
 var $543=HEAP32[(($542)>>2)];
 var $544=($543|0);
 var $545=($540)/($544);
 var $_0=$545;label=271;break;
 case 196: 
 var $547=((($522)*(-3))&-1);
 var $_neg247_i=((($bits_0_ph)+(27))|0);
 var $548=((($_neg247_i)+($547))|0);
 var $549=($548|0)>30;
 var $_pre_i98=HEAP32[(($404)>>2)];
 if($549){label=198;break;}else{label=197;break;}
 case 197: 
 var $551=$_pre_i98>>>($548>>>0);
 var $552=($551|0)==0;
 if($552){label=198;break;}else{label=199;break;}
 case 198: 
 var $553=($sign_0|0);
 var $554=($_pre_i98>>>0);
 var $555=($553)*($554);
 var $556=((($522)-(10))|0);
 var $557=((2152+($556<<2))|0);
 var $558=HEAP32[(($557)>>2)];
 var $559=($558|0);
 var $560=($555)*($559);
 var $_0=$560;label=271;break;
 case 199: 
 var $562=(((($522|0))%(9))&-1);
 var $563=($562|0)==0;
 if($563){var $a_2_ph266_i=0;var $z_1_ph265_i=$k_3_i;var $e2_0_ph_i=0;var $rp_2_ph264_i=$522;label=208;break;}else{label=200;break;}
 case 200: 
 var $565=($522|0)>-1;
 var $566=((($562)+(9))|0);
 var $567=($565?$562:$566);
 var $568=(((8)-($567))|0);
 var $569=((2152+($568<<2))|0);
 var $570=HEAP32[(($569)>>2)];
 var $571=($k_3_i|0)==0;
 if($571){var $z_0_i=0;var $a_0_lcssa387_i=0;var $rp_0_lcssa388_i=$522;label=207;break;}else{label=201;break;}
 case 201: 
 var $572=(((1000000000)/(($570|0)))&-1);
 var $rp_0286_i=$522;var $a_0287_i=0;var $k_4288_i=0;var $carry_0289_i=0;label=202;break;
 case 202: 
 var $carry_0289_i;
 var $k_4288_i;
 var $a_0287_i;
 var $rp_0286_i;
 var $573=(($x_i+($k_4288_i<<2))|0);
 var $574=HEAP32[(($573)>>2)];
 var $575=(((($574>>>0))%(($570>>>0)))&-1);
 var $576=(((($574>>>0))/(($570>>>0)))&-1);
 var $577=((($576)+($carry_0289_i))|0);
 HEAP32[(($573)>>2)]=$577;
 var $578=(Math_imul($575,$572)|0);
 var $579=($k_4288_i|0)==($a_0287_i|0);
 var $580=($577|0)==0;
 var $or_cond237_i=$579&$580;
 var $581=((($k_4288_i)+(1))|0);
 if($or_cond237_i){label=203;break;}else{var $a_1_i=$a_0287_i;var $rp_1_i99=$rp_0286_i;label=204;break;}
 case 203: 
 var $583=$581&127;
 var $584=((($rp_0286_i)-(9))|0);
 var $a_1_i=$583;var $rp_1_i99=$584;label=204;break;
 case 204: 
 var $rp_1_i99;
 var $a_1_i;
 var $585=($581|0)==($k_3_i|0);
 if($585){label=205;break;}else{var $rp_0286_i=$rp_1_i99;var $a_0287_i=$a_1_i;var $k_4288_i=$581;var $carry_0289_i=$578;label=202;break;}
 case 205: 
 var $586=($578|0)==0;
 if($586){var $z_0_i=$k_3_i;var $a_0_lcssa387_i=$a_1_i;var $rp_0_lcssa388_i=$rp_1_i99;label=207;break;}else{label=206;break;}
 case 206: 
 var $588=((($k_3_i)+(1))|0);
 var $589=(($x_i+($k_3_i<<2))|0);
 HEAP32[(($589)>>2)]=$578;
 var $z_0_i=$588;var $a_0_lcssa387_i=$a_1_i;var $rp_0_lcssa388_i=$rp_1_i99;label=207;break;
 case 207: 
 var $rp_0_lcssa388_i;
 var $a_0_lcssa387_i;
 var $z_0_i;
 var $590=(((9)-($567))|0);
 var $591=((($590)+($rp_0_lcssa388_i))|0);
 var $a_2_ph266_i=$a_0_lcssa387_i;var $z_1_ph265_i=$z_0_i;var $e2_0_ph_i=0;var $rp_2_ph264_i=$591;label=208;break;
 case 208: 
 var $rp_2_ph264_i;
 var $e2_0_ph_i;
 var $z_1_ph265_i;
 var $a_2_ph266_i;
 var $592=($rp_2_ph264_i|0)<18;
 var $593=(($x_i+($a_2_ph266_i<<2))|0);
 if($592){var $z_1_us_i=$z_1_ph265_i;var $e2_0_us_i=$e2_0_ph_i;label=210;break;}else{label=209;break;}
 case 209: 
 var $594=($rp_2_ph264_i|0)==18;
 if($594){var $z_1_us271_i=$z_1_ph265_i;var $e2_0_us270_i=$e2_0_ph_i;label=217;break;}else{var $a_3_ph_i=$a_2_ph266_i;var $z_5_ph_i=$z_1_ph265_i;var $e2_1_ph_i=$e2_0_ph_i;var $rp_3_ph259_i=$rp_2_ph264_i;label=241;break;}
 case 210: 
 var $e2_0_us_i;
 var $z_1_us_i;
 var $595=((($z_1_us_i)+(127))|0);
 var $carry1_0_us_i=0;var $k_5_in_us_i=$595;var $z_2_us_i=$z_1_us_i;label=211;break;
 case 211: 
 var $z_2_us_i;
 var $k_5_in_us_i;
 var $carry1_0_us_i;
 var $k_5_us_i=$k_5_in_us_i&127;
 var $597=(($x_i+($k_5_us_i<<2))|0);
 var $598=HEAP32[(($597)>>2)];
 var $599$0=$598;
 var $599$1=0;
 var $600$0=($599$0<<29)|(0>>>3);
 var $600$1=($599$1<<29)|($599$0>>>3);
 var $601$0=$carry1_0_us_i;
 var $601$1=0;
 var $602$0=_i64Add($600$0,$600$1,$601$0,$601$1);var $602$1=tempRet0;
 var $$etemp$15$0=1000000000;
 var $$etemp$15$1=0;
 var $603=(($602$1>>>0) > ($$etemp$15$1>>>0)) | (((($602$1>>>0) == ($$etemp$15$1>>>0) & ($602$0>>>0) >  ($$etemp$15$0>>>0))));
 var $extract_t246_us_i$0=$602$0;
 var $extract_t246_us_i=$extract_t246_us_i$0;
 if($603){label=212;break;}else{var $carry1_1_us_i=0;var $_sink_off0_us_i=$extract_t246_us_i;label=213;break;}
 case 212: 
 var $$etemp$16$0=1000000000; //@line 105 "massDeallocator.cpp"
 var $$etemp$16$1=0; //@line 190 "scriptman.cpp"
 var $605$0=___udivdi3($602$0,$602$1,$$etemp$16$0,$$etemp$16$1);var $605$1=tempRet0;
 var $606$0=$605$0;
 var $606=$606$0;
 var $$etemp$17$0=1000000000;
 var $$etemp$17$1=0;
 var $607$0=___uremdi3($602$0,$602$1,$$etemp$17$0,$$etemp$17$1);var $607$1=tempRet0;
 var $extract_t_us_i$0=$607$0;
 var $extract_t_us_i=$extract_t_us_i$0;
 var $carry1_1_us_i=$606;var $_sink_off0_us_i=$extract_t_us_i;label=213;break;
 case 213: 
 var $_sink_off0_us_i;
 var $carry1_1_us_i;
 HEAP32[(($597)>>2)]=$_sink_off0_us_i;
 var $609=((($z_2_us_i)+(127))|0);
 var $610=$609&127;
 var $611=($k_5_us_i|0)!=($610|0);
 var $612=($k_5_us_i|0)==($a_2_ph266_i|0);
 var $or_cond238_us_i=$611|$612;
 if($or_cond238_us_i){var $z_3_us_i=$z_2_us_i;label=215;break;}else{label=214;break;}
 case 214: 
 var $614=($_sink_off0_us_i|0)==0;
 var $k_5_z_2_us_i=($614?$k_5_us_i:$z_2_us_i);
 var $z_3_us_i=$k_5_z_2_us_i;label=215;break;
 case 215: 
 var $z_3_us_i;
 var $616=((($k_5_us_i)-(1))|0);
 if($612){label=216;break;}else{var $carry1_0_us_i=$carry1_1_us_i;var $k_5_in_us_i=$616;var $z_2_us_i=$z_3_us_i;label=211;break;}
 case 216: 
 var $618=((($e2_0_us_i)-(29))|0);
 var $619=($carry1_1_us_i|0)==0;
 if($619){var $z_1_us_i=$z_3_us_i;var $e2_0_us_i=$618;label=210;break;}else{var $_lcssa269_i=$618;var $z_3_lcssa_lcssa_i=$z_3_us_i;var $carry1_1_lcssa_lcssa_i=$carry1_1_us_i;label=225;break;}
 case 217: 
 var $e2_0_us270_i;
 var $z_1_us271_i;
 var $620=HEAP32[(($593)>>2)];
 var $621=($620>>>0)<9007199;
 if($621){label=218;break;}else{var $a_3_ph_i=$a_2_ph266_i;var $z_5_ph_i=$z_1_us271_i;var $e2_1_ph_i=$e2_0_us270_i;var $rp_3_ph259_i=18;label=241;break;}
 case 218: 
 var $622=((($z_1_us271_i)+(127))|0);
 var $carry1_0_us275_i=0;var $k_5_in_us274_i=$622;var $z_2_us273_i=$z_1_us271_i;label=219;break;
 case 219: 
 var $z_2_us273_i;
 var $k_5_in_us274_i;
 var $carry1_0_us275_i;
 var $k_5_us276_i=$k_5_in_us274_i&127;
 var $624=(($x_i+($k_5_us276_i<<2))|0);
 var $625=HEAP32[(($624)>>2)];
 var $626$0=$625;
 var $626$1=0;
 var $627$0=($626$0<<29)|(0>>>3);
 var $627$1=($626$1<<29)|($626$0>>>3);
 var $628$0=$carry1_0_us275_i;
 var $628$1=0;
 var $629$0=_i64Add($627$0,$627$1,$628$0,$628$1);var $629$1=tempRet0;
 var $$etemp$18$0=1000000000;
 var $$etemp$18$1=0;
 var $630=(($629$1>>>0) > ($$etemp$18$1>>>0)) | (((($629$1>>>0) == ($$etemp$18$1>>>0) & ($629$0>>>0) >  ($$etemp$18$0>>>0))));
 var $extract_t246_us277_i$0=$629$0;
 var $extract_t246_us277_i=$extract_t246_us277_i$0;
 if($630){label=220;break;}else{var $carry1_1_us280_i=0;var $_sink_off0_us279_i=$extract_t246_us277_i;label=221;break;}
 case 220: 
 var $$etemp$19$0=1000000000;
 var $$etemp$19$1=0;
 var $632$0=___udivdi3($629$0,$629$1,$$etemp$19$0,$$etemp$19$1);var $632$1=tempRet0;
 var $633$0=$632$0;
 var $633=$633$0;
 var $$etemp$20$0=1000000000;
 var $$etemp$20$1=0;
 var $634$0=___uremdi3($629$0,$629$1,$$etemp$20$0,$$etemp$20$1);var $634$1=tempRet0;
 var $extract_t_us278_i$0=$634$0;
 var $extract_t_us278_i=$extract_t_us278_i$0;
 var $carry1_1_us280_i=$633;var $_sink_off0_us279_i=$extract_t_us278_i;label=221;break;
 case 221: 
 var $_sink_off0_us279_i;
 var $carry1_1_us280_i;
 HEAP32[(($624)>>2)]=$_sink_off0_us279_i;
 var $636=((($z_2_us273_i)+(127))|0);
 var $637=$636&127;
 var $638=($k_5_us276_i|0)!=($637|0);
 var $639=($k_5_us276_i|0)==($a_2_ph266_i|0);
 var $or_cond238_us281_i=$638|$639;
 if($or_cond238_us281_i){var $z_3_us283_i=$z_2_us273_i;label=223;break;}else{label=222;break;}
 case 222: 
 var $641=($_sink_off0_us279_i|0)==0;
 var $k_5_z_2_us282_i=($641?$k_5_us276_i:$z_2_us273_i);
 var $z_3_us283_i=$k_5_z_2_us282_i;label=223;break;
 case 223: 
 var $z_3_us283_i;
 var $643=((($k_5_us276_i)-(1))|0);
 if($639){label=224;break;}else{var $carry1_0_us275_i=$carry1_1_us280_i;var $k_5_in_us274_i=$643;var $z_2_us273_i=$z_3_us283_i;label=219;break;}
 case 224: 
 var $645=((($e2_0_us270_i)-(29))|0);
 var $646=($carry1_1_us280_i|0)==0;
 if($646){var $z_1_us271_i=$z_3_us283_i;var $e2_0_us270_i=$645;label=217;break;}else{var $_lcssa269_i=$645;var $z_3_lcssa_lcssa_i=$z_3_us283_i;var $carry1_1_lcssa_lcssa_i=$carry1_1_us280_i;label=225;break;}
 case 225: 
 var $carry1_1_lcssa_lcssa_i;
 var $z_3_lcssa_lcssa_i;
 var $_lcssa269_i;
 var $647=((($rp_2_ph264_i)+(9))|0);
 var $648=((($a_2_ph266_i)+(127))|0);
 var $649=$648&127;
 var $650=($649|0)==($z_3_lcssa_lcssa_i|0);
 if($650){label=226;break;}else{var $z_4_i=$z_3_lcssa_lcssa_i;label=227;break;}
 case 226: 
 var $652=((($z_3_lcssa_lcssa_i)+(127))|0);
 var $653=$652&127;
 var $654=(($x_i+($653<<2))|0);
 var $655=HEAP32[(($654)>>2)];
 var $656=((($z_3_lcssa_lcssa_i)+(126))|0);
 var $657=$656&127;
 var $658=(($x_i+($657<<2))|0);
 var $659=HEAP32[(($658)>>2)];
 var $660=$659|$655;
 HEAP32[(($658)>>2)]=$660;
 var $z_4_i=$653;label=227;break;
 case 227: 
 var $z_4_i;
 var $662=(($x_i+($649<<2))|0);
 HEAP32[(($662)>>2)]=$carry1_1_lcssa_lcssa_i;
 var $a_2_ph266_i=$649;var $z_1_ph265_i=$z_4_i;var $e2_0_ph_i=$_lcssa269_i;var $rp_2_ph264_i=$647;label=208;break;
 case 228: 
 var $e2_1_i;
 var $a_3_i;
 var $i_0_i=0;label=229;break;
 case 229: 
 var $i_0_i;
 var $664=($i_0_i|0)<2;
 if($664){label=230;break;}else{var $i_1_i=$i_0_i;label=233;break;}
 case 230: 
 var $666=((($i_0_i)+($a_3_i))|0);
 var $667=$666&127;
 var $668=($667|0)==($z_5_ph_i|0);
 if($668){var $i_1_i=2;label=233;break;}else{label=231;break;}
 case 231: 
 var $670=(($x_i+($667<<2))|0);
 var $671=HEAP32[(($670)>>2)];
 var $672=((2144+($i_0_i<<2))|0);
 var $673=HEAP32[(($672)>>2)];
 var $674=($671>>>0)<($673>>>0);
 if($674){var $i_1_i=2;label=233;break;}else{label=232;break;}
 case 232: 
 var $676=($671>>>0)>($673>>>0);
 var $677=((($i_0_i)+(1))|0);
 if($676){var $i_1_i=$i_0_i;label=233;break;}else{var $i_0_i=$677;label=229;break;}
 case 233: 
 var $i_1_i;
 var $679=($i_1_i|0)==2;
 var $or_cond239_i=$679&$710;
 if($or_cond239_i){label=234;break;}else{label=235;break;}
 case 234: 
 var $680=$a_3_i&127;
 var $681=($680|0)==($z_5_ph_i|0);
 if($681){label=244;break;}else{var $z_7_i=$z_5_ph_i;label=245;break;}
 case 235: 
 var $683=((($_240_i)+($e2_1_i))|0);
 var $684=($a_3_i|0)==($z_5_ph_i|0);
 if($684){var $a_3_i=$z_5_ph_i;var $e2_1_i=$683;label=228;break;}else{label=236;break;}
 case 236: 
 var $685=1<<$_240_i;
 var $686=((($685)-(1))|0);
 var $687=1000000000>>>($_240_i>>>0);
 var $rp_4252_i=$rp_3_i_ph;var $a_4253_i=$a_3_i;var $k_6254_i=$a_3_i;var $carry3_0256_i=0;label=237;break;
 case 237: 
 var $carry3_0256_i;
 var $k_6254_i;
 var $a_4253_i;
 var $rp_4252_i;
 var $688=(($x_i+($k_6254_i<<2))|0);
 var $689=HEAP32[(($688)>>2)];
 var $690=$689&$686;
 var $691=$689>>>($_240_i>>>0);
 var $692=((($691)+($carry3_0256_i))|0);
 HEAP32[(($688)>>2)]=$692;
 var $693=(Math_imul($690,$687)|0);
 var $694=($k_6254_i|0)==($a_4253_i|0);
 var $695=($692|0)==0;
 var $or_cond241_i=$694&$695;
 var $696=((($k_6254_i)+(1))|0);
 var $697=$696&127;
 var $698=((($rp_4252_i)-(9))|0);
 var $rp_5_i=($or_cond241_i?$698:$rp_4252_i);
 var $a_5_i=($or_cond241_i?$697:$a_4253_i);
 var $699=($697|0)==($z_5_ph_i|0);
 if($699){label=238;break;}else{var $rp_4252_i=$rp_5_i;var $a_4253_i=$a_5_i;var $k_6254_i=$697;var $carry3_0256_i=$693;label=237;break;}
 case 238: 
 var $700=($693|0)==0;
 if($700){var $a_3_i_ph=$a_5_i;var $e2_1_i_ph=$683;var $rp_3_i_ph=$rp_5_i;label=242;break;}else{label=239;break;}
 case 239: 
 var $702=($706|0)==($a_5_i|0);
 if($702){label=243;break;}else{label=240;break;}
 case 240: 
 var $704=(($x_i+($z_5_ph_i<<2))|0);
 HEAP32[(($704)>>2)]=$693;
 var $a_3_ph_i=$a_5_i;var $z_5_ph_i=$706;var $e2_1_ph_i=$683;var $rp_3_ph259_i=$rp_5_i;label=241;break;
 case 241: 
 var $rp_3_ph259_i;
 var $e2_1_ph_i;
 var $z_5_ph_i;
 var $a_3_ph_i;
 var $705=((($z_5_ph_i)+(1))|0);
 var $706=$705&127;
 var $707=((($z_5_ph_i)+(127))|0);
 var $708=$707&127;
 var $709=(($x_i+($708<<2))|0);
 var $a_3_i_ph=$a_3_ph_i;var $e2_1_i_ph=$e2_1_ph_i;var $rp_3_i_ph=$rp_3_ph259_i;label=242;break;
 case 242: 
 var $rp_3_i_ph;
 var $e2_1_i_ph;
 var $a_3_i_ph;
 var $710=($rp_3_i_ph|0)==18;
 var $711=($rp_3_i_ph|0)>27;
 var $_240_i=($711?9:1);
 var $a_3_i=$a_3_i_ph;var $e2_1_i=$e2_1_i_ph;label=228;break;
 case 243: 
 var $713=HEAP32[(($709)>>2)];
 var $714=$713|1;
 HEAP32[(($709)>>2)]=$714;
 var $a_3_i_ph=$a_5_i;var $e2_1_i_ph=$683;var $rp_3_i_ph=$rp_5_i;label=242;break;
 case 244: 
 var $716=((($706)-(1))|0);
 var $717=(($x_i+($716<<2))|0);
 HEAP32[(($717)>>2)]=0;
 var $z_7_i=$706;label=245;break;
 case 245: 
 var $z_7_i;
 var $719=(($x_i+($680<<2))|0);
 var $720=HEAP32[(($719)>>2)];
 var $721=($720>>>0);
 var $722=((($a_3_i)+(1))|0);
 var $723=$722&127;
 var $724=($723|0)==($z_7_i|0);
 if($724){label=269;break;}else{var $z_7_1_i=$z_7_i;label=270;break;}
 case 246: 
 var $726=($816|0)<0;
 var $_242_i=($726?0:$816);
 var $_1236_i=$_242_i;var $denormal_0_i=1;label=247;break;
 case 247: 
 var $denormal_0_i;
 var $_1236_i;
 var $728=($_1236_i|0)<53;
 if($728){label=248;break;}else{var $bias_0_i=0;var $frac_0_i=0;var $y_1_i103=$814;label=249;break;}
 case 248: 
 var $730=(((105)-($_1236_i))|0);
 var $731=_scalbn(1,$730);
 var $732=_copysign($731,$814);
 var $733=(((53)-($_1236_i))|0);
 var $734=_scalbn(1,$733);
 var $735=_fmod($814,$734);
 var $736=($814)-($735);
 var $737=($732)+($736);
 var $bias_0_i=$732;var $frac_0_i=$735;var $y_1_i103=$737;label=249;break;
 case 249: 
 var $y_1_i103;
 var $frac_0_i;
 var $bias_0_i;
 var $739=((($a_3_i)+(2))|0);
 var $740=$739&127;
 var $741=($740|0)==($z_7_1_i|0);
 if($741){var $frac_2_i=$frac_0_i;label=262;break;}else{label=250;break;}
 case 250: 
 var $743=(($x_i+($740<<2))|0);
 var $744=HEAP32[(($743)>>2)];
 var $745=($744>>>0)<500000000;
 if($745){label=251;break;}else{label=254;break;}
 case 251: 
 var $747=($744|0)==0;
 if($747){label=252;break;}else{label=253;break;}
 case 252: 
 var $749=((($a_3_i)+(3))|0);
 var $750=$749&127;
 var $751=($750|0)==($z_7_1_i|0);
 if($751){var $frac_1_i=$frac_0_i;label=259;break;}else{label=253;break;}
 case 253: 
 var $753=($813)*((0.25));
 var $754=($753)+($frac_0_i);
 var $frac_1_i=$754;label=259;break;
 case 254: 
 var $756=($744>>>0)>500000000;
 if($756){label=255;break;}else{label=256;break;}
 case 255: 
 var $758=($813)*((0.75));
 var $759=($758)+($frac_0_i);
 var $frac_1_i=$759;label=259;break;
 case 256: 
 var $761=((($a_3_i)+(3))|0);
 var $762=$761&127;
 var $763=($762|0)==($z_7_1_i|0);
 if($763){label=257;break;}else{label=258;break;}
 case 257: 
 var $765=($813)*((0.5));
 var $766=($765)+($frac_0_i);
 var $frac_1_i=$766;label=259;break;
 case 258: 
 var $768=($813)*((0.75));
 var $769=($768)+($frac_0_i);
 var $frac_1_i=$769;label=259;break;
 case 259: 
 var $frac_1_i;
 var $771=(((53)-($_1236_i))|0);
 var $772=($771|0)>1;
 if($772){label=260;break;}else{var $frac_2_i=$frac_1_i;label=262;break;}
 case 260: 
 var $774=_fmod($frac_1_i,1);
 var $775=$774!=0;
 if($775){var $frac_2_i=$frac_1_i;label=262;break;}else{label=261;break;}
 case 261: 
 var $777=($frac_1_i)+(1);
 var $frac_2_i=$777;label=262;break;
 case 262: 
 var $frac_2_i;
 var $779=($y_1_i103)+($frac_2_i);
 var $780=($779)-($bias_0_i);
 var $781=$815&2147483647;
 var $782=(((-2)-($sum_i))|0);
 var $783=($781|0)>($782|0);
 if($783){label=263;break;}else{var $y_3_i=$780;var $e2_3_i=$e2_1_i;label=268;break;}
 case 263: 
 var $785=Math_abs($780);
 var $786=$785<9007199254740992;
 if($786){var $y_2_i104=$780;var $denormal_2_i=$denormal_0_i;var $e2_2_i=$e2_1_i;label=265;break;}else{label=264;break;}
 case 264: 
 var $788=($denormal_0_i|0)!=0;
 var $789=($_1236_i|0)==($816|0);
 var $or_cond243_i=$788&$789;
 var $denormal_1_i=($or_cond243_i?0:$denormal_0_i);
 var $790=($780)*((0.5));
 var $791=((($e2_1_i)+(1))|0);
 var $y_2_i104=$790;var $denormal_2_i=$denormal_1_i;var $e2_2_i=$791;label=265;break;
 case 265: 
 var $e2_2_i;
 var $denormal_2_i;
 var $y_2_i104;
 var $793=((($e2_2_i)+(53))|0);
 var $794=($793|0)>($372|0);
 if($794){label=267;break;}else{label=266;break;}
 case 266: 
 var $796=($denormal_2_i|0)!=0;
 var $797=$frac_2_i!=0;
 var $or_cond244_i=$796&$797;
 if($or_cond244_i){label=267;break;}else{var $y_3_i=$y_2_i104;var $e2_3_i=$e2_2_i;label=268;break;}
 case 267: 
 var $799=___errno_location();
 HEAP32[(($799)>>2)]=34;
 var $y_3_i=$y_2_i104;var $e2_3_i=$e2_2_i;label=268;break;
 case 268: 
 var $e2_3_i;
 var $y_3_i;
 var $801=_scalbnl($y_3_i,$e2_3_i);
 var $_0=$801;label=271;break;
 case 269: 
 var $803=((($z_7_i)+(1))|0);
 var $804=$803&127;
 var $805=((($804)-(1))|0);
 var $806=(($x_i+($805<<2))|0);
 HEAP32[(($806)>>2)]=0;
 var $z_7_1_i=$804;label=270;break;
 case 270: 
 var $z_7_1_i;
 var $808=($721)*(1000000000);
 var $809=(($x_i+($723<<2))|0);
 var $810=HEAP32[(($809)>>2)];
 var $811=($810>>>0);
 var $812=($808)+($811);
 var $813=($sign_0|0);
 var $814=($813)*($812);
 var $815=((($e2_1_i)+(53))|0);
 var $816=((($815)-($emin_0_ph))|0);
 var $817=($816|0)<($bits_0_ph|0);
 if($817){label=246;break;}else{var $_1236_i=$bits_0_ph;var $denormal_0_i=0;label=247;break;}
 case 271: 
 var $_0;
 STACKTOP=sp;return $_0;
 case 272: 
 var $819=HEAP32[(($3)>>2)];
 var $820=HEAP32[(($4)>>2)];
 var $821=($819>>>0)<($820>>>0);
 if($821){label=274;break;}else{label=273;break;}
 case 273: 
 var $823=___shgetc($f);
 var $c_4_1=$823;label=275;break;
 case 274: 
 var $825=(($819+1)|0);
 HEAP32[(($3)>>2)]=$825;
 var $826=HEAP8[($819)];
 var $827=($826&255);
 var $c_4_1=$827;label=275;break;
 case 275: 
 var $c_4_1;
 var $829=$c_4_1|32;
 var $830=($829|0)==110;
 if($830){label=34;break;}else{label=53;break;}
  default: assert(0, "bad label: " + label);
 }

}


function _scanexp($f,$pok){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($f+4)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=(($f+100)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=($2>>>0)<($4>>>0);
 if($5){label=2;break;}else{label=3;break;}
 case 2: 
 var $7=(($2+1)|0);
 HEAP32[(($1)>>2)]=$7;
 var $8=HEAP8[($2)];
 var $9=($8&255);
 var $13=$9;label=4;break;
 case 3: 
 var $11=___shgetc($f);
 var $13=$11;label=4;break;
 case 4: 
 var $13;
 var $14=($13|0)==45;
 if(($13|0)==45|($13|0)==43){ label=5;break;}else{var $neg_0=0;var $c_0=$13;label=11;break;}
 case 5: 
 var $15=($14&1);
 var $16=HEAP32[(($1)>>2)];
 var $17=HEAP32[(($3)>>2)];
 var $18=($16>>>0)<($17>>>0);
 if($18){label=6;break;}else{label=7;break;}
 case 6: 
 var $20=(($16+1)|0);
 HEAP32[(($1)>>2)]=$20;
 var $21=HEAP8[($16)];
 var $22=($21&255);
 var $26=$22;label=8;break;
 case 7: 
 var $24=___shgetc($f);
 var $26=$24;label=8;break;
 case 8: 
 var $26;
 var $27=((($26)-(48))|0);
 var $28=($27>>>0)<10;
 var $29=($pok|0)==0;
 var $or_cond=$28|$29;
 if($or_cond){var $neg_0=$15;var $c_0=$26;label=11;break;}else{label=9;break;}
 case 9: 
 var $31=HEAP32[(($3)>>2)];
 var $32=($31|0)==0;
 if($32){var $neg_0=$15;var $c_0=$26;label=11;break;}else{label=10;break;}
 case 10: 
 var $34=HEAP32[(($1)>>2)];
 var $35=((($34)-(1))|0);
 HEAP32[(($1)>>2)]=$35;
 var $neg_0=$15;var $c_0=$26;label=11;break;
 case 11: 
 var $c_0;
 var $neg_0;
 var $37=((($c_0)-(48))|0);
 var $38=($37>>>0)>9;
 if($38){label=12;break;}else{var $c_141=$c_0;var $x_042=0;label=14;break;}
 case 12: 
 var $40=HEAP32[(($3)>>2)];
 var $41=($40|0)==0;
 if($41){var $_0$1=-2147483648;var $_0$0=0;label=32;break;}else{label=13;break;}
 case 13: 
 var $43=HEAP32[(($1)>>2)];
 var $44=((($43)-(1))|0);
 HEAP32[(($1)>>2)]=$44;
 var $_0$1=-2147483648;var $_0$0=0;label=32;break;
 case 14: 
 var $x_042;
 var $c_141;
 var $45=((($c_141)-(48))|0);
 var $46=((($45)+($x_042))|0);
 var $47=HEAP32[(($1)>>2)];
 var $48=HEAP32[(($3)>>2)];
 var $49=($47>>>0)<($48>>>0);
 if($49){label=15;break;}else{label=16;break;}
 case 15: 
 var $51=(($47+1)|0);
 HEAP32[(($1)>>2)]=$51;
 var $52=HEAP8[($47)];
 var $53=($52&255);
 var $c_1_be=$53;label=17;break;
 case 16: 
 var $55=___shgetc($f);
 var $c_1_be=$55;label=17;break;
 case 17: 
 var $c_1_be;
 var $56=((($c_1_be)-(48))|0);
 var $57=($56>>>0)<10;
 var $58=($46|0)<214748364;
 var $59=$57&$58;
 if($59){label=18;break;}else{label=19;break;}
 case 18: 
 var $phitmp49=((($46)*(10))&-1);
 var $c_141=$c_1_be;var $x_042=$phitmp49;label=14;break;
 case 19: 
 var $phitmp$0=$46;
 var $phitmp$1=((((($46|0)<0))|0)?-1:0);
 var $61=((($c_1_be)-(48))|0);
 var $62=($61>>>0)<10;
 if($62){var $c_236=$c_1_be;var $y_037$1=$phitmp$1;var $y_037$0=$phitmp$0;label=21;break;}else{var $c_2_lcssa=$c_1_be;var $y_0_lcssa$1=$phitmp$1;var $y_0_lcssa$0=$phitmp$0;label=20;break;}
 case 20: 
 var $y_0_lcssa$0;
 var $y_0_lcssa$1;
 var $c_2_lcssa;
 var $63=((($c_2_lcssa)-(48))|0);
 var $64=($63>>>0)<10;
 if($64){label=25;break;}else{label=29;break;}
 case 21: 
 var $y_037$0;
 var $y_037$1;
 var $c_236;
 var $$etemp$0$0=10;
 var $$etemp$0$1=0;
 var $65$0=___muldi3($y_037$0,$y_037$1,$$etemp$0$0,$$etemp$0$1);var $65$1=tempRet0;
 var $66$0=$c_236;
 var $66$1=((((($c_236|0)<0))|0)?-1:0);
 var $$etemp$1$0=-48;
 var $$etemp$1$1=-1;
 var $67$0=_i64Add($66$0,$66$1,$$etemp$1$0,$$etemp$1$1);var $67$1=tempRet0;
 var $68$0=_i64Add($67$0,$67$1,$65$0,$65$1);var $68$1=tempRet0;
 var $69=HEAP32[(($1)>>2)];
 var $70=HEAP32[(($3)>>2)];
 var $71=($69>>>0)<($70>>>0);
 if($71){label=22;break;}else{label=23;break;}
 case 22: 
 var $73=(($69+1)|0);
 HEAP32[(($1)>>2)]=$73;
 var $74=HEAP8[($69)];
 var $75=($74&255);
 var $c_2_be=$75;label=24;break;
 case 23: 
 var $77=___shgetc($f);
 var $c_2_be=$77;label=24;break;
 case 24: 
 var $c_2_be;
 var $78=((($c_2_be)-(48))|0);
 var $79=($78>>>0)<10;
 var $$etemp$2$0=2061584302;
 var $$etemp$2$1=21474836;
 var $80=(($68$1|0) < ($$etemp$2$1|0)) | (((($68$1|0) == ($$etemp$2$1|0) & ($68$0>>>0) <  ($$etemp$2$0>>>0))));
 var $or_cond35=$79&$80;
 if($or_cond35){var $c_236=$c_2_be;var $y_037$1=$68$1;var $y_037$0=$68$0;label=21;break;}else{var $c_2_lcssa=$c_2_be;var $y_0_lcssa$1=$68$1;var $y_0_lcssa$0=$68$0;label=20;break;}
 case 25: 
 var $81=HEAP32[(($1)>>2)];
 var $82=HEAP32[(($3)>>2)];
 var $83=($81>>>0)<($82>>>0);
 if($83){label=26;break;}else{label=27;break;}
 case 26: 
 var $85=(($81+1)|0);
 HEAP32[(($1)>>2)]=$85;
 var $86=HEAP8[($81)];
 var $87=($86&255);
 var $c_3_be=$87;label=28;break;
 case 27: 
 var $89=___shgetc($f);
 var $c_3_be=$89;label=28;break;
 case 28: 
 var $c_3_be;
 var $90=((($c_3_be)-(48))|0);
 var $91=($90>>>0)<10;
 if($91){label=25;break;}else{label=29;break;}
 case 29: 
 var $92=HEAP32[(($3)>>2)];
 var $93=($92|0)==0;
 if($93){label=31;break;}else{label=30;break;}
 case 30: 
 var $95=HEAP32[(($1)>>2)];
 var $96=((($95)-(1))|0);
 HEAP32[(($1)>>2)]=$96;
 label=31;break;
 case 31: 
 var $98=($neg_0|0)!=0;
 var $$etemp$3$0=0;
 var $$etemp$3$1=0;
 var $99$0=_i64Subtract($$etemp$3$0,$$etemp$3$1,$y_0_lcssa$0,$y_0_lcssa$1);var $99$1=tempRet0;
 var $100$0=($98?$99$0:$y_0_lcssa$0);
 var $100$1=($98?$99$1:$y_0_lcssa$1);
 var $_0$1=$100$1;var $_0$0=$100$0;label=32;break;
 case 32: 
 var $_0$0;
 var $_0$1;
 return (tempRet0=$_0$1,$_0$0);
  default: assert(0, "bad label: " + label);
 }

}


function ___shlim($f,$lim){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($f+104)|0);
 HEAP32[(($1)>>2)]=$lim;
 var $2=(($f+8)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($f+4)|0);
 var $5=HEAP32[(($4)>>2)];
 var $6=$3;
 var $7=$5;
 var $8=((($6)-($7))|0);
 var $9=(($f+108)|0);
 HEAP32[(($9)>>2)]=$8;
 var $10=($lim|0)!=0;
 var $11=($8|0)>($lim|0);
 var $or_cond=$10&$11;
 if($or_cond){label=2;break;}else{label=3;break;}
 case 2: 
 var $13=(($5+$lim)|0);
 var $14=(($f+100)|0);
 HEAP32[(($14)>>2)]=$13;
 label=4;break;
 case 3: 
 var $16=(($f+100)|0);
 HEAP32[(($16)>>2)]=$3;
 label=4;break;
 case 4: 
 return;
  default: assert(0, "bad label: " + label);
 }

}


function ___shgetc($f){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($f+104)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=($2|0)==0;
 if($3){label=3;break;}else{label=2;break;}
 case 2: 
 var $5=(($f+108)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=($6|0)<($2|0);
 if($7){label=3;break;}else{label=4;break;}
 case 3: 
 var $9=___uflow($f);
 var $10=($9|0)<0;
 if($10){label=4;break;}else{label=5;break;}
 case 4: 
 var $12=(($f+100)|0);
 HEAP32[(($12)>>2)]=0;
 var $_0=-1;label=13;break;
 case 5: 
 var $14=HEAP32[(($1)>>2)];
 var $15=($14|0)==0;
 var $_phi_trans_insert=(($f+8)|0);
 var $_pre=HEAP32[(($_phi_trans_insert)>>2)];
 if($15){label=8;break;}else{label=6;break;}
 case 6: 
 var $17=(($f+4)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=$_pre;
 var $20=$18;
 var $21=((($19)-($20))|0);
 var $22=(($f+108)|0);
 var $23=HEAP32[(($22)>>2)];
 var $24=((($14)-($23))|0);
 var $25=((($24)-(1))|0);
 var $26=($21|0)>($25|0);
 if($26){label=7;break;}else{label=8;break;}
 case 7: 
 var $28=(($18+$25)|0);
 var $29=(($f+100)|0);
 HEAP32[(($29)>>2)]=$28;
 label=9;break;
 case 8: 
 var $30=(($f+100)|0);
 HEAP32[(($30)>>2)]=$_pre;
 label=9;break;
 case 9: 
 var $32=($_pre|0)==0;
 var $_phi_trans_insert26=(($f+4)|0);
 var $_pre27=HEAP32[(($_phi_trans_insert26)>>2)];
 if($32){label=11;break;}else{label=10;break;}
 case 10: 
 var $34=$_pre;
 var $35=$_pre27;
 var $36=(($f+108)|0);
 var $37=HEAP32[(($36)>>2)];
 var $38=((($34)+(1))|0);
 var $39=((($38)-($35))|0);
 var $40=((($39)+($37))|0);
 HEAP32[(($36)>>2)]=$40;
 label=11;break;
 case 11: 
 var $41=((($_pre27)-(1))|0);
 var $42=HEAP8[($41)];
 var $43=($42&255);
 var $44=($43|0)==($9|0);
 if($44){var $_0=$9;label=13;break;}else{label=12;break;}
 case 12: 
 var $46=(($9)&255);
 HEAP8[($41)]=$46;
 var $_0=$9;label=13;break;
 case 13: 
 var $_0;
 return $_0;
  default: assert(0, "bad label: " + label);
 }

}


function _scalbn($x,$n){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($n|0)>1023;
 if($1){label=2;break;}else{label=4;break;}
 case 2: 
 var $3=($x)*((8.98846567431158e+307));
 var $4=((($n)-(1023))|0);
 var $5=($4|0)>1023;
 if($5){label=3;break;}else{var $y_0=$3;var $_0=$4;label=7;break;}
 case 3: 
 var $7=($3)*((8.98846567431158e+307));
 var $8=((($n)-(2046))|0);
 var $9=($8|0)>1023;
 var $_=($9?1023:$8);
 var $y_0=$7;var $_0=$_;label=7;break;
 case 4: 
 var $11=($n|0)<-1022;
 if($11){label=5;break;}else{var $y_0=$x;var $_0=$n;label=7;break;}
 case 5: 
 var $13=($x)*((2.2250738585072014e-308));
 var $14=((($n)+(1022))|0);
 var $15=($14|0)<-1022;
 if($15){label=6;break;}else{var $y_0=$13;var $_0=$14;label=7;break;}
 case 6: 
 var $17=($13)*((2.2250738585072014e-308));
 var $18=((($n)+(2044))|0);
 var $19=($18|0)<-1022;
 var $_17=($19?-1022:$18);
 var $y_0=$17;var $_0=$_17;label=7;break;
 case 7: 
 var $_0;
 var $y_0;
 var $21=((($_0)+(1023))|0);
 var $22$0=$21;
 var $22$1=0;
 var $23$0=(0<<20)|(0>>>12);
 var $23$1=($22$0<<20)|(0>>>12);
 var $24=(HEAP32[((tempDoublePtr)>>2)]=$23$0, HEAP32[(((tempDoublePtr)+(4))>>2)]=$23$1, HEAPF64[(tempDoublePtr)>>3]);
 var $25=($y_0)*($24);
 return $25;
  default: assert(0, "bad label: " + label);
 }

}


function _scalbnl($x,$n){
 var label=0;


 var $1=_scalbn($x,$n);
 return $1;
}


function ___toread($f){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=(($f+74)|0);
 var $2=HEAP8[($1)];
 var $3=((($2)-(1))&255);
 var $4=$3|$2;
 HEAP8[($1)]=$4;
 var $5=(($f+20)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=(($f+44)|0);
 var $8=HEAP32[(($7)>>2)];
 var $9=($6>>>0)>($8>>>0);
 if($9){label=2;break;}else{label=3;break;}
 case 2: 
 var $11=(($f+36)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=FUNCTION_TABLE[$12]($f,0,0);
 label=3;break;
 case 3: 
 var $15=(($f+16)|0);
 HEAP32[(($15)>>2)]=0;
 var $16=(($f+28)|0);
 HEAP32[(($16)>>2)]=0;
 HEAP32[(($5)>>2)]=0;
 var $17=(($f)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=$18&20;
 var $20=($19|0)==0;
 if($20){label=6;break;}else{label=4;break;}
 case 4: 
 var $22=$18&4;
 var $23=($22|0)==0;
 if($23){var $_0=-1;label=7;break;}else{label=5;break;}
 case 5: 
 var $25=$18|32;
 HEAP32[(($17)>>2)]=$25;
 var $_0=-1;label=7;break;
 case 6: 
 var $27=HEAP32[(($7)>>2)];
 var $28=(($f+8)|0);
 HEAP32[(($28)>>2)]=$27;
 var $29=(($f+4)|0);
 HEAP32[(($29)>>2)]=$27;
 var $_0=0;label=7;break;
 case 7: 
 var $_0;
 return $_0;
  default: assert(0, "bad label: " + label);
 }

}


function ___uflow($f){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $c=sp;
 var $1=(($f+8)|0);
 var $2=HEAP32[(($1)>>2)];
 var $3=($2|0)==0;
 if($3){label=2;break;}else{label=3;break;}
 case 2: 
 var $5=___toread($f);
 var $6=($5|0)==0;
 if($6){label=3;break;}else{var $_0=-1;label=5;break;}
 case 3: 
 var $8=(($f+32)|0);
 var $9=HEAP32[(($8)>>2)];
 var $10=FUNCTION_TABLE[$9]($f,$c,1);
 var $11=($10|0)==1;
 if($11){label=4;break;}else{var $_0=-1;label=5;break;}
 case 4: 
 var $13=HEAP8[($c)];
 var $14=($13&255);
 var $_0=$14;label=5;break;
 case 5: 
 var $_0;
 STACKTOP=sp;return $_0;
  default: assert(0, "bad label: " + label);
 }

}


function _strtod($s,$p){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $f_i=sp;
 var $1=$f_i;
 _memset($1, 0, 112)|0;
 var $2=(($f_i+4)|0);
 HEAP32[(($2)>>2)]=$s;
 var $3=(($f_i+8)|0);
 HEAP32[(($3)>>2)]=-1;
 var $4=(($f_i+44)|0);
 HEAP32[(($4)>>2)]=$s;
 var $5=(($f_i+76)|0);
 HEAP32[(($5)>>2)]=-1;
 ___shlim($f_i,0);
 var $6=___floatscan($f_i,1,1);
 var $7=(($f_i+108)|0);
 var $8=HEAP32[(($7)>>2)];
 var $9=HEAP32[(($2)>>2)];
 var $10=HEAP32[(($3)>>2)];
 var $11=$9;
 var $12=$10;
 var $13=((($11)-($12))|0);
 var $14=((($13)+($8))|0);
 var $15=($p|0)==0;
 if($15){label=5;break;}else{label=2;break;}
 case 2: 
 var $17=($14|0)==0;
 if($17){var $21=$s;label=4;break;}else{label=3;break;}
 case 3: 
 var $19=(($s+$14)|0);
 var $21=$19;label=4;break;
 case 4: 
 var $21;
 HEAP32[(($p)>>2)]=$21;
 label=5;break;
 case 5: 
 STACKTOP=sp;return $6;
  default: assert(0, "bad label: " + label);
 }

}


function _memcmp($vl,$vr,$n){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=($n|0)==0;
 if($1){var $14=0;label=5;break;}else{var $_011=$n;var $l_012=$vl;var $r_013=$vr;label=2;break;}
 case 2: 
 var $r_013;
 var $l_012;
 var $_011;
 var $2=HEAP8[($l_012)];
 var $3=HEAP8[($r_013)];
 var $4=(($2<<24)>>24)==(($3<<24)>>24);
 if($4){label=3;break;}else{label=4;break;}
 case 3: 
 var $6=((($_011)-(1))|0);
 var $7=(($l_012+1)|0);
 var $8=(($r_013+1)|0);
 var $9=($6|0)==0;
 if($9){var $14=0;label=5;break;}else{var $_011=$6;var $l_012=$7;var $r_013=$8;label=2;break;}
 case 4: 
 var $11=($2&255);
 var $12=($3&255);
 var $13=((($11)-($12))|0);
 var $14=$13;label=5;break;
 case 5: 
 var $14;
 return $14;
  default: assert(0, "bad label: " + label);
 }

}


function _strcmp($l,$r){
 var label=0;

 label = 1; 
 while(1)switch(label){
 case 1: 
 var $1=HEAP8[($l)];
 var $2=HEAP8[($r)];
 var $3=(($1<<24)>>24)!=(($2<<24)>>24);
 var $4=(($1<<24)>>24)==0;
 var $or_cond12=$3|$4;
 var $5=(($2<<24)>>24)==0;
 var $or_cond1013=$or_cond12|$5;
 if($or_cond1013){var $_lcssa=$1;var $_lcssa11=$2;label=3;break;}else{var $_0914=$l;var $_015=$r;label=2;break;}
 case 2: 
 var $_015;
 var $_0914;
 var $6=(($_0914+1)|0);
 var $7=(($_015+1)|0);
 var $8=HEAP8[($6)];
 var $9=HEAP8[($7)];
 var $10=(($8<<24)>>24)!=(($9<<24)>>24);
 var $11=(($8<<24)>>24)==0;
 var $or_cond=$10|$11;
 var $12=(($9<<24)>>24)==0;
 var $or_cond10=$or_cond|$12;
 if($or_cond10){var $_lcssa=$8;var $_lcssa11=$9;label=3;break;}else{var $_0914=$6;var $_015=$7;label=2;break;}
 case 3: 
 var $_lcssa11;
 var $_lcssa;
 var $13=($_lcssa&255);
 var $14=($_lcssa11&255);
 var $15=((($13)-($14))|0);
 return $15;
  default: assert(0, "bad label: " + label);
 }

}



// EMSCRIPTEN_END_FUNCS
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return tempRet0 = h,l|0;
  }
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return tempRet0 = h,l|0;
  }
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
  }
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
  }
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_ctlz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((ctlz_i8)+(x >>> 24))|0)];
    if ((ret|0) < 8) return ret|0;
    ret = HEAP8[(((ctlz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = HEAP8[(((ctlz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((ctlz_i8)+(x&0xff))|0)] + 24)|0;
  }
/* PRE_ASM */ var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);

function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((cttz_i8)+(x & 0xff))|0)];
    if ((ret|0) < 8) return ret|0;
    ret = HEAP8[(((cttz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = HEAP8[(((cttz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((cttz_i8)+(x >>> 24))|0)] + 24)|0;
  }
/* PRE_ASM */ var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================


// EMSCRIPTEN_END_FUNCS

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



